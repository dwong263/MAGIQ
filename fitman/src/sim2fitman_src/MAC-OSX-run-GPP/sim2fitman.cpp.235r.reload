
;; Function int main(int, char**) (main, funcdef_no=2, decl_uid=5591, cgraph_uid=2, symbol_order=2)

      Creating newreg=395
Removing SCRATCH in insn #5 (nop 2)
rescanning insn with uid = 5.
      Creating newreg=396
Removing SCRATCH in insn #1018 (nop 3)
rescanning insn with uid = 1018.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=3424, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=3408, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r395
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 8:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 31:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 41:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 45:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 47:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =<  (1) re*m {*pushdi2_rex64}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 49:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (1) rBwBz {*call_value} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 62:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-32)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 68:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 0 in insn 82:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 84:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 95:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 105:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 115:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 125:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 135:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 145:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 155:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 165:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 175:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 185:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 221:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 241:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 251:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 256:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 259:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 264:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 265:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 269:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 270:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) r {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 274:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 275:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 281:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 291:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 295:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 299:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 308:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 312:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 316:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 321:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 324:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 325:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 326:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) ?mr {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 338:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 339:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 346:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 347:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 348:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 349:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 350:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 351:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 352:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 362:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 369:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 370:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 371:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 382:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 383:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 384:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 385:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 397:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 398:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 399:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 400:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 414:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=397 from oldreg=250, assigning class GENERAL_REGS to r397
  414: {r397:SI=r397:SI 0>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 1094: r397:SI=r110:SI
    Inserting insn reload after:
 1095: r250:SI=r397:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 415
	 Choosing alt 0 in insn 415:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 428:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 434:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 435:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 436:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) r {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 446:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) r {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 453:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 454:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 455:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 459:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 460:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) r {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 464:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 465:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 466:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 476:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 485:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 490:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) qm {*zero_extendqisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 493:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 494:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 495:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 496:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 509:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 510:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 511:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 517:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 521:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 528:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 530:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 531:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 532:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 543:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 544:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 545:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 553:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 554:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 555:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 556:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 557:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 558:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 559:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 560:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 561:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 562:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 563:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 564:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 565:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 566:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 567:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 568:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 569:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 570:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 571:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 572:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 573:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 574:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 575:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 576:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 577:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 578:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 579:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
            4 Small class reload: reject+=3
          alt=0,overall=38,losers=4,rld_nregs=4
	 Choosing alt 0 in insn 580:  (0) =D  (1) =S  (2) =c  (3) 0  (4) 1  (5) 2 {*rep_movdi_rex64}
      Creating newreg=398 from oldreg=290, assigning class DIREG to r398
      Creating newreg=399 from oldreg=291, assigning class SIREG to r399
  580: {r292:DI=0;r398:DI=r292:DI<<0x3+r398:DI;r399:DI=r292:DI<<0x3+r399:DI;[r398:DI]=[r399:DI];use r292:DI;}
      REG_UNUSED r292:DI
      REG_UNUSED r291:DI
      REG_UNUSED r290:DI
    Inserting insn reload before:
 1096: r398:DI=r290:DI
 1097: r399:DI=r291:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 581:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 582:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 583:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 584:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 585:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 586:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 587:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 588:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 590:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 591:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 592:  (0) m  (1) re {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 593:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 600:  (0) m  (1) re {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 601:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 603:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 604:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 605:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 606:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 607:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 608:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 617:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 619:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 620:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 621:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 622:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 623:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 624:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 625:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 626:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 627:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 628:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 635:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 637:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 638:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 639:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 645:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 646:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 647:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 658:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 659:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 660:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 661:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 662:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) rm  (1) re {*cmpsi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 674:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 675:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 676:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 677:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 678:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 685:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 687:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 688:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 689:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 690:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 691:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 692:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 701:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 705:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 709:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 710:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 711:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 712:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 717:  (0) r {*cmpsi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 720:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 721:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 722:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 726:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 729:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 730:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 731:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 740:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 741:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 746:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 747:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 750:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) qm {*zero_extendqisi2}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 752:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 753:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 754:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 755:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 756:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 757:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 758:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) =X  (1) re {*pushsi2_rex64} (sp_off=-8)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 761:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 762:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 763:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 765:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 767:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-40)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 775:  (1) rBwBz {*call_value} (sp_off=-48)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 776:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-48)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 777:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 780:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 783:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 787:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 788:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 790
	 Choosing alt 0 in insn 790:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 791:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 792:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 799:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 801:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 803
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 804:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 805:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 806:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 808:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 811:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 812:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 813:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 815:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 816:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 817:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 819
	 Choosing alt 0 in insn 819:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 820:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 822:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 824:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 827:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 828:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 829:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 835:  (0) rm  (1) 0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 841:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 842:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 845:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 846:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 849:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 850:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 851:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 852:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 853:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 860:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 862:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 863:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 866:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 867:  (1) rBwBz {*call_value}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 870:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 871:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 874:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 875:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 878:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 881:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 885:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 886:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 887:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 888:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 889:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 890:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 891:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 892:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 893:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 900:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 901:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 902:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 903:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 906:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 907:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 909:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 910:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 914:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 917:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 921:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 922:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 923:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 924:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 925:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 926:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 927:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 928:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 929:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 930:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 931:  (0) r  (1) r  (2) le {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 932:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 935:  (0) =r  (1) g {*movsi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 940:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 941:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 942:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (0) q {*cmpqi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 946:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 947:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 949:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 950:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 951:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 954:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 955:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 956:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 958:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 961:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 963:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 964:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 968:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 969:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 971:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 974:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 980:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 983:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 986:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 989:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 991:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 992:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 993:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 996:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 998:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 999:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1001:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1002:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1005:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1007:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r396
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1020:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129

********** Pseudo live ranges #1: **********

  BB 128
   Insn 1020: point = 0
  BB 129
   Insn 1023: point = 0
  BB 127
   Insn 1019: point = 0
   Insn 1018: point = 0
   Insn 1017: point = 1
   Insn 1013: point = 2
   Insn 1010: point = 4
  BB 126
   Insn 1007: point = 5
   Insn 1006: point = 5
   Insn 1005: point = 6
   Insn 1004: point = 7
   Insn 1003: point = 7
   Insn 1002: point = 8
   Insn 1001: point = 9
   Insn 1000: point = 9
   Insn 999: point = 10
   Insn 998: point = 11
   Insn 997: point = 11
   Insn 996: point = 12
  BB 125
   Insn 994: point = 13
   Insn 993: point = 13
   Insn 992: point = 14
   Insn 991: point = 15
   Insn 990: point = 15
   Insn 989: point = 16
   Insn 988: point = 17
   Insn 987: point = 17
   Insn 986: point = 18
   Insn 985: point = 19
   Insn 984: point = 19
   Insn 983: point = 20
   Insn 982: point = 21
   Insn 981: point = 21
   Insn 980: point = 22
  BB 121
   Insn 959: point = 23
   Insn 958: point = 23
  BB 124
   Insn 1091: point = 23
   Insn 974: point = 23
  BB 123
   Insn 971: point = 23
   Insn 970: point = 23
   Insn 969: point = 24
   Insn 968: point = 26
   Insn 967: point = 28
  BB 122
   Insn 965: point = 29
   Insn 964: point = 29
   Insn 963: point = 30
   Insn 962: point = 32
   Insn 961: point = 34
  BB 120
   Insn 956: point = 35
   Insn 955: point = 35
   Insn 954: point = 35
  BB 119
   Insn 951: point = 35
   Insn 950: point = 35
   Insn 949: point = 35
   Insn 948: point = 35
   Insn 947: point = 36
   Insn 946: point = 38
  BB 118
   Insn 944: point = 39
   Insn 943: point = 39
   Insn 942: point = 40
   Insn 941: point = 41
   Insn 940: point = 41
   Insn 939: point = 41
   Insn 938: point = 42
   Insn 937: point = 43
   Insn 936: point = 44
   Insn 935: point = 45
   Insn 934: point = 45
   Insn 933: point = 46
   Insn 932: point = 47
   Insn 931: point = 49
   Insn 930: point = 50
   Insn 929: point = 50
   Insn 928: point = 52
   Insn 927: point = 53
   Insn 926: point = 55
   Insn 925: point = 56
   Insn 924: point = 58
   Insn 923: point = 59
   Insn 922: point = 61
   Insn 921: point = 62
  BB 117
   Insn 918: point = 63
   Insn 917: point = 63
  BB 116
   Insn 915: point = 63
   Insn 914: point = 63
  BB 115
   Insn 911: point = 63
   Insn 910: point = 63
   Insn 909: point = 63
   Insn 908: point = 63
   Insn 907: point = 64
   Insn 906: point = 66
  BB 114
   Insn 904: point = 67
   Insn 903: point = 67
   Insn 902: point = 68
   Insn 901: point = 69
   Insn 900: point = 69
   Insn 899: point = 69
   Insn 898: point = 70
   Insn 897: point = 71
   Insn 896: point = 72
   Insn 895: point = 73
   Insn 894: point = 73
   Insn 893: point = 74
   Insn 892: point = 75
   Insn 891: point = 76
   Insn 890: point = 76
   Insn 889: point = 78
   Insn 888: point = 79
   Insn 887: point = 80
   Insn 886: point = 81
   Insn 885: point = 82
  BB 113
   Insn 882: point = 83
   Insn 881: point = 83
  BB 112
   Insn 879: point = 83
   Insn 878: point = 83
  BB 111
   Insn 875: point = 83
   Insn 874: point = 83
  BB 110
   Insn 872: point = 83
   Insn 871: point = 83
   Insn 870: point = 84
  BB 109
   Insn 867: point = 85
   Insn 866: point = 85
  BB 108
   Insn 864: point = 85
   Insn 863: point = 85
   Insn 862: point = 86
   Insn 861: point = 87
   Insn 860: point = 87
   Insn 859: point = 87
   Insn 858: point = 87
   Insn 857: point = 88
   Insn 856: point = 89
   Insn 855: point = 90
   Insn 854: point = 91
   Insn 853: point = 92
   Insn 852: point = 93
   Insn 851: point = 94
   Insn 850: point = 95
   Insn 849: point = 96
  BB 107
   Insn 846: point = 97
   Insn 845: point = 97
  BB 106
   Insn 843: point = 97
   Insn 842: point = 97
   Insn 841: point = 98
  BB 101
   Insn 781: point = 99
   Insn 780: point = 99
   Insn 779: point = 100
  BB 105
   Insn 1089: point = 101
   Insn 835: point = 101
  BB 103
   Insn 795: point = 101
   Insn 794: point = 101
   Insn 793: point = 102
   Insn 792: point = 104
   Insn 791: point = 106
   Insn 790: point = 108
   Insn 789: point = 110
   Insn 788: point = 112
   Insn 787: point = 114
   Insn 786: point = 115
   Insn 785: point = 117
  BB 104
   Insn 1087: point = 118
   Insn 829: point = 118
   Insn 828: point = 118
   Insn 827: point = 119
   Insn 826: point = 121
   Insn 825: point = 123
   Insn 824: point = 125
   Insn 823: point = 127
   Insn 822: point = 128
   Insn 821: point = 130
   Insn 820: point = 132
   Insn 819: point = 133
   Insn 818: point = 135
   Insn 817: point = 137
   Insn 816: point = 139
   Insn 815: point = 140
   Insn 814: point = 142
   Insn 813: point = 144
   Insn 812: point = 145
   Insn 811: point = 146
   Insn 810: point = 148
   Insn 809: point = 150
   Insn 808: point = 152
   Insn 807: point = 154
   Insn 806: point = 155
   Insn 805: point = 157
   Insn 804: point = 159
   Insn 803: point = 160
   Insn 802: point = 162
   Insn 801: point = 164
   Insn 800: point = 166
   Insn 799: point = 167
   Insn 798: point = 169
   Insn 797: point = 171
  BB 102
   Insn 783: point = 172
  BB 100
   Insn 777: point = 172
   Insn 776: point = 172
   Insn 775: point = 172
   Insn 774: point = 172
   Insn 773: point = 173
   Insn 772: point = 174
   Insn 771: point = 175
   Insn 770: point = 176
   Insn 769: point = 177
   Insn 768: point = 178
   Insn 767: point = 179
   Insn 766: point = 180
   Insn 765: point = 181
   Insn 764: point = 182
   Insn 763: point = 183
   Insn 762: point = 184
   Insn 761: point = 185
   Insn 760: point = 186
   Insn 759: point = 187
   Insn 758: point = 188
   Insn 757: point = 189
   Insn 756: point = 190
   Insn 755: point = 191
   Insn 754: point = 192
   Insn 753: point = 193
   Insn 752: point = 194
   Insn 751: point = 195
   Insn 750: point = 197
  BB 98
   Insn 1085: point = 198
   Insn 741: point = 198
   Insn 740: point = 199
   Insn 739: point = 201
  BB 96
   Insn 1083: point = 202
   Insn 731: point = 202
   Insn 730: point = 203
   Insn 729: point = 205
  BB 99
   Insn 747: point = 206
   Insn 746: point = 207
  BB 97
   Insn 737: point = 208
   Insn 736: point = 208
  BB 95
   Insn 727: point = 208
   Insn 726: point = 208
   Insn 725: point = 209
   Insn 724: point = 210
   Insn 723: point = 210
   Insn 722: point = 211
   Insn 721: point = 211
   Insn 720: point = 213
  BB 94
   Insn 718: point = 214
   Insn 717: point = 214
   Insn 716: point = 215
   Insn 715: point = 216
   Insn 714: point = 216
   Insn 713: point = 217
   Insn 712: point = 218
   Insn 711: point = 219
   Insn 710: point = 221
   Insn 709: point = 222
  BB 93
   Insn 706: point = 222
   Insn 705: point = 222
  BB 92
   Insn 703: point = 222
   Insn 702: point = 222
   Insn 701: point = 223
  BB 83
   Insn 1077: point = 224
   Insn 612: point = 224
   Insn 611: point = 224
   Insn 610: point = 225
   Insn 609: point = 226
   Insn 608: point = 227
   Insn 607: point = 229
   Insn 606: point = 230
   Insn 605: point = 232
   Insn 604: point = 233
   Insn 603: point = 235
   Insn 602: point = 236
   Insn 601: point = 236
   Insn 600: point = 236
  BB 82
   Insn 598: point = 236
   Insn 597: point = 236
  BB 81
   Insn 595: point = 236
   Insn 594: point = 236
   Insn 593: point = 237
   Insn 592: point = 238
   Insn 591: point = 239
   Insn 590: point = 240
   Insn 589: point = 241
   Insn 588: point = 242
   Insn 587: point = 243
   Insn 586: point = 244
   Insn 585: point = 245
   Insn 584: point = 246
   Insn 583: point = 247
   Insn 582: point = 248
   Insn 581: point = 249
   Insn 580: point = 250
   Insn 1097: point = 251
	Hard reg 1 is preferable by r399 with profit 1
   Insn 1096: point = 253
	Hard reg 0 is preferable by r398 with profit 1
   Insn 579: point = 255
   Insn 578: point = 256
   Insn 577: point = 257
   Insn 576: point = 258
   Insn 575: point = 259
   Insn 574: point = 260
   Insn 573: point = 261
   Insn 572: point = 262
   Insn 571: point = 263
   Insn 570: point = 264
   Insn 569: point = 265
   Insn 568: point = 266
   Insn 567: point = 267
   Insn 566: point = 268
   Insn 565: point = 269
   Insn 564: point = 270
   Insn 563: point = 271
   Insn 562: point = 272
   Insn 561: point = 273
   Insn 560: point = 274
   Insn 559: point = 275
   Insn 558: point = 276
   Insn 557: point = 277
   Insn 556: point = 278
   Insn 555: point = 279
   Insn 554: point = 280
   Insn 553: point = 281
  BB 91
   Insn 696: point = 282
   Insn 695: point = 282
   Insn 694: point = 283
   Insn 693: point = 284
   Insn 692: point = 285
   Insn 691: point = 287
   Insn 690: point = 288
   Insn 689: point = 290
   Insn 688: point = 291
   Insn 687: point = 293
   Insn 686: point = 294
   Insn 685: point = 294
  BB 88
   Insn 1081: point = 294
   Insn 666: point = 294
   Insn 665: point = 294
   Insn 664: point = 295
   Insn 663: point = 296
   Insn 662: point = 297
   Insn 661: point = 298
   Insn 660: point = 300
   Insn 659: point = 301
   Insn 658: point = 303
  BB 90
   Insn 682: point = 304
   Insn 681: point = 304
   Insn 680: point = 305
   Insn 679: point = 306
   Insn 678: point = 307
   Insn 677: point = 308
   Insn 676: point = 310
   Insn 675: point = 311
   Insn 674: point = 313
  BB 89
   Insn 672: point = 314
   Insn 671: point = 314
  BB 87
   Insn 656: point = 314
   Insn 655: point = 314
  BB 86
   Insn 1079: point = 314
   Insn 650: point = 314
   Insn 649: point = 314
   Insn 648: point = 315
   Insn 647: point = 316
   Insn 646: point = 317
   Insn 645: point = 319
  BB 85
   Insn 643: point = 320
   Insn 642: point = 320
  BB 84
   Insn 640: point = 320
   Insn 639: point = 320
   Insn 638: point = 320
   Insn 637: point = 320
   Insn 636: point = 321
   Insn 635: point = 322
   Insn 634: point = 322
   Insn 633: point = 323
   Insn 632: point = 324
   Insn 631: point = 325
   Insn 630: point = 326
   Insn 629: point = 327
   Insn 628: point = 328
   Insn 627: point = 330
   Insn 626: point = 331
   Insn 625: point = 333
   Insn 624: point = 334
   Insn 623: point = 335
   Insn 622: point = 337
   Insn 621: point = 338
   Insn 620: point = 340
   Insn 619: point = 341
   Insn 618: point = 342
   Insn 617: point = 342
  BB 80
   Insn 551: point = 342
   Insn 550: point = 342
   Insn 549: point = 343
   Insn 548: point = 344
   Insn 547: point = 344
   Insn 546: point = 345
   Insn 545: point = 346
   Insn 544: point = 347
   Insn 543: point = 349
  BB 79
   Insn 541: point = 350
   Insn 540: point = 350
   Insn 539: point = 351
  BB 78
   Insn 536: point = 352
   Insn 535: point = 352
   Insn 534: point = 353
   Insn 533: point = 354
   Insn 532: point = 355
   Insn 531: point = 356
   Insn 530: point = 357
   Insn 529: point = 358
   Insn 528: point = 358
  BB 77
   Insn 525: point = 358
   Insn 524: point = 358
  BB 76
   Insn 522: point = 358
   Insn 521: point = 358
  BB 75
   Insn 519: point = 358
   Insn 518: point = 358
   Insn 517: point = 359
  BB 72
   Insn 1075: point = 360
   Insn 485: point = 360
  BB 74
   Insn 514: point = 360
   Insn 513: point = 360
   Insn 512: point = 361
   Insn 511: point = 362
   Insn 510: point = 363
   Insn 509: point = 365
  BB 73
   Insn 507: point = 366
   Insn 506: point = 366
   Insn 505: point = 367
   Insn 504: point = 369
   Insn 503: point = 371
   Insn 502: point = 372
   Insn 501: point = 372
   Insn 500: point = 373
   Insn 499: point = 374
   Insn 498: point = 375
   Insn 497: point = 376
   Insn 496: point = 377
   Insn 495: point = 378
   Insn 494: point = 379
   Insn 493: point = 381
   Insn 492: point = 382
   Insn 491: point = 383
   Insn 490: point = 385
  BB 71
   Insn 483: point = 386
   Insn 482: point = 386
   Insn 481: point = 387
  BB 70
   Insn 1073: point = 388
   Insn 476: point = 388
  BB 69
   Insn 474: point = 388
   Insn 473: point = 388
   Insn 472: point = 389
  BB 68
   Insn 469: point = 390
   Insn 468: point = 390
   Insn 467: point = 391
   Insn 466: point = 392
   Insn 465: point = 393
   Insn 464: point = 395
  BB 67
   Insn 462: point = 396
   Insn 461: point = 396
   Insn 460: point = 397
   Insn 459: point = 398
   Insn 458: point = 399
   Insn 457: point = 400
   Insn 456: point = 400
   Insn 455: point = 401
   Insn 454: point = 401
   Insn 453: point = 403
  BB 66
   Insn 451: point = 404
   Insn 450: point = 404
   Insn 449: point = 405
   Insn 448: point = 406
   Insn 447: point = 406
   Insn 446: point = 407
   Insn 445: point = 407
   Insn 444: point = 409
  BB 65
   Insn 442: point = 410
   Insn 441: point = 410
   Insn 440: point = 411
   Insn 439: point = 412
   Insn 438: point = 412
   Insn 437: point = 413
   Insn 436: point = 414
   Insn 435: point = 415
   Insn 434: point = 417
  BB 60
   Insn 1071: point = 418
   Insn 404: point = 418
   Insn 403: point = 418
   Insn 402: point = 419
   Insn 401: point = 420
   Insn 400: point = 421
   Insn 399: point = 422
   Insn 398: point = 424
   Insn 397: point = 425
  BB 58
   Insn 1069: point = 426
   Insn 389: point = 426
   Insn 388: point = 426
   Insn 387: point = 427
   Insn 386: point = 428
   Insn 385: point = 429
   Insn 384: point = 430
   Insn 383: point = 432
   Insn 382: point = 433
  BB 59
   Insn 395: point = 434
   Insn 394: point = 434
  BB 57
   Insn 380: point = 434
   Insn 379: point = 434
  BB 64
   Insn 431: point = 434
   Insn 430: point = 434
   Insn 429: point = 435
   Insn 428: point = 436
   Insn 427: point = 437
  BB 63
   Insn 425: point = 438
   Insn 424: point = 438
   Insn 423: point = 439
  BB 62
   Insn 420: point = 440
   Insn 419: point = 440
   Insn 418: point = 441
   Insn 417: point = 442
   Insn 416: point = 444
   Insn 415: point = 446
   Insn 1095: point = 448
	Hard reg 1 is preferable by r397 with profit 1
   Insn 414: point = 450
   Insn 1094: point = 450
   Insn 413: point = 451
  BB 61
   Insn 411: point = 452
   Insn 410: point = 452
   Insn 409: point = 453
  BB 56
   Insn 1067: point = 454
   Insn 374: point = 454
   Insn 373: point = 454
   Insn 372: point = 455
   Insn 371: point = 456
   Insn 370: point = 457
   Insn 369: point = 459
  BB 55
   Insn 367: point = 460
   Insn 366: point = 460
  BB 54
   Insn 364: point = 460
   Insn 363: point = 460
   Insn 362: point = 460
   Insn 361: point = 460
   Insn 360: point = 461
   Insn 359: point = 462
   Insn 358: point = 462
   Insn 357: point = 463
   Insn 356: point = 464
   Insn 355: point = 465
   Insn 354: point = 466
   Insn 353: point = 467
   Insn 352: point = 468
   Insn 351: point = 469
   Insn 350: point = 471
   Insn 349: point = 472
   Insn 348: point = 473
   Insn 347: point = 474
   Insn 346: point = 475
  BB 51
   Insn 1065: point = 476
   Insn 316: point = 476
  BB 50
   Insn 313: point = 476
   Insn 312: point = 476
  BB 49
   Insn 310: point = 476
   Insn 309: point = 476
   Insn 308: point = 477
  BB 47
   Insn 1063: point = 478
   Insn 299: point = 478
  BB 46
   Insn 296: point = 478
   Insn 295: point = 478
  BB 45
   Insn 293: point = 478
   Insn 292: point = 478
   Insn 291: point = 479
  BB 53
   Insn 343: point = 480
   Insn 342: point = 480
   Insn 341: point = 481
   Insn 340: point = 482
   Insn 339: point = 483
   Insn 338: point = 485
  BB 52
   Insn 336: point = 486
   Insn 335: point = 486
   Insn 334: point = 486
   Insn 333: point = 487
   Insn 332: point = 488
   Insn 331: point = 488
   Insn 330: point = 489
   Insn 329: point = 490
   Insn 328: point = 491
   Insn 327: point = 492
   Insn 326: point = 493
   Insn 325: point = 494
   Insn 324: point = 495
   Insn 323: point = 496
   Insn 322: point = 497
   Insn 321: point = 499
  BB 48
   Insn 306: point = 500
   Insn 305: point = 500
   Insn 304: point = 501
  BB 44
   Insn 289: point = 502
   Insn 288: point = 502
   Insn 287: point = 503
   Insn 286: point = 504
   Insn 285: point = 504
   Insn 284: point = 505
   Insn 283: point = 506
   Insn 282: point = 507
   Insn 281: point = 509
  BB 43
   Insn 278: point = 510
   Insn 277: point = 510
   Insn 276: point = 511
   Insn 275: point = 512
   Insn 274: point = 513
  BB 42
   Insn 272: point = 514
   Insn 271: point = 514
   Insn 270: point = 515
   Insn 269: point = 516
   Insn 268: point = 517
   Insn 267: point = 518
   Insn 266: point = 518
   Insn 265: point = 519
   Insn 264: point = 519
   Insn 263: point = 520
   Insn 262: point = 520
   Insn 261: point = 521
   Insn 260: point = 522
   Insn 259: point = 523
   Insn 258: point = 524
   Insn 257: point = 525
   Insn 256: point = 527
  BB 39
   Insn 1061: point = 528
   Insn 243: point = 528
   Insn 242: point = 528
   Insn 241: point = 529
  BB 37
   Insn 1059: point = 530
   Insn 233: point = 530
   Insn 232: point = 530
   Insn 231: point = 531
  BB 35
   Insn 1057: point = 532
   Insn 223: point = 532
   Insn 222: point = 532
   Insn 221: point = 533
  BB 33
   Insn 1055: point = 534
   Insn 213: point = 534
  BB 31
   Insn 1053: point = 534
   Insn 205: point = 534
  BB 29
   Insn 1051: point = 534
   Insn 197: point = 534
   Insn 196: point = 534
   Insn 195: point = 535
  BB 27
   Insn 1049: point = 536
   Insn 187: point = 536
   Insn 186: point = 536
   Insn 185: point = 537
  BB 25
   Insn 1047: point = 538
   Insn 177: point = 538
   Insn 176: point = 538
   Insn 175: point = 539
  BB 23
   Insn 1045: point = 540
   Insn 167: point = 540
   Insn 166: point = 540
   Insn 165: point = 541
  BB 21
   Insn 1043: point = 542
   Insn 157: point = 542
   Insn 156: point = 542
   Insn 155: point = 543
  BB 19
   Insn 1041: point = 544
   Insn 147: point = 544
   Insn 146: point = 544
   Insn 145: point = 545
  BB 17
   Insn 1039: point = 546
   Insn 137: point = 546
   Insn 136: point = 546
   Insn 135: point = 547
  BB 15
   Insn 1037: point = 548
   Insn 127: point = 548
   Insn 126: point = 548
   Insn 125: point = 549
  BB 13
   Insn 1035: point = 550
   Insn 117: point = 550
   Insn 116: point = 550
   Insn 115: point = 551
  BB 11
   Insn 1033: point = 552
   Insn 107: point = 552
   Insn 106: point = 552
   Insn 105: point = 553
  BB 9
   Insn 1031: point = 554
   Insn 97: point = 554
   Insn 96: point = 554
   Insn 95: point = 555
  BB 7
   Insn 1029: point = 556
   Insn 87: point = 556
   Insn 86: point = 556
   Insn 85: point = 557
   Insn 84: point = 558
   Insn 83: point = 559
   Insn 82: point = 561
   Insn 81: point = 563
   Insn 80: point = 564
   Insn 79: point = 566
   Insn 78: point = 568
  BB 5
   Insn 1027: point = 569
   Insn 70: point = 569
   Insn 69: point = 569
   Insn 68: point = 570
  BB 41
   Insn 253: point = 571
   Insn 252: point = 571
   Insn 251: point = 572
  BB 40
   Insn 249: point = 573
   Insn 248: point = 573
  BB 38
   Insn 239: point = 573
   Insn 238: point = 573
  BB 36
   Insn 229: point = 573
   Insn 228: point = 573
  BB 34
   Insn 219: point = 573
   Insn 218: point = 573
  BB 32
   Insn 211: point = 573
   Insn 210: point = 573
  BB 30
   Insn 203: point = 573
   Insn 202: point = 573
  BB 28
   Insn 193: point = 573
   Insn 192: point = 573
  BB 26
   Insn 183: point = 573
   Insn 182: point = 573
  BB 24
   Insn 173: point = 573
   Insn 172: point = 573
  BB 22
   Insn 163: point = 573
   Insn 162: point = 573
  BB 20
   Insn 153: point = 573
   Insn 152: point = 573
  BB 18
   Insn 143: point = 573
   Insn 142: point = 573
  BB 16
   Insn 133: point = 573
   Insn 132: point = 573
  BB 14
   Insn 123: point = 573
   Insn 122: point = 573
  BB 12
   Insn 113: point = 573
   Insn 112: point = 573
  BB 10
   Insn 103: point = 573
   Insn 102: point = 573
  BB 8
   Insn 93: point = 573
   Insn 92: point = 573
  BB 6
   Insn 76: point = 573
   Insn 75: point = 573
  BB 4
   Insn 66: point = 573
   Insn 65: point = 573
   Insn 64: point = 573
   Insn 63: point = 574
   Insn 62: point = 575
   Insn 61: point = 575
   Insn 60: point = 575
   Insn 59: point = 576
   Insn 58: point = 577
   Insn 57: point = 578
   Insn 56: point = 579
   Insn 55: point = 580
   Insn 54: point = 581
   Insn 53: point = 582
   Insn 52: point = 583
   Insn 51: point = 584
   Insn 50: point = 585
   Insn 49: point = 586
   Insn 48: point = 587
   Insn 47: point = 588
   Insn 46: point = 589
   Insn 45: point = 590
   Insn 44: point = 591
   Insn 43: point = 592
   Insn 42: point = 593
   Insn 41: point = 594
   Insn 40: point = 595
   Insn 39: point = 595
   Insn 38: point = 596
   Insn 37: point = 597
   Insn 36: point = 598
   Insn 35: point = 599
   Insn 34: point = 600
   Insn 33: point = 601
   Insn 32: point = 602
   Insn 31: point = 603
   Insn 30: point = 604
   Insn 29: point = 605
   Insn 28: point = 606
  BB 3
   Insn 25: point = 607
   Insn 24: point = 607
   Insn 23: point = 608
  BB 2
   Insn 21: point = 609
   Insn 20: point = 609
   Insn 19: point = 609
   Insn 18: point = 609
   Insn 17: point = 609
   Insn 16: point = 609
   Insn 15: point = 609
   Insn 14: point = 609
   Insn 13: point = 609
   Insn 12: point = 609
   Insn 11: point = 609
   Insn 10: point = 609
   Insn 9: point = 609
   Insn 8: point = 609
   Insn 5: point = 609
   Insn 3: point = 611
   Insn 2: point = 611
 r87: [573..574]
 r88: [567..568]
 r89: [565..566]
 r90: [562..564]
 r91: [560..561]
 r92: [557..559]
 r93: [526..527]
 r94: [521..525]
 r95: [516..517]
 r96: [514..515]
 r97: [508..509]
 r98: [505..507]
 r99: [502..503]
 r100: [478..479]
 r101: [500..501]
 r102: [476..477]
 r103: [498..499]
 r104: [492..497]
 r105: [488..496]
 r106: [486..487]
 r107: [464..475]
 r108: [460..461]
 r109: [452..453]
 r110: [447..451]
 r111: [440..442]
 r112: [440..441]
 r113: [438..439]
 r114: [435..437]
 r115: [410..411]
 r116: [404..405]
 r117: [398..399]
 r118: [396..397]
 r119: [388..389]
 r120: [386..387]
 r121: [384..385]
 r122: [376..383]
 r123: [372..382]
 r124: [370..371]
 r125: [366..367]
 r126: [358..359]
 r127: [350..351]
 r128: [342..343]
 r129: [240..241]
 r130: [238..239]
 r131: [236..237]
 r132: [324..341]
 r133: [320..321]
 r134: [222..223]
 r135: [214..215]
 r136: [208..209]
 r137: [204..205]
 r138: [202..203]
 r139: [200..201]
 r140: [198..199]
 r141: [206..207]
 r142: [196..197]
 r143: [186..195]
 r144: [99..100]
 r145: [101..115]
 r146: [103..104]
 r147: [101..102]
 r148: [161..167]
 r149: [163..164]
 r150: [161..162]
 r151: [145..160]
 r152: [149..155]
 r153: [151..152]
 r154: [149..150]
 r155: [147..148]
 r156: [145..146]
 r157: [134..140]
 r158: [136..137]
 r159: [134..135]
 r160: [118..133]
 r161: [122..128]
 r162: [124..125]
 r163: [122..123]
 r164: [120..121]
 r165: [118..119]
 r166: [97..98]
 r167: [85..86]
 r168: [83..84]
 r169: [70..82]
 r170: [67..68]
 r171: [42..62]
 r172: [39..40]
 r173: [29..30]
 r174: [23..24]
 r175: [21..22]
 r176: [19..20]
 r177: [17..18]
 r178: [15..16]
 r179: [13..14]
 r180: [11..12]
 r181: [9..10]
 r182: [7..8]
 r183: [5..6]
 r184: [3..4]
 r185: [1..2]
 r186: [607..608]
 r187: [600..606]
 r188: [599..605]
 r189: [598..604]
 r190: [597..603]
 r191: [596..602]
 r192: [595..601]
 r193: [580..594]
 r194: [579..593]
 r195: [578..592]
 r196: [577..591]
 r197: [576..590]
 r198: [575..589]
 r199: [587..588]
 r200: [585..586]
 r201: [583..584]
 r202: [581..582]
 r203: [569..570]
 r204: [562..563]
 r205: [556..558]
 r206: [554..555]
 r207: [552..553]
 r208: [550..551]
 r209: [548..549]
 r210: [546..547]
 r211: [544..545]
 r212: [542..543]
 r213: [540..541]
 r214: [538..539]
 r215: [536..537]
 r216: [534..535]
 r217: [532..533]
 r218: [530..531]
 r219: [528..529]
 r220: [571..572]
 r221: [522..524]
 r222: [520..523]
 r223: [518..519]
 r224: [511..513]
 r225: [510..512]
 r226: [504..506]
 r227: [491..495]
 r228: [490..494]
 r229: [489..493]
 r230: [484..485]
 r231: [481..483]
 r232: [480..482]
 r233: [467..474]
 r234: [466..473]
 r235: [465..472]
 r236: [470..471]
 r237: [463..469]
 r238: [462..468]
 r239: [458..459]
 r240: [455..457]
 r241: [454..456]
 r242: [428..433]
 r243: [431..432]
 r244: [427..430]
 r245: [426..429]
 r246: [420..425]
 r247: [423..424]
 r248: [419..422]
 r249: [418..421]
 r250: [447..448]
 r251: [445..446]
 r252: [443..444]
 r253: [434..436]
 r254: [416..417]
 r255: [413..415]
 r256: [412..414]
 r257: [408..409]
 r258: [406..407]
 r259: [402..403]
 r260: [400..401]
 r261: [394..395]
 r262: [391..393]
 r263: [390..392]
 r264: [380..381]
 r265: [375..379]
 r266: [374..378]
 r267: [373..377]
 r268: [368..369]
 r269: [364..365]
 r270: [361..363]
 r271: [360..362]
 r272: [354..357]
 r273: [353..356]
 r274: [352..355]
 r275: [348..349]
 r276: [345..347]
 r277: [344..346]
 r278: [280..281]
 r279: [278..279]
 r280: [276..277]
 r281: [274..275]
 r282: [272..273]
 r283: [270..271]
 r284: [268..269]
 r285: [266..267]
 r286: [264..265]
 r287: [262..263]
 r288: [260..261]
 r289: [258..259]
 r290: [254..257]
 r291: [252..256]
 r292: [250..255]
 r293: [248..249]
 r294: [246..247]
 r295: [244..245]
 r296: [242..243]
 r297: [234..235]
 r298: [226..233]
 r299: [231..232]
 r300: [225..230]
 r301: [228..229]
 r302: [224..227]
 r303: [339..340]
 r304: [327..338]
 r305: [336..337]
 r306: [326..335]
 r307: [325..334]
 r308: [332..333]
 r309: [323..331]
 r310: [329..330]
 r311: [322..328]
 r312: [318..319]
 r313: [315..317]
 r314: [314..316]
 r315: [302..303]
 r316: [296..301]
 r317: [299..300]
 r318: [295..298]
 r319: [294..297]
 r320: [312..313]
 r321: [306..311]
 r322: [309..310]
 r323: [305..308]
 r324: [304..307]
 r325: [292..293]
 r326: [284..291]
 r327: [289..290]
 r328: [283..288]
 r329: [286..287]
 r330: [282..285]
 r331: [220..221]
 r332: [217..219]
 r333: [216..218]
 r334: [212..213]
 r335: [210..211]
 r336: [177..194]
 r337: [176..193]
 r338: [175..192]
 r339: [174..191]
 r340: [173..190]
 r341: [172..189]
 r342: [187..188]
 r343: [184..185]
 r344: [182..183]
 r345: [180..181]
 r346: [178..179]
 r347: [116..117]
 r348: [111..112]
 r349: [113..114]
 r350: [109..110]
 r351: [107..108]
 r352: [105..106]
 r353: [168..169]
 r354: [170..171]
 r355: [165..166]
 r356: [156..157]
 r357: [158..159]
 r358: [153..154]
 r359: [141..142]
 r360: [143..144]
 r361: [138..139]
 r362: [129..130]
 r363: [131..132]
 r364: [126..127]
 r365: [91..96]
 r366: [90..95]
 r367: [89..94]
 r368: [88..93]
 r369: [87..92]
 r370: [73..81]
 r371: [72..80]
 r372: [71..79]
 r373: [77..78]
 r374: [69..76]
 r375: [74..75]
 r376: [65..66]
 r377: [63..64]
 r378: [60..61]
 r379: [45..59]
 r380: [57..58]
 r381: [44..56]
 r382: [54..55]
 r383: [43..53]
 r384: [51..52]
 r385: [41..50]
 r386: [48..49]
 r387: [46..47]
 r388: [37..38]
 r389: [35..36]
 r390: [31..32]
 r391: [33..34]
 r392: [25..26]
 r393: [27..28]
 r395: [609..610]
 r396: [0..0]
 r397: [449..450]
 r398: [250..253]
 r399: [250..251]
Compressing live ranges: from 611 to 443 - 72%
Ranges after the compression:
 r87: [427..428]
 r88: [421..422]
 r89: [419..420]
 r90: [417..418]
 r91: [415..416]
 r92: [413..414]
 r93: [383..384]
 r94: [381..382]
 r95: [377..378]
 r96: [375..376]
 r97: [371..372]
 r98: [369..370]
 r99: [367..368]
 r100: [353..354]
 r101: [365..366]
 r102: [351..352]
 r103: [363..364]
 r104: [361..362]
 r105: [361..362]
 r106: [359..360]
 r107: [347..350]
 r108: [345..346]
 r109: [339..340]
 r110: [335..338]
 r111: [329..330]
 r112: [329..330]
 r113: [327..328]
 r114: [325..326]
 r115: [311..312]
 r116: [305..306]
 r117: [299..300]
 r118: [297..298]
 r119: [291..292]
 r120: [289..290]
 r121: [287..288]
 r122: [283..286]
 r123: [283..286]
 r124: [281..282]
 r125: [277..278]
 r126: [271..272]
 r127: [267..268]
 r128: [261..262]
 r129: [185..186]
 r130: [183..184]
 r131: [181..182]
 r132: [251..260]
 r133: [249..250]
 r134: [171..172]
 r135: [165..166]
 r136: [159..160]
 r137: [155..156]
 r138: [153..154]
 r139: [151..152]
 r140: [149..150]
 r141: [157..158]
 r142: [147..148]
 r143: [145..146]
 r144: [71..72]
 r145: [73..86]
 r146: [75..76]
 r147: [73..74]
 r148: [127..132]
 r149: [129..130]
 r150: [127..128]
 r151: [113..126]
 r152: [117..122]
 r153: [119..120]
 r154: [117..118]
 r155: [115..116]
 r156: [113..114]
 r157: [103..108]
 r158: [105..106]
 r159: [103..104]
 r160: [89..102]
 r161: [93..98]
 r162: [95..96]
 r163: [93..94]
 r164: [91..92]
 r165: [89..90]
 r166: [69..70]
 r167: [65..66]
 r168: [63..64]
 r169: [59..62]
 r170: [57..58]
 r171: [41..52]
 r172: [39..40]
 r173: [29..30]
 r174: [23..24]
 r175: [21..22]
 r176: [19..20]
 r177: [17..18]
 r178: [15..16]
 r179: [13..14]
 r180: [11..12]
 r181: [9..10]
 r182: [7..8]
 r183: [5..6]
 r184: [3..4]
 r185: [1..2]
 r186: [439..440]
 r187: [437..438]
 r188: [437..438]
 r189: [437..438]
 r190: [437..438]
 r191: [437..438]
 r192: [437..438]
 r193: [429..436]
 r194: [429..436]
 r195: [429..436]
 r196: [429..436]
 r197: [429..436]
 r198: [429..436]
 r199: [435..436]
 r200: [433..434]
 r201: [431..432]
 r202: [429..430]
 r203: [423..424]
 r204: [417..418]
 r205: [413..414]
 r206: [411..412]
 r207: [409..410]
 r208: [407..408]
 r209: [405..406]
 r210: [403..404]
 r211: [401..402]
 r212: [399..400]
 r213: [397..398]
 r214: [395..396]
 r215: [393..394]
 r216: [391..392]
 r217: [389..390]
 r218: [387..388]
 r219: [385..386]
 r220: [425..426]
 r221: [381..382]
 r222: [381..382]
 r223: [379..380]
 r224: [373..374]
 r225: [373..374]
 r226: [369..370]
 r227: [361..362]
 r228: [361..362]
 r229: [361..362]
 r230: [357..358]
 r231: [355..356]
 r232: [355..356]
 r233: [347..350]
 r234: [347..350]
 r235: [347..350]
 r236: [349..350]
 r237: [347..348]
 r238: [347..348]
 r239: [343..344]
 r240: [341..342]
 r241: [341..342]
 r242: [321..324]
 r243: [323..324]
 r244: [321..322]
 r245: [321..322]
 r246: [317..320]
 r247: [319..320]
 r248: [317..318]
 r249: [317..318]
 r250: [335..336]
 r251: [333..334]
 r252: [331..332]
 r253: [325..326]
 r254: [315..316]
 r255: [313..314]
 r256: [313..314]
 r257: [309..310]
 r258: [307..308]
 r259: [303..304]
 r260: [301..302]
 r261: [295..296]
 r262: [293..294]
 r263: [293..294]
 r264: [285..286]
 r265: [283..284]
 r266: [283..284]
 r267: [283..284]
 r268: [279..280]
 r269: [275..276]
 r270: [273..274]
 r271: [273..274]
 r272: [269..270]
 r273: [269..270]
 r274: [269..270]
 r275: [265..266]
 r276: [263..264]
 r277: [263..264]
 r278: [223..224]
 r279: [221..222]
 r280: [219..220]
 r281: [217..218]
 r282: [215..216]
 r283: [213..214]
 r284: [211..212]
 r285: [209..210]
 r286: [207..208]
 r287: [205..206]
 r288: [203..204]
 r289: [201..202]
 r290: [199..200]
 r291: [197..200]
 r292: [195..200]
 r293: [193..194]
 r294: [191..192]
 r295: [189..190]
 r296: [187..188]
 r297: [179..180]
 r298: [173..178]
 r299: [177..178]
 r300: [173..176]
 r301: [175..176]
 r302: [173..174]
 r303: [259..260]
 r304: [251..258]
 r305: [257..258]
 r306: [251..256]
 r307: [251..256]
 r308: [255..256]
 r309: [251..254]
 r310: [253..254]
 r311: [251..252]
 r312: [247..248]
 r313: [245..246]
 r314: [245..246]
 r315: [237..238]
 r316: [233..236]
 r317: [235..236]
 r318: [233..234]
 r319: [233..234]
 r320: [243..244]
 r321: [239..242]
 r322: [241..242]
 r323: [239..240]
 r324: [239..240]
 r325: [231..232]
 r326: [225..230]
 r327: [229..230]
 r328: [225..228]
 r329: [227..228]
 r330: [225..226]
 r331: [169..170]
 r332: [167..168]
 r333: [167..168]
 r334: [163..164]
 r335: [161..162]
 r336: [137..146]
 r337: [137..146]
 r338: [137..146]
 r339: [137..146]
 r340: [137..146]
 r341: [137..146]
 r342: [145..146]
 r343: [143..144]
 r344: [141..142]
 r345: [139..140]
 r346: [137..138]
 r347: [87..88]
 r348: [83..84]
 r349: [85..86]
 r350: [81..82]
 r351: [79..80]
 r352: [77..78]
 r353: [133..134]
 r354: [135..136]
 r355: [131..132]
 r356: [123..124]
 r357: [125..126]
 r358: [121..122]
 r359: [109..110]
 r360: [111..112]
 r361: [107..108]
 r362: [99..100]
 r363: [101..102]
 r364: [97..98]
 r365: [67..68]
 r366: [67..68]
 r367: [67..68]
 r368: [67..68]
 r369: [67..68]
 r370: [59..62]
 r371: [59..62]
 r372: [59..62]
 r373: [61..62]
 r374: [59..60]
 r375: [59..60]
 r376: [55..56]
 r377: [53..54]
 r378: [51..52]
 r379: [41..50]
 r380: [49..50]
 r381: [41..48]
 r382: [47..48]
 r383: [41..46]
 r384: [45..46]
 r385: [41..44]
 r386: [43..44]
 r387: [41..42]
 r388: [37..38]
 r389: [35..36]
 r390: [31..32]
 r391: [33..34]
 r392: [25..26]
 r393: [27..28]
 r395: [441..442]
 r396: [0..0]
 r397: [337..338]
 r398: [195..198]
 r399: [195..196]

********** Assignment #1: **********

	 Assigning to 398 (cl=DIREG, orig=290, freq=2, tfirst=398, tfreq=2)...
	   Assign 5 to reload r398 (freq=2)
	 Assigning to 399 (cl=SIREG, orig=291, freq=2, tfirst=399, tfreq=2)...
	   Assign 4 to reload r399 (freq=2)
	 Assigning to 397 (cl=GENERAL_REGS, orig=250, freq=3, tfirst=397, tfreq=3)...
	   Assign 1 to reload r397 (freq=3)
	 Assigning to 395 (cl=INDEX_REGS, orig=395, freq=1, tfirst=395, tfreq=1)...
	   Assign 0 to reload r395 (freq=1)
	 Assigning to 396 (cl=INDEX_REGS, orig=396, freq=1, tfirst=396, tfreq=1)...
	   Assign 2 to reload r396 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=3424, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=3408, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 63
changing reg in insn 64
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 261
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 284
changing reg in insn 287
changing reg in insn 288
changing reg in insn 291
changing reg in insn 292
changing reg in insn 304
changing reg in insn 305
changing reg in insn 308
changing reg in insn 309
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 327
changing reg in insn 323
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 346
changing reg in insn 356
changing reg in insn 360
changing reg in insn 361
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 417
changing reg in insn 419
changing reg in insn 418
changing reg in insn 419
changing reg in insn 423
changing reg in insn 424
changing reg in insn 427
changing reg in insn 429
changing reg in insn 440
changing reg in insn 441
changing reg in insn 449
changing reg in insn 450
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 461
changing reg in insn 472
changing reg in insn 473
changing reg in insn 481
changing reg in insn 482
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 497
changing reg in insn 492
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 505
changing reg in insn 506
changing reg in insn 517
changing reg in insn 518
changing reg in insn 539
changing reg in insn 540
changing reg in insn 549
changing reg in insn 550
changing reg in insn 589
changing reg in insn 590
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 594
changing reg in insn 619
changing reg in insn 632
changing reg in insn 636
changing reg in insn 637
changing reg in insn 701
changing reg in insn 702
changing reg in insn 716
changing reg in insn 717
changing reg in insn 725
changing reg in insn 726
changing reg in insn 729
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 739
changing reg in insn 740
changing reg in insn 740
changing reg in insn 741
changing reg in insn 746
changing reg in insn 747
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 760
changing reg in insn 779
changing reg in insn 780
changing reg in insn 786
changing reg in insn 794
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 794
changing reg in insn 799
changing reg in insn 801
changing reg in insn 802
changing reg in insn 802
changing reg in insn 803
changing reg in insn 812
changing reg in insn 806
changing reg in insn 810
changing reg in insn 808
changing reg in insn 809
changing reg in insn 809
changing reg in insn 810
changing reg in insn 810
changing reg in insn 811
changing reg in insn 811
changing reg in insn 812
changing reg in insn 815
changing reg in insn 817
changing reg in insn 818
changing reg in insn 818
changing reg in insn 819
changing reg in insn 828
changing reg in insn 822
changing reg in insn 826
changing reg in insn 824
changing reg in insn 825
changing reg in insn 825
changing reg in insn 826
changing reg in insn 826
changing reg in insn 827
changing reg in insn 827
changing reg in insn 828
changing reg in insn 841
changing reg in insn 842
changing reg in insn 862
changing reg in insn 863
changing reg in insn 870
changing reg in insn 871
changing reg in insn 885
changing reg in insn 898
changing reg in insn 902
changing reg in insn 903
changing reg in insn 921
changing reg in insn 938
changing reg in insn 942
changing reg in insn 943
changing reg in insn 963
changing reg in insn 964
changing reg in insn 969
changing reg in insn 970
changing reg in insn 980
changing reg in insn 981
changing reg in insn 983
changing reg in insn 984
changing reg in insn 986
changing reg in insn 987
changing reg in insn 989
changing reg in insn 990
changing reg in insn 992
changing reg in insn 993
changing reg in insn 996
changing reg in insn 997
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1010
changing reg in insn 1013
changing reg in insn 1013
changing reg in insn 1017
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 34
changing reg in insn 29
changing reg in insn 35
changing reg in insn 30
changing reg in insn 36
changing reg in insn 31
changing reg in insn 37
changing reg in insn 32
changing reg in insn 38
changing reg in insn 33
changing reg in insn 39
changing reg in insn 41
changing reg in insn 55
changing reg in insn 42
changing reg in insn 56
changing reg in insn 43
changing reg in insn 57
changing reg in insn 44
changing reg in insn 58
changing reg in insn 45
changing reg in insn 59
changing reg in insn 46
changing reg in insn 60
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 68
changing reg in insn 69
changing reg in insn 81
changing reg in insn 84
changing reg in insn 86
changing reg in insn 95
changing reg in insn 96
changing reg in insn 105
changing reg in insn 106
changing reg in insn 115
changing reg in insn 116
changing reg in insn 125
changing reg in insn 126
changing reg in insn 135
changing reg in insn 136
changing reg in insn 145
changing reg in insn 146
changing reg in insn 155
changing reg in insn 156
changing reg in insn 165
changing reg in insn 166
changing reg in insn 175
changing reg in insn 176
changing reg in insn 185
changing reg in insn 186
changing reg in insn 195
changing reg in insn 196
changing reg in insn 221
changing reg in insn 222
changing reg in insn 231
changing reg in insn 232
changing reg in insn 241
changing reg in insn 242
changing reg in insn 251
changing reg in insn 252
changing reg in insn 258
changing reg in insn 260
changing reg in insn 259
changing reg in insn 262
changing reg in insn 264
changing reg in insn 266
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 277
changing reg in insn 283
changing reg in insn 285
changing reg in insn 324
changing reg in insn 328
changing reg in insn 325
changing reg in insn 329
changing reg in insn 326
changing reg in insn 330
changing reg in insn 338
changing reg in insn 339
changing reg in insn 339
changing reg in insn 341
changing reg in insn 340
changing reg in insn 342
changing reg in insn 347
changing reg in insn 353
changing reg in insn 348
changing reg in insn 354
changing reg in insn 349
changing reg in insn 355
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 357
changing reg in insn 352
changing reg in insn 358
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 372
changing reg in insn 371
changing reg in insn 373
changing reg in insn 382
changing reg in insn 386
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 387
changing reg in insn 385
changing reg in insn 388
changing reg in insn 397
changing reg in insn 401
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 402
changing reg in insn 400
changing reg in insn 403
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 417
changing reg in insn 428
changing reg in insn 430
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 437
changing reg in insn 436
changing reg in insn 438
changing reg in insn 444
changing reg in insn 445
changing reg in insn 445
changing reg in insn 447
changing reg in insn 453
changing reg in insn 454
changing reg in insn 454
changing reg in insn 456
changing reg in insn 464
changing reg in insn 465
changing reg in insn 465
changing reg in insn 467
changing reg in insn 466
changing reg in insn 468
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 498
changing reg in insn 495
changing reg in insn 499
changing reg in insn 496
changing reg in insn 500
changing reg in insn 504
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 512
changing reg in insn 511
changing reg in insn 513
changing reg in insn 530
changing reg in insn 533
changing reg in insn 531
changing reg in insn 534
changing reg in insn 532
changing reg in insn 535
changing reg in insn 543
changing reg in insn 544
changing reg in insn 544
changing reg in insn 546
changing reg in insn 545
changing reg in insn 547
changing reg in insn 553
changing reg in insn 554
changing reg in insn 555
changing reg in insn 556
changing reg in insn 557
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 561
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 565
changing reg in insn 566
changing reg in insn 567
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 571
changing reg in insn 572
changing reg in insn 573
changing reg in insn 574
changing reg in insn 575
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 580
changing reg in insn 579
changing reg in insn 580
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 582
changing reg in insn 583
changing reg in insn 584
changing reg in insn 585
changing reg in insn 586
changing reg in insn 587
changing reg in insn 588
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 609
changing reg in insn 605
changing reg in insn 606
changing reg in insn 606
changing reg in insn 610
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 611
changing reg in insn 620
changing reg in insn 621
changing reg in insn 621
changing reg in insn 629
changing reg in insn 622
changing reg in insn 623
changing reg in insn 623
changing reg in insn 630
changing reg in insn 624
changing reg in insn 631
changing reg in insn 625
changing reg in insn 626
changing reg in insn 626
changing reg in insn 633
changing reg in insn 627
changing reg in insn 628
changing reg in insn 628
changing reg in insn 634
changing reg in insn 645
changing reg in insn 646
changing reg in insn 646
changing reg in insn 648
changing reg in insn 647
changing reg in insn 649
changing reg in insn 658
changing reg in insn 659
changing reg in insn 659
changing reg in insn 663
changing reg in insn 660
changing reg in insn 661
changing reg in insn 661
changing reg in insn 664
changing reg in insn 662
changing reg in insn 665
changing reg in insn 674
changing reg in insn 675
changing reg in insn 675
changing reg in insn 679
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 680
changing reg in insn 678
changing reg in insn 681
changing reg in insn 687
changing reg in insn 688
changing reg in insn 688
changing reg in insn 693
changing reg in insn 689
changing reg in insn 690
changing reg in insn 690
changing reg in insn 694
changing reg in insn 691
changing reg in insn 692
changing reg in insn 692
changing reg in insn 695
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 713
changing reg in insn 712
changing reg in insn 714
changing reg in insn 720
changing reg in insn 721
changing reg in insn 721
changing reg in insn 723
changing reg in insn 752
changing reg in insn 769
changing reg in insn 753
changing reg in insn 770
changing reg in insn 754
changing reg in insn 771
changing reg in insn 755
changing reg in insn 772
changing reg in insn 756
changing reg in insn 773
changing reg in insn 757
changing reg in insn 774
changing reg in insn 758
changing reg in insn 759
changing reg in insn 761
changing reg in insn 762
changing reg in insn 763
changing reg in insn 764
changing reg in insn 765
changing reg in insn 766
changing reg in insn 767
changing reg in insn 768
changing reg in insn 785
changing reg in insn 786
changing reg in insn 788
changing reg in insn 789
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 790
changing reg in insn 791
changing reg in insn 791
changing reg in insn 792
changing reg in insn 798
changing reg in insn 799
changing reg in insn 797
changing reg in insn 798
changing reg in insn 800
changing reg in insn 801
changing reg in insn 805
changing reg in insn 806
changing reg in insn 804
changing reg in insn 805
changing reg in insn 807
changing reg in insn 808
changing reg in insn 814
changing reg in insn 815
changing reg in insn 813
changing reg in insn 814
changing reg in insn 816
changing reg in insn 817
changing reg in insn 821
changing reg in insn 822
changing reg in insn 820
changing reg in insn 821
changing reg in insn 823
changing reg in insn 824
changing reg in insn 849
changing reg in insn 854
changing reg in insn 850
changing reg in insn 855
changing reg in insn 851
changing reg in insn 856
changing reg in insn 852
changing reg in insn 857
changing reg in insn 853
changing reg in insn 858
changing reg in insn 886
changing reg in insn 894
changing reg in insn 887
changing reg in insn 896
changing reg in insn 888
changing reg in insn 897
changing reg in insn 889
changing reg in insn 890
changing reg in insn 890
changing reg in insn 899
changing reg in insn 892
changing reg in insn 893
changing reg in insn 906
changing reg in insn 907
changing reg in insn 907
changing reg in insn 908
changing reg in insn 922
changing reg in insn 923
changing reg in insn 923
changing reg in insn 934
changing reg in insn 924
changing reg in insn 925
changing reg in insn 925
changing reg in insn 936
changing reg in insn 926
changing reg in insn 927
changing reg in insn 927
changing reg in insn 937
changing reg in insn 928
changing reg in insn 929
changing reg in insn 929
changing reg in insn 939
changing reg in insn 931
changing reg in insn 932
changing reg in insn 932
changing reg in insn 933
changing reg in insn 946
changing reg in insn 947
changing reg in insn 947
changing reg in insn 948
changing reg in insn 962
changing reg in insn 963
changing reg in insn 961
changing reg in insn 962
changing reg in insn 968
changing reg in insn 969
changing reg in insn 967
changing reg in insn 968
changing reg in insn 5
changing reg in insn 1018
deleting insn with uid = 36.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 55.
deleting insn with uid = 56.
deleting insn with uid = 57.
deleting insn with uid = 58.
deleting insn with uid = 59.
deleting insn with uid = 260.
deleting insn with uid = 328.
deleting insn with uid = 329.
deleting insn with uid = 330.
deleting insn with uid = 355.
deleting insn with uid = 356.
deleting insn with uid = 357.
deleting insn with uid = 386.
deleting insn with uid = 401.
deleting insn with uid = 1095.
deleting insn with uid = 498.
deleting insn with uid = 499.
deleting insn with uid = 500.
deleting insn with uid = 533.
deleting insn with uid = 609.
deleting insn with uid = 629.
deleting insn with uid = 630.
deleting insn with uid = 633.
deleting insn with uid = 634.
deleting insn with uid = 663.
deleting insn with uid = 679.
deleting insn with uid = 693.
deleting insn with uid = 769.
deleting insn with uid = 771.
deleting insn with uid = 772.
deleting insn with uid = 773.
deleting insn with uid = 855.
deleting insn with uid = 856.
deleting insn with uid = 857.
deleting insn with uid = 896.
deleting insn with uid = 897.
deleting insn with uid = 899.
deleting insn with uid = 936.
deleting insn with uid = 937.
deleting insn with uid = 939.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 359.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 404.
verify found no changes in insn with uid = 431.
verify found no changes in insn with uid = 439.
verify found no changes in insn with uid = 448.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 529.
verify found no changes in insn with uid = 536.
verify found no changes in insn with uid = 548.
verify found no changes in insn with uid = 602.
verify found no changes in insn with uid = 612.
verify found no changes in insn with uid = 618.
verify found no changes in insn with uid = 635.
verify found no changes in insn with uid = 650.
verify found no changes in insn with uid = 666.
verify found no changes in insn with uid = 682.
verify found no changes in insn with uid = 686.
verify found no changes in insn with uid = 696.
verify found no changes in insn with uid = 706.
verify found no changes in insn with uid = 715.
verify found no changes in insn with uid = 724.
verify found no changes in insn with uid = 775.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 859.
verify found no changes in insn with uid = 861.
verify found no changes in insn with uid = 867.
verify found no changes in insn with uid = 875.
verify found no changes in insn with uid = 900.
verify found no changes in insn with uid = 911.
verify found no changes in insn with uid = 940.
verify found no changes in insn with uid = 951.
verify found no changes in insn with uid = 955.
verify found no changes in insn with uid = 971.
verify found no changes in insn with uid = 982.
verify found no changes in insn with uid = 985.
verify found no changes in insn with uid = 988.
verify found no changes in insn with uid = 991.
verify found no changes in insn with uid = 998.
verify found no changes in insn with uid = 1001.
verify found no changes in insn with uid = 1004.
verify found no changes in insn with uid = 1007.
verify found no changes in insn with uid = 1020.


int main(int, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9] 39[r10]
;;  ref usage 	r0={263d,200u} r1={133d,57u,1e} r2={105d,29u} r4={119d,44u} r5={166d,91u} r6={1d,442u} r7={19d,229u} r8={75d} r9={75d} r10={75d} r11={75d} r12={75d} r13={75d} r14={75d} r15={75d} r17={335d,69u} r18={75d} r19={75d} r20={1d,1u,1e} r21={78d,2u} r22={76d} r23={76d} r24={76d} r25={76d} r26={76d} r27={76d} r28={76d} r29={75d} r30={75d} r31={75d} r32={75d} r33={75d} r34={75d} r35={75d} r36={75d} r37={91d,15u} r38={83d,7u} r39={76d,1u} r40={75d} r45={75d} r46={75d} r47={75d} r48={75d} r49={75d} r50={75d} r51={75d} r52={75d} r53={75d} r54={75d} r55={75d} r56={75d} r57={75d} r58={75d} r59={75d} r60={75d} r61={75d} r62={75d} r63={75d} r64={75d} r65={75d} r66={75d} r67={75d} r68={75d} r69={75d} r70={75d} r71={75d} r72={75d} r73={75d} r74={75d} r75={75d} r76={75d} r77={75d} r78={75d} r79={75d} r80={75d} 
;;    total ref usage 7316{6127d,1187u,2e} in 752{677 regular + 75 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) sim2fitman.cpp:30 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) sim2fitman.cpp:30 89 {*movdi_internal}
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5936+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [395])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:30 986 {stack_tls_protect_set_di}
     (nil))
(insn 8 5 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3352 [0xfffffffffffff2e8])) [0 maxval+0 S8 A64])
        (const_int 16384 [0x4000])) sim2fitman.cpp:54 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:56 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:57 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3384 [0xfffffffffffff2c8])) [0 arg_read+0 S4 A64])
        (const_int 0 [0])) sim2fitman.cpp:58 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])
        (const_int 0 [0])) sim2fitman.cpp:59 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:59 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:64 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:69 93 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])
        (const_int 1 [0x1])) sim2fitman.cpp:70 93 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3389 [0xfffffffffffff2c3])) [0 overwrite+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:71 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) sim2fitman.cpp:77 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (const_int 0 [0])) sim2fitman.cpp:78 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:81 7 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) sim2fitman.cpp:81 612 {*jcc_1}
     (nil)
 -> 26)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 186
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (parallel [
            (set (reg:DI 0 ax [186])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:82 218 {*adddi_1}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [186])) sim2fitman.cpp:82 89 {*movdi_internal}
     (nil))
(call_insn 25 24 26 3 (call (mem:QI (symbol_ref:DI ("_Z7exit_01PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945310798 exit_01>) [0 exit_01 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:82 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
(code_label 26 25 27 4 2 "" [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (parallel [
            (set (reg:DI 37 r8 [187])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 5 di [188])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 2 cx [189])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 1 dx [190])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 4 si [191])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 0 ax [192])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 218 {*adddi_1}
     (nil))
(insn 34 33 35 4 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [187])) sim2fitman.cpp:86 89 {*movdi_internal}
     (nil))
(insn 35 34 39 4 (set (reg:DI 37 r8)
        (reg:DI 5 di [188])) sim2fitman.cpp:86 89 {*movdi_internal}
     (nil))
(insn 39 35 40 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [192])) sim2fitman.cpp:86 89 {*movdi_internal}
     (nil))
(call_insn 40 39 41 4 (call (mem:QI (symbol_ref:DI ("_Z4initP16Data_file_headerP17Data_block_headerP12Procpar_infoP10PreprocessP7IOFilesP13InFile_struct") [flags 0x41]  <function_decl 0x7f5945310288 init>) [0 init S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:86 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 38 r9 [193])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3388 [0xfffffffffffff2c4])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 42 41 43 4 (set (reg:DI 37 r8 [194])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])) sim2fitman.cpp:92 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:SI 2 cx [195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])) sim2fitman.cpp:92 90 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 1 dx [196])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 4 si [197])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 0 ax [198])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 5 di [199])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3390 [0xfffffffffffff2c2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 48 47 49 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [199])) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 5 di [200])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3389 [0xfffffffffffff2c3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 50 49 51 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [200])) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 5 di [201])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3344 [0xfffffffffffff2f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 52 51 53 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [201])) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 5 di [202])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3384 [0xfffffffffffff2c8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (nil))
(insn 54 53 60 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [202])) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 60 54 61 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [198])) sim2fitman.cpp:92 89 {*movdi_internal}
     (nil))
(call_insn 61 60 62 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_") [flags 0x41]  <function_decl 0x7f59452e4d80 command_line>) [0 command_line S1 A8])
            (const_int 32 [0x20]))) sim2fitman.cpp:92 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 62 61 63 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 63 62 64 4 (set (reg:SI 0 ax [orig:87 D.5926 ] [87])
        (reg:SI 0 ax)) sim2fitman.cpp:92 90 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:87 D.5926 ] [87])) sim2fitman.cpp:92 90 {*movsi_internal}
     (nil))
(insn 65 64 66 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:93 7 {*cmpsi_1}
     (nil))
(jump_insn 66 65 67 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) sim2fitman.cpp:93 612 {*jcc_1}
     (nil)
 -> 73)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 203
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 5 (parallel [
            (set (reg:DI 0 ax [203])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:95 218 {*adddi_1}
     (nil))
(insn 69 68 70 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [203])) sim2fitman.cpp:95 89 {*movdi_internal}
     (nil))
(call_insn 70 69 1027 5 (call (mem:QI (symbol_ref:DI ("_Z7exit_05PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945310af8 exit_05>) [0 exit_05 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:95 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1027 70 1028 5 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1028 1027 73)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 73 1028 74 6 3 "" [1 uses])
(note 74 73 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:96 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) sim2fitman.cpp:96 612 {*jcc_1}
     (nil)
 -> 90)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 204 205
(note 77 76 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 7 (set (reg:SI 0 ax [orig:88 D.5926 ] [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3384 [0xfffffffffffff2c8])) [0 arg_read+0 S4 A64])) sim2fitman.cpp:98 90 {*movsi_internal}
     (nil))
(insn 79 78 80 7 (set (reg:DI 0 ax [orig:89 D.5927 ] [89])
        (sign_extend:DI (reg:SI 0 ax [orig:88 D.5926 ] [88]))) sim2fitman.cpp:98 142 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 7 (parallel [
            (set (reg:DI 1 dx [orig:90 D.5927 ] [90])
                (ashift:DI (reg:DI 0 ax [orig:89 D.5927 ] [89])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 512 {*ashldi3_1}
     (nil))
(insn 81 80 82 7 (set (reg/f:DI 0 ax [204])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])) sim2fitman.cpp:98 89 {*movdi_internal}
     (nil))
(insn 82 81 83 7 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.5928 ] [91])
                (plus:DI (reg/f:DI 0 ax [204])
                    (reg:DI 1 dx [orig:90 D.5927 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:90 D.5927 ] [90]))
        (nil)))
(insn 83 82 84 7 (set (reg/f:DI 1 dx [orig:92 D.5929 ] [92])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.5928 ] [91]) [0 *_55+0 S8 A64])) sim2fitman.cpp:98 89 {*movdi_internal}
     (nil))
(insn 84 83 85 7 (parallel [
            (set (reg:DI 0 ax [205])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 218 {*adddi_1}
     (nil))
(insn 85 84 86 7 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:92 D.5929 ] [92])) sim2fitman.cpp:98 89 {*movdi_internal}
     (nil))
(insn 86 85 87 7 (set (reg:DI 5 di)
        (reg:DI 0 ax [205])) sim2fitman.cpp:98 89 {*movdi_internal}
     (nil))
(call_insn 87 86 1029 7 (call (mem:QI (symbol_ref:DI ("_Z7exit_04PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310a20 exit_04>) [0 exit_04 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:98 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1029 87 1030 7 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1030 1029 90)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 90 1030 91 8 5 "" [1 uses])
(note 91 90 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:99 7 {*cmpsi_1}
     (nil))
(jump_insn 93 92 94 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) sim2fitman.cpp:99 612 {*jcc_1}
     (nil)
 -> 100)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 206
(note 94 93 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 9 (parallel [
            (set (reg:DI 0 ax [206])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:101 218 {*adddi_1}
     (nil))
(insn 96 95 97 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [206])) sim2fitman.cpp:101 89 {*movdi_internal}
     (nil))
(call_insn 97 96 1031 9 (call (mem:QI (symbol_ref:DI ("_Z7exit_11PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f59453150d8 exit_11>) [0 exit_11 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:101 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1031 97 1032 9 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1032 1031 100)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 100 1032 101 10 6 "" [1 uses])
(note 101 100 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))) sim2fitman.cpp:102 7 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) sim2fitman.cpp:102 612 {*jcc_1}
     (nil)
 -> 110)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 207
(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 11 (parallel [
            (set (reg:DI 0 ax [207])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:104 218 {*adddi_1}
     (nil))
(insn 106 105 107 11 (set (reg:DI 5 di)
        (reg:DI 0 ax [207])) sim2fitman.cpp:104 89 {*movdi_internal}
     (nil))
(call_insn 107 106 1033 11 (call (mem:QI (symbol_ref:DI ("_Z7exit_12PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f59453151b0 exit_12>) [0 exit_12 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:104 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1033 107 1034 11 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1034 1033 110)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 110 1034 111 12 7 "" [1 uses])
(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -5 [0xfffffffffffffffb]))) sim2fitman.cpp:105 7 {*cmpsi_1}
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) sim2fitman.cpp:105 612 {*jcc_1}
     (nil)
 -> 120)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 208
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (parallel [
            (set (reg:DI 0 ax [208])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:107 218 {*adddi_1}
     (nil))
(insn 116 115 117 13 (set (reg:DI 5 di)
        (reg:DI 0 ax [208])) sim2fitman.cpp:107 89 {*movdi_internal}
     (nil))
(call_insn 117 116 1035 13 (call (mem:QI (symbol_ref:DI ("_Z7exit_13PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315288 exit_13>) [0 exit_13 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:107 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1035 117 1036 13 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1036 1035 120)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 120 1036 121 14 8 "" [1 uses])
(note 121 120 122 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -6 [0xfffffffffffffffa]))) sim2fitman.cpp:108 7 {*cmpsi_1}
     (nil))
(jump_insn 123 122 124 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) sim2fitman.cpp:108 612 {*jcc_1}
     (nil)
 -> 130)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 209
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 15 (parallel [
            (set (reg:DI 0 ax [209])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:110 218 {*adddi_1}
     (nil))
(insn 126 125 127 15 (set (reg:DI 5 di)
        (reg:DI 0 ax [209])) sim2fitman.cpp:110 89 {*movdi_internal}
     (nil))
(call_insn 127 126 1037 15 (call (mem:QI (symbol_ref:DI ("_Z7exit_14PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315360 exit_14>) [0 exit_14 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:110 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1037 127 1038 15 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1038 1037 130)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 130 1038 131 16 9 "" [1 uses])
(note 131 130 132 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -7 [0xfffffffffffffff9]))) sim2fitman.cpp:111 7 {*cmpsi_1}
     (nil))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) sim2fitman.cpp:111 612 {*jcc_1}
     (nil)
 -> 140)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 210
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (parallel [
            (set (reg:DI 0 ax [210])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:113 218 {*adddi_1}
     (nil))
(insn 136 135 137 17 (set (reg:DI 5 di)
        (reg:DI 0 ax [210])) sim2fitman.cpp:113 89 {*movdi_internal}
     (nil))
(call_insn 137 136 1039 17 (call (mem:QI (symbol_ref:DI ("_Z7exit_15PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315438 exit_15>) [0 exit_15 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:113 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1039 137 1040 17 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1040 1039 140)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 140 1040 141 18 10 "" [1 uses])
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -8 [0xfffffffffffffff8]))) sim2fitman.cpp:114 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) sim2fitman.cpp:114 612 {*jcc_1}
     (nil)
 -> 150)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 211
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (parallel [
            (set (reg:DI 0 ax [211])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:116 218 {*adddi_1}
     (nil))
(insn 146 145 147 19 (set (reg:DI 5 di)
        (reg:DI 0 ax [211])) sim2fitman.cpp:116 89 {*movdi_internal}
     (nil))
(call_insn 147 146 1041 19 (call (mem:QI (symbol_ref:DI ("_Z7exit_19PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315798 exit_19>) [0 exit_19 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:116 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1041 147 1042 19 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1042 1041 150)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 150 1042 151 20 11 "" [1 uses])
(note 151 150 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -9 [0xfffffffffffffff7]))) sim2fitman.cpp:117 7 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) sim2fitman.cpp:117 612 {*jcc_1}
     (nil)
 -> 160)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 212
(note 154 153 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 21 (parallel [
            (set (reg:DI 0 ax [212])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:119 218 {*adddi_1}
     (nil))
(insn 156 155 157 21 (set (reg:DI 5 di)
        (reg:DI 0 ax [212])) sim2fitman.cpp:119 89 {*movdi_internal}
     (nil))
(call_insn 157 156 1043 21 (call (mem:QI (symbol_ref:DI ("_Z7exit_16PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315510 exit_16>) [0 exit_16 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:119 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1043 157 1044 21 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1044 1043 160)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 160 1044 161 22 12 "" [1 uses])
(note 161 160 162 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -10 [0xfffffffffffffff6]))) sim2fitman.cpp:120 7 {*cmpsi_1}
     (nil))
(jump_insn 163 162 164 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) sim2fitman.cpp:120 612 {*jcc_1}
     (nil)
 -> 170)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 213
(note 164 163 165 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 23 (parallel [
            (set (reg:DI 0 ax [213])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:122 218 {*adddi_1}
     (nil))
(insn 166 165 167 23 (set (reg:DI 5 di)
        (reg:DI 0 ax [213])) sim2fitman.cpp:122 89 {*movdi_internal}
     (nil))
(call_insn 167 166 1045 23 (call (mem:QI (symbol_ref:DI ("_Z7exit_17PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f59453155e8 exit_17>) [0 exit_17 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:122 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1045 167 1046 23 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1046 1045 170)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 1046 171 24 13 "" [1 uses])
(note 171 170 172 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -11 [0xfffffffffffffff5]))) sim2fitman.cpp:123 7 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) sim2fitman.cpp:123 612 {*jcc_1}
     (nil)
 -> 180)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 214
(note 174 173 175 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 25 (parallel [
            (set (reg:DI 0 ax [214])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:125 218 {*adddi_1}
     (nil))
(insn 176 175 177 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [214])) sim2fitman.cpp:125 89 {*movdi_internal}
     (nil))
(call_insn 177 176 1047 25 (call (mem:QI (symbol_ref:DI ("_Z7exit_18PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f59453156c0 exit_18>) [0 exit_18 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:125 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1047 177 1048 25 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1048 1047 180)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 180 1048 181 26 14 "" [1 uses])
(note 181 180 182 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -12 [0xfffffffffffffff4]))) sim2fitman.cpp:126 7 {*cmpsi_1}
     (nil))
(jump_insn 183 182 184 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) sim2fitman.cpp:126 612 {*jcc_1}
     (nil)
 -> 190)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 215
(note 184 183 185 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 27 (parallel [
            (set (reg:DI 0 ax [215])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:128 218 {*adddi_1}
     (nil))
(insn 186 185 187 27 (set (reg:DI 5 di)
        (reg:DI 0 ax [215])) sim2fitman.cpp:128 89 {*movdi_internal}
     (nil))
(call_insn 187 186 1049 27 (call (mem:QI (symbol_ref:DI ("_Z7exit_20PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315870 exit_20>) [0 exit_20 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:128 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1049 187 1050 27 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1050 1049 190)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 190 1050 191 28 15 "" [1 uses])
(note 191 190 192 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -13 [0xfffffffffffffff3]))) sim2fitman.cpp:129 7 {*cmpsi_1}
     (nil))
(jump_insn 193 192 194 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) sim2fitman.cpp:129 612 {*jcc_1}
     (nil)
 -> 200)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 216
(note 194 193 195 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 29 (parallel [
            (set (reg:DI 0 ax [216])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:131 218 {*adddi_1}
     (nil))
(insn 196 195 197 29 (set (reg:DI 5 di)
        (reg:DI 0 ax [216])) sim2fitman.cpp:131 89 {*movdi_internal}
     (nil))
(call_insn 197 196 1051 29 (call (mem:QI (symbol_ref:DI ("_Z7exit_22PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315a20 exit_22>) [0 exit_22 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:131 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1051 197 1052 29 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1052 1051 200)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 200 1052 201 30 16 "" [1 uses])
(note 201 200 202 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:132 7 {*cmpsi_1}
     (nil))
(jump_insn 203 202 204 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) sim2fitman.cpp:132 612 {*jcc_1}
     (nil)
 -> 208)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 204 203 205 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 1053 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:134 90 {*movsi_internal}
     (nil))
(jump_insn 1053 205 1054 31 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1054 1053 208)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 208 1054 209 32 17 "" [1 uses])
(note 209 208 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:135 7 {*cmpsi_1}
     (nil))
(jump_insn 211 210 212 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) sim2fitman.cpp:135 612 {*jcc_1}
     (nil)
 -> 216)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 1055 33 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 2 [0x2])) sim2fitman.cpp:137 90 {*movsi_internal}
     (nil))
(jump_insn 1055 213 1056 33 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1056 1055 216)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 216 1056 217 34 18 "" [1 uses])
(note 217 216 218 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -14 [0xfffffffffffffff2]))) sim2fitman.cpp:138 7 {*cmpsi_1}
     (nil))
(jump_insn 219 218 220 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) sim2fitman.cpp:138 612 {*jcc_1}
     (nil)
 -> 226)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 217
(note 220 219 221 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 35 (parallel [
            (set (reg:DI 0 ax [217])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:140 218 {*adddi_1}
     (nil))
(insn 222 221 223 35 (set (reg:DI 5 di)
        (reg:DI 0 ax [217])) sim2fitman.cpp:140 89 {*movdi_internal}
     (nil))
(call_insn 223 222 1057 35 (call (mem:QI (symbol_ref:DI ("_Z7exit_25PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315ca8 exit_25>) [0 exit_25 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:140 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1057 223 1058 35 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1058 1057 226)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 226 1058 227 36 19 "" [1 uses])
(note 227 226 228 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -15 [0xfffffffffffffff1]))) sim2fitman.cpp:141 7 {*cmpsi_1}
     (nil))
(jump_insn 229 228 230 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) sim2fitman.cpp:141 612 {*jcc_1}
     (nil)
 -> 236)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 218
(note 230 229 231 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 37 (parallel [
            (set (reg:DI 0 ax [218])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:143 218 {*adddi_1}
     (nil))
(insn 232 231 233 37 (set (reg:DI 5 di)
        (reg:DI 0 ax [218])) sim2fitman.cpp:143 89 {*movdi_internal}
     (nil))
(call_insn 233 232 1059 37 (call (mem:QI (symbol_ref:DI ("_Z7exit_26PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315d80 exit_26>) [0 exit_26 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:143 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1059 233 1060 37 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1060 1059 236)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 236 1060 237 38 20 "" [1 uses])
(note 237 236 238 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -16 [0xfffffffffffffff0]))) sim2fitman.cpp:144 7 {*cmpsi_1}
     (nil))
(jump_insn 239 238 240 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) sim2fitman.cpp:144 612 {*jcc_1}
     (nil)
 -> 246)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 219
(note 240 239 241 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 39 (parallel [
            (set (reg:DI 0 ax [219])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:146 218 {*adddi_1}
     (nil))
(insn 242 241 243 39 (set (reg:DI 5 di)
        (reg:DI 0 ax [219])) sim2fitman.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn 243 242 1061 39 (call (mem:QI (symbol_ref:DI ("_Z7exit_27PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945315e58 exit_27>) [0 exit_27 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:146 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1061 243 1062 39 (set (pc)
        (label_ref 254)) 654 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1062 1061 246)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 246 1062 247 40 21 "" [1 uses])
(note 247 246 248 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -17 [0xffffffffffffffef]))) sim2fitman.cpp:147 7 {*cmpsi_1}
     (nil))
(jump_insn 249 248 250 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) sim2fitman.cpp:147 612 {*jcc_1}
     (nil)
 -> 254)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 220
(note 250 249 251 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 41 (parallel [
            (set (reg:DI 0 ax [220])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:149 218 {*adddi_1}
     (nil))
(insn 252 251 253 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [220])) sim2fitman.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn 253 252 254 41 (call (mem:QI (symbol_ref:DI ("_Z7exit_28PP8_IO_FILE") [flags 0x41]  <function_decl 0x7f5945319000 exit_28>) [0 exit_28 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:149 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;;              11 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              21 [100.0%] 
;;              23 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              33 [100.0%] 
;;              35 [100.0%] 
;;              37 [100.0%] 
;;              40
;;              39 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 221 222 223
(code_label 254 253 255 42 4 "" [19 uses])
(note 255 254 256 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 42 (set (reg:QI 0 ax [orig:93 D.5930 ] [93])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3389 [0xfffffffffffff2c3])) [0 overwrite+0 S1 A8])) sim2fitman.cpp:153 93 {*movqi_internal}
     (nil))
(insn 257 256 258 42 (set (reg:SI 2 cx [orig:94 D.5926 ] [94])
        (zero_extend:SI (reg:QI 0 ax [orig:93 D.5930 ] [93]))) sim2fitman.cpp:153 138 {*zero_extendqisi2}
     (nil))
(insn 258 257 259 42 (set (reg:SI 1 dx [221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])) sim2fitman.cpp:153 90 {*movsi_internal}
     (nil))
(insn 259 258 261 42 (parallel [
            (set (reg:DI 0 ax [222])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:153 218 {*adddi_1}
     (nil))
(insn 261 259 262 42 (set (reg:SI 4 si)
        (reg:SI 2 cx [orig:94 D.5926 ] [94])) sim2fitman.cpp:153 90 {*movsi_internal}
     (nil))
(insn 262 261 263 42 (set (reg:DI 5 di)
        (reg:DI 0 ax [222])) sim2fitman.cpp:153 89 {*movdi_internal}
     (nil))
(call_insn 263 262 264 42 (call (mem:QI (symbol_ref:DI ("_Z13check_outfileP7IOFilesbi") [flags 0x41]  <function_decl 0x7f5945310360 check_outfile>) [0 check_outfile S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:153 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 42 (parallel [
            (set (reg:DI 0 ax [223])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:156 218 {*adddi_1}
     (nil))
(insn 265 264 266 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f5944f51e10 *.LC0>)) sim2fitman.cpp:156 89 {*movdi_internal}
     (nil))
(insn 266 265 267 42 (set (reg:DI 5 di)
        (reg:DI 0 ax [223])) sim2fitman.cpp:156 89 {*movdi_internal}
     (nil))
(call_insn 267 266 268 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f59451cb510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:156 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 268 267 269 42 (set (reg/f:DI 0 ax [orig:95 D.5931 ] [95])
        (reg:DI 0 ax)) sim2fitman.cpp:156 89 {*movdi_internal}
     (nil))
(insn 269 268 270 42 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:95 D.5931 ] [95])) sim2fitman.cpp:156 89 {*movdi_internal}
     (nil))
(insn 270 269 271 42 (set (reg/f:DI 0 ax [orig:96 D.5931 ] [96])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:157 89 {*movdi_internal}
     (nil))
(insn 271 270 272 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:96 D.5931 ] [96])
            (const_int 0 [0]))) sim2fitman.cpp:157 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 272 271 273 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) sim2fitman.cpp:157 612 {*jcc_1}
     (nil)
 -> 279)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 224 225
(note 273 272 274 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 43 (parallel [
            (set (reg:DI 1 dx [224])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:158 218 {*adddi_1}
     (nil))
(insn 275 274 276 43 (parallel [
            (set (reg:DI 0 ax [225])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:158 218 {*adddi_1}
     (nil))
(insn 276 275 277 43 (set (reg:DI 4 si)
        (reg:DI 1 dx [224])) sim2fitman.cpp:158 89 {*movdi_internal}
     (nil))
(insn 277 276 278 43 (set (reg:DI 5 di)
        (reg:DI 0 ax [225])) sim2fitman.cpp:158 89 {*movdi_internal}
     (nil))
(call_insn 278 277 279 43 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310870 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:158 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 226
(code_label 279 278 280 44 22 "" [1 uses])
(note 280 279 281 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 44 (set (reg:QI 0 ax [orig:97 D.5930 ] [97])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:162 93 {*movqi_internal}
     (nil))
(insn 282 281 283 44 (set (reg:SI 1 dx [orig:98 D.5926 ] [98])
        (zero_extend:SI (reg:QI 0 ax [orig:97 D.5930 ] [97]))) sim2fitman.cpp:162 138 {*zero_extendqisi2}
     (nil))
(insn 283 282 284 44 (parallel [
            (set (reg:DI 0 ax [226])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:162 218 {*adddi_1}
     (nil))
(insn 284 283 285 44 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:98 D.5926 ] [98])) sim2fitman.cpp:162 90 {*movsi_internal}
     (nil))
(insn 285 284 286 44 (set (reg:DI 5 di)
        (reg:DI 0 ax [226])) sim2fitman.cpp:162 89 {*movdi_internal}
     (nil))
(call_insn 286 285 287 44 (call (mem:QI (symbol_ref:DI ("_Z18endianCheck_systemP12Endian_Checkb") [flags 0x41]  <function_decl 0x7f594530abd0 endianCheck_system>) [0 endianCheck_system S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:162 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 287 286 288 44 (set (reg:SI 0 ax [orig:99 D.5926 ] [99])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:164 90 {*movsi_internal}
     (nil))
(insn 288 287 289 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:99 D.5926 ] [99])
            (const_int 1 [0x1]))) sim2fitman.cpp:164 7 {*cmpsi_1}
     (nil))
(jump_insn 289 288 290 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman.cpp:164 612 {*jcc_1}
     (nil)
 -> 302)
;;  succ:       45 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100
(note 290 289 291 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 45 (set (reg:QI 0 ax [orig:100 D.5930 ] [100])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:166 93 {*movqi_internal}
     (nil))
(insn 292 291 293 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:100 D.5930 ] [100])
            (const_int 0 [0]))) sim2fitman.cpp:166 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 293 292 294 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) sim2fitman.cpp:166 612 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 294 293 295 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f5944f51ea0 *.LC1>)) sim2fitman.cpp:167 89 {*movdi_internal}
     (nil))
(call_insn 296 295 297 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:167 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 297 296 298 47 24 "" [1 uses])
(note 298 297 299 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 1063 47 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:169 93 {*movqi_internal}
     (nil))
(jump_insn 1063 299 1064 47 (set (pc)
        (label_ref 344)) 654 {jump}
     (nil)
 -> 344)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1064 1063 302)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101
(code_label 302 1064 303 48 23 "" [1 uses])
(note 303 302 304 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 48 (set (reg:SI 0 ax [orig:101 D.5926 ] [101])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:170 90 {*movsi_internal}
     (nil))
(insn 305 304 306 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:101 D.5926 ] [101])
            (const_int 2 [0x2]))) sim2fitman.cpp:170 7 {*cmpsi_1}
     (nil))
(jump_insn 306 305 307 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) sim2fitman.cpp:170 612 {*jcc_1}
     (nil)
 -> 319)
;;  succ:       49 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102
(note 307 306 308 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 49 (set (reg:QI 0 ax [orig:102 D.5930 ] [102])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:172 93 {*movqi_internal}
     (nil))
(insn 309 308 310 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:102 D.5930 ] [102])
            (const_int 0 [0]))) sim2fitman.cpp:172 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 310 309 311 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) sim2fitman.cpp:172 612 {*jcc_1}
     (nil)
 -> 314)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 311 310 312 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f5944f51f30 *.LC2>)) sim2fitman.cpp:173 89 {*movdi_internal}
     (nil))
(call_insn 313 312 314 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:173 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 314 313 315 51 27 "" [1 uses])
(note 315 314 316 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 1065 51 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:175 93 {*movqi_internal}
     (nil))
(jump_insn 1065 316 1066 51 (set (pc)
        (label_ref 344)) 654 {jump}
     (nil)
 -> 344)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1066 1065 319)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 227 228 229
(code_label 319 1066 320 52 26 "" [1 uses])
(note 320 319 321 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 52 (set (reg:QI 0 ax [orig:103 D.5930 ] [103])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:178 93 {*movqi_internal}
     (nil))
(insn 322 321 323 52 (set (reg:SI 5 di [orig:104 D.5926 ] [104])
        (zero_extend:SI (reg:QI 0 ax [orig:103 D.5930 ] [103]))) sim2fitman.cpp:178 138 {*zero_extendqisi2}
     (nil))
(insn 323 322 324 52 (set (reg/f:DI 0 ax [orig:105 D.5931 ] [105])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:178 89 {*movdi_internal}
     (nil))
(insn 324 323 325 52 (parallel [
            (set (reg:DI 2 cx [227])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 218 {*adddi_1}
     (nil))
(insn 325 324 326 52 (parallel [
            (set (reg:DI 1 dx [228])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 218 {*adddi_1}
     (nil))
(insn 326 325 327 52 (parallel [
            (set (reg:DI 4 si [229])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 218 {*adddi_1}
     (nil))
(insn 327 326 331 52 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:104 D.5926 ] [104])) sim2fitman.cpp:179 90 {*movsi_internal}
     (nil))
(insn 331 327 332 52 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:105 D.5931 ] [105])) sim2fitman.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 332 331 333 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x7f594530aca8 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:179 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 333 332 334 52 (set (reg:SI 0 ax [orig:106 D.5926 ] [106])
        (reg:SI 0 ax)) sim2fitman.cpp:179 90 {*movsi_internal}
     (nil))
(insn 334 333 335 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:106 D.5926 ] [106])) sim2fitman.cpp:179 90 {*movsi_internal}
     (nil))
(insn 335 334 336 52 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:180 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 336 335 337 52 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 344)
            (pc))) sim2fitman.cpp:180 612 {*jcc_1}
     (nil)
 -> 344)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 230 231 232
(note 337 336 338 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 53 (parallel [
            (set (reg:DI 0 ax [230])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 218 {*adddi_1}
     (nil))
(insn 339 338 340 53 (parallel [
            (set (reg:DI 1 dx [231])
                (plus:DI (reg:DI 0 ax [230])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 218 {*adddi_1}
     (nil))
(insn 340 339 341 53 (parallel [
            (set (reg:DI 0 ax [232])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 218 {*adddi_1}
     (nil))
(insn 341 340 342 53 (set (reg:DI 4 si)
        (reg:DI 1 dx [231])) sim2fitman.cpp:181 89 {*movdi_internal}
     (nil))
(insn 342 341 343 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [232])) sim2fitman.cpp:181 89 {*movdi_internal}
     (nil))
(call_insn 343 342 344 53 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310ca8 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:181 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              47 [100.0%] 
;;              52
;;              51 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 108 233 234 235 236 237 238
(code_label 344 343 345 54 25 "" [3 uses])
(note 345 344 346 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 54 (set (reg/f:DI 1 dx [orig:107 D.5931 ] [107])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:189 89 {*movdi_internal}
     (nil))
(insn 347 346 348 54 (parallel [
            (set (reg:DI 37 r8 [233])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 348 347 349 54 (parallel [
            (set (reg:DI 5 di [234])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 349 348 350 54 (parallel [
            (set (reg:DI 2 cx [235])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 350 349 351 54 (parallel [
            (set (reg:DI 0 ax [236])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 351 350 352 54 (parallel [
            (set (reg:DI 4 si [237])
                (plus:DI (reg:DI 0 ax [236])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 352 351 353 54 (parallel [
            (set (reg:DI 0 ax [238])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 218 {*adddi_1}
     (nil))
(insn 353 352 354 54 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [233])) sim2fitman.cpp:190 89 {*movdi_internal}
     (nil))
(insn 354 353 358 54 (set (reg:DI 37 r8)
        (reg:DI 5 di [234])) sim2fitman.cpp:190 89 {*movdi_internal}
     (nil))
(insn 358 354 359 54 (set (reg:DI 5 di)
        (reg:DI 0 ax [238])) sim2fitman.cpp:190 89 {*movdi_internal}
     (nil))
(call_insn 359 358 360 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f59452e4e58 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:190 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 360 359 361 54 (set (reg:SI 0 ax [orig:108 D.5926 ] [108])
        (reg:SI 0 ax)) sim2fitman.cpp:190 90 {*movsi_internal}
     (nil))
(insn 361 360 362 54 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:108 D.5926 ] [108])) sim2fitman.cpp:190 90 {*movsi_internal}
     (nil))
(insn 362 361 363 54 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3180 [0xfffffffffffff394])) [0 infile_struct[0].num_unsup_sets+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:193 90 {*movsi_internal}
     (nil))
(insn 363 362 364 54 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:195 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 364 363 365 54 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) sim2fitman.cpp:195 612 {*jcc_1}
     (nil)
 -> 407)
;;  succ:       55 (FALLTHRU)
;;              61
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 365 364 366 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:196 7 {*cmpsi_1}
     (nil))
(jump_insn 367 366 368 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) sim2fitman.cpp:196 612 {*jcc_1}
     (nil)
 -> 377)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 239 240 241
(note 368 367 369 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 56 (parallel [
            (set (reg:DI 0 ax [239])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 218 {*adddi_1}
     (nil))
(insn 370 369 371 56 (parallel [
            (set (reg:DI 1 dx [240])
                (plus:DI (reg:DI 0 ax [239])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 218 {*adddi_1}
     (nil))
(insn 371 370 372 56 (parallel [
            (set (reg:DI 0 ax [241])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 218 {*adddi_1}
     (nil))
(insn 372 371 373 56 (set (reg:DI 4 si)
        (reg:DI 1 dx [240])) sim2fitman.cpp:197 89 {*movdi_internal}
     (nil))
(insn 373 372 374 56 (set (reg:DI 5 di)
        (reg:DI 0 ax [241])) sim2fitman.cpp:197 89 {*movdi_internal}
     (nil))
(call_insn 374 373 1067 56 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310ca8 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:197 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1067 374 1068 56 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1068 1067 377)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 377 1068 378 57 29 "" [1 uses])
(note 378 377 379 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 380 379 381 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 392)
            (pc))) sim2fitman.cpp:198 612 {*jcc_1}
     (nil)
 -> 392)
;;  succ:       58 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 242 243 244 245
(note 381 380 382 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 58 (parallel [
            (set (reg:DI 1 dx [242])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 383 382 384 58 (parallel [
            (set (reg:DI 0 ax [243])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 384 383 385 58 (parallel [
            (set (reg:DI 2 cx [244])
                (plus:DI (reg:DI 0 ax [243])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 385 384 387 58 (parallel [
            (set (reg:DI 0 ax [245])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 218 {*adddi_1}
     (nil))
(insn 387 385 388 58 (set (reg:DI 4 si)
        (reg:DI 2 cx [244])) sim2fitman.cpp:199 89 {*movdi_internal}
     (nil))
(insn 388 387 389 58 (set (reg:DI 5 di)
        (reg:DI 0 ax [245])) sim2fitman.cpp:199 89 {*movdi_internal}
     (nil))
(call_insn 389 388 1069 58 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f5945310e58 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:199 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1069 389 1070 58 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1070 1069 392)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 392 1070 393 59 31 "" [1 uses])
(note 393 392 394 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:200 7 {*cmpsi_1}
     (nil))
(jump_insn 395 394 396 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:200 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       60 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 246 247 248 249
(note 396 395 397 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 60 (parallel [
            (set (reg:DI 1 dx [246])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 218 {*adddi_1}
     (nil))
(insn 398 397 399 60 (parallel [
            (set (reg:DI 0 ax [247])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 218 {*adddi_1}
     (nil))
(insn 399 398 400 60 (parallel [
            (set (reg:DI 2 cx [248])
                (plus:DI (reg:DI 0 ax [247])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 218 {*adddi_1}
     (nil))
(insn 400 399 402 60 (parallel [
            (set (reg:DI 0 ax [249])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 218 {*adddi_1}
     (nil))
(insn 402 400 403 60 (set (reg:DI 4 si)
        (reg:DI 2 cx [248])) sim2fitman.cpp:201 89 {*movdi_internal}
     (nil))
(insn 403 402 404 60 (set (reg:DI 5 di)
        (reg:DI 0 ax [249])) sim2fitman.cpp:201 89 {*movdi_internal}
     (nil))
(call_insn 404 403 1071 60 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f5945315000 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:201 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1071 404 1072 60 (set (pc)
        (label_ref 432)) 654 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1072 1071 407)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109
(code_label 407 1072 408 61 28 "" [1 uses])
(note 408 407 409 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 61 (set (reg:SI 0 ax [orig:109 D.5926 ] [109])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) sim2fitman.cpp:203 90 {*movsi_internal}
     (nil))
(insn 410 409 411 61 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:109 D.5926 ] [109])
            (const_int 0 [0]))) sim2fitman.cpp:203 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 411 410 412 61 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) sim2fitman.cpp:203 612 {*jcc_1}
     (nil)
 -> 421)
;;  succ:       63
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 112 250 251 252
(note 412 411 413 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 1094 62 (set (reg:SI 0 ax [orig:110 D.5926 ] [110])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 1094 413 414 62 (set (reg:SI 1 dx [250])
        (reg:SI 0 ax [orig:110 D.5926 ] [110])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 414 1094 415 62 (parallel [
            (set (reg:SI 1 dx [250])
                (lshiftrt:SI (reg:SI 1 dx [250])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 544 {*lshrsi3_1}
     (nil))
(insn 415 414 416 62 (parallel [
            (set (reg:SI 0 ax [251])
                (plus:SI (reg:SI 0 ax [orig:110 D.5926 ] [110])
                    (reg:SI 1 dx [250])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 217 {*addsi_1}
     (nil))
(insn 416 415 417 62 (parallel [
            (set (reg:SI 0 ax [252])
                (ashiftrt:SI (reg:SI 0 ax [251])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 545 {*ashrsi3_1}
     (nil))
(insn 417 416 418 62 (set (reg:SI 1 dx [orig:111 D.5926 ] [111])
        (reg:SI 0 ax [252])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 418 417 419 62 (set (reg:SI 0 ax [orig:112 D.5926 ] [112])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2504 [0xfffffffffffff638])) [0 procpar_info[0].num_points+0 S4 A64])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 419 418 420 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:111 D.5926 ] [111])
            (reg:SI 0 ax [orig:112 D.5926 ] [112]))) sim2fitman.cpp:203 7 {*cmpsi_1}
     (nil))
(jump_insn 420 419 421 62 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:203 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       63 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 113
(code_label 421 420 422 63 32 "" [1 uses])
(note 422 421 423 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 63 (set (reg:SI 0 ax [orig:113 D.5926 ] [113])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2952 [0xfffffffffffff478])) [0 preprocess[0].pre_quecc+0 S4 A64])) sim2fitman.cpp:205 90 {*movsi_internal}
     (nil))
(insn 424 423 425 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:113 D.5926 ] [113])
            (const_int 1 [0x1]))) sim2fitman.cpp:204 7 {*cmpsi_1}
     (nil))
(jump_insn 425 424 426 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:204 612 {*jcc_1}
     (nil)
 -> 432)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 253
(note 426 425 427 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 64 (set (reg:SI 1 dx [orig:114 D.5926 ] [114])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -2504 [0xfffffffffffff638])) [0 procpar_info[0].num_points+0 S4 A64])) sim2fitman.cpp:207 90 {*movsi_internal}
     (nil))
(insn 428 427 429 64 (parallel [
            (set (reg:DI 0 ax [253])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:207 218 {*adddi_1}
     (nil))
(insn 429 428 430 64 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:114 D.5926 ] [114])) sim2fitman.cpp:207 90 {*movsi_internal}
     (nil))
(insn 430 429 431 64 (set (reg:DI 5 di)
        (reg:DI 0 ax [253])) sim2fitman.cpp:207 89 {*movdi_internal}
     (nil))
(call_insn 431 430 432 64 (call (mem:QI (symbol_ref:DI ("_Z7exit_24PP8_IO_FILEi") [flags 0x41]  <function_decl 0x7f5945315bd0 exit_24>) [0 exit_24 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:207 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%] 
;;              62
;;              63
;;              64 (FALLTHRU)
;;              59
;;              58 [100.0%] 
;;              60 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 254 255 256
(code_label 432 431 433 65 30 "" [6 uses])
(note 433 432 434 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 65 (parallel [
            (set (reg:DI 0 ax [254])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 218 {*adddi_1}
     (nil))
(insn 435 434 436 65 (parallel [
            (set (reg:DI 1 dx [255])
                (plus:DI (reg:DI 0 ax [254])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 218 {*adddi_1}
     (nil))
(insn 436 435 437 65 (parallel [
            (set (reg:DI 0 ax [256])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 218 {*adddi_1}
     (nil))
(insn 437 436 438 65 (set (reg:DI 4 si)
        (reg:DI 1 dx [255])) sim2fitman.cpp:221 89 {*movdi_internal}
     (nil))
(insn 438 437 439 65 (set (reg:DI 5 di)
        (reg:DI 0 ax [256])) sim2fitman.cpp:221 89 {*movdi_internal}
     (nil))
(call_insn/i 439 438 440 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f59453fa360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:221 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 65 (set (reg:SI 0 ax [orig:115 D.5926 ] [115])
        (reg:SI 0 ax)) sim2fitman.cpp:221 90 {*movsi_internal}
     (nil))
(insn 441 440 442 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:115 D.5926 ] [115])
            (const_int 0 [0]))) sim2fitman.cpp:221 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 442 441 443 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:221 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       66 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 257 258
(note 443 442 444 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 66 (parallel [
            (set (reg:DI 0 ax [257])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:222 218 {*adddi_1}
     (nil))
(insn 445 444 446 66 (parallel [
            (set (reg:DI 0 ax [258])
                (plus:DI (reg:DI 0 ax [257])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:222 218 {*adddi_1}
     (nil))
(insn 446 445 447 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f5944f512d0 *.LC3>)) sim2fitman.cpp:222 89 {*movdi_internal}
     (nil))
(insn 447 446 448 66 (set (reg:DI 5 di)
        (reg:DI 0 ax [258])) sim2fitman.cpp:222 89 {*movdi_internal}
     (nil))
(call_insn/i 448 447 449 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f59453fa360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:222 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 449 448 450 66 (set (reg:SI 0 ax [orig:116 D.5926 ] [116])
        (reg:SI 0 ax)) sim2fitman.cpp:222 90 {*movsi_internal}
     (nil))
(insn 450 449 451 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:116 D.5926 ] [116])
            (const_int 0 [0]))) sim2fitman.cpp:221 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 451 450 452 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:221 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       67 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 259 260
(note 452 451 453 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 67 (parallel [
            (set (reg:DI 0 ax [259])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:224 218 {*adddi_1}
     (nil))
(insn 454 453 455 67 (parallel [
            (set (reg:DI 0 ax [260])
                (plus:DI (reg:DI 0 ax [259])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:224 218 {*adddi_1}
     (nil))
(insn 455 454 456 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f5944f51e10 *.LC0>)) sim2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(insn 456 455 457 67 (set (reg:DI 5 di)
        (reg:DI 0 ax [260])) sim2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn 457 456 458 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f59451cb510 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:224 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 458 457 459 67 (set (reg/f:DI 0 ax [orig:117 D.5931 ] [117])
        (reg:DI 0 ax)) sim2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(insn 459 458 460 67 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (reg/f:DI 0 ax [orig:117 D.5931 ] [117])) sim2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(insn 460 459 461 67 (set (reg/f:DI 0 ax [orig:118 D.5931 ] [118])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:225 89 {*movdi_internal}
     (nil))
(insn 461 460 462 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:118 D.5931 ] [118])
            (const_int 0 [0]))) sim2fitman.cpp:225 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 462 461 463 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) sim2fitman.cpp:225 612 {*jcc_1}
     (nil)
 -> 470)
;;  succ:       68 (FALLTHRU)
;;              69
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 261 262 263
(note 463 462 464 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 68 (parallel [
            (set (reg:DI 0 ax [261])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 218 {*adddi_1}
     (nil))
(insn 465 464 466 68 (parallel [
            (set (reg:DI 1 dx [262])
                (plus:DI (reg:DI 0 ax [261])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 218 {*adddi_1}
     (nil))
(insn 466 465 467 68 (parallel [
            (set (reg:DI 0 ax [263])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 218 {*adddi_1}
     (nil))
(insn 467 466 468 68 (set (reg:DI 4 si)
        (reg:DI 1 dx [262])) sim2fitman.cpp:226 89 {*movdi_internal}
     (nil))
(insn 468 467 469 68 (set (reg:DI 5 di)
        (reg:DI 0 ax [263])) sim2fitman.cpp:226 89 {*movdi_internal}
     (nil))
(call_insn 469 468 470 68 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310870 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:226 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;;              68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119
(code_label 470 469 471 69 34 "" [1 uses])
(note 471 470 472 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 69 (set (reg:SI 0 ax [orig:119 D.5926 ] [119])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])) sim2fitman.cpp:228 90 {*movsi_internal}
     (nil))
(insn 473 472 474 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 D.5926 ] [119])
            (const_int 1 [0x1]))) sim2fitman.cpp:228 7 {*cmpsi_1}
     (nil))
(jump_insn 474 473 475 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 479)
            (pc))) sim2fitman.cpp:228 612 {*jcc_1}
     (nil)
 -> 479)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 475 474 476 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 1073 70 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:230 93 {*movqi_internal}
     (nil))
(jump_insn 1073 476 1074 70 (set (pc)
        (label_ref 515)) 654 {jump}
     (nil)
 -> 515)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1074 1073 479)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120
(code_label 479 1074 480 71 35 "" [1 uses])
(note 480 479 481 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 71 (set (reg:SI 0 ax [orig:120 D.5926 ] [120])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])) sim2fitman.cpp:231 90 {*movsi_internal}
     (nil))
(insn 482 481 483 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:120 D.5926 ] [120])
            (const_int 2 [0x2]))) sim2fitman.cpp:231 7 {*cmpsi_1}
     (nil))
(jump_insn 483 482 484 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) sim2fitman.cpp:231 612 {*jcc_1}
     (nil)
 -> 488)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 484 483 485 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 1075 72 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:233 93 {*movqi_internal}
     (nil))
(jump_insn 1075 485 1076 72 (set (pc)
        (label_ref 515)) 654 {jump}
     (nil)
 -> 515)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1076 1075 488)
;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 121 122 123 124 125 264 265 266 267 268
(code_label 488 1076 489 73 36 "" [1 uses])
(note 489 488 490 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 73 (set (reg:QI 0 ax [orig:121 D.5930 ] [121])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:236 93 {*movqi_internal}
     (nil))
(insn 491 490 492 73 (set (reg:SI 5 di [orig:122 D.5926 ] [122])
        (zero_extend:SI (reg:QI 0 ax [orig:121 D.5930 ] [121]))) sim2fitman.cpp:236 138 {*zero_extendqisi2}
     (nil))
(insn 492 491 493 73 (set (reg/f:DI 0 ax [orig:123 D.5931 ] [123])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:236 89 {*movdi_internal}
     (nil))
(insn 493 492 494 73 (parallel [
            (set (reg:DI 1 dx [264])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 218 {*adddi_1}
     (nil))
(insn 494 493 495 73 (parallel [
            (set (reg:DI 2 cx [265])
                (plus:DI (reg:DI 1 dx [264])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 218 {*adddi_1}
     (nil))
(insn 495 494 496 73 (parallel [
            (set (reg:DI 1 dx [266])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 218 {*adddi_1}
     (nil))
(insn 496 495 497 73 (parallel [
            (set (reg:DI 4 si [267])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 218 {*adddi_1}
     (nil))
(insn 497 496 501 73 (set (reg:SI 37 r8)
        (reg:SI 5 di [orig:122 D.5926 ] [122])) sim2fitman.cpp:236 90 {*movsi_internal}
     (nil))
(insn 501 497 502 73 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:123 D.5931 ] [123])) sim2fitman.cpp:236 89 {*movdi_internal}
     (nil))
(call_insn 502 501 503 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x7f594530aca8 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:236 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 503 502 504 73 (set (reg:SI 0 ax [orig:124 D.5926 ] [124])
        (reg:SI 0 ax)) sim2fitman.cpp:236 90 {*movsi_internal}
     (nil))
(insn 504 503 505 73 (parallel [
            (set (reg:SI 0 ax [268])
                (lshiftrt:SI (reg:SI 0 ax [orig:124 D.5926 ] [124])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 544 {*lshrsi3_1}
     (nil))
(insn 505 504 506 73 (set (reg:QI 0 ax [orig:125 D.5930 ] [125])
        (reg:QI 0 ax [268])) sim2fitman.cpp:236 93 {*movqi_internal}
     (nil))
(insn 506 505 507 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:125 D.5930 ] [125])
            (const_int 0 [0]))) sim2fitman.cpp:236 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 507 506 508 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:236 612 {*jcc_1}
     (nil)
 -> 515)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 269 270 271
(note 508 507 509 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 74 (parallel [
            (set (reg:DI 0 ax [269])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 218 {*adddi_1}
     (nil))
(insn 510 509 511 74 (parallel [
            (set (reg:DI 1 dx [270])
                (plus:DI (reg:DI 0 ax [269])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 218 {*adddi_1}
     (nil))
(insn 511 510 512 74 (parallel [
            (set (reg:DI 0 ax [271])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 218 {*adddi_1}
     (nil))
(insn 512 511 513 74 (set (reg:DI 4 si)
        (reg:DI 1 dx [270])) sim2fitman.cpp:238 89 {*movdi_internal}
     (nil))
(insn 513 512 514 74 (set (reg:DI 5 di)
        (reg:DI 0 ax [271])) sim2fitman.cpp:238 89 {*movdi_internal}
     (nil))
(call_insn 514 513 515 74 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310ca8 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:238 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;;              66
;;              70 [100.0%] 
;;              73
;;              74 (FALLTHRU)
;;              72 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126
(code_label 515 514 516 75 33 "" [5 uses])
(note 516 515 517 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 75 (set (reg:QI 0 ax [orig:126 D.5930 ] [126])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:244 93 {*movqi_internal}
     (nil))
(insn 518 517 519 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:126 D.5930 ] [126])
            (const_int 0 [0]))) sim2fitman.cpp:244 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 519 518 520 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman.cpp:244 612 {*jcc_1}
     (nil)
 -> 537)
;;  succ:       76 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 520 519 521 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:244 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 522 521 523 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 526)
            (pc))) sim2fitman.cpp:244 612 {*jcc_1}
     (nil)
 -> 526)
;;  succ:       78
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 523 522 524 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:244 7 {*cmpsi_1}
     (nil))
(jump_insn 525 524 526 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman.cpp:244 612 {*jcc_1}
     (nil)
 -> 537)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;;              77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 272 273 274
(code_label 526 525 527 78 38 "" [1 uses])
(note 527 526 528 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f5944f51360 *.LC4>)) sim2fitman.cpp:246 89 {*movdi_internal}
     (nil))
(call_insn 529 528 530 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:246 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 530 529 531 78 (parallel [
            (set (reg:DI 1 dx [272])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 218 {*adddi_1}
     (nil))
(insn 531 530 532 78 (parallel [
            (set (reg:DI 2 cx [273])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 218 {*adddi_1}
     (nil))
(insn 532 531 534 78 (parallel [
            (set (reg:DI 0 ax [274])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 218 {*adddi_1}
     (nil))
(insn 534 532 535 78 (set (reg:DI 4 si)
        (reg:DI 2 cx [273])) sim2fitman.cpp:247 89 {*movdi_internal}
     (nil))
(insn 535 534 536 78 (set (reg:DI 5 di)
        (reg:DI 0 ax [274])) sim2fitman.cpp:247 89 {*movdi_internal}
     (nil))
(call_insn 536 535 537 78 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f5945310438 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:247 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              77
;;              78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127
(code_label 537 536 538 79 37 "" [2 uses])
(note 538 537 539 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 79 (set (reg:SI 0 ax [orig:127 D.5926 ] [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:252 90 {*movsi_internal}
     (nil))
(insn 540 539 541 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:127 D.5926 ] [127])
            (const_int 1 [0x1]))) sim2fitman.cpp:252 7 {*cmpsi_1}
     (nil))
(jump_insn 541 540 542 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) sim2fitman.cpp:252 612 {*jcc_1}
     (nil)
 -> 699)
;;  succ:       80 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128 275 276 277
(note 542 541 543 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 80 (parallel [
            (set (reg:DI 0 ax [275])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 218 {*adddi_1}
     (nil))
(insn 544 543 545 80 (parallel [
            (set (reg:DI 1 dx [276])
                (plus:DI (reg:DI 0 ax [275])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 218 {*adddi_1}
     (nil))
(insn 545 544 546 80 (parallel [
            (set (reg:DI 0 ax [277])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 218 {*adddi_1}
     (nil))
(insn 546 545 547 80 (set (reg:DI 4 si)
        (reg:DI 1 dx [276])) sim2fitman.cpp:254 89 {*movdi_internal}
     (nil))
(insn 547 546 548 80 (set (reg:DI 5 di)
        (reg:DI 0 ax [277])) sim2fitman.cpp:254 89 {*movdi_internal}
     (nil))
(call_insn/i 548 547 549 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f59453fa360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:254 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 549 548 550 80 (set (reg:SI 0 ax [orig:128 D.5926 ] [128])
        (reg:SI 0 ax)) sim2fitman.cpp:254 90 {*movsi_internal}
     (nil))
(insn 550 549 551 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:128 D.5926 ] [128])
            (const_int 0 [0]))) sim2fitman.cpp:254 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 551 550 552 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 615)
            (pc))) sim2fitman.cpp:254 612 {*jcc_1}
     (nil)
 -> 615)
;;  succ:       81 (FALLTHRU)
;;              84
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 129 130 131 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296
(note 552 551 553 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 81 (set (reg:DI 0 ax [278])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3120 [0xfffffffffffff3d0])) [0 main_header+0 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 554 553 555 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3056 [0xfffffffffffff410])) [0 main_header+64 S8 A64])
        (reg:DI 0 ax [278])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 555 554 556 81 (set (reg:DI 0 ax [279])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3112 [0xfffffffffffff3d8])) [0 main_header+8 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 556 555 557 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3048 [0xfffffffffffff418])) [0 main_header+72 S8 A64])
        (reg:DI 0 ax [279])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 557 556 558 81 (set (reg:DI 0 ax [280])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3104 [0xfffffffffffff3e0])) [0 main_header+16 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 558 557 559 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3040 [0xfffffffffffff420])) [0 main_header+80 S8 A64])
        (reg:DI 0 ax [280])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 559 558 560 81 (set (reg:DI 0 ax [281])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3096 [0xfffffffffffff3e8])) [0 main_header+24 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 560 559 561 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3032 [0xfffffffffffff428])) [0 main_header+88 S8 A64])
        (reg:DI 0 ax [281])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 561 560 562 81 (set (reg:DI 0 ax [282])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3088 [0xfffffffffffff3f0])) [0 main_header+32 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 562 561 563 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3024 [0xfffffffffffff430])) [0 main_header+96 S8 A64])
        (reg:DI 0 ax [282])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 563 562 564 81 (set (reg:DI 0 ax [283])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3080 [0xfffffffffffff3f8])) [0 main_header+40 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 564 563 565 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3016 [0xfffffffffffff438])) [0 main_header+104 S8 A64])
        (reg:DI 0 ax [283])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 565 564 566 81 (set (reg:DI 0 ax [284])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3072 [0xfffffffffffff400])) [0 main_header+48 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 566 565 567 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3008 [0xfffffffffffff440])) [0 main_header+112 S8 A64])
        (reg:DI 0 ax [284])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 567 566 568 81 (set (reg:DI 0 ax [285])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3064 [0xfffffffffffff408])) [0 main_header+56 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 568 567 569 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3000 [0xfffffffffffff448])) [0 main_header+120 S8 A64])
        (reg:DI 0 ax [285])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 569 568 570 81 (set (reg:DI 0 ax [286])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3248 [0xfffffffffffff350])) [0 block_header+0 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 570 569 571 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3216 [0xfffffffffffff370])) [0 block_header+32 S8 A64])
        (reg:DI 0 ax [286])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 571 570 572 81 (set (reg:DI 0 ax [287])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3240 [0xfffffffffffff358])) [0 block_header+8 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 572 571 573 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3208 [0xfffffffffffff378])) [0 block_header+40 S8 A64])
        (reg:DI 0 ax [287])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 573 572 574 81 (set (reg:DI 0 ax [288])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3232 [0xfffffffffffff360])) [0 block_header+16 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 574 573 575 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3200 [0xfffffffffffff380])) [0 block_header+48 S8 A64])
        (reg:DI 0 ax [288])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 575 574 576 81 (set (reg:DI 0 ax [289])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3224 [0xfffffffffffff368])) [0 block_header+24 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 576 575 577 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3192 [0xfffffffffffff388])) [0 block_header+56 S8 A64])
        (reg:DI 0 ax [289])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 577 576 578 81 (parallel [
            (set (reg/f:DI 0 ax [290])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2320 [0xfffffffffffff6f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:264 218 {*adddi_1}
     (nil))
(insn 578 577 579 81 (parallel [
            (set (reg/f:DI 1 dx [291])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:264 218 {*adddi_1}
     (nil))
(insn 579 578 1096 81 (set (reg:DI 2 cx [292])
        (const_int 64 [0x40])) sim2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1096 579 1097 81 (set (reg/f:DI 5 di [290])
        (reg/f:DI 0 ax [290])) sim2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1097 1096 580 81 (set (reg/f:DI 4 si [291])
        (reg/f:DI 1 dx [291])) sim2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 580 1097 581 81 (parallel [
            (set (reg:DI 2 cx [292])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [290])
                (plus:DI (ashift:DI (reg:DI 2 cx [292])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [290])))
            (set (reg/f:DI 4 si [291])
                (plus:DI (ashift:DI (reg:DI 2 cx [292])
                        (const_int 3 [0x3]))
                    (reg/f:DI 4 si [291])))
            (set (mem/j/c:BLK (reg/f:DI 5 di [290]) [0 procpar_info+512 S512 A64])
                (mem/j/c:BLK (reg/f:DI 4 si [291]) [0 procpar_info+0 S512 A64]))
            (use (reg:DI 2 cx [292]))
        ]) sim2fitman.cpp:264 921 {*rep_movdi_rex64}
     (nil))
(insn 581 580 582 81 (set (reg:DI 0 ax [293])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3184 [0xfffffffffffff390])) [0 infile_struct+0 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 582 581 583 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3152 [0xfffffffffffff3b0])) [0 infile_struct+32 S8 A64])
        (reg:DI 0 ax [293])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 583 582 584 81 (set (reg:DI 0 ax [294])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3176 [0xfffffffffffff398])) [0 infile_struct+8 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 584 583 585 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3144 [0xfffffffffffff3b8])) [0 infile_struct+40 S8 A64])
        (reg:DI 0 ax [294])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 585 584 586 81 (set (reg:DI 0 ax [295])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3168 [0xfffffffffffff3a0])) [0 infile_struct+16 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 586 585 587 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3136 [0xfffffffffffff3c0])) [0 infile_struct+48 S8 A64])
        (reg:DI 0 ax [295])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 587 586 588 81 (set (reg:DI 0 ax [296])
        (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3160 [0xfffffffffffff3a8])) [0 infile_struct+24 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 588 587 589 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3128 [0xfffffffffffff3c8])) [0 infile_struct+56 S8 A64])
        (reg:DI 0 ax [296])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 589 588 590 81 (set (reg:SI 0 ax [orig:129 D.5926 ] [129])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:266 90 {*movsi_internal}
     (nil))
(insn 590 589 591 81 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])
        (reg:SI 0 ax [orig:129 D.5926 ] [129])) sim2fitman.cpp:266 90 {*movsi_internal}
     (nil))
(insn 591 590 592 81 (set (reg/f:DI 0 ax [orig:130 D.5931 ] [130])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:267 89 {*movdi_internal}
     (nil))
(insn 592 591 593 81 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (reg/f:DI 0 ax [orig:130 D.5931 ] [130])) sim2fitman.cpp:267 89 {*movdi_internal}
     (nil))
(insn 593 592 594 81 (set (reg:QI 0 ax [orig:131 D.5930 ] [131])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:269 93 {*movqi_internal}
     (nil))
(insn 594 593 595 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:131 D.5930 ] [131])
            (const_int 0 [0]))) sim2fitman.cpp:269 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 595 594 596 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) sim2fitman.cpp:269 612 {*jcc_1}
     (nil)
 -> 699)
;;  succ:       82 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 596 595 597 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:269 7 {*cmpsi_1}
     (nil))
(jump_insn 598 597 599 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) sim2fitman.cpp:269 612 {*jcc_1}
     (nil)
 -> 699)
;;  succ:       83 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 297 298 299 300 301 302
(note 599 598 600 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 83 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3148 [0xfffffffffffff3b4])) [0 infile_struct[1].num_unsup_sets+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:271 90 {*movsi_internal}
     (nil))
(insn 601 600 602 83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f5944f513f0 *.LC5>)) sim2fitman.cpp:272 89 {*movdi_internal}
     (nil))
(call_insn 602 601 603 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:272 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 603 602 604 83 (parallel [
            (set (reg:DI 0 ax [297])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 604 603 605 83 (parallel [
            (set (reg:DI 1 dx [298])
                (plus:DI (reg:DI 0 ax [297])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 605 604 606 83 (parallel [
            (set (reg:DI 0 ax [299])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 606 605 607 83 (parallel [
            (set (reg:DI 2 cx [300])
                (plus:DI (reg:DI 0 ax [299])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 607 606 608 83 (parallel [
            (set (reg:DI 0 ax [301])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 608 607 610 83 (parallel [
            (set (reg:DI 0 ax [302])
                (plus:DI (reg:DI 0 ax [301])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 218 {*adddi_1}
     (nil))
(insn 610 608 611 83 (set (reg:DI 4 si)
        (reg:DI 2 cx [300])) sim2fitman.cpp:273 89 {*movdi_internal}
     (nil))
(insn 611 610 612 83 (set (reg:DI 5 di)
        (reg:DI 0 ax [302])) sim2fitman.cpp:273 89 {*movdi_internal}
     (nil))
(call_insn 612 611 1077 83 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f5945310438 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:273 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1077 612 1078 83 (set (pc)
        (label_ref 699)) 654 {jump}
     (nil)
 -> 699)
;;  succ:       92 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1078 1077 615)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 132 133 303 304 305 306 307 308 309 310 311
(code_label 615 1078 616 84 40 "" [1 uses])
(note 616 615 617 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 617 616 618 84 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f5944f51630 *.LC6>)) sim2fitman.cpp:278 89 {*movdi_internal}
     (nil))
(call_insn 618 617 619 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:278 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 619 618 620 84 (set (reg/f:DI 0 ax [orig:132 D.5931 ] [132])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:281 89 {*movdi_internal}
     (nil))
(insn 620 619 621 84 (parallel [
            (set (reg:DI 1 dx [303])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 621 620 622 84 (parallel [
            (set (reg:DI 38 r9 [304])
                (plus:DI (reg:DI 1 dx [303])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 622 621 623 84 (parallel [
            (set (reg:DI 1 dx [305])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 623 622 624 84 (parallel [
            (set (reg:DI 37 r8 [306])
                (plus:DI (reg:DI 1 dx [305])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 624 623 625 84 (parallel [
            (set (reg:DI 1 dx [307])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 625 624 626 84 (parallel [
            (set (reg:DI 2 cx [308])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 626 625 627 84 (parallel [
            (set (reg:DI 4 si [309])
                (plus:DI (reg:DI 2 cx [308])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 627 626 628 84 (parallel [
            (set (reg:DI 2 cx [310])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 628 627 631 84 (parallel [
            (set (reg:DI 5 di [311])
                (plus:DI (reg:DI 2 cx [310])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 218 {*adddi_1}
     (nil))
(insn 631 628 632 84 (set (reg:DI 2 cx)
        (reg:DI 1 dx [307])) sim2fitman.cpp:282 89 {*movdi_internal}
     (nil))
(insn 632 631 635 84 (set (reg:DI 1 dx)
        (reg/f:DI 0 ax [orig:132 D.5931 ] [132])) sim2fitman.cpp:282 89 {*movdi_internal}
     (nil))
(call_insn 635 632 636 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f59452e4e58 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:282 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 636 635 637 84 (set (reg:SI 0 ax [orig:133 D.5926 ] [133])
        (reg:SI 0 ax)) sim2fitman.cpp:282 90 {*movsi_internal}
     (nil))
(insn 637 636 638 84 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 0 ax [orig:133 D.5926 ] [133])) sim2fitman.cpp:282 90 {*movsi_internal}
     (nil))
(insn 638 637 639 84 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3148 [0xfffffffffffff3b4])) [0 infile_struct[1].num_unsup_sets+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:285 90 {*movsi_internal}
     (nil))
(insn 639 638 640 84 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:287 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 640 639 641 84 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) sim2fitman.cpp:287 612 {*jcc_1}
     (nil)
 -> 683)
;;  succ:       85 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 641 640 642 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:288 7 {*cmpsi_1}
     (nil))
(jump_insn 643 642 644 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 653)
            (pc))) sim2fitman.cpp:288 612 {*jcc_1}
     (nil)
 -> 653)
;;  succ:       86 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 312 313 314
(note 644 643 645 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 86 (parallel [
            (set (reg:DI 0 ax [312])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 218 {*adddi_1}
     (nil))
(insn 646 645 647 86 (parallel [
            (set (reg:DI 1 dx [313])
                (plus:DI (reg:DI 0 ax [312])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 218 {*adddi_1}
     (nil))
(insn 647 646 648 86 (parallel [
            (set (reg:DI 0 ax [314])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 218 {*adddi_1}
     (nil))
(insn 648 647 649 86 (set (reg:DI 4 si)
        (reg:DI 1 dx [313])) sim2fitman.cpp:289 89 {*movdi_internal}
     (nil))
(insn 649 648 650 86 (set (reg:DI 5 di)
        (reg:DI 0 ax [314])) sim2fitman.cpp:289 89 {*movdi_internal}
     (nil))
(call_insn 650 649 1079 86 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x7f5945310ca8 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:289 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1079 650 1080 86 (set (pc)
        (label_ref 683)) 654 {jump}
     (nil)
 -> 683)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1080 1079 653)
;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 653 1080 654 87 43 "" [1 uses])
(note 654 653 655 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 655 654 656 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:290 7 {*cmpsi_1}
     (nil))
(jump_insn 656 655 657 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 669)
            (pc))) sim2fitman.cpp:290 612 {*jcc_1}
     (nil)
 -> 669)
;;  succ:       88 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 315 316 317 318 319
(note 657 656 658 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 88 (parallel [
            (set (reg:DI 0 ax [315])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 218 {*adddi_1}
     (nil))
(insn 659 658 660 88 (parallel [
            (set (reg:DI 1 dx [316])
                (plus:DI (reg:DI 0 ax [315])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 218 {*adddi_1}
     (nil))
(insn 660 659 661 88 (parallel [
            (set (reg:DI 0 ax [317])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 218 {*adddi_1}
     (nil))
(insn 661 660 662 88 (parallel [
            (set (reg:DI 2 cx [318])
                (plus:DI (reg:DI 0 ax [317])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 218 {*adddi_1}
     (nil))
(insn 662 661 664 88 (parallel [
            (set (reg:DI 0 ax [319])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 218 {*adddi_1}
     (nil))
(insn 664 662 665 88 (set (reg:DI 4 si)
        (reg:DI 2 cx [318])) sim2fitman.cpp:291 89 {*movdi_internal}
     (nil))
(insn 665 664 666 88 (set (reg:DI 5 di)
        (reg:DI 0 ax [319])) sim2fitman.cpp:291 89 {*movdi_internal}
     (nil))
(call_insn 666 665 1081 88 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f5945310e58 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:291 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1081 666 1082 88 (set (pc)
        (label_ref 683)) 654 {jump}
     (nil)
 -> 683)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1082 1081 669)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 669 1082 670 89 44 "" [1 uses])
(note 670 669 671 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:292 7 {*cmpsi_1}
     (nil))
(jump_insn 672 671 673 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) sim2fitman.cpp:292 612 {*jcc_1}
     (nil)
 -> 683)
;;  succ:       90 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 320 321 322 323 324
(note 673 672 674 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 90 (parallel [
            (set (reg:DI 0 ax [320])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 218 {*adddi_1}
     (nil))
(insn 675 674 676 90 (parallel [
            (set (reg:DI 1 dx [321])
                (plus:DI (reg:DI 0 ax [320])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 218 {*adddi_1}
     (nil))
(insn 676 675 677 90 (parallel [
            (set (reg:DI 0 ax [322])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 218 {*adddi_1}
     (nil))
(insn 677 676 678 90 (parallel [
            (set (reg:DI 2 cx [323])
                (plus:DI (reg:DI 0 ax [322])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 218 {*adddi_1}
     (nil))
(insn 678 677 680 90 (parallel [
            (set (reg:DI 0 ax [324])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 218 {*adddi_1}
     (nil))
(insn 680 678 681 90 (set (reg:DI 4 si)
        (reg:DI 2 cx [323])) sim2fitman.cpp:293 89 {*movdi_internal}
     (nil))
(insn 681 680 682 90 (set (reg:DI 5 di)
        (reg:DI 0 ax [324])) sim2fitman.cpp:293 89 {*movdi_internal}
     (nil))
(call_insn 682 681 683 90 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x7f5945315000 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:293 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84
;;              86 [100.0%] 
;;              89
;;              90 (FALLTHRU)
;;              88 [100.0%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 325 326 327 328 329 330
(code_label 683 682 684 91 42 "" [4 uses])
(note 684 683 685 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 91 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f5944f513f0 *.LC5>)) sim2fitman.cpp:298 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:298 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 687 686 688 91 (parallel [
            (set (reg:DI 0 ax [325])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 688 687 689 91 (parallel [
            (set (reg:DI 1 dx [326])
                (plus:DI (reg:DI 0 ax [325])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 689 688 690 91 (parallel [
            (set (reg:DI 0 ax [327])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 690 689 691 91 (parallel [
            (set (reg:DI 2 cx [328])
                (plus:DI (reg:DI 0 ax [327])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 691 690 692 91 (parallel [
            (set (reg:DI 0 ax [329])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 692 691 694 91 (parallel [
            (set (reg:DI 0 ax [330])
                (plus:DI (reg:DI 0 ax [329])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 218 {*adddi_1}
     (nil))
(insn 694 692 695 91 (set (reg:DI 4 si)
        (reg:DI 2 cx [328])) sim2fitman.cpp:299 89 {*movdi_internal}
     (nil))
(insn 695 694 696 91 (set (reg:DI 5 di)
        (reg:DI 0 ax [330])) sim2fitman.cpp:299 89 {*movdi_internal}
     (nil))
(call_insn 696 695 699 91 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x7f5945310438 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:299 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              91 (FALLTHRU)
;;              81
;;              82
;;              83 [100.0%] 
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134
(code_label 699 696 700 92 39 "" [4 uses])
(note 700 699 701 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 92 (set (reg:QI 0 ax [orig:134 D.5930 ] [134])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:305 93 {*movqi_internal}
     (nil))
(insn 702 701 703 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:134 D.5930 ] [134])
            (const_int 0 [0]))) sim2fitman.cpp:305 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 703 702 704 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 707)
            (pc))) sim2fitman.cpp:305 612 {*jcc_1}
     (nil)
 -> 707)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 704 703 705 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 93 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f5944f516c0 *.LC7>)) sim2fitman.cpp:306 89 {*movdi_internal}
     (nil))
(call_insn 706 705 707 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:306 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92
;;              93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 135 331 332 333
(code_label 707 706 708 94 45 "" [1 uses])
(note 708 707 709 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 94 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:309 90 {*movsi_internal}
     (nil))
(insn 710 709 711 94 (parallel [
            (set (reg:DI 0 ax [331])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 218 {*adddi_1}
     (nil))
(insn 711 710 712 94 (parallel [
            (set (reg:DI 1 dx [332])
                (plus:DI (reg:DI 0 ax [331])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 218 {*adddi_1}
     (nil))
(insn 712 711 713 94 (parallel [
            (set (reg:DI 0 ax [333])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 218 {*adddi_1}
     (nil))
(insn 713 712 714 94 (set (reg:DI 4 si)
        (reg:DI 1 dx [332])) sim2fitman.cpp:320 89 {*movdi_internal}
     (nil))
(insn 714 713 715 94 (set (reg:DI 5 di)
        (reg:DI 0 ax [333])) sim2fitman.cpp:320 89 {*movdi_internal}
     (nil))
(call_insn/i 715 714 716 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f59453fa360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:320 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 716 715 717 94 (set (reg:SI 0 ax [orig:135 D.5926 ] [135])
        (reg:SI 0 ax)) sim2fitman.cpp:320 90 {*movsi_internal}
     (nil))
(insn 717 716 718 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:135 D.5926 ] [135])
            (const_int 0 [0]))) sim2fitman.cpp:320 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 718 717 719 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) sim2fitman.cpp:320 612 {*jcc_1}
     (nil)
 -> 734)
;;  succ:       95 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 334 335
(note 719 718 720 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 720 719 721 95 (parallel [
            (set (reg:DI 0 ax [334])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:321 218 {*adddi_1}
     (nil))
(insn 721 720 722 95 (parallel [
            (set (reg:DI 0 ax [335])
                (plus:DI (reg:DI 0 ax [334])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:321 218 {*adddi_1}
     (nil))
(insn 722 721 723 95 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f5944f512d0 *.LC3>)) sim2fitman.cpp:321 89 {*movdi_internal}
     (nil))
(insn 723 722 724 95 (set (reg:DI 5 di)
        (reg:DI 0 ax [335])) sim2fitman.cpp:321 89 {*movdi_internal}
     (nil))
(call_insn/i 724 723 725 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f59453fa360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:321 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 725 724 726 95 (set (reg:SI 0 ax [orig:136 D.5926 ] [136])
        (reg:SI 0 ax)) sim2fitman.cpp:321 90 {*movsi_internal}
     (nil))
(insn 726 725 727 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:136 D.5926 ] [136])
            (const_int 0 [0]))) sim2fitman.cpp:320 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 727 726 728 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) sim2fitman.cpp:320 612 {*jcc_1}
     (nil)
 -> 734)
;;  succ:       96 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137 138
(note 728 727 729 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 96 (set (reg:SI 0 ax [orig:137 D.5926 ] [137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:322 90 {*movsi_internal}
     (nil))
(insn 730 729 731 96 (parallel [
            (set (reg:SI 0 ax [orig:138 D.5926 ] [138])
                (plus:SI (reg:SI 0 ax [orig:137 D.5926 ] [137])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:322 217 {*addsi_1}
     (nil))
(insn 731 730 1083 96 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 0 ax [orig:138 D.5926 ] [138])) sim2fitman.cpp:322 90 {*movsi_internal}
     (nil))
(jump_insn 1083 731 1084 96 (set (pc)
        (label_ref 748)) sim2fitman.cpp:322 654 {jump}
     (nil)
 -> 748)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1084 1083 734)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;;              95
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 734 1084 735 97 46 "" [2 uses])
(note 735 734 736 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:325 7 {*cmpsi_1}
     (nil))
(jump_insn 737 736 738 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 744)
            (pc))) sim2fitman.cpp:325 612 {*jcc_1}
     (nil)
 -> 744)
;;  succ:       98 (FALLTHRU)
;;              99
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 139 140
(note 738 737 739 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 98 (set (reg:SI 0 ax [orig:139 D.5926 ] [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:326 90 {*movsi_internal}
     (nil))
(insn 740 739 741 98 (parallel [
            (set (reg:SI 0 ax [orig:140 D.5926 ] [140])
                (plus:SI (reg:SI 0 ax [orig:139 D.5926 ] [139])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:326 217 {*addsi_1}
     (nil))
(insn 741 740 1085 98 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 0 ax [orig:140 D.5926 ] [140])) sim2fitman.cpp:326 90 {*movsi_internal}
     (nil))
(jump_insn 1085 741 1086 98 (set (pc)
        (label_ref 748)) 654 {jump}
     (nil)
 -> 748)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1086 1085 744)
;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 141
(code_label 744 1086 745 99 48 "" [1 uses])
(note 745 744 746 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 99 (set (reg:SI 0 ax [orig:141 D.5926 ] [141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:330 90 {*movsi_internal}
     (nil))
(insn 747 746 748 99 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 0 ax [orig:141 D.5926 ] [141])) sim2fitman.cpp:330 90 {*movsi_internal}
     (nil))
;;  succ:       100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;;              96 [100.0%] 
;;              98 [100.0%] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 142 143 336 337 338 339 340 341 342 343 344 345 346
(code_label 748 747 749 100 47 "" [2 uses])
(note 749 748 750 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 750 749 751 100 (set (reg:QI 0 ax [orig:142 D.5930 ] [142])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])) sim2fitman.cpp:340 93 {*movqi_internal}
     (nil))
(insn 751 750 752 100 (set (reg:SI 5 di [orig:143 D.5926 ] [143])
        (zero_extend:SI (reg:QI 0 ax [orig:142 D.5930 ] [142]))) sim2fitman.cpp:340 138 {*zero_extendqisi2}
     (nil))
(insn 752 751 753 100 (parallel [
            (set (reg:DI 38 r9 [336])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3312 [0xfffffffffffff310])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 753 752 754 100 (parallel [
            (set (reg:DI 39 r10 [337])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 754 753 755 100 (parallel [
            (set (reg:DI 2 cx [338])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 755 754 756 100 (parallel [
            (set (reg:DI 1 dx [339])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 756 755 757 100 (parallel [
            (set (reg:DI 4 si [340])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 757 756 758 100 (parallel [
            (set (reg:DI 0 ax [341])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3380 [0xfffffffffffff2cc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 758 757 759 100 (parallel [
            (set (reg:DI 37 r8 [342])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 759 758 760 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 37 r8 [342])) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 760 759 761 100 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 5 di [orig:143 D.5926 ] [143])) sim2fitman.cpp:341 69 {*pushsi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 761 760 762 100 (parallel [
            (set (reg:DI 5 di [343])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 762 761 763 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [343])) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 763 762 764 100 (parallel [
            (set (reg:DI 5 di [344])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3296 [0xfffffffffffff320])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 764 763 765 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [344])) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 765 764 766 100 (parallel [
            (set (reg:DI 5 di [345])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3328 [0xfffffffffffff300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 766 765 767 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [345])) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 767 766 768 100 (parallel [
            (set (reg:DI 5 di [346])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (nil))
(insn 768 767 770 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 5 di [346])) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 770 768 774 100 (set (reg:DI 37 r8)
        (reg:DI 39 r10 [337])) sim2fitman.cpp:341 89 {*movdi_internal}
     (nil))
(insn 774 770 775 100 (set (reg:DI 5 di)
        (reg:DI 0 ax [341])) sim2fitman.cpp:341 89 {*movdi_internal}
     (nil))
(call_insn 775 774 776 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9read_dataPiP10PreprocessP7IOFilesP16Data_file_headerP17Data_block_headerP10Precision2PP8_IO_FILEP10Precision1PPfSG_iP13InFile_struct") [flags 0x41]  <function_decl 0x7f594530a0d8 read_data>) [0 read_data S1 A8])
            (const_int 48 [0x30]))) sim2fitman.cpp:341 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 776 775 777 100 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 777 776 836 100 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:353 90 {*movsi_internal}
     (nil))
;;  succ:       101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;;              105 [100.0%] 
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 144
(code_label 836 777 778 101 52 "" [1 uses])
(note 778 836 779 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 779 778 780 101 (set (reg:SI 0 ax [orig:144 D.5926 ] [144])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])) sim2fitman.cpp:353 90 {*movsi_internal}
     (nil))
(insn 780 779 781 101 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
            (reg:SI 0 ax [orig:144 D.5926 ] [144]))) sim2fitman.cpp:353 7 {*cmpsi_1}
     (nil))
(jump_insn 781 780 782 101 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 839)
            (pc))) sim2fitman.cpp:353 612 {*jcc_1}
     (nil)
 -> 839)
;;  succ:       106
;;              102 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 782 781 783 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 783 782 830 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
;;  succ:       103 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;;              104 [100.0%] 
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 146 147 347 348 349 350 351 352
(code_label 830 783 784 103 51 "" [1 uses])
(note 784 830 785 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 103 (set (reg:SI 0 ax [347])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
(insn 786 785 787 103 (set (reg:DI 0 ax [orig:145 D.5932 ] [145])
        (sign_extend:DI (reg:SI 0 ax [347]))) sim2fitman.cpp:359 142 {*extendsidi2_rex64}
     (nil))
(insn 787 786 788 103 (set (reg:SI 1 dx [349])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
(insn 788 787 789 103 (set (reg:DI 1 dx [348])
        (sign_extend:DI (reg:SI 1 dx [349]))) sim2fitman.cpp:359 142 {*extendsidi2_rex64}
     (nil))
(insn 789 788 790 103 (parallel [
            (set (reg:DI 1 dx [350])
                (ashift:DI (reg:DI 1 dx [348])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 512 {*ashldi3_1}
     (nil))
(insn 790 789 791 103 (parallel [
            (set (reg:DI 1 dx [351])
                (plus:DI (reg:DI 1 dx [350])
                    (reg/f:DI 6 bp)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 218 {*adddi_1}
     (nil))
(insn 791 790 792 103 (parallel [
            (set (reg/f:DI 1 dx [352])
                (plus:DI (reg:DI 1 dx [351])
                    (const_int -3104 [0xfffffffffffff3e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 218 {*adddi_1}
     (nil))
(insn 792 791 793 103 (set (reg:DI 1 dx [orig:146 D.5932 ] [146])
        (mem/j:DI (reg/f:DI 1 dx [352]) [0 main_header[i_1].np.number+0 S8 A64])) sim2fitman.cpp:359 89 {*movdi_internal}
     (nil))
(insn 793 792 794 103 (parallel [
            (set (reg:DI 1 dx [orig:147 D.5932 ] [147])
                (ashift:DI (reg:DI 1 dx [orig:146 D.5932 ] [146])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 512 {*ashldi3_1}
     (nil))
(insn 794 793 795 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:145 D.5932 ] [145])
            (reg:DI 1 dx [orig:147 D.5932 ] [147]))) sim2fitman.cpp:359 8 {*cmpdi_1}
     (nil))
(jump_insn 795 794 796 103 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 833)
            (pc))) sim2fitman.cpp:359 612 {*jcc_1}
     (nil)
 -> 833)
;;  succ:       105
;;              104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 353 354 355 356 357 358 359 360 361 362 363 364
(note 796 795 797 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 104 (set (reg:SI 0 ax [354])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 798 797 799 104 (set (reg:DI 0 ax [353])
        (sign_extend:DI (reg:SI 0 ax [354]))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (nil))
(insn 799 798 800 104 (set (reg/f:DI 0 ax [orig:148 D.5933 ] [148])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [353])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3296 [0xfffffffffffff320])) [0 out_data S8 A64])) sim2fitman.cpp:361 89 {*movdi_internal}
     (nil))
(insn 800 799 801 104 (set (reg:SI 1 dx [355])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 801 800 802 104 (set (reg:DI 1 dx [orig:149 D.5927 ] [149])
        (sign_extend:DI (reg:SI 1 dx [355]))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (nil))
(insn 802 801 803 104 (parallel [
            (set (reg:DI 1 dx [orig:150 D.5927 ] [150])
                (ashift:DI (reg:DI 1 dx [orig:149 D.5927 ] [149])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 512 {*ashldi3_1}
     (nil))
(insn 803 802 804 104 (parallel [
            (set (reg/f:DI 1 dx [orig:151 D.5933 ] [151])
                (plus:DI (reg:DI 1 dx [orig:150 D.5927 ] [150])
                    (reg/f:DI 0 ax [orig:148 D.5933 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 218 {*adddi_1}
     (nil))
(insn 804 803 805 104 (set (reg:SI 0 ax [357])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 805 804 806 104 (set (reg:DI 0 ax [356])
        (sign_extend:DI (reg:SI 0 ax [357]))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (nil))
(insn 806 805 807 104 (set (reg/f:DI 0 ax [orig:152 D.5933 ] [152])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [356])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[i_1].fl+0 S8 A64])) sim2fitman.cpp:361 89 {*movdi_internal}
     (nil))
(insn 807 806 808 104 (set (reg:SI 2 cx [358])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 808 807 809 104 (set (reg:DI 2 cx [orig:153 D.5927 ] [153])
        (sign_extend:DI (reg:SI 2 cx [358]))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (nil))
(insn 809 808 810 104 (parallel [
            (set (reg:DI 2 cx [orig:154 D.5927 ] [154])
                (ashift:DI (reg:DI 2 cx [orig:153 D.5927 ] [153])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 512 {*ashldi3_1}
     (nil))
(insn 810 809 811 104 (parallel [
            (set (reg/f:DI 0 ax [orig:155 D.5933 ] [155])
                (plus:DI (reg/f:DI 0 ax [orig:152 D.5933 ] [152])
                    (reg:DI 2 cx [orig:154 D.5927 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 218 {*adddi_1}
     (nil))
(insn 811 810 812 104 (set (reg:SF 21 xmm0 [orig:156 D.5934 ] [156])
        (mem:SF (reg/f:DI 0 ax [orig:155 D.5933 ] [155]) [0 *_194+0 S4 A32])) sim2fitman.cpp:361 129 {*movsf_internal}
     (nil))
(insn 812 811 813 104 (set (mem:SF (reg/f:DI 1 dx [orig:151 D.5933 ] [151]) [0 *_190+0 S4 A32])
        (reg:SF 21 xmm0 [orig:156 D.5934 ] [156])) sim2fitman.cpp:361 129 {*movsf_internal}
     (nil))
(insn 813 812 814 104 (set (reg:SI 0 ax [360])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 814 813 815 104 (set (reg:DI 0 ax [359])
        (sign_extend:DI (reg:SI 0 ax [360]))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (nil))
(insn 815 814 816 104 (set (reg/f:DI 0 ax [orig:157 D.5933 ] [157])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [359])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3280 [0xfffffffffffff330])) [0 scratch_data S8 A64])) sim2fitman.cpp:368 89 {*movdi_internal}
     (nil))
(insn 816 815 817 104 (set (reg:SI 1 dx [361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 817 816 818 104 (set (reg:DI 1 dx [orig:158 D.5927 ] [158])
        (sign_extend:DI (reg:SI 1 dx [361]))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (nil))
(insn 818 817 819 104 (parallel [
            (set (reg:DI 1 dx [orig:159 D.5927 ] [159])
                (ashift:DI (reg:DI 1 dx [orig:158 D.5927 ] [158])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 512 {*ashldi3_1}
     (nil))
(insn 819 818 820 104 (parallel [
            (set (reg/f:DI 1 dx [orig:160 D.5933 ] [160])
                (plus:DI (reg:DI 1 dx [orig:159 D.5927 ] [159])
                    (reg/f:DI 0 ax [orig:157 D.5933 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 218 {*adddi_1}
     (nil))
(insn 820 819 821 104 (set (reg:SI 0 ax [363])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 821 820 822 104 (set (reg:DI 0 ax [362])
        (sign_extend:DI (reg:SI 0 ax [363]))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (nil))
(insn 822 821 823 104 (set (reg/f:DI 0 ax [orig:161 D.5933 ] [161])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [362])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[i_1].fl+0 S8 A64])) sim2fitman.cpp:368 89 {*movdi_internal}
     (nil))
(insn 823 822 824 104 (set (reg:SI 2 cx [364])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 824 823 825 104 (set (reg:DI 2 cx [orig:162 D.5927 ] [162])
        (sign_extend:DI (reg:SI 2 cx [364]))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (nil))
(insn 825 824 826 104 (parallel [
            (set (reg:DI 2 cx [orig:163 D.5927 ] [163])
                (ashift:DI (reg:DI 2 cx [orig:162 D.5927 ] [162])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 512 {*ashldi3_1}
     (nil))
(insn 826 825 827 104 (parallel [
            (set (reg/f:DI 0 ax [orig:164 D.5933 ] [164])
                (plus:DI (reg/f:DI 0 ax [orig:161 D.5933 ] [161])
                    (reg:DI 2 cx [orig:163 D.5927 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 218 {*adddi_1}
     (nil))
(insn 827 826 828 104 (set (reg:SF 21 xmm0 [orig:165 D.5934 ] [165])
        (mem:SF (reg/f:DI 0 ax [orig:164 D.5933 ] [164]) [0 *_204+0 S4 A32])) sim2fitman.cpp:368 129 {*movsf_internal}
     (nil))
(insn 828 827 829 104 (set (mem:SF (reg/f:DI 1 dx [orig:160 D.5933 ] [160]) [0 *_200+0 S4 A32])
        (reg:SF 21 xmm0 [orig:165 D.5934 ] [165])) sim2fitman.cpp:368 129 {*movsf_internal}
     (nil))
(insn 829 828 1087 104 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 217 {*addsi_1}
     (nil))
(jump_insn 1087 829 1088 104 (set (pc)
        (label_ref 830)) sim2fitman.cpp:359 654 {jump}
     (nil)
 -> 830)
;;  succ:       103 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1088 1087 833)
;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 833 1088 834 105 50 "" [1 uses])
(note 834 833 835 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 1089 105 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:353 217 {*addsi_1}
     (nil))
(jump_insn 1089 835 1090 105 (set (pc)
        (label_ref 836)) sim2fitman.cpp:353 654 {jump}
     (nil)
 -> 836)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1090 1089 839)
;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 166
(code_label 839 1090 840 106 49 "" [1 uses])
(note 840 839 841 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 106 (set (reg:QI 0 ax [orig:166 D.5930 ] [166])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:385 93 {*movqi_internal}
     (nil))
(insn 842 841 843 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:166 D.5930 ] [166])
            (const_int 0 [0]))) sim2fitman.cpp:385 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 843 842 844 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 847)
            (pc))) sim2fitman.cpp:385 612 {*jcc_1}
     (nil)
 -> 847)
;;  succ:       107 (FALLTHRU)
;;              108
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 844 843 845 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 107 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f5944f9a090 *.LC8>)) sim2fitman.cpp:386 89 {*movdi_internal}
     (nil))
(call_insn 846 845 847 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:386 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106
;;              107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 167 365 366 367 368 369
(code_label 847 846 848 108 53 "" [1 uses])
(note 848 847 849 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 849 848 850 108 (parallel [
            (set (reg:DI 5 di [365])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 218 {*adddi_1}
     (nil))
(insn 850 849 851 108 (parallel [
            (set (reg:DI 2 cx [366])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3296 [0xfffffffffffff320])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 218 {*adddi_1}
     (nil))
(insn 851 850 852 108 (parallel [
            (set (reg:DI 1 dx [367])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 218 {*adddi_1}
     (nil))
(insn 852 851 853 108 (parallel [
            (set (reg:DI 4 si [368])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 218 {*adddi_1}
     (nil))
(insn 853 852 854 108 (parallel [
            (set (reg:DI 0 ax [369])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3380 [0xfffffffffffff2cc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 218 {*adddi_1}
     (nil))
(insn 854 853 858 108 (set (reg:DI 37 r8)
        (reg:DI 5 di [365])) sim2fitman.cpp:389 89 {*movdi_internal}
     (nil))
(insn 858 854 859 108 (set (reg:DI 5 di)
        (reg:DI 0 ax [369])) sim2fitman.cpp:389 89 {*movdi_internal}
     (nil))
(call_insn 859 858 860 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_") [flags 0x41]  <function_decl 0x7f594530a288 pre_process>) [0 pre_process S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:389 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 860 859 861 108 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f5944f9a120 *.LC9>)) sim2fitman.cpp:391 89 {*movdi_internal}
     (nil))
(call_insn 861 860 862 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:391 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 862 861 863 108 (set (reg:QI 0 ax [orig:167 D.5930 ] [167])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:400 93 {*movqi_internal}
     (nil))
(insn 863 862 864 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:167 D.5930 ] [167])
            (const_int 0 [0]))) sim2fitman.cpp:400 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 864 863 865 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 868)
            (pc))) sim2fitman.cpp:400 612 {*jcc_1}
     (nil)
 -> 868)
;;  succ:       109 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 865 864 866 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 866 865 867 109 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f5944f9a1b0 *.LC10>)) sim2fitman.cpp:401 89 {*movdi_internal}
     (nil))
(call_insn 867 866 868 109 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:401 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108
;;              109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 168
(code_label 868 867 869 110 54 "" [1 uses])
(note 869 868 870 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 870 869 871 110 (set (reg:QI 0 ax [orig:168 D.5930 ] [168])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:405 93 {*movqi_internal}
     (nil))
(insn 871 870 872 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:168 D.5930 ] [168])
            (const_int 0 [0]))) sim2fitman.cpp:405 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 872 871 873 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 876)
            (pc))) sim2fitman.cpp:405 612 {*jcc_1}
     (nil)
 -> 876)
;;  succ:       111 (FALLTHRU)
;;              112
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 873 872 874 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 875 111 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f5944f9a240 *.LC11>)) sim2fitman.cpp:406 89 {*movdi_internal}
     (nil))
(call_insn 875 874 876 111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:406 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;;              111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 876 875 877 112 55 "" [1 uses])
(note 877 876 878 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:408 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 879 878 880 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 883)
            (pc))) sim2fitman.cpp:408 612 {*jcc_1}
     (nil)
 -> 883)
;;  succ:       114
;;              113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 880 879 881 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 881 880 882 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:408 7 {*cmpsi_1}
     (nil))
(jump_insn 882 881 883 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) sim2fitman.cpp:408 612 {*jcc_1}
     (nil)
 -> 912)
;;  succ:       114 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112
;;              113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 169 170 370 371 372 373 374 375
(code_label 883 882 884 114 56 "" [1 uses])
(note 884 883 885 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 114 (set (reg/f:DI 0 ax [orig:169 D.5933 ] [169])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3296 [0xfffffffffffff320])) [0 out_data+0 S8 A64])) sim2fitman.cpp:410 89 {*movdi_internal}
     (nil))
(insn 886 885 887 114 (parallel [
            (set (reg:DI 37 r8 [370])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 887 886 888 114 (parallel [
            (set (reg:DI 2 cx [371])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 888 887 889 114 (parallel [
            (set (reg:DI 1 dx [372])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 889 888 890 114 (parallel [
            (set (reg:DI 4 si [373])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 890 889 891 114 (parallel [
            (set (reg:DI 5 di [374])
                (plus:DI (reg:DI 4 si [373])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 891 890 892 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 892 891 893 114 (parallel [
            (set (reg:DI 4 si [375])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (nil))
(insn 893 892 894 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 4 si [375])) sim2fitman.cpp:411 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 894 893 895 114 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [370])) sim2fitman.cpp:411 89 {*movdi_internal}
     (nil))
(insn 895 894 898 114 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) sim2fitman.cpp:411 90 {*movsi_internal}
     (nil))
(insn 898 895 900 114 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:169 D.5933 ] [169])) sim2fitman.cpp:411 89 {*movdi_internal}
     (nil))
(call_insn 900 898 901 114 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x7f594530a1b0 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) sim2fitman.cpp:411 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 901 900 902 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 902 901 903 114 (set (reg:QI 0 ax [orig:170 D.5930 ] [170])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:412 93 {*movqi_internal}
     (nil))
(insn 903 902 904 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:170 D.5930 ] [170])
            (const_int 0 [0]))) sim2fitman.cpp:412 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 904 903 905 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) sim2fitman.cpp:412 612 {*jcc_1}
     (nil)
 -> 912)
;;  succ:       115 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 376 377
(note 905 904 906 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 906 905 907 115 (parallel [
            (set (reg:DI 0 ax [376])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:413 218 {*adddi_1}
     (nil))
(insn 907 906 908 115 (parallel [
            (set (reg:DI 0 ax [377])
                (plus:DI (reg:DI 0 ax [376])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:413 218 {*adddi_1}
     (nil))
(insn 908 907 909 115 (set (reg:DI 4 si)
        (reg:DI 0 ax [377])) sim2fitman.cpp:413 89 {*movdi_internal}
     (nil))
(insn 909 908 910 115 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f5944f9a2d0 *.LC12>)) sim2fitman.cpp:413 89 {*movdi_internal}
     (nil))
(insn 910 909 911 115 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman.cpp:413 93 {*movqi_internal}
     (nil))
(call_insn 911 910 912 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f59454055e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:413 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113
;;              114
;;              115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 912 911 913 116 57 "" [2 uses])
(note 913 912 914 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:416 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 915 914 916 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 919)
            (pc))) sim2fitman.cpp:416 612 {*jcc_1}
     (nil)
 -> 919)
;;  succ:       118
;;              117 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 916 915 917 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 917 916 918 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:416 7 {*cmpsi_1}
     (nil))
(jump_insn 918 917 919 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) sim2fitman.cpp:416 612 {*jcc_1}
     (nil)
 -> 952)
;;  succ:       118 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116
;;              117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 172 378 379 380 381 382 383 384 385 386 387
(code_label 919 918 920 118 58 "" [1 uses])
(note 920 919 921 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 118 (set (reg/f:DI 0 ax [orig:171 D.5933 ] [171])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3288 [0xfffffffffffff328])) [0 out_data+8 S8 A64])) sim2fitman.cpp:418 89 {*movdi_internal}
     (nil))
(insn 922 921 923 118 (parallel [
            (set (reg:DI 1 dx [378])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 923 922 924 118 (parallel [
            (set (reg:DI 37 r8 [379])
                (plus:DI (reg:DI 1 dx [378])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 924 923 925 118 (parallel [
            (set (reg:DI 1 dx [380])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 925 924 926 118 (parallel [
            (set (reg:DI 2 cx [381])
                (plus:DI (reg:DI 1 dx [380])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 926 925 927 118 (parallel [
            (set (reg:DI 1 dx [382])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 927 926 928 118 (parallel [
            (set (reg:DI 1 dx [383])
                (plus:DI (reg:DI 1 dx [382])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 928 927 929 118 (parallel [
            (set (reg:DI 4 si [384])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 929 928 930 118 (parallel [
            (set (reg:DI 5 di [385])
                (plus:DI (reg:DI 4 si [384])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 930 929 931 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 931 930 932 118 (parallel [
            (set (reg:DI 4 si [386])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 932 931 933 118 (parallel [
            (set (reg:DI 4 si [387])
                (plus:DI (reg:DI 4 si [386])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (nil))
(insn 933 932 934 118 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 4 si [387])) sim2fitman.cpp:419 65 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 934 933 935 118 (set (reg:DI 38 r9)
        (reg:DI 37 r8 [379])) sim2fitman.cpp:419 89 {*movdi_internal}
     (nil))
(insn 935 934 938 118 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) sim2fitman.cpp:419 90 {*movsi_internal}
     (nil))
(insn 938 935 940 118 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:171 D.5933 ] [171])) sim2fitman.cpp:419 89 {*movdi_internal}
     (nil))
(call_insn 940 938 941 118 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x7f594530a1b0 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) sim2fitman.cpp:419 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 941 940 942 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 218 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 942 941 943 118 (set (reg:QI 0 ax [orig:172 D.5930 ] [172])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:420 93 {*movqi_internal}
     (nil))
(insn 943 942 944 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:172 D.5930 ] [172])
            (const_int 0 [0]))) sim2fitman.cpp:420 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 944 943 945 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) sim2fitman.cpp:420 612 {*jcc_1}
     (nil)
 -> 952)
;;  succ:       119 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 388 389
(note 945 944 946 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 119 (parallel [
            (set (reg:DI 0 ax [388])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:421 218 {*adddi_1}
     (nil))
(insn 947 946 948 119 (parallel [
            (set (reg:DI 0 ax [389])
                (plus:DI (reg:DI 0 ax [388])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:421 218 {*adddi_1}
     (nil))
(insn 948 947 949 119 (set (reg:DI 4 si)
        (reg:DI 0 ax [389])) sim2fitman.cpp:421 89 {*movdi_internal}
     (nil))
(insn 949 948 950 119 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f5944f9a360 *.LC13>)) sim2fitman.cpp:421 89 {*movdi_internal}
     (nil))
(insn 950 949 951 119 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman.cpp:421 93 {*movqi_internal}
     (nil))
(call_insn 951 950 952 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f59454055e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:421 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;;              118
;;              119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 952 951 953 120 59 "" [2 uses])
(note 953 952 954 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 120 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f5944f9a3f0 *.LC14>)) sim2fitman.cpp:425 89 {*movdi_internal}
     (nil))
(call_insn 955 954 956 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5945406000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:425 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 956 955 975 120 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:428 90 {*movsi_internal}
     (nil))
;;  succ:       121 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;;              124 [100.0%] 
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 975 956 957 121 62 "" [1 uses])
(note 957 975 958 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 958 957 959 121 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:428 7 {*cmpsi_1}
     (nil))
(jump_insn 959 958 960 121 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 978)
            (pc))) sim2fitman.cpp:428 612 {*jcc_1}
     (nil)
 -> 978)
;;  succ:       125
;;              122 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173 390 391
(note 960 959 961 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 961 960 962 122 (set (reg:SI 0 ax [391])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:429 90 {*movsi_internal}
     (nil))
(insn 962 961 963 122 (set (reg:DI 0 ax [390])
        (sign_extend:DI (reg:SI 0 ax [391]))) sim2fitman.cpp:429 142 {*extendsidi2_rex64}
     (nil))
(insn 963 962 964 122 (set (reg/f:DI 0 ax [orig:173 D.5931 ] [173])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [390])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3264 [0xfffffffffffff340])) [0 in_file S8 A64])) sim2fitman.cpp:429 89 {*movdi_internal}
     (nil))
(insn 964 963 965 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:173 D.5931 ] [173])
            (const_int 0 [0]))) sim2fitman.cpp:429 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 965 964 966 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 972)
            (pc))) sim2fitman.cpp:429 612 {*jcc_1}
     (nil)
 -> 972)
;;  succ:       123 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 174 392 393
(note 966 965 967 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 967 966 968 123 (set (reg:SI 0 ax [393])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:430 90 {*movsi_internal}
     (nil))
(insn 968 967 969 123 (set (reg:DI 0 ax [392])
        (sign_extend:DI (reg:SI 0 ax [393]))) sim2fitman.cpp:430 142 {*extendsidi2_rex64}
     (nil))
(insn 969 968 970 123 (set (reg/f:DI 0 ax [orig:174 D.5931 ] [174])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [392])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -3264 [0xfffffffffffff340])) [0 in_file S8 A64])) sim2fitman.cpp:430 89 {*movdi_internal}
     (nil))
(insn 970 969 971 123 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:174 D.5931 ] [174])) sim2fitman.cpp:430 89 {*movdi_internal}
     (nil))
(call_insn 971 970 972 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f59451cb1b0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:430 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       124 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122
;;              123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 972 971 973 124 61 "" [1 uses])
(note 973 972 974 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 1091 124 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:428 217 {*addsi_1}
     (nil))
(jump_insn 1091 974 1092 124 (set (pc)
        (label_ref 975)) sim2fitman.cpp:428 654 {jump}
     (nil)
 -> 975)
;;  succ:       121 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1092 1091 978)
;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 177 178 179
(code_label 978 1092 979 125 60 "" [1 uses])
(note 979 978 980 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 980 979 981 125 (set (reg/f:DI 0 ax [orig:175 D.5935 ] [175])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3328 [0xfffffffffffff300])) [0 in_data[0].lo+0 S8 A64])) sim2fitman.cpp:434 89 {*movdi_internal}
     (nil))
(insn 981 980 982 125 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:175 D.5935 ] [175])) sim2fitman.cpp:434 89 {*movdi_internal}
     (nil))
(call_insn 982 981 983 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:434 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 983 982 984 125 (set (reg/f:DI 0 ax [orig:176 D.5935 ] [176])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[0].lo+0 S8 A64])) sim2fitman.cpp:435 89 {*movdi_internal}
     (nil))
(insn 984 983 985 125 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:176 D.5935 ] [176])) sim2fitman.cpp:435 89 {*movdi_internal}
     (nil))
(call_insn 985 984 986 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:435 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 986 985 987 125 (set (reg/f:DI 0 ax [orig:177 D.5933 ] [177])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3296 [0xfffffffffffff320])) [0 out_data+0 S8 A64])) sim2fitman.cpp:436 89 {*movdi_internal}
     (nil))
(insn 987 986 988 125 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:177 D.5933 ] [177])) sim2fitman.cpp:436 89 {*movdi_internal}
     (nil))
(call_insn 988 987 989 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:436 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 989 988 990 125 (set (reg/f:DI 0 ax [orig:178 D.5933 ] [178])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3280 [0xfffffffffffff330])) [0 scratch_data+0 S8 A64])) sim2fitman.cpp:437 89 {*movdi_internal}
     (nil))
(insn 990 989 991 125 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:178 D.5933 ] [178])) sim2fitman.cpp:437 89 {*movdi_internal}
     (nil))
(call_insn 991 990 992 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:437 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 992 991 993 125 (set (reg:SI 0 ax [orig:179 D.5926 ] [179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:439 90 {*movsi_internal}
     (nil))
(insn 993 992 994 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:179 D.5926 ] [179])
            (const_int 1 [0x1]))) sim2fitman.cpp:439 7 {*cmpsi_1}
     (nil))
(jump_insn 994 993 995 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1008)
            (pc))) sim2fitman.cpp:439 612 {*jcc_1}
     (nil)
 -> 1008)
;;  succ:       126 (FALLTHRU)
;;              127
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 180 181 182 183
(note 995 994 996 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 126 (set (reg/f:DI 0 ax [orig:180 D.5935 ] [180])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3320 [0xfffffffffffff308])) [0 in_data[1].lo+0 S8 A64])) sim2fitman.cpp:440 89 {*movdi_internal}
     (nil))
(insn 997 996 998 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:180 D.5935 ] [180])) sim2fitman.cpp:440 89 {*movdi_internal}
     (nil))
(call_insn 998 997 999 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:440 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 999 998 1000 126 (set (reg/f:DI 0 ax [orig:181 D.5935 ] [181])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3304 [0xfffffffffffff318])) [0 switch_data[1].lo+0 S8 A64])) sim2fitman.cpp:441 89 {*movdi_internal}
     (nil))
(insn 1000 999 1001 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:181 D.5935 ] [181])) sim2fitman.cpp:441 89 {*movdi_internal}
     (nil))
(call_insn 1001 1000 1002 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:441 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1002 1001 1003 126 (set (reg/f:DI 0 ax [orig:182 D.5933 ] [182])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3288 [0xfffffffffffff328])) [0 out_data+8 S8 A64])) sim2fitman.cpp:442 89 {*movdi_internal}
     (nil))
(insn 1003 1002 1004 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:182 D.5933 ] [182])) sim2fitman.cpp:442 89 {*movdi_internal}
     (nil))
(call_insn 1004 1003 1005 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:442 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1005 1004 1006 126 (set (reg/f:DI 0 ax [orig:183 D.5933 ] [183])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -3272 [0xfffffffffffff338])) [0 scratch_data+8 S8 A64])) sim2fitman.cpp:443 89 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:183 D.5933 ] [183])) sim2fitman.cpp:443 89 {*movdi_internal}
     (nil))
(call_insn 1007 1006 1008 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f59454261b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:443 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125
;;              126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 184 185
(code_label 1008 1007 1009 127 63 "" [1 uses])
(note 1009 1008 1010 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1010 1009 1013 127 (set (reg:SI 0 ax [orig:184 D.5926 ] [184])
        (const_int 0 [0])) sim2fitman.cpp:446 90 {*movsi_internal}
     (nil))
(insn 1013 1010 1017 127 (set (reg:SI 0 ax [orig:185 <retval> ] [185])
        (reg:SI 0 ax [orig:184 D.5926 ] [184])) 90 {*movsi_internal}
     (nil))
(insn 1017 1013 1018 127 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:185 <retval> ] [185])) sim2fitman.cpp:448 90 {*movsi_internal}
     (nil))
(insn 1018 1017 1019 127 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5936+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [396]))
        ]) sim2fitman.cpp:448 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1019 1018 1025 127 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) sim2fitman.cpp:448 612 {*jcc_1}
     (nil)
 -> 1022)
;;  succ:       129
;;              128 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1025 1019 1020 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(call_insn 1020 1025 1021 128 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f5944f605e8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:448 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1021 1020 1022)
;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1022 1021 1026 129 65 "" [1 uses])
(note 1026 1022 1023 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1026 1093 129 (use (reg/i:SI 0 ax)) sim2fitman.cpp:448 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1093 1023 0 NOTE_INSN_DELETED)
