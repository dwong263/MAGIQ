
;; Function int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*) (_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header, funcdef_no=2, decl_uid=5410, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 79 n_edges 120 count 79 (    1)
Building IRA IR
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 171.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 226.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 257.
verify found no changes in insn with uid = 265.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 288.
verify found no changes in insn with uid = 295.
verify found no changes in insn with uid = 302.
verify found no changes in insn with uid = 310.
verify found no changes in insn with uid = 317.
verify found no changes in insn with uid = 324.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 339.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 363.
verify found no changes in insn with uid = 370.
verify found no changes in insn with uid = 376.
verify found no changes in insn with uid = 394.
verify found no changes in insn with uid = 401.
verify found no changes in insn with uid = 407.
verify found no changes in insn with uid = 419.
verify found no changes in insn with uid = 426.
verify found no changes in insn with uid = 432.
verify found no changes in insn with uid = 444.
verify found no changes in insn with uid = 451.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 476.
verify found no changes in insn with uid = 482.
verify found no changes in insn with uid = 494.
verify found no changes in insn with uid = 501.
verify found no changes in insn with uid = 507.
verify found no changes in insn with uid = 519.
verify found no changes in insn with uid = 526.
verify found no changes in insn with uid = 532.
verify found no changes in insn with uid = 544.
verify found no changes in insn with uid = 547.
verify found no changes in insn with uid = 572.
verify found no changes in insn with uid = 717.
verify found no changes in insn with uid = 720.
verify found no changes in insn with uid = 723.
verify found no changes in insn with uid = 732.
verify found no changes in insn with uid = 738.
verify found no changes in insn with uid = 746.
verify found no changes in insn with uid = 765.
verify found no changes in insn with uid = 768.
verify found no changes in insn with uid = 772.
verify found no changes in insn with uid = 793.
verify found no changes in insn with uid = 799.
verify found no changes in insn with uid = 843.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r335,l0) best DIREG, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r332,l0) best DIREG, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a27 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r327,l0) best DIREG, allocno GENERAL_REGS
    r326: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r326,l0) best DIREG, allocno GENERAL_REGS
    r325: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a33 (r325,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r324: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r324,l0) best DIREG, allocno GENERAL_REGS
    r323: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r323,l0) best DIREG, allocno GENERAL_REGS
    r322: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r322,l0) best DIREG, allocno GENERAL_REGS
    r321: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r321,l0) best SSE_REGS, allocno SSE_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a53 (r314,l0) best SSE_REGS, allocno SSE_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r288,l0) best DIREG, allocno GENERAL_REGS
    r287: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a103 (r287,l0) best DIREG, allocno GENERAL_REGS
    r286: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r286,l0) best DIREG, allocno GENERAL_REGS
    r285: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r285,l0) best DREG, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r283,l0) best DIREG, allocno GENERAL_REGS
    r282: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r282,l0) best AREG, allocno GENERAL_REGS
    r281: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r281,l0) best DIREG, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r279,l0) best DIREG, allocno GENERAL_REGS
    r278: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r278,l0) best AREG, allocno GENERAL_REGS
    r277: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r277,l0) best DIREG, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r275,l0) best DIREG, allocno GENERAL_REGS
    r274: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r274,l0) best AREG, allocno GENERAL_REGS
    r273: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r273,l0) best DIREG, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r271,l0) best DIREG, allocno GENERAL_REGS
    r270: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r270,l0) best AREG, allocno GENERAL_REGS
    r269: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a133 (r269,l0) best DIREG, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r267,l0) best DIREG, allocno GENERAL_REGS
    r266: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r266,l0) best AREG, allocno GENERAL_REGS
    r265: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r265,l0) best DIREG, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a144 (r263,l0) best DIREG, allocno GENERAL_REGS
    r262: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r262,l0) best AREG, allocno GENERAL_REGS
    r261: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r261,l0) best DIREG, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a150 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r256,l0) best DIREG, allocno GENERAL_REGS
    r255: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a157 (r255,l0) best AREG, allocno GENERAL_REGS
    r254: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r254,l0) best DIREG, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r252,l0) best SSE_REGS, allocno SSE_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a168 (r249,l0) best DIREG, allocno GENERAL_REGS
    r248: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a169 (r248,l0) best AREG, allocno GENERAL_REGS
    r247: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r247,l0) best DIREG, allocno GENERAL_REGS
    r246: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r246,l0) best DIREG, allocno GENERAL_REGS
    r245: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a173 (r245,l0) best SIREG, allocno GENERAL_REGS
    r244: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a174 (r244,l0) best AREG, allocno GENERAL_REGS
    r243: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a176 (r243,l0) best DIREG, allocno GENERAL_REGS
    r242: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a177 (r242,l0) best DIREG, allocno GENERAL_REGS
    r241: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a178 (r241,l0) best SIREG, allocno GENERAL_REGS
    r240: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r240,l0) best AREG, allocno GENERAL_REGS
    r239: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a181 (r239,l0) best DIREG, allocno GENERAL_REGS
    r238: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a183 (r238,l0) best SIREG, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a185 (r236,l0) best AREG, allocno GENERAL_REGS
    r235: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r235,l0) best DIREG, allocno GENERAL_REGS
    r234: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a189 (r234,l0) best SIREG, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a191 (r232,l0) best AREG, allocno GENERAL_REGS
    r231: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a193 (r231,l0) best DIREG, allocno GENERAL_REGS
    r230: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r230,l0) best SIREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a199 (r227,l0) best DIREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r224,l0) best AREG, allocno GENERAL_REGS
    r223: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a205 (r223,l0) best DIREG, allocno GENERAL_REGS
    r222: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a207 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a206 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a210 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a211 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a213 (r217,l0) best DIREG, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a214 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a215 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a217 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r211,l0) best AREG, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a224 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a231 (r206,l0) best DIREG, allocno GENERAL_REGS
    r205: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a232 (r205,l0) best AREG, allocno GENERAL_REGS
    r204: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a234 (r204,l0) best DIREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a237 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a239 (r201,l0) best DIREG, allocno GENERAL_REGS
    r200: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a240 (r200,l0) best AREG, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a242 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a243 (r198,l0) best AREG, allocno GENERAL_REGS
    r197: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a244 (r197,l0) best DIREG, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a249 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a252 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a253 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r192,l0) best DREG, allocno GENERAL_REGS
    r191: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a255 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r190,l0) best AREG, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r179,l0) best AREG, allocno GENERAL_REGS
    r178: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a28 (r178,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r177: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r177,l0) best AREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r175,l0) best AREG, allocno GENERAL_REGS
    r174: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a37 (r174,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a45 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a46 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r149,l0) best AREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a107 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a108 (r143,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r142: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r142,l0) best AREG, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a114 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a115 (r140,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r139: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r139,l0) best AREG, allocno GENERAL_REGS
    r138: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a121 (r138,l0) best SSE_REGS, allocno SSE_REGS
    r137: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a122 (r137,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a125 (r136,l0) best AREG, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a128 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a129 (r134,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r133,l0) best AREG, allocno GENERAL_REGS
    r132: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a135 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a136 (r131,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r130,l0) best AREG, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a142 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a143 (r128,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a149 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a151 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a155 (r123,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r122,l0) best AREG, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a161 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a163 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a166 (r119,l0) best SSE_REGS, allocno SSE_REGS
    r118: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a167 (r118,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a182 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a192 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a194 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a201 (r108,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a209 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a212 (r105,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a216 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a220 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a223 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a230 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a236 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a238 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a241 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a248 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a251 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:40 NO_REX_SSE_REGS:40 SSE_REGS:40 MMX_REGS:45 INT_SSE_REGS:41 ALL_REGS:608 MEM:7
  a2(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a3(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a12(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a19(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a20(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a25(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r329,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a28(r178,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a29(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a30(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a32(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a33(r325,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:22 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 ALL_REGS:26 MEM:7
  a34(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a35(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a36(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r174,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a38(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a40(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a41(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a43(r321,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a44(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a45(r171,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a46(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a47(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a48(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a49(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a50(r317,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a51(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a53(r314,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a54(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a55(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a56(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a57(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a58(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a59(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a61(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a62(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a63(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a64(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a65(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a66(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a68(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a69(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a74(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a78(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a79(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a84(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a85(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a86(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a90(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a91(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a94(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a96(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a97(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a98(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a99(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a100(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a101(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a102(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a103(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a106(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a107(r144,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a108(r143,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a109(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a111(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a112(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a113(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a114(r141,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a115(r140,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a116(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a117(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a118(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a119(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a120(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a121(r138,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a122(r137,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a123(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a124(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a125(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a126(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a128(r135,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a129(r134,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a130(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a132(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a133(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a135(r132,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a136(r131,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a137(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a139(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a140(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a141(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a142(r129,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a143(r128,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a144(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a146(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a147(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a148(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a149(r126,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a150(r259,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a151(r125,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a152(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a153(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a154(r124,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a155(r123,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a156(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a157(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a158(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a159(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a160(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a161(r121,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a162(r252,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a163(r120,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a164(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a165(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a166(r119,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a167(r118,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a168(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a169(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a170(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a171(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a172(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a173(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a174(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a175(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a176(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a177(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a178(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a180(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a181(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a182(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a183(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a184(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a186(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a187(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a189(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a191(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a192(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a193(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a194(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a195(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a196(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a197(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a198(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a199(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a200(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a201(r108,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a202(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a203(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a204(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a205(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a206(r221,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a207(r222,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a208(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a209(r106,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a210(r219,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a211(r218,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a212(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:35 FP_SECOND_REG:35 FLOAT_REGS:35 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 FP_TOP_SSE_REGS:37 FP_SECOND_SSE_REGS:37 FLOAT_SSE_REGS:37 FLOAT_INT_REGS:35 INT_SSE_REGS:29 FLOAT_INT_SSE_REGS:37 MEM:16
  a213(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a215(r215,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a216(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a217(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a218(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a219(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a220(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a221(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a222(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a223(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a224(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a225(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a226(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a227(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a229(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a230(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a231(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a232(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a233(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a234(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a235(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a236(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a237(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a238(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a239(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a240(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a241(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a242(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a243(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a244(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a245(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a246(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a247(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a248(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a249(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a250(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a251(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a252(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a253(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a254(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a255(r191,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 846(l0): point = 0
   Insn 843(l0): point = 3
   Insn 842(l0): point = 6
   Insn 841(l0): point = 8
   Insn 840(l0): point = 10
   Insn 836(l0): point = 12
   Insn 831(l0): point = 15
   Insn 921(l0): point = 18
   Insn 826(l0): point = 20
   Insn 824(l0): point = 23
   Insn 823(l0): point = 25
   Insn 822(l0): point = 27
   Insn 821(l0): point = 29
   Insn 820(l0): point = 31
   Insn 819(l0): point = 33
   Insn 818(l0): point = 35
   Insn 817(l0): point = 37
   Insn 813(l0): point = 39
   Insn 812(l0): point = 41
   Insn 811(l0): point = 43
   Insn 810(l0): point = 45
   Insn 809(l0): point = 47
   Insn 808(l0): point = 49
   Insn 807(l0): point = 51
   Insn 806(l0): point = 53
   Insn 805(l0): point = 55
   Insn 804(l0): point = 57
   Insn 803(l0): point = 59
   Insn 802(l0): point = 61
   Insn 801(l0): point = 63
   Insn 800(l0): point = 65
   Insn 799(l0): point = 67
   Insn 798(l0): point = 69
   Insn 797(l0): point = 71
   Insn 796(l0): point = 73
   Insn 795(l0): point = 75
   Insn 794(l0): point = 77
   Insn 793(l0): point = 79
   Insn 792(l0): point = 81
   Insn 791(l0): point = 83
   Insn 790(l0): point = 85
   Insn 789(l0): point = 87
   Insn 788(l0): point = 89
   Insn 787(l0): point = 91
   Insn 786(l0): point = 93
   Insn 785(l0): point = 95
   Insn 782(l0): point = 98
   Insn 781(l0): point = 100
   Insn 780(l0): point = 102
   Insn 742(l0): point = 105
   Insn 741(l0): point = 107
   Insn 740(l0): point = 109
   Insn 739(l0): point = 111
   Insn 738(l0): point = 113
   Insn 737(l0): point = 115
   Insn 736(l0): point = 117
   Insn 919(l0): point = 120
   Insn 774(l0): point = 122
   Insn 773(l0): point = 124
   Insn 772(l0): point = 126
   Insn 771(l0): point = 128
   Insn 770(l0): point = 130
   Insn 769(l0): point = 132
   Insn 768(l0): point = 134
   Insn 767(l0): point = 136
   Insn 766(l0): point = 138
   Insn 765(l0): point = 140
   Insn 764(l0): point = 142
   Insn 763(l0): point = 144
   Insn 761(l0): point = 147
   Insn 760(l0): point = 149
   Insn 757(l0): point = 152
   Insn 917(l0): point = 155
   Insn 752(l0): point = 157
   Insn 749(l0): point = 160
   Insn 748(l0): point = 162
   Insn 747(l0): point = 164
   Insn 746(l0): point = 166
   Insn 745(l0): point = 168
   Insn 744(l0): point = 170
   Insn 734(l0): point = 173
   Insn 733(l0): point = 175
   Insn 732(l0): point = 177
   Insn 731(l0): point = 179
   Insn 730(l0): point = 181
   Insn 729(l0): point = 183
   Insn 727(l0): point = 186
   Insn 726(l0): point = 188
   Insn 725(l0): point = 190
   Insn 724(l0): point = 192
   Insn 723(l0): point = 194
   Insn 722(l0): point = 196
   Insn 721(l0): point = 198
   Insn 720(l0): point = 200
   Insn 719(l0): point = 202
   Insn 718(l0): point = 204
   Insn 717(l0): point = 206
   Insn 716(l0): point = 208
   Insn 715(l0): point = 210
   Insn 714(l0): point = 212
   Insn 713(l0): point = 214
   Insn 712(l0): point = 216
   Insn 711(l0): point = 218
   Insn 710(l0): point = 220
   Insn 709(l0): point = 222
   Insn 708(l0): point = 224
   Insn 707(l0): point = 226
   Insn 706(l0): point = 228
   Insn 705(l0): point = 230
   Insn 704(l0): point = 232
   Insn 703(l0): point = 234
   Insn 702(l0): point = 236
   Insn 701(l0): point = 238
   Insn 700(l0): point = 240
   Insn 699(l0): point = 242
   Insn 698(l0): point = 244
   Insn 697(l0): point = 246
   Insn 696(l0): point = 248
   Insn 695(l0): point = 250
   Insn 694(l0): point = 252
   Insn 693(l0): point = 254
   Insn 692(l0): point = 256
   Insn 691(l0): point = 258
   Insn 690(l0): point = 260
   Insn 689(l0): point = 262
   Insn 688(l0): point = 264
   Insn 687(l0): point = 266
   Insn 686(l0): point = 268
   Insn 685(l0): point = 270
   Insn 684(l0): point = 272
   Insn 683(l0): point = 274
   Insn 682(l0): point = 276
   Insn 681(l0): point = 278
   Insn 680(l0): point = 280
   Insn 679(l0): point = 282
   Insn 678(l0): point = 284
   Insn 677(l0): point = 286
   Insn 676(l0): point = 288
   Insn 675(l0): point = 290
   Insn 672(l0): point = 293
   Insn 671(l0): point = 295
   Insn 670(l0): point = 297
   Insn 915(l0): point = 300
   Insn 665(l0): point = 302
   Insn 664(l0): point = 304
   Insn 663(l0): point = 306
   Insn 913(l0): point = 309
   Insn 658(l0): point = 311
   Insn 657(l0): point = 313
   Insn 656(l0): point = 315
   Insn 911(l0): point = 318
   Insn 651(l0): point = 320
   Insn 650(l0): point = 322
   Insn 649(l0): point = 324
   Insn 909(l0): point = 327
   Insn 644(l0): point = 329
   Insn 643(l0): point = 331
   Insn 642(l0): point = 333
   Insn 907(l0): point = 336
   Insn 637(l0): point = 338
   Insn 636(l0): point = 340
   Insn 635(l0): point = 342
   Insn 905(l0): point = 345
   Insn 630(l0): point = 347
   Insn 629(l0): point = 349
   Insn 628(l0): point = 351
   Insn 903(l0): point = 354
   Insn 623(l0): point = 356
   Insn 622(l0): point = 358
   Insn 621(l0): point = 360
   Insn 901(l0): point = 363
   Insn 616(l0): point = 365
   Insn 615(l0): point = 367
   Insn 614(l0): point = 369
   Insn 899(l0): point = 372
   Insn 609(l0): point = 374
   Insn 608(l0): point = 376
   Insn 607(l0): point = 378
   Insn 897(l0): point = 381
   Insn 602(l0): point = 383
   Insn 601(l0): point = 385
   Insn 600(l0): point = 387
   Insn 895(l0): point = 390
   Insn 595(l0): point = 392
   Insn 594(l0): point = 394
   Insn 593(l0): point = 396
   Insn 893(l0): point = 399
   Insn 588(l0): point = 401
   Insn 587(l0): point = 403
   Insn 586(l0): point = 405
   Insn 579(l0): point = 408
   Insn 578(l0): point = 410
   Insn 577(l0): point = 412
   Insn 576(l0): point = 415
   Insn 575(l0): point = 417
   Insn 574(l0): point = 419
   Insn 573(l0): point = 421
   Insn 572(l0): point = 423
   Insn 571(l0): point = 425
   Insn 570(l0): point = 427
   Insn 569(l0): point = 429
   Insn 568(l0): point = 431
   Insn 567(l0): point = 433
   Insn 566(l0): point = 435
   Insn 565(l0): point = 437
   Insn 564(l0): point = 439
   Insn 563(l0): point = 441
   Insn 889(l0): point = 444
   Insn 554(l0): point = 446
   Insn 47(l0): point = 449
   Insn 46(l0): point = 451
   Insn 45(l0): point = 453
   Insn 44(l0): point = 455
   Insn 43(l0): point = 457
   Insn 42(l0): point = 459
   Insn 891(l0): point = 462
   Insn 552(l0): point = 465
   Insn 551(l0): point = 467
   Insn 550(l0): point = 469
   Insn 549(l0): point = 471
   Insn 548(l0): point = 473
   Insn 547(l0): point = 475
   Insn 546(l0): point = 477
   Insn 545(l0): point = 479
   Insn 544(l0): point = 481
   Insn 543(l0): point = 483
   Insn 542(l0): point = 485
   Insn 541(l0): point = 487
   Insn 540(l0): point = 489
   Insn 539(l0): point = 491
   Insn 90(l0): point = 494
   Insn 89(l0): point = 496
   Insn 88(l0): point = 498
   Insn 87(l0): point = 500
   Insn 86(l0): point = 502
   Insn 85(l0): point = 504
   Insn 84(l0): point = 506
   Insn 83(l0): point = 508
   Insn 82(l0): point = 510
   Insn 81(l0): point = 512
   Insn 80(l0): point = 514
   Insn 79(l0): point = 516
   Insn 855(l0): point = 519
   Insn 98(l0): point = 521
   Insn 97(l0): point = 523
   Insn 96(l0): point = 525
   Insn 95(l0): point = 527
   Insn 94(l0): point = 529
   Insn 93(l0): point = 531
   Insn 92(l0): point = 533
   Insn 857(l0): point = 536
   Insn 128(l0): point = 538
   Insn 127(l0): point = 540
   Insn 126(l0): point = 542
   Insn 125(l0): point = 544
   Insn 124(l0): point = 546
   Insn 123(l0): point = 548
   Insn 122(l0): point = 550
   Insn 121(l0): point = 552
   Insn 120(l0): point = 554
   Insn 119(l0): point = 556
   Insn 118(l0): point = 558
   Insn 117(l0): point = 560
   Insn 116(l0): point = 562
   Insn 115(l0): point = 564
   Insn 114(l0): point = 566
   Insn 113(l0): point = 568
   Insn 112(l0): point = 570
   Insn 111(l0): point = 572
   Insn 859(l0): point = 575
   Insn 154(l0): point = 577
   Insn 153(l0): point = 579
   Insn 152(l0): point = 581
   Insn 151(l0): point = 583
   Insn 150(l0): point = 585
   Insn 149(l0): point = 587
   Insn 148(l0): point = 589
   Insn 147(l0): point = 591
   Insn 146(l0): point = 593
   Insn 145(l0): point = 595
   Insn 144(l0): point = 597
   Insn 143(l0): point = 599
   Insn 142(l0): point = 601
   Insn 141(l0): point = 603
   Insn 861(l0): point = 606
   Insn 187(l0): point = 608
   Insn 186(l0): point = 610
   Insn 185(l0): point = 612
   Insn 184(l0): point = 614
   Insn 183(l0): point = 616
   Insn 182(l0): point = 618
   Insn 181(l0): point = 620
   Insn 180(l0): point = 622
   Insn 179(l0): point = 624
   Insn 178(l0): point = 626
   Insn 177(l0): point = 628
   Insn 176(l0): point = 630
   Insn 175(l0): point = 632
   Insn 174(l0): point = 634
   Insn 173(l0): point = 636
   Insn 172(l0): point = 638
   Insn 171(l0): point = 640
   Insn 170(l0): point = 642
   Insn 169(l0): point = 644
   Insn 168(l0): point = 646
   Insn 167(l0): point = 648
   Insn 863(l0): point = 651
   Insn 211(l0): point = 653
   Insn 210(l0): point = 655
   Insn 209(l0): point = 657
   Insn 208(l0): point = 659
   Insn 207(l0): point = 661
   Insn 206(l0): point = 663
   Insn 205(l0): point = 665
   Insn 204(l0): point = 667
   Insn 203(l0): point = 669
   Insn 202(l0): point = 671
   Insn 201(l0): point = 673
   Insn 200(l0): point = 675
   Insn 865(l0): point = 678
   Insn 234(l0): point = 680
   Insn 233(l0): point = 682
   Insn 232(l0): point = 684
   Insn 231(l0): point = 686
   Insn 230(l0): point = 688
   Insn 229(l0): point = 690
   Insn 228(l0): point = 692
   Insn 227(l0): point = 694
   Insn 226(l0): point = 696
   Insn 225(l0): point = 698
   Insn 224(l0): point = 700
   Insn 867(l0): point = 703
   Insn 257(l0): point = 705
   Insn 256(l0): point = 707
   Insn 255(l0): point = 709
   Insn 254(l0): point = 711
   Insn 253(l0): point = 713
   Insn 252(l0): point = 715
   Insn 251(l0): point = 717
   Insn 250(l0): point = 719
   Insn 249(l0): point = 721
   Insn 248(l0): point = 723
   Insn 247(l0): point = 725
   Insn 869(l0): point = 728
   Insn 280(l0): point = 730
   Insn 279(l0): point = 732
   Insn 278(l0): point = 734
   Insn 277(l0): point = 736
   Insn 276(l0): point = 738
   Insn 275(l0): point = 740
   Insn 274(l0): point = 742
   Insn 273(l0): point = 744
   Insn 272(l0): point = 746
   Insn 271(l0): point = 748
   Insn 270(l0): point = 750
   Insn 871(l0): point = 753
   Insn 302(l0): point = 755
   Insn 301(l0): point = 757
   Insn 300(l0): point = 759
   Insn 299(l0): point = 761
   Insn 298(l0): point = 763
   Insn 297(l0): point = 765
   Insn 296(l0): point = 767
   Insn 295(l0): point = 769
   Insn 294(l0): point = 771
   Insn 293(l0): point = 773
   Insn 873(l0): point = 776
   Insn 324(l0): point = 778
   Insn 323(l0): point = 780
   Insn 322(l0): point = 782
   Insn 321(l0): point = 784
   Insn 320(l0): point = 786
   Insn 319(l0): point = 788
   Insn 318(l0): point = 790
   Insn 317(l0): point = 792
   Insn 316(l0): point = 794
   Insn 315(l0): point = 796
   Insn 875(l0): point = 799
   Insn 355(l0): point = 801
   Insn 354(l0): point = 803
   Insn 353(l0): point = 805
   Insn 352(l0): point = 807
   Insn 351(l0): point = 809
   Insn 350(l0): point = 811
   Insn 349(l0): point = 813
   Insn 348(l0): point = 815
   Insn 347(l0): point = 817
   Insn 346(l0): point = 819
   Insn 345(l0): point = 821
   Insn 344(l0): point = 823
   Insn 343(l0): point = 825
   Insn 342(l0): point = 827
   Insn 341(l0): point = 829
   Insn 340(l0): point = 831
   Insn 339(l0): point = 833
   Insn 338(l0): point = 835
   Insn 337(l0): point = 837
   Insn 877(l0): point = 840
   Insn 386(l0): point = 842
   Insn 385(l0): point = 844
   Insn 384(l0): point = 846
   Insn 383(l0): point = 848
   Insn 382(l0): point = 850
   Insn 381(l0): point = 852
   Insn 380(l0): point = 854
   Insn 379(l0): point = 856
   Insn 378(l0): point = 858
   Insn 377(l0): point = 860
   Insn 376(l0): point = 862
   Insn 375(l0): point = 864
   Insn 374(l0): point = 866
   Insn 373(l0): point = 868
   Insn 372(l0): point = 870
   Insn 371(l0): point = 872
   Insn 370(l0): point = 874
   Insn 369(l0): point = 876
   Insn 368(l0): point = 878
   Insn 879(l0): point = 881
   Insn 411(l0): point = 883
   Insn 410(l0): point = 885
   Insn 409(l0): point = 887
   Insn 408(l0): point = 889
   Insn 407(l0): point = 891
   Insn 406(l0): point = 893
   Insn 405(l0): point = 895
   Insn 404(l0): point = 897
   Insn 403(l0): point = 899
   Insn 402(l0): point = 901
   Insn 401(l0): point = 903
   Insn 400(l0): point = 905
   Insn 399(l0): point = 907
   Insn 881(l0): point = 910
   Insn 436(l0): point = 912
   Insn 435(l0): point = 914
   Insn 434(l0): point = 916
   Insn 433(l0): point = 918
   Insn 432(l0): point = 920
   Insn 431(l0): point = 922
   Insn 430(l0): point = 924
   Insn 429(l0): point = 926
   Insn 428(l0): point = 928
   Insn 427(l0): point = 930
   Insn 426(l0): point = 932
   Insn 425(l0): point = 934
   Insn 424(l0): point = 936
   Insn 883(l0): point = 939
   Insn 461(l0): point = 941
   Insn 460(l0): point = 943
   Insn 459(l0): point = 945
   Insn 458(l0): point = 947
   Insn 457(l0): point = 949
   Insn 456(l0): point = 951
   Insn 455(l0): point = 953
   Insn 454(l0): point = 955
   Insn 453(l0): point = 957
   Insn 452(l0): point = 959
   Insn 451(l0): point = 961
   Insn 450(l0): point = 963
   Insn 449(l0): point = 965
   Insn 885(l0): point = 968
   Insn 486(l0): point = 970
   Insn 485(l0): point = 972
   Insn 484(l0): point = 974
   Insn 483(l0): point = 976
   Insn 482(l0): point = 978
   Insn 481(l0): point = 980
   Insn 480(l0): point = 982
   Insn 479(l0): point = 984
   Insn 478(l0): point = 986
   Insn 477(l0): point = 988
   Insn 476(l0): point = 990
   Insn 475(l0): point = 992
   Insn 474(l0): point = 994
   Insn 522(l0): point = 997
   Insn 521(l0): point = 999
   Insn 520(l0): point = 1001
   Insn 519(l0): point = 1003
   Insn 518(l0): point = 1005
   Insn 517(l0): point = 1007
   Insn 516(l0): point = 1009
   Insn 536(l0): point = 1012
   Insn 535(l0): point = 1014
   Insn 534(l0): point = 1016
   Insn 533(l0): point = 1018
   Insn 532(l0): point = 1020
   Insn 531(l0): point = 1022
   Insn 530(l0): point = 1024
   Insn 529(l0): point = 1026
   Insn 528(l0): point = 1028
   Insn 527(l0): point = 1030
   Insn 526(l0): point = 1032
   Insn 525(l0): point = 1034
   Insn 524(l0): point = 1036
   Insn 887(l0): point = 1039
   Insn 511(l0): point = 1041
   Insn 510(l0): point = 1043
   Insn 509(l0): point = 1045
   Insn 508(l0): point = 1047
   Insn 507(l0): point = 1049
   Insn 506(l0): point = 1051
   Insn 505(l0): point = 1053
   Insn 504(l0): point = 1055
   Insn 503(l0): point = 1057
   Insn 502(l0): point = 1059
   Insn 501(l0): point = 1061
   Insn 500(l0): point = 1063
   Insn 499(l0): point = 1065
   Insn 497(l0): point = 1068
   Insn 496(l0): point = 1070
   Insn 495(l0): point = 1072
   Insn 494(l0): point = 1074
   Insn 493(l0): point = 1076
   Insn 492(l0): point = 1078
   Insn 491(l0): point = 1080
   Insn 472(l0): point = 1083
   Insn 471(l0): point = 1085
   Insn 470(l0): point = 1087
   Insn 469(l0): point = 1089
   Insn 468(l0): point = 1091
   Insn 467(l0): point = 1093
   Insn 466(l0): point = 1095
   Insn 447(l0): point = 1098
   Insn 446(l0): point = 1100
   Insn 445(l0): point = 1102
   Insn 444(l0): point = 1104
   Insn 443(l0): point = 1106
   Insn 442(l0): point = 1108
   Insn 441(l0): point = 1110
   Insn 422(l0): point = 1113
   Insn 421(l0): point = 1115
   Insn 420(l0): point = 1117
   Insn 419(l0): point = 1119
   Insn 418(l0): point = 1121
   Insn 417(l0): point = 1123
   Insn 416(l0): point = 1125
   Insn 397(l0): point = 1128
   Insn 396(l0): point = 1130
   Insn 395(l0): point = 1132
   Insn 394(l0): point = 1134
   Insn 393(l0): point = 1136
   Insn 392(l0): point = 1138
   Insn 391(l0): point = 1140
   Insn 366(l0): point = 1143
   Insn 365(l0): point = 1145
   Insn 364(l0): point = 1147
   Insn 363(l0): point = 1149
   Insn 362(l0): point = 1151
   Insn 361(l0): point = 1153
   Insn 360(l0): point = 1155
   Insn 335(l0): point = 1158
   Insn 334(l0): point = 1160
   Insn 333(l0): point = 1162
   Insn 332(l0): point = 1164
   Insn 331(l0): point = 1166
   Insn 330(l0): point = 1168
   Insn 329(l0): point = 1170
   Insn 313(l0): point = 1173
   Insn 312(l0): point = 1175
   Insn 311(l0): point = 1177
   Insn 310(l0): point = 1179
   Insn 309(l0): point = 1181
   Insn 308(l0): point = 1183
   Insn 307(l0): point = 1185
   Insn 291(l0): point = 1188
   Insn 290(l0): point = 1190
   Insn 289(l0): point = 1192
   Insn 288(l0): point = 1194
   Insn 287(l0): point = 1196
   Insn 286(l0): point = 1198
   Insn 285(l0): point = 1200
   Insn 268(l0): point = 1203
   Insn 267(l0): point = 1205
   Insn 266(l0): point = 1207
   Insn 265(l0): point = 1209
   Insn 264(l0): point = 1211
   Insn 263(l0): point = 1213
   Insn 262(l0): point = 1215
   Insn 245(l0): point = 1218
   Insn 244(l0): point = 1220
   Insn 243(l0): point = 1222
   Insn 242(l0): point = 1224
   Insn 241(l0): point = 1226
   Insn 240(l0): point = 1228
   Insn 239(l0): point = 1230
   Insn 222(l0): point = 1233
   Insn 221(l0): point = 1235
   Insn 220(l0): point = 1237
   Insn 219(l0): point = 1239
   Insn 218(l0): point = 1241
   Insn 217(l0): point = 1243
   Insn 216(l0): point = 1245
   Insn 198(l0): point = 1248
   Insn 197(l0): point = 1250
   Insn 196(l0): point = 1252
   Insn 195(l0): point = 1254
   Insn 194(l0): point = 1256
   Insn 193(l0): point = 1258
   Insn 192(l0): point = 1260
   Insn 165(l0): point = 1263
   Insn 164(l0): point = 1265
   Insn 163(l0): point = 1267
   Insn 162(l0): point = 1269
   Insn 161(l0): point = 1271
   Insn 160(l0): point = 1273
   Insn 159(l0): point = 1275
   Insn 139(l0): point = 1278
   Insn 138(l0): point = 1280
   Insn 137(l0): point = 1282
   Insn 136(l0): point = 1284
   Insn 135(l0): point = 1286
   Insn 134(l0): point = 1288
   Insn 133(l0): point = 1290
   Insn 109(l0): point = 1293
   Insn 108(l0): point = 1295
   Insn 107(l0): point = 1297
   Insn 106(l0): point = 1299
   Insn 105(l0): point = 1301
   Insn 104(l0): point = 1303
   Insn 103(l0): point = 1305
   Insn 77(l0): point = 1308
   Insn 76(l0): point = 1310
   Insn 75(l0): point = 1312
   Insn 74(l0): point = 1314
   Insn 73(l0): point = 1316
   Insn 72(l0): point = 1318
   Insn 71(l0): point = 1320
   Insn 70(l0): point = 1322
   Insn 69(l0): point = 1324
   Insn 68(l0): point = 1326
   Insn 67(l0): point = 1328
   Insn 66(l0): point = 1330
   Insn 65(l0): point = 1332
   Insn 63(l0): point = 1335
   Insn 62(l0): point = 1337
   Insn 59(l0): point = 1340
   Insn 853(l0): point = 1343
   Insn 54(l0): point = 1345
   Insn 52(l0): point = 1348
   Insn 51(l0): point = 1350
   Insn 50(l0): point = 1352
   Insn 49(l0): point = 1354
   Insn 851(l0): point = 1357
   Insn 37(l0): point = 1359
   Insn 35(l0): point = 1362
   Insn 34(l0): point = 1364
   Insn 33(l0): point = 1366
   Insn 32(l0): point = 1368
   Insn 31(l0): point = 1370
   Insn 30(l0): point = 1372
   Insn 29(l0): point = 1374
   Insn 28(l0): point = 1376
   Insn 27(l0): point = 1378
   Insn 26(l0): point = 1380
   Insn 25(l0): point = 1382
   Insn 24(l0): point = 1384
   Insn 23(l0): point = 1386
   Insn 22(l0): point = 1388
   Insn 21(l0): point = 1390
   Insn 20(l0): point = 1392
   Insn 19(l0): point = 1394
   Insn 18(l0): point = 1396
   Insn 17(l0): point = 1398
   Insn 16(l0): point = 1400
   Insn 15(l0): point = 1402
   Insn 14(l0): point = 1404
   Insn 13(l0): point = 1406
   Insn 12(l0): point = 1408
   Insn 9(l0): point = 1410
   Insn 7(l0): point = 1412
   Insn 6(l0): point = 1414
   Insn 5(l0): point = 1416
   Insn 4(l0): point = 1418
   Insn 3(l0): point = 1420
   Insn 2(l0): point = 1422
 a0(r190): [11..12]
 a1(r87): [1357..1359] [444..446] [18..20] [13..15]
 a2(r189): [26..27]
 a3(r188): [28..29]
 a4(r344): [30..31]
 a5(r342): [34..35]
 a6(r343): [36..37]
 a7(r187): [36..39]
 a8(r186): [40..41]
 a9(r184): [40..47]
 a10(r185): [42..43]
 a11(r339): [44..45]
 a12(r183): [48..49]
 a13(r181): [48..55]
 a14(r182): [50..51]
 a15(r338): [52..53]
 a16(r337): [56..57]
 a17(r336): [60..61]
 a18(r180): [60..63]
 a19(r179): [64..65]
 a20(r335): [70..71]
 a21(r334): [74..75]
 a22(r333): [76..77]
 a23(r332): [82..87]
 a24(r331): [90..91]
 a25(r330): [94..95]
 a26(r328): [99..102]
 a27(r329): [99..100]
 a28(r178): [123..124]
 a29(r327): [129..132]
 a30(r326): [137..138]
 a31(r89): [155..157] [150..152]
 a32(r177): [163..164]
 a33(r325): [169..170]
 a34(r176): [108..109]
 a35(r175): [110..111]
 a36(r324): [116..117]
 a37(r174): [174..175]
 a38(r323): [180..183]
 a39(r173): [189..190]
 a40(r172): [191..192]
 a41(r322): [197..198]
 a42(r320): [211..214]
 a43(r321): [211..212]
 a44(r319): [217..218]
 a45(r171): [217..220]
 a46(r170): [221..222]
 a47(r169): [223..224]
 a48(r318): [225..226]
 a49(r316): [229..232]
 a50(r317): [229..230]
 a51(r315): [235..236]
 a52(r313): [239..242]
 a53(r314): [239..240]
 a54(r312): [245..246]
 a55(r311): [249..250]
 a56(r168): [249..252]
 a57(r310): [255..256]
 a58(r167): [255..258]
 a59(r309): [261..262]
 a60(r166): [261..264]
 a61(r308): [267..268]
 a62(r165): [267..270]
 a63(r307): [273..274]
 a64(r306): [277..278]
 a65(r164): [277..280]
 a66(r305): [283..284]
 a67(r163): [283..286]
 a68(r304): [289..290]
 a69(r162): [294..295]
 a70(r303): [296..297]
 a71(r161): [303..304]
 a72(r302): [305..306]
 a73(r160): [312..313]
 a74(r301): [314..315]
 a75(r159): [321..322]
 a76(r300): [323..324]
 a77(r158): [330..331]
 a78(r299): [332..333]
 a79(r157): [339..340]
 a80(r298): [341..342]
 a81(r156): [348..349]
 a82(r297): [350..351]
 a83(r155): [357..358]
 a84(r296): [359..360]
 a85(r154): [366..367]
 a86(r295): [368..369]
 a87(r153): [375..376]
 a88(r294): [377..378]
 a89(r152): [384..385]
 a90(r293): [386..387]
 a91(r151): [393..394]
 a92(r292): [395..396]
 a93(r150): [402..403]
 a94(r291): [404..405]
 a95(r290): [409..410]
 a96(r289): [411..412]
 a97(r149): [420..421]
 a98(r288): [426..431]
 a99(r148): [436..437]
 a100(r147): [440..441]
 a101(r146): [468..469]
 a102(r145): [472..473]
 a103(r287): [478..479]
 a104(r286): [484..489]
 a105(r285): [488..491]
 a106(r284): [1013..1014]
 a107(r144): [1013..1016]
 a108(r143): [1017..1018]
 a109(r283): [1023..1026]
 a110(r282): [1029..1030]
 a111(r142): [1000..1001]
 a112(r281): [1006..1009]
 a113(r280): [1042..1043]
 a114(r141): [1042..1045]
 a115(r140): [1046..1047]
 a116(r279): [1052..1055]
 a117(r278): [1058..1059]
 a118(r139): [1071..1072]
 a119(r277): [1077..1080]
 a120(r276): [971..972]
 a121(r138): [971..974]
 a122(r137): [975..976]
 a123(r275): [981..984]
 a124(r274): [987..988]
 a125(r136): [1086..1087]
 a126(r273): [1092..1095]
 a127(r272): [942..943]
 a128(r135): [942..945]
 a129(r134): [946..947]
 a130(r271): [952..955]
 a131(r270): [958..959]
 a132(r133): [1101..1102]
 a133(r269): [1107..1110]
 a134(r268): [913..914]
 a135(r132): [913..916]
 a136(r131): [917..918]
 a137(r267): [923..926]
 a138(r266): [929..930]
 a139(r130): [1116..1117]
 a140(r265): [1122..1125]
 a141(r264): [884..885]
 a142(r129): [884..887]
 a143(r128): [888..889]
 a144(r263): [894..897]
 a145(r262): [900..901]
 a146(r127): [1131..1132]
 a147(r261): [1137..1140]
 a148(r260): [843..844]
 a149(r126): [843..846]
 a150(r259): [847..848]
 a151(r125): [847..850]
 a152(r258): [851..852]
 a153(r257): [855..856]
 a154(r124): [855..858]
 a155(r123): [859..860]
 a156(r256): [865..868]
 a157(r255): [871..872]
 a158(r122): [1146..1147]
 a159(r254): [1152..1155]
 a160(r253): [802..803]
 a161(r121): [802..805]
 a162(r252): [806..807]
 a163(r120): [806..809]
 a164(r251): [810..811]
 a165(r250): [814..815]
 a166(r119): [814..817]
 a167(r118): [818..819]
 a168(r249): [824..827]
 a169(r248): [830..831]
 a170(r117): [1161..1162]
 a171(r247): [1167..1170]
 a172(r246): [781..784]
 a173(r245): [783..786]
 a174(r244): [789..790]
 a175(r116): [1176..1177]
 a176(r243): [1182..1185]
 a177(r242): [758..761]
 a178(r241): [760..763]
 a179(r240): [766..767]
 a180(r115): [1191..1192]
 a181(r239): [1197..1200]
 a182(r114): [733..738]
 a183(r238): [735..736]
 a184(r237): [739..740]
 a185(r236): [743..744]
 a186(r113): [1206..1207]
 a187(r235): [1212..1215]
 a188(r112): [708..713]
 a189(r234): [710..711]
 a190(r233): [714..715]
 a191(r232): [718..719]
 a192(r111): [1221..1222]
 a193(r231): [1227..1230]
 a194(r110): [683..688]
 a195(r230): [685..686]
 a196(r229): [689..690]
 a197(r228): [693..694]
 a198(r109): [1236..1237]
 a199(r227): [1242..1245]
 a200(r226): [654..655]
 a201(r108): [654..657]
 a202(r225): [662..665]
 a203(r224): [668..669]
 a204(r107): [1251..1252]
 a205(r223): [1257..1260]
 a206(r221): [609..610]
 a207(r222): [611..612]
 a208(r220): [615..616]
 a209(r106): [615..618]
 a210(r219): [619..620]
 a211(r218): [619..622]
 a212(r105): [625..626]
 a213(r217): [631..634]
 a214(r216): [637..638]
 a215(r215): [647..648]
 a216(r104): [1266..1267]
 a217(r214): [1272..1275]
 a218(r213): [578..579]
 a219(r103): [578..581]
 a220(r102): [582..583]
 a221(r212): [588..593]
 a222(r211): [596..597]
 a223(r101): [1281..1282]
 a224(r210): [1287..1290]
 a225(r209): [539..540]
 a226(r100): [539..542]
 a227(r99): [543..544]
 a228(r208): [545..546]
 a229(r207): [549..550]
 a230(r98): [549..552]
 a231(r206): [557..562]
 a232(r205): [565..566]
 a233(r97): [1296..1297]
 a234(r204): [1302..1305]
 a235(r203): [522..523]
 a236(r96): [522..525]
 a237(r202): [530..531]
 a238(r95): [497..498]
 a239(r201): [503..506]
 a240(r200): [509..510]
 a241(r94): [1311..1312]
 a242(r199): [1317..1320]
 a243(r198): [1323..1324]
 a244(r197): [1329..1332]
 a245(r88): [1343..1345] [1338..1340]
 a246(r93): [1351..1352]
 a247(r196): [1353..1354]
 a248(r92): [452..453]
 a249(r195): [458..459]
 a250(r91): [1365..1366]
 a251(r90): [1369..1370]
 a252(r194): [1375..1376]
 a253(r193): [1381..1386]
 a254(r192): [1385..1388]
 a255(r191): [1405..1406]
Compressing live ranges: from 1425 to 440 - 30%
Ranges after the compression:
 a0(r190): [0..1]
 a1(r87): [428..429] [176..177] [2..5]
 a2(r189): [6..7]
 a3(r188): [8..9]
 a4(r344): [10..11]
 a5(r342): [12..13]
 a6(r343): [14..15]
 a7(r187): [14..15]
 a8(r186): [16..17]
 a9(r184): [16..21]
 a10(r185): [18..19]
 a11(r339): [20..21]
 a12(r183): [22..23]
 a13(r181): [22..27]
 a14(r182): [24..25]
 a15(r338): [26..27]
 a16(r337): [28..29]
 a17(r336): [30..31]
 a18(r180): [30..31]
 a19(r179): [32..33]
 a20(r335): [34..35]
 a21(r334): [36..37]
 a22(r333): [38..39]
 a23(r332): [40..41]
 a24(r331): [42..43]
 a25(r330): [44..45]
 a26(r328): [46..47]
 a27(r329): [46..47]
 a28(r178): [54..55]
 a29(r327): [56..57]
 a30(r326): [58..59]
 a31(r89): [60..63]
 a32(r177): [64..65]
 a33(r325): [66..67]
 a34(r176): [48..49]
 a35(r175): [50..51]
 a36(r324): [52..53]
 a37(r174): [68..69]
 a38(r323): [70..71]
 a39(r173): [72..73]
 a40(r172): [74..75]
 a41(r322): [76..77]
 a42(r320): [78..79]
 a43(r321): [78..79]
 a44(r319): [80..81]
 a45(r171): [80..81]
 a46(r170): [82..83]
 a47(r169): [84..85]
 a48(r318): [86..87]
 a49(r316): [88..89]
 a50(r317): [88..89]
 a51(r315): [90..91]
 a52(r313): [92..93]
 a53(r314): [92..93]
 a54(r312): [94..95]
 a55(r311): [96..97]
 a56(r168): [96..97]
 a57(r310): [98..99]
 a58(r167): [98..99]
 a59(r309): [100..101]
 a60(r166): [100..101]
 a61(r308): [102..103]
 a62(r165): [102..103]
 a63(r307): [104..105]
 a64(r306): [106..107]
 a65(r164): [106..107]
 a66(r305): [108..109]
 a67(r163): [108..109]
 a68(r304): [110..111]
 a69(r162): [112..113]
 a70(r303): [114..115]
 a71(r161): [116..117]
 a72(r302): [118..119]
 a73(r160): [120..121]
 a74(r301): [122..123]
 a75(r159): [124..125]
 a76(r300): [126..127]
 a77(r158): [128..129]
 a78(r299): [130..131]
 a79(r157): [132..133]
 a80(r298): [134..135]
 a81(r156): [136..137]
 a82(r297): [138..139]
 a83(r155): [140..141]
 a84(r296): [142..143]
 a85(r154): [144..145]
 a86(r295): [146..147]
 a87(r153): [148..149]
 a88(r294): [150..151]
 a89(r152): [152..153]
 a90(r293): [154..155]
 a91(r151): [156..157]
 a92(r292): [158..159]
 a93(r150): [160..161]
 a94(r291): [162..163]
 a95(r290): [164..165]
 a96(r289): [166..167]
 a97(r149): [168..169]
 a98(r288): [170..171]
 a99(r148): [172..173]
 a100(r147): [174..175]
 a101(r146): [182..183]
 a102(r145): [184..185]
 a103(r287): [186..187]
 a104(r286): [188..189]
 a105(r285): [188..189]
 a106(r284): [332..333]
 a107(r144): [332..333]
 a108(r143): [334..335]
 a109(r283): [336..337]
 a110(r282): [338..339]
 a111(r142): [328..329]
 a112(r281): [330..331]
 a113(r280): [340..341]
 a114(r141): [340..341]
 a115(r140): [342..343]
 a116(r279): [344..345]
 a117(r278): [346..347]
 a118(r139): [348..349]
 a119(r277): [350..351]
 a120(r276): [320..321]
 a121(r138): [320..321]
 a122(r137): [322..323]
 a123(r275): [324..325]
 a124(r274): [326..327]
 a125(r136): [352..353]
 a126(r273): [354..355]
 a127(r272): [312..313]
 a128(r135): [312..313]
 a129(r134): [314..315]
 a130(r271): [316..317]
 a131(r270): [318..319]
 a132(r133): [356..357]
 a133(r269): [358..359]
 a134(r268): [304..305]
 a135(r132): [304..305]
 a136(r131): [306..307]
 a137(r267): [308..309]
 a138(r266): [310..311]
 a139(r130): [360..361]
 a140(r265): [362..363]
 a141(r264): [296..297]
 a142(r129): [296..297]
 a143(r128): [298..299]
 a144(r263): [300..301]
 a145(r262): [302..303]
 a146(r127): [364..365]
 a147(r261): [366..367]
 a148(r260): [282..283]
 a149(r126): [282..283]
 a150(r259): [284..285]
 a151(r125): [284..285]
 a152(r258): [286..287]
 a153(r257): [288..289]
 a154(r124): [288..289]
 a155(r123): [290..291]
 a156(r256): [292..293]
 a157(r255): [294..295]
 a158(r122): [368..369]
 a159(r254): [370..371]
 a160(r253): [268..269]
 a161(r121): [268..269]
 a162(r252): [270..271]
 a163(r120): [270..271]
 a164(r251): [272..273]
 a165(r250): [274..275]
 a166(r119): [274..275]
 a167(r118): [276..277]
 a168(r249): [278..279]
 a169(r248): [280..281]
 a170(r117): [372..373]
 a171(r247): [374..375]
 a172(r246): [264..265]
 a173(r245): [264..265]
 a174(r244): [266..267]
 a175(r116): [376..377]
 a176(r243): [378..379]
 a177(r242): [260..261]
 a178(r241): [260..261]
 a179(r240): [262..263]
 a180(r115): [380..381]
 a181(r239): [382..383]
 a182(r114): [254..255]
 a183(r238): [254..255]
 a184(r237): [256..257]
 a185(r236): [258..259]
 a186(r113): [384..385]
 a187(r235): [386..387]
 a188(r112): [248..249]
 a189(r234): [248..249]
 a190(r233): [250..251]
 a191(r232): [252..253]
 a192(r111): [388..389]
 a193(r231): [390..391]
 a194(r110): [242..243]
 a195(r230): [242..243]
 a196(r229): [244..245]
 a197(r228): [246..247]
 a198(r109): [392..393]
 a199(r227): [394..395]
 a200(r226): [236..237]
 a201(r108): [236..237]
 a202(r225): [238..239]
 a203(r224): [240..241]
 a204(r107): [396..397]
 a205(r223): [398..399]
 a206(r221): [220..221]
 a207(r222): [222..223]
 a208(r220): [224..225]
 a209(r106): [224..225]
 a210(r219): [226..227]
 a211(r218): [226..227]
 a212(r105): [228..229]
 a213(r217): [230..231]
 a214(r216): [232..233]
 a215(r215): [234..235]
 a216(r104): [400..401]
 a217(r214): [402..403]
 a218(r213): [212..213]
 a219(r103): [212..213]
 a220(r102): [214..215]
 a221(r212): [216..217]
 a222(r211): [218..219]
 a223(r101): [404..405]
 a224(r210): [406..407]
 a225(r209): [200..201]
 a226(r100): [200..201]
 a227(r99): [202..203]
 a228(r208): [204..205]
 a229(r207): [206..207]
 a230(r98): [206..207]
 a231(r206): [208..209]
 a232(r205): [210..211]
 a233(r97): [408..409]
 a234(r204): [410..411]
 a235(r203): [196..197]
 a236(r96): [196..197]
 a237(r202): [198..199]
 a238(r95): [190..191]
 a239(r201): [192..193]
 a240(r200): [194..195]
 a241(r94): [412..413]
 a242(r199): [414..415]
 a243(r198): [416..417]
 a244(r197): [418..419]
 a245(r88): [420..423]
 a246(r93): [424..425]
 a247(r196): [426..427]
 a248(r92): [178..179]
 a249(r195): [180..181]
 a250(r91): [430..431]
 a251(r90): [432..433]
 a252(r194): [434..435]
 a253(r193): [436..437]
 a254(r192): [436..437]
 a255(r191): [438..439]
  pref0:a33(r325)<-hr21@1
  pref1:a201(r108)<-hr21@1
  regions=1, blocks=79, points=440
    allocnos=256 (big 0), copies=0, conflicts=0, ranges=258
Disposition:
    1:r87  l0     0  245:r88  l0     0   31:r89  l0     0  251:r90  l0     0
  250:r91  l0     0  248:r92  l0     0  246:r93  l0     0  241:r94  l0     0
  238:r95  l0     0  236:r96  l0     1  233:r97  l0     0  230:r98  l0     1
  227:r99  l0     0  226:r100 l0     1  223:r101 l0     0  220:r102 l0     0
  219:r103 l0     1  216:r104 l0     0  212:r105 l0    21  209:r106 l0    21
  204:r107 l0     0  201:r108 l0     1  198:r109 l0     0  194:r110 l0     1
  192:r111 l0     0  188:r112 l0     1  186:r113 l0     0  182:r114 l0     1
  180:r115 l0     0  175:r116 l0     0  170:r117 l0     0  167:r118 l0    21
  166:r119 l0    21  163:r120 l0    21  161:r121 l0    21  158:r122 l0     0
  155:r123 l0    21  154:r124 l0    21  151:r125 l0    21  149:r126 l0    21
  146:r127 l0     0  143:r128 l0    21  142:r129 l0    21  139:r130 l0     0
  136:r131 l0    21  135:r132 l0    21  132:r133 l0     0  129:r134 l0    21
  128:r135 l0    21  125:r136 l0     0  122:r137 l0    21  121:r138 l0    21
  118:r139 l0     0  115:r140 l0    21  114:r141 l0    21  111:r142 l0     0
  108:r143 l0    21  107:r144 l0    21  102:r145 l0     0  101:r146 l0     0
  100:r147 l0     0   99:r148 l0     0   97:r149 l0     0   93:r150 l0     0
   91:r151 l0     0   89:r152 l0     0   87:r153 l0     0   85:r154 l0     0
   83:r155 l0     0   81:r156 l0     0   79:r157 l0     0   77:r158 l0     0
   75:r159 l0     0   73:r160 l0     0   71:r161 l0     0   69:r162 l0     0
   67:r163 l0     1   65:r164 l0     1   62:r165 l0     1   60:r166 l0     1
   58:r167 l0     1   56:r168 l0     1   47:r169 l0     0   46:r170 l0    21
   45:r171 l0    21   40:r172 l0     0   39:r173 l0     0   37:r174 l0    21
   35:r175 l0     0   34:r176 l0     0   32:r177 l0     0   28:r178 l0    21
   19:r179 l0     0   18:r180 l0     1   13:r181 l0     1   14:r182 l0     0
   12:r183 l0     0    9:r184 l0     1   10:r185 l0     0    8:r186 l0     0
    7:r187 l0     1    3:r188 l0     0    2:r189 l0     0    0:r190 l0     0
  255:r191 l0    21  254:r192 l0     1  253:r193 l0     0  252:r194 l0     0
  249:r195 l0     0  247:r196 l0     0  244:r197 l0     0  243:r198 l0     0
  242:r199 l0     0  240:r200 l0     0  239:r201 l0     0  237:r202 l0     0
  235:r203 l0     0  234:r204 l0     0  232:r205 l0     0  231:r206 l0     0
  229:r207 l0     0  228:r208 l0     0  225:r209 l0     0  224:r210 l0     0
  222:r211 l0     0  221:r212 l0     0  218:r213 l0     0  217:r214 l0     0
  215:r215 l0    21  214:r216 l0     0  213:r217 l0     0  211:r218 l0    21
  210:r219 l0    22  208:r220 l0     0  206:r221 l0    21  207:r222 l0    21
  205:r223 l0     0  203:r224 l0     0  202:r225 l0     0  200:r226 l0     0
  199:r227 l0     0  197:r228 l0     0  196:r229 l0     0  195:r230 l0     0
  193:r231 l0     0  191:r232 l0     0  190:r233 l0     0  189:r234 l0     0
  187:r235 l0     0  185:r236 l0     0  184:r237 l0     0  183:r238 l0     0
  181:r239 l0     0  179:r240 l0     0  178:r241 l0     1  177:r242 l0     0
  176:r243 l0     0  174:r244 l0     0  173:r245 l0     1  172:r246 l0     0
  171:r247 l0     0  169:r248 l0     0  168:r249 l0     0  165:r250 l0     0
  164:r251 l0     0  162:r252 l0    22  160:r253 l0     0  159:r254 l0     0
  157:r255 l0     0  156:r256 l0     0  153:r257 l0     0  152:r258 l0     0
  150:r259 l0    22  148:r260 l0     0  147:r261 l0     0  145:r262 l0     0
  144:r263 l0     0  141:r264 l0     0  140:r265 l0     0  138:r266 l0     0
  137:r267 l0     0  134:r268 l0     0  133:r269 l0     0  131:r270 l0     0
  130:r271 l0     0  127:r272 l0     0  126:r273 l0     0  124:r274 l0     0
  123:r275 l0     0  120:r276 l0     0  119:r277 l0     0  117:r278 l0     0
  116:r279 l0     0  113:r280 l0     0  112:r281 l0     0  110:r282 l0     0
  109:r283 l0     0  106:r284 l0     0  105:r285 l0     1  104:r286 l0     0
  103:r287 l0     0   98:r288 l0     0   96:r289 l0     0   95:r290 l0     0
   94:r291 l0     0   92:r292 l0     0   90:r293 l0     0   88:r294 l0     0
   86:r295 l0     0   84:r296 l0     0   82:r297 l0     0   80:r298 l0     0
   78:r299 l0     0   76:r300 l0     0   74:r301 l0     0   72:r302 l0     0
   70:r303 l0     0   68:r304 l0     0   66:r305 l0     0   64:r306 l0     0
   63:r307 l0     0   61:r308 l0     0   59:r309 l0     0   57:r310 l0     0
   55:r311 l0     0   54:r312 l0     0   52:r313 l0     0   53:r314 l0    21
   51:r315 l0     0   49:r316 l0     0   50:r317 l0    21   48:r318 l0     0
   44:r319 l0     0   42:r320 l0     0   43:r321 l0    21   41:r322 l0     0
   38:r323 l0     0   36:r324 l0     0   33:r325 l0     0   30:r326 l0     0
   29:r327 l0     0   26:r328 l0     0   27:r329 l0    21   25:r330 l0     0
   24:r331 l0     0   23:r332 l0     0   22:r333 l0     0   21:r334 l0     0
   20:r335 l0     0   17:r336 l0     0   16:r337 l0     0   15:r338 l0     0
   11:r339 l0     0    5:r342 l0     0    6:r343 l0     0    4:r344 l0     0
+++Costs: overall -96, reg -96, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={78d,52u} r1={81d,7u} r2={75d,1u} r4={136d,62u} r5={147d,73u} r6={1d,78u} r7={1d,152u} r8={74d} r9={74d} r10={74d} r11={74d} r12={74d} r13={74d} r14={74d} r15={74d} r16={1d,77u} r17={141d,33u} r18={74d} r19={74d} r20={1d,259u,18e} r21={76d,13u} r22={75d} r23={75d} r24={75d} r25={75d} r26={75d} r27={75d} r28={75d} r29={74d} r30={74d} r31={74d} r32={74d} r33={74d} r34={74d} r35={74d} r36={74d} r37={75d,1u} r38={75d,1u} r39={74d} r40={74d} r45={74d} r46={74d} r47={74d} r48={74d} r49={74d} r50={74d} r51={74d} r52={74d} r53={74d} r54={74d} r55={74d} r56={74d} r57={74d} r58={74d} r59={74d} r60={74d} r61={74d} r62={74d} r63={74d} r64={74d} r65={74d} r66={74d} r67={74d} r68={74d} r69={74d} r70={74d} r71={74d} r72={74d} r73={74d} r74={74d} r75={74d} r76={74d} r77={74d} r78={74d} r79={74d} r80={74d} r87={4d,1u} r88={2d,1u} r89={2d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u,1e} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} 
;;    total ref usage 6902{5818d,1065u,19e} in 674{600 regular + 74 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 191 192 193 194
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ procpar_info ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -704 [0xfffffffffffffd40])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_string ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])
        (reg:DI 1 dx [ in_file ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ in_file ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -720 [0xfffffffffffffd30])) [0 swap_bytes+0 S8 A64])
        (reg:DI 2 cx [ swap_bytes ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ swap_bytes ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])
        (reg:DI 37 r8 [ infile_struct ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ infile_struct ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 main_header+0 S8 A64])
        (reg:DI 38 r9 [ main_header ])) sim2fitman_read_procpar.cpp:26 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ main_header ])
        (nil)))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5860+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:26 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 9 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -664 [0xfffffffffffffd68])) [0 date_stamp+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:28 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SF 191)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:29 129 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32])
        (reg:SF 191)) sim2fitman_read_procpar.cpp:29 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 191)
        (nil)))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [0 calc_filesize+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:30 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -648 [0xfffffffffffffd78])) [0 te_offset+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:31 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -640 [0xfffffffffffffd80])) [0 tr_offset+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:32 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -632 [0xfffffffffffffd88])) [0 pulse_name_offset+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:33 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -624 [0xfffffffffffffd90])) [0 header_size+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:35 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:48 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -677 [0xfffffffffffffd5b])) [0 done_hdr+0 S1 A8])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:49 93 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:66 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:66 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg:DI 192)) sim2fitman_read_procpar.cpp:66 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (const_int 255 [0xff])) sim2fitman_read_procpar.cpp:66 90 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 193)) sim2fitman_read_procpar.cpp:66 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn 27 26 28 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8d0c5aca20 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:66 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 28 27 29 2 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:67 89 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg:DI 194)) sim2fitman_read_procpar.cpp:67 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f8d0c5b4870 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:67 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 2 (set (reg:SI 90 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:67 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:67 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.5848 ])
        (nil)))
(insn 33 32 34 2 (set (reg:QI 91 [ D.5849 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:67 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 34 33 35 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:67 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 91 [ D.5849 ])
        (nil)))
(jump_insn 35 34 36 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) sim2fitman_read_procpar.cpp:67 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 36 35 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 851 3 (set (reg:SI 87 [ D.5848 ])
        (const_int -1 [0xffffffffffffffff])) sim2fitman_read_procpar.cpp:68 90 {*movsi_internal}
     (nil))
(jump_insn 851 37 852 3 (set (pc)
        (label_ref 834)) sim2fitman_read_procpar.cpp:68 654 {jump}
     (nil)
 -> 834)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 852 851 40)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              48 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 195
(code_label 40 852 41 4 2 "" [2 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:76 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 5 di)
        (reg:DI 195)) sim2fitman_read_procpar.cpp:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(call_insn 44 43 45 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("feof") [flags 0x41]  <function_decl 0x7f8d0c5b4798 feof>) [0 feof S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:76 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 4 (set (reg:SI 92 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:76 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 46 45 47 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:76 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.5848 ])
        (nil)))
(jump_insn 47 46 48 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) sim2fitman_read_procpar.cpp:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 196
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg:QI 196)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -677 [0xfffffffffffffd5b])) [0 done_hdr+0 S1 A8])) sim2fitman_read_procpar.cpp:76 93 {*movqi_internal}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (reg:QI 93 [ D.5849 ])
                (xor:QI (reg:QI 196)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:76 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                            (const_int -677 [0xfffffffffffffd5b])) [0 done_hdr+0 S1 A8])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 51 50 52 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:76 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 93 [ D.5849 ])
        (nil)))
(jump_insn 52 51 53 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) sim2fitman_read_procpar.cpp:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 853 6 (set (reg:QI 88 [ D.5849 ])
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:76 93 {*movqi_internal}
     (nil))
(jump_insn 853 54 854 6 (set (pc)
        (label_ref 60)) sim2fitman_read_procpar.cpp:76 654 {jump}
     (nil)
 -> 60)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

(barrier 854 853 57)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(code_label 57 854 58 7 4 "" [2 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg:QI 88 [ D.5849 ])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:76 93 {*movqi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags]
(code_label 60 59 61 8 5 "" [1 uses])
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:76 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.5849 ])
        (nil)))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) sim2fitman_read_procpar.cpp:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 561)
;;  succ:       9 (FALLTHRU)
;;              49
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 197 198 199
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:79 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 66 65 67 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8d0c33b750 *.LC1>)) sim2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (nil))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg:DI 197)) sim2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 197)
        (nil)))
(call_insn 68 67 69 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:79 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 69 68 70 9 (set (reg:DI 198)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 70 69 71 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 198)) sim2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(insn 71 70 72 9 (set (reg:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:82 89 {*movdi_internal}
     (nil))
(insn 72 71 73 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8d0c33b7e0 *.LC2>)) sim2fitman_read_procpar.cpp:82 89 {*movdi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 5 di)
        (reg:DI 199)) sim2fitman_read_procpar.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn/i 74 73 75 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:82 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 9 (set (reg:SI 94 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:82 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 76 75 77 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:82 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.5848 ])
        (nil)))
(jump_insn 77 76 78 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) sim2fitman_read_procpar.cpp:82 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 101)
;;  succ:       10 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 200 201
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f8d0c33b870 *.LC3>)) sim2fitman_read_procpar.cpp:83 89 {*movdi_internal}
     (nil))
(insn 80 79 81 10 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:83 89 {*movdi_internal}
     (nil))
(call_insn 81 80 82 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:83 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 82 81 83 10 (set (reg:DI 200)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 83 82 84 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 200)) sim2fitman_read_procpar.cpp:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(insn 84 83 85 10 (set (reg:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:84 89 {*movdi_internal}
     (nil))
(insn 85 84 86 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f8d0c33b900 *.LC4>)) sim2fitman_read_procpar.cpp:84 89 {*movdi_internal}
     (nil))
(insn 86 85 87 10 (set (reg:DI 5 di)
        (reg:DI 201)) sim2fitman_read_procpar.cpp:84 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201)
        (nil)))
(call_insn/i 87 86 88 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:84 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 88 87 89 10 (set (reg:SI 95 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:84 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 89 88 90 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:84 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.5848 ])
        (nil)))
(jump_insn 90 89 91 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman_read_procpar.cpp:84 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 537)
;;  succ:       11 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 202 203
(note 91 90 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -677 [0xfffffffffffffd5b])) [0 done_hdr+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:85 93 {*movqi_internal}
     (nil))
(insn 93 92 94 11 (set (reg:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:86 89 {*movdi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg:DI 202)) sim2fitman_read_procpar.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(call_insn 95 94 96 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f8d0c5ac6c0 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:86 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 95 97 11 (set (reg:DI 96 [ D.5850 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 97 96 98 11 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:86 89 {*movdi_internal}
     (nil))
(insn 98 97 855 11 (set (mem/j:DI (plus:DI (reg/f:DI 203)
                (const_int 24 [0x18])) [0 infile_struct_50(D)->hdr_offset+0 S8 A64])
        (reg:DI 96 [ D.5850 ])) sim2fitman_read_procpar.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_DEAD (reg:DI 96 [ D.5850 ])
            (nil))))
(jump_insn 855 98 856 11 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 856 855 101)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 204
(code_label 101 856 102 12 7 "" [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f8d0c33b990 *.LC5>)) sim2fitman_read_procpar.cpp:92 89 {*movdi_internal}
     (nil))
(insn 105 104 106 12 (set (reg:DI 5 di)
        (reg:DI 204)) sim2fitman_read_procpar.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(call_insn/i 106 105 107 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 107 106 108 12 (set (reg:SI 97 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 108 107 109 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:92 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ D.5848 ])
        (nil)))
(jump_insn 109 108 110 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) sim2fitman_read_procpar.cpp:92 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 131)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 205 206 207 208 209
(note 110 109 111 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:94 89 {*movdi_internal}
     (nil))
(insn 112 111 113 13 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:94 89 {*movdi_internal}
     (nil))
(call_insn 113 112 114 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:94 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 114 113 115 13 (set (reg:DI 205)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 115 114 116 13 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 205)) sim2fitman_read_procpar.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(insn 116 115 117 13 (set (reg:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (nil))
(insn 117 116 118 13 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) sim2fitman_read_procpar.cpp:95 90 {*movsi_internal}
     (nil))
(insn 118 117 119 13 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (nil))
(insn 119 118 120 13 (set (reg:DI 5 di)
        (reg:DI 206)) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(call_insn 120 119 121 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f8d0c663af8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:95 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 121 120 122 13 (set (reg:DI 98 [ D.5850 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 122 121 123 13 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 main_header+0 S8 A64])) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (nil))
(insn 123 122 124 13 (set (mem/j:DI (plus:DI (reg/f:DI 207)
                (const_int 16 [0x10])) [0 main_header_57(D)->np.number+0 S8 A64])
        (reg:DI 98 [ D.5850 ])) sim2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (expr_list:REG_DEAD (reg:DI 98 [ D.5850 ])
            (nil))))
(insn 124 123 125 13 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 main_header+0 S8 A64])) sim2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 125 124 126 13 (set (reg:DI 99 [ D.5850 ])
        (mem/j:DI (plus:DI (reg/f:DI 208)
                (const_int 16 [0x10])) [0 main_header_57(D)->np.number+0 S8 A64])) sim2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (nil)))
(insn 126 125 127 13 (set (reg:SI 100 [ D.5848 ])
        (subreg:SI (reg:DI 99 [ D.5850 ]) 0)) sim2fitman_read_procpar.cpp:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ D.5850 ])
        (nil)))
(insn 127 126 128 13 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 128 127 857 13 (set (mem/j:SI (plus:DI (reg/f:DI 209)
                (const_int 328 [0x148])) [0 procpar_info_61(D)->num_points+0 S4 A64])
        (reg:SI 100 [ D.5848 ])) sim2fitman_read_procpar.cpp:96 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_DEAD (reg:SI 100 [ D.5848 ])
            (nil))))
(jump_insn 857 128 858 13 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 858 857 131)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 210
(code_label 131 858 132 14 9 "" [1 uses])
(note 132 131 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 14 (set (reg:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 134 133 135 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f8d0c33bab0 *.LC7>)) sim2fitman_read_procpar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 135 134 136 14 (set (reg:DI 5 di)
        (reg:DI 210)) sim2fitman_read_procpar.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(call_insn/i 136 135 137 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 137 136 138 14 (set (reg:SI 101 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:100 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 138 137 139 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:100 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.5848 ])
        (nil)))
(jump_insn 139 138 140 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) sim2fitman_read_procpar.cpp:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 157)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 211 212 213
(note 140 139 141 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:102 89 {*movdi_internal}
     (nil))
(insn 142 141 143 15 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:102 89 {*movdi_internal}
     (nil))
(call_insn 143 142 144 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:102 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 144 143 145 15 (set (reg:DI 211)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 145 144 146 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 211)) sim2fitman_read_procpar.cpp:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 146 145 147 15 (set (reg:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 147 146 148 15 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) sim2fitman_read_procpar.cpp:106 90 {*movsi_internal}
     (nil))
(insn 148 147 149 15 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 149 148 150 15 (set (reg:DI 5 di)
        (reg:DI 212)) sim2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 212)
        (nil)))
(call_insn 150 149 151 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f8d0c663af8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:106 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 151 150 152 15 (set (reg:DI 102 [ D.5850 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 152 151 153 15 (set (reg:SI 103 [ D.5848 ])
        (subreg:SI (reg:DI 102 [ D.5850 ]) 0)) sim2fitman_read_procpar.cpp:106 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 102 [ D.5850 ])
        (nil)))
(insn 153 152 154 15 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 154 153 859 15 (set (mem/j:SI (plus:DI (reg/f:DI 213)
                (const_int 508 [0x1fc])) [0 procpar_info_61(D)->nex+0 S4 A32])
        (reg:SI 103 [ D.5848 ])) sim2fitman_read_procpar.cpp:106 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:SI 103 [ D.5848 ])
            (nil))))
(jump_insn 859 154 860 15 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 860 859 157)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 214
(code_label 157 860 158 16 10 "" [1 uses])
(note 158 157 159 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 16 (set (reg:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:111 89 {*movdi_internal}
     (nil))
(insn 160 159 161 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f8d0c33bb40 *.LC8>)) sim2fitman_read_procpar.cpp:111 89 {*movdi_internal}
     (nil))
(insn 161 160 162 16 (set (reg:DI 5 di)
        (reg:DI 214)) sim2fitman_read_procpar.cpp:111 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(call_insn/i 162 161 163 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:111 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 163 162 164 16 (set (reg:SI 104 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:111 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 164 163 165 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:111 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.5848 ])
        (nil)))
(jump_insn 165 164 166 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) sim2fitman_read_procpar.cpp:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 190)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 105 106 215 216 217 218 219 220 221 222
(note 166 165 167 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 17 (set (reg:SF 215)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:112 129 {*movsf_internal}
     (nil))
(insn 168 167 169 17 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32])
        (reg:SF 215)) sim2fitman_read_procpar.cpp:112 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 215)
        (nil)))
(insn 169 168 170 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (nil))
(insn 170 169 171 17 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (nil))
(call_insn 171 170 172 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:114 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 172 171 173 17 (set (reg:DI 216)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 173 172 174 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 216)) sim2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 216)
        (nil)))
(insn 174 173 175 17 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 175 174 176 17 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 176 175 177 17 (set (reg:DI 5 di)
        (reg:DI 217)) sim2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 217)
        (nil)))
(call_insn 177 176 178 17 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:115 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 178 177 179 17 (set (reg:DF 105 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:115 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 179 178 180 17 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32])
        (float_truncate:SF (reg:DF 105 [ D.5851 ]))) sim2fitman_read_procpar.cpp:115 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 105 [ D.5851 ])
        (nil)))
(insn 180 179 181 17 (set (reg:SF 218)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32])) sim2fitman_read_procpar.cpp:118 129 {*movsf_internal}
     (nil))
(insn 181 180 182 17 (set (reg:SF 219)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:118 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 182 181 183 17 (set (reg:SF 106 [ D.5852 ])
        (div:SF (reg:SF 218)
            (reg:SF 219))) sim2fitman_read_procpar.cpp:118 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 219)
        (expr_list:REG_DEAD (reg:SF 218)
            (nil))))
(insn 183 182 184 17 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:118 89 {*movdi_internal}
     (nil))
(insn 184 183 185 17 (set (mem/j:SF (plus:DI (reg/f:DI 220)
                (const_int 4 [0x4])) [0 procpar_info_61(D)->dwell_time+0 S4 A32])
        (reg:SF 106 [ D.5852 ])) sim2fitman_read_procpar.cpp:118 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_DEAD (reg:SF 106 [ D.5852 ])
            (nil))))
(insn 185 184 186 17 (set (reg:SF 222)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:120 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 186 185 187 17 (set (reg:SF 221)
        (div:SF (reg:SF 222)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32]))) sim2fitman_read_procpar.cpp:120 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 222)
        (nil)))
(insn 187 186 861 17 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32])
        (reg:SF 221)) sim2fitman_read_procpar.cpp:120 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 221)
        (nil)))
(jump_insn 861 187 862 17 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 862 861 190)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 223
(code_label 190 862 191 18 11 "" [1 uses])
(note 191 190 192 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 18 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:129 89 {*movdi_internal}
     (nil))
(insn 193 192 194 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f8d0c33bbd0 *.LC11>)) sim2fitman_read_procpar.cpp:129 89 {*movdi_internal}
     (nil))
(insn 194 193 195 18 (set (reg:DI 5 di)
        (reg:DI 223)) sim2fitman_read_procpar.cpp:129 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(call_insn/i 195 194 196 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:129 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 196 195 197 18 (set (reg:SI 107 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:129 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 197 196 198 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:129 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 107 [ D.5848 ])
        (nil)))
(jump_insn 198 197 199 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) sim2fitman_read_procpar.cpp:129 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 214)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 224 225 226
(note 199 198 200 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (nil))
(insn 201 200 202 19 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (nil))
(call_insn 202 201 203 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:131 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 203 202 204 19 (set (reg:DI 224)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 204 203 205 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 224)) sim2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 224)
        (nil)))
(insn 205 204 206 19 (set (reg:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 206 205 207 19 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 207 206 208 19 (set (reg:DI 5 di)
        (reg:DI 225)) sim2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(call_insn 208 207 209 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:132 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 209 208 210 19 (set (reg:DF 108 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:132 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 210 209 211 19 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 211 210 863 19 (set (mem/j:DF (plus:DI (reg/f:DI 226)
                (const_int 336 [0x150])) [0 procpar_info_61(D)->main_frequency+0 S8 A64])
        (reg:DF 108 [ D.5851 ])) sim2fitman_read_procpar.cpp:132 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_DEAD (reg:DF 108 [ D.5851 ])
            (nil))))
(jump_insn 863 211 864 19 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 864 863 214)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 227
(code_label 214 864 215 20 12 "" [1 uses])
(note 215 214 216 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 20 (set (reg:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 217 216 218 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f8d0c33bc60 *.LC12>)) sim2fitman_read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 218 217 219 20 (set (reg:DI 5 di)
        (reg:DI 227)) sim2fitman_read_procpar.cpp:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 227)
        (nil)))
(call_insn/i 219 218 220 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 220 219 221 20 (set (reg:SI 109 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 221 220 222 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:136 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.5848 ])
        (nil)))
(jump_insn 222 221 223 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) sim2fitman_read_procpar.cpp:136 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 237)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 228 229 230
(note 223 222 224 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8d0c33bcf0 *.LC13>)) sim2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 225 224 226 21 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(call_insn 226 225 227 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:138 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 227 226 228 21 (set (reg:DI 228)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 228 227 229 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 228)) sim2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 228)
        (nil)))
(insn 229 228 230 21 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(insn 230 229 231 21 (parallel [
            (set (reg/f:DI 110 [ D.5853 ])
                (plus:DI (reg/f:DI 229)
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:139 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 229)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 404 [0x194]))
                (nil)))))
(insn 231 230 232 21 (set (reg:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(insn 232 231 233 21 (set (reg:DI 4 si)
        (reg:DI 230)) sim2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(insn 233 232 234 21 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.5853 ])) sim2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.5853 ])
        (nil)))
(call_insn 234 233 865 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f8d0c7d95e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:139 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 865 234 866 21 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 866 865 237)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 231
(code_label 237 866 238 22 13 "" [1 uses])
(note 238 237 239 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 22 (set (reg:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 240 239 241 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f8d0c33bd80 *.LC14>)) sim2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 241 240 242 22 (set (reg:DI 5 di)
        (reg:DI 231)) sim2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 231)
        (nil)))
(call_insn/i 242 241 243 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:143 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 243 242 244 22 (set (reg:SI 111 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 244 243 245 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.5848 ])
        (nil)))
(jump_insn 245 244 246 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) sim2fitman_read_procpar.cpp:143 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 260)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112 232 233 234
(note 246 245 247 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8d0c33bcf0 *.LC13>)) sim2fitman_read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(insn 248 247 249 23 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:145 89 {*movdi_internal}
     (nil))
(call_insn 249 248 250 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 250 249 251 23 (set (reg:DI 232)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 251 250 252 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 232)) sim2fitman_read_procpar.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 232)
        (nil)))
(insn 252 251 253 23 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 253 252 254 23 (parallel [
            (set (reg/f:DI 112 [ D.5854 ])
                (plus:DI (reg/f:DI 233)
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:146 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 233)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 440 [0x1b8]))
                (nil)))))
(insn 254 253 255 23 (set (reg:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:146 89 {*movdi_internal}
     (nil))
(insn 255 254 256 23 (set (reg:DI 4 si)
        (reg:DI 234)) sim2fitman_read_procpar.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234)
        (nil)))
(insn 256 255 257 23 (set (reg:DI 5 di)
        (reg/f:DI 112 [ D.5854 ])) sim2fitman_read_procpar.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.5854 ])
        (nil)))
(call_insn 257 256 867 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f8d0c7d95e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 867 257 868 23 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 868 867 260)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 235
(code_label 260 868 261 24 14 "" [1 uses])
(note 261 260 262 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 24 (set (reg:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 263 262 264 24 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f8d0c33be10 *.LC15>)) sim2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 264 263 265 24 (set (reg:DI 5 di)
        (reg:DI 235)) sim2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 235)
        (nil)))
(call_insn/i 265 264 266 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 266 265 267 24 (set (reg:SI 113 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:150 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 267 266 268 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:150 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.5848 ])
        (nil)))
(jump_insn 268 267 269 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) sim2fitman_read_procpar.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 283)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 236 237 238
(note 269 268 270 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8d0c33bcf0 *.LC13>)) sim2fitman_read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(insn 271 270 272 25 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:152 89 {*movdi_internal}
     (nil))
(call_insn 272 271 273 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:152 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 273 272 274 25 (set (reg:DI 236)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 274 273 275 25 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 236)) sim2fitman_read_procpar.cpp:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 236)
        (nil)))
(insn 275 274 276 25 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:153 89 {*movdi_internal}
     (nil))
(insn 276 275 277 25 (parallel [
            (set (reg/f:DI 114 [ D.5855 ])
                (plus:DI (reg/f:DI 237)
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:153 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 237)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 468 [0x1d4]))
                (nil)))))
(insn 277 276 278 25 (set (reg:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:153 89 {*movdi_internal}
     (nil))
(insn 278 277 279 25 (set (reg:DI 4 si)
        (reg:DI 238)) sim2fitman_read_procpar.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 238)
        (nil)))
(insn 279 278 280 25 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.5855 ])) sim2fitman_read_procpar.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.5855 ])
        (nil)))
(call_insn 280 279 869 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f8d0c7d95e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:153 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 869 280 870 25 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 870 869 283)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 239
(code_label 283 870 284 26 15 "" [1 uses])
(note 284 283 285 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 26 (set (reg:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 286 285 287 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f8d0c33bea0 *.LC16>)) sim2fitman_read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 287 286 288 26 (set (reg:DI 5 di)
        (reg:DI 239)) sim2fitman_read_procpar.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 239)
        (nil)))
(call_insn/i 288 287 289 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:158 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 289 288 290 26 (set (reg:SI 115 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:158 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 290 289 291 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:158 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 115 [ D.5848 ])
        (nil)))
(jump_insn 291 290 292 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) sim2fitman_read_procpar.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 305)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 240 241 242
(note 292 291 293 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8d0c33bcf0 *.LC13>)) sim2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 294 293 295 27 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(call_insn 295 294 296 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:160 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 296 295 297 27 (set (reg:DI 240)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 297 296 298 27 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 240)) sim2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 240)
        (nil)))
(insn 298 297 299 27 (set (reg:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:161 89 {*movdi_internal}
     (nil))
(insn 299 298 300 27 (parallel [
            (set (reg:DI 242)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -592 [0xfffffffffffffdb0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:161 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 300 299 301 27 (set (reg:DI 4 si)
        (reg:DI 241)) sim2fitman_read_procpar.cpp:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 241)
        (nil)))
(insn 301 300 302 27 (set (reg:DI 5 di)
        (reg:DI 242)) sim2fitman_read_procpar.cpp:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 242)
        (nil)))
(call_insn 302 301 871 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f8d0c7d95e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:161 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 871 302 872 27 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 872 871 305)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 243
(code_label 305 872 306 28 16 "" [1 uses])
(note 306 305 307 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 28 (set (reg:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 308 307 309 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f8d0c33bf30 *.LC17>)) sim2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 309 308 310 28 (set (reg:DI 5 di)
        (reg:DI 243)) sim2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 243)
        (nil)))
(call_insn/i 310 309 311 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:165 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 311 310 312 28 (set (reg:SI 116 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:165 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 312 311 313 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 116 [ D.5848 ])
        (nil)))
(jump_insn 313 312 314 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) sim2fitman_read_procpar.cpp:165 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 327)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 244 245 246
(note 314 313 315 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f8d0c33bcf0 *.LC13>)) sim2fitman_read_procpar.cpp:167 89 {*movdi_internal}
     (nil))
(insn 316 315 317 29 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:167 89 {*movdi_internal}
     (nil))
(call_insn 317 316 318 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:167 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 318 317 319 29 (set (reg:DI 244)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 319 318 320 29 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 244)) sim2fitman_read_procpar.cpp:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 244)
        (nil)))
(insn 320 319 321 29 (set (reg:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:168 89 {*movdi_internal}
     (nil))
(insn 321 320 322 29 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -560 [0xfffffffffffffdd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:168 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 322 321 323 29 (set (reg:DI 4 si)
        (reg:DI 245)) sim2fitman_read_procpar.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(insn 323 322 324 29 (set (reg:DI 5 di)
        (reg:DI 246)) sim2fitman_read_procpar.cpp:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 246)
        (nil)))
(call_insn 324 323 873 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f8d0c7d95e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:168 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 873 324 874 29 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 874 873 327)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 247
(code_label 327 874 328 30 17 "" [1 uses])
(note 328 327 329 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 30 (set (reg:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 330 329 331 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f8d0c34d000 *.LC18>)) sim2fitman_read_procpar.cpp:172 89 {*movdi_internal}
     (nil))
(insn 331 330 332 30 (set (reg:DI 5 di)
        (reg:DI 247)) sim2fitman_read_procpar.cpp:172 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 247)
        (nil)))
(call_insn/i 332 331 333 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:172 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 333 332 334 30 (set (reg:SI 117 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:172 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 334 333 335 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:172 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 117 [ D.5848 ])
        (nil)))
(jump_insn 335 334 336 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 358)
            (pc))) sim2fitman_read_procpar.cpp:172 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 358)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 248 249 250 251 252 253
(note 336 335 337 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (nil))
(insn 338 337 339 31 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (nil))
(call_insn 339 338 340 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:174 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 340 339 341 31 (set (reg:DI 248)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 341 340 342 31 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 248)) sim2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 248)
        (nil)))
(insn 342 341 343 31 (set (reg:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 343 342 344 31 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 344 343 345 31 (set (reg:DI 5 di)
        (reg:DI 249)) sim2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 249)
        (nil)))
(call_insn 345 344 346 31 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:175 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 346 345 347 31 (set (reg:DF 118 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:175 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 347 346 348 31 (set (reg:SF 119 [ D.5852 ])
        (float_truncate:SF (reg:DF 118 [ D.5851 ]))) sim2fitman_read_procpar.cpp:175 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 118 [ D.5851 ])
        (nil)))
(insn 348 347 349 31 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 349 348 350 31 (set (mem/j:SF (plus:DI (reg/f:DI 250)
                (const_int 352 [0x160])) [0 procpar_info_61(D)->te+0 S4 A64])
        (reg:SF 119 [ D.5852 ])) sim2fitman_read_procpar.cpp:175 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 250)
        (expr_list:REG_DEAD (reg:SF 119 [ D.5852 ])
            (nil))))
(insn 350 349 351 31 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 351 350 352 31 (set (reg:SF 120 [ D.5852 ])
        (mem/j:SF (plus:DI (reg/f:DI 251)
                (const_int 352 [0x160])) [0 procpar_info_61(D)->te+0 S4 A64])) sim2fitman_read_procpar.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (nil)))
(insn 352 351 353 31 (set (reg:SF 252)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:177 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 353 352 354 31 (set (reg:SF 121 [ D.5852 ])
        (div:SF (reg:SF 120 [ D.5852 ])
            (reg:SF 252))) sim2fitman_read_procpar.cpp:177 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 252)
        (expr_list:REG_DEAD (reg:SF 120 [ D.5852 ])
            (nil))))
(insn 354 353 355 31 (set (reg/f:DI 253)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 355 354 875 31 (set (mem/j:SF (plus:DI (reg/f:DI 253)
                (const_int 352 [0x160])) [0 procpar_info_61(D)->te+0 S4 A64])
        (reg:SF 121 [ D.5852 ])) sim2fitman_read_procpar.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 253)
        (expr_list:REG_DEAD (reg:SF 121 [ D.5852 ])
            (nil))))
(jump_insn 875 355 876 31 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 876 875 358)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 254
(code_label 358 876 359 32 18 "" [1 uses])
(note 359 358 360 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 32 (set (reg:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:181 89 {*movdi_internal}
     (nil))
(insn 361 360 362 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f8d0c34d090 *.LC20>)) sim2fitman_read_procpar.cpp:181 89 {*movdi_internal}
     (nil))
(insn 362 361 363 32 (set (reg:DI 5 di)
        (reg:DI 254)) sim2fitman_read_procpar.cpp:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 254)
        (nil)))
(call_insn/i 363 362 364 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:181 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 364 363 365 32 (set (reg:SI 122 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:181 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 365 364 366 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:181 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 122 [ D.5848 ])
        (nil)))
(jump_insn 366 365 367 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) sim2fitman_read_procpar.cpp:181 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 389)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 123 124 125 126 255 256 257 258 259 260
(note 367 366 368 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:183 89 {*movdi_internal}
     (nil))
(insn 369 368 370 33 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:183 89 {*movdi_internal}
     (nil))
(call_insn 370 369 371 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:183 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 371 370 372 33 (set (reg:DI 255)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 372 371 373 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 255)) sim2fitman_read_procpar.cpp:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 255)
        (nil)))
(insn 373 372 374 33 (set (reg:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 374 373 375 33 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 375 374 376 33 (set (reg:DI 5 di)
        (reg:DI 256)) sim2fitman_read_procpar.cpp:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 256)
        (nil)))
(call_insn 376 375 377 33 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:184 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 377 376 378 33 (set (reg:DF 123 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:184 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 378 377 379 33 (set (reg:SF 124 [ D.5852 ])
        (float_truncate:SF (reg:DF 123 [ D.5851 ]))) sim2fitman_read_procpar.cpp:184 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 123 [ D.5851 ])
        (nil)))
(insn 379 378 380 33 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:184 89 {*movdi_internal}
     (nil))
(insn 380 379 381 33 (set (mem/j:SF (plus:DI (reg/f:DI 257)
                (const_int 356 [0x164])) [0 procpar_info_61(D)->tr+0 S4 A32])
        (reg:SF 124 [ D.5852 ])) sim2fitman_read_procpar.cpp:184 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_DEAD (reg:SF 124 [ D.5852 ])
            (nil))))
(insn 381 380 382 33 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 382 381 383 33 (set (reg:SF 125 [ D.5852 ])
        (mem/j:SF (plus:DI (reg/f:DI 258)
                (const_int 356 [0x164])) [0 procpar_info_61(D)->tr+0 S4 A32])) sim2fitman_read_procpar.cpp:186 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (nil)))
(insn 383 382 384 33 (set (reg:SF 259)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:186 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 384 383 385 33 (set (reg:SF 126 [ D.5852 ])
        (div:SF (reg:SF 125 [ D.5852 ])
            (reg:SF 259))) sim2fitman_read_procpar.cpp:186 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 259)
        (expr_list:REG_DEAD (reg:SF 125 [ D.5852 ])
            (nil))))
(insn 385 384 386 33 (set (reg/f:DI 260)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:186 89 {*movdi_internal}
     (nil))
(insn 386 385 877 33 (set (mem/j:SF (plus:DI (reg/f:DI 260)
                (const_int 356 [0x164])) [0 procpar_info_61(D)->tr+0 S4 A32])
        (reg:SF 126 [ D.5852 ])) sim2fitman_read_procpar.cpp:186 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 260)
        (expr_list:REG_DEAD (reg:SF 126 [ D.5852 ])
            (nil))))
(jump_insn 877 386 878 33 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 878 877 389)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127 261
(code_label 389 878 390 34 19 "" [1 uses])
(note 390 389 391 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 34 (set (reg:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(insn 392 391 393 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f8d0c34d120 *.LC21>)) sim2fitman_read_procpar.cpp:191 89 {*movdi_internal}
     (nil))
(insn 393 392 394 34 (set (reg:DI 5 di)
        (reg:DI 261)) sim2fitman_read_procpar.cpp:191 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 261)
        (nil)))
(call_insn/i 394 393 395 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:191 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 395 394 396 34 (set (reg:SI 127 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:191 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 396 395 397 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:191 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 127 [ D.5848 ])
        (nil)))
(jump_insn 397 396 398 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) sim2fitman_read_procpar.cpp:191 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 414)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 128 129 262 263 264
(note 398 397 399 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:193 89 {*movdi_internal}
     (nil))
(insn 400 399 401 35 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:193 89 {*movdi_internal}
     (nil))
(call_insn 401 400 402 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:193 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 402 401 403 35 (set (reg:DI 262)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 403 402 404 35 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 262)) sim2fitman_read_procpar.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 262)
        (nil)))
(insn 404 403 405 35 (set (reg:DI 263)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 405 404 406 35 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 406 405 407 35 (set (reg:DI 5 di)
        (reg:DI 263)) sim2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (nil)))
(call_insn 407 406 408 35 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:194 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 408 407 409 35 (set (reg:DF 128 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:194 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 409 408 410 35 (set (reg:SF 129 [ D.5852 ])
        (float_truncate:SF (reg:DF 128 [ D.5851 ]))) sim2fitman_read_procpar.cpp:194 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 128 [ D.5851 ])
        (nil)))
(insn 410 409 411 35 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 411 410 879 35 (set (mem/j:SF (plus:DI (reg/f:DI 264)
                (const_int 364 [0x16c])) [0 procpar_info_61(D)->pos1+0 S4 A32])
        (reg:SF 129 [ D.5852 ])) sim2fitman_read_procpar.cpp:194 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (expr_list:REG_DEAD (reg:SF 129 [ D.5852 ])
            (nil))))
(jump_insn 879 411 880 35 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 880 879 414)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 130 265
(code_label 414 880 415 36 20 "" [1 uses])
(note 415 414 416 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 36 (set (reg:DI 265)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:196 89 {*movdi_internal}
     (nil))
(insn 417 416 418 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f8d0c34d1b0 *.LC22>)) sim2fitman_read_procpar.cpp:196 89 {*movdi_internal}
     (nil))
(insn 418 417 419 36 (set (reg:DI 5 di)
        (reg:DI 265)) sim2fitman_read_procpar.cpp:196 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 265)
        (nil)))
(call_insn/i 419 418 420 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:196 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 420 419 421 36 (set (reg:SI 130 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:196 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 421 420 422 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:196 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 130 [ D.5848 ])
        (nil)))
(jump_insn 422 421 423 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) sim2fitman_read_procpar.cpp:196 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 439)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 131 132 266 267 268
(note 423 422 424 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(insn 425 424 426 37 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:198 89 {*movdi_internal}
     (nil))
(call_insn 426 425 427 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:198 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 427 426 428 37 (set (reg:DI 266)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 428 427 429 37 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 266)) sim2fitman_read_procpar.cpp:198 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 266)
        (nil)))
(insn 429 428 430 37 (set (reg:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 430 429 431 37 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 431 430 432 37 (set (reg:DI 5 di)
        (reg:DI 267)) sim2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 267)
        (nil)))
(call_insn 432 431 433 37 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:199 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 433 432 434 37 (set (reg:DF 131 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:199 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 434 433 435 37 (set (reg:SF 132 [ D.5852 ])
        (float_truncate:SF (reg:DF 131 [ D.5851 ]))) sim2fitman_read_procpar.cpp:199 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 131 [ D.5851 ])
        (nil)))
(insn 435 434 436 37 (set (reg/f:DI 268)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 436 435 881 37 (set (mem/j:SF (plus:DI (reg/f:DI 268)
                (const_int 368 [0x170])) [0 procpar_info_61(D)->pos2+0 S4 A64])
        (reg:SF 132 [ D.5852 ])) sim2fitman_read_procpar.cpp:199 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 268)
        (expr_list:REG_DEAD (reg:SF 132 [ D.5852 ])
            (nil))))
(jump_insn 881 436 882 37 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 882 881 439)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 133 269
(code_label 439 882 440 38 21 "" [1 uses])
(note 440 439 441 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 38 (set (reg:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 442 441 443 38 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f8d0c34d240 *.LC23>)) sim2fitman_read_procpar.cpp:201 89 {*movdi_internal}
     (nil))
(insn 443 442 444 38 (set (reg:DI 5 di)
        (reg:DI 269)) sim2fitman_read_procpar.cpp:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269)
        (nil)))
(call_insn/i 444 443 445 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:201 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 445 444 446 38 (set (reg:SI 133 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:201 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 446 445 447 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:201 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 133 [ D.5848 ])
        (nil)))
(jump_insn 447 446 448 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) sim2fitman_read_procpar.cpp:201 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 464)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 134 135 270 271 272
(note 448 447 449 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(insn 450 449 451 39 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:203 89 {*movdi_internal}
     (nil))
(call_insn 451 450 452 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:203 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 452 451 453 39 (set (reg:DI 270)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 453 452 454 39 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 270)) sim2fitman_read_procpar.cpp:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(insn 454 453 455 39 (set (reg:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 455 454 456 39 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 456 455 457 39 (set (reg:DI 5 di)
        (reg:DI 271)) sim2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 271)
        (nil)))
(call_insn 457 456 458 39 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:204 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 458 457 459 39 (set (reg:DF 134 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:204 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 459 458 460 39 (set (reg:SF 135 [ D.5852 ])
        (float_truncate:SF (reg:DF 134 [ D.5851 ]))) sim2fitman_read_procpar.cpp:204 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.5851 ])
        (nil)))
(insn 460 459 461 39 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 461 460 883 39 (set (mem/j:SF (plus:DI (reg/f:DI 272)
                (const_int 372 [0x174])) [0 procpar_info_61(D)->pos3+0 S4 A32])
        (reg:SF 135 [ D.5852 ])) sim2fitman_read_procpar.cpp:204 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 272)
        (expr_list:REG_DEAD (reg:SF 135 [ D.5852 ])
            (nil))))
(jump_insn 883 461 884 39 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 884 883 464)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 273
(code_label 464 884 465 40 22 "" [1 uses])
(note 465 464 466 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 40 (set (reg:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:206 89 {*movdi_internal}
     (nil))
(insn 467 466 468 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f8d0c34d2d0 *.LC24>)) sim2fitman_read_procpar.cpp:206 89 {*movdi_internal}
     (nil))
(insn 468 467 469 40 (set (reg:DI 5 di)
        (reg:DI 273)) sim2fitman_read_procpar.cpp:206 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273)
        (nil)))
(call_insn/i 469 468 470 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:206 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 470 469 471 40 (set (reg:SI 136 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:206 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 471 470 472 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:206 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 136 [ D.5848 ])
        (nil)))
(jump_insn 472 471 473 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 489)
            (pc))) sim2fitman_read_procpar.cpp:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 489)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137 138 274 275 276
(note 473 472 474 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 475 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:208 89 {*movdi_internal}
     (nil))
(insn 475 474 476 41 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:208 89 {*movdi_internal}
     (nil))
(call_insn 476 475 477 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:208 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 477 476 478 41 (set (reg:DI 274)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 478 477 479 41 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 274)) sim2fitman_read_procpar.cpp:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 274)
        (nil)))
(insn 479 478 480 41 (set (reg:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:209 89 {*movdi_internal}
     (nil))
(insn 480 479 481 41 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:209 89 {*movdi_internal}
     (nil))
(insn 481 480 482 41 (set (reg:DI 5 di)
        (reg:DI 275)) sim2fitman_read_procpar.cpp:209 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 275)
        (nil)))
(call_insn 482 481 483 41 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:209 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 483 482 484 41 (set (reg:DF 137 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:209 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 484 483 485 41 (set (reg:SF 138 [ D.5852 ])
        (float_truncate:SF (reg:DF 137 [ D.5851 ]))) sim2fitman_read_procpar.cpp:209 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 137 [ D.5851 ])
        (nil)))
(insn 485 484 486 41 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:209 89 {*movdi_internal}
     (nil))
(insn 486 485 885 41 (set (mem/j:SF (plus:DI (reg/f:DI 276)
                (const_int 376 [0x178])) [0 procpar_info_61(D)->vox1+0 S4 A64])
        (reg:SF 138 [ D.5852 ])) sim2fitman_read_procpar.cpp:209 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:SF 138 [ D.5852 ])
            (nil))))
(jump_insn 885 486 886 41 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 886 885 489)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 277
(code_label 489 886 490 42 23 "" [1 uses])
(note 490 489 491 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 42 (set (reg:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:213 89 {*movdi_internal}
     (nil))
(insn 492 491 493 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f8d0c34d360 *.LC25>)) sim2fitman_read_procpar.cpp:213 89 {*movdi_internal}
     (nil))
(insn 493 492 494 42 (set (reg:DI 5 di)
        (reg:DI 277)) sim2fitman_read_procpar.cpp:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(call_insn/i 494 493 495 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:213 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 495 494 496 42 (set (reg:SI 139 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:213 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 496 495 497 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:213 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 139 [ D.5848 ])
        (nil)))
(jump_insn 497 496 498 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) sim2fitman_read_procpar.cpp:213 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 514)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140 141 278 279 280
(note 498 497 499 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 499 498 500 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:215 89 {*movdi_internal}
     (nil))
(insn 500 499 501 43 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:215 89 {*movdi_internal}
     (nil))
(call_insn 501 500 502 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:215 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 502 501 503 43 (set (reg:DI 278)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 503 502 504 43 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 278)) sim2fitman_read_procpar.cpp:215 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 278)
        (nil)))
(insn 504 503 505 43 (set (reg:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 505 504 506 43 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 506 505 507 43 (set (reg:DI 5 di)
        (reg:DI 279)) sim2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(call_insn 507 506 508 43 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:216 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 508 507 509 43 (set (reg:DF 140 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:216 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 509 508 510 43 (set (reg:SF 141 [ D.5852 ])
        (float_truncate:SF (reg:DF 140 [ D.5851 ]))) sim2fitman_read_procpar.cpp:216 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 140 [ D.5851 ])
        (nil)))
(insn 510 509 511 43 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 511 510 887 43 (set (mem/j:SF (plus:DI (reg/f:DI 280)
                (const_int 380 [0x17c])) [0 procpar_info_61(D)->vox2+0 S4 A32])
        (reg:SF 141 [ D.5852 ])) sim2fitman_read_procpar.cpp:216 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:SF 141 [ D.5852 ])
            (nil))))
(jump_insn 887 511 888 43 (set (pc)
        (label_ref 537)) 654 {jump}
     (nil)
 -> 537)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 888 887 514)
;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 142 281
(code_label 514 888 515 44 24 "" [1 uses])
(note 515 514 516 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 44 (set (reg:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:221 89 {*movdi_internal}
     (nil))
(insn 517 516 518 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f8d0c34d3f0 *.LC26>)) sim2fitman_read_procpar.cpp:221 89 {*movdi_internal}
     (nil))
(insn 518 517 519 44 (set (reg:DI 5 di)
        (reg:DI 281)) sim2fitman_read_procpar.cpp:221 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (nil)))
(call_insn/i 519 518 520 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f8d0c7d9360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:221 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 520 519 521 44 (set (reg:SI 142 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:221 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 521 520 522 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:221 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 142 [ D.5848 ])
        (nil)))
(jump_insn 522 521 523 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman_read_procpar.cpp:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 537)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 143 144 282 283 284
(note 523 522 524 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f8d0c33ba20 *.LC6>)) sim2fitman_read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(insn 525 524 526 45 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:223 89 {*movdi_internal}
     (nil))
(call_insn 526 525 527 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f8d0c61a870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 527 526 528 45 (set (reg:DI 282)
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 528 527 529 45 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])
        (reg:DI 282)) sim2fitman_read_procpar.cpp:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 282)
        (nil)))
(insn 529 528 530 45 (set (reg:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -616 [0xfffffffffffffd98])) [0 token+0 S8 A64])) sim2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 530 529 531 45 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 531 530 532 45 (set (reg:DI 5 di)
        (reg:DI 283)) sim2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(call_insn 532 531 533 45 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 533 532 534 45 (set (reg:DF 143 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:224 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 534 533 535 45 (set (reg:SF 144 [ D.5852 ])
        (float_truncate:SF (reg:DF 143 [ D.5851 ]))) sim2fitman_read_procpar.cpp:224 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 143 [ D.5851 ])
        (nil)))
(insn 535 534 536 45 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 536 535 537 45 (set (mem/j:SF (plus:DI (reg/f:DI 284)
                (const_int 384 [0x180])) [0 procpar_info_61(D)->vox3+0 S4 A64])
        (reg:SF 144 [ D.5852 ])) sim2fitman_read_procpar.cpp:224 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 284)
        (expr_list:REG_DEAD (reg:SF 144 [ D.5852 ])
            (nil))))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              21 [100.0%] 
;;              23 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              33 [100.0%] 
;;              35 [100.0%] 
;;              37 [100.0%] 
;;              39 [100.0%] 
;;              41 [100.0%] 
;;              44
;;              45 (FALLTHRU)
;;              43 [100.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 145 146 285 286 287
(code_label 537 536 538 46 8 "" [19 uses])
(note 538 537 539 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 46 (set (reg:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 540 539 541 46 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:250 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 541 540 542 46 (set (reg:DI 1 dx)
        (reg:DI 285)) sim2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(insn 542 541 543 46 (set (reg:SI 4 si)
        (const_int 255 [0xff])) sim2fitman_read_procpar.cpp:250 90 {*movsi_internal}
     (nil))
(insn 543 542 544 46 (set (reg:DI 5 di)
        (reg:DI 286)) sim2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (nil)))
(call_insn 544 543 545 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7f8d0c5aca20 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:250 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 545 544 546 46 (set (reg:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:251 89 {*movdi_internal}
     (nil))
(insn 546 545 547 46 (set (reg:DI 5 di)
        (reg:DI 287)) sim2fitman_read_procpar.cpp:251 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287)
        (nil)))
(call_insn 547 546 548 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f8d0c5b4870 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:251 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 548 547 549 46 (set (reg:SI 145 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:251 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 549 548 550 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:251 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 145 [ D.5848 ])
        (nil)))
(insn 550 549 551 46 (set (reg:QI 146 [ D.5849 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:251 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 551 550 552 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:251 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 146 [ D.5849 ])
        (nil)))
(jump_insn 552 551 553 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 557)
            (pc))) sim2fitman_read_procpar.cpp:251 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 557)
;;  succ:       47 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 553 552 554 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 889 47 (set (reg:SI 87 [ D.5848 ])
        (const_int -1 [0xffffffffffffffff])) sim2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(jump_insn 889 554 890 47 (set (pc)
        (label_ref 834)) sim2fitman_read_procpar.cpp:252 654 {jump}
     (nil)
 -> 834)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 890 889 557)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 557 890 558 48 25 "" [1 uses])
(note 558 557 891 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(jump_insn 891 558 892 48 (set (pc)
        (label_ref 40)) sim2fitman_read_procpar.cpp:76 654 {jump}
     (nil)
 -> 40)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 892 891 561)
;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 147 148 149 288
(code_label 561 892 562 49 6 "" [1 uses])
(note 562 561 563 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 563 562 564 49 (set (reg:QI 147 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -588 [0xfffffffffffffdb4])) [0 date_temp+4 S1 A32])) sim2fitman_read_procpar.cpp:261 93 {*movqi_internal}
     (nil))
(insn 564 563 565 49 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -608 [0xfffffffffffffda0])) [0 month_temp+0 S1 A64])
        (reg:QI 147 [ D.5856 ])) sim2fitman_read_procpar.cpp:261 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 147 [ D.5856 ])
        (nil)))
(insn 565 564 566 49 (set (reg:QI 148 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -587 [0xfffffffffffffdb5])) [0 date_temp+5 S1 A8])) sim2fitman_read_procpar.cpp:262 93 {*movqi_internal}
     (nil))
(insn 566 565 567 49 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -607 [0xfffffffffffffda1])) [0 month_temp+1 S1 A8])
        (reg:QI 148 [ D.5856 ])) sim2fitman_read_procpar.cpp:262 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 148 [ D.5856 ])
        (nil)))
(insn 567 566 568 49 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -606 [0xfffffffffffffda2])) [0 month_temp+2 S1 A16])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:263 93 {*movqi_internal}
     (nil))
(insn 568 567 569 49 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -608 [0xfffffffffffffda0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:264 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 569 568 570 49 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) sim2fitman_read_procpar.cpp:264 90 {*movsi_internal}
     (nil))
(insn 570 569 571 49 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:264 89 {*movdi_internal}
     (nil))
(insn 571 570 572 49 (set (reg:DI 5 di)
        (reg:DI 288)) sim2fitman_read_procpar.cpp:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 288)
        (nil)))
(call_insn 572 571 573 49 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x7f8d0c663af8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:264 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 573 572 574 49 (set (reg:DI 149 [ D.5850 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 574 573 575 49 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -668 [0xfffffffffffffd64])) [0 month_temp_int+0 S4 A32])
        (subreg:SI (reg:DI 149 [ D.5850 ]) 0)) sim2fitman_read_procpar.cpp:264 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 149 [ D.5850 ])
        (nil)))
(insn 575 574 576 49 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -668 [0xfffffffffffffd64])) [0 month_temp_int+0 S4 A32])
            (const_int 12 [0xc]))) sim2fitman_read_procpar.cpp:265 7 {*cmpsi_1}
     (nil))
(jump_insn 576 575 848 49 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 668)
            (pc))) sim2fitman_read_procpar.cpp:265 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 668)
;;  succ:       63
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 289 290
(note 848 576 577 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 577 848 578 50 (set (reg:DI 289)
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -668 [0xfffffffffffffd64])) [0 month_temp_int+0 S4 A32]))) sim2fitman_read_procpar.cpp:265 133 {*zero_extendsidi2}
     (nil))
(insn 578 577 579 50 (set (reg:DI 290)
        (mem/u/c:DI (plus:DI (ashift:DI (reg:DI 289)
                    (const_int 3 [0x3]))
                (label_ref:DI 581)) [0  S8 A8])) sim2fitman_read_procpar.cpp:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (insn_list:REG_LABEL_OPERAND 581 (nil))))
(jump_insn 579 578 580 50 (parallel [
            (set (pc)
                (reg:DI 290))
            (use (label_ref 581))
        ]) sim2fitman_read_procpar.cpp:265 658 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 290)
        (nil))
 -> 581)
;;  succ:       63
;;              51
;;              52
;;              53
;;              54
;;              55
;;              56
;;              57
;;              58
;;              59
;;              60
;;              61
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 580 579 581)
;; Insn is not within a basic block
(code_label 581 580 582 28 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 582 581 583 (addr_vec:DI [
            (label_ref:DI 668)
            (label_ref:DI 584)
            (label_ref:DI 591)
            (label_ref:DI 598)
            (label_ref:DI 605)
            (label_ref:DI 612)
            (label_ref:DI 619)
            (label_ref:DI 626)
            (label_ref:DI 633)
            (label_ref:DI 640)
            (label_ref:DI 647)
            (label_ref:DI 654)
            (label_ref:DI 661)
        ]))
(barrier 583 582 584)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 291
(code_label 584 583 585 51 27 "" [1 uses])
(note 585 584 586 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 587 51 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:266 89 {*movdi_internal}
     (nil))
(insn 587 586 588 51 (parallel [
            (set (reg/f:DI 150 [ D.5857 ])
                (plus:DI (reg/f:DI 291)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:266 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 588 587 893 51 (set (mem:SI (reg/f:DI 150 [ D.5857 ]) [0 MEM[(void *)_184]+0 S4 A8])
        (const_int 7233866 [0x6e614a])) sim2fitman_read_procpar.cpp:266 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150 [ D.5857 ])
        (nil)))
(jump_insn 893 588 894 51 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:266 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 894 893 591)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151 292
(code_label 591 894 592 52 29 "" [1 uses])
(note 592 591 593 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 594 52 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:267 89 {*movdi_internal}
     (nil))
(insn 594 593 595 52 (parallel [
            (set (reg/f:DI 151 [ D.5857 ])
                (plus:DI (reg/f:DI 292)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:267 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 595 594 895 52 (set (mem:SI (reg/f:DI 151 [ D.5857 ]) [0 MEM[(void *)_186]+0 S4 A8])
        (const_int 6448454 [0x626546])) sim2fitman_read_procpar.cpp:267 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.5857 ])
        (nil)))
(jump_insn 895 595 896 52 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:267 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 896 895 598)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 293
(code_label 598 896 599 53 30 "" [1 uses])
(note 599 598 600 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 53 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:268 89 {*movdi_internal}
     (nil))
(insn 601 600 602 53 (parallel [
            (set (reg/f:DI 152 [ D.5857 ])
                (plus:DI (reg/f:DI 293)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:268 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 293)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 602 601 897 53 (set (mem:SI (reg/f:DI 152 [ D.5857 ]) [0 MEM[(void *)_188]+0 S4 A8])
        (const_int 7496013 [0x72614d])) sim2fitman_read_procpar.cpp:268 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.5857 ])
        (nil)))
(jump_insn 897 602 898 53 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:268 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 898 897 605)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 294
(code_label 605 898 606 54 31 "" [1 uses])
(note 606 605 607 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 608 54 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:269 89 {*movdi_internal}
     (nil))
(insn 608 607 609 54 (parallel [
            (set (reg/f:DI 153 [ D.5857 ])
                (plus:DI (reg/f:DI 294)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:269 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 294)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 609 608 899 54 (set (mem:SI (reg/f:DI 153 [ D.5857 ]) [0 MEM[(void *)_190]+0 S4 A8])
        (const_int 7499841 [0x727041])) sim2fitman_read_procpar.cpp:269 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ D.5857 ])
        (nil)))
(jump_insn 899 609 900 54 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:269 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 900 899 612)
;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 154 295
(code_label 612 900 613 55 32 "" [1 uses])
(note 613 612 614 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 614 613 615 55 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:270 89 {*movdi_internal}
     (nil))
(insn 615 614 616 55 (parallel [
            (set (reg/f:DI 154 [ D.5857 ])
                (plus:DI (reg/f:DI 295)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:270 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 616 615 901 55 (set (mem:SI (reg/f:DI 154 [ D.5857 ]) [0 MEM[(void *)_192]+0 S4 A8])
        (const_int 7954765 [0x79614d])) sim2fitman_read_procpar.cpp:270 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ D.5857 ])
        (nil)))
(jump_insn 901 616 902 55 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:270 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 902 901 619)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 155 296
(code_label 619 902 620 56 33 "" [1 uses])
(note 620 619 621 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 56 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:271 89 {*movdi_internal}
     (nil))
(insn 622 621 623 56 (parallel [
            (set (reg/f:DI 155 [ D.5857 ])
                (plus:DI (reg/f:DI 296)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:271 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 296)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 623 622 903 56 (set (mem:SI (reg/f:DI 155 [ D.5857 ]) [0 MEM[(void *)_194]+0 S4 A8])
        (const_int 7238986 [0x6e754a])) sim2fitman_read_procpar.cpp:271 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155 [ D.5857 ])
        (nil)))
(jump_insn 903 623 904 56 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:271 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 904 903 626)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 156 297
(code_label 626 904 627 57 34 "" [1 uses])
(note 627 626 628 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 57 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:272 89 {*movdi_internal}
     (nil))
(insn 629 628 630 57 (parallel [
            (set (reg/f:DI 156 [ D.5857 ])
                (plus:DI (reg/f:DI 297)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:272 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 630 629 905 57 (set (mem:SI (reg/f:DI 156 [ D.5857 ]) [0 MEM[(void *)_196]+0 S4 A8])
        (const_int 7107914 [0x6c754a])) sim2fitman_read_procpar.cpp:272 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ D.5857 ])
        (nil)))
(jump_insn 905 630 906 57 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:272 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 906 905 633)
;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 298
(code_label 633 906 634 58 35 "" [1 uses])
(note 634 633 635 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 58 (set (reg/f:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:273 89 {*movdi_internal}
     (nil))
(insn 636 635 637 58 (parallel [
            (set (reg/f:DI 157 [ D.5857 ])
                (plus:DI (reg/f:DI 298)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:273 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 298)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 637 636 907 58 (set (mem:SI (reg/f:DI 157 [ D.5857 ]) [0 MEM[(void *)_198]+0 S4 A8])
        (const_int 6780225 [0x677541])) sim2fitman_read_procpar.cpp:273 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ D.5857 ])
        (nil)))
(jump_insn 907 637 908 58 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:273 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 908 907 640)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158 299
(code_label 640 908 641 59 36 "" [1 uses])
(note 641 640 642 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 59 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:274 89 {*movdi_internal}
     (nil))
(insn 643 642 644 59 (parallel [
            (set (reg/f:DI 158 [ D.5857 ])
                (plus:DI (reg/f:DI 299)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:274 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 644 643 909 59 (set (mem:SI (reg/f:DI 158 [ D.5857 ]) [0 MEM[(void *)_200]+0 S4 A8])
        (const_int 7365971 [0x706553])) sim2fitman_read_procpar.cpp:274 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.5857 ])
        (nil)))
(jump_insn 909 644 910 59 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:274 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 910 909 647)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 159 300
(code_label 647 910 648 60 37 "" [1 uses])
(note 648 647 649 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 60 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:275 89 {*movdi_internal}
     (nil))
(insn 650 649 651 60 (parallel [
            (set (reg/f:DI 159 [ D.5857 ])
                (plus:DI (reg/f:DI 300)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:275 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 651 650 911 60 (set (mem:SI (reg/f:DI 159 [ D.5857 ]) [0 MEM[(void *)_202]+0 S4 A8])
        (const_int 7627599 [0x74634f])) sim2fitman_read_procpar.cpp:275 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.5857 ])
        (nil)))
(jump_insn 911 651 912 60 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:275 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 912 911 654)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160 301
(code_label 654 912 655 61 38 "" [1 uses])
(note 655 654 656 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 61 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:276 89 {*movdi_internal}
     (nil))
(insn 657 656 658 61 (parallel [
            (set (reg/f:DI 160 [ D.5857 ])
                (plus:DI (reg/f:DI 301)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:276 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 301)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 658 657 913 61 (set (mem:SI (reg/f:DI 160 [ D.5857 ]) [0 MEM[(void *)_204]+0 S4 A8])
        (const_int 7761742 [0x766f4e])) sim2fitman_read_procpar.cpp:276 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.5857 ])
        (nil)))
(jump_insn 913 658 914 61 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:276 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 914 913 661)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161 302
(code_label 661 914 662 62 39 "" [1 uses])
(note 662 661 663 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 62 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:277 89 {*movdi_internal}
     (nil))
(insn 664 663 665 62 (parallel [
            (set (reg/f:DI 161 [ D.5857 ])
                (plus:DI (reg/f:DI 302)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:277 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 665 664 915 62 (set (mem:SI (reg/f:DI 161 [ D.5857 ]) [0 MEM[(void *)_206]+0 S4 A8])
        (const_int 6513988 [0x636544])) sim2fitman_read_procpar.cpp:277 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.5857 ])
        (nil)))
(jump_insn 915 665 916 62 (set (pc)
        (label_ref 673)) sim2fitman_read_procpar.cpp:277 654 {jump}
     (nil)
 -> 673)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 916 915 668)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50
;;              49
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 303
(code_label 668 916 669 63 26 "" [2 uses])
(note 669 668 670 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 63 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:278 89 {*movdi_internal}
     (nil))
(insn 671 670 672 63 (parallel [
            (set (reg/f:DI 162 [ D.5857 ])
                (plus:DI (reg/f:DI 303)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:278 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 672 671 673 63 (set (mem:SI (reg/f:DI 162 [ D.5857 ]) [0 MEM[(void *)_208]+0 S4 A8])
        (const_int 2105376 [0x202020])) sim2fitman_read_procpar.cpp:278 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ D.5857 ])
        (nil)))
;;  succ:       64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;;              51 [100.0%] 
;;              52 [100.0%] 
;;              53 [100.0%] 
;;              54 [100.0%] 
;;              55 [100.0%] 
;;              56 [100.0%] 
;;              57 [100.0%] 
;;              58 [100.0%] 
;;              59 [100.0%] 
;;              60 [100.0%] 
;;              61 [100.0%] 
;;              62 [100.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 163 164 165 166 167 168 169 170 171 172 173 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322
(code_label 673 672 674 64 40 "" [12 uses])
(note 674 673 675 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 675 674 676 64 (set (reg/f:DI 304)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:280 89 {*movdi_internal}
     (nil))
(insn 676 675 677 64 (set (mem/j:QI (plus:DI (reg/f:DI 304)
                (const_int 11 [0xb])) [0 procpar_info_61(D)->ex_datetime+3 S1 A8])
        (const_int 32 [0x20])) sim2fitman_read_procpar.cpp:280 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 304)
        (nil)))
(insn 677 676 678 64 (set (reg:QI 163 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -586 [0xfffffffffffffdb6])) [0 date_temp+6 S1 A16])) sim2fitman_read_procpar.cpp:281 93 {*movqi_internal}
     (nil))
(insn 678 677 679 64 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:281 89 {*movdi_internal}
     (nil))
(insn 679 678 680 64 (set (mem/j:QI (plus:DI (reg/f:DI 305)
                (const_int 12 [0xc])) [0 procpar_info_61(D)->ex_datetime+4 S1 A32])
        (reg:QI 163 [ D.5856 ])) sim2fitman_read_procpar.cpp:281 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (expr_list:REG_DEAD (reg:QI 163 [ D.5856 ])
            (nil))))
(insn 680 679 681 64 (set (reg:QI 164 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -585 [0xfffffffffffffdb7])) [0 date_temp+7 S1 A8])) sim2fitman_read_procpar.cpp:282 93 {*movqi_internal}
     (nil))
(insn 681 680 682 64 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 682 681 683 64 (set (mem/j:QI (plus:DI (reg/f:DI 306)
                (const_int 13 [0xd])) [0 procpar_info_61(D)->ex_datetime+5 S1 A8])
        (reg:QI 164 [ D.5856 ])) sim2fitman_read_procpar.cpp:282 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 306)
        (expr_list:REG_DEAD (reg:QI 164 [ D.5856 ])
            (nil))))
(insn 683 682 684 64 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:283 89 {*movdi_internal}
     (nil))
(insn 684 683 685 64 (set (mem/j:QI (plus:DI (reg/f:DI 307)
                (const_int 14 [0xe])) [0 procpar_info_61(D)->ex_datetime+6 S1 A16])
        (const_int 32 [0x20])) sim2fitman_read_procpar.cpp:283 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 307)
        (nil)))
(insn 685 684 686 64 (set (reg:QI 165 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -592 [0xfffffffffffffdb0])) [0 date_temp+0 S1 A64])) sim2fitman_read_procpar.cpp:306 93 {*movqi_internal}
     (nil))
(insn 686 685 687 64 (set (reg/f:DI 308)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:306 89 {*movdi_internal}
     (nil))
(insn 687 686 688 64 (set (mem/j:QI (plus:DI (reg/f:DI 308)
                (const_int 15 [0xf])) [0 procpar_info_61(D)->ex_datetime+7 S1 A8])
        (reg:QI 165 [ D.5856 ])) sim2fitman_read_procpar.cpp:306 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (expr_list:REG_DEAD (reg:QI 165 [ D.5856 ])
            (nil))))
(insn 688 687 689 64 (set (reg:QI 166 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -591 [0xfffffffffffffdb1])) [0 date_temp+1 S1 A8])) sim2fitman_read_procpar.cpp:307 93 {*movqi_internal}
     (nil))
(insn 689 688 690 64 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:307 89 {*movdi_internal}
     (nil))
(insn 690 689 691 64 (set (mem/j:QI (plus:DI (reg/f:DI 309)
                (const_int 16 [0x10])) [0 procpar_info_61(D)->ex_datetime+8 S1 A64])
        (reg:QI 166 [ D.5856 ])) sim2fitman_read_procpar.cpp:307 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (expr_list:REG_DEAD (reg:QI 166 [ D.5856 ])
            (nil))))
(insn 691 690 692 64 (set (reg:QI 167 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -590 [0xfffffffffffffdb2])) [0 date_temp+2 S1 A16])) sim2fitman_read_procpar.cpp:308 93 {*movqi_internal}
     (nil))
(insn 692 691 693 64 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:308 89 {*movdi_internal}
     (nil))
(insn 693 692 694 64 (set (mem/j:QI (plus:DI (reg/f:DI 310)
                (const_int 17 [0x11])) [0 procpar_info_61(D)->ex_datetime+9 S1 A8])
        (reg:QI 167 [ D.5856 ])) sim2fitman_read_procpar.cpp:308 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 310)
        (expr_list:REG_DEAD (reg:QI 167 [ D.5856 ])
            (nil))))
(insn 694 693 695 64 (set (reg:QI 168 [ D.5856 ])
        (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -589 [0xfffffffffffffdb3])) [0 date_temp+3 S1 A8])) sim2fitman_read_procpar.cpp:309 93 {*movqi_internal}
     (nil))
(insn 695 694 696 64 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:309 89 {*movdi_internal}
     (nil))
(insn 696 695 697 64 (set (mem/j:QI (plus:DI (reg/f:DI 311)
                (const_int 18 [0x12])) [0 procpar_info_61(D)->ex_datetime+10 S1 A16])
        (reg:QI 168 [ D.5856 ])) sim2fitman_read_procpar.cpp:309 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (expr_list:REG_DEAD (reg:QI 168 [ D.5856 ])
            (nil))))
(insn 697 696 698 64 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:312 89 {*movdi_internal}
     (nil))
(insn 698 697 699 64 (set (mem/j:QI (plus:DI (reg/f:DI 312)
                (const_int 19 [0x13])) [0 procpar_info_61(D)->ex_datetime+11 S1 A8])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:312 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 312)
        (nil)))
(insn 699 698 700 64 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:315 89 {*movdi_internal}
     (nil))
(insn 700 699 701 64 (set (reg:DF 314)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC27") [flags 0x2]) [0  S8 A64])) sim2fitman_read_procpar.cpp:315 128 {*movdf_internal}
     (nil))
(insn 701 700 702 64 (set (mem/j:DF (plus:DI (reg/f:DI 313)
                (const_int 344 [0x158])) [0 procpar_info_61(D)->offset_frequency+0 S8 A64])
        (reg:DF 314)) sim2fitman_read_procpar.cpp:315 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 314)
        (expr_list:REG_DEAD (reg/f:DI 313)
            (nil))))
(insn 702 701 703 64 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:317 89 {*movdi_internal}
     (nil))
(insn 703 702 704 64 (set (mem/j:SI (plus:DI (reg/f:DI 315)
                (const_int 324 [0x144])) [0 procpar_info_61(D)->num_transients+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:317 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (nil)))
(insn 704 703 705 64 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:319 89 {*movdi_internal}
     (nil))
(insn 705 704 706 64 (set (reg:SF 317)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:319 129 {*movsf_internal}
     (nil))
(insn 706 705 707 64 (set (mem/j:SF (plus:DI (reg/f:DI 316)
                (const_int 400 [0x190])) [0 procpar_info_61(D)->vtheta+0 S4 A64])
        (reg:SF 317)) sim2fitman_read_procpar.cpp:319 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 317)
        (expr_list:REG_DEAD (reg/f:DI 316)
            (nil))))
(insn 707 706 708 64 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(insn 708 707 709 64 (set (reg:SI 169 [ D.5848 ])
        (mem/j:SI (plus:DI (reg/f:DI 318)
                (const_int 328 [0x148])) [0 procpar_info_61(D)->num_points+0 S4 A64])) sim2fitman_read_procpar.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318)
        (nil)))
(insn 709 708 710 64 (set (reg:SF 170 [ D.5852 ])
        (float:SF (reg:SI 169 [ D.5848 ]))) sim2fitman_read_procpar.cpp:321 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 169 [ D.5848 ])
        (nil)))
(insn 710 709 711 64 (set (reg:SF 171 [ D.5852 ])
        (mult:SF (reg:SF 170 [ D.5852 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -676 [0xfffffffffffffd5c])) [0 dwell+0 S4 A32]))) sim2fitman_read_procpar.cpp:321 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 170 [ D.5852 ])
        (nil)))
(insn 711 710 712 64 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:321 89 {*movdi_internal}
     (nil))
(insn 712 711 713 64 (set (mem/j:SF (reg/f:DI 319) [0 procpar_info_61(D)->acquision_time+0 S4 A64])
        (reg:SF 171 [ D.5852 ])) sim2fitman_read_procpar.cpp:321 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 319)
        (expr_list:REG_DEAD (reg:SF 171 [ D.5852 ])
            (nil))))
(insn 713 712 714 64 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:377 89 {*movdi_internal}
     (nil))
(insn 714 713 715 64 (set (reg:SF 321)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) sim2fitman_read_procpar.cpp:377 129 {*movsf_internal}
     (nil))
(insn 715 714 716 64 (set (mem/j:SF (plus:DI (reg/f:DI 320)
                (const_int 360 [0x168])) [0 procpar_info_61(D)->gain+0 S4 A64])
        (reg:SF 321)) sim2fitman_read_procpar.cpp:377 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 321)
        (expr_list:REG_DEAD (reg/f:DI 320)
            (nil))))
(insn 716 715 717 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f8d0c34d480 *.LC28>)) sim2fitman_read_procpar.cpp:378 89 {*movdi_internal}
     (nil))
(call_insn 717 716 718 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8d0c7e5000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:378 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f8d0c34d510 *.LC29>)) sim2fitman_read_procpar.cpp:379 89 {*movdi_internal}
     (nil))
(insn 719 718 720 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:379 93 {*movqi_internal}
     (nil))
(call_insn 720 719 721 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8d0c7e45e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:379 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 721 720 722 64 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:380 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 722 721 723 64 (set (reg:DI 5 di)
        (reg:DI 322)) sim2fitman_read_procpar.cpp:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(call_insn 723 722 724 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("gets") [flags 0x41]  <function_decl 0x7f8d0c5acaf8 gets>) [0 gets S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:380 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 724 723 725 64 (parallel [
            (set (reg/f:DI 172 [ D.5858 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:381 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 725 724 726 64 (set (reg:QI 173 [ D.5859 ])
        (mem:QI (reg/f:DI 172 [ D.5858 ]) [0 MEM[(const unsigned char * {ref-all})_236]+0 S1 A8])) sim2fitman_read_procpar.cpp:381 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 172 [ D.5858 ])
        (nil)))
(insn 726 725 727 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ D.5859 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:381 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 173 [ D.5859 ])
        (nil)))
(jump_insn 727 726 728 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) sim2fitman_read_procpar.cpp:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 783)
;;  succ:       65 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 174 323
(note 728 727 729 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 65 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:382 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 730 729 731 65 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:382 89 {*movdi_internal}
     (nil))
(insn 731 730 732 65 (set (reg:DI 5 di)
        (reg:DI 323)) sim2fitman_read_procpar.cpp:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 323)
        (nil)))
(call_insn 732 731 733 65 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:382 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 733 732 734 65 (set (reg:DF 174 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:382 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 734 733 775 65 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [0 temp_float+0 S4 A32])
        (float_truncate:SF (reg:DF 174 [ D.5851 ]))) sim2fitman_read_procpar.cpp:382 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 174 [ D.5851 ])
        (nil)))
;;  succ:       66 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;;              71 [100.0%] 
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 324
(code_label 775 734 735 66 46 "" [1 uses])
(note 735 775 736 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 66 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:383 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 737 736 738 66 (set (reg:DI 5 di)
        (reg:DI 324)) sim2fitman_read_procpar.cpp:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(call_insn 738 737 739 66 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f8d0c6dd438 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:383 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 739 738 740 66 (set (reg:QI 175 [ D.5849 ])
        (reg:QI 0 ax)) sim2fitman_read_procpar.cpp:383 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 740 739 741 66 (parallel [
            (set (reg:QI 176 [ D.5849 ])
                (xor:QI (reg:QI 175 [ D.5849 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:383 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 175 [ D.5849 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 741 740 742 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:383 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 176 [ D.5849 ])
        (nil)))
(jump_insn 742 741 743 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 750)
            (pc))) sim2fitman_read_procpar.cpp:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 750)
;;  succ:       68
;;              67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 177 325
(note 743 742 744 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 67 (set (reg:SF 325)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [0 temp_float+0 S4 A32])) sim2fitman_read_procpar.cpp:383 129 {*movsf_internal}
     (nil))
(insn 745 744 746 67 (set (reg:SF 21 xmm0)
        (reg:SF 325)) sim2fitman_read_procpar.cpp:383 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 325)
        (nil)))
(call_insn 746 745 747 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5isNANf") [flags 0x41]  <function_decl 0x7f8d0c6dda20 isNAN>) [0 isNAN S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:383 669 {*call_value}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 747 746 748 67 (set (reg:SI 177 [ D.5848 ])
        (reg:SI 0 ax)) sim2fitman_read_procpar.cpp:383 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 748 747 749 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 177 [ D.5848 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:383 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 177 [ D.5848 ])
        (nil)))
(jump_insn 749 748 750 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 755)
            (pc))) sim2fitman_read_procpar.cpp:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 755)
;;  succ:       68 (FALLTHRU)
;;              69
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66
;;              67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 89
(code_label 750 749 751 68 42 "" [1 uses])
(note 751 750 752 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 752 751 917 68 (set (reg:QI 89 [ D.5849 ])
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:383 93 {*movqi_internal}
     (nil))
(jump_insn 917 752 918 68 (set (pc)
        (label_ref 758)) sim2fitman_read_procpar.cpp:383 654 {jump}
     (nil)
 -> 758)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

(barrier 918 917 755)
;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 89
(code_label 755 918 756 69 43 "" [1 uses])
(note 756 755 757 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 69 (set (reg:QI 89 [ D.5849 ])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:383 93 {*movqi_internal}
     (nil))
;;  succ:       70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;;              68 [100.0%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
(code_label 758 757 759 70 44 "" [1 uses])
(note 759 758 760 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 760 759 761 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.5849 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:383 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.5849 ])
        (nil)))
(jump_insn 761 760 762 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 778)
            (pc))) sim2fitman_read_procpar.cpp:383 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 778)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 178 326 327
(note 762 761 763 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 71 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f8d0c34d5a0 *.LC30>)) sim2fitman_read_procpar.cpp:384 89 {*movdi_internal}
     (nil))
(insn 764 763 765 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:384 93 {*movqi_internal}
     (nil))
(call_insn 765 764 766 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8d0c7e45e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:384 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 766 765 767 71 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:385 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 767 766 768 71 (set (reg:DI 5 di)
        (reg:DI 326)) sim2fitman_read_procpar.cpp:385 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(call_insn 768 767 769 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("gets") [flags 0x41]  <function_decl 0x7f8d0c5acaf8 gets>) [0 gets S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:385 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 769 768 770 71 (parallel [
            (set (reg:DI 327)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -528 [0xfffffffffffffdf0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:386 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 770 769 771 71 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:386 89 {*movdi_internal}
     (nil))
(insn 771 770 772 71 (set (reg:DI 5 di)
        (reg:DI 327)) sim2fitman_read_procpar.cpp:386 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 327)
        (nil)))
(call_insn 772 771 773 71 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("strtod") [flags 0x41]  <function_decl 0x7f8d0c663870 strtod>) [0 strtod S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:386 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 773 772 774 71 (set (reg:DF 178 [ D.5851 ])
        (reg:DF 21 xmm0)) sim2fitman_read_procpar.cpp:386 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 774 773 919 71 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [0 temp_float+0 S4 A32])
        (float_truncate:SF (reg:DF 178 [ D.5851 ]))) sim2fitman_read_procpar.cpp:386 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 178 [ D.5851 ])
        (nil)))
(jump_insn 919 774 920 71 (set (pc)
        (label_ref 775)) sim2fitman_read_procpar.cpp:383 654 {jump}
     (nil)
 -> 775)
;;  succ:       66 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 920 919 778)
;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 328 329
(code_label 778 920 779 72 45 "" [1 uses])
(note 779 778 780 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 72 (set (reg/f:DI 328)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:388 89 {*movdi_internal}
     (nil))
(insn 781 780 782 72 (set (reg:SF 329)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -672 [0xfffffffffffffd60])) [0 temp_float+0 S4 A32])) sim2fitman_read_procpar.cpp:388 129 {*movsf_internal}
     (nil))
(insn 782 781 783 72 (set (mem/j:SF (plus:DI (reg/f:DI 328)
                (const_int 360 [0x168])) [0 procpar_info_61(D)->gain+0 S4 A64])
        (reg:SF 329)) sim2fitman_read_procpar.cpp:388 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 329)
        (expr_list:REG_DEAD (reg/f:DI 328)
            (nil))))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64
;;              72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 179 180 181 182 183 184 185 186 187 188 189 330 331 332 333 334 335 336 337 338 339 342 343 344
(code_label 783 782 784 73 41 "" [1 uses])
(note 784 783 785 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 73 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:395 89 {*movdi_internal}
     (nil))
(insn 786 785 787 73 (set (mem/j:SI (reg/f:DI 330) [0 infile_struct_50(D)->num_datasets+0 S4 A64])
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:395 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 330)
        (nil)))
(insn 787 786 788 73 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 main_header+0 S8 A64])) sim2fitman_read_procpar.cpp:397 89 {*movdi_internal}
     (nil))
(insn 788 787 789 73 (set (mem/j:DI (plus:DI (reg/f:DI 331)
                (const_int 24 [0x18])) [0 main_header_57(D)->ebytes.number+0 S8 A64])
        (const_int 16 [0x10])) sim2fitman_read_procpar.cpp:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 331)
        (nil)))
(insn 789 788 790 73 (set (reg:DI 332)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:402 89 {*movdi_internal}
     (nil))
(insn 790 789 791 73 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) sim2fitman_read_procpar.cpp:402 90 {*movsi_internal}
     (nil))
(insn 791 790 792 73 (set (reg:DI 4 si)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:402 89 {*movdi_internal}
     (nil))
(insn 792 791 793 73 (set (reg:DI 5 di)
        (reg:DI 332)) sim2fitman_read_procpar.cpp:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(call_insn 793 792 794 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f8d0c5ac438 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:402 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 794 793 795 73 (set (reg/f:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:403 89 {*movdi_internal}
     (nil))
(insn 795 794 796 73 (set (reg:DI 334)
        (mem/j:DI (plus:DI (reg/f:DI 333)
                (const_int 24 [0x18])) [0 infile_struct_50(D)->hdr_offset+0 S8 A64])) sim2fitman_read_procpar.cpp:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 333)
        (nil)))
(insn 796 795 797 73 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -624 [0xfffffffffffffd90])) [0 header_size+0 S8 A64])
        (reg:DI 334)) sim2fitman_read_procpar.cpp:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 334)
        (nil)))
(insn 797 796 798 73 (set (reg:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -712 [0xfffffffffffffd38])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:404 89 {*movdi_internal}
     (nil))
(insn 798 797 799 73 (set (reg:DI 5 di)
        (reg:DI 335)) sim2fitman_read_procpar.cpp:404 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 335)
        (nil)))
(call_insn 799 798 800 73 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f8d0c5ac6c0 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:404 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 800 799 801 73 (set (reg:DI 179 [ D.5850 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:404 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 801 800 802 73 (set (reg:SI 180 [ D.5848 ])
        (subreg:SI (reg:DI 179 [ D.5850 ]) 0)) sim2fitman_read_procpar.cpp:404 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 179 [ D.5850 ])
        (nil)))
(insn 802 801 803 73 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:404 89 {*movdi_internal}
     (nil))
(insn 803 802 804 73 (set (mem/j:SI (plus:DI (reg/f:DI 336)
                (const_int 8 [0x8])) [0 infile_struct_50(D)->file_size+0 S4 A64])
        (reg:SI 180 [ D.5848 ])) sim2fitman_read_procpar.cpp:404 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 336)
        (expr_list:REG_DEAD (reg:SI 180 [ D.5848 ])
            (nil))))
(insn 804 803 805 73 (set (reg/f:DI 337)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -736 [0xfffffffffffffd20])) [0 main_header+0 S8 A64])) sim2fitman_read_procpar.cpp:405 89 {*movdi_internal}
     (nil))
(insn 805 804 806 73 (set (reg:DI 181 [ D.5850 ])
        (mem/j:DI (plus:DI (reg/f:DI 337)
                (const_int 24 [0x18])) [0 main_header_57(D)->ebytes.number+0 S8 A64])) sim2fitman_read_procpar.cpp:405 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 337)
        (nil)))
(insn 806 805 807 73 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -696 [0xfffffffffffffd48])) [0 procpar_info+0 S8 A64])) sim2fitman_read_procpar.cpp:405 89 {*movdi_internal}
     (nil))
(insn 807 806 808 73 (set (reg:SI 182 [ D.5848 ])
        (mem/j:SI (plus:DI (reg/f:DI 338)
                (const_int 328 [0x148])) [0 procpar_info_61(D)->num_points+0 S4 A64])) sim2fitman_read_procpar.cpp:405 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (nil)))
(insn 808 807 809 73 (set (reg:DI 183 [ D.5850 ])
        (sign_extend:DI (reg:SI 182 [ D.5848 ]))) sim2fitman_read_procpar.cpp:405 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 182 [ D.5848 ])
        (nil)))
(insn 809 808 810 73 (parallel [
            (set (reg:DI 184 [ D.5850 ])
                (mult:DI (reg:DI 181 [ D.5850 ])
                    (reg:DI 183 [ D.5850 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:405 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 183 [ D.5850 ])
        (expr_list:REG_DEAD (reg:DI 181 [ D.5850 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 810 809 811 73 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:406 89 {*movdi_internal}
     (nil))
(insn 811 810 812 73 (set (reg:SI 185 [ D.5848 ])
        (mem/j:SI (reg/f:DI 339) [0 infile_struct_50(D)->num_datasets+0 S4 A64])) sim2fitman_read_procpar.cpp:406 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 339)
        (nil)))
(insn 812 811 813 73 (set (reg:DI 186 [ D.5850 ])
        (sign_extend:DI (reg:SI 185 [ D.5848 ]))) sim2fitman_read_procpar.cpp:406 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 185 [ D.5848 ])
        (nil)))
(insn 813 812 817 73 (parallel [
            (set (reg:DI 187 [ D.5850 ])
                (mult:DI (reg:DI 184 [ D.5850 ])
                    (reg:DI 186 [ D.5850 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:406 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 186 [ D.5850 ])
        (expr_list:REG_DEAD (reg:DI 184 [ D.5850 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 817 813 818 73 (set (reg:DI 343)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -624 [0xfffffffffffffd90])) [0 header_size+0 S8 A64])) sim2fitman_read_procpar.cpp:406 89 {*movdi_internal}
     (nil))
(insn 818 817 819 73 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg:DI 187 [ D.5850 ])
                    (reg:DI 343)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_read_procpar.cpp:406 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 343)
        (expr_list:REG_DEAD (reg:DI 187 [ D.5850 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 187 [ D.5850 ])
                        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -624 [0xfffffffffffffd90])) [0 header_size+0 S8 A64]))
                    (nil))))))
(insn 819 818 820 73 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -656 [0xfffffffffffffd70])) [0 calc_filesize+0 S8 A64])
        (reg:DI 342)) sim2fitman_read_procpar.cpp:406 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 342)
        (nil)))
(insn 820 819 821 73 (set (reg/f:DI 344)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -728 [0xfffffffffffffd28])) [0 infile_struct+0 S8 A64])) sim2fitman_read_procpar.cpp:407 89 {*movdi_internal}
     (nil))
(insn 821 820 822 73 (set (reg:SI 188 [ D.5848 ])
        (mem/j:SI (plus:DI (reg/f:DI 344)
                (const_int 8 [0x8])) [0 infile_struct_50(D)->file_size+0 S4 A64])) sim2fitman_read_procpar.cpp:407 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 344)
        (nil)))
(insn 822 821 823 73 (set (reg:DI 189 [ D.5850 ])
        (sign_extend:DI (reg:SI 188 [ D.5848 ]))) sim2fitman_read_procpar.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 188 [ D.5848 ])
        (nil)))
(insn 823 822 824 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 189 [ D.5850 ])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -656 [0xfffffffffffffd70])) [0 calc_filesize+0 S8 A64]))) sim2fitman_read_procpar.cpp:407 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 189 [ D.5850 ])
        (nil)))
(jump_insn 824 823 825 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) sim2fitman_read_procpar.cpp:407 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 829)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 825 824 826 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 826 825 921 74 (set (reg:SI 87 [ D.5848 ])
        (const_int -3 [0xfffffffffffffffd])) sim2fitman_read_procpar.cpp:408 90 {*movsi_internal}
     (nil))
(jump_insn 921 826 922 74 (set (pc)
        (label_ref 834)) sim2fitman_read_procpar.cpp:408 654 {jump}
     (nil)
 -> 834)
;;  succ:       76 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 922 921 829)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 829 922 830 75 47 "" [1 uses])
(note 830 829 831 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 834 75 (set (reg:SI 87 [ D.5848 ])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:413 90 {*movsi_internal}
     (nil))
;;  succ:       76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;;              47 [100.0%] 
;;              3 [100.0%] 
;;              74 [100.0%] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 190
(code_label 834 831 835 76 48 "" [3 uses])
(note 835 834 836 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 836 835 840 76 (set (reg:SI 190 [ <retval> ])
        (reg:SI 87 [ D.5848 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.5848 ])
        (nil)))
(insn 840 836 841 76 (set (reg/i:SI 0 ax)
        (reg:SI 190 [ <retval> ])) sim2fitman_read_procpar.cpp:415 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 190 [ <retval> ])
        (nil)))
(insn 841 840 842 76 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5860+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sim2fitman_read_procpar.cpp:415 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 842 841 849 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 845)
            (pc))) sim2fitman_read_procpar.cpp:415 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 845)
;;  succ:       78
;;              77 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 849 842 843 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(call_insn 843 849 844 77 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f8d0c32c510 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:415 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 844 843 845)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 845 844 850 78 49 "" [1 uses])
(note 850 845 846 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 846 850 0 78 (use (reg/i:SI 0 ax)) sim2fitman_read_procpar.cpp:415 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int read_field(FILE*, char*, int, long int, int, bool) (_Z10read_fieldP8_IO_FILEPcilib, funcdef_no=3, decl_uid=5417, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best CREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 58(l0): point = 0
   Insn 57(l0): point = 2
   Insn 53(l0): point = 4
   Insn 50(l0): point = 7
   Insn 47(l0): point = 10
   Insn 46(l0): point = 12
   Insn 45(l0): point = 14
   Insn 44(l0): point = 16
   Insn 43(l0): point = 18
   Insn 41(l0): point = 21
   Insn 40(l0): point = 23
   Insn 60(l0): point = 26
   Insn 35(l0): point = 28
   Insn 33(l0): point = 31
   Insn 32(l0): point = 33
   Insn 31(l0): point = 35
   Insn 30(l0): point = 37
   Insn 29(l0): point = 39
   Insn 28(l0): point = 41
   Insn 27(l0): point = 43
   Insn 26(l0): point = 45
   Insn 25(l0): point = 47
   Insn 24(l0): point = 49
   Insn 23(l0): point = 51
   Insn 22(l0): point = 53
   Insn 21(l0): point = 55
   Insn 20(l0): point = 57
   Insn 19(l0): point = 59
   Insn 18(l0): point = 61
   Insn 17(l0): point = 63
   Insn 16(l0): point = 65
   Insn 15(l0): point = 67
   Insn 14(l0): point = 69
   Insn 13(l0): point = 71
   Insn 12(l0): point = 73
   Insn 8(l0): point = 75
   Insn 7(l0): point = 77
   Insn 6(l0): point = 79
   Insn 5(l0): point = 81
   Insn 4(l0): point = 83
   Insn 3(l0): point = 85
   Insn 2(l0): point = 87
 a0(r92): [3..4]
 a1(r87): [26..28] [5..7]
 a2(r101): [13..16]
 a3(r100): [15..18]
 a4(r91): [34..35]
 a5(r90): [38..39]
 a6(r89): [38..43]
 a7(r99): [40..41]
 a8(r98): [48..55]
 a9(r88): [52..59]
 a10(r97): [54..57]
 a11(r96): [60..61]
 a12(r95): [66..71]
 a13(r94): [68..73]
 a14(r93): [76..77]
Compressing live ranges: from 90 to 22 - 24%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [6..7] [2..3]
 a2(r101): [4..5]
 a3(r100): [4..5]
 a4(r91): [8..9]
 a5(r90): [10..11]
 a6(r89): [10..13]
 a7(r99): [12..13]
 a8(r98): [14..15]
 a9(r88): [14..15]
 a10(r97): [14..15]
 a11(r96): [16..17]
 a12(r95): [18..19]
 a13(r94): [18..19]
 a14(r93): [20..21]
  regions=1, blocks=8, points=22
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
    1:r87  l0     0    9:r88  l0     1    6:r89  l0     1    5:r90  l0     0
    4:r91  l0     0    0:r92  l0     0   14:r93  l0     0   13:r94  l0     2
   12:r95  l0     0   11:r96  l0     0   10:r97  l0     2    8:r98  l0     0
    7:r99  l0     0    3:r100 l0     1    2:r101 l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int read_field(FILE*, char*, int, long int, int, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={5d,3u} r1={6d,3u} r2={5d,2u} r4={7d,4u} r5={7d,4u} r6={1d,7u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,6u} r17={6d,3u} r18={3d} r19={3d} r20={1d,22u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d,1u} r38={4d,1u} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 345{264d,81u,0e} in 42{39 regular + 3 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 93 94 95 96 97 98 99
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) sim2fitman_read_procpar.cpp:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ in_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])
        (reg:DI 4 si [ var_pointer ])) sim2fitman_read_procpar.cpp:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ var_pointer ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])
        (reg:SI 1 dx [ var_size ])) sim2fitman_read_procpar.cpp:420 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ var_size ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])
        (reg:DI 2 cx [ hdr_field_offset ])) sim2fitman_read_procpar.cpp:420 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ hdr_field_offset ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])
        (reg:SI 37 r8 [ hdr_field_size ])) sim2fitman_read_procpar.cpp:420 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ hdr_field_size ])
        (nil)))
(insn 7 6 8 2 (set (reg:SI 93)
        (reg:SI 38 r9 [ swap_bytes ])) sim2fitman_read_procpar.cpp:420 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [ swap_bytes ])
        (nil)))
(insn 8 7 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
        (subreg:QI (reg:SI 93) 0)) sim2fitman_read_procpar.cpp:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])) sim2fitman_read_procpar.cpp:422 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:422 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:422 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 94)) sim2fitman_read_procpar.cpp:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 95)) sim2fitman_read_procpar.cpp:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f8d0c5ac438 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:422 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) sim2fitman_read_procpar.cpp:423 90 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 88 [ D.5891 ])
        (sign_extend:DI (reg:SI 96))) sim2fitman_read_procpar.cpp:423 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 2 cx)
        (reg:DI 97)) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.5891 ])) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.5891 ])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 98)) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f8d0c5ac5e8 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:423 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 89 [ D.5891 ])
        (reg:DI 0 ax)) sim2fitman_read_procpar.cpp:423 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 27 29 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) sim2fitman_read_procpar.cpp:423 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 90 [ D.5891 ])
        (sign_extend:DI (reg:SI 99))) sim2fitman_read_procpar.cpp:423 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.5891 ])
            (reg:DI 90 [ D.5891 ]))) sim2fitman_read_procpar.cpp:423 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.5891 ])
        (expr_list:REG_DEAD (reg:DI 89 [ D.5891 ])
            (nil))))
(insn 31 30 32 2 (set (reg:QI 91 [ D.5892 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:423 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ D.5892 ])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:423 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 91 [ D.5892 ])
        (nil)))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) sim2fitman_read_procpar.cpp:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 60 3 (set (reg:SI 87 [ D.5890 ])
        (const_int -1 [0xffffffffffffffff])) sim2fitman_read_procpar.cpp:424 90 {*movsi_internal}
     (nil))
(jump_insn 60 35 61 3 (set (pc)
        (label_ref 51)) sim2fitman_read_procpar.cpp:424 654 {jump}
     (nil)
 -> 51)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 61 60 38)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 38 61 39 4 51 "" [1 uses])
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_read_procpar.cpp:430 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) sim2fitman_read_procpar.cpp:430 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100 101
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg:SI 100)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])) sim2fitman_read_procpar.cpp:431 90 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) sim2fitman_read_procpar.cpp:431 89 {*movdi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:SI 4 si)
        (reg:SI 100)) sim2fitman_read_procpar.cpp:431 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100)
        (nil)))
(insn 46 45 47 5 (set (reg:DI 5 di)
        (reg:DI 101)) sim2fitman_read_procpar.cpp:431 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(call_insn 47 46 48 5 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f8d0c6dd798 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:431 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 48 47 49 6 53 "" [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:SI 87 [ D.5890 ])
        (const_int 0 [0])) sim2fitman_read_procpar.cpp:438 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 92
(code_label 51 50 52 7 52 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 57 7 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.5890 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.5890 ])
        (nil)))
(insn 57 53 58 7 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) sim2fitman_read_procpar.cpp:440 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ <retval> ])
        (nil)))
(insn 58 57 0 7 (use (reg/i:SI 0 ax)) sim2fitman_read_procpar.cpp:440 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

