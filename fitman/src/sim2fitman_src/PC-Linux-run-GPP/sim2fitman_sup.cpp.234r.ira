
;; Function void endianCheck_system(Endian_Check*, bool) (_Z18endianCheck_systemP12Endian_Checkb, funcdef_no=2, decl_uid=5488, cgraph_uid=2, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 32.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 43(l0): point = 1
   Insn 32(l0): point = 4
   Insn 31(l0): point = 6
   Insn 29(l0): point = 9
   Insn 28(l0): point = 11
   Insn 27(l0): point = 13
   Insn 26(l0): point = 15
   Insn 37(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 18(l0): point = 25
   Insn 17(l0): point = 27
   Insn 16(l0): point = 29
   Insn 15(l0): point = 31
   Insn 13(l0): point = 34
   Insn 12(l0): point = 36
   Insn 11(l0): point = 38
   Insn 10(l0): point = 40
   Insn 9(l0): point = 42
   Insn 8(l0): point = 44
   Insn 4(l0): point = 46
   Insn 3(l0): point = 48
   Insn 2(l0): point = 50
 a0(r91): [14..15]
 a1(r90): [30..31]
 a2(r88): [37..38]
 a3(r87): [41..42]
 a4(r89): [47..48]
Compressing live ranges: from 53 to 10 - 18%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r88): [4..5]
 a3(r87): [6..7]
 a4(r89): [8..9]
  regions=1, blocks=9, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     0    2:r88  l0     0    4:r89  l0     0    1:r90  l0     0
    0:r91  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void endianCheck_system(Endian_Check*, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={4d} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,8u} r7={1d,11u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,7u} r17={7d,4u} r18={3d} r19={3d} r20={1d,14u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 300{246d,54u,0e} in 23{20 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])
        (reg:DI 5 di [ endian_check ])) sim2fitman_sup.cpp:21 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ endian_check ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 89)
        (reg:SI 4 si [ verbose ])) sim2fitman_sup.cpp:21 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ verbose ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A32])
        (subreg:QI (reg:SI 89) 0)) sim2fitman_sup.cpp:21 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 8 5 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11isBigEndianv") [flags 0x3]  <function_decl 0x7ff9ba86a510 isBigEndian>) [0 isBigEndian S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 9 8 10 2 (set (reg:SI 87 [ D.6485 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.6485 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6485 ])
        (nil)))
(insn 11 10 12 2 (set (reg:QI 88 [ D.6486 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.6486 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ D.6486 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) sim2fitman_sup.cpp:24 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:25 89 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (mem/j:SI (reg/f:DI 90) [0 endian_check_6(D)->systemStruct+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:25 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:26 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) sim2fitman_sup.cpp:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       4 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff9ba452120 *.LC0>)) sim2fitman_sup.cpp:27 89 {*movdi_internal}
     (nil))
(call_insn 21 20 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:27 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 37 21 38 4 (set (pc)
        (label_ref:DI 42)) sim2fitman_sup.cpp:36 654 {jump}
     (nil)
 -> 42)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(code_label 24 38 25 5 2 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:31 89 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (mem/j:SI (reg/f:DI 91) [0 endian_check_6(D)->systemStruct+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:31 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:32 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) sim2fitman_sup.cpp:32 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7ff9ba4521b0 *.LC1>)) sim2fitman_sup.cpp:33 89 {*movdi_internal}
     (nil))
(call_insn 32 31 42 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:33 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;;              4 [100.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 42 32 41 8 4 "" [3 uses])
(note 41 42 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 35 8 (const_int 0 [0]) sim2fitman_sup.cpp:36 684 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 35 43 36 7 1 "" [0 uses])
(note 36 35 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int endianCheck_file(FILE*, Endian_Check*, bool*, char*, bool) (_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb, funcdef_no=3, decl_uid=5494, cgraph_uid=3, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 15 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 62(l0): point = 0
   Insn 61(l0): point = 2
   Insn 57(l0): point = 4
   Insn 54(l0): point = 6
   Insn 51(l0): point = 9
   Insn 50(l0): point = 11
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 44(l0): point = 19
   Insn 43(l0): point = 21
   Insn 64(l0): point = 24
   Insn 38(l0): point = 26
   Insn 37(l0): point = 28
   Insn 34(l0): point = 31
   Insn 33(l0): point = 33
   Insn 31(l0): point = 36
   Insn 30(l0): point = 38
   Insn 28(l0): point = 41
   Insn 27(l0): point = 43
   Insn 26(l0): point = 45
   Insn 25(l0): point = 47
   Insn 24(l0): point = 49
   Insn 23(l0): point = 51
   Insn 20(l0): point = 54
   Insn 19(l0): point = 56
   Insn 18(l0): point = 58
   Insn 17(l0): point = 60
   Insn 16(l0): point = 62
   Insn 15(l0): point = 64
   Insn 14(l0): point = 66
   Insn 12(l0): point = 69
   Insn 11(l0): point = 71
   Insn 7(l0): point = 73
   Insn 6(l0): point = 75
   Insn 5(l0): point = 77
   Insn 4(l0): point = 79
   Insn 3(l0): point = 81
   Insn 2(l0): point = 83
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r95): [10..11]
 a3(r94): [27..28]
 a4(r87): [44..45]
 a5(r93): [46..47]
 a6(r92): [50..51]
 a7(r91): [65..66]
 a8(r90): [74..75]
Compressing live ranges: from 86 to 18 - 20%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r95): [4..5]
 a3(r94): [6..7]
 a4(r87): [8..9]
 a5(r93): [10..11]
 a6(r92): [12..13]
 a7(r91): [14..15]
 a8(r90): [16..17]
  regions=1, blocks=12, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    8:r90  l0     0
    7:r91  l0     0    6:r92  l0     0    5:r93  l0     0    3:r94  l0     0
    2:r95  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int endianCheck_file(FILE*, Endian_Check*, bool*, char*, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={7d,3u} r1={5d,1u} r2={5d,1u} r4={6d,2u} r5={9d,5u} r6={1d,11u} r7={1d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,10u} r17={8d,4u} r18={4d} r19={4d} r20={1d,24u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 413{327d,86u,0e} in 38{34 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 90
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) sim2fitman_sup.cpp:44 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ in_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])
        (reg:DI 4 si [ endian_check ])) sim2fitman_sup.cpp:44 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ endian_check ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])
        (reg:DI 1 dx [ swap_bytes ])) sim2fitman_sup.cpp:44 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ swap_bytes ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 filename+0 S8 A64])
        (reg:DI 2 cx [ filename ])) sim2fitman_sup.cpp:44 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ filename ])
        (nil)))
(insn 6 5 7 2 (set (reg:SI 90)
        (reg:SI 37 r8 [ verbose ])) sim2fitman_sup.cpp:44 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ verbose ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A32])
        (subreg:QI (reg:SI 90) 0)) sim2fitman_sup.cpp:44 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:53 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) sim2fitman_sup.cpp:53 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 filename+0 S8 A64])) sim2fitman_sup.cpp:54 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 91)) sim2fitman_sup.cpp:54 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ff9ba452870 *.LC2>)) sim2fitman_sup.cpp:54 89 {*movdi_internal}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:54 93 {*movqi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:54 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ff9ba452900 *.LC3>)) sim2fitman_sup.cpp:55 89 {*movdi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:55 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92 93
(code_label 21 20 22 4 6 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:57 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 92)
                (const_int 4 [0x4])) [0 endian_check_10(D)->fileStruct+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:57 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 25 24 26 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:59 89 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 87 [ D.6489 ])
        (mem/j:SI (reg/f:DI 93) [0 endian_check_10(D)->systemStruct+0 S4 A32])) sim2fitman_sup.cpp:59 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.6489 ])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:59 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6489 ])
        (nil)))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) sim2fitman_sup.cpp:59 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:61 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) sim2fitman_sup.cpp:61 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ff9ba452990 *.LC4>)) sim2fitman_sup.cpp:62 89 {*movdi_internal}
     (nil))
(call_insn 34 33 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:62 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 94
(code_label 35 34 36 7 8 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])) sim2fitman_sup.cpp:64 89 {*movdi_internal}
     (nil))
(insn 38 37 64 7 (set (mem:QI (reg/f:DI 94) [0 *swap_bytes_14(D)+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:64 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(jump_insn 64 38 65 7 (set (pc)
        (label_ref 52)) 654 {jump}
     (nil)
 -> 52)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 65 64 41)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 41 65 42 8 7 "" [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:67 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) sim2fitman_sup.cpp:67 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7ff9ba452a20 *.LC5>)) sim2fitman_sup.cpp:68 89 {*movdi_internal}
     (nil))
(call_insn 47 46 48 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:68 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 95
(code_label 48 47 49 10 10 "" [1 uses])
(note 49 48 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 10 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])) sim2fitman_sup.cpp:70 89 {*movdi_internal}
     (nil))
(insn 51 50 52 10 (set (mem:QI (reg/f:DI 95) [0 *swap_bytes_14(D)+0 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:70 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              7 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 88 89
(code_label 52 51 53 11 9 "" [1 uses])
(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 57 11 (set (reg:SI 88 [ D.6489 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:74 90 {*movsi_internal}
     (nil))
(insn 57 54 61 11 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.6489 ])) sim2fitman_sup.cpp:74 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6489 ])
        (nil)))
(insn 61 57 62 11 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) sim2fitman_sup.cpp:75 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ <retval> ])
        (nil)))
(insn 62 61 0 11 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:75 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int isBigEndian() (_Z11isBigEndianv, funcdef_no=4, decl_uid=5485, cgraph_uid=4, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 8 (    1)
Building IRA IR
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8

   Insn 32(l0): point = 0
   Insn 29(l0): point = 3
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 22(l0): point = 12
   Insn 17(l0): point = 15
   Insn 36(l0): point = 18
   Insn 12(l0): point = 20
   Insn 10(l0): point = 23
   Insn 9(l0): point = 25
   Insn 8(l0): point = 27
   Insn 7(l0): point = 29
   Insn 6(l0): point = 31
   Insn 3(l0): point = 33
 a0(r90): [11..12]
 a1(r87): [18..20] [13..15]
 a2(r89): [26..27]
 a3(r88): [28..29]
Compressing live ranges: from 36 to 10 - 27%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [2..5]
 a2(r89): [6..7]
 a3(r88): [8..9]
  regions=1, blocks=8, points=10
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     0    3:r88  l0     0    2:r89  l0     0    0:r90  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int isBigEndian()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={2d} r5={2d} r6={1d,7u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,6u} r17={5d,2u} r18={1d} r19={1d} r20={1d,11u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 141{101d,40u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6497+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:82 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 3 7 2 (set (mem/c:HI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 word+0 S2 A16])
        (const_int 17185 [0x4321])) sim2fitman_sup.cpp:83 92 {*movhi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg/f:DI 88 [ D.6495 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -10 [0xfffffffffffffff6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:84 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 7 9 2 (set (reg:QI 89 [ D.6496 ])
        (mem:QI (reg/f:DI 88 [ D.6495 ]) [0 MEM[(char *)_4]+0 S1 A8])) sim2fitman_sup.cpp:84 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.6495 ])
        (nil)))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.6496 ])
            (const_int 33 [0x21]))) sim2fitman_sup.cpp:84 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.6496 ])
        (nil)))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) sim2fitman_sup.cpp:84 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 36 3 (set (reg:SI 87 [ D.6494 ])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:85 90 {*movsi_internal}
     (nil))
(jump_insn 36 12 37 3 (set (pc)
        (label_ref 20)) sim2fitman_sup.cpp:85 654 {jump}
     (nil)
 -> 20)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 37 36 15)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 15 37 16 4 13 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 20 4 (set (reg:SI 87 [ D.6494 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:87 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 90
(code_label 20 17 21 5 15 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.6494 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6494 ])
        (nil)))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) sim2fitman_sup.cpp:89 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ <retval> ])
        (nil)))
(insn 27 26 28 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6497+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sim2fitman_sup.cpp:89 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 28 27 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) sim2fitman_sup.cpp:89 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 34 28 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 29 34 30 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7ff9ba875d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:89 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 31)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 31 30 35 7 16 "" [1 uses])
(note 35 31 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 35 0 7 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:89 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool isNumber(char*) (_Z8isNumberPc, funcdef_no=5, decl_uid=5484, cgraph_uid=5, symbol_order=5)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 20 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:9
  a2(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 102(l0): point = 0
   Insn 101(l0): point = 2
   Insn 97(l0): point = 4
   Insn 94(l0): point = 7
   Insn 114(l0): point = 10
   Insn 89(l0): point = 12
   Insn 112(l0): point = 15
   Insn 84(l0): point = 17
   Insn 82(l0): point = 20
   Insn 81(l0): point = 22
   Insn 80(l0): point = 24
   Insn 79(l0): point = 26
   Insn 77(l0): point = 29
   Insn 76(l0): point = 31
   Insn 110(l0): point = 34
   Insn 71(l0): point = 36
   Insn 69(l0): point = 39
   Insn 68(l0): point = 41
   Insn 67(l0): point = 43
   Insn 66(l0): point = 45
   Insn 64(l0): point = 48
   Insn 63(l0): point = 50
   Insn 106(l0): point = 53
   Insn 52(l0): point = 55
   Insn 104(l0): point = 58
   Insn 37(l0): point = 60
   Insn 16(l0): point = 63
   Insn 15(l0): point = 65
   Insn 14(l0): point = 67
   Insn 13(l0): point = 69
   Insn 12(l0): point = 71
   Insn 11(l0): point = 73
   Insn 10(l0): point = 75
   Insn 108(l0): point = 78
   Insn 57(l0): point = 80
   Insn 24(l0): point = 83
   Insn 23(l0): point = 85
   Insn 22(l0): point = 87
   Insn 21(l0): point = 89
   Insn 20(l0): point = 91
   Insn 19(l0): point = 93
   Insn 18(l0): point = 95
   Insn 35(l0): point = 98
   Insn 34(l0): point = 100
   Insn 50(l0): point = 103
   Insn 49(l0): point = 105
   Insn 48(l0): point = 107
   Insn 47(l0): point = 109
   Insn 46(l0): point = 111
   Insn 45(l0): point = 113
   Insn 44(l0): point = 115
   Insn 43(l0): point = 117
   Insn 42(l0): point = 119
   Insn 32(l0): point = 122
   Insn 31(l0): point = 124
   Insn 30(l0): point = 126
   Insn 29(l0): point = 128
   Insn 28(l0): point = 130
   Insn 27(l0): point = 132
   Insn 26(l0): point = 134
   Insn 8(l0): point = 137
   Insn 7(l0): point = 139
   Insn 6(l0): point = 141
   Insn 2(l0): point = 143
 a0(r104): [3..4]
 a1(r87): [58..60] [53..55] [34..36] [15..17] [10..12] [5..7]
 a2(r103): [23..24]
 a3(r114): [25..26]
 a4(r102): [42..43]
 a5(r113): [44..45]
 a6(r101): [106..107]
 a7(r100): [108..109]
 a8(r99): [110..111]
 a9(r98): [112..113]
 a10(r112): [114..115]
 a11(r97): [114..117]
 a12(r111): [118..119]
 a13(r96): [125..126]
 a14(r95): [127..128]
 a15(r110): [129..130]
 a16(r94): [129..132]
 a17(r109): [133..134]
 a18(r93): [86..87]
 a19(r92): [88..89]
 a20(r108): [90..91]
 a21(r91): [90..93]
 a22(r107): [94..95]
 a23(r90): [66..67]
 a24(r89): [68..69]
 a25(r106): [70..71]
 a26(r88): [70..73]
 a27(r105): [74..75]
Compressing live ranges: from 146 to 58 - 39%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r87): [18..21] [12..13] [2..7]
 a2(r103): [8..9]
 a3(r114): [10..11]
 a4(r102): [14..15]
 a5(r113): [16..17]
 a6(r101): [38..39]
 a7(r100): [40..41]
 a8(r99): [42..43]
 a9(r98): [44..45]
 a10(r112): [46..47]
 a11(r97): [46..47]
 a12(r111): [48..49]
 a13(r96): [50..51]
 a14(r95): [52..53]
 a15(r110): [54..55]
 a16(r94): [54..55]
 a17(r109): [56..57]
 a18(r93): [30..31]
 a19(r92): [32..33]
 a20(r108): [34..35]
 a21(r91): [34..35]
 a22(r107): [36..37]
 a23(r90): [22..23]
 a24(r89): [24..25]
 a25(r106): [26..27]
 a26(r88): [26..27]
 a27(r105): [28..29]
  regions=1, blocks=20, points=58
    allocnos=28 (big 0), copies=0, conflicts=0, ranges=30
Disposition:
    1:r87  l0     0   26:r88  l0     1   24:r89  l0     0   23:r90  l0     0
   21:r91  l0     1   19:r92  l0     0   18:r93  l0     0   16:r94  l0     1
   14:r95  l0     0   13:r96  l0     0   11:r97  l0     1    9:r98  l0     0
    8:r99  l0     0    7:r100 l0     0    6:r101 l0     0    4:r102 l0     0
    2:r103 l0     0    0:r104 l0     0   27:r105 l0     0   25:r106 l0     0
   22:r107 l0     0   20:r108 l0     0   17:r109 l0     0   15:r110 l0     0
   12:r111 l0     0   10:r112 l0     0    5:r113 l0     0    3:r114 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool isNumber(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,19u} r7={1d,19u} r16={1d,18u} r17={16d,10u} r20={1d,37u,4e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={6d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 211{69d,134u,8e} in 64{64 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
        (reg:DI 5 di [ string ])) sim2fitman_sup.cpp:94 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ string ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:95 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:97 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 58 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) sim2fitman_sup.cpp:97 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 92)
;;  succ:       3 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              10 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 105 106
(code_label 58 8 9 3 23 "" [1 uses])
(note 9 58 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:98 90 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 88 [ D.6501 ])
        (sign_extend:DI (reg:SI 105))) sim2fitman_sup.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 12 11 13 3 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:98 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (parallel [
            (set (reg/f:DI 89 [ D.6502 ])
                (plus:DI (reg:DI 88 [ D.6501 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_DEAD (reg:DI 88 [ D.6501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                        (reg:DI 88 [ D.6501 ]))
                    (nil))))))
(insn 14 13 15 3 (set (reg:QI 90 [ D.6503 ])
        (mem:QI (reg/f:DI 89 [ D.6502 ]) [0 *_6+0 S1 A8])) sim2fitman_sup.cpp:98 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6502 ])
        (nil)))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.6503 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:98 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ D.6503 ])
        (nil)))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) sim2fitman_sup.cpp:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 61)
;;  succ:       11
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 93 107 108
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:99 90 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 91 [ D.6501 ])
        (sign_extend:DI (reg:SI 107))) sim2fitman_sup.cpp:99 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 20 19 21 4 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:99 89 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 92 [ D.6502 ])
                (plus:DI (reg:DI 91 [ D.6501 ])
                    (reg/f:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:99 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_DEAD (reg:DI 91 [ D.6501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                        (reg:DI 91 [ D.6501 ]))
                    (nil))))))
(insn 22 21 23 4 (set (reg:QI 93 [ D.6503 ])
        (mem:QI (reg/f:DI 92 [ D.6502 ]) [0 *_10+0 S1 A8])) sim2fitman_sup.cpp:99 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6502 ])
        (nil)))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ D.6503 ])
            (const_int 46 [0x2e]))) sim2fitman_sup.cpp:99 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 93 [ D.6503 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) sim2fitman_sup.cpp:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 55)
;;  succ:       10
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 95 96 109 110
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:101 90 {*movsi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 94 [ D.6501 ])
        (sign_extend:DI (reg:SI 109))) sim2fitman_sup.cpp:101 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 28 27 29 5 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:101 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:DI 95 [ D.6502 ])
                (plus:DI (reg:DI 94 [ D.6501 ])
                    (reg/f:DI 110)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:101 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                        (reg:DI 94 [ D.6501 ]))
                    (nil))))))
(insn 30 29 31 5 (set (reg:QI 96 [ D.6503 ])
        (mem:QI (reg/f:DI 95 [ D.6502 ]) [0 *_14+0 S1 A8])) sim2fitman_sup.cpp:101 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6502 ])
        (nil)))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.6503 ])
            (const_int 45 [0x2d]))) sim2fitman_sup.cpp:101 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 96 [ D.6503 ])
        (nil)))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) sim2fitman_sup.cpp:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:102 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) sim2fitman_sup.cpp:102 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 55)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 104 7 (set (reg:QI 87 [ D.6500 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:103 93 {*movqi_internal}
     (nil))
(jump_insn 104 37 105 7 (set (pc)
        (label_ref 95)) sim2fitman_sup.cpp:103 654 {jump}
     (nil)
 -> 95)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 105 104 40)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 98 99 100 101 111 112
(code_label 40 105 41 8 21 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:105 90 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:DI 97 [ D.6501 ])
        (sign_extend:DI (reg:SI 111))) sim2fitman_sup.cpp:105 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 44 43 45 8 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:105 89 {*movdi_internal}
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg/f:DI 98 [ D.6502 ])
                (plus:DI (reg:DI 97 [ D.6501 ])
                    (reg/f:DI 112)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (expr_list:REG_DEAD (reg:DI 97 [ D.6501 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                        (reg:DI 97 [ D.6501 ]))
                    (nil))))))
(insn 46 45 47 8 (set (reg:QI 99 [ D.6503 ])
        (mem:QI (reg/f:DI 98 [ D.6502 ]) [0 *_17+0 S1 A8])) sim2fitman_sup.cpp:105 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.6502 ])
        (nil)))
(insn 47 46 48 8 (set (reg:SI 100 [ D.6504 ])
        (sign_extend:SI (reg:QI 99 [ D.6503 ]))) sim2fitman_sup.cpp:105 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 99 [ D.6503 ])
        (nil)))
(insn 48 47 49 8 (parallel [
            (set (reg:SI 101 [ D.6504 ])
                (plus:SI (reg:SI 100 [ D.6504 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:105 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.6504 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 101 [ D.6504 ])
            (const_int 9 [0x9]))) sim2fitman_sup.cpp:105 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.6504 ])
        (nil)))
(jump_insn 50 49 51 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) sim2fitman_sup.cpp:105 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 55)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 106 9 (set (reg:QI 87 [ D.6500 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:106 93 {*movqi_internal}
     (nil))
(jump_insn 106 52 107 9 (set (pc)
        (label_ref 95)) sim2fitman_sup.cpp:106 654 {jump}
     (nil)
 -> 95)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 107 106 55)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              6
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 55 107 56 10 20 "" [3 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 108 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:108 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 108 57 109 10 (set (pc)
        (label_ref 58)) sim2fitman_sup.cpp:98 654 {jump}
     (nil)
 -> 58)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 109 108 61)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 61 109 62 11 19 "" [1 uses])
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:110 7 {*cmpsi_1}
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) sim2fitman_sup.cpp:110 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 74)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 113
(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 12 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:110 89 {*movdi_internal}
     (nil))
(insn 67 66 68 12 (set (reg:QI 102 [ D.6503 ])
        (mem:QI (reg/f:DI 113) [0 *string_4(D)+0 S1 A8])) sim2fitman_sup.cpp:110 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 68 67 69 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ D.6503 ])
            (const_int 45 [0x2d]))) sim2fitman_sup.cpp:110 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 102 [ D.6503 ])
        (nil)))
(jump_insn 69 68 70 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) sim2fitman_sup.cpp:110 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 74)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 70 69 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 110 13 (set (reg:QI 87 [ D.6500 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:111 93 {*movqi_internal}
     (nil))
(jump_insn 110 71 111 13 (set (pc)
        (label_ref 95)) sim2fitman_sup.cpp:111 654 {jump}
     (nil)
 -> 95)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 111 110 74)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 74 111 75 14 24 "" [2 uses])
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:112 7 {*cmpsi_1}
     (nil))
(jump_insn 77 76 78 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) sim2fitman_sup.cpp:112 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 87)
;;  succ:       15 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 114
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 15 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:112 89 {*movdi_internal}
     (nil))
(insn 80 79 81 15 (set (reg:QI 103 [ D.6503 ])
        (mem:QI (reg/f:DI 114) [0 *string_4(D)+0 S1 A8])) sim2fitman_sup.cpp:112 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 81 80 82 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ D.6503 ])
            (const_int 46 [0x2e]))) sim2fitman_sup.cpp:112 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 103 [ D.6503 ])
        (nil)))
(jump_insn 82 81 83 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) sim2fitman_sup.cpp:112 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 87)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 83 82 84 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 112 16 (set (reg:QI 87 [ D.6500 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:113 93 {*movqi_internal}
     (nil))
(jump_insn 112 84 113 16 (set (pc)
        (label_ref 95)) sim2fitman_sup.cpp:113 654 {jump}
     (nil)
 -> 95)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 113 112 87)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;;              15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 87 113 88 17 25 "" [2 uses])
(note 88 87 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 114 17 (set (reg:QI 87 [ D.6500 ])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:115 93 {*movqi_internal}
     (nil))
(jump_insn 114 89 115 17 (set (pc)
        (label_ref 95)) sim2fitman_sup.cpp:115 654 {jump}
     (nil)
 -> 95)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 115 114 92)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 92 115 93 18 18 "" [1 uses])
(note 93 92 94 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 18 (set (reg:QI 87 [ D.6500 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:118 93 {*movqi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              7 [100.0%] 
;;              9 [100.0%] 
;;              13 [100.0%] 
;;              16 [100.0%] 
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 104
(code_label 95 94 96 19 22 "" [5 uses])
(note 96 95 97 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 101 19 (set (reg:QI 104 [ <retval> ])
        (reg:QI 87 [ D.6500 ])) 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.6500 ])
        (nil)))
(insn 101 97 102 19 (set (reg/i:QI 0 ax)
        (reg:QI 104 [ <retval> ])) sim2fitman_sup.cpp:121 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ <retval> ])
        (nil)))
(insn 102 101 0 19 (use (reg/i:QI 0 ax)) sim2fitman_sup.cpp:121 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int isNAN(float) (_Z5isNANf, funcdef_no=6, decl_uid=5501, cgraph_uid=6, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 64.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a11 (r88,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r88,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9

   Insn 67(l0): point = 0
   Insn 64(l0): point = 3
   Insn 63(l0): point = 6
   Insn 62(l0): point = 8
   Insn 61(l0): point = 10
   Insn 57(l0): point = 12
   Insn 52(l0): point = 15
   Insn 71(l0): point = 18
   Insn 47(l0): point = 20
   Insn 44(l0): point = 23
   Insn 43(l0): point = 25
   Insn 42(l0): point = 27
   Insn 41(l0): point = 29
   Insn 40(l0): point = 31
   Insn 39(l0): point = 33
   Insn 38(l0): point = 35
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 34(l0): point = 42
   Insn 33(l0): point = 44
   Insn 32(l0): point = 46
   Insn 31(l0): point = 48
   Insn 30(l0): point = 50
   Insn 28(l0): point = 53
   Insn 27(l0): point = 55
   Insn 26(l0): point = 57
   Insn 25(l0): point = 59
   Insn 24(l0): point = 61
   Insn 23(l0): point = 63
   Insn 22(l0): point = 65
   Insn 20(l0): point = 68
   Insn 19(l0): point = 70
   Insn 18(l0): point = 72
   Insn 17(l0): point = 74
   Insn 16(l0): point = 76
   Insn 15(l0): point = 78
   Insn 14(l0): point = 80
   Insn 13(l0): point = 82
   Insn 12(l0): point = 84
   Insn 11(l0): point = 86
   Insn 10(l0): point = 88
   Insn 9(l0): point = 90
   Insn 8(l0): point = 92
   Insn 7(l0): point = 94
   Insn 4(l0): point = 96
   Insn 2(l0): point = 98
 a0(r93): [11..12]
 a1(r87): [18..20] [13..15]
 a2(r92): [26..27]
 a3(r98): [32..35]
 a4(r91): [41..42]
 a5(r97): [47..50]
 a6(r90): [56..57]
 a7(r96): [62..65]
 a8(r89): [71..72]
 a9(r95): [77..80]
 a10(r94): [87..92]
 a11(r88): [91..94]
Compressing live ranges: from 101 to 24 - 23%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r87): [2..5]
 a2(r92): [6..7]
 a3(r98): [8..9]
 a4(r91): [10..11]
 a5(r97): [12..13]
 a6(r90): [14..15]
 a7(r96): [16..17]
 a8(r89): [18..19]
 a9(r95): [20..21]
 a10(r94): [22..23]
 a11(r88): [22..23]
  regions=1, blocks=11, points=24
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
    1:r87  l0     0   11:r88  l0    21    8:r89  l0     0    6:r90  l0     0
    4:r91  l0     0    2:r92  l0     0    0:r93  l0     0   10:r94  l0     0
    9:r95  l0     0    7:r96  l0     0    5:r97  l0     0    3:r98  l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int isNAN(float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={9d,7u} r1={7d} r2={7d} r4={12d,5u} r5={12d,5u} r6={1d,10u} r7={1d,16u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,9u} r17={17d,5u} r18={6d} r19={6d} r20={1d,19u} r21={8d,2u} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 578{488d,90u,0e} in 46{40 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 94 95
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [0 float_value+0 S4 A32])
        (reg:SF 21 xmm0 [ float_value ])) sim2fitman_sup.cpp:128 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ float_value ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6507+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:128 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg:DF 88 [ D.6506 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [0 float_value+0 S4 A32]))) sim2fitman_sup.cpp:142 152 {*extendsfdf2_sse}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:142 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DF 21 xmm0)
        (reg:DF 88 [ D.6506 ])) sim2fitman_sup.cpp:142 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 88 [ D.6506 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7ff9ba464ea0 *.LC6>)) sim2fitman_sup.cpp:142 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 94)) sim2fitman_sup.cpp:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) sim2fitman_sup.cpp:142 93 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7ff9ba96faf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:142 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:143 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7ff9ba464f30 *.LC7>)) sim2fitman_sup.cpp:143 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 95)) sim2fitman_sup.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn/i 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:SI 89 [ D.6505 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:143 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.6505 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6505 ])
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:143 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       6
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 96
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:144 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7ff9ba469000 *.LC8>)) sim2fitman_sup.cpp:144 89 {*movdi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 96)) sim2fitman_sup.cpp:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn/i 25 24 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:144 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 3 (set (reg:SI 90 [ D.6505 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:144 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 26 28 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.6505 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6505 ])
        (nil)))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:143 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 97
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:145 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7ff9ba469090 *.LC9>)) sim2fitman_sup.cpp:145 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 97)) sim2fitman_sup.cpp:145 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn/i 33 32 34 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:145 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 4 (set (reg:SI 91 [ D.6505 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:145 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 35 34 36 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.6505 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:144 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6505 ])
        (nil)))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:144 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 45)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 98
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:146 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 39 38 40 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7ff9ba469120 *.LC10>)) sim2fitman_sup.cpp:146 89 {*movdi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 98)) sim2fitman_sup.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn/i 41 40 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:146 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 5 (set (reg:SI 92 [ D.6505 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:146 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6505 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:145 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6505 ])
        (nil)))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sim2fitman_sup.cpp:145 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 45 44 46 6 27 "" [3 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 71 6 (set (reg:SI 87 [ D.6505 ])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:147 90 {*movsi_internal}
     (nil))
(jump_insn 71 47 72 6 (set (pc)
        (label_ref 55)) sim2fitman_sup.cpp:147 654 {jump}
     (nil)
 -> 55)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 72 71 50)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 50 72 51 7 28 "" [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 55 7 (set (reg:SI 87 [ D.6505 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:149 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 93
(code_label 55 52 56 8 30 "" [1 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 8 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.6505 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6505 ])
        (nil)))
(insn 61 57 62 8 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) sim2fitman_sup.cpp:153 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 62 61 63 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6507+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sim2fitman_sup.cpp:153 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 63 62 69 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) sim2fitman_sup.cpp:153 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 66)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 69 63 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 64 69 65 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7ff9ba875d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:153 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 65 64 66)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 66 65 70 10 31 "" [1 uses])
(note 70 66 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 67 70 0 10 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:153 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void swapBytes(char*, int) (_Z9swapBytesPci, funcdef_no=7, decl_uid=5497, cgraph_uid=7, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a2(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a12(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a15(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a19(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a24(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a25(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a26(r101,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a27(r102,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8

   Insn 55(l0): point = 1
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 51(l0): point = 19
   Insn 43(l0): point = 21
   Insn 42(l0): point = 23
   Insn 41(l0): point = 25
   Insn 40(l0): point = 27
   Insn 39(l0): point = 29
   Insn 38(l0): point = 31
   Insn 37(l0): point = 33
   Insn 36(l0): point = 35
   Insn 35(l0): point = 37
   Insn 34(l0): point = 39
   Insn 33(l0): point = 41
   Insn 32(l0): point = 43
   Insn 31(l0): point = 45
   Insn 30(l0): point = 47
   Insn 29(l0): point = 49
   Insn 28(l0): point = 51
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 25(l0): point = 57
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 22(l0): point = 63
   Insn 21(l0): point = 65
   Insn 20(l0): point = 67
   Insn 19(l0): point = 69
   Insn 18(l0): point = 71
   Insn 17(l0): point = 73
   Insn 7(l0): point = 76
   Insn 3(l0): point = 78
   Insn 2(l0): point = 80
 a0(r100): [24..27]
 a1(r114): [24..25]
 a2(r113): [28..29]
 a3(r99): [28..31]
 a4(r98): [32..33]
 a5(r97): [34..35]
 a6(r112): [36..37]
 a7(r91): [40..55]
 a8(r96): [40..41]
 a9(r95): [42..43]
 a10(r111): [44..45]
 a11(r94): [44..47]
 a12(r93): [48..49]
 a13(r92): [50..51]
 a14(r110): [52..53]
 a15(r109): [56..57]
 a16(r90): [56..59]
 a17(r108): [60..61]
 a18(r107): [64..65]
 a19(r89): [66..67]
 a20(r106): [68..69]
 a21(r88): [68..71]
 a22(r105): [72..73]
 a23(r87): [7..8]
 a24(r104): [9..10]
 a25(r103): [11..12]
 a26(r101): [13..16]
 a27(r102): [13..14]
Compressing live ranges: from 83 to 42 - 50%
Ranges after the compression:
 a0(r100): [8..9]
 a1(r114): [8..9]
 a2(r113): [10..11]
 a3(r99): [10..11]
 a4(r98): [12..13]
 a5(r97): [14..15]
 a6(r112): [16..17]
 a7(r91): [18..29]
 a8(r96): [18..19]
 a9(r95): [20..21]
 a10(r111): [22..23]
 a11(r94): [22..23]
 a12(r93): [24..25]
 a13(r92): [26..27]
 a14(r110): [28..29]
 a15(r109): [30..31]
 a16(r90): [30..31]
 a17(r108): [32..33]
 a18(r107): [34..35]
 a19(r89): [36..37]
 a20(r106): [38..39]
 a21(r88): [38..39]
 a22(r105): [40..41]
 a23(r87): [0..1]
 a24(r104): [2..3]
 a25(r103): [4..5]
 a26(r101): [6..7]
 a27(r102): [6..7]
  regions=1, blocks=7, points=42
    allocnos=28 (big 0), copies=0, conflicts=0, ranges=28
Disposition:
   23:r87  l0     0   21:r88  l0     1   19:r89  l0     0   16:r90  l0     1
    7:r91  l0     1   13:r92  l0     0   12:r93  l0     0   11:r94  l0     2
    9:r95  l0     0    8:r96  l0     0    5:r97  l0     0    4:r98  l0     0
    3:r99  l0     1    0:r100 l0     1   26:r101 l0     0   27:r102 l0     1
   25:r103 l0     0   24:r104 l0     0   22:r105 l0     0   20:r106 l0     0
   18:r107 l0     0   17:r108 l0     0   15:r109 l0     0   14:r110 l0     0
   10:r111 l0     0    6:r112 l0     0    2:r113 l0     0    1:r114 l0     0
+++Costs: overall 4, reg 4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void swapBytes(char*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={13d,1u} r20={1d,25u,8e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u,1e} r100={1d,1u} r101={1d,2u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 146{60d,74u,12e} in 39{39 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
        (reg:DI 5 di [ theVarChar ])) sim2fitman_sup.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ theVarChar ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) sim2fitman_sup.cpp:158 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:169 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 101 102 103 104
(code_label 44 7 8 3 34 "" [1 uses])
(note 8 44 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:SI 101)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:169 90 {*movsi_internal}
     (nil))
(insn 10 9 11 3 (parallel [
            (set (reg:SI 102)
                (lshiftrt:SI (reg:SI 101)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 3 (parallel [
            (set (reg:SI 103)
                (plus:SI (reg:SI 102)
                    (reg:SI 101)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 102)
        (expr_list:REG_DEAD (reg:SI 101)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 12 11 13 3 (parallel [
            (set (reg:SI 104)
                (ashiftrt:SI (reg:SI 103)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 13 12 14 3 (set (reg:SI 87 [ D.6513 ])
        (reg:SI 104)) sim2fitman_sup.cpp:169 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 14 13 15 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.6513 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) sim2fitman_sup.cpp:169 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6513 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) sim2fitman_sup.cpp:169 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 54)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 91 92 93 94 95 96 97 98 99 100 105 106 107 108 109 110 111 112 113 114
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:170 90 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 88 [ D.6514 ])
        (sign_extend:DI (reg:SI 105))) sim2fitman_sup.cpp:170 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 105)
        (nil)))
(insn 19 18 20 4 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:170 89 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 89 [ D.6515 ])
                (plus:DI (reg:DI 88 [ D.6514 ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:170 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_DEAD (reg:DI 88 [ D.6514 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                        (reg:DI 88 [ D.6514 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg:QI 107)
        (mem:QI (reg/f:DI 89 [ D.6515 ]) [0 *_9+0 S1 A8])) sim2fitman_sup.cpp:170 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6515 ])
        (nil)))
(insn 22 21 23 4 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 tempChar+0 S1 A8])
        (reg:QI 107)) sim2fitman_sup.cpp:170 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 107)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:171 90 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 90 [ D.6514 ])
        (sign_extend:DI (reg:SI 108))) sim2fitman_sup.cpp:171 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 25 24 26 4 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:171 89 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 91 [ D.6515 ])
                (plus:DI (reg:DI 90 [ D.6514 ])
                    (reg/f:DI 109)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_DEAD (reg:DI 90 [ D.6514 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                        (reg:DI 90 [ D.6514 ]))
                    (nil))))))
(insn 27 26 28 4 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:171 90 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg:SI 92 [ D.6513 ])
                (minus:SI (reg:SI 110)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))
                (nil)))))
(insn 29 28 30 4 (set (reg:DI 93 [ D.6514 ])
        (sign_extend:DI (reg:SI 92 [ D.6513 ]))) sim2fitman_sup.cpp:171 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6513 ])
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 94 [ D.6514 ])
                (plus:DI (reg:DI 93 [ D.6514 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6514 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 4 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:171 89 {*movdi_internal}
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 95 [ D.6515 ])
                (plus:DI (reg:DI 94 [ D.6514 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6514 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                        (reg:DI 94 [ D.6514 ]))
                    (nil))))))
(insn 33 32 34 4 (set (reg:QI 96 [ D.6516 ])
        (mem:QI (reg/f:DI 95 [ D.6515 ]) [0 *_16+0 S1 A8])) sim2fitman_sup.cpp:171 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6515 ])
        (nil)))
(insn 34 33 35 4 (set (mem:QI (reg/f:DI 91 [ D.6515 ]) [0 *_12+0 S1 A8])
        (reg:QI 96 [ D.6516 ])) sim2fitman_sup.cpp:171 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 96 [ D.6516 ])
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.6515 ])
            (nil))))
(insn 35 34 36 4 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:172 90 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:SI 97 [ D.6513 ])
                (minus:SI (reg:SI 112)
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))
                (nil)))))
(insn 37 36 38 4 (set (reg:DI 98 [ D.6514 ])
        (sign_extend:DI (reg:SI 97 [ D.6513 ]))) sim2fitman_sup.cpp:172 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ D.6513 ])
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 99 [ D.6514 ])
                (plus:DI (reg:DI 98 [ D.6514 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.6514 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 4 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:172 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 100 [ D.6515 ])
                (plus:DI (reg:DI 99 [ D.6514 ])
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_DEAD (reg:DI 99 [ D.6514 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                        (reg:DI 99 [ D.6514 ]))
                    (nil))))))
(insn 41 40 42 4 (set (reg:QI 114)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 tempChar+0 S1 A8])) sim2fitman_sup.cpp:172 93 {*movqi_internal}
     (nil))
(insn 42 41 43 4 (set (mem:QI (reg/f:DI 100 [ D.6515 ]) [0 *_22+0 S1 A8])
        (reg:QI 114)) sim2fitman_sup.cpp:172 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 114)
        (expr_list:REG_DEAD (reg/f:DI 100 [ D.6515 ])
            (nil))))
(insn 43 42 51 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 51 43 52 4 (set (pc)
        (label_ref 44)) sim2fitman_sup.cpp:169 654 {jump}
     (nil)
 -> 44)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 52 51 54)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 54 52 53 6 35 "" [1 uses])
(note 53 54 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 55 53 49 6 (const_int 0 [0]) sim2fitman_sup.cpp:183 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 49 55 50 5 32 "" [0 uses])
(note 50 49 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool promptYN() (_Z8promptYNv, funcdef_no=8, decl_uid=5498, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 18 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:78 INT_SSE_REGS:58 ALL_REGS:1248 MEM:19
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 71(l0): point = 0
   Insn 70(l0): point = 2
   Insn 66(l0): point = 4
   Insn 86(l0): point = 7
   Insn 50(l0): point = 9
   Insn 84(l0): point = 12
   Insn 45(l0): point = 14
   Insn 12(l0): point = 17
   Insn 11(l0): point = 19
   Insn 10(l0): point = 21
   Insn 9(l0): point = 23
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 88(l0): point = 34
   Insn 91(l0): point = 37
   Insn 59(l0): point = 40
   Insn 58(l0): point = 42
   Insn 57(l0): point = 44
   Insn 56(l0): point = 46
   Insn 55(l0): point = 48
   Insn 40(l0): point = 51
   Insn 39(l0): point = 53
   Insn 38(l0): point = 56
   Insn 37(l0): point = 58
   Insn 82(l0): point = 61
   Insn 33(l0): point = 64
   Insn 32(l0): point = 66
   Insn 31(l0): point = 69
   Insn 30(l0): point = 71
   Insn 29(l0): point = 74
   Insn 28(l0): point = 76
   Insn 27(l0): point = 78
   Insn 20(l0): point = 81
   Insn 19(l0): point = 83
   Insn 18(l0): point = 85
   Insn 17(l0): point = 87
   Insn 16(l0): point = 89
   Insn 15(l0): point = 91
   Insn 14(l0): point = 93
   Insn 79(l0): point = 96
 a0(r93): [3..4]
 a1(r87): [12..14] [5..9]
 a2(r92): [67..78] [54..60]
 a3(r91): [86..87]
 a4(r90): [92..93]
 a5(r89): [18..19]
 a6(r88): [24..25]
Compressing live ranges: from 100 to 18 - 18%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r87): [2..5]
 a2(r92): [10..13]
 a3(r91): [14..15]
 a4(r90): [16..17]
 a5(r89): [6..7]
 a6(r88): [8..9]
  regions=1, blocks=18, points=18
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    1:r87  l0     0    6:r88  l0     0    5:r89  l0     0    4:r90  l0     0
    3:r91  l0     0    2:r92  l0     0    0:r93  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool promptYN()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,6u} r1={6d} r2={6d} r4={6d} r5={11d,5u} r6={1d,17u} r7={1d,22u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,16u} r17={11d,6u} r18={5d} r19={5d} r20={1d,21u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,5u} r93={1d,1u} 
;;    total ref usage 505{401d,104u,0e} in 42{37 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 61 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              15 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89
(code_label 61 2 4 3 44 "" [1 uses])
(note 4 61 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7ff9ba474120 *.LC11>)) sim2fitman_sup.cpp:192 89 {*movdi_internal}
     (nil))
(insn 6 5 7 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:192 93 {*movqi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:192 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 3 (set (reg/f:DI 88 [ D.6518 ])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7ff9baa38d80 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:193 89 {*movdi_internal}
     (nil))
(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.6518 ])) sim2fitman_sup.cpp:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.6518 ])
        (nil)))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7ff9ba6e46c0 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:193 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:SI 89 [ D.6519 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:193 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 22 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8])
        (subreg:QI (reg:SI 89 [ D.6519 ]) 0)) sim2fitman_sup.cpp:193 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6519 ])
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              5 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91
(code_label 22 12 13 4 38 "" [1 uses])
(note 13 22 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 90 [ D.6518 ])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7ff9baa38d80 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:195 89 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6518 ])) sim2fitman_sup.cpp:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6518 ])
        (nil)))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7ff9ba6e46c0 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:195 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 4 (set (reg:SI 91 [ D.6519 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:195 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 19 4 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
        (subreg:QI (reg:SI 91 [ D.6519 ]) 0)) sim2fitman_sup.cpp:195 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6519 ])
        (nil)))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
            (const_int 10 [0xa]))) sim2fitman_sup.cpp:196 5 {*cmpqi_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) sim2fitman_sup.cpp:196 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 21 20 79 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 21 80 5 (set (pc)
        (label_ref 22)) sim2fitman_sup.cpp:194 654 {jump}
     (nil)
 -> 22)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 25)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 25 80 26 6 37 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 92 [ D.6519 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8]))) sim2fitman_sup.cpp:198 148 {extendqisi2}
     (nil))
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6519 ])
            (const_int 89 [0x59]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 29 28 73 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 43)
;;  succ:       12
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(note 73 29 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 73 31 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.6519 ])
            (const_int 89 [0x59]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 31 30 74 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 36)
;;  succ:       10
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(note 74 31 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 74 33 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6519 ])
            (const_int 78 [0x4e]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6519 ])
        (nil)))
(jump_insn 33 32 81 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       13
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 81 33 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 82 81 83 9 (set (pc)
        (label_ref 53)) sim2fitman_sup.cpp:198 654 {jump}
     (nil)
 -> 53)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 83 82 36)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(code_label 36 83 76 10 41 "" [1 uses])
(note 76 36 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 37 76 38 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6519 ])
            (const_int 110 [0x6e]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 38 37 77 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(note 77 38 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 39 77 40 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.6519 ])
            (const_int 121 [0x79]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6519 ])
        (nil)))
(jump_insn 40 39 43 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 53)
;;  succ:       12 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 43 40 44 12 40 "" [1 uses])
(note 44 43 45 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 84 12 (set (reg:QI 87 [ D.6517 ])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:201 93 {*movqi_internal}
     (nil))
(jump_insn 84 45 85 12 (set (pc)
        (label_ref 64)) sim2fitman_sup.cpp:201 654 {jump}
     (nil)
 -> 64)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 85 84 48)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              10
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 48 85 49 13 42 "" [2 uses])
(note 49 48 50 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 86 13 (set (reg:QI 87 [ D.6517 ])
        (const_int 0 [0])) sim2fitman_sup.cpp:205 93 {*movqi_internal}
     (nil))
(jump_insn 86 50 87 13 (set (pc)
        (label_ref 64)) sim2fitman_sup.cpp:205 654 {jump}
     (nil)
 -> 64)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 87 86 53)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              9 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 53 87 54 14 39 "" [2 uses])
(note 54 53 55 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7ff9ba4741b0 *.LC12>)) sim2fitman_sup.cpp:208 89 {*movdi_internal}
     (nil))
(insn 56 55 57 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:208 93 {*movqi_internal}
     (nil))
(call_insn 57 56 58 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:208 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 58 57 59 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7ff9ba474240 *.LC13>)) sim2fitman_sup.cpp:209 89 {*movdi_internal}
     (nil))
(call_insn 59 58 90 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:209 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 15, flags: (NEW, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 90 59 91 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 60 17 (const_int 0 [0]) sim2fitman_sup.cpp:210 684 {nop}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 60 91 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 88 60 89 15 (set (pc)
        (label_ref 61)) sim2fitman_sup.cpp:191 654 {jump}
     (nil)
 -> 61)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 89 88 64)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%] 
;;              13 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 93
(code_label 64 89 65 16 43 "" [2 uses])
(note 65 64 66 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 70 16 (set (reg:QI 93 [ <retval> ])
        (reg:QI 87 [ D.6517 ])) 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.6517 ])
        (nil)))
(insn 70 66 71 16 (set (reg/i:QI 0 ax)
        (reg:QI 93 [ <retval> ])) sim2fitman_sup.cpp:213 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 93 [ <retval> ])
        (nil)))
(insn 71 70 0 16 (use (reg/i:QI 0 ax)) sim2fitman_sup.cpp:213 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int promptSUBN() (_Z10promptSUBNv, funcdef_no=9, decl_uid=5499, cgraph_uid=9, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 15 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:37 INT_SSE_REGS:33 ALL_REGS:508 MEM:6
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29 NO_REX_SSE_REGS:29 SSE_REGS:29 MMX_REGS:34 INT_SSE_REGS:30 ALL_REGS:516 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 71(l0): point = 0
   Insn 70(l0): point = 2
   Insn 66(l0): point = 4
   Insn 80(l0): point = 7
   Insn 50(l0): point = 9
   Insn 78(l0): point = 12
   Insn 45(l0): point = 14
   Insn 76(l0): point = 17
   Insn 40(l0): point = 19
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 6(l0): point = 34
   Insn 5(l0): point = 36
   Insn 82(l0): point = 39
   Insn 85(l0): point = 42
   Insn 59(l0): point = 45
   Insn 58(l0): point = 47
   Insn 57(l0): point = 49
   Insn 56(l0): point = 51
   Insn 55(l0): point = 53
   Insn 33(l0): point = 56
   Insn 32(l0): point = 58
   Insn 31(l0): point = 60
   Insn 30(l0): point = 63
   Insn 29(l0): point = 65
   Insn 28(l0): point = 67
   Insn 27(l0): point = 69
   Insn 20(l0): point = 72
   Insn 19(l0): point = 74
   Insn 18(l0): point = 76
   Insn 17(l0): point = 78
   Insn 16(l0): point = 80
   Insn 15(l0): point = 82
   Insn 14(l0): point = 84
   Insn 74(l0): point = 87
 a0(r93): [3..4]
 a1(r87): [17..19] [12..14] [5..9]
 a2(r96): [57..58]
 a3(r95): [59..60]
 a4(r94): [61..67]
 a5(r92): [68..69]
 a6(r91): [77..78]
 a7(r90): [83..84]
 a8(r89): [23..24]
 a9(r88): [29..30]
Compressing live ranges: from 91 to 24 - 26%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r87): [2..7]
 a2(r96): [12..13]
 a3(r95): [14..15]
 a4(r94): [16..17]
 a5(r92): [18..19]
 a6(r91): [20..21]
 a7(r90): [22..23]
 a8(r89): [8..9]
 a9(r88): [10..11]
  regions=1, blocks=15, points=24
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    1:r87  l0     0    9:r88  l0     0    8:r89  l0     0    7:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    0:r93  l0     0    4:r94  l0     0
    3:r95  l0     0    2:r96  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int promptSUBN()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,6u} r1={6d} r2={6d} r4={6d} r5={11d,5u} r6={1d,14u} r7={1d,19u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,13u} r17={8d,2u} r18={5d} r19={5d} r20={1d,18u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={3d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 490{402d,88u,0e} in 39{34 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 61 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89
(code_label 61 2 4 3 54 "" [1 uses])
(note 4 61 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7ff9ba479000 *.LC14>)) sim2fitman_sup.cpp:223 89 {*movdi_internal}
     (nil))
(insn 6 5 7 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:223 93 {*movqi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 3 (set (reg/f:DI 88 [ D.6525 ])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7ff9baa38d80 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:224 89 {*movdi_internal}
     (nil))
(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.6525 ])) sim2fitman_sup.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.6525 ])
        (nil)))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7ff9ba6e46c0 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:224 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:SI 89 [ D.6524 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:224 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 22 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8])
        (subreg:QI (reg:SI 89 [ D.6524 ]) 0)) sim2fitman_sup.cpp:224 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6524 ])
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              5 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91
(code_label 22 12 13 4 47 "" [1 uses])
(note 13 22 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 90 [ D.6525 ])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7ff9baa38d80 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:226 89 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6525 ])) sim2fitman_sup.cpp:226 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6525 ])
        (nil)))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7ff9ba6e46c0 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:226 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 4 (set (reg:SI 91 [ D.6524 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:226 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 19 4 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
        (subreg:QI (reg:SI 91 [ D.6524 ]) 0)) sim2fitman_sup.cpp:226 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6524 ])
        (nil)))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
            (const_int 10 [0xa]))) sim2fitman_sup.cpp:227 5 {*cmpqi_1}
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) sim2fitman_sup.cpp:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 21 20 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 74 21 75 5 (set (pc)
        (label_ref 22)) sim2fitman_sup.cpp:225 654 {jump}
     (nil)
 -> 22)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 75 74 25)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 94
(code_label 25 75 26 6 46 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 92 [ D.6524 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8]))) sim2fitman_sup.cpp:229 148 {extendqisi2}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:SI 94)
                (plus:SI (reg:SI 92 [ D.6524 ])
                    (const_int -78 [0xffffffffffffffb2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:229 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6524 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 94)
            (const_int 39 [0x27]))) sim2fitman_sup.cpp:229 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 73 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) sim2fitman_sup.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 53)
;;  succ:       11
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 95 96
(note 73 30 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 73 32 7 (set (reg:DI 95)
        (zero_extend:DI (reg:SI 94))) sim2fitman_sup.cpp:229 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 32 31 33 7 (set (reg:DI 96)
        (mem/u/c:DI (plus:DI (ashift:DI (reg:DI 95)
                    (const_int 3 [0x3]))
                (label_ref:DI 35)) [0  S8 A8])) sim2fitman_sup.cpp:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (insn_list:REG_LABEL_OPERAND 35 (nil))))
(jump_insn 33 32 34 7 (parallel [
            (set (pc)
                (reg:DI 96))
            (use (label_ref 35))
        ]) sim2fitman_sup.cpp:229 658 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil))
 -> 35)
;;  succ:       11
;;              10
;;              8
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 35)
;; Insn is not within a basic block
(code_label 35 34 36 50 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 36 35 37 (addr_vec:DI [
            (label_ref:DI 48)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 38)
            (label_ref:DI 53)
            (label_ref:DI 43)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 48)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 53)
            (label_ref:DI 38)
            (label_ref:DI 53)
            (label_ref:DI 43)
        ]))
(barrier 37 36 38)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 38 37 39 8 51 "" [2 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 76 8 (set (reg:SI 87 [ D.6524 ])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:232 90 {*movsi_internal}
     (nil))
(jump_insn 76 40 77 8 (set (pc)
        (label_ref 64)) sim2fitman_sup.cpp:232 654 {jump}
     (nil)
 -> 64)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 77 76 43)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 43 77 44 9 52 "" [2 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 78 9 (set (reg:SI 87 [ D.6524 ])
        (const_int 2 [0x2])) sim2fitman_sup.cpp:236 90 {*movsi_internal}
     (nil))
(jump_insn 78 45 79 9 (set (pc)
        (label_ref 64)) sim2fitman_sup.cpp:236 654 {jump}
     (nil)
 -> 64)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 79 78 48)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 48 79 49 10 49 "" [2 uses])
(note 49 48 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 80 10 (set (reg:SI 87 [ D.6524 ])
        (const_int -1 [0xffffffffffffffff])) sim2fitman_sup.cpp:240 90 {*movsi_internal}
     (nil))
(jump_insn 80 50 81 10 (set (pc)
        (label_ref 64)) sim2fitman_sup.cpp:240 654 {jump}
     (nil)
 -> 64)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 81 80 53)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              6
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 53 81 54 11 48 "" [35 uses])
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7ff9ba4741b0 *.LC12>)) sim2fitman_sup.cpp:243 89 {*movdi_internal}
     (nil))
(insn 56 55 57 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:243 93 {*movqi_internal}
     (nil))
(call_insn 57 56 58 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:243 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 58 57 59 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7ff9ba479090 *.LC15>)) sim2fitman_sup.cpp:244 89 {*movdi_internal}
     (nil))
(call_insn 59 58 84 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:244 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 12, flags: (NEW, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 84 59 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 60 14 (const_int 0 [0]) sim2fitman_sup.cpp:245 684 {nop}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 60 85 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 82 60 83 12 (set (pc)
        (label_ref 61)) sim2fitman_sup.cpp:222 654 {jump}
     (nil)
 -> 61)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 83 82 64)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;;              8 [100.0%] 
;;              10 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 93
(code_label 64 83 65 13 53 "" [3 uses])
(note 65 64 66 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 70 13 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.6524 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6524 ])
        (nil)))
(insn 70 66 71 13 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) sim2fitman_sup.cpp:248 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 71 70 0 13 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:248 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void init(Data_file_header*, Data_block_header*, Procpar_info*, Preprocess*, IOFiles*, InFile_struct*) (_Z4initP16Data_file_headerP17Data_block_headerP12Procpar_infoP10PreprocessP7IOFilesP13InFile_struct, funcdef_no=10, decl_uid=5510, cgraph_uid=10, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 27 n_edges 34 count 27 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r540: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r540,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r539: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r539,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r538: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r538,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r537: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r537,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r536: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r536,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r535: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r535,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r534: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r534,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r533: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r533,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r532: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r532,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r531: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r531,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r530: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r530,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r529: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r529,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r528: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r528,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r527: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r527,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r526: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r526,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r525: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r525,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r524: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r524,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r523: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r523,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r522: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r522,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r521: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r521,l0) best SSE_REGS, allocno SSE_REGS
    r520: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r520,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r519: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r519,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r518: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r518,l0) best SSE_REGS, allocno SSE_REGS
    r517: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r517,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r516: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r516,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r515: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a55 (r515,l0) best SSE_REGS, allocno SSE_REGS
    r514: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r514,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r513: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r513,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r512: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a61 (r512,l0) best SSE_REGS, allocno SSE_REGS
    r511: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r511,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r510: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r510,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r509: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r509,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r508: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r508,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r507: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r507,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r506: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r506,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r505: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r505,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r504: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r504,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r503: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r503,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r502: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r502,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r501: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r501,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r500: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r500,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r499: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r499,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r498: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r498,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r497: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r497,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r496: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r496,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r495: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r495,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r494: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r494,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r493: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r493,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r492: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r492,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r491: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r491,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r490: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r490,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r489: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r489,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r488: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r488,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r487: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r487,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r486: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r486,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r485: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r485,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r484: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r484,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r483: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r483,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r482,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r481,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r480: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r480,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r479,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r478,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r477: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r477,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r476: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r476,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r475: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r475,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r474: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r474,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r473: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r473,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r472: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r472,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r470,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r469: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r469,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r468: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r468,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r467: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r467,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r466: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r466,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r465: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r465,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r464: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r464,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r463: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r463,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r462: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r462,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r461: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a172 (r461,l0) best SSE_REGS, allocno SSE_REGS
    r460: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r460,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r459: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r459,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r458: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r458,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r457: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r457,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r456: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r456,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r455: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r455,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r454: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r454,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r453: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r453,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r452: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r452,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r451,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r448,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r447,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r446,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r445,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r444,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r443: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r443,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r442,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r441: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r441,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r440: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a208 (r440,l0) best SSE_REGS, allocno SSE_REGS
    r439: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r439,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r438: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r438,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r435: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r435,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r434: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r434,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r427,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r426,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r425: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r425,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r424: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r424,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a251 (r415,l0) best SSE_REGS, allocno SSE_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r400,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a304 (r388,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r387: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r387,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a316 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a319 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a322 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a330 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a333 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a331 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a343 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a346 (r368,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a348 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a350 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a353 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a355 (r364,l0) best SSE_REGS, allocno SSE_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a356 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a359 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a361 (r361,l0) best SSE_REGS, allocno SSE_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a362 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a365 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a367 (r358,l0) best SSE_REGS, allocno SSE_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a368 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a371 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a373 (r355,l0) best SSE_REGS, allocno SSE_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a374 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a377 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a379 (r352,l0) best SSE_REGS, allocno SSE_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a380 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a383 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a385 (r349,l0) best SSE_REGS, allocno SSE_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a386 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a389 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a391 (r346,l0) best SSE_REGS, allocno SSE_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a392 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a395 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a397 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a398 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a401 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a403 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a404 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a407 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a409 (r337,l0) best SSE_REGS, allocno SSE_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a410 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a413 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a415 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a416 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a419 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a421 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a422 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a425 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a427 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a428 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a431 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a433 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a436 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a438 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a441 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a443 (r321,l0) best SSE_REGS, allocno SSE_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a444 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a447 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a449 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a450 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a453 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a332 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a344 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a345 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a347 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a349 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a351 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a352 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a354 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a357 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a358 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a360 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a363 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a364 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a366 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a369 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a370 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a372 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a375 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a376 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a378 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a381 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a382 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a384 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a387 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a388 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a390 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a393 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a394 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a396 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a399 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a400 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a402 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a405 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a406 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a408 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a411 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a412 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a414 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a417 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a418 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a420 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a423 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a424 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a426 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a429 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a430 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a432 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a434 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a435 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a437 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a439 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a440 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a442 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a445 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a446 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a448 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a451 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a452 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a1(r540,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a3(r539,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a5(r538,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a7(r537,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a9(r536,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a11(r535,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:64 INT_SSE_REGS:48 ALL_REGS:936 MEM:20
  a13(r533,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a14(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r534,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r532,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r531,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a21(r530,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r529,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a25(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r528,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r527,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r526,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r525,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r524,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r523,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a40(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a41(r522,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a42(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r521,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a44(r520,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r519,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r518,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a50(r517,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a52(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r516,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a55(r515,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a56(r514,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r513,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r512,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a62(r511,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a64(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r510,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r509,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a69(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r508,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r507,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a74(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a75(r506,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a76(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a77(r505,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a78(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a79(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r504,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r503,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a84(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a85(r502,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r501,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a89(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a90(r500,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a91(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r499,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r498,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r497,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a100(r496,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a101(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a102(r495,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a103(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a104(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r494,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a106(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r493,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r492,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a112(r491,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a113(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a114(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a115(r490,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a116(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r489,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a119(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a120(r488,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r487,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a125(r486,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a126(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a127(r485,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a128(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r484,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r483,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r482,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r481,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a139(r479,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a140(r480,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a141(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a142(r478,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a144(r477,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a146(r475,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a147(r476,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a148(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a149(r474,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a150(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r473,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a153(r471,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a154(r472,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a155(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a156(r470,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a157(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a158(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a159(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a160(r467,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a161(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a162(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a163(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a165(r465,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a166(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a167(r463,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a168(r464,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a169(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a170(r462,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a171(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a172(r461,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a173(r460,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a174(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a175(r458,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a176(r459,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a177(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a178(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a182(r454,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a183(r455,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a184(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a185(r453,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r452,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a189(r450,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a190(r451,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a191(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a192(r449,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a193(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r448,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a196(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a197(r447,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a198(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a199(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a200(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a201(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a202(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a203(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a204(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a205(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a206(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a207(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a208(r440,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a209(r439,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a211(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a212(r438,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a213(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a214(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a215(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a216(r435,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a217(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a218(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a219(r434,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a220(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a221(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a222(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a223(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a224(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a225(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a226(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a227(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a228(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a229(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a230(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a231(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a232(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a233(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a234(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a235(r424,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a236(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a237(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a238(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a239(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a240(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a241(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a242(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a243(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a244(r419,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a245(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a246(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a247(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a248(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a249(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a250(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a251(r415,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a252(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a253(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a254(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a255(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a256(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a257(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a258(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a259(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a260(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a261(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a262(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a263(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a264(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a265(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:78 INT_SSE_REGS:58 ALL_REGS:1248 MEM:23
  a266(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a267(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a268(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a269(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a270(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a271(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a272(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a273(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a274(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a275(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a276(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a277(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a278(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a279(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a280(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a281(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a282(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a283(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a284(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a285(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a286(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a287(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a288(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a289(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a290(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a291(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a292(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a293(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a294(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a295(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:78 INT_SSE_REGS:58 ALL_REGS:1248 MEM:23
  a296(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a297(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a298(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a299(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a300(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a301(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a302(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a303(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a304(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a305(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a306(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a307(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a308(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a309(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a310(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:45 NO_REX_SSE_REGS:45 SSE_REGS:45 MMX_REGS:65 INT_SSE_REGS:49 ALL_REGS:1040 MEM:19
  a311(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a312(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a313(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a314(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a315(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a316(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a317(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a318(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a319(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a320(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a321(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a322(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a323(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a324(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a325(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:15
  a326(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a327(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a328(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a329(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a330(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a331(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a332(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a333(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a334(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a335(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a336(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a337(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a338(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a339(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a340(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a341(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a342(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a343(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a344(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a345(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a346(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a347(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a348(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a349(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a350(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a351(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a352(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a353(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a354(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a355(r364,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a356(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a357(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a358(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a359(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a360(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a361(r361,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a362(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a363(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a364(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a365(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a366(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a367(r358,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a368(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a369(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a370(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a371(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a372(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a373(r355,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a374(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a375(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a376(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a377(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a378(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a379(r352,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a380(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a381(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a382(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a383(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a384(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a385(r349,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a386(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a387(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a388(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a389(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a390(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a391(r346,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a392(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a393(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a394(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a395(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a396(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a397(r343,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a398(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a399(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a400(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a401(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a402(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a403(r340,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a404(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a405(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a406(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a407(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a408(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a409(r337,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a410(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a411(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a412(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a413(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a414(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a415(r334,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a416(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a417(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a418(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a419(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a420(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a421(r331,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a422(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a423(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a424(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a425(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a426(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a427(r328,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a428(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a429(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a430(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a431(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a432(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a433(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a434(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a435(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a436(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a437(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a438(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a439(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a440(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a441(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a442(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a443(r321,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a444(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a445(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a446(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a447(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a448(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a449(r318,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a450(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a451(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a452(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a453(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 759(l0): point = 0
   Insn 756(l0): point = 2
   Insn 755(l0): point = 4
   Insn 754(l0): point = 6
   Insn 753(l0): point = 8
   Insn 752(l0): point = 10
   Insn 751(l0): point = 12
   Insn 750(l0): point = 14
   Insn 749(l0): point = 16
   Insn 748(l0): point = 18
   Insn 747(l0): point = 20
   Insn 746(l0): point = 22
   Insn 745(l0): point = 24
   Insn 744(l0): point = 26
   Insn 743(l0): point = 28
   Insn 742(l0): point = 30
   Insn 741(l0): point = 32
   Insn 740(l0): point = 34
   Insn 739(l0): point = 36
   Insn 738(l0): point = 38
   Insn 737(l0): point = 40
   Insn 736(l0): point = 42
   Insn 735(l0): point = 44
   Insn 734(l0): point = 46
   Insn 733(l0): point = 48
   Insn 732(l0): point = 50
   Insn 731(l0): point = 52
   Insn 730(l0): point = 54
   Insn 729(l0): point = 56
   Insn 728(l0): point = 58
   Insn 727(l0): point = 60
   Insn 726(l0): point = 62
   Insn 725(l0): point = 64
   Insn 724(l0): point = 66
   Insn 723(l0): point = 68
   Insn 722(l0): point = 70
   Insn 721(l0): point = 72
   Insn 720(l0): point = 74
   Insn 719(l0): point = 76
   Insn 718(l0): point = 78
   Insn 717(l0): point = 80
   Insn 716(l0): point = 82
   Insn 14(l0): point = 85
   Insn 13(l0): point = 87
   Insn 774(l0): point = 90
   Insn 710(l0): point = 92
   Insn 694(l0): point = 95
   Insn 693(l0): point = 97
   Insn 692(l0): point = 99
   Insn 691(l0): point = 101
   Insn 689(l0): point = 104
   Insn 688(l0): point = 106
   Insn 687(l0): point = 108
   Insn 686(l0): point = 110
   Insn 685(l0): point = 112
   Insn 684(l0): point = 114
   Insn 683(l0): point = 116
   Insn 682(l0): point = 118
   Insn 681(l0): point = 120
   Insn 680(l0): point = 122
   Insn 679(l0): point = 124
   Insn 678(l0): point = 126
   Insn 677(l0): point = 128
   Insn 676(l0): point = 130
   Insn 675(l0): point = 132
   Insn 674(l0): point = 134
   Insn 673(l0): point = 136
   Insn 672(l0): point = 138
   Insn 671(l0): point = 140
   Insn 670(l0): point = 142
   Insn 669(l0): point = 144
   Insn 668(l0): point = 146
   Insn 667(l0): point = 148
   Insn 666(l0): point = 150
   Insn 665(l0): point = 152
   Insn 664(l0): point = 154
   Insn 663(l0): point = 156
   Insn 662(l0): point = 158
   Insn 661(l0): point = 160
   Insn 660(l0): point = 162
   Insn 659(l0): point = 164
   Insn 658(l0): point = 166
   Insn 657(l0): point = 168
   Insn 656(l0): point = 170
   Insn 655(l0): point = 172
   Insn 654(l0): point = 174
   Insn 653(l0): point = 176
   Insn 652(l0): point = 178
   Insn 651(l0): point = 180
   Insn 650(l0): point = 182
   Insn 649(l0): point = 184
   Insn 648(l0): point = 186
   Insn 647(l0): point = 188
   Insn 646(l0): point = 190
   Insn 645(l0): point = 192
   Insn 644(l0): point = 194
   Insn 643(l0): point = 196
   Insn 642(l0): point = 198
   Insn 641(l0): point = 200
   Insn 640(l0): point = 202
   Insn 639(l0): point = 204
   Insn 638(l0): point = 206
   Insn 637(l0): point = 208
   Insn 636(l0): point = 210
   Insn 635(l0): point = 212
   Insn 634(l0): point = 214
   Insn 633(l0): point = 216
   Insn 632(l0): point = 218
   Insn 631(l0): point = 220
   Insn 630(l0): point = 222
   Insn 629(l0): point = 224
   Insn 628(l0): point = 226
   Insn 627(l0): point = 228
   Insn 626(l0): point = 230
   Insn 625(l0): point = 232
   Insn 624(l0): point = 234
   Insn 623(l0): point = 236
   Insn 622(l0): point = 238
   Insn 621(l0): point = 240
   Insn 620(l0): point = 242
   Insn 619(l0): point = 244
   Insn 618(l0): point = 246
   Insn 617(l0): point = 248
   Insn 616(l0): point = 250
   Insn 615(l0): point = 252
   Insn 614(l0): point = 254
   Insn 613(l0): point = 256
   Insn 612(l0): point = 258
   Insn 611(l0): point = 260
   Insn 610(l0): point = 262
   Insn 609(l0): point = 264
   Insn 608(l0): point = 266
   Insn 607(l0): point = 268
   Insn 606(l0): point = 270
   Insn 605(l0): point = 272
   Insn 604(l0): point = 274
   Insn 603(l0): point = 276
   Insn 602(l0): point = 278
   Insn 601(l0): point = 280
   Insn 600(l0): point = 282
   Insn 599(l0): point = 284
   Insn 598(l0): point = 286
   Insn 597(l0): point = 288
   Insn 596(l0): point = 290
   Insn 595(l0): point = 292
   Insn 594(l0): point = 294
   Insn 593(l0): point = 296
   Insn 592(l0): point = 298
   Insn 591(l0): point = 300
   Insn 590(l0): point = 302
   Insn 589(l0): point = 304
   Insn 588(l0): point = 306
   Insn 587(l0): point = 308
   Insn 586(l0): point = 310
   Insn 585(l0): point = 312
   Insn 584(l0): point = 314
   Insn 583(l0): point = 316
   Insn 582(l0): point = 318
   Insn 581(l0): point = 320
   Insn 580(l0): point = 322
   Insn 579(l0): point = 324
   Insn 578(l0): point = 326
   Insn 577(l0): point = 328
   Insn 576(l0): point = 330
   Insn 575(l0): point = 332
   Insn 574(l0): point = 334
   Insn 573(l0): point = 336
   Insn 572(l0): point = 338
   Insn 571(l0): point = 340
   Insn 570(l0): point = 342
   Insn 569(l0): point = 344
   Insn 568(l0): point = 346
   Insn 567(l0): point = 348
   Insn 566(l0): point = 350
   Insn 565(l0): point = 352
   Insn 564(l0): point = 354
   Insn 563(l0): point = 356
   Insn 562(l0): point = 358
   Insn 561(l0): point = 360
   Insn 560(l0): point = 362
   Insn 559(l0): point = 364
   Insn 558(l0): point = 366
   Insn 557(l0): point = 368
   Insn 556(l0): point = 370
   Insn 555(l0): point = 372
   Insn 554(l0): point = 374
   Insn 553(l0): point = 376
   Insn 552(l0): point = 378
   Insn 551(l0): point = 380
   Insn 550(l0): point = 382
   Insn 549(l0): point = 384
   Insn 548(l0): point = 386
   Insn 547(l0): point = 388
   Insn 546(l0): point = 390
   Insn 545(l0): point = 392
   Insn 544(l0): point = 394
   Insn 543(l0): point = 396
   Insn 542(l0): point = 398
   Insn 541(l0): point = 400
   Insn 540(l0): point = 402
   Insn 539(l0): point = 404
   Insn 538(l0): point = 406
   Insn 537(l0): point = 408
   Insn 536(l0): point = 410
   Insn 535(l0): point = 412
   Insn 534(l0): point = 414
   Insn 533(l0): point = 416
   Insn 532(l0): point = 418
   Insn 531(l0): point = 420
   Insn 530(l0): point = 422
   Insn 529(l0): point = 424
   Insn 528(l0): point = 426
   Insn 527(l0): point = 428
   Insn 526(l0): point = 430
   Insn 525(l0): point = 432
   Insn 524(l0): point = 434
   Insn 523(l0): point = 436
   Insn 522(l0): point = 438
   Insn 521(l0): point = 440
   Insn 520(l0): point = 442
   Insn 519(l0): point = 444
   Insn 518(l0): point = 446
   Insn 517(l0): point = 448
   Insn 516(l0): point = 450
   Insn 515(l0): point = 452
   Insn 514(l0): point = 454
   Insn 513(l0): point = 456
   Insn 512(l0): point = 458
   Insn 511(l0): point = 460
   Insn 510(l0): point = 462
   Insn 509(l0): point = 464
   Insn 508(l0): point = 466
   Insn 507(l0): point = 468
   Insn 506(l0): point = 470
   Insn 505(l0): point = 472
   Insn 504(l0): point = 474
   Insn 503(l0): point = 476
   Insn 502(l0): point = 478
   Insn 501(l0): point = 480
   Insn 500(l0): point = 482
   Insn 499(l0): point = 484
   Insn 498(l0): point = 486
   Insn 497(l0): point = 488
   Insn 496(l0): point = 490
   Insn 495(l0): point = 492
   Insn 494(l0): point = 494
   Insn 493(l0): point = 496
   Insn 492(l0): point = 498
   Insn 491(l0): point = 500
   Insn 490(l0): point = 502
   Insn 489(l0): point = 504
   Insn 488(l0): point = 506
   Insn 487(l0): point = 508
   Insn 486(l0): point = 510
   Insn 485(l0): point = 512
   Insn 484(l0): point = 514
   Insn 483(l0): point = 516
   Insn 482(l0): point = 518
   Insn 481(l0): point = 520
   Insn 480(l0): point = 522
   Insn 479(l0): point = 524
   Insn 478(l0): point = 526
   Insn 477(l0): point = 528
   Insn 476(l0): point = 530
   Insn 475(l0): point = 532
   Insn 474(l0): point = 534
   Insn 473(l0): point = 536
   Insn 472(l0): point = 538
   Insn 471(l0): point = 540
   Insn 470(l0): point = 542
   Insn 469(l0): point = 544
   Insn 468(l0): point = 546
   Insn 467(l0): point = 548
   Insn 466(l0): point = 550
   Insn 465(l0): point = 552
   Insn 464(l0): point = 554
   Insn 463(l0): point = 556
   Insn 462(l0): point = 558
   Insn 461(l0): point = 560
   Insn 460(l0): point = 562
   Insn 459(l0): point = 564
   Insn 458(l0): point = 566
   Insn 457(l0): point = 568
   Insn 456(l0): point = 570
   Insn 455(l0): point = 572
   Insn 454(l0): point = 574
   Insn 453(l0): point = 576
   Insn 452(l0): point = 578
   Insn 451(l0): point = 580
   Insn 450(l0): point = 582
   Insn 449(l0): point = 584
   Insn 448(l0): point = 586
   Insn 447(l0): point = 588
   Insn 446(l0): point = 590
   Insn 445(l0): point = 592
   Insn 444(l0): point = 594
   Insn 443(l0): point = 596
   Insn 442(l0): point = 598
   Insn 441(l0): point = 600
   Insn 440(l0): point = 602
   Insn 439(l0): point = 604
   Insn 438(l0): point = 606
   Insn 437(l0): point = 608
   Insn 436(l0): point = 610
   Insn 435(l0): point = 612
   Insn 434(l0): point = 614
   Insn 433(l0): point = 616
   Insn 432(l0): point = 618
   Insn 431(l0): point = 620
   Insn 430(l0): point = 622
   Insn 429(l0): point = 624
   Insn 428(l0): point = 626
   Insn 427(l0): point = 628
   Insn 426(l0): point = 630
   Insn 425(l0): point = 632
   Insn 424(l0): point = 634
   Insn 423(l0): point = 636
   Insn 422(l0): point = 638
   Insn 421(l0): point = 640
   Insn 420(l0): point = 642
   Insn 419(l0): point = 644
   Insn 418(l0): point = 646
   Insn 417(l0): point = 648
   Insn 416(l0): point = 650
   Insn 415(l0): point = 652
   Insn 414(l0): point = 654
   Insn 413(l0): point = 656
   Insn 412(l0): point = 658
   Insn 411(l0): point = 660
   Insn 410(l0): point = 662
   Insn 409(l0): point = 664
   Insn 408(l0): point = 666
   Insn 407(l0): point = 668
   Insn 406(l0): point = 670
   Insn 405(l0): point = 672
   Insn 404(l0): point = 674
   Insn 403(l0): point = 676
   Insn 402(l0): point = 678
   Insn 401(l0): point = 680
   Insn 400(l0): point = 682
   Insn 399(l0): point = 684
   Insn 398(l0): point = 686
   Insn 397(l0): point = 688
   Insn 396(l0): point = 690
   Insn 395(l0): point = 692
   Insn 394(l0): point = 694
   Insn 393(l0): point = 696
   Insn 392(l0): point = 698
   Insn 391(l0): point = 700
   Insn 390(l0): point = 702
   Insn 389(l0): point = 704
   Insn 388(l0): point = 706
   Insn 387(l0): point = 708
   Insn 386(l0): point = 710
   Insn 385(l0): point = 712
   Insn 384(l0): point = 714
   Insn 383(l0): point = 716
   Insn 382(l0): point = 718
   Insn 381(l0): point = 720
   Insn 380(l0): point = 722
   Insn 379(l0): point = 724
   Insn 378(l0): point = 726
   Insn 377(l0): point = 728
   Insn 376(l0): point = 730
   Insn 375(l0): point = 732
   Insn 374(l0): point = 734
   Insn 373(l0): point = 736
   Insn 372(l0): point = 738
   Insn 371(l0): point = 740
   Insn 370(l0): point = 742
   Insn 369(l0): point = 744
   Insn 368(l0): point = 746
   Insn 367(l0): point = 748
   Insn 366(l0): point = 750
   Insn 365(l0): point = 752
   Insn 364(l0): point = 754
   Insn 363(l0): point = 756
   Insn 362(l0): point = 758
   Insn 361(l0): point = 760
   Insn 360(l0): point = 762
   Insn 359(l0): point = 764
   Insn 358(l0): point = 766
   Insn 357(l0): point = 768
   Insn 356(l0): point = 770
   Insn 355(l0): point = 772
   Insn 354(l0): point = 774
   Insn 353(l0): point = 776
   Insn 352(l0): point = 778
   Insn 351(l0): point = 780
   Insn 350(l0): point = 782
   Insn 349(l0): point = 784
   Insn 348(l0): point = 786
   Insn 347(l0): point = 788
   Insn 346(l0): point = 790
   Insn 345(l0): point = 792
   Insn 344(l0): point = 794
   Insn 343(l0): point = 796
   Insn 342(l0): point = 798
   Insn 341(l0): point = 800
   Insn 340(l0): point = 802
   Insn 339(l0): point = 804
   Insn 338(l0): point = 806
   Insn 337(l0): point = 808
   Insn 336(l0): point = 810
   Insn 335(l0): point = 812
   Insn 334(l0): point = 814
   Insn 333(l0): point = 816
   Insn 332(l0): point = 818
   Insn 331(l0): point = 820
   Insn 330(l0): point = 822
   Insn 329(l0): point = 824
   Insn 328(l0): point = 826
   Insn 327(l0): point = 828
   Insn 326(l0): point = 830
   Insn 325(l0): point = 832
   Insn 324(l0): point = 834
   Insn 323(l0): point = 836
   Insn 322(l0): point = 838
   Insn 321(l0): point = 840
   Insn 320(l0): point = 842
   Insn 319(l0): point = 844
   Insn 318(l0): point = 846
   Insn 317(l0): point = 848
   Insn 316(l0): point = 850
   Insn 315(l0): point = 852
   Insn 314(l0): point = 854
   Insn 313(l0): point = 856
   Insn 312(l0): point = 858
   Insn 311(l0): point = 860
   Insn 310(l0): point = 862
   Insn 309(l0): point = 864
   Insn 308(l0): point = 866
   Insn 307(l0): point = 868
   Insn 306(l0): point = 870
   Insn 305(l0): point = 872
   Insn 289(l0): point = 875
   Insn 288(l0): point = 877
   Insn 287(l0): point = 879
   Insn 286(l0): point = 881
   Insn 284(l0): point = 884
   Insn 283(l0): point = 886
   Insn 282(l0): point = 888
   Insn 281(l0): point = 890
   Insn 280(l0): point = 892
   Insn 279(l0): point = 894
   Insn 278(l0): point = 896
   Insn 277(l0): point = 898
   Insn 276(l0): point = 900
   Insn 275(l0): point = 902
   Insn 274(l0): point = 904
   Insn 258(l0): point = 907
   Insn 257(l0): point = 909
   Insn 256(l0): point = 911
   Insn 255(l0): point = 913
   Insn 253(l0): point = 916
   Insn 252(l0): point = 918
   Insn 251(l0): point = 920
   Insn 250(l0): point = 922
   Insn 249(l0): point = 924
   Insn 248(l0): point = 926
   Insn 247(l0): point = 928
   Insn 246(l0): point = 930
   Insn 245(l0): point = 932
   Insn 244(l0): point = 934
   Insn 243(l0): point = 936
   Insn 242(l0): point = 938
   Insn 226(l0): point = 941
   Insn 225(l0): point = 943
   Insn 224(l0): point = 945
   Insn 223(l0): point = 947
   Insn 221(l0): point = 950
   Insn 220(l0): point = 952
   Insn 219(l0): point = 954
   Insn 218(l0): point = 956
   Insn 217(l0): point = 958
   Insn 216(l0): point = 960
   Insn 215(l0): point = 962
   Insn 214(l0): point = 964
   Insn 213(l0): point = 966
   Insn 212(l0): point = 968
   Insn 211(l0): point = 970
   Insn 195(l0): point = 973
   Insn 194(l0): point = 975
   Insn 193(l0): point = 977
   Insn 192(l0): point = 979
   Insn 190(l0): point = 982
   Insn 189(l0): point = 984
   Insn 188(l0): point = 986
   Insn 187(l0): point = 988
   Insn 186(l0): point = 990
   Insn 185(l0): point = 992
   Insn 184(l0): point = 994
   Insn 183(l0): point = 996
   Insn 182(l0): point = 998
   Insn 181(l0): point = 1000
   Insn 165(l0): point = 1003
   Insn 164(l0): point = 1005
   Insn 163(l0): point = 1007
   Insn 162(l0): point = 1009
   Insn 160(l0): point = 1012
   Insn 144(l0): point = 1015
   Insn 143(l0): point = 1017
   Insn 142(l0): point = 1019
   Insn 141(l0): point = 1021
   Insn 139(l0): point = 1024
   Insn 138(l0): point = 1026
   Insn 137(l0): point = 1028
   Insn 136(l0): point = 1030
   Insn 135(l0): point = 1032
   Insn 134(l0): point = 1034
   Insn 133(l0): point = 1036
   Insn 132(l0): point = 1038
   Insn 131(l0): point = 1040
   Insn 130(l0): point = 1042
   Insn 129(l0): point = 1044
   Insn 128(l0): point = 1046
   Insn 127(l0): point = 1048
   Insn 126(l0): point = 1050
   Insn 125(l0): point = 1052
   Insn 124(l0): point = 1054
   Insn 123(l0): point = 1056
   Insn 122(l0): point = 1058
   Insn 121(l0): point = 1060
   Insn 120(l0): point = 1062
   Insn 119(l0): point = 1064
   Insn 118(l0): point = 1066
   Insn 117(l0): point = 1068
   Insn 116(l0): point = 1070
   Insn 115(l0): point = 1072
   Insn 114(l0): point = 1074
   Insn 113(l0): point = 1076
   Insn 112(l0): point = 1078
   Insn 111(l0): point = 1080
   Insn 110(l0): point = 1082
   Insn 109(l0): point = 1084
   Insn 108(l0): point = 1086
   Insn 107(l0): point = 1088
   Insn 106(l0): point = 1090
   Insn 105(l0): point = 1092
   Insn 104(l0): point = 1094
   Insn 103(l0): point = 1096
   Insn 102(l0): point = 1098
   Insn 101(l0): point = 1100
   Insn 100(l0): point = 1102
   Insn 99(l0): point = 1104
   Insn 98(l0): point = 1106
   Insn 97(l0): point = 1108
   Insn 96(l0): point = 1110
   Insn 95(l0): point = 1112
   Insn 94(l0): point = 1114
   Insn 93(l0): point = 1116
   Insn 92(l0): point = 1118
   Insn 91(l0): point = 1120
   Insn 90(l0): point = 1122
   Insn 89(l0): point = 1124
   Insn 88(l0): point = 1126
   Insn 87(l0): point = 1128
   Insn 86(l0): point = 1130
   Insn 85(l0): point = 1132
   Insn 84(l0): point = 1134
   Insn 83(l0): point = 1136
   Insn 82(l0): point = 1138
   Insn 81(l0): point = 1140
   Insn 80(l0): point = 1142
   Insn 79(l0): point = 1144
   Insn 78(l0): point = 1146
   Insn 77(l0): point = 1148
   Insn 76(l0): point = 1150
   Insn 75(l0): point = 1152
   Insn 74(l0): point = 1154
   Insn 73(l0): point = 1156
   Insn 72(l0): point = 1158
   Insn 71(l0): point = 1160
   Insn 70(l0): point = 1162
   Insn 69(l0): point = 1164
   Insn 68(l0): point = 1166
   Insn 67(l0): point = 1168
   Insn 66(l0): point = 1170
   Insn 65(l0): point = 1172
   Insn 64(l0): point = 1174
   Insn 63(l0): point = 1176
   Insn 62(l0): point = 1178
   Insn 61(l0): point = 1180
   Insn 60(l0): point = 1182
   Insn 59(l0): point = 1184
   Insn 58(l0): point = 1186
   Insn 57(l0): point = 1188
   Insn 56(l0): point = 1190
   Insn 55(l0): point = 1192
   Insn 54(l0): point = 1194
   Insn 53(l0): point = 1196
   Insn 52(l0): point = 1198
   Insn 51(l0): point = 1200
   Insn 50(l0): point = 1202
   Insn 49(l0): point = 1204
   Insn 48(l0): point = 1206
   Insn 47(l0): point = 1208
   Insn 46(l0): point = 1210
   Insn 45(l0): point = 1212
   Insn 44(l0): point = 1214
   Insn 43(l0): point = 1216
   Insn 42(l0): point = 1218
   Insn 41(l0): point = 1220
   Insn 40(l0): point = 1222
   Insn 39(l0): point = 1224
   Insn 38(l0): point = 1226
   Insn 37(l0): point = 1228
   Insn 36(l0): point = 1230
   Insn 35(l0): point = 1232
   Insn 34(l0): point = 1234
   Insn 33(l0): point = 1236
   Insn 32(l0): point = 1238
   Insn 31(l0): point = 1240
   Insn 30(l0): point = 1242
   Insn 29(l0): point = 1244
   Insn 28(l0): point = 1246
   Insn 27(l0): point = 1248
   Insn 26(l0): point = 1250
   Insn 25(l0): point = 1252
   Insn 24(l0): point = 1254
   Insn 23(l0): point = 1256
   Insn 22(l0): point = 1258
   Insn 21(l0): point = 1260
   Insn 20(l0): point = 1262
   Insn 19(l0): point = 1264
   Insn 18(l0): point = 1266
   Insn 17(l0): point = 1268
   Insn 16(l0): point = 1270
   Insn 760(l0): point = 1273
   Insn 154(l0): point = 1275
   Insn 153(l0): point = 1277
   Insn 152(l0): point = 1279
   Insn 151(l0): point = 1281
   Insn 150(l0): point = 1283
   Insn 149(l0): point = 1285
   Insn 148(l0): point = 1287
   Insn 147(l0): point = 1289
   Insn 146(l0): point = 1291
   Insn 762(l0): point = 1294
   Insn 175(l0): point = 1296
   Insn 174(l0): point = 1298
   Insn 173(l0): point = 1300
   Insn 172(l0): point = 1302
   Insn 171(l0): point = 1304
   Insn 170(l0): point = 1306
   Insn 169(l0): point = 1308
   Insn 168(l0): point = 1310
   Insn 167(l0): point = 1312
   Insn 764(l0): point = 1315
   Insn 205(l0): point = 1317
   Insn 204(l0): point = 1319
   Insn 203(l0): point = 1321
   Insn 202(l0): point = 1323
   Insn 201(l0): point = 1325
   Insn 200(l0): point = 1327
   Insn 199(l0): point = 1329
   Insn 198(l0): point = 1331
   Insn 197(l0): point = 1333
   Insn 766(l0): point = 1336
   Insn 236(l0): point = 1338
   Insn 235(l0): point = 1340
   Insn 234(l0): point = 1342
   Insn 233(l0): point = 1344
   Insn 232(l0): point = 1346
   Insn 231(l0): point = 1348
   Insn 230(l0): point = 1350
   Insn 229(l0): point = 1352
   Insn 228(l0): point = 1354
   Insn 768(l0): point = 1357
   Insn 268(l0): point = 1359
   Insn 267(l0): point = 1361
   Insn 266(l0): point = 1363
   Insn 265(l0): point = 1365
   Insn 264(l0): point = 1367
   Insn 263(l0): point = 1369
   Insn 262(l0): point = 1371
   Insn 261(l0): point = 1373
   Insn 260(l0): point = 1375
   Insn 770(l0): point = 1378
   Insn 299(l0): point = 1380
   Insn 298(l0): point = 1382
   Insn 297(l0): point = 1384
   Insn 296(l0): point = 1386
   Insn 295(l0): point = 1388
   Insn 294(l0): point = 1390
   Insn 293(l0): point = 1392
   Insn 292(l0): point = 1394
   Insn 291(l0): point = 1396
   Insn 772(l0): point = 1399
   Insn 704(l0): point = 1401
   Insn 703(l0): point = 1403
   Insn 702(l0): point = 1405
   Insn 701(l0): point = 1407
   Insn 700(l0): point = 1409
   Insn 699(l0): point = 1411
   Insn 698(l0): point = 1413
   Insn 697(l0): point = 1415
   Insn 696(l0): point = 1417
   Insn 11(l0): point = 1420
   Insn 7(l0): point = 1422
   Insn 6(l0): point = 1424
   Insn 5(l0): point = 1426
   Insn 4(l0): point = 1428
   Insn 3(l0): point = 1430
   Insn 2(l0): point = 1432
 a0(r315): [3..10]
 a1(r540): [11..12]
 a2(r314): [15..22]
 a3(r539): [23..24]
 a4(r313): [27..34]
 a5(r538): [35..36]
 a6(r312): [39..46]
 a7(r537): [47..48]
 a8(r311): [51..58]
 a9(r536): [59..60]
 a10(r310): [63..70]
 a11(r535): [71..72]
 a12(r309): [75..82]
 a13(r533): [1404..1405]
 a14(r308): [1404..1409]
 a15(r534): [1406..1407]
 a16(r532): [1410..1411]
 a17(r307): [1410..1413]
 a18(r306): [1414..1415]
 a19(r531): [1416..1417]
 a20(r305): [98..99]
 a21(r530): [100..101]
 a22(r304): [107..108]
 a23(r529): [109..110]
 a24(r303): [109..112]
 a25(r302): [113..114]
 a26(r528): [115..116]
 a27(r301): [119..120]
 a28(r527): [121..122]
 a29(r300): [121..124]
 a30(r299): [125..126]
 a31(r526): [127..128]
 a32(r298): [131..132]
 a33(r525): [133..134]
 a34(r297): [133..136]
 a35(r296): [137..138]
 a36(r524): [139..140]
 a37(r295): [143..144]
 a38(r523): [145..146]
 a39(r294): [145..148]
 a40(r293): [149..150]
 a41(r522): [151..152]
 a42(r292): [155..158]
 a43(r521): [155..156]
 a44(r520): [159..160]
 a45(r291): [159..162]
 a46(r290): [163..164]
 a47(r519): [165..166]
 a48(r289): [169..172]
 a49(r518): [169..170]
 a50(r517): [173..174]
 a51(r288): [173..176]
 a52(r287): [177..178]
 a53(r516): [179..180]
 a54(r286): [183..186]
 a55(r515): [183..184]
 a56(r514): [187..188]
 a57(r285): [187..190]
 a58(r284): [191..192]
 a59(r513): [193..194]
 a60(r283): [197..200]
 a61(r512): [197..198]
 a62(r511): [201..202]
 a63(r282): [201..204]
 a64(r281): [205..206]
 a65(r510): [207..208]
 a66(r280): [211..212]
 a67(r509): [213..214]
 a68(r279): [213..216]
 a69(r278): [217..218]
 a70(r508): [219..220]
 a71(r277): [223..224]
 a72(r507): [225..226]
 a73(r276): [225..228]
 a74(r275): [229..230]
 a75(r506): [231..232]
 a76(r274): [235..236]
 a77(r505): [237..238]
 a78(r273): [237..240]
 a79(r272): [241..242]
 a80(r504): [243..244]
 a81(r271): [247..248]
 a82(r503): [249..250]
 a83(r270): [249..252]
 a84(r269): [253..254]
 a85(r502): [255..256]
 a86(r268): [259..260]
 a87(r501): [261..262]
 a88(r267): [261..264]
 a89(r266): [265..266]
 a90(r500): [267..268]
 a91(r265): [271..272]
 a92(r499): [273..274]
 a93(r264): [273..276]
 a94(r263): [277..278]
 a95(r498): [279..280]
 a96(r262): [283..284]
 a97(r497): [285..286]
 a98(r261): [285..288]
 a99(r260): [289..290]
 a100(r496): [291..292]
 a101(r259): [295..296]
 a102(r495): [297..298]
 a103(r258): [297..300]
 a104(r257): [301..302]
 a105(r494): [303..304]
 a106(r256): [307..308]
 a107(r493): [309..310]
 a108(r255): [309..312]
 a109(r254): [313..314]
 a110(r492): [315..316]
 a111(r253): [319..320]
 a112(r491): [321..322]
 a113(r252): [321..324]
 a114(r251): [325..326]
 a115(r490): [327..328]
 a116(r250): [331..332]
 a117(r489): [333..334]
 a118(r249): [333..336]
 a119(r248): [337..338]
 a120(r488): [339..340]
 a121(r247): [343..344]
 a122(r487): [345..346]
 a123(r246): [345..348]
 a124(r245): [349..350]
 a125(r486): [351..352]
 a126(r244): [355..356]
 a127(r485): [357..358]
 a128(r243): [357..360]
 a129(r242): [361..362]
 a130(r484): [363..364]
 a131(r241): [367..368]
 a132(r483): [369..370]
 a133(r240): [369..372]
 a134(r239): [373..374]
 a135(r482): [375..376]
 a136(r238): [379..380]
 a137(r481): [381..382]
 a138(r237): [381..384]
 a139(r479): [389..398] [385..386]
 a140(r480): [387..388]
 a141(r236): [391..400]
 a142(r478): [401..402]
 a143(r235): [405..406]
 a144(r477): [407..408]
 a145(r234): [407..410]
 a146(r475): [415..424] [411..412]
 a147(r476): [413..414]
 a148(r233): [417..426]
 a149(r474): [427..428]
 a150(r232): [431..432]
 a151(r473): [433..434]
 a152(r231): [433..436]
 a153(r471): [441..450] [437..438]
 a154(r472): [439..440]
 a155(r230): [443..452]
 a156(r470): [453..454]
 a157(r229): [457..458]
 a158(r469): [459..460]
 a159(r228): [459..462]
 a160(r467): [467..476] [463..464]
 a161(r468): [465..466]
 a162(r227): [469..478]
 a163(r466): [479..480]
 a164(r226): [483..484]
 a165(r465): [485..486]
 a166(r225): [485..488]
 a167(r463): [493..502] [489..490]
 a168(r464): [491..492]
 a169(r224): [495..504]
 a170(r462): [505..506]
 a171(r223): [509..512]
 a172(r461): [509..510]
 a173(r460): [513..514]
 a174(r222): [513..516]
 a175(r458): [521..530] [517..518]
 a176(r459): [519..520]
 a177(r221): [523..532]
 a178(r457): [533..534]
 a179(r220): [537..538]
 a180(r456): [539..540]
 a181(r219): [539..542]
 a182(r454): [547..556] [543..544]
 a183(r455): [545..546]
 a184(r218): [549..558]
 a185(r453): [559..560]
 a186(r217): [563..564]
 a187(r452): [565..566]
 a188(r216): [565..568]
 a189(r450): [573..582] [569..570]
 a190(r451): [571..572]
 a191(r215): [575..584]
 a192(r449): [585..586]
 a193(r214): [589..590]
 a194(r448): [591..592]
 a195(r213): [591..594]
 a196(r446): [599..608] [595..596]
 a197(r447): [597..598]
 a198(r212): [601..610]
 a199(r445): [611..612]
 a200(r211): [615..616]
 a201(r444): [617..618]
 a202(r210): [617..620]
 a203(r442): [625..634] [621..622]
 a204(r443): [623..624]
 a205(r209): [627..636]
 a206(r441): [637..638]
 a207(r208): [641..644]
 a208(r440): [641..642]
 a209(r439): [645..646]
 a210(r207): [645..648]
 a211(r437): [653..662] [649..650]
 a212(r438): [651..652]
 a213(r206): [655..664]
 a214(r436): [665..666]
 a215(r205): [669..670]
 a216(r435): [671..672]
 a217(r204): [671..674]
 a218(r433): [679..688] [675..676]
 a219(r434): [677..678]
 a220(r203): [681..690]
 a221(r432): [691..692]
 a222(r202): [695..696]
 a223(r431): [697..698]
 a224(r201): [697..700]
 a225(r429): [705..714] [701..702]
 a226(r430): [703..704]
 a227(r200): [707..716]
 a228(r428): [717..718]
 a229(r199): [721..722]
 a230(r427): [723..724]
 a231(r198): [723..726]
 a232(r425): [731..740] [727..728]
 a233(r426): [729..730]
 a234(r197): [733..742]
 a235(r424): [743..744]
 a236(r196): [747..748]
 a237(r423): [749..750]
 a238(r195): [749..752]
 a239(r421): [757..766] [753..754]
 a240(r422): [755..756]
 a241(r194): [759..768]
 a242(r420): [769..770]
 a243(r193): [773..774]
 a244(r419): [775..776]
 a245(r192): [775..778]
 a246(r417): [783..792] [779..780]
 a247(r418): [781..782]
 a248(r191): [785..794]
 a249(r416): [795..796]
 a250(r190): [799..802]
 a251(r415): [799..800]
 a252(r414): [803..804]
 a253(r189): [803..806]
 a254(r412): [811..820] [807..808]
 a255(r413): [809..810]
 a256(r188): [813..822]
 a257(r411): [823..824]
 a258(r187): [827..828]
 a259(r410): [829..830]
 a260(r186): [829..832]
 a261(r408): [837..846] [833..834]
 a262(r409): [835..836]
 a263(r185): [839..848]
 a264(r407): [849..850]
 a265(r184): [853..862]
 a266(r183): [863..864]
 a267(r406): [865..866]
 a268(r182): [865..868]
 a269(r181): [869..870]
 a270(r405): [871..872]
 a271(r403): [1383..1384]
 a272(r180): [1383..1388]
 a273(r404): [1385..1386]
 a274(r402): [1389..1390]
 a275(r179): [1389..1392]
 a276(r178): [1393..1394]
 a277(r401): [1395..1396]
 a278(r177): [878..879]
 a279(r400): [880..881]
 a280(r176): [887..894]
 a281(r175): [895..896]
 a282(r399): [897..898]
 a283(r174): [897..900]
 a284(r173): [901..902]
 a285(r398): [903..904]
 a286(r396): [1362..1363]
 a287(r172): [1362..1367]
 a288(r397): [1364..1365]
 a289(r395): [1368..1369]
 a290(r171): [1368..1371]
 a291(r170): [1372..1373]
 a292(r394): [1374..1375]
 a293(r169): [910..911]
 a294(r393): [912..913]
 a295(r168): [919..928]
 a296(r167): [929..930]
 a297(r392): [931..932]
 a298(r166): [931..934]
 a299(r165): [935..936]
 a300(r391): [937..938]
 a301(r389): [1341..1342]
 a302(r164): [1341..1346]
 a303(r390): [1343..1344]
 a304(r388): [1347..1348]
 a305(r163): [1347..1350]
 a306(r162): [1351..1352]
 a307(r387): [1353..1354]
 a308(r161): [944..945]
 a309(r386): [946..947]
 a310(r160): [953..960]
 a311(r159): [961..962]
 a312(r385): [963..964]
 a313(r158): [963..966]
 a314(r157): [967..968]
 a315(r384): [969..970]
 a316(r382): [1320..1321]
 a317(r156): [1320..1325]
 a318(r383): [1322..1323]
 a319(r381): [1326..1327]
 a320(r155): [1326..1329]
 a321(r154): [1330..1331]
 a322(r380): [1332..1333]
 a323(r153): [976..977]
 a324(r379): [978..979]
 a325(r152): [985..990]
 a326(r151): [991..992]
 a327(r378): [993..994]
 a328(r150): [993..996]
 a329(r149): [997..998]
 a330(r377): [999..1000]
 a331(r375): [1299..1300]
 a332(r148): [1299..1304]
 a333(r376): [1301..1302]
 a334(r374): [1305..1306]
 a335(r147): [1305..1308]
 a336(r146): [1309..1310]
 a337(r373): [1311..1312]
 a338(r145): [1006..1007]
 a339(r372): [1008..1009]
 a340(r370): [1278..1279]
 a341(r144): [1278..1283]
 a342(r371): [1280..1281]
 a343(r369): [1284..1285]
 a344(r143): [1284..1287]
 a345(r142): [1288..1289]
 a346(r368): [1290..1291]
 a347(r141): [1018..1019]
 a348(r367): [1020..1021]
 a349(r140): [1027..1028]
 a350(r366): [1029..1030]
 a351(r139): [1029..1032]
 a352(r138): [1033..1034]
 a353(r365): [1035..1036]
 a354(r137): [1039..1042]
 a355(r364): [1039..1040]
 a356(r363): [1043..1044]
 a357(r136): [1043..1046]
 a358(r135): [1047..1048]
 a359(r362): [1049..1050]
 a360(r134): [1053..1056]
 a361(r361): [1053..1054]
 a362(r360): [1057..1058]
 a363(r133): [1057..1060]
 a364(r132): [1061..1062]
 a365(r359): [1063..1064]
 a366(r131): [1067..1070]
 a367(r358): [1067..1068]
 a368(r357): [1071..1072]
 a369(r130): [1071..1074]
 a370(r129): [1075..1076]
 a371(r356): [1077..1078]
 a372(r128): [1081..1084]
 a373(r355): [1081..1082]
 a374(r354): [1085..1086]
 a375(r127): [1085..1088]
 a376(r126): [1089..1090]
 a377(r353): [1091..1092]
 a378(r125): [1095..1098]
 a379(r352): [1095..1096]
 a380(r351): [1099..1100]
 a381(r124): [1099..1102]
 a382(r123): [1103..1104]
 a383(r350): [1105..1106]
 a384(r122): [1109..1112]
 a385(r349): [1109..1110]
 a386(r348): [1113..1114]
 a387(r121): [1113..1116]
 a388(r120): [1117..1118]
 a389(r347): [1119..1120]
 a390(r119): [1123..1126]
 a391(r346): [1123..1124]
 a392(r345): [1127..1128]
 a393(r118): [1127..1130]
 a394(r117): [1131..1132]
 a395(r344): [1133..1134]
 a396(r116): [1137..1140]
 a397(r343): [1137..1138]
 a398(r342): [1141..1142]
 a399(r115): [1141..1144]
 a400(r114): [1145..1146]
 a401(r341): [1147..1148]
 a402(r113): [1151..1154]
 a403(r340): [1151..1152]
 a404(r339): [1155..1156]
 a405(r112): [1155..1158]
 a406(r111): [1159..1160]
 a407(r338): [1161..1162]
 a408(r110): [1165..1168]
 a409(r337): [1165..1166]
 a410(r336): [1169..1170]
 a411(r109): [1169..1172]
 a412(r108): [1173..1174]
 a413(r335): [1175..1176]
 a414(r107): [1179..1182]
 a415(r334): [1179..1180]
 a416(r333): [1183..1184]
 a417(r106): [1183..1186]
 a418(r105): [1187..1188]
 a419(r332): [1189..1190]
 a420(r104): [1193..1196]
 a421(r331): [1193..1194]
 a422(r330): [1197..1198]
 a423(r103): [1197..1200]
 a424(r102): [1201..1202]
 a425(r329): [1203..1204]
 a426(r101): [1207..1210]
 a427(r328): [1207..1208]
 a428(r327): [1211..1212]
 a429(r100): [1211..1214]
 a430(r99): [1215..1216]
 a431(r326): [1217..1218]
 a432(r98): [1221..1222]
 a433(r325): [1223..1224]
 a434(r97): [1223..1226]
 a435(r96): [1227..1228]
 a436(r324): [1229..1230]
 a437(r95): [1233..1234]
 a438(r323): [1235..1236]
 a439(r94): [1235..1238]
 a440(r93): [1239..1240]
 a441(r322): [1241..1242]
 a442(r92): [1245..1248]
 a443(r321): [1245..1246]
 a444(r320): [1249..1250]
 a445(r91): [1249..1252]
 a446(r90): [1253..1254]
 a447(r319): [1255..1256]
 a448(r89): [1259..1262]
 a449(r318): [1259..1260]
 a450(r317): [1263..1264]
 a451(r88): [1263..1266]
 a452(r87): [1267..1268]
 a453(r316): [1269..1270]
Compressing live ranges: from 1435 to 710 - 49%
Ranges after the compression:
 a0(r315): [0..1]
 a1(r540): [2..3]
 a2(r314): [4..5]
 a3(r539): [6..7]
 a4(r313): [8..9]
 a5(r538): [10..11]
 a6(r312): [12..13]
 a7(r537): [14..15]
 a8(r311): [16..17]
 a9(r536): [18..19]
 a10(r310): [20..21]
 a11(r535): [22..23]
 a12(r309): [24..25]
 a13(r533): [700..701]
 a14(r308): [700..703]
 a15(r534): [702..703]
 a16(r532): [704..705]
 a17(r307): [704..705]
 a18(r306): [706..707]
 a19(r531): [708..709]
 a20(r305): [26..27]
 a21(r530): [28..29]
 a22(r304): [30..31]
 a23(r529): [32..33]
 a24(r303): [32..33]
 a25(r302): [34..35]
 a26(r528): [36..37]
 a27(r301): [38..39]
 a28(r527): [40..41]
 a29(r300): [40..41]
 a30(r299): [42..43]
 a31(r526): [44..45]
 a32(r298): [46..47]
 a33(r525): [48..49]
 a34(r297): [48..49]
 a35(r296): [50..51]
 a36(r524): [52..53]
 a37(r295): [54..55]
 a38(r523): [56..57]
 a39(r294): [56..57]
 a40(r293): [58..59]
 a41(r522): [60..61]
 a42(r292): [62..63]
 a43(r521): [62..63]
 a44(r520): [64..65]
 a45(r291): [64..65]
 a46(r290): [66..67]
 a47(r519): [68..69]
 a48(r289): [70..71]
 a49(r518): [70..71]
 a50(r517): [72..73]
 a51(r288): [72..73]
 a52(r287): [74..75]
 a53(r516): [76..77]
 a54(r286): [78..79]
 a55(r515): [78..79]
 a56(r514): [80..81]
 a57(r285): [80..81]
 a58(r284): [82..83]
 a59(r513): [84..85]
 a60(r283): [86..87]
 a61(r512): [86..87]
 a62(r511): [88..89]
 a63(r282): [88..89]
 a64(r281): [90..91]
 a65(r510): [92..93]
 a66(r280): [94..95]
 a67(r509): [96..97]
 a68(r279): [96..97]
 a69(r278): [98..99]
 a70(r508): [100..101]
 a71(r277): [102..103]
 a72(r507): [104..105]
 a73(r276): [104..105]
 a74(r275): [106..107]
 a75(r506): [108..109]
 a76(r274): [110..111]
 a77(r505): [112..113]
 a78(r273): [112..113]
 a79(r272): [114..115]
 a80(r504): [116..117]
 a81(r271): [118..119]
 a82(r503): [120..121]
 a83(r270): [120..121]
 a84(r269): [122..123]
 a85(r502): [124..125]
 a86(r268): [126..127]
 a87(r501): [128..129]
 a88(r267): [128..129]
 a89(r266): [130..131]
 a90(r500): [132..133]
 a91(r265): [134..135]
 a92(r499): [136..137]
 a93(r264): [136..137]
 a94(r263): [138..139]
 a95(r498): [140..141]
 a96(r262): [142..143]
 a97(r497): [144..145]
 a98(r261): [144..145]
 a99(r260): [146..147]
 a100(r496): [148..149]
 a101(r259): [150..151]
 a102(r495): [152..153]
 a103(r258): [152..153]
 a104(r257): [154..155]
 a105(r494): [156..157]
 a106(r256): [158..159]
 a107(r493): [160..161]
 a108(r255): [160..161]
 a109(r254): [162..163]
 a110(r492): [164..165]
 a111(r253): [166..167]
 a112(r491): [168..169]
 a113(r252): [168..169]
 a114(r251): [170..171]
 a115(r490): [172..173]
 a116(r250): [174..175]
 a117(r489): [176..177]
 a118(r249): [176..177]
 a119(r248): [178..179]
 a120(r488): [180..181]
 a121(r247): [182..183]
 a122(r487): [184..185]
 a123(r246): [184..185]
 a124(r245): [186..187]
 a125(r486): [188..189]
 a126(r244): [190..191]
 a127(r485): [192..193]
 a128(r243): [192..193]
 a129(r242): [194..195]
 a130(r484): [196..197]
 a131(r241): [198..199]
 a132(r483): [200..201]
 a133(r240): [200..201]
 a134(r239): [202..203]
 a135(r482): [204..205]
 a136(r238): [206..207]
 a137(r481): [208..209]
 a138(r237): [208..209]
 a139(r479): [214..215] [210..211]
 a140(r480): [212..213]
 a141(r236): [214..215]
 a142(r478): [216..217]
 a143(r235): [218..219]
 a144(r477): [220..221]
 a145(r234): [220..221]
 a146(r475): [226..227] [222..223]
 a147(r476): [224..225]
 a148(r233): [226..227]
 a149(r474): [228..229]
 a150(r232): [230..231]
 a151(r473): [232..233]
 a152(r231): [232..233]
 a153(r471): [238..239] [234..235]
 a154(r472): [236..237]
 a155(r230): [238..239]
 a156(r470): [240..241]
 a157(r229): [242..243]
 a158(r469): [244..245]
 a159(r228): [244..245]
 a160(r467): [250..251] [246..247]
 a161(r468): [248..249]
 a162(r227): [250..251]
 a163(r466): [252..253]
 a164(r226): [254..255]
 a165(r465): [256..257]
 a166(r225): [256..257]
 a167(r463): [262..263] [258..259]
 a168(r464): [260..261]
 a169(r224): [262..263]
 a170(r462): [264..265]
 a171(r223): [266..267]
 a172(r461): [266..267]
 a173(r460): [268..269]
 a174(r222): [268..269]
 a175(r458): [274..275] [270..271]
 a176(r459): [272..273]
 a177(r221): [274..275]
 a178(r457): [276..277]
 a179(r220): [278..279]
 a180(r456): [280..281]
 a181(r219): [280..281]
 a182(r454): [286..287] [282..283]
 a183(r455): [284..285]
 a184(r218): [286..287]
 a185(r453): [288..289]
 a186(r217): [290..291]
 a187(r452): [292..293]
 a188(r216): [292..293]
 a189(r450): [298..299] [294..295]
 a190(r451): [296..297]
 a191(r215): [298..299]
 a192(r449): [300..301]
 a193(r214): [302..303]
 a194(r448): [304..305]
 a195(r213): [304..305]
 a196(r446): [310..311] [306..307]
 a197(r447): [308..309]
 a198(r212): [310..311]
 a199(r445): [312..313]
 a200(r211): [314..315]
 a201(r444): [316..317]
 a202(r210): [316..317]
 a203(r442): [322..323] [318..319]
 a204(r443): [320..321]
 a205(r209): [322..323]
 a206(r441): [324..325]
 a207(r208): [326..327]
 a208(r440): [326..327]
 a209(r439): [328..329]
 a210(r207): [328..329]
 a211(r437): [334..335] [330..331]
 a212(r438): [332..333]
 a213(r206): [334..335]
 a214(r436): [336..337]
 a215(r205): [338..339]
 a216(r435): [340..341]
 a217(r204): [340..341]
 a218(r433): [346..347] [342..343]
 a219(r434): [344..345]
 a220(r203): [346..347]
 a221(r432): [348..349]
 a222(r202): [350..351]
 a223(r431): [352..353]
 a224(r201): [352..353]
 a225(r429): [358..359] [354..355]
 a226(r430): [356..357]
 a227(r200): [358..359]
 a228(r428): [360..361]
 a229(r199): [362..363]
 a230(r427): [364..365]
 a231(r198): [364..365]
 a232(r425): [370..371] [366..367]
 a233(r426): [368..369]
 a234(r197): [370..371]
 a235(r424): [372..373]
 a236(r196): [374..375]
 a237(r423): [376..377]
 a238(r195): [376..377]
 a239(r421): [382..383] [378..379]
 a240(r422): [380..381]
 a241(r194): [382..383]
 a242(r420): [384..385]
 a243(r193): [386..387]
 a244(r419): [388..389]
 a245(r192): [388..389]
 a246(r417): [394..395] [390..391]
 a247(r418): [392..393]
 a248(r191): [394..395]
 a249(r416): [396..397]
 a250(r190): [398..399]
 a251(r415): [398..399]
 a252(r414): [400..401]
 a253(r189): [400..401]
 a254(r412): [406..407] [402..403]
 a255(r413): [404..405]
 a256(r188): [406..407]
 a257(r411): [408..409]
 a258(r187): [410..411]
 a259(r410): [412..413]
 a260(r186): [412..413]
 a261(r408): [418..419] [414..415]
 a262(r409): [416..417]
 a263(r185): [418..419]
 a264(r407): [420..421]
 a265(r184): [422..423]
 a266(r183): [424..425]
 a267(r406): [426..427]
 a268(r182): [426..427]
 a269(r181): [428..429]
 a270(r405): [430..431]
 a271(r403): [690..691]
 a272(r180): [690..693]
 a273(r404): [692..693]
 a274(r402): [694..695]
 a275(r179): [694..695]
 a276(r178): [696..697]
 a277(r401): [698..699]
 a278(r177): [432..433]
 a279(r400): [434..435]
 a280(r176): [436..437]
 a281(r175): [438..439]
 a282(r399): [440..441]
 a283(r174): [440..441]
 a284(r173): [442..443]
 a285(r398): [444..445]
 a286(r396): [680..681]
 a287(r172): [680..683]
 a288(r397): [682..683]
 a289(r395): [684..685]
 a290(r171): [684..685]
 a291(r170): [686..687]
 a292(r394): [688..689]
 a293(r169): [446..447]
 a294(r393): [448..449]
 a295(r168): [450..451]
 a296(r167): [452..453]
 a297(r392): [454..455]
 a298(r166): [454..455]
 a299(r165): [456..457]
 a300(r391): [458..459]
 a301(r389): [670..671]
 a302(r164): [670..673]
 a303(r390): [672..673]
 a304(r388): [674..675]
 a305(r163): [674..675]
 a306(r162): [676..677]
 a307(r387): [678..679]
 a308(r161): [460..461]
 a309(r386): [462..463]
 a310(r160): [464..465]
 a311(r159): [466..467]
 a312(r385): [468..469]
 a313(r158): [468..469]
 a314(r157): [470..471]
 a315(r384): [472..473]
 a316(r382): [660..661]
 a317(r156): [660..663]
 a318(r383): [662..663]
 a319(r381): [664..665]
 a320(r155): [664..665]
 a321(r154): [666..667]
 a322(r380): [668..669]
 a323(r153): [474..475]
 a324(r379): [476..477]
 a325(r152): [478..479]
 a326(r151): [480..481]
 a327(r378): [482..483]
 a328(r150): [482..483]
 a329(r149): [484..485]
 a330(r377): [486..487]
 a331(r375): [650..651]
 a332(r148): [650..653]
 a333(r376): [652..653]
 a334(r374): [654..655]
 a335(r147): [654..655]
 a336(r146): [656..657]
 a337(r373): [658..659]
 a338(r145): [488..489]
 a339(r372): [490..491]
 a340(r370): [640..641]
 a341(r144): [640..643]
 a342(r371): [642..643]
 a343(r369): [644..645]
 a344(r143): [644..645]
 a345(r142): [646..647]
 a346(r368): [648..649]
 a347(r141): [492..493]
 a348(r367): [494..495]
 a349(r140): [496..497]
 a350(r366): [498..499]
 a351(r139): [498..499]
 a352(r138): [500..501]
 a353(r365): [502..503]
 a354(r137): [504..505]
 a355(r364): [504..505]
 a356(r363): [506..507]
 a357(r136): [506..507]
 a358(r135): [508..509]
 a359(r362): [510..511]
 a360(r134): [512..513]
 a361(r361): [512..513]
 a362(r360): [514..515]
 a363(r133): [514..515]
 a364(r132): [516..517]
 a365(r359): [518..519]
 a366(r131): [520..521]
 a367(r358): [520..521]
 a368(r357): [522..523]
 a369(r130): [522..523]
 a370(r129): [524..525]
 a371(r356): [526..527]
 a372(r128): [528..529]
 a373(r355): [528..529]
 a374(r354): [530..531]
 a375(r127): [530..531]
 a376(r126): [532..533]
 a377(r353): [534..535]
 a378(r125): [536..537]
 a379(r352): [536..537]
 a380(r351): [538..539]
 a381(r124): [538..539]
 a382(r123): [540..541]
 a383(r350): [542..543]
 a384(r122): [544..545]
 a385(r349): [544..545]
 a386(r348): [546..547]
 a387(r121): [546..547]
 a388(r120): [548..549]
 a389(r347): [550..551]
 a390(r119): [552..553]
 a391(r346): [552..553]
 a392(r345): [554..555]
 a393(r118): [554..555]
 a394(r117): [556..557]
 a395(r344): [558..559]
 a396(r116): [560..561]
 a397(r343): [560..561]
 a398(r342): [562..563]
 a399(r115): [562..563]
 a400(r114): [564..565]
 a401(r341): [566..567]
 a402(r113): [568..569]
 a403(r340): [568..569]
 a404(r339): [570..571]
 a405(r112): [570..571]
 a406(r111): [572..573]
 a407(r338): [574..575]
 a408(r110): [576..577]
 a409(r337): [576..577]
 a410(r336): [578..579]
 a411(r109): [578..579]
 a412(r108): [580..581]
 a413(r335): [582..583]
 a414(r107): [584..585]
 a415(r334): [584..585]
 a416(r333): [586..587]
 a417(r106): [586..587]
 a418(r105): [588..589]
 a419(r332): [590..591]
 a420(r104): [592..593]
 a421(r331): [592..593]
 a422(r330): [594..595]
 a423(r103): [594..595]
 a424(r102): [596..597]
 a425(r329): [598..599]
 a426(r101): [600..601]
 a427(r328): [600..601]
 a428(r327): [602..603]
 a429(r100): [602..603]
 a430(r99): [604..605]
 a431(r326): [606..607]
 a432(r98): [608..609]
 a433(r325): [610..611]
 a434(r97): [610..611]
 a435(r96): [612..613]
 a436(r324): [614..615]
 a437(r95): [616..617]
 a438(r323): [618..619]
 a439(r94): [618..619]
 a440(r93): [620..621]
 a441(r322): [622..623]
 a442(r92): [624..625]
 a443(r321): [624..625]
 a444(r320): [626..627]
 a445(r91): [626..627]
 a446(r90): [628..629]
 a447(r319): [630..631]
 a448(r89): [632..633]
 a449(r318): [632..633]
 a450(r317): [634..635]
 a451(r88): [634..635]
 a452(r87): [636..637]
 a453(r316): [638..639]
  regions=1, blocks=27, points=710
    allocnos=454 (big 0), copies=0, conflicts=0, ranges=472
Disposition:
  452:r87  l0     0  451:r88  l0     1  448:r89  l0     0  446:r90  l0     0
  445:r91  l0     1  442:r92  l0     0  440:r93  l0     0  439:r94  l0     1
  437:r95  l0     0  435:r96  l0     0  434:r97  l0     1  432:r98  l0     0
  430:r99  l0     0  429:r100 l0     1  426:r101 l0     0  424:r102 l0     0
  423:r103 l0     1  420:r104 l0     0  418:r105 l0     0  417:r106 l0     1
  414:r107 l0     0  412:r108 l0     0  411:r109 l0     1  408:r110 l0     0
  406:r111 l0     0  405:r112 l0     1  402:r113 l0     0  400:r114 l0     0
  399:r115 l0     1  396:r116 l0     0  394:r117 l0     0  393:r118 l0     1
  390:r119 l0     0  388:r120 l0     0  387:r121 l0     1  384:r122 l0     0
  382:r123 l0     0  381:r124 l0     1  378:r125 l0     0  376:r126 l0     0
  375:r127 l0     1  372:r128 l0     0  370:r129 l0     0  369:r130 l0     1
  366:r131 l0     0  364:r132 l0     0  363:r133 l0     1  360:r134 l0     0
  358:r135 l0     0  357:r136 l0     1  354:r137 l0     0  352:r138 l0     0
  351:r139 l0     1  349:r140 l0     0  347:r141 l0     0  345:r142 l0     0
  344:r143 l0     1  341:r144 l0     1  338:r145 l0     0  336:r146 l0     0
  335:r147 l0     1  332:r148 l0     1  329:r149 l0     0  328:r150 l0     1
  326:r151 l0     0  325:r152 l0     0  323:r153 l0     0  321:r154 l0     0
  320:r155 l0     1  317:r156 l0     1  314:r157 l0     0  313:r158 l0     1
  311:r159 l0     0  310:r160 l0     0  308:r161 l0     0  306:r162 l0     0
  305:r163 l0     1  302:r164 l0     1  299:r165 l0     0  298:r166 l0     1
  296:r167 l0     0  295:r168 l0     0  293:r169 l0     0  291:r170 l0     0
  290:r171 l0     1  287:r172 l0     1  284:r173 l0     0  283:r174 l0     1
  281:r175 l0     0  280:r176 l0     0  278:r177 l0     0  276:r178 l0     0
  275:r179 l0     1  272:r180 l0     1  269:r181 l0     0  268:r182 l0     1
  266:r183 l0     0  265:r184 l0     0  263:r185 l0     1  260:r186 l0     1
  258:r187 l0     0  256:r188 l0     1  253:r189 l0     1  250:r190 l0     0
  248:r191 l0     1  245:r192 l0     1  243:r193 l0     0  241:r194 l0     1
  238:r195 l0     1  236:r196 l0     0  234:r197 l0     1  231:r198 l0     1
  229:r199 l0     0  227:r200 l0     1  224:r201 l0     1  222:r202 l0     0
  220:r203 l0     1  217:r204 l0     1  215:r205 l0     0  213:r206 l0     1
  210:r207 l0     1  207:r208 l0     0  205:r209 l0     1  202:r210 l0     1
  200:r211 l0     0  198:r212 l0     1  195:r213 l0     1  193:r214 l0     0
  191:r215 l0     1  188:r216 l0     1  186:r217 l0     0  184:r218 l0     1
  181:r219 l0     1  179:r220 l0     0  177:r221 l0     1  174:r222 l0     1
  171:r223 l0     0  169:r224 l0     1  166:r225 l0     1  164:r226 l0     0
  162:r227 l0     1  159:r228 l0     1  157:r229 l0     0  155:r230 l0     1
  152:r231 l0     1  150:r232 l0     0  148:r233 l0     1  145:r234 l0     1
  143:r235 l0     0  141:r236 l0     1  138:r237 l0     1  136:r238 l0     0
  134:r239 l0     0  133:r240 l0     1  131:r241 l0     0  129:r242 l0     0
  128:r243 l0     1  126:r244 l0     0  124:r245 l0     0  123:r246 l0     1
  121:r247 l0     0  119:r248 l0     0  118:r249 l0     1  116:r250 l0     0
  114:r251 l0     0  113:r252 l0     1  111:r253 l0     0  109:r254 l0     0
  108:r255 l0     1  106:r256 l0     0  104:r257 l0     0  103:r258 l0     1
  101:r259 l0     0   99:r260 l0     0   98:r261 l0     1   96:r262 l0     0
   94:r263 l0     0   93:r264 l0     1   91:r265 l0     0   89:r266 l0     0
   88:r267 l0     1   86:r268 l0     0   84:r269 l0     0   83:r270 l0     1
   81:r271 l0     0   79:r272 l0     0   78:r273 l0     1   76:r274 l0     0
   74:r275 l0     0   73:r276 l0     1   71:r277 l0     0   69:r278 l0     0
   68:r279 l0     1   66:r280 l0     0   64:r281 l0     0   63:r282 l0     1
   60:r283 l0     0   58:r284 l0     0   57:r285 l0     1   54:r286 l0     0
   52:r287 l0     0   51:r288 l0     1   48:r289 l0     0   46:r290 l0     0
   45:r291 l0     1   42:r292 l0     0   40:r293 l0     0   39:r294 l0     1
   37:r295 l0     0   35:r296 l0     0   34:r297 l0     1   32:r298 l0     0
   30:r299 l0     0   29:r300 l0     1   27:r301 l0     0   25:r302 l0     0
   24:r303 l0     1   22:r304 l0     0   20:r305 l0     0   18:r306 l0     0
   17:r307 l0     1   14:r308 l0     1   12:r309 l0     0   10:r310 l0     0
    8:r311 l0     0    6:r312 l0     0    4:r313 l0     0    2:r314 l0     0
    0:r315 l0     0  453:r316 l0     0  450:r317 l0     0  449:r318 l0    21
  447:r319 l0     0  444:r320 l0     0  443:r321 l0    21  441:r322 l0     0
  438:r323 l0     0  436:r324 l0     0  433:r325 l0     0  431:r326 l0     0
  428:r327 l0     0  427:r328 l0    21  425:r329 l0     0  422:r330 l0     0
  421:r331 l0    21  419:r332 l0     0  416:r333 l0     0  415:r334 l0    21
  413:r335 l0     0  410:r336 l0     0  409:r337 l0    21  407:r338 l0     0
  404:r339 l0     0  403:r340 l0    21  401:r341 l0     0  398:r342 l0     0
  397:r343 l0    21  395:r344 l0     0  392:r345 l0     0  391:r346 l0    21
  389:r347 l0     0  386:r348 l0     0  385:r349 l0    21  383:r350 l0     0
  380:r351 l0     0  379:r352 l0    21  377:r353 l0     0  374:r354 l0     0
  373:r355 l0    21  371:r356 l0     0  368:r357 l0     0  367:r358 l0    21
  365:r359 l0     0  362:r360 l0     0  361:r361 l0    21  359:r362 l0     0
  356:r363 l0     0  355:r364 l0    21  353:r365 l0     0  350:r366 l0     0
  348:r367 l0     0  346:r368 l0     0  343:r369 l0     0  340:r370 l0     0
  342:r371 l0     0  339:r372 l0     0  337:r373 l0     0  334:r374 l0     0
  331:r375 l0     0  333:r376 l0     0  330:r377 l0     0  327:r378 l0     0
  324:r379 l0     0  322:r380 l0     0  319:r381 l0     0  316:r382 l0     0
  318:r383 l0     0  315:r384 l0     0  312:r385 l0     0  309:r386 l0     0
  307:r387 l0     0  304:r388 l0     0  301:r389 l0     0  303:r390 l0     0
  300:r391 l0     0  297:r392 l0     0  294:r393 l0     0  292:r394 l0     0
  289:r395 l0     0  286:r396 l0     0  288:r397 l0     0  285:r398 l0     0
  282:r399 l0     0  279:r400 l0     0  277:r401 l0     0  274:r402 l0     0
  271:r403 l0     0  273:r404 l0     0  270:r405 l0     0  267:r406 l0     0
  264:r407 l0     0  261:r408 l0     0  262:r409 l0     0  259:r410 l0     0
  257:r411 l0     0  254:r412 l0     0  255:r413 l0     0  252:r414 l0     0
  251:r415 l0    21  249:r416 l0     0  246:r417 l0     0  247:r418 l0     0
  244:r419 l0     0  242:r420 l0     0  239:r421 l0     0  240:r422 l0     0
  237:r423 l0     0  235:r424 l0     0  232:r425 l0     0  233:r426 l0     0
  230:r427 l0     0  228:r428 l0     0  225:r429 l0     0  226:r430 l0     0
  223:r431 l0     0  221:r432 l0     0  218:r433 l0     0  219:r434 l0     0
  216:r435 l0     0  214:r436 l0     0  211:r437 l0     0  212:r438 l0     0
  209:r439 l0     0  208:r440 l0    21  206:r441 l0     0  203:r442 l0     0
  204:r443 l0     0  201:r444 l0     0  199:r445 l0     0  196:r446 l0     0
  197:r447 l0     0  194:r448 l0     0  192:r449 l0     0  189:r450 l0     0
  190:r451 l0     0  187:r452 l0     0  185:r453 l0     0  182:r454 l0     0
  183:r455 l0     0  180:r456 l0     0  178:r457 l0     0  175:r458 l0     0
  176:r459 l0     0  173:r460 l0     0  172:r461 l0    21  170:r462 l0     0
  167:r463 l0     0  168:r464 l0     0  165:r465 l0     0  163:r466 l0     0
  160:r467 l0     0  161:r468 l0     0  158:r469 l0     0  156:r470 l0     0
  153:r471 l0     0  154:r472 l0     0  151:r473 l0     0  149:r474 l0     0
  146:r475 l0     0  147:r476 l0     0  144:r477 l0     0  142:r478 l0     0
  139:r479 l0     0  140:r480 l0     0  137:r481 l0     0  135:r482 l0     0
  132:r483 l0     0  130:r484 l0     0  127:r485 l0     0  125:r486 l0     0
  122:r487 l0     0  120:r488 l0     0  117:r489 l0     0  115:r490 l0     0
  112:r491 l0     0  110:r492 l0     0  107:r493 l0     0  105:r494 l0     0
  102:r495 l0     0  100:r496 l0     0   97:r497 l0     0   95:r498 l0     0
   92:r499 l0     0   90:r500 l0     0   87:r501 l0     0   85:r502 l0     0
   82:r503 l0     0   80:r504 l0     0   77:r505 l0     0   75:r506 l0     0
   72:r507 l0     0   70:r508 l0     0   67:r509 l0     0   65:r510 l0     0
   62:r511 l0     0   61:r512 l0    21   59:r513 l0     0   56:r514 l0     0
   55:r515 l0    21   53:r516 l0     0   50:r517 l0     0   49:r518 l0    21
   47:r519 l0     0   44:r520 l0     0   43:r521 l0    21   41:r522 l0     0
   38:r523 l0     0   36:r524 l0     0   33:r525 l0     0   31:r526 l0     0
   28:r527 l0     0   26:r528 l0     0   23:r529 l0     0   21:r530 l0     0
   19:r531 l0     0   16:r532 l0     0   13:r533 l0     0   15:r534 l0     0
   11:r535 l0     0    9:r536 l0     0    7:r537 l0     0    5:r538 l0     0
    3:r539 l0     0    1:r540 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void init(Data_file_header*, Data_block_header*, Procpar_info*, Preprocess*, IOFiles*, InFile_struct*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={1d} r1={1d,1u} r2={1d,1u} r4={1d,1u} r5={1d,1u} r6={1d,26u} r7={1d,26u} r16={1d,25u} r17={239d,8u} r20={1d,218u,76e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u,1e} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u,1e} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,1u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u} r124={1d,1u,1e} r125={1d,1u} r126={1d,1u} r127={1d,1u,1e} r128={1d,1u} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u,1e} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,1u,1e} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u,1e} r148={1d,1u} r149={1d,1u} r150={1d,1u,1e} r151={1d,1u} r152={1d,3u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1e} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r160={1d,4u} r161={1d,1u} r162={1d,1u} r163={1d,1u,1e} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,5u} r169={1d,1u} r170={1d,1u} r171={1d,1u,1e} r172={1d,1u} r173={1d,1u} r174={1d,1u,1e} r175={1d,1u} r176={1d,4u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1e} r180={1d,1u} r181={1d,1u} r182={1d,1u,1e} r183={1d,1u} r184={1d,5u} r185={1d,3u,2e} r186={1d,1u,1e} r187={1d,1u} r188={1d,3u,2e} r189={1d,1u,1e} r190={1d,1u} r191={1d,3u,2e} r192={1d,1u,1e} r193={1d,1u} r194={1d,3u,2e} r195={1d,1u,1e} r196={1d,1u} r197={1d,3u,2e} r198={1d,1u,1e} r199={1d,1u} r200={1d,3u,2e} r201={1d,1u,1e} r202={1d,1u} r203={1d,3u,2e} r204={1d,1u,1e} r205={1d,1u} r206={1d,3u,2e} r207={1d,1u,1e} r208={1d,1u} r209={1d,3u,2e} r210={1d,1u,1e} r211={1d,1u} r212={1d,3u,2e} r213={1d,1u,1e} r214={1d,1u} r215={1d,3u,2e} r216={1d,1u,1e} r217={1d,1u} r218={1d,3u,2e} r219={1d,1u,1e} r220={1d,1u} r221={1d,3u,2e} r222={1d,1u,1e} r223={1d,1u} r224={1d,3u,2e} r225={1d,1u,1e} r226={1d,1u} r227={1d,3u,2e} r228={1d,1u,1e} r229={1d,1u} r230={1d,3u,2e} r231={1d,1u,1e} r232={1d,1u} r233={1d,3u,2e} r234={1d,1u,1e} r235={1d,1u} r236={1d,3u,2e} r237={1d,1u,1e} r238={1d,1u} r239={1d,1u} r240={1d,1u,1e} r241={1d,1u} r242={1d,1u} r243={1d,1u,1e} r244={1d,1u} r245={1d,1u} r246={1d,1u,1e} r247={1d,1u} r248={1d,1u} r249={1d,1u,1e} r250={1d,1u} r251={1d,1u} r252={1d,1u,1e} r253={1d,1u} r254={1d,1u} r255={1d,1u,1e} r256={1d,1u} r257={1d,1u} r258={1d,1u,1e} r259={1d,1u} r260={1d,1u} r261={1d,1u,1e} r262={1d,1u} r263={1d,1u} r264={1d,1u,1e} r265={1d,1u} r266={1d,1u} r267={1d,1u,1e} r268={1d,1u} r269={1d,1u} r270={1d,1u,1e} r271={1d,1u} r272={1d,1u} r273={1d,1u,1e} r274={1d,1u} r275={1d,1u} r276={1d,1u,1e} r277={1d,1u} r278={1d,1u} r279={1d,1u,1e} r280={1d,1u} r281={1d,1u} r282={1d,1u,1e} r283={1d,1u} r284={1d,1u} r285={1d,1u,1e} r286={1d,1u} r287={1d,1u} r288={1d,1u,1e} r289={1d,1u} r290={1d,1u} r291={1d,1u,1e} r292={1d,1u} r293={1d,1u} r294={1d,1u,1e} r295={1d,1u} r296={1d,1u} r297={1d,1u,1e} r298={1d,1u} r299={1d,1u} r300={1d,1u,1e} r301={1d,1u} r302={1d,1u} r303={1d,1u,1e} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u,1e} r308={1d,1u} r309={1d,4u} r310={1d,4u} r311={1d,4u} r312={1d,4u} r313={1d,4u} r314={1d,4u} r315={1d,4u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={6d,6u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={6d,6u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={6d,6u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={6d,6u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={6d,6u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={6d,6u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={6d,6u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={6d,6u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={6d,6u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={6d,6u} r447={1d,1u} r448={1d,1u} r449={1d,1u} r450={6d,6u} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={6d,6u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={6d,6u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={6d,6u} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={6d,6u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r471={6d,6u} r472={1d,1u} r473={1d,1u} r474={1d,1u} r475={6d,6u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={6d,6u} r480={1d,1u} r481={1d,1u} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} r488={1d,1u} r489={1d,1u} r490={1d,1u} r491={1d,1u} r492={1d,1u} r493={1d,1u} r494={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u} r506={1d,1u} r507={1d,1u} r508={1d,1u} r509={1d,1u} r510={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u} r514={1d,1u} r515={1d,1u} r516={1d,1u} r517={1d,1u} r518={1d,1u} r519={1d,1u} r520={1d,1u} r521={1d,1u} r522={1d,1u} r523={1d,1u} r524={1d,1u} r525={1d,1u} r526={1d,1u} r527={1d,1u} r528={1d,1u} r529={1d,1u} r530={1d,1u} r531={1d,1u} r532={1d,1u} r533={1d,1u} r534={1d,1u} r535={1d,1u} r536={1d,1u} r537={1d,1u} r538={1d,1u} r539={1d,1u} r540={1d,1u} 
;;    total ref usage 1910{802d,926u,182e} in 705{705 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
        (reg:DI 5 di [ main_header ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ main_header ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
        (reg:DI 4 si [ block_header ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ block_header ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
        (reg:DI 37 r8 [ io_filenames ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ io_filenames ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
        (reg:DI 38 r9 [ infile_struct ])) sim2fitman_sup.cpp:256 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ infile_struct ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 711 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:260 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              25 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 711 11 12 3 71 "" [1 uses])
(note 12 711 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:260 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 714)
            (pc))) sim2fitman_sup.cpp:260 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 714)
;;  succ:       26
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:263 90 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 87 [ D.6528 ])
        (sign_extend:DI (reg:SI 316))) sim2fitman_sup.cpp:263 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 316)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 88 [ D.6528 ])
                (ashift:DI (reg:DI 87 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:263 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:263 89 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 89 [ D.6529 ])
                (plus:DI (reg:DI 88 [ D.6528 ])
                    (reg/f:DI 317)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:263 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (expr_list:REG_DEAD (reg:DI 88 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 88 [ D.6528 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg:SF 318)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:263 129 {*movsf_internal}
     (nil))
(insn 22 21 23 4 (set (mem/j:SF (reg/f:DI 89 [ D.6529 ]) [0 _22->acquision_time+0 S4 A64])
        (reg:SF 318)) sim2fitman_sup.cpp:263 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 318)
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.6529 ])
            (nil))))
(insn 23 22 24 4 (set (reg:SI 319)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:264 90 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 90 [ D.6528 ])
        (sign_extend:DI (reg:SI 319))) sim2fitman_sup.cpp:264 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 319)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 91 [ D.6528 ])
                (ashift:DI (reg:DI 90 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:264 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 90 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (set (reg/f:DI 320)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:264 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 92 [ D.6529 ])
                (plus:DI (reg:DI 91 [ D.6528 ])
                    (reg/f:DI 320)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:264 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 320)
        (expr_list:REG_DEAD (reg:DI 91 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 91 [ D.6528 ]))
                    (nil))))))
(insn 28 27 29 4 (set (reg:SF 321)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:264 129 {*movsf_internal}
     (nil))
(insn 29 28 30 4 (set (mem/j:SF (plus:DI (reg/f:DI 92 [ D.6529 ])
                (const_int 320 [0x140])) [0 _26->filter+0 S4 A64])
        (reg:SF 321)) sim2fitman_sup.cpp:264 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 321)
        (expr_list:REG_DEAD (reg/f:DI 92 [ D.6529 ])
            (nil))))
(insn 30 29 31 4 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:265 90 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 93 [ D.6528 ])
        (sign_extend:DI (reg:SI 322))) sim2fitman_sup.cpp:265 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 322)
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 94 [ D.6528 ])
                (ashift:DI (reg:DI 93 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:265 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 4 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:265 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 95 [ D.6529 ])
                (plus:DI (reg:DI 94 [ D.6528 ])
                    (reg/f:DI 323)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:265 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (expr_list:REG_DEAD (reg:DI 94 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 94 [ D.6528 ]))
                    (nil))))))
(insn 35 34 36 4 (set (mem/j:SI (plus:DI (reg/f:DI 95 [ D.6529 ])
                (const_int 324 [0x144])) [0 _30->num_transients+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:265 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6529 ])
        (nil)))
(insn 36 35 37 4 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:266 90 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 96 [ D.6528 ])
        (sign_extend:DI (reg:SI 324))) sim2fitman_sup.cpp:266 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 324)
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 97 [ D.6528 ])
                (ashift:DI (reg:DI 96 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:266 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 4 (set (reg/f:DI 325)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:266 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 98 [ D.6529 ])
                (plus:DI (reg:DI 97 [ D.6528 ])
                    (reg/f:DI 325)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:266 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 325)
        (expr_list:REG_DEAD (reg:DI 97 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 97 [ D.6528 ]))
                    (nil))))))
(insn 41 40 42 4 (set (mem/j:SI (plus:DI (reg/f:DI 98 [ D.6529 ])
                (const_int 328 [0x148])) [0 _34->num_points+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:266 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.6529 ])
        (nil)))
(insn 42 41 43 4 (set (reg:SI 326)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:267 90 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 99 [ D.6528 ])
        (sign_extend:DI (reg:SI 326))) sim2fitman_sup.cpp:267 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 326)
        (nil)))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 100 [ D.6528 ])
                (ashift:DI (reg:DI 99 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:267 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:267 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 101 [ D.6529 ])
                (plus:DI (reg:DI 100 [ D.6528 ])
                    (reg/f:DI 327)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:267 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 327)
        (expr_list:REG_DEAD (reg:DI 100 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 100 [ D.6528 ]))
                    (nil))))))
(insn 47 46 48 4 (set (reg:DF 328)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:267 128 {*movdf_internal}
     (nil))
(insn 48 47 49 4 (set (mem/j:DF (plus:DI (reg/f:DI 101 [ D.6529 ])
                (const_int 336 [0x150])) [0 _38->main_frequency+0 S8 A64])
        (reg:DF 328)) sim2fitman_sup.cpp:267 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 328)
        (expr_list:REG_DEAD (reg/f:DI 101 [ D.6529 ])
            (nil))))
(insn 49 48 50 4 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:268 90 {*movsi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:DI 102 [ D.6528 ])
        (sign_extend:DI (reg:SI 329))) sim2fitman_sup.cpp:268 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 329)
        (nil)))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 103 [ D.6528 ])
                (ashift:DI (reg:DI 102 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:268 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 102 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 52 51 53 4 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:268 89 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg/f:DI 104 [ D.6529 ])
                (plus:DI (reg:DI 103 [ D.6528 ])
                    (reg/f:DI 330)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:268 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 330)
        (expr_list:REG_DEAD (reg:DI 103 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 103 [ D.6528 ]))
                    (nil))))))
(insn 54 53 55 4 (set (reg:DF 331)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:268 128 {*movdf_internal}
     (nil))
(insn 55 54 56 4 (set (mem/j:DF (plus:DI (reg/f:DI 104 [ D.6529 ])
                (const_int 344 [0x158])) [0 _42->offset_frequency+0 S8 A64])
        (reg:DF 331)) sim2fitman_sup.cpp:268 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 331)
        (expr_list:REG_DEAD (reg/f:DI 104 [ D.6529 ])
            (nil))))
(insn 56 55 57 4 (set (reg:SI 332)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:269 90 {*movsi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:DI 105 [ D.6528 ])
        (sign_extend:DI (reg:SI 332))) sim2fitman_sup.cpp:269 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 332)
        (nil)))
(insn 58 57 59 4 (parallel [
            (set (reg:DI 106 [ D.6528 ])
                (ashift:DI (reg:DI 105 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:269 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 4 (set (reg/f:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:269 89 {*movdi_internal}
     (nil))
(insn 60 59 61 4 (parallel [
            (set (reg/f:DI 107 [ D.6529 ])
                (plus:DI (reg:DI 106 [ D.6528 ])
                    (reg/f:DI 333)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:269 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 333)
        (expr_list:REG_DEAD (reg:DI 106 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 106 [ D.6528 ]))
                    (nil))))))
(insn 61 60 62 4 (set (reg:SF 334)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:269 129 {*movsf_internal}
     (nil))
(insn 62 61 63 4 (set (mem/j:SF (plus:DI (reg/f:DI 107 [ D.6529 ])
                (const_int 352 [0x160])) [0 _46->te+0 S4 A64])
        (reg:SF 334)) sim2fitman_sup.cpp:269 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 334)
        (expr_list:REG_DEAD (reg/f:DI 107 [ D.6529 ])
            (nil))))
(insn 63 62 64 4 (set (reg:SI 335)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:270 90 {*movsi_internal}
     (nil))
(insn 64 63 65 4 (set (reg:DI 108 [ D.6528 ])
        (sign_extend:DI (reg:SI 335))) sim2fitman_sup.cpp:270 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 335)
        (nil)))
(insn 65 64 66 4 (parallel [
            (set (reg:DI 109 [ D.6528 ])
                (ashift:DI (reg:DI 108 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:270 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 4 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:270 89 {*movdi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg/f:DI 110 [ D.6529 ])
                (plus:DI (reg:DI 109 [ D.6528 ])
                    (reg/f:DI 336)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:270 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 336)
        (expr_list:REG_DEAD (reg:DI 109 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 109 [ D.6528 ]))
                    (nil))))))
(insn 68 67 69 4 (set (reg:SF 337)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:270 129 {*movsf_internal}
     (nil))
(insn 69 68 70 4 (set (mem/j:SF (plus:DI (reg/f:DI 110 [ D.6529 ])
                (const_int 356 [0x164])) [0 _50->tr+0 S4 A32])
        (reg:SF 337)) sim2fitman_sup.cpp:270 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 337)
        (expr_list:REG_DEAD (reg/f:DI 110 [ D.6529 ])
            (nil))))
(insn 70 69 71 4 (set (reg:SI 338)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:271 90 {*movsi_internal}
     (nil))
(insn 71 70 72 4 (set (reg:DI 111 [ D.6528 ])
        (sign_extend:DI (reg:SI 338))) sim2fitman_sup.cpp:271 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 338)
        (nil)))
(insn 72 71 73 4 (parallel [
            (set (reg:DI 112 [ D.6528 ])
                (ashift:DI (reg:DI 111 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:271 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 111 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 73 72 74 4 (set (reg/f:DI 339)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:271 89 {*movdi_internal}
     (nil))
(insn 74 73 75 4 (parallel [
            (set (reg/f:DI 113 [ D.6529 ])
                (plus:DI (reg:DI 112 [ D.6528 ])
                    (reg/f:DI 339)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:271 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 339)
        (expr_list:REG_DEAD (reg:DI 112 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 112 [ D.6528 ]))
                    (nil))))))
(insn 75 74 76 4 (set (reg:SF 340)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:271 129 {*movsf_internal}
     (nil))
(insn 76 75 77 4 (set (mem/j:SF (plus:DI (reg/f:DI 113 [ D.6529 ])
                (const_int 360 [0x168])) [0 _54->gain+0 S4 A64])
        (reg:SF 340)) sim2fitman_sup.cpp:271 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 340)
        (expr_list:REG_DEAD (reg/f:DI 113 [ D.6529 ])
            (nil))))
(insn 77 76 78 4 (set (reg:SI 341)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:272 90 {*movsi_internal}
     (nil))
(insn 78 77 79 4 (set (reg:DI 114 [ D.6528 ])
        (sign_extend:DI (reg:SI 341))) sim2fitman_sup.cpp:272 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 341)
        (nil)))
(insn 79 78 80 4 (parallel [
            (set (reg:DI 115 [ D.6528 ])
                (ashift:DI (reg:DI 114 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:272 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 4 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:272 89 {*movdi_internal}
     (nil))
(insn 81 80 82 4 (parallel [
            (set (reg/f:DI 116 [ D.6529 ])
                (plus:DI (reg:DI 115 [ D.6528 ])
                    (reg/f:DI 342)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:272 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 342)
        (expr_list:REG_DEAD (reg:DI 115 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 115 [ D.6528 ]))
                    (nil))))))
(insn 82 81 83 4 (set (reg:SF 343)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:272 129 {*movsf_internal}
     (nil))
(insn 83 82 84 4 (set (mem/j:SF (plus:DI (reg/f:DI 116 [ D.6529 ])
                (const_int 364 [0x16c])) [0 _58->pos1+0 S4 A32])
        (reg:SF 343)) sim2fitman_sup.cpp:272 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 343)
        (expr_list:REG_DEAD (reg/f:DI 116 [ D.6529 ])
            (nil))))
(insn 84 83 85 4 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:273 90 {*movsi_internal}
     (nil))
(insn 85 84 86 4 (set (reg:DI 117 [ D.6528 ])
        (sign_extend:DI (reg:SI 344))) sim2fitman_sup.cpp:273 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 344)
        (nil)))
(insn 86 85 87 4 (parallel [
            (set (reg:DI 118 [ D.6528 ])
                (ashift:DI (reg:DI 117 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:273 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 4 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:273 89 {*movdi_internal}
     (nil))
(insn 88 87 89 4 (parallel [
            (set (reg/f:DI 119 [ D.6529 ])
                (plus:DI (reg:DI 118 [ D.6528 ])
                    (reg/f:DI 345)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:273 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 345)
        (expr_list:REG_DEAD (reg:DI 118 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 118 [ D.6528 ]))
                    (nil))))))
(insn 89 88 90 4 (set (reg:SF 346)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:273 129 {*movsf_internal}
     (nil))
(insn 90 89 91 4 (set (mem/j:SF (plus:DI (reg/f:DI 119 [ D.6529 ])
                (const_int 368 [0x170])) [0 _62->pos2+0 S4 A64])
        (reg:SF 346)) sim2fitman_sup.cpp:273 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 346)
        (expr_list:REG_DEAD (reg/f:DI 119 [ D.6529 ])
            (nil))))
(insn 91 90 92 4 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:274 90 {*movsi_internal}
     (nil))
(insn 92 91 93 4 (set (reg:DI 120 [ D.6528 ])
        (sign_extend:DI (reg:SI 347))) sim2fitman_sup.cpp:274 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 347)
        (nil)))
(insn 93 92 94 4 (parallel [
            (set (reg:DI 121 [ D.6528 ])
                (ashift:DI (reg:DI 120 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:274 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 94 93 95 4 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:274 89 {*movdi_internal}
     (nil))
(insn 95 94 96 4 (parallel [
            (set (reg/f:DI 122 [ D.6529 ])
                (plus:DI (reg:DI 121 [ D.6528 ])
                    (reg/f:DI 348)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:274 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 348)
        (expr_list:REG_DEAD (reg:DI 121 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 121 [ D.6528 ]))
                    (nil))))))
(insn 96 95 97 4 (set (reg:SF 349)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:274 129 {*movsf_internal}
     (nil))
(insn 97 96 98 4 (set (mem/j:SF (plus:DI (reg/f:DI 122 [ D.6529 ])
                (const_int 372 [0x174])) [0 _66->pos3+0 S4 A32])
        (reg:SF 349)) sim2fitman_sup.cpp:274 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 349)
        (expr_list:REG_DEAD (reg/f:DI 122 [ D.6529 ])
            (nil))))
(insn 98 97 99 4 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:275 90 {*movsi_internal}
     (nil))
(insn 99 98 100 4 (set (reg:DI 123 [ D.6528 ])
        (sign_extend:DI (reg:SI 350))) sim2fitman_sup.cpp:275 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 350)
        (nil)))
(insn 100 99 101 4 (parallel [
            (set (reg:DI 124 [ D.6528 ])
                (ashift:DI (reg:DI 123 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:275 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 4 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:275 89 {*movdi_internal}
     (nil))
(insn 102 101 103 4 (parallel [
            (set (reg/f:DI 125 [ D.6529 ])
                (plus:DI (reg:DI 124 [ D.6528 ])
                    (reg/f:DI 351)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:275 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (expr_list:REG_DEAD (reg:DI 124 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 124 [ D.6528 ]))
                    (nil))))))
(insn 103 102 104 4 (set (reg:SF 352)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:275 129 {*movsf_internal}
     (nil))
(insn 104 103 105 4 (set (mem/j:SF (plus:DI (reg/f:DI 125 [ D.6529 ])
                (const_int 376 [0x178])) [0 _70->vox1+0 S4 A64])
        (reg:SF 352)) sim2fitman_sup.cpp:275 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 352)
        (expr_list:REG_DEAD (reg/f:DI 125 [ D.6529 ])
            (nil))))
(insn 105 104 106 4 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:276 90 {*movsi_internal}
     (nil))
(insn 106 105 107 4 (set (reg:DI 126 [ D.6528 ])
        (sign_extend:DI (reg:SI 353))) sim2fitman_sup.cpp:276 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 353)
        (nil)))
(insn 107 106 108 4 (parallel [
            (set (reg:DI 127 [ D.6528 ])
                (ashift:DI (reg:DI 126 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:276 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 4 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:276 89 {*movdi_internal}
     (nil))
(insn 109 108 110 4 (parallel [
            (set (reg/f:DI 128 [ D.6529 ])
                (plus:DI (reg:DI 127 [ D.6528 ])
                    (reg/f:DI 354)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:276 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_DEAD (reg:DI 127 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 127 [ D.6528 ]))
                    (nil))))))
(insn 110 109 111 4 (set (reg:SF 355)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:276 129 {*movsf_internal}
     (nil))
(insn 111 110 112 4 (set (mem/j:SF (plus:DI (reg/f:DI 128 [ D.6529 ])
                (const_int 380 [0x17c])) [0 _74->vox2+0 S4 A32])
        (reg:SF 355)) sim2fitman_sup.cpp:276 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 355)
        (expr_list:REG_DEAD (reg/f:DI 128 [ D.6529 ])
            (nil))))
(insn 112 111 113 4 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:277 90 {*movsi_internal}
     (nil))
(insn 113 112 114 4 (set (reg:DI 129 [ D.6528 ])
        (sign_extend:DI (reg:SI 356))) sim2fitman_sup.cpp:277 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 356)
        (nil)))
(insn 114 113 115 4 (parallel [
            (set (reg:DI 130 [ D.6528 ])
                (ashift:DI (reg:DI 129 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:277 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 4 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:277 89 {*movdi_internal}
     (nil))
(insn 116 115 117 4 (parallel [
            (set (reg/f:DI 131 [ D.6529 ])
                (plus:DI (reg:DI 130 [ D.6528 ])
                    (reg/f:DI 357)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:277 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (expr_list:REG_DEAD (reg:DI 130 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 130 [ D.6528 ]))
                    (nil))))))
(insn 117 116 118 4 (set (reg:SF 358)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:277 129 {*movsf_internal}
     (nil))
(insn 118 117 119 4 (set (mem/j:SF (plus:DI (reg/f:DI 131 [ D.6529 ])
                (const_int 384 [0x180])) [0 _78->vox3+0 S4 A64])
        (reg:SF 358)) sim2fitman_sup.cpp:277 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 358)
        (expr_list:REG_DEAD (reg/f:DI 131 [ D.6529 ])
            (nil))))
(insn 119 118 120 4 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:278 90 {*movsi_internal}
     (nil))
(insn 120 119 121 4 (set (reg:DI 132 [ D.6528 ])
        (sign_extend:DI (reg:SI 359))) sim2fitman_sup.cpp:278 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 359)
        (nil)))
(insn 121 120 122 4 (parallel [
            (set (reg:DI 133 [ D.6528 ])
                (ashift:DI (reg:DI 132 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:278 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 132 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 4 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:278 89 {*movdi_internal}
     (nil))
(insn 123 122 124 4 (parallel [
            (set (reg/f:DI 134 [ D.6529 ])
                (plus:DI (reg:DI 133 [ D.6528 ])
                    (reg/f:DI 360)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:278 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (expr_list:REG_DEAD (reg:DI 133 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 133 [ D.6528 ]))
                    (nil))))))
(insn 124 123 125 4 (set (reg:DF 361)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:278 128 {*movdf_internal}
     (nil))
(insn 125 124 126 4 (set (mem/j:DF (plus:DI (reg/f:DI 134 [ D.6529 ])
                (const_int 392 [0x188])) [0 _82->span+0 S8 A64])
        (reg:DF 361)) sim2fitman_sup.cpp:278 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 361)
        (expr_list:REG_DEAD (reg/f:DI 134 [ D.6529 ])
            (nil))))
(insn 126 125 127 4 (set (reg:SI 362)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:279 90 {*movsi_internal}
     (nil))
(insn 127 126 128 4 (set (reg:DI 135 [ D.6528 ])
        (sign_extend:DI (reg:SI 362))) sim2fitman_sup.cpp:279 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 362)
        (nil)))
(insn 128 127 129 4 (parallel [
            (set (reg:DI 136 [ D.6528 ])
                (ashift:DI (reg:DI 135 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:279 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 4 (set (reg/f:DI 363)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:279 89 {*movdi_internal}
     (nil))
(insn 130 129 131 4 (parallel [
            (set (reg/f:DI 137 [ D.6529 ])
                (plus:DI (reg:DI 136 [ D.6528 ])
                    (reg/f:DI 363)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:279 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 363)
        (expr_list:REG_DEAD (reg:DI 136 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 136 [ D.6528 ]))
                    (nil))))))
(insn 131 130 132 4 (set (reg:SF 364)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:279 129 {*movsf_internal}
     (nil))
(insn 132 131 133 4 (set (mem/j:SF (plus:DI (reg/f:DI 137 [ D.6529 ])
                (const_int 400 [0x190])) [0 _86->vtheta+0 S4 A64])
        (reg:SF 364)) sim2fitman_sup.cpp:279 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 364)
        (expr_list:REG_DEAD (reg/f:DI 137 [ D.6529 ])
            (nil))))
(insn 133 132 134 4 (set (reg:SI 365)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:280 90 {*movsi_internal}
     (nil))
(insn 134 133 135 4 (set (reg:DI 138 [ D.6528 ])
        (sign_extend:DI (reg:SI 365))) sim2fitman_sup.cpp:280 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 365)
        (nil)))
(insn 135 134 136 4 (parallel [
            (set (reg:DI 139 [ D.6528 ])
                (ashift:DI (reg:DI 138 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:280 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 138 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 4 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:280 89 {*movdi_internal}
     (nil))
(insn 137 136 138 4 (parallel [
            (set (reg/f:DI 140 [ D.6529 ])
                (plus:DI (reg:DI 139 [ D.6528 ])
                    (reg/f:DI 366)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:280 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 366)
        (expr_list:REG_DEAD (reg:DI 139 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 139 [ D.6528 ]))
                    (nil))))))
(insn 138 137 139 4 (set (mem/j:SI (plus:DI (reg/f:DI 140 [ D.6529 ])
                (const_int 508 [0x1fc])) [0 _90->nex+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:280 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ D.6529 ])
        (nil)))
(insn 139 138 155 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:285 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 367
(code_label 155 139 140 5 58 "" [1 uses])
(note 140 155 141 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 5 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:285 90 {*movsi_internal}
     (nil))
(insn 142 141 143 5 (set (reg:DI 141 [ D.6528 ])
        (sign_extend:DI (reg:SI 367))) sim2fitman_sup.cpp:285 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 367)
        (nil)))
(insn 143 142 144 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 141 [ D.6528 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:285 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6528 ])
        (nil)))
(jump_insn 144 143 145 5 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) sim2fitman_sup.cpp:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 158)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 142 143 144 368 369 370 371
(note 145 144 146 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 6 (set (reg:SI 368)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:286 90 {*movsi_internal}
     (nil))
(insn 147 146 148 6 (set (reg:DI 142 [ D.6528 ])
        (sign_extend:DI (reg:SI 368))) sim2fitman_sup.cpp:286 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 368)
        (nil)))
(insn 148 147 149 6 (parallel [
            (set (reg:DI 143 [ D.6528 ])
                (ashift:DI (reg:DI 142 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:286 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 6 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:286 89 {*movdi_internal}
     (nil))
(insn 150 149 151 6 (parallel [
            (set (reg/f:DI 144 [ D.6529 ])
                (plus:DI (reg:DI 143 [ D.6528 ])
                    (reg/f:DI 369)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:286 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 369)
        (expr_list:REG_DEAD (reg:DI 143 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 143 [ D.6528 ]))
                    (nil))))))
(insn 151 150 152 6 (set (reg:SI 371)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:286 90 {*movsi_internal}
     (nil))
(insn 152 151 153 6 (set (reg:DI 370)
        (sign_extend:DI (reg:SI 371))) sim2fitman_sup.cpp:286 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 371)
        (nil)))
(insn 153 152 154 6 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 144 [ D.6529 ])
                    (reg:DI 370))
                (const_int 388 [0x184])) [0 _96->padding_1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:286 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 370)
        (expr_list:REG_DEAD (reg/f:DI 144 [ D.6529 ])
            (nil))))
(insn 154 153 760 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:285 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 760 154 761 6 (set (pc)
        (label_ref 155)) sim2fitman_sup.cpp:285 654 {jump}
     (nil)
 -> 155)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 761 760 158)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 158 761 159 7 57 "" [1 uses])
(note 159 158 160 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 176 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:290 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              9 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 372
(code_label 176 160 161 8 60 "" [1 uses])
(note 161 176 162 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 8 (set (reg:SI 372)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:290 90 {*movsi_internal}
     (nil))
(insn 163 162 164 8 (set (reg:DI 145 [ D.6528 ])
        (sign_extend:DI (reg:SI 372))) sim2fitman_sup.cpp:290 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 372)
        (nil)))
(insn 164 163 165 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 145 [ D.6528 ])
            (const_int 52 [0x34]))) sim2fitman_sup.cpp:290 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 145 [ D.6528 ])
        (nil)))
(jump_insn 165 164 166 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) sim2fitman_sup.cpp:290 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 179)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 146 147 148 373 374 375 376
(note 166 165 167 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 9 (set (reg:SI 373)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:291 90 {*movsi_internal}
     (nil))
(insn 168 167 169 9 (set (reg:DI 146 [ D.6528 ])
        (sign_extend:DI (reg:SI 373))) sim2fitman_sup.cpp:291 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 373)
        (nil)))
(insn 169 168 170 9 (parallel [
            (set (reg:DI 147 [ D.6528 ])
                (ashift:DI (reg:DI 146 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:291 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 171 9 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:291 89 {*movdi_internal}
     (nil))
(insn 171 170 172 9 (parallel [
            (set (reg/f:DI 148 [ D.6529 ])
                (plus:DI (reg:DI 147 [ D.6528 ])
                    (reg/f:DI 374)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:291 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (expr_list:REG_DEAD (reg:DI 147 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 147 [ D.6528 ]))
                    (nil))))))
(insn 172 171 173 9 (set (reg:SI 376)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:291 90 {*movsi_internal}
     (nil))
(insn 173 172 174 9 (set (reg:DI 375)
        (sign_extend:DI (reg:SI 376))) sim2fitman_sup.cpp:291 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 376)
        (nil)))
(insn 174 173 175 9 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 148 [ D.6529 ])
                    (reg:DI 375))
                (const_int 8 [0x8])) [0 _103->ex_datetime S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:291 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 375)
        (expr_list:REG_DEAD (reg/f:DI 148 [ D.6529 ])
            (nil))))
(insn 175 174 762 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:290 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 762 175 763 9 (set (pc)
        (label_ref 176)) sim2fitman_sup.cpp:290 654 {jump}
     (nil)
 -> 176)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 763 762 179)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 150 151 152 377 378
(code_label 179 763 180 10 59 "" [1 uses])
(note 180 179 181 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 10 (set (reg:SI 377)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:293 90 {*movsi_internal}
     (nil))
(insn 182 181 183 10 (set (reg:DI 149 [ D.6528 ])
        (sign_extend:DI (reg:SI 377))) sim2fitman_sup.cpp:293 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 377)
        (nil)))
(insn 183 182 184 10 (parallel [
            (set (reg:DI 150 [ D.6528 ])
                (ashift:DI (reg:DI 149 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 10 (set (reg/f:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:293 89 {*movdi_internal}
     (nil))
(insn 185 184 186 10 (parallel [
            (set (reg/f:DI 151 [ D.6529 ])
                (plus:DI (reg:DI 150 [ D.6528 ])
                    (reg/f:DI 378)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 378)
        (expr_list:REG_DEAD (reg:DI 150 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 150 [ D.6528 ]))
                    (nil))))))
(insn 186 185 187 10 (parallel [
            (set (reg/f:DI 152 [ D.6530 ])
                (plus:DI (reg/f:DI 151 [ D.6529 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.6529 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 10 (set (mem:DI (reg/f:DI 152 [ D.6530 ]) [0 MEM[(void *)_109]+0 S8 A8])
        (const_int 2334399942965096270 [0x2065746144206f4e])) sim2fitman_sup.cpp:293 89 {*movdi_internal}
     (nil))
(insn 188 187 189 10 (set (mem:DI (plus:DI (reg/f:DI 152 [ D.6530 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_109]+8 S8 A8])
        (const_int 7809911822066218561 [0x6c62616c69617641])) sim2fitman_sup.cpp:293 89 {*movdi_internal}
     (nil))
(insn 189 188 190 10 (set (mem:HI (plus:DI (reg/f:DI 152 [ D.6530 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_109]+16 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:293 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.6530 ])
        (nil)))
(insn 190 189 206 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:296 90 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              12 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 379
(code_label 206 190 191 11 62 "" [1 uses])
(note 191 206 192 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 11 (set (reg:SI 379)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:296 90 {*movsi_internal}
     (nil))
(insn 193 192 194 11 (set (reg:DI 153 [ D.6528 ])
        (sign_extend:DI (reg:SI 379))) sim2fitman_sup.cpp:296 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 379)
        (nil)))
(insn 194 193 195 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 153 [ D.6528 ])
            (const_int 260 [0x104]))) sim2fitman_sup.cpp:296 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 153 [ D.6528 ])
        (nil)))
(jump_insn 195 194 196 11 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) sim2fitman_sup.cpp:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 209)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 154 155 156 380 381 382 383
(note 196 195 197 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 12 (set (reg:SI 380)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:297 90 {*movsi_internal}
     (nil))
(insn 198 197 199 12 (set (reg:DI 154 [ D.6528 ])
        (sign_extend:DI (reg:SI 380))) sim2fitman_sup.cpp:297 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 380)
        (nil)))
(insn 199 198 200 12 (parallel [
            (set (reg:DI 155 [ D.6528 ])
                (ashift:DI (reg:DI 154 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:297 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 12 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:297 89 {*movdi_internal}
     (nil))
(insn 201 200 202 12 (parallel [
            (set (reg/f:DI 156 [ D.6529 ])
                (plus:DI (reg:DI 155 [ D.6528 ])
                    (reg/f:DI 381)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:297 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 381)
        (expr_list:REG_DEAD (reg:DI 155 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 155 [ D.6528 ]))
                    (nil))))))
(insn 202 201 203 12 (set (reg:SI 383)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:297 90 {*movsi_internal}
     (nil))
(insn 203 202 204 12 (set (reg:DI 382)
        (sign_extend:DI (reg:SI 383))) sim2fitman_sup.cpp:297 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 383)
        (nil)))
(insn 204 203 205 12 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 156 [ D.6529 ])
                    (reg:DI 382))
                (const_int 60 [0x3c])) [0 _115->file_name S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:297 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 382)
        (expr_list:REG_DEAD (reg/f:DI 156 [ D.6529 ])
            (nil))))
(insn 205 204 764 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:296 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 764 205 765 12 (set (pc)
        (label_ref 206)) sim2fitman_sup.cpp:296 654 {jump}
     (nil)
 -> 206)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 765 764 209)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 157 158 159 160 384 385
(code_label 209 765 210 13 61 "" [1 uses])
(note 210 209 211 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 13 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:299 90 {*movsi_internal}
     (nil))
(insn 212 211 213 13 (set (reg:DI 157 [ D.6528 ])
        (sign_extend:DI (reg:SI 384))) sim2fitman_sup.cpp:299 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 384)
        (nil)))
(insn 213 212 214 13 (parallel [
            (set (reg:DI 158 [ D.6528 ])
                (ashift:DI (reg:DI 157 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 214 213 215 13 (set (reg/f:DI 385)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:299 89 {*movdi_internal}
     (nil))
(insn 215 214 216 13 (parallel [
            (set (reg/f:DI 159 [ D.6529 ])
                (plus:DI (reg:DI 158 [ D.6528 ])
                    (reg/f:DI 385)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 385)
        (expr_list:REG_DEAD (reg:DI 158 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 158 [ D.6528 ]))
                    (nil))))))
(insn 216 215 217 13 (parallel [
            (set (reg/f:DI 160 [ D.6531 ])
                (plus:DI (reg/f:DI 159 [ D.6529 ])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.6529 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 217 216 218 13 (set (mem:DI (reg/f:DI 160 [ D.6531 ]) [0 MEM[(void *)_121]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:299 89 {*movdi_internal}
     (nil))
(insn 218 217 219 13 (set (mem:DI (plus:DI (reg/f:DI 160 [ D.6531 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_121]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:299 89 {*movdi_internal}
     (nil))
(insn 219 218 220 13 (set (mem:SI (plus:DI (reg/f:DI 160 [ D.6531 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_121]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:299 90 {*movsi_internal}
     (nil))
(insn 220 219 221 13 (set (mem:HI (plus:DI (reg/f:DI 160 [ D.6531 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_121]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:299 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.6531 ])
        (nil)))
(insn 221 220 237 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:302 90 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              15 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161 386
(code_label 237 221 222 14 64 "" [1 uses])
(note 222 237 223 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 14 (set (reg:SI 386)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:302 90 {*movsi_internal}
     (nil))
(insn 224 223 225 14 (set (reg:DI 161 [ D.6528 ])
        (sign_extend:DI (reg:SI 386))) sim2fitman_sup.cpp:302 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 386)
        (nil)))
(insn 225 224 226 14 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 161 [ D.6528 ])
            (const_int 36 [0x24]))) sim2fitman_sup.cpp:302 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.6528 ])
        (nil)))
(jump_insn 226 225 227 14 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) sim2fitman_sup.cpp:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 240)
;;  succ:       16
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 163 164 387 388 389 390
(note 227 226 228 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 15 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:303 90 {*movsi_internal}
     (nil))
(insn 229 228 230 15 (set (reg:DI 162 [ D.6528 ])
        (sign_extend:DI (reg:SI 387))) sim2fitman_sup.cpp:303 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 387)
        (nil)))
(insn 230 229 231 15 (parallel [
            (set (reg:DI 163 [ D.6528 ])
                (ashift:DI (reg:DI 162 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:303 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 232 15 (set (reg/f:DI 388)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:303 89 {*movdi_internal}
     (nil))
(insn 232 231 233 15 (parallel [
            (set (reg/f:DI 164 [ D.6529 ])
                (plus:DI (reg:DI 163 [ D.6528 ])
                    (reg/f:DI 388)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:303 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 388)
        (expr_list:REG_DEAD (reg:DI 163 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 163 [ D.6528 ]))
                    (nil))))))
(insn 233 232 234 15 (set (reg:SI 390)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:303 90 {*movsi_internal}
     (nil))
(insn 234 233 235 15 (set (reg:DI 389)
        (sign_extend:DI (reg:SI 390))) sim2fitman_sup.cpp:303 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 390)
        (nil)))
(insn 235 234 236 15 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 164 [ D.6529 ])
                    (reg:DI 389))
                (const_int 404 [0x194])) [0 _127->hospname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:303 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 389)
        (expr_list:REG_DEAD (reg/f:DI 164 [ D.6529 ])
            (nil))))
(insn 236 235 766 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:302 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 766 236 767 15 (set (pc)
        (label_ref 237)) sim2fitman_sup.cpp:302 654 {jump}
     (nil)
 -> 237)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 767 766 240)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165 166 167 168 391 392
(code_label 240 767 241 16 63 "" [1 uses])
(note 241 240 242 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 16 (set (reg:SI 391)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:305 90 {*movsi_internal}
     (nil))
(insn 243 242 244 16 (set (reg:DI 165 [ D.6528 ])
        (sign_extend:DI (reg:SI 391))) sim2fitman_sup.cpp:305 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 391)
        (nil)))
(insn 244 243 245 16 (parallel [
            (set (reg:DI 166 [ D.6528 ])
                (ashift:DI (reg:DI 165 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 245 244 246 16 (set (reg/f:DI 392)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:305 89 {*movdi_internal}
     (nil))
(insn 246 245 247 16 (parallel [
            (set (reg/f:DI 167 [ D.6529 ])
                (plus:DI (reg:DI 166 [ D.6528 ])
                    (reg/f:DI 392)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 392)
        (expr_list:REG_DEAD (reg:DI 166 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 166 [ D.6528 ]))
                    (nil))))))
(insn 247 246 248 16 (parallel [
            (set (reg/f:DI 168 [ D.6532 ])
                (plus:DI (reg/f:DI 167 [ D.6529 ])
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.6529 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 16 (set (mem:DI (reg/f:DI 168 [ D.6532 ]) [0 MEM[(void *)_133]+0 S8 A8])
        (const_int 7597699493162676046 [0x6970736f48206f4e])) sim2fitman_sup.cpp:305 89 {*movdi_internal}
     (nil))
(insn 249 248 250 16 (set (mem:DI (plus:DI (reg/f:DI 168 [ D.6532 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_133]+8 S8 A8])
        (const_int 7308604758471500148 [0x656d614e206c6174])) sim2fitman_sup.cpp:305 89 {*movdi_internal}
     (nil))
(insn 250 249 251 16 (set (mem:DI (plus:DI (reg/f:DI 168 [ D.6532 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_133]+16 S8 A8])
        (const_int 7089066488320377120 [0x62616c6961764120])) sim2fitman_sup.cpp:305 89 {*movdi_internal}
     (nil))
(insn 251 250 252 16 (set (mem:HI (plus:DI (reg/f:DI 168 [ D.6532 ])
                (const_int 24 [0x18])) [0 MEM[(void *)_133]+24 S2 A8])
        (const_int 25964 [0x656c])) sim2fitman_sup.cpp:305 92 {*movhi_internal}
     (nil))
(insn 252 251 253 16 (set (mem:QI (plus:DI (reg/f:DI 168 [ D.6532 ])
                (const_int 26 [0x1a])) [0 MEM[(void *)_133]+26 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:305 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.6532 ])
        (nil)))
(insn 253 252 269 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:308 90 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              18 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 169 393
(code_label 269 253 254 17 66 "" [1 uses])
(note 254 269 255 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 17 (set (reg:SI 393)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:308 90 {*movsi_internal}
     (nil))
(insn 256 255 257 17 (set (reg:DI 169 [ D.6528 ])
        (sign_extend:DI (reg:SI 393))) sim2fitman_sup.cpp:308 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 393)
        (nil)))
(insn 257 256 258 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 169 [ D.6528 ])
            (const_int 28 [0x1c]))) sim2fitman_sup.cpp:308 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.6528 ])
        (nil)))
(jump_insn 258 257 259 17 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) sim2fitman_sup.cpp:308 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 272)
;;  succ:       19
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 170 171 172 394 395 396 397
(note 259 258 260 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 18 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:309 90 {*movsi_internal}
     (nil))
(insn 261 260 262 18 (set (reg:DI 170 [ D.6528 ])
        (sign_extend:DI (reg:SI 394))) sim2fitman_sup.cpp:309 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 394)
        (nil)))
(insn 262 261 263 18 (parallel [
            (set (reg:DI 171 [ D.6528 ])
                (ashift:DI (reg:DI 170 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:309 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 263 262 264 18 (set (reg/f:DI 395)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:309 89 {*movdi_internal}
     (nil))
(insn 264 263 265 18 (parallel [
            (set (reg/f:DI 172 [ D.6529 ])
                (plus:DI (reg:DI 171 [ D.6528 ])
                    (reg/f:DI 395)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:309 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (expr_list:REG_DEAD (reg:DI 171 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 171 [ D.6528 ]))
                    (nil))))))
(insn 265 264 266 18 (set (reg:SI 397)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:309 90 {*movsi_internal}
     (nil))
(insn 266 265 267 18 (set (reg:DI 396)
        (sign_extend:DI (reg:SI 397))) sim2fitman_sup.cpp:309 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 397)
        (nil)))
(insn 267 266 268 18 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 172 [ D.6529 ])
                    (reg:DI 396))
                (const_int 440 [0x1b8])) [0 _139->patname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:309 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 396)
        (expr_list:REG_DEAD (reg/f:DI 172 [ D.6529 ])
            (nil))))
(insn 268 267 768 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:308 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 768 268 769 18 (set (pc)
        (label_ref 269)) sim2fitman_sup.cpp:308 654 {jump}
     (nil)
 -> 269)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 769 768 272)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 173 174 175 176 398 399
(code_label 272 769 273 19 65 "" [1 uses])
(note 273 272 274 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 19 (set (reg:SI 398)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:311 90 {*movsi_internal}
     (nil))
(insn 275 274 276 19 (set (reg:DI 173 [ D.6528 ])
        (sign_extend:DI (reg:SI 398))) sim2fitman_sup.cpp:311 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 398)
        (nil)))
(insn 276 275 277 19 (parallel [
            (set (reg:DI 174 [ D.6528 ])
                (ashift:DI (reg:DI 173 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 277 276 278 19 (set (reg/f:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:311 89 {*movdi_internal}
     (nil))
(insn 278 277 279 19 (parallel [
            (set (reg/f:DI 175 [ D.6529 ])
                (plus:DI (reg:DI 174 [ D.6528 ])
                    (reg/f:DI 399)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 399)
        (expr_list:REG_DEAD (reg:DI 174 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 174 [ D.6528 ]))
                    (nil))))))
(insn 279 278 280 19 (parallel [
            (set (reg/f:DI 176 [ D.6533 ])
                (plus:DI (reg/f:DI 175 [ D.6529 ])
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.6529 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 280 279 281 19 (set (mem:DI (reg/f:DI 176 [ D.6533 ]) [0 MEM[(void *)_145]+0 S8 A8])
        (const_int 7307499831690293070 [0x6569746150206f4e])) sim2fitman_sup.cpp:311 89 {*movdi_internal}
     (nil))
(insn 281 280 282 19 (set (mem:DI (plus:DI (reg/f:DI 176 [ D.6533 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_145]+8 S8 A8])
        (const_int 2334392246551475310 [0x20656d614e20746e])) sim2fitman_sup.cpp:311 89 {*movdi_internal}
     (nil))
(insn 282 281 283 19 (set (mem:DI (plus:DI (reg/f:DI 176 [ D.6533 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_145]+16 S8 A8])
        (const_int 7809911822066218561 [0x6c62616c69617641])) sim2fitman_sup.cpp:311 89 {*movdi_internal}
     (nil))
(insn 283 282 284 19 (set (mem:HI (plus:DI (reg/f:DI 176 [ D.6533 ])
                (const_int 24 [0x18])) [0 MEM[(void *)_145]+24 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:311 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ D.6533 ])
        (nil)))
(insn 284 283 300 19 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:314 90 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              21 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177 400
(code_label 300 284 285 20 68 "" [1 uses])
(note 285 300 286 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 20 (set (reg:SI 400)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:314 90 {*movsi_internal}
     (nil))
(insn 287 286 288 20 (set (reg:DI 177 [ D.6528 ])
        (sign_extend:DI (reg:SI 400))) sim2fitman_sup.cpp:314 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 400)
        (nil)))
(insn 288 287 289 20 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 177 [ D.6528 ])
            (const_int 40 [0x28]))) sim2fitman_sup.cpp:314 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 177 [ D.6528 ])
        (nil)))
(jump_insn 289 288 290 20 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) sim2fitman_sup.cpp:314 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 303)
;;  succ:       22
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 178 179 180 401 402 403 404
(note 290 289 291 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 21 (set (reg:SI 401)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:315 90 {*movsi_internal}
     (nil))
(insn 292 291 293 21 (set (reg:DI 178 [ D.6528 ])
        (sign_extend:DI (reg:SI 401))) sim2fitman_sup.cpp:315 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 401)
        (nil)))
(insn 293 292 294 21 (parallel [
            (set (reg:DI 179 [ D.6528 ])
                (ashift:DI (reg:DI 178 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:315 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 294 293 295 21 (set (reg/f:DI 402)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:315 89 {*movdi_internal}
     (nil))
(insn 295 294 296 21 (parallel [
            (set (reg/f:DI 180 [ D.6529 ])
                (plus:DI (reg:DI 179 [ D.6528 ])
                    (reg/f:DI 402)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:315 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 402)
        (expr_list:REG_DEAD (reg:DI 179 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 179 [ D.6528 ]))
                    (nil))))))
(insn 296 295 297 21 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:315 90 {*movsi_internal}
     (nil))
(insn 297 296 298 21 (set (reg:DI 403)
        (sign_extend:DI (reg:SI 404))) sim2fitman_sup.cpp:315 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 404)
        (nil)))
(insn 298 297 299 21 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 180 [ D.6529 ])
                    (reg:DI 403))
                (const_int 468 [0x1d4])) [0 _151->psdname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:315 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 403)
        (expr_list:REG_DEAD (reg/f:DI 180 [ D.6529 ])
            (nil))))
(insn 299 298 770 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:314 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 770 299 771 21 (set (pc)
        (label_ref 300)) sim2fitman_sup.cpp:314 654 {jump}
     (nil)
 -> 300)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 771 770 303)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(code_label 303 771 304 22 67 "" [1 uses])
(note 304 303 305 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 22 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:317 90 {*movsi_internal}
     (nil))
(insn 306 305 307 22 (set (reg:DI 181 [ D.6528 ])
        (sign_extend:DI (reg:SI 405))) sim2fitman_sup.cpp:317 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 405)
        (nil)))
(insn 307 306 308 22 (parallel [
            (set (reg:DI 182 [ D.6528 ])
                (ashift:DI (reg:DI 181 [ D.6528 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 181 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 308 307 309 22 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:317 89 {*movdi_internal}
     (nil))
(insn 309 308 310 22 (parallel [
            (set (reg/f:DI 183 [ D.6529 ])
                (plus:DI (reg:DI 182 [ D.6528 ])
                    (reg/f:DI 406)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 406)
        (expr_list:REG_DEAD (reg:DI 182 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 182 [ D.6528 ]))
                    (nil))))))
(insn 310 309 311 22 (parallel [
            (set (reg/f:DI 184 [ D.6534 ])
                (plus:DI (reg/f:DI 183 [ D.6529 ])
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.6529 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 311 310 312 22 (set (mem:DI (reg/f:DI 184 [ D.6534 ]) [0 MEM[(void *)_157]+0 S8 A8])
        (const_int 7310305871263723342 [0x65736c7550206f4e])) sim2fitman_sup.cpp:317 89 {*movdi_internal}
     (nil))
(insn 312 311 313 22 (set (mem:DI (plus:DI (reg/f:DI 184 [ D.6534 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_157]+8 S8 A8])
        (const_int 7164775612281082656 [0x636e657571655320])) sim2fitman_sup.cpp:317 89 {*movdi_internal}
     (nil))
(insn 313 312 314 22 (set (mem:DI (plus:DI (reg/f:DI 184 [ D.6534 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_157]+16 S8 A8])
        (const_int 4692862332178407525 [0x4120656d614e2065])) sim2fitman_sup.cpp:317 89 {*movdi_internal}
     (nil))
(insn 314 313 315 22 (set (mem:DI (plus:DI (reg/f:DI 184 [ D.6534 ])
                (const_int 24 [0x18])) [0 MEM[(void *)_157]+24 S8 A8])
        (const_int 7308324465885667702 [0x656c62616c696176])) sim2fitman_sup.cpp:317 89 {*movdi_internal}
     (nil))
(insn 315 314 316 22 (set (mem:QI (plus:DI (reg/f:DI 184 [ D.6534 ])
                (const_int 32 [0x20])) [0 MEM[(void *)_157]+32 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:317 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184 [ D.6534 ])
        (nil)))
(insn 316 315 317 22 (set (reg:SI 407)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:321 90 {*movsi_internal}
     (nil))
(insn 317 316 318 22 (set (reg:DI 185 [ D.6528 ])
        (sign_extend:DI (reg:SI 407))) sim2fitman_sup.cpp:321 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 407)
        (nil)))
(insn 318 317 319 22 (set (reg:DI 408)
        (reg:DI 185 [ D.6528 ])) sim2fitman_sup.cpp:321 89 {*movdi_internal}
     (nil))
(insn 319 318 320 22 (parallel [
            (set (reg:DI 408)
                (ashift:DI (reg:DI 408)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 320 319 321 22 (parallel [
            (set (reg:DI 408)
                (plus:DI (reg:DI 408)
                    (reg:DI 185 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 321 320 322 22 (parallel [
            (set (reg:DI 408)
                (ashift:DI (reg:DI 408)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 322 321 323 22 (parallel [
            (set (reg:DI 408)
                (plus:DI (reg:DI 408)
                    (reg:DI 185 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 185 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 323 322 324 22 (parallel [
            (set (reg:DI 409)
                (ashift:DI (reg:DI 408)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 408)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 324 323 325 22 (set (reg:DI 408)
        (reg:DI 409)) sim2fitman_sup.cpp:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 409)
        (nil)))
(insn 325 324 326 22 (set (reg:DI 186 [ D.6528 ])
        (reg:DI 408)) sim2fitman_sup.cpp:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 408)
        (nil)))
(insn 326 325 327 22 (set (reg/f:DI 410)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:321 89 {*movdi_internal}
     (nil))
(insn 327 326 328 22 (parallel [
            (set (reg/f:DI 187 [ D.6535 ])
                (plus:DI (reg:DI 186 [ D.6528 ])
                    (reg/f:DI 410)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 410)
        (expr_list:REG_DEAD (reg:DI 186 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 186 [ D.6528 ]))
                    (nil))))))
(insn 328 327 329 22 (set (mem/j:SI (reg/f:DI 187 [ D.6535 ]) [0 _162->fid_scale+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.6535 ])
        (nil)))
(insn 329 328 330 22 (set (reg:SI 411)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:322 90 {*movsi_internal}
     (nil))
(insn 330 329 331 22 (set (reg:DI 188 [ D.6528 ])
        (sign_extend:DI (reg:SI 411))) sim2fitman_sup.cpp:322 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 411)
        (nil)))
(insn 331 330 332 22 (set (reg:DI 412)
        (reg:DI 188 [ D.6528 ])) sim2fitman_sup.cpp:322 89 {*movdi_internal}
     (nil))
(insn 332 331 333 22 (parallel [
            (set (reg:DI 412)
                (ashift:DI (reg:DI 412)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 333 332 334 22 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg:DI 412)
                    (reg:DI 188 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 188 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 334 333 335 22 (parallel [
            (set (reg:DI 412)
                (ashift:DI (reg:DI 412)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 335 334 336 22 (parallel [
            (set (reg:DI 412)
                (plus:DI (reg:DI 412)
                    (reg:DI 188 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 188 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 188 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 336 335 337 22 (parallel [
            (set (reg:DI 413)
                (ashift:DI (reg:DI 412)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 412)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 337 336 338 22 (set (reg:DI 412)
        (reg:DI 413)) sim2fitman_sup.cpp:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 413)
        (nil)))
(insn 338 337 339 22 (set (reg:DI 189 [ D.6528 ])
        (reg:DI 412)) sim2fitman_sup.cpp:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 412)
        (nil)))
(insn 339 338 340 22 (set (reg/f:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:322 89 {*movdi_internal}
     (nil))
(insn 340 339 341 22 (parallel [
            (set (reg/f:DI 190 [ D.6535 ])
                (plus:DI (reg:DI 189 [ D.6528 ])
                    (reg/f:DI 414)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 414)
        (expr_list:REG_DEAD (reg:DI 189 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 189 [ D.6528 ]))
                    (nil))))))
(insn 341 340 342 22 (set (reg:SF 415)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:322 129 {*movsf_internal}
     (nil))
(insn 342 341 343 22 (set (mem/j:SF (plus:DI (reg/f:DI 190 [ D.6535 ])
                (const_int 4 [0x4])) [0 _166->scale_factor+0 S4 A32])
        (reg:SF 415)) sim2fitman_sup.cpp:322 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 415)
        (expr_list:REG_DEAD (reg/f:DI 190 [ D.6535 ])
            (nil))))
(insn 343 342 344 22 (set (reg:SI 416)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:323 90 {*movsi_internal}
     (nil))
(insn 344 343 345 22 (set (reg:DI 191 [ D.6528 ])
        (sign_extend:DI (reg:SI 416))) sim2fitman_sup.cpp:323 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 416)
        (nil)))
(insn 345 344 346 22 (set (reg:DI 417)
        (reg:DI 191 [ D.6528 ])) sim2fitman_sup.cpp:323 89 {*movdi_internal}
     (nil))
(insn 346 345 347 22 (parallel [
            (set (reg:DI 417)
                (ashift:DI (reg:DI 417)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 347 346 348 22 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg:DI 417)
                    (reg:DI 191 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 191 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 348 347 349 22 (parallel [
            (set (reg:DI 417)
                (ashift:DI (reg:DI 417)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 349 348 350 22 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg:DI 417)
                    (reg:DI 191 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 191 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 350 349 351 22 (parallel [
            (set (reg:DI 418)
                (ashift:DI (reg:DI 417)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 417)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 351 350 352 22 (set (reg:DI 417)
        (reg:DI 418)) sim2fitman_sup.cpp:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 418)
        (nil)))
(insn 352 351 353 22 (set (reg:DI 192 [ D.6528 ])
        (reg:DI 417)) sim2fitman_sup.cpp:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 417)
        (nil)))
(insn 353 352 354 22 (set (reg/f:DI 419)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:323 89 {*movdi_internal}
     (nil))
(insn 354 353 355 22 (parallel [
            (set (reg/f:DI 193 [ D.6535 ])
                (plus:DI (reg:DI 192 [ D.6528 ])
                    (reg/f:DI 419)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 419)
        (expr_list:REG_DEAD (reg:DI 192 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 192 [ D.6528 ]))
                    (nil))))))
(insn 355 354 356 22 (set (mem/j:SI (plus:DI (reg/f:DI 193 [ D.6535 ])
                (const_int 8 [0x8])) [0 _170->scaleby+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:323 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193 [ D.6535 ])
        (nil)))
(insn 356 355 357 22 (set (reg:SI 420)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:324 90 {*movsi_internal}
     (nil))
(insn 357 356 358 22 (set (reg:DI 194 [ D.6528 ])
        (sign_extend:DI (reg:SI 420))) sim2fitman_sup.cpp:324 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 420)
        (nil)))
(insn 358 357 359 22 (set (reg:DI 421)
        (reg:DI 194 [ D.6528 ])) sim2fitman_sup.cpp:324 89 {*movdi_internal}
     (nil))
(insn 359 358 360 22 (parallel [
            (set (reg:DI 421)
                (ashift:DI (reg:DI 421)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 360 359 361 22 (parallel [
            (set (reg:DI 421)
                (plus:DI (reg:DI 421)
                    (reg:DI 194 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 194 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 361 360 362 22 (parallel [
            (set (reg:DI 421)
                (ashift:DI (reg:DI 421)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 362 361 363 22 (parallel [
            (set (reg:DI 421)
                (plus:DI (reg:DI 421)
                    (reg:DI 194 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 194 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 194 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 363 362 364 22 (parallel [
            (set (reg:DI 422)
                (ashift:DI (reg:DI 421)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 421)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 364 363 365 22 (set (reg:DI 421)
        (reg:DI 422)) sim2fitman_sup.cpp:324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 422)
        (nil)))
(insn 365 364 366 22 (set (reg:DI 195 [ D.6528 ])
        (reg:DI 421)) sim2fitman_sup.cpp:324 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 421)
        (nil)))
(insn 366 365 367 22 (set (reg/f:DI 423)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:324 89 {*movdi_internal}
     (nil))
(insn 367 366 368 22 (parallel [
            (set (reg/f:DI 196 [ D.6535 ])
                (plus:DI (reg:DI 195 [ D.6528 ])
                    (reg/f:DI 423)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 423)
        (expr_list:REG_DEAD (reg:DI 195 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 195 [ D.6528 ]))
                    (nil))))))
(insn 368 367 369 22 (set (mem/j:SI (plus:DI (reg/f:DI 196 [ D.6535 ])
                (const_int 12 [0xc])) [0 _174->pre_ecc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:324 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 196 [ D.6535 ])
        (nil)))
(insn 369 368 370 22 (set (reg:SI 424)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:325 90 {*movsi_internal}
     (nil))
(insn 370 369 371 22 (set (reg:DI 197 [ D.6528 ])
        (sign_extend:DI (reg:SI 424))) sim2fitman_sup.cpp:325 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 424)
        (nil)))
(insn 371 370 372 22 (set (reg:DI 425)
        (reg:DI 197 [ D.6528 ])) sim2fitman_sup.cpp:325 89 {*movdi_internal}
     (nil))
(insn 372 371 373 22 (parallel [
            (set (reg:DI 425)
                (ashift:DI (reg:DI 425)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 373 372 374 22 (parallel [
            (set (reg:DI 425)
                (plus:DI (reg:DI 425)
                    (reg:DI 197 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 374 373 375 22 (parallel [
            (set (reg:DI 425)
                (ashift:DI (reg:DI 425)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 375 374 376 22 (parallel [
            (set (reg:DI 425)
                (plus:DI (reg:DI 425)
                    (reg:DI 197 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 197 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 197 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 376 375 377 22 (parallel [
            (set (reg:DI 426)
                (ashift:DI (reg:DI 425)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 425)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 377 376 378 22 (set (reg:DI 425)
        (reg:DI 426)) sim2fitman_sup.cpp:325 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 426)
        (nil)))
(insn 378 377 379 22 (set (reg:DI 198 [ D.6528 ])
        (reg:DI 425)) sim2fitman_sup.cpp:325 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 425)
        (nil)))
(insn 379 378 380 22 (set (reg/f:DI 427)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:325 89 {*movdi_internal}
     (nil))
(insn 380 379 381 22 (parallel [
            (set (reg/f:DI 199 [ D.6535 ])
                (plus:DI (reg:DI 198 [ D.6528 ])
                    (reg/f:DI 427)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 427)
        (expr_list:REG_DEAD (reg:DI 198 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 198 [ D.6528 ]))
                    (nil))))))
(insn 381 380 382 22 (set (mem/j:SI (plus:DI (reg/f:DI 199 [ D.6535 ])
                (const_int 16 [0x10])) [0 _178->bc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:325 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ D.6535 ])
        (nil)))
(insn 382 381 383 22 (set (reg:SI 428)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:326 90 {*movsi_internal}
     (nil))
(insn 383 382 384 22 (set (reg:DI 200 [ D.6528 ])
        (sign_extend:DI (reg:SI 428))) sim2fitman_sup.cpp:326 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 428)
        (nil)))
(insn 384 383 385 22 (set (reg:DI 429)
        (reg:DI 200 [ D.6528 ])) sim2fitman_sup.cpp:326 89 {*movdi_internal}
     (nil))
(insn 385 384 386 22 (parallel [
            (set (reg:DI 429)
                (ashift:DI (reg:DI 429)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 386 385 387 22 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg:DI 429)
                    (reg:DI 200 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 200 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 387 386 388 22 (parallel [
            (set (reg:DI 429)
                (ashift:DI (reg:DI 429)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 388 387 389 22 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg:DI 429)
                    (reg:DI 200 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 200 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 200 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 389 388 390 22 (parallel [
            (set (reg:DI 430)
                (ashift:DI (reg:DI 429)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 429)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 390 389 391 22 (set (reg:DI 429)
        (reg:DI 430)) sim2fitman_sup.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 430)
        (nil)))
(insn 391 390 392 22 (set (reg:DI 201 [ D.6528 ])
        (reg:DI 429)) sim2fitman_sup.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 429)
        (nil)))
(insn 392 391 393 22 (set (reg/f:DI 431)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:326 89 {*movdi_internal}
     (nil))
(insn 393 392 394 22 (parallel [
            (set (reg/f:DI 202 [ D.6535 ])
                (plus:DI (reg:DI 201 [ D.6528 ])
                    (reg/f:DI 431)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 431)
        (expr_list:REG_DEAD (reg:DI 201 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 201 [ D.6528 ]))
                    (nil))))))
(insn 394 393 395 22 (set (mem/j:SI (plus:DI (reg/f:DI 202 [ D.6535 ])
                (const_int 20 [0x14])) [0 _182->file_type+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:326 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202 [ D.6535 ])
        (nil)))
(insn 395 394 396 22 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:327 90 {*movsi_internal}
     (nil))
(insn 396 395 397 22 (set (reg:DI 203 [ D.6528 ])
        (sign_extend:DI (reg:SI 432))) sim2fitman_sup.cpp:327 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 432)
        (nil)))
(insn 397 396 398 22 (set (reg:DI 433)
        (reg:DI 203 [ D.6528 ])) sim2fitman_sup.cpp:327 89 {*movdi_internal}
     (nil))
(insn 398 397 399 22 (parallel [
            (set (reg:DI 433)
                (ashift:DI (reg:DI 433)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 399 398 400 22 (parallel [
            (set (reg:DI 433)
                (plus:DI (reg:DI 433)
                    (reg:DI 203 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 203 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 400 399 401 22 (parallel [
            (set (reg:DI 433)
                (ashift:DI (reg:DI 433)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 401 400 402 22 (parallel [
            (set (reg:DI 433)
                (plus:DI (reg:DI 433)
                    (reg:DI 203 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 203 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 402 401 403 22 (parallel [
            (set (reg:DI 434)
                (ashift:DI (reg:DI 433)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 433)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 403 402 404 22 (set (reg:DI 433)
        (reg:DI 434)) sim2fitman_sup.cpp:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 434)
        (nil)))
(insn 404 403 405 22 (set (reg:DI 204 [ D.6528 ])
        (reg:DI 433)) sim2fitman_sup.cpp:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 433)
        (nil)))
(insn 405 404 406 22 (set (reg/f:DI 435)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:327 89 {*movdi_internal}
     (nil))
(insn 406 405 407 22 (parallel [
            (set (reg/f:DI 205 [ D.6535 ])
                (plus:DI (reg:DI 204 [ D.6528 ])
                    (reg/f:DI 435)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 435)
        (expr_list:REG_DEAD (reg:DI 204 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 204 [ D.6528 ]))
                    (nil))))))
(insn 407 406 408 22 (set (mem/j:SI (plus:DI (reg/f:DI 205 [ D.6535 ])
                (const_int 24 [0x18])) [0 _186->data_zero_fill+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:327 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 205 [ D.6535 ])
        (nil)))
(insn 408 407 409 22 (set (reg:SI 436)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:328 90 {*movsi_internal}
     (nil))
(insn 409 408 410 22 (set (reg:DI 206 [ D.6528 ])
        (sign_extend:DI (reg:SI 436))) sim2fitman_sup.cpp:328 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 436)
        (nil)))
(insn 410 409 411 22 (set (reg:DI 437)
        (reg:DI 206 [ D.6528 ])) sim2fitman_sup.cpp:328 89 {*movdi_internal}
     (nil))
(insn 411 410 412 22 (parallel [
            (set (reg:DI 437)
                (ashift:DI (reg:DI 437)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 412 411 413 22 (parallel [
            (set (reg:DI 437)
                (plus:DI (reg:DI 437)
                    (reg:DI 206 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 206 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 413 412 414 22 (parallel [
            (set (reg:DI 437)
                (ashift:DI (reg:DI 437)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 414 413 415 22 (parallel [
            (set (reg:DI 437)
                (plus:DI (reg:DI 437)
                    (reg:DI 206 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 206 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 206 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 415 414 416 22 (parallel [
            (set (reg:DI 438)
                (ashift:DI (reg:DI 437)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 437)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 416 415 417 22 (set (reg:DI 437)
        (reg:DI 438)) sim2fitman_sup.cpp:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 438)
        (nil)))
(insn 417 416 418 22 (set (reg:DI 207 [ D.6528 ])
        (reg:DI 437)) sim2fitman_sup.cpp:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 437)
        (nil)))
(insn 418 417 419 22 (set (reg/f:DI 439)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:328 89 {*movdi_internal}
     (nil))
(insn 419 418 420 22 (parallel [
            (set (reg/f:DI 208 [ D.6535 ])
                (plus:DI (reg:DI 207 [ D.6528 ])
                    (reg/f:DI 439)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 439)
        (expr_list:REG_DEAD (reg:DI 207 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 207 [ D.6528 ]))
                    (nil))))))
(insn 420 419 421 22 (set (reg:SF 440)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:328 129 {*movsf_internal}
     (nil))
(insn 421 420 422 22 (set (mem/j:SF (plus:DI (reg/f:DI 208 [ D.6535 ])
                (const_int 28 [0x1c])) [0 _190->comp_filter+0 S4 A32])
        (reg:SF 440)) sim2fitman_sup.cpp:328 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 440)
        (expr_list:REG_DEAD (reg/f:DI 208 [ D.6535 ])
            (nil))))
(insn 422 421 423 22 (set (reg:SI 441)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:329 90 {*movsi_internal}
     (nil))
(insn 423 422 424 22 (set (reg:DI 209 [ D.6528 ])
        (sign_extend:DI (reg:SI 441))) sim2fitman_sup.cpp:329 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 441)
        (nil)))
(insn 424 423 425 22 (set (reg:DI 442)
        (reg:DI 209 [ D.6528 ])) sim2fitman_sup.cpp:329 89 {*movdi_internal}
     (nil))
(insn 425 424 426 22 (parallel [
            (set (reg:DI 442)
                (ashift:DI (reg:DI 442)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 426 425 427 22 (parallel [
            (set (reg:DI 442)
                (plus:DI (reg:DI 442)
                    (reg:DI 209 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 209 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 427 426 428 22 (parallel [
            (set (reg:DI 442)
                (ashift:DI (reg:DI 442)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 428 427 429 22 (parallel [
            (set (reg:DI 442)
                (plus:DI (reg:DI 442)
                    (reg:DI 209 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 209 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 209 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 429 428 430 22 (parallel [
            (set (reg:DI 443)
                (ashift:DI (reg:DI 442)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 442)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 430 429 431 22 (set (reg:DI 442)
        (reg:DI 443)) sim2fitman_sup.cpp:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 443)
        (nil)))
(insn 431 430 432 22 (set (reg:DI 210 [ D.6528 ])
        (reg:DI 442)) sim2fitman_sup.cpp:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 442)
        (nil)))
(insn 432 431 433 22 (set (reg/f:DI 444)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:329 89 {*movdi_internal}
     (nil))
(insn 433 432 434 22 (parallel [
            (set (reg/f:DI 211 [ D.6535 ])
                (plus:DI (reg:DI 210 [ D.6528 ])
                    (reg/f:DI 444)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 444)
        (expr_list:REG_DEAD (reg:DI 210 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 210 [ D.6528 ]))
                    (nil))))))
(insn 434 433 435 22 (set (mem/j:SI (plus:DI (reg/f:DI 211 [ D.6535 ])
                (const_int 32 [0x20])) [0 _194->max_normalize+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:329 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 211 [ D.6535 ])
        (nil)))
(insn 435 434 436 22 (set (reg:SI 445)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:330 90 {*movsi_internal}
     (nil))
(insn 436 435 437 22 (set (reg:DI 212 [ D.6528 ])
        (sign_extend:DI (reg:SI 445))) sim2fitman_sup.cpp:330 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 445)
        (nil)))
(insn 437 436 438 22 (set (reg:DI 446)
        (reg:DI 212 [ D.6528 ])) sim2fitman_sup.cpp:330 89 {*movdi_internal}
     (nil))
(insn 438 437 439 22 (parallel [
            (set (reg:DI 446)
                (ashift:DI (reg:DI 446)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 439 438 440 22 (parallel [
            (set (reg:DI 446)
                (plus:DI (reg:DI 446)
                    (reg:DI 212 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 440 439 441 22 (parallel [
            (set (reg:DI 446)
                (ashift:DI (reg:DI 446)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 441 440 442 22 (parallel [
            (set (reg:DI 446)
                (plus:DI (reg:DI 446)
                    (reg:DI 212 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 212 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 212 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 442 441 443 22 (parallel [
            (set (reg:DI 447)
                (ashift:DI (reg:DI 446)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 446)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 443 442 444 22 (set (reg:DI 446)
        (reg:DI 447)) sim2fitman_sup.cpp:330 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 447)
        (nil)))
(insn 444 443 445 22 (set (reg:DI 213 [ D.6528 ])
        (reg:DI 446)) sim2fitman_sup.cpp:330 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 446)
        (nil)))
(insn 445 444 446 22 (set (reg/f:DI 448)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:330 89 {*movdi_internal}
     (nil))
(insn 446 445 447 22 (parallel [
            (set (reg/f:DI 214 [ D.6535 ])
                (plus:DI (reg:DI 213 [ D.6528 ])
                    (reg/f:DI 448)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 448)
        (expr_list:REG_DEAD (reg:DI 213 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 213 [ D.6528 ]))
                    (nil))))))
(insn 447 446 448 22 (set (mem/j:SI (plus:DI (reg/f:DI 214 [ D.6535 ])
                (const_int 36 [0x24])) [0 _198->pre_quality+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:330 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214 [ D.6535 ])
        (nil)))
(insn 448 447 449 22 (set (reg:SI 449)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:331 90 {*movsi_internal}
     (nil))
(insn 449 448 450 22 (set (reg:DI 215 [ D.6528 ])
        (sign_extend:DI (reg:SI 449))) sim2fitman_sup.cpp:331 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 449)
        (nil)))
(insn 450 449 451 22 (set (reg:DI 450)
        (reg:DI 215 [ D.6528 ])) sim2fitman_sup.cpp:331 89 {*movdi_internal}
     (nil))
(insn 451 450 452 22 (parallel [
            (set (reg:DI 450)
                (ashift:DI (reg:DI 450)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 452 451 453 22 (parallel [
            (set (reg:DI 450)
                (plus:DI (reg:DI 450)
                    (reg:DI 215 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 215 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 453 452 454 22 (parallel [
            (set (reg:DI 450)
                (ashift:DI (reg:DI 450)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 454 453 455 22 (parallel [
            (set (reg:DI 450)
                (plus:DI (reg:DI 450)
                    (reg:DI 215 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 215 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 215 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 455 454 456 22 (parallel [
            (set (reg:DI 451)
                (ashift:DI (reg:DI 450)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 450)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 456 455 457 22 (set (reg:DI 450)
        (reg:DI 451)) sim2fitman_sup.cpp:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 451)
        (nil)))
(insn 457 456 458 22 (set (reg:DI 216 [ D.6528 ])
        (reg:DI 450)) sim2fitman_sup.cpp:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 450)
        (nil)))
(insn 458 457 459 22 (set (reg/f:DI 452)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:331 89 {*movdi_internal}
     (nil))
(insn 459 458 460 22 (parallel [
            (set (reg/f:DI 217 [ D.6535 ])
                (plus:DI (reg:DI 216 [ D.6528 ])
                    (reg/f:DI 452)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 452)
        (expr_list:REG_DEAD (reg:DI 216 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 216 [ D.6528 ]))
                    (nil))))))
(insn 460 459 461 22 (set (mem/j:SI (plus:DI (reg/f:DI 217 [ D.6535 ])
                (const_int 40 [0x28])) [0 _202->pre_quecc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ D.6535 ])
        (nil)))
(insn 461 460 462 22 (set (reg:SI 453)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:332 90 {*movsi_internal}
     (nil))
(insn 462 461 463 22 (set (reg:DI 218 [ D.6528 ])
        (sign_extend:DI (reg:SI 453))) sim2fitman_sup.cpp:332 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 453)
        (nil)))
(insn 463 462 464 22 (set (reg:DI 454)
        (reg:DI 218 [ D.6528 ])) sim2fitman_sup.cpp:332 89 {*movdi_internal}
     (nil))
(insn 464 463 465 22 (parallel [
            (set (reg:DI 454)
                (ashift:DI (reg:DI 454)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 465 464 466 22 (parallel [
            (set (reg:DI 454)
                (plus:DI (reg:DI 454)
                    (reg:DI 218 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 218 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 466 465 467 22 (parallel [
            (set (reg:DI 454)
                (ashift:DI (reg:DI 454)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 467 466 468 22 (parallel [
            (set (reg:DI 454)
                (plus:DI (reg:DI 454)
                    (reg:DI 218 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 218 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 218 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 468 467 469 22 (parallel [
            (set (reg:DI 455)
                (ashift:DI (reg:DI 454)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 454)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 469 468 470 22 (set (reg:DI 454)
        (reg:DI 455)) sim2fitman_sup.cpp:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 455)
        (nil)))
(insn 470 469 471 22 (set (reg:DI 219 [ D.6528 ])
        (reg:DI 454)) sim2fitman_sup.cpp:332 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 454)
        (nil)))
(insn 471 470 472 22 (set (reg/f:DI 456)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:332 89 {*movdi_internal}
     (nil))
(insn 472 471 473 22 (parallel [
            (set (reg/f:DI 220 [ D.6535 ])
                (plus:DI (reg:DI 219 [ D.6528 ])
                    (reg/f:DI 456)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 456)
        (expr_list:REG_DEAD (reg:DI 219 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 219 [ D.6528 ]))
                    (nil))))))
(insn 473 472 474 22 (set (mem/j:SI (plus:DI (reg/f:DI 220 [ D.6535 ])
                (const_int 44 [0x2c])) [0 _206->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:332 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.6535 ])
        (nil)))
(insn 474 473 475 22 (set (reg:SI 457)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:333 90 {*movsi_internal}
     (nil))
(insn 475 474 476 22 (set (reg:DI 221 [ D.6528 ])
        (sign_extend:DI (reg:SI 457))) sim2fitman_sup.cpp:333 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 457)
        (nil)))
(insn 476 475 477 22 (set (reg:DI 458)
        (reg:DI 221 [ D.6528 ])) sim2fitman_sup.cpp:333 89 {*movdi_internal}
     (nil))
(insn 477 476 478 22 (parallel [
            (set (reg:DI 458)
                (ashift:DI (reg:DI 458)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 478 477 479 22 (parallel [
            (set (reg:DI 458)
                (plus:DI (reg:DI 458)
                    (reg:DI 221 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 221 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 479 478 480 22 (parallel [
            (set (reg:DI 458)
                (ashift:DI (reg:DI 458)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 480 479 481 22 (parallel [
            (set (reg:DI 458)
                (plus:DI (reg:DI 458)
                    (reg:DI 221 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 221 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 221 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 481 480 482 22 (parallel [
            (set (reg:DI 459)
                (ashift:DI (reg:DI 458)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 458)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 482 481 483 22 (set (reg:DI 458)
        (reg:DI 459)) sim2fitman_sup.cpp:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 459)
        (nil)))
(insn 483 482 484 22 (set (reg:DI 222 [ D.6528 ])
        (reg:DI 458)) sim2fitman_sup.cpp:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 458)
        (nil)))
(insn 484 483 485 22 (set (reg/f:DI 460)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:333 89 {*movdi_internal}
     (nil))
(insn 485 484 486 22 (parallel [
            (set (reg/f:DI 223 [ D.6535 ])
                (plus:DI (reg:DI 222 [ D.6528 ])
                    (reg/f:DI 460)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 460)
        (expr_list:REG_DEAD (reg:DI 222 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 222 [ D.6528 ]))
                    (nil))))))
(insn 486 485 487 22 (set (reg:SF 461)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:333 129 {*movsf_internal}
     (nil))
(insn 487 486 488 22 (set (mem/j:SF (plus:DI (reg/f:DI 223 [ D.6535 ])
                (const_int 48 [0x30])) [0 _210->pre_delay_time+0 S4 A32])
        (reg:SF 461)) sim2fitman_sup.cpp:333 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 461)
        (expr_list:REG_DEAD (reg/f:DI 223 [ D.6535 ])
            (nil))))
(insn 488 487 489 22 (set (reg:SI 462)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:334 90 {*movsi_internal}
     (nil))
(insn 489 488 490 22 (set (reg:DI 224 [ D.6528 ])
        (sign_extend:DI (reg:SI 462))) sim2fitman_sup.cpp:334 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 462)
        (nil)))
(insn 490 489 491 22 (set (reg:DI 463)
        (reg:DI 224 [ D.6528 ])) sim2fitman_sup.cpp:334 89 {*movdi_internal}
     (nil))
(insn 491 490 492 22 (parallel [
            (set (reg:DI 463)
                (ashift:DI (reg:DI 463)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 492 491 493 22 (parallel [
            (set (reg:DI 463)
                (plus:DI (reg:DI 463)
                    (reg:DI 224 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 224 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 493 492 494 22 (parallel [
            (set (reg:DI 463)
                (ashift:DI (reg:DI 463)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 494 493 495 22 (parallel [
            (set (reg:DI 463)
                (plus:DI (reg:DI 463)
                    (reg:DI 224 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 224 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 224 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 495 494 496 22 (parallel [
            (set (reg:DI 464)
                (ashift:DI (reg:DI 463)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 463)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 496 495 497 22 (set (reg:DI 463)
        (reg:DI 464)) sim2fitman_sup.cpp:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 464)
        (nil)))
(insn 497 496 498 22 (set (reg:DI 225 [ D.6528 ])
        (reg:DI 463)) sim2fitman_sup.cpp:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 463)
        (nil)))
(insn 498 497 499 22 (set (reg/f:DI 465)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:334 89 {*movdi_internal}
     (nil))
(insn 499 498 500 22 (parallel [
            (set (reg/f:DI 226 [ D.6535 ])
                (plus:DI (reg:DI 225 [ D.6528 ])
                    (reg/f:DI 465)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 465)
        (expr_list:REG_DEAD (reg:DI 225 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 225 [ D.6528 ]))
                    (nil))))))
(insn 500 499 501 22 (set (mem/j:SI (plus:DI (reg/f:DI 226 [ D.6535 ])
                (const_int 52 [0x34])) [0 _214->pre_quecc_if+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:334 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.6535 ])
        (nil)))
(insn 501 500 502 22 (set (reg:SI 466)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:335 90 {*movsi_internal}
     (nil))
(insn 502 501 503 22 (set (reg:DI 227 [ D.6528 ])
        (sign_extend:DI (reg:SI 466))) sim2fitman_sup.cpp:335 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 466)
        (nil)))
(insn 503 502 504 22 (set (reg:DI 467)
        (reg:DI 227 [ D.6528 ])) sim2fitman_sup.cpp:335 89 {*movdi_internal}
     (nil))
(insn 504 503 505 22 (parallel [
            (set (reg:DI 467)
                (ashift:DI (reg:DI 467)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 505 504 506 22 (parallel [
            (set (reg:DI 467)
                (plus:DI (reg:DI 467)
                    (reg:DI 227 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 506 505 507 22 (parallel [
            (set (reg:DI 467)
                (ashift:DI (reg:DI 467)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 507 506 508 22 (parallel [
            (set (reg:DI 467)
                (plus:DI (reg:DI 467)
                    (reg:DI 227 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 227 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 227 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 508 507 509 22 (parallel [
            (set (reg:DI 468)
                (ashift:DI (reg:DI 467)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 467)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 509 508 510 22 (set (reg:DI 467)
        (reg:DI 468)) sim2fitman_sup.cpp:335 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 468)
        (nil)))
(insn 510 509 511 22 (set (reg:DI 228 [ D.6528 ])
        (reg:DI 467)) sim2fitman_sup.cpp:335 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 467)
        (nil)))
(insn 511 510 512 22 (set (reg/f:DI 469)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:335 89 {*movdi_internal}
     (nil))
(insn 512 511 513 22 (parallel [
            (set (reg/f:DI 229 [ D.6535 ])
                (plus:DI (reg:DI 228 [ D.6528 ])
                    (reg/f:DI 469)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 469)
        (expr_list:REG_DEAD (reg:DI 228 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 228 [ D.6528 ]))
                    (nil))))))
(insn 513 512 514 22 (set (mem/j:SI (plus:DI (reg/f:DI 229 [ D.6535 ])
                (const_int 56 [0x38])) [0 _218->input_file_type+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:335 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 229 [ D.6535 ])
        (nil)))
(insn 514 513 515 22 (set (reg:SI 470)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:336 90 {*movsi_internal}
     (nil))
(insn 515 514 516 22 (set (reg:DI 230 [ D.6528 ])
        (sign_extend:DI (reg:SI 470))) sim2fitman_sup.cpp:336 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 470)
        (nil)))
(insn 516 515 517 22 (set (reg:DI 471)
        (reg:DI 230 [ D.6528 ])) sim2fitman_sup.cpp:336 89 {*movdi_internal}
     (nil))
(insn 517 516 518 22 (parallel [
            (set (reg:DI 471)
                (ashift:DI (reg:DI 471)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 518 517 519 22 (parallel [
            (set (reg:DI 471)
                (plus:DI (reg:DI 471)
                    (reg:DI 230 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 519 518 520 22 (parallel [
            (set (reg:DI 471)
                (ashift:DI (reg:DI 471)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 520 519 521 22 (parallel [
            (set (reg:DI 471)
                (plus:DI (reg:DI 471)
                    (reg:DI 230 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 230 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 230 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 521 520 522 22 (parallel [
            (set (reg:DI 472)
                (ashift:DI (reg:DI 471)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 471)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 522 521 523 22 (set (reg:DI 471)
        (reg:DI 472)) sim2fitman_sup.cpp:336 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 472)
        (nil)))
(insn 523 522 524 22 (set (reg:DI 231 [ D.6528 ])
        (reg:DI 471)) sim2fitman_sup.cpp:336 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 471)
        (nil)))
(insn 524 523 525 22 (set (reg/f:DI 473)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:336 89 {*movdi_internal}
     (nil))
(insn 525 524 526 22 (parallel [
            (set (reg/f:DI 232 [ D.6535 ])
                (plus:DI (reg:DI 231 [ D.6528 ])
                    (reg/f:DI 473)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 473)
        (expr_list:REG_DEAD (reg:DI 231 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 231 [ D.6528 ]))
                    (nil))))))
(insn 526 525 527 22 (set (mem/j:SI (plus:DI (reg/f:DI 232 [ D.6535 ])
                (const_int 60 [0x3c])) [0 _222->ref_file_argument+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:336 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.6535 ])
        (nil)))
(insn 527 526 528 22 (set (reg:SI 474)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:337 90 {*movsi_internal}
     (nil))
(insn 528 527 529 22 (set (reg:DI 233 [ D.6528 ])
        (sign_extend:DI (reg:SI 474))) sim2fitman_sup.cpp:337 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 474)
        (nil)))
(insn 529 528 530 22 (set (reg:DI 475)
        (reg:DI 233 [ D.6528 ])) sim2fitman_sup.cpp:337 89 {*movdi_internal}
     (nil))
(insn 530 529 531 22 (parallel [
            (set (reg:DI 475)
                (ashift:DI (reg:DI 475)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 531 530 532 22 (parallel [
            (set (reg:DI 475)
                (plus:DI (reg:DI 475)
                    (reg:DI 233 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 233 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 532 531 533 22 (parallel [
            (set (reg:DI 475)
                (ashift:DI (reg:DI 475)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 533 532 534 22 (parallel [
            (set (reg:DI 475)
                (plus:DI (reg:DI 475)
                    (reg:DI 233 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 233 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 233 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 534 533 535 22 (parallel [
            (set (reg:DI 476)
                (ashift:DI (reg:DI 475)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 475)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 535 534 536 22 (set (reg:DI 475)
        (reg:DI 476)) sim2fitman_sup.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 476)
        (nil)))
(insn 536 535 537 22 (set (reg:DI 234 [ D.6528 ])
        (reg:DI 475)) sim2fitman_sup.cpp:337 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 475)
        (nil)))
(insn 537 536 538 22 (set (reg/f:DI 477)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:337 89 {*movdi_internal}
     (nil))
(insn 538 537 539 22 (parallel [
            (set (reg/f:DI 235 [ D.6535 ])
                (plus:DI (reg:DI 234 [ D.6528 ])
                    (reg/f:DI 477)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 477)
        (expr_list:REG_DEAD (reg:DI 234 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 234 [ D.6528 ]))
                    (nil))))))
(insn 539 538 540 22 (set (mem/j:SI (plus:DI (reg/f:DI 235 [ D.6535 ])
                (const_int 64 [0x40])) [0 _226->csi_reorder+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:337 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 235 [ D.6535 ])
        (nil)))
(insn 540 539 541 22 (set (reg:SI 478)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:338 90 {*movsi_internal}
     (nil))
(insn 541 540 542 22 (set (reg:DI 236 [ D.6528 ])
        (sign_extend:DI (reg:SI 478))) sim2fitman_sup.cpp:338 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 478)
        (nil)))
(insn 542 541 543 22 (set (reg:DI 479)
        (reg:DI 236 [ D.6528 ])) sim2fitman_sup.cpp:338 89 {*movdi_internal}
     (nil))
(insn 543 542 544 22 (parallel [
            (set (reg:DI 479)
                (ashift:DI (reg:DI 479)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 544 543 545 22 (parallel [
            (set (reg:DI 479)
                (plus:DI (reg:DI 479)
                    (reg:DI 236 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.6528 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 545 544 546 22 (parallel [
            (set (reg:DI 479)
                (ashift:DI (reg:DI 479)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 546 545 547 22 (parallel [
            (set (reg:DI 479)
                (plus:DI (reg:DI 479)
                    (reg:DI 236 [ D.6528 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 236 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 236 [ D.6528 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 547 546 548 22 (parallel [
            (set (reg:DI 480)
                (ashift:DI (reg:DI 479)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 479)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 548 547 549 22 (set (reg:DI 479)
        (reg:DI 480)) sim2fitman_sup.cpp:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 480)
        (nil)))
(insn 549 548 550 22 (set (reg:DI 237 [ D.6528 ])
        (reg:DI 479)) sim2fitman_sup.cpp:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 479)
        (nil)))
(insn 550 549 551 22 (set (reg/f:DI 481)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:338 89 {*movdi_internal}
     (nil))
(insn 551 550 552 22 (parallel [
            (set (reg/f:DI 238 [ D.6535 ])
                (plus:DI (reg:DI 237 [ D.6528 ])
                    (reg/f:DI 481)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 481)
        (expr_list:REG_DEAD (reg:DI 237 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 237 [ D.6528 ]))
                    (nil))))))
(insn 552 551 553 22 (set (mem/j:SI (plus:DI (reg/f:DI 238 [ D.6535 ])
                (const_int 68 [0x44])) [0 _230->tilt+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:338 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.6535 ])
        (nil)))
(insn 553 552 554 22 (set (reg:SI 482)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:341 90 {*movsi_internal}
     (nil))
(insn 554 553 555 22 (set (reg:DI 239 [ D.6528 ])
        (sign_extend:DI (reg:SI 482))) sim2fitman_sup.cpp:341 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 482)
        (nil)))
(insn 555 554 556 22 (parallel [
            (set (reg:DI 240 [ D.6528 ])
                (ashift:DI (reg:DI 239 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:341 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 239 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 556 555 557 22 (set (reg/f:DI 483)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:341 89 {*movdi_internal}
     (nil))
(insn 557 556 558 22 (parallel [
            (set (reg/f:DI 241 [ D.6536 ])
                (plus:DI (reg:DI 240 [ D.6528 ])
                    (reg/f:DI 483)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 483)
        (expr_list:REG_DEAD (reg:DI 240 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 240 [ D.6528 ]))
                    (nil))))))
(insn 558 557 559 22 (set (mem/j:DI (reg/f:DI 241 [ D.6536 ]) [0 _235->nblocks.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 241 [ D.6536 ])
        (nil)))
(insn 559 558 560 22 (set (reg:SI 484)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:342 90 {*movsi_internal}
     (nil))
(insn 560 559 561 22 (set (reg:DI 242 [ D.6528 ])
        (sign_extend:DI (reg:SI 484))) sim2fitman_sup.cpp:342 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 484)
        (nil)))
(insn 561 560 562 22 (parallel [
            (set (reg:DI 243 [ D.6528 ])
                (ashift:DI (reg:DI 242 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:342 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 242 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 562 561 563 22 (set (reg/f:DI 485)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:342 89 {*movdi_internal}
     (nil))
(insn 563 562 564 22 (parallel [
            (set (reg/f:DI 244 [ D.6536 ])
                (plus:DI (reg:DI 243 [ D.6528 ])
                    (reg/f:DI 485)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:342 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 485)
        (expr_list:REG_DEAD (reg:DI 243 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 243 [ D.6528 ]))
                    (nil))))))
(insn 564 563 565 22 (set (mem/j:DI (plus:DI (reg/f:DI 244 [ D.6536 ])
                (const_int 8 [0x8])) [0 _239->ntraces.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:342 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 244 [ D.6536 ])
        (nil)))
(insn 565 564 566 22 (set (reg:SI 486)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:343 90 {*movsi_internal}
     (nil))
(insn 566 565 567 22 (set (reg:DI 245 [ D.6528 ])
        (sign_extend:DI (reg:SI 486))) sim2fitman_sup.cpp:343 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 486)
        (nil)))
(insn 567 566 568 22 (parallel [
            (set (reg:DI 246 [ D.6528 ])
                (ashift:DI (reg:DI 245 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:343 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 245 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 568 567 569 22 (set (reg/f:DI 487)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:343 89 {*movdi_internal}
     (nil))
(insn 569 568 570 22 (parallel [
            (set (reg/f:DI 247 [ D.6536 ])
                (plus:DI (reg:DI 246 [ D.6528 ])
                    (reg/f:DI 487)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:343 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 487)
        (expr_list:REG_DEAD (reg:DI 246 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 246 [ D.6528 ]))
                    (nil))))))
(insn 570 569 571 22 (set (mem/j:DI (plus:DI (reg/f:DI 247 [ D.6536 ])
                (const_int 16 [0x10])) [0 _243->np.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:343 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 247 [ D.6536 ])
        (nil)))
(insn 571 570 572 22 (set (reg:SI 488)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:344 90 {*movsi_internal}
     (nil))
(insn 572 571 573 22 (set (reg:DI 248 [ D.6528 ])
        (sign_extend:DI (reg:SI 488))) sim2fitman_sup.cpp:344 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 488)
        (nil)))
(insn 573 572 574 22 (parallel [
            (set (reg:DI 249 [ D.6528 ])
                (ashift:DI (reg:DI 248 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:344 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 248 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 574 573 575 22 (set (reg/f:DI 489)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:344 89 {*movdi_internal}
     (nil))
(insn 575 574 576 22 (parallel [
            (set (reg/f:DI 250 [ D.6536 ])
                (plus:DI (reg:DI 249 [ D.6528 ])
                    (reg/f:DI 489)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:344 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 489)
        (expr_list:REG_DEAD (reg:DI 249 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 249 [ D.6528 ]))
                    (nil))))))
(insn 576 575 577 22 (set (mem/j:DI (plus:DI (reg/f:DI 250 [ D.6536 ])
                (const_int 24 [0x18])) [0 _247->ebytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:344 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 250 [ D.6536 ])
        (nil)))
(insn 577 576 578 22 (set (reg:SI 490)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:345 90 {*movsi_internal}
     (nil))
(insn 578 577 579 22 (set (reg:DI 251 [ D.6528 ])
        (sign_extend:DI (reg:SI 490))) sim2fitman_sup.cpp:345 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 490)
        (nil)))
(insn 579 578 580 22 (parallel [
            (set (reg:DI 252 [ D.6528 ])
                (ashift:DI (reg:DI 251 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:345 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 251 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 580 579 581 22 (set (reg/f:DI 491)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:345 89 {*movdi_internal}
     (nil))
(insn 581 580 582 22 (parallel [
            (set (reg/f:DI 253 [ D.6536 ])
                (plus:DI (reg:DI 252 [ D.6528 ])
                    (reg/f:DI 491)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:345 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 491)
        (expr_list:REG_DEAD (reg:DI 252 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 252 [ D.6528 ]))
                    (nil))))))
(insn 582 581 583 22 (set (mem/j:DI (plus:DI (reg/f:DI 253 [ D.6536 ])
                (const_int 32 [0x20])) [0 _251->tbytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.6536 ])
        (nil)))
(insn 583 582 584 22 (set (reg:SI 492)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:346 90 {*movsi_internal}
     (nil))
(insn 584 583 585 22 (set (reg:DI 254 [ D.6528 ])
        (sign_extend:DI (reg:SI 492))) sim2fitman_sup.cpp:346 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 492)
        (nil)))
(insn 585 584 586 22 (parallel [
            (set (reg:DI 255 [ D.6528 ])
                (ashift:DI (reg:DI 254 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:346 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 254 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 586 585 587 22 (set (reg/f:DI 493)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:346 89 {*movdi_internal}
     (nil))
(insn 587 586 588 22 (parallel [
            (set (reg/f:DI 256 [ D.6536 ])
                (plus:DI (reg:DI 255 [ D.6528 ])
                    (reg/f:DI 493)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:346 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 493)
        (expr_list:REG_DEAD (reg:DI 255 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 255 [ D.6528 ]))
                    (nil))))))
(insn 588 587 589 22 (set (mem/j:DI (plus:DI (reg/f:DI 256 [ D.6536 ])
                (const_int 40 [0x28])) [0 _255->bbytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:346 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 256 [ D.6536 ])
        (nil)))
(insn 589 588 590 22 (set (reg:SI 494)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:347 90 {*movsi_internal}
     (nil))
(insn 590 589 591 22 (set (reg:DI 257 [ D.6528 ])
        (sign_extend:DI (reg:SI 494))) sim2fitman_sup.cpp:347 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 494)
        (nil)))
(insn 591 590 592 22 (parallel [
            (set (reg:DI 258 [ D.6528 ])
                (ashift:DI (reg:DI 257 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:347 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 257 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 592 591 593 22 (set (reg/f:DI 495)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:347 89 {*movdi_internal}
     (nil))
(insn 593 592 594 22 (parallel [
            (set (reg/f:DI 259 [ D.6536 ])
                (plus:DI (reg:DI 258 [ D.6528 ])
                    (reg/f:DI 495)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:347 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 495)
        (expr_list:REG_DEAD (reg:DI 258 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 258 [ D.6528 ]))
                    (nil))))))
(insn 594 593 595 22 (set (mem/j:HI (plus:DI (reg/f:DI 259 [ D.6536 ])
                (const_int 48 [0x30])) [0 _259->transf.number+0 S2 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:347 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 259 [ D.6536 ])
        (nil)))
(insn 595 594 596 22 (set (reg:SI 496)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:348 90 {*movsi_internal}
     (nil))
(insn 596 595 597 22 (set (reg:DI 260 [ D.6528 ])
        (sign_extend:DI (reg:SI 496))) sim2fitman_sup.cpp:348 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 496)
        (nil)))
(insn 597 596 598 22 (parallel [
            (set (reg:DI 261 [ D.6528 ])
                (ashift:DI (reg:DI 260 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:348 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 260 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 598 597 599 22 (set (reg/f:DI 497)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:348 89 {*movdi_internal}
     (nil))
(insn 599 598 600 22 (parallel [
            (set (reg/f:DI 262 [ D.6536 ])
                (plus:DI (reg:DI 261 [ D.6528 ])
                    (reg/f:DI 497)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:348 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 497)
        (expr_list:REG_DEAD (reg:DI 261 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 261 [ D.6528 ]))
                    (nil))))))
(insn 600 599 601 22 (set (mem/j:HI (plus:DI (reg/f:DI 262 [ D.6536 ])
                (const_int 50 [0x32])) [0 _263->status.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:348 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 262 [ D.6536 ])
        (nil)))
(insn 601 600 602 22 (set (reg:SI 498)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:349 90 {*movsi_internal}
     (nil))
(insn 602 601 603 22 (set (reg:DI 263 [ D.6528 ])
        (sign_extend:DI (reg:SI 498))) sim2fitman_sup.cpp:349 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 498)
        (nil)))
(insn 603 602 604 22 (parallel [
            (set (reg:DI 264 [ D.6528 ])
                (ashift:DI (reg:DI 263 [ D.6528 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:349 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 263 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 604 603 605 22 (set (reg/f:DI 499)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:349 89 {*movdi_internal}
     (nil))
(insn 605 604 606 22 (parallel [
            (set (reg/f:DI 265 [ D.6536 ])
                (plus:DI (reg:DI 264 [ D.6528 ])
                    (reg/f:DI 499)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:349 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 499)
        (expr_list:REG_DEAD (reg:DI 264 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                        (reg:DI 264 [ D.6528 ]))
                    (nil))))))
(insn 606 605 607 22 (set (mem/j:DI (plus:DI (reg/f:DI 265 [ D.6536 ])
                (const_int 56 [0x38])) [0 _267->spare1.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:349 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 265 [ D.6536 ])
        (nil)))
(insn 607 606 608 22 (set (reg:SI 500)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:352 90 {*movsi_internal}
     (nil))
(insn 608 607 609 22 (set (reg:DI 266 [ D.6528 ])
        (sign_extend:DI (reg:SI 500))) sim2fitman_sup.cpp:352 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 500)
        (nil)))
(insn 609 608 610 22 (parallel [
            (set (reg:DI 267 [ D.6528 ])
                (ashift:DI (reg:DI 266 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:352 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 266 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 610 609 611 22 (set (reg/f:DI 501)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:352 89 {*movdi_internal}
     (nil))
(insn 611 610 612 22 (parallel [
            (set (reg/f:DI 268 [ D.6537 ])
                (plus:DI (reg:DI 267 [ D.6528 ])
                    (reg/f:DI 501)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:352 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 501)
        (expr_list:REG_DEAD (reg:DI 267 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 267 [ D.6528 ]))
                    (nil))))))
(insn 612 611 613 22 (set (mem/j:HI (reg/f:DI 268 [ D.6537 ]) [0 _272->scale.number+0 S2 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:352 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 268 [ D.6537 ])
        (nil)))
(insn 613 612 614 22 (set (reg:SI 502)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:353 90 {*movsi_internal}
     (nil))
(insn 614 613 615 22 (set (reg:DI 269 [ D.6528 ])
        (sign_extend:DI (reg:SI 502))) sim2fitman_sup.cpp:353 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 502)
        (nil)))
(insn 615 614 616 22 (parallel [
            (set (reg:DI 270 [ D.6528 ])
                (ashift:DI (reg:DI 269 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:353 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 269 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 616 615 617 22 (set (reg/f:DI 503)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:353 89 {*movdi_internal}
     (nil))
(insn 617 616 618 22 (parallel [
            (set (reg/f:DI 271 [ D.6537 ])
                (plus:DI (reg:DI 270 [ D.6528 ])
                    (reg/f:DI 503)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:353 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 503)
        (expr_list:REG_DEAD (reg:DI 270 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 270 [ D.6528 ]))
                    (nil))))))
(insn 618 617 619 22 (set (mem/j:HI (plus:DI (reg/f:DI 271 [ D.6537 ])
                (const_int 2 [0x2])) [0 _276->status.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:353 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 271 [ D.6537 ])
        (nil)))
(insn 619 618 620 22 (set (reg:SI 504)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:354 90 {*movsi_internal}
     (nil))
(insn 620 619 621 22 (set (reg:DI 272 [ D.6528 ])
        (sign_extend:DI (reg:SI 504))) sim2fitman_sup.cpp:354 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 504)
        (nil)))
(insn 621 620 622 22 (parallel [
            (set (reg:DI 273 [ D.6528 ])
                (ashift:DI (reg:DI 272 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:354 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 272 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 622 621 623 22 (set (reg/f:DI 505)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:354 89 {*movdi_internal}
     (nil))
(insn 623 622 624 22 (parallel [
            (set (reg/f:DI 274 [ D.6537 ])
                (plus:DI (reg:DI 273 [ D.6528 ])
                    (reg/f:DI 505)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:354 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 505)
        (expr_list:REG_DEAD (reg:DI 273 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 273 [ D.6528 ]))
                    (nil))))))
(insn 624 623 625 22 (set (mem/j:HI (plus:DI (reg/f:DI 274 [ D.6537 ])
                (const_int 4 [0x4])) [0 _280->index.number+0 S2 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:354 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 274 [ D.6537 ])
        (nil)))
(insn 625 624 626 22 (set (reg:SI 506)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:355 90 {*movsi_internal}
     (nil))
(insn 626 625 627 22 (set (reg:DI 275 [ D.6528 ])
        (sign_extend:DI (reg:SI 506))) sim2fitman_sup.cpp:355 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 506)
        (nil)))
(insn 627 626 628 22 (parallel [
            (set (reg:DI 276 [ D.6528 ])
                (ashift:DI (reg:DI 275 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:355 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 275 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 628 627 629 22 (set (reg/f:DI 507)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:355 89 {*movdi_internal}
     (nil))
(insn 629 628 630 22 (parallel [
            (set (reg/f:DI 277 [ D.6537 ])
                (plus:DI (reg:DI 276 [ D.6528 ])
                    (reg/f:DI 507)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:355 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 507)
        (expr_list:REG_DEAD (reg:DI 276 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 276 [ D.6528 ]))
                    (nil))))))
(insn 630 629 631 22 (set (mem/j:HI (plus:DI (reg/f:DI 277 [ D.6537 ])
                (const_int 6 [0x6])) [0 _284->spare3.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:355 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 277 [ D.6537 ])
        (nil)))
(insn 631 630 632 22 (set (reg:SI 508)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:356 90 {*movsi_internal}
     (nil))
(insn 632 631 633 22 (set (reg:DI 278 [ D.6528 ])
        (sign_extend:DI (reg:SI 508))) sim2fitman_sup.cpp:356 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 508)
        (nil)))
(insn 633 632 634 22 (parallel [
            (set (reg:DI 279 [ D.6528 ])
                (ashift:DI (reg:DI 278 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:356 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 278 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 634 633 635 22 (set (reg/f:DI 509)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:356 89 {*movdi_internal}
     (nil))
(insn 635 634 636 22 (parallel [
            (set (reg/f:DI 280 [ D.6537 ])
                (plus:DI (reg:DI 279 [ D.6528 ])
                    (reg/f:DI 509)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:356 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 509)
        (expr_list:REG_DEAD (reg:DI 279 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 279 [ D.6528 ]))
                    (nil))))))
(insn 636 635 637 22 (set (mem/j:DI (plus:DI (reg/f:DI 280 [ D.6537 ])
                (const_int 8 [0x8])) [0 _288->ctcount.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:356 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 280 [ D.6537 ])
        (nil)))
(insn 637 636 638 22 (set (reg:SI 510)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:357 90 {*movsi_internal}
     (nil))
(insn 638 637 639 22 (set (reg:DI 281 [ D.6528 ])
        (sign_extend:DI (reg:SI 510))) sim2fitman_sup.cpp:357 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 510)
        (nil)))
(insn 639 638 640 22 (parallel [
            (set (reg:DI 282 [ D.6528 ])
                (ashift:DI (reg:DI 281 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:357 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 281 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 640 639 641 22 (set (reg/f:DI 511)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:357 89 {*movdi_internal}
     (nil))
(insn 641 640 642 22 (parallel [
            (set (reg/f:DI 283 [ D.6537 ])
                (plus:DI (reg:DI 282 [ D.6528 ])
                    (reg/f:DI 511)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:357 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 511)
        (expr_list:REG_DEAD (reg:DI 282 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 282 [ D.6528 ]))
                    (nil))))))
(insn 642 641 643 22 (set (reg:SF 512)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:357 129 {*movsf_internal}
     (nil))
(insn 643 642 644 22 (set (mem/j:SF (plus:DI (reg/f:DI 283 [ D.6537 ])
                (const_int 16 [0x10])) [0 _292->lpval.number+0 S4 A64])
        (reg:SF 512)) sim2fitman_sup.cpp:357 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 512)
        (expr_list:REG_DEAD (reg/f:DI 283 [ D.6537 ])
            (nil))))
(insn 644 643 645 22 (set (reg:SI 513)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:358 90 {*movsi_internal}
     (nil))
(insn 645 644 646 22 (set (reg:DI 284 [ D.6528 ])
        (sign_extend:DI (reg:SI 513))) sim2fitman_sup.cpp:358 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 513)
        (nil)))
(insn 646 645 647 22 (parallel [
            (set (reg:DI 285 [ D.6528 ])
                (ashift:DI (reg:DI 284 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:358 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 284 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 647 646 648 22 (set (reg/f:DI 514)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:358 89 {*movdi_internal}
     (nil))
(insn 648 647 649 22 (parallel [
            (set (reg/f:DI 286 [ D.6537 ])
                (plus:DI (reg:DI 285 [ D.6528 ])
                    (reg/f:DI 514)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:358 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 514)
        (expr_list:REG_DEAD (reg:DI 285 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 285 [ D.6528 ]))
                    (nil))))))
(insn 649 648 650 22 (set (reg:SF 515)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:358 129 {*movsf_internal}
     (nil))
(insn 650 649 651 22 (set (mem/j:SF (plus:DI (reg/f:DI 286 [ D.6537 ])
                (const_int 20 [0x14])) [0 _296->rpval.number+0 S4 A32])
        (reg:SF 515)) sim2fitman_sup.cpp:358 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 515)
        (expr_list:REG_DEAD (reg/f:DI 286 [ D.6537 ])
            (nil))))
(insn 651 650 652 22 (set (reg:SI 516)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:359 90 {*movsi_internal}
     (nil))
(insn 652 651 653 22 (set (reg:DI 287 [ D.6528 ])
        (sign_extend:DI (reg:SI 516))) sim2fitman_sup.cpp:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 516)
        (nil)))
(insn 653 652 654 22 (parallel [
            (set (reg:DI 288 [ D.6528 ])
                (ashift:DI (reg:DI 287 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:359 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 287 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 654 653 655 22 (set (reg/f:DI 517)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:359 89 {*movdi_internal}
     (nil))
(insn 655 654 656 22 (parallel [
            (set (reg/f:DI 289 [ D.6537 ])
                (plus:DI (reg:DI 288 [ D.6528 ])
                    (reg/f:DI 517)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:359 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 517)
        (expr_list:REG_DEAD (reg:DI 288 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 288 [ D.6528 ]))
                    (nil))))))
(insn 656 655 657 22 (set (reg:SF 518)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:359 129 {*movsf_internal}
     (nil))
(insn 657 656 658 22 (set (mem/j:SF (plus:DI (reg/f:DI 289 [ D.6537 ])
                (const_int 24 [0x18])) [0 _300->lvl.number+0 S4 A64])
        (reg:SF 518)) sim2fitman_sup.cpp:359 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 518)
        (expr_list:REG_DEAD (reg/f:DI 289 [ D.6537 ])
            (nil))))
(insn 658 657 659 22 (set (reg:SI 519)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:360 90 {*movsi_internal}
     (nil))
(insn 659 658 660 22 (set (reg:DI 290 [ D.6528 ])
        (sign_extend:DI (reg:SI 519))) sim2fitman_sup.cpp:360 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 519)
        (nil)))
(insn 660 659 661 22 (parallel [
            (set (reg:DI 291 [ D.6528 ])
                (ashift:DI (reg:DI 290 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:360 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 290 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 661 660 662 22 (set (reg/f:DI 520)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:360 89 {*movdi_internal}
     (nil))
(insn 662 661 663 22 (parallel [
            (set (reg/f:DI 292 [ D.6537 ])
                (plus:DI (reg:DI 291 [ D.6528 ])
                    (reg/f:DI 520)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:360 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 520)
        (expr_list:REG_DEAD (reg:DI 291 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                        (reg:DI 291 [ D.6528 ]))
                    (nil))))))
(insn 663 662 664 22 (set (reg:SF 521)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:360 129 {*movsf_internal}
     (nil))
(insn 664 663 665 22 (set (mem/j:SF (plus:DI (reg/f:DI 292 [ D.6537 ])
                (const_int 28 [0x1c])) [0 _304->tlt.number+0 S4 A32])
        (reg:SF 521)) sim2fitman_sup.cpp:360 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 521)
        (expr_list:REG_DEAD (reg/f:DI 292 [ D.6537 ])
            (nil))))
(insn 665 664 666 22 (set (reg:SI 522)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:363 90 {*movsi_internal}
     (nil))
(insn 666 665 667 22 (set (reg:DI 293 [ D.6528 ])
        (sign_extend:DI (reg:SI 522))) sim2fitman_sup.cpp:363 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 522)
        (nil)))
(insn 667 666 668 22 (parallel [
            (set (reg:DI 294 [ D.6528 ])
                (ashift:DI (reg:DI 293 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:363 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 293 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 668 667 669 22 (set (reg/f:DI 523)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:363 89 {*movdi_internal}
     (nil))
(insn 669 668 670 22 (parallel [
            (set (reg/f:DI 295 [ D.6538 ])
                (plus:DI (reg:DI 294 [ D.6528 ])
                    (reg/f:DI 523)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:363 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 523)
        (expr_list:REG_DEAD (reg:DI 294 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                        (reg:DI 294 [ D.6528 ]))
                    (nil))))))
(insn 670 669 671 22 (set (mem/j:SI (reg/f:DI 295 [ D.6538 ]) [0 _309->num_datasets+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:363 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 295 [ D.6538 ])
        (nil)))
(insn 671 670 672 22 (set (reg:SI 524)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:364 90 {*movsi_internal}
     (nil))
(insn 672 671 673 22 (set (reg:DI 296 [ D.6528 ])
        (sign_extend:DI (reg:SI 524))) sim2fitman_sup.cpp:364 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 524)
        (nil)))
(insn 673 672 674 22 (parallel [
            (set (reg:DI 297 [ D.6528 ])
                (ashift:DI (reg:DI 296 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:364 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 296 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 674 673 675 22 (set (reg/f:DI 525)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:364 89 {*movdi_internal}
     (nil))
(insn 675 674 676 22 (parallel [
            (set (reg/f:DI 298 [ D.6538 ])
                (plus:DI (reg:DI 297 [ D.6528 ])
                    (reg/f:DI 525)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 525)
        (expr_list:REG_DEAD (reg:DI 297 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                        (reg:DI 297 [ D.6528 ]))
                    (nil))))))
(insn 676 675 677 22 (set (mem/j:SI (plus:DI (reg/f:DI 298 [ D.6538 ])
                (const_int 4 [0x4])) [0 _313->num_unsup_sets+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 298 [ D.6538 ])
        (nil)))
(insn 677 676 678 22 (set (reg:SI 526)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:365 90 {*movsi_internal}
     (nil))
(insn 678 677 679 22 (set (reg:DI 299 [ D.6528 ])
        (sign_extend:DI (reg:SI 526))) sim2fitman_sup.cpp:365 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 526)
        (nil)))
(insn 679 678 680 22 (parallel [
            (set (reg:DI 300 [ D.6528 ])
                (ashift:DI (reg:DI 299 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:365 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 299 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 680 679 681 22 (set (reg/f:DI 527)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:365 89 {*movdi_internal}
     (nil))
(insn 681 680 682 22 (parallel [
            (set (reg/f:DI 301 [ D.6538 ])
                (plus:DI (reg:DI 300 [ D.6528 ])
                    (reg/f:DI 527)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:365 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 527)
        (expr_list:REG_DEAD (reg:DI 300 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                        (reg:DI 300 [ D.6528 ]))
                    (nil))))))
(insn 682 681 683 22 (set (mem/j:SI (plus:DI (reg/f:DI 301 [ D.6538 ])
                (const_int 8 [0x8])) [0 _317->file_size+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:365 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 301 [ D.6538 ])
        (nil)))
(insn 683 682 684 22 (set (reg:SI 528)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:366 90 {*movsi_internal}
     (nil))
(insn 684 683 685 22 (set (reg:DI 302 [ D.6528 ])
        (sign_extend:DI (reg:SI 528))) sim2fitman_sup.cpp:366 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 528)
        (nil)))
(insn 685 684 686 22 (parallel [
            (set (reg:DI 303 [ D.6528 ])
                (ashift:DI (reg:DI 302 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:366 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 302 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 686 685 687 22 (set (reg/f:DI 529)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:366 89 {*movdi_internal}
     (nil))
(insn 687 686 688 22 (parallel [
            (set (reg/f:DI 304 [ D.6538 ])
                (plus:DI (reg:DI 303 [ D.6528 ])
                    (reg/f:DI 529)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:366 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 529)
        (expr_list:REG_DEAD (reg:DI 303 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                        (reg:DI 303 [ D.6528 ]))
                    (nil))))))
(insn 688 687 689 22 (set (mem/j:SI (plus:DI (reg/f:DI 304 [ D.6538 ])
                (const_int 12 [0xc])) [0 _321->total_data_size+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:366 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 304 [ D.6538 ])
        (nil)))
(insn 689 688 705 22 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:367 90 {*movsi_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              24 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 305 530
(code_label 705 689 690 23 70 "" [1 uses])
(note 690 705 691 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 691 690 692 23 (set (reg:SI 530)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:367 90 {*movsi_internal}
     (nil))
(insn 692 691 693 23 (set (reg:DI 305 [ D.6528 ])
        (sign_extend:DI (reg:SI 530))) sim2fitman_sup.cpp:367 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 530)
        (nil)))
(insn 693 692 694 23 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 305 [ D.6528 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:367 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 305 [ D.6528 ])
        (nil)))
(jump_insn 694 693 695 23 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 708)
            (pc))) sim2fitman_sup.cpp:367 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 708)
;;  succ:       25
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 306 307 308 531 532 533 534
(note 695 694 696 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 24 (set (reg:SI 531)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:368 90 {*movsi_internal}
     (nil))
(insn 697 696 698 24 (set (reg:DI 306 [ D.6528 ])
        (sign_extend:DI (reg:SI 531))) sim2fitman_sup.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 531)
        (nil)))
(insn 698 697 699 24 (parallel [
            (set (reg:DI 307 [ D.6528 ])
                (ashift:DI (reg:DI 306 [ D.6528 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:368 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 306 [ D.6528 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 699 698 700 24 (set (reg/f:DI 532)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:368 89 {*movdi_internal}
     (nil))
(insn 700 699 701 24 (parallel [
            (set (reg/f:DI 308 [ D.6538 ])
                (plus:DI (reg:DI 307 [ D.6528 ])
                    (reg/f:DI 532)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:368 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 532)
        (expr_list:REG_DEAD (reg:DI 307 [ D.6528 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                        (reg:DI 307 [ D.6528 ]))
                    (nil))))))
(insn 701 700 702 24 (set (reg:SI 534)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:368 90 {*movsi_internal}
     (nil))
(insn 702 701 703 24 (set (reg:DI 533)
        (sign_extend:DI (reg:SI 534))) sim2fitman_sup.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 534)
        (nil)))
(insn 703 702 704 24 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 308 [ D.6538 ])
                    (reg:DI 533))
                (const_int 16 [0x10])) [0 _327->version S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:368 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 533)
        (expr_list:REG_DEAD (reg/f:DI 308 [ D.6538 ])
            (nil))))
(insn 704 703 772 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:367 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 772 704 773 24 (set (pc)
        (label_ref 705)) sim2fitman_sup.cpp:367 654 {jump}
     (nil)
 -> 705)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 773 772 708)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 708 773 709 25 69 "" [1 uses])
(note 709 708 710 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 710 709 774 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:260 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 774 710 775 25 (set (pc)
        (label_ref 711)) sim2fitman_sup.cpp:260 654 {jump}
     (nil)
 -> 711)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 775 774 714)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 309 310 311 312 313 314 315 535 536 537 538 539 540
(code_label 714 775 715 26 56 "" [1 uses])
(note 715 714 716 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 716 715 717 26 (set (reg/f:DI 309 [ D.6539 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:373 89 {*movdi_internal}
     (nil))
(insn 717 716 718 26 (set (mem:DI (reg/f:DI 309 [ D.6539 ]) [0 MEM[(void *)_332]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:373 89 {*movdi_internal}
     (nil))
(insn 718 717 719 26 (set (mem:DI (plus:DI (reg/f:DI 309 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_332]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:373 89 {*movdi_internal}
     (nil))
(insn 719 718 720 26 (set (mem:SI (plus:DI (reg/f:DI 309 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_332]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:373 90 {*movsi_internal}
     (nil))
(insn 720 719 721 26 (set (mem:HI (plus:DI (reg/f:DI 309 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_332]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:373 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 309 [ D.6539 ])
        (nil)))
(insn 721 720 722 26 (set (reg/f:DI 535)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:374 89 {*movdi_internal}
     (nil))
(insn 722 721 723 26 (parallel [
            (set (reg/f:DI 310 [ D.6539 ])
                (plus:DI (reg/f:DI 535)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:374 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 535)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 256 [0x100]))
                (nil)))))
(insn 723 722 724 26 (set (mem:DI (reg/f:DI 310 [ D.6539 ]) [0 MEM[(void *)_334]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:374 89 {*movdi_internal}
     (nil))
(insn 724 723 725 26 (set (mem:DI (plus:DI (reg/f:DI 310 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_334]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:374 89 {*movdi_internal}
     (nil))
(insn 725 724 726 26 (set (mem:SI (plus:DI (reg/f:DI 310 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_334]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:374 90 {*movsi_internal}
     (nil))
(insn 726 725 727 26 (set (mem:HI (plus:DI (reg/f:DI 310 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_334]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:374 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 310 [ D.6539 ])
        (nil)))
(insn 727 726 728 26 (set (reg/f:DI 536)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:375 89 {*movdi_internal}
     (nil))
(insn 728 727 729 26 (parallel [
            (set (reg/f:DI 311 [ D.6539 ])
                (plus:DI (reg/f:DI 536)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:375 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 536)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 729 728 730 26 (set (mem:DI (reg/f:DI 311 [ D.6539 ]) [0 MEM[(void *)_336]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:375 89 {*movdi_internal}
     (nil))
(insn 730 729 731 26 (set (mem:DI (plus:DI (reg/f:DI 311 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_336]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:375 89 {*movdi_internal}
     (nil))
(insn 731 730 732 26 (set (mem:SI (plus:DI (reg/f:DI 311 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_336]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:375 90 {*movsi_internal}
     (nil))
(insn 732 731 733 26 (set (mem:HI (plus:DI (reg/f:DI 311 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_336]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:375 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311 [ D.6539 ])
        (nil)))
(insn 733 732 734 26 (set (reg/f:DI 537)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:376 89 {*movdi_internal}
     (nil))
(insn 734 733 735 26 (parallel [
            (set (reg/f:DI 312 [ D.6539 ])
                (plus:DI (reg/f:DI 537)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:376 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 537)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 768 [0x300]))
                (nil)))))
(insn 735 734 736 26 (set (mem:DI (reg/f:DI 312 [ D.6539 ]) [0 MEM[(void *)_338]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:376 89 {*movdi_internal}
     (nil))
(insn 736 735 737 26 (set (mem:DI (plus:DI (reg/f:DI 312 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_338]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:376 89 {*movdi_internal}
     (nil))
(insn 737 736 738 26 (set (mem:SI (plus:DI (reg/f:DI 312 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_338]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:376 90 {*movsi_internal}
     (nil))
(insn 738 737 739 26 (set (mem:HI (plus:DI (reg/f:DI 312 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_338]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:376 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 312 [ D.6539 ])
        (nil)))
(insn 739 738 740 26 (set (reg/f:DI 538)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:377 89 {*movdi_internal}
     (nil))
(insn 740 739 741 26 (parallel [
            (set (reg/f:DI 313 [ D.6539 ])
                (plus:DI (reg/f:DI 538)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:377 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 538)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 1024 [0x400]))
                (nil)))))
(insn 741 740 742 26 (set (mem:DI (reg/f:DI 313 [ D.6539 ]) [0 MEM[(void *)_340]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:377 89 {*movdi_internal}
     (nil))
(insn 742 741 743 26 (set (mem:DI (plus:DI (reg/f:DI 313 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_340]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:377 89 {*movdi_internal}
     (nil))
(insn 743 742 744 26 (set (mem:SI (plus:DI (reg/f:DI 313 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_340]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:377 90 {*movsi_internal}
     (nil))
(insn 744 743 745 26 (set (mem:HI (plus:DI (reg/f:DI 313 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_340]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:377 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 313 [ D.6539 ])
        (nil)))
(insn 745 744 746 26 (set (reg/f:DI 539)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:378 89 {*movdi_internal}
     (nil))
(insn 746 745 747 26 (parallel [
            (set (reg/f:DI 314 [ D.6539 ])
                (plus:DI (reg/f:DI 539)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:378 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 539)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 1280 [0x500]))
                (nil)))))
(insn 747 746 748 26 (set (mem:DI (reg/f:DI 314 [ D.6539 ]) [0 MEM[(void *)_342]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:378 89 {*movdi_internal}
     (nil))
(insn 748 747 749 26 (set (mem:DI (plus:DI (reg/f:DI 314 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_342]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:378 89 {*movdi_internal}
     (nil))
(insn 749 748 750 26 (set (mem:SI (plus:DI (reg/f:DI 314 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_342]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:378 90 {*movsi_internal}
     (nil))
(insn 750 749 751 26 (set (mem:HI (plus:DI (reg/f:DI 314 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_342]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:378 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 314 [ D.6539 ])
        (nil)))
(insn 751 750 752 26 (set (reg/f:DI 540)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:379 89 {*movdi_internal}
     (nil))
(insn 752 751 753 26 (parallel [
            (set (reg/f:DI 315 [ D.6539 ])
                (plus:DI (reg/f:DI 540)
                    (const_int 1536 [0x600])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:379 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 540)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                    (const_int 1536 [0x600]))
                (nil)))))
(insn 753 752 754 26 (set (mem:DI (reg/f:DI 315 [ D.6539 ]) [0 MEM[(void *)_344]+0 S8 A8])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:379 89 {*movdi_internal}
     (nil))
(insn 754 753 755 26 (set (mem:DI (plus:DI (reg/f:DI 315 [ D.6539 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_344]+8 S8 A8])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:379 89 {*movdi_internal}
     (nil))
(insn 755 754 756 26 (set (mem:SI (plus:DI (reg/f:DI 315 [ D.6539 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_344]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:379 90 {*movsi_internal}
     (nil))
(insn 756 755 759 26 (set (mem:HI (plus:DI (reg/f:DI 315 [ D.6539 ])
                (const_int 20 [0x14])) [0 MEM[(void *)_344]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:379 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 315 [ D.6539 ])
        (nil)))
(insn 759 756 0 26 (const_int 0 [0]) sim2fitman_sup.cpp:382 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void disp_help(int) (_Z9disp_helpi, funcdef_no=11, decl_uid=5503, cgraph_uid=11, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 86.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 94(l0): point = 1
   Insn 86(l0): point = 4
   Insn 85(l0): point = 6
   Insn 84(l0): point = 8
   Insn 83(l0): point = 10
   Insn 82(l0): point = 12
   Insn 81(l0): point = 14
   Insn 80(l0): point = 16
   Insn 79(l0): point = 18
   Insn 78(l0): point = 20
   Insn 77(l0): point = 22
   Insn 76(l0): point = 24
   Insn 75(l0): point = 26
   Insn 74(l0): point = 28
   Insn 73(l0): point = 30
   Insn 72(l0): point = 32
   Insn 71(l0): point = 34
   Insn 70(l0): point = 36
   Insn 69(l0): point = 38
   Insn 68(l0): point = 40
   Insn 67(l0): point = 42
   Insn 66(l0): point = 44
   Insn 65(l0): point = 46
   Insn 64(l0): point = 48
   Insn 63(l0): point = 50
   Insn 62(l0): point = 52
   Insn 61(l0): point = 54
   Insn 60(l0): point = 56
   Insn 59(l0): point = 58
   Insn 58(l0): point = 60
   Insn 57(l0): point = 62
   Insn 56(l0): point = 64
   Insn 55(l0): point = 66
   Insn 54(l0): point = 68
   Insn 53(l0): point = 70
   Insn 52(l0): point = 72
   Insn 51(l0): point = 74
   Insn 50(l0): point = 76
   Insn 49(l0): point = 78
   Insn 48(l0): point = 80
   Insn 47(l0): point = 82
   Insn 46(l0): point = 84
   Insn 45(l0): point = 86
   Insn 44(l0): point = 88
   Insn 43(l0): point = 90
   Insn 42(l0): point = 92
   Insn 41(l0): point = 94
   Insn 40(l0): point = 96
   Insn 39(l0): point = 98
   Insn 38(l0): point = 100
   Insn 37(l0): point = 102
   Insn 36(l0): point = 104
   Insn 35(l0): point = 106
   Insn 34(l0): point = 108
   Insn 33(l0): point = 110
   Insn 32(l0): point = 112
   Insn 31(l0): point = 114
   Insn 30(l0): point = 116
   Insn 29(l0): point = 118
   Insn 28(l0): point = 120
   Insn 27(l0): point = 122
   Insn 91(l0): point = 125
   Insn 22(l0): point = 127
   Insn 21(l0): point = 129
   Insn 20(l0): point = 131
   Insn 19(l0): point = 133
   Insn 18(l0): point = 135
   Insn 17(l0): point = 137
   Insn 16(l0): point = 139
   Insn 15(l0): point = 141
   Insn 14(l0): point = 143
   Insn 13(l0): point = 145
   Insn 12(l0): point = 147
   Insn 11(l0): point = 149
   Insn 10(l0): point = 151
   Insn 9(l0): point = 153
   Insn 7(l0): point = 156
   Insn 6(l0): point = 158
   Insn 2(l0): point = 160
Compressing live ranges: from 163 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void disp_help(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={38d} r1={38d} r2={38d} r4={38d} r5={75d,38u} r6={1d,6u} r7={1d,43u} r8={37d} r9={37d} r10={37d} r11={37d} r12={37d} r13={37d} r14={37d} r15={37d} r16={1d,5u} r17={38d,1u} r18={37d} r19={37d} r20={1d,8u} r21={38d} r22={38d} r23={38d} r24={38d} r25={38d} r26={38d} r27={38d} r28={38d} r29={37d} r30={37d} r31={37d} r32={37d} r33={37d} r34={37d} r35={37d} r36={37d} r37={38d} r38={38d} r39={37d} r40={37d} r45={37d} r46={37d} r47={37d} r48={37d} r49={37d} r50={37d} r51={37d} r52={37d} r53={37d} r54={37d} r55={37d} r56={37d} r57={37d} r58={37d} r59={37d} r60={37d} r61={37d} r62={37d} r63={37d} r64={37d} r65={37d} r66={37d} r67={37d} r68={37d} r69={37d} r70={37d} r71={37d} r72={37d} r73={37d} r74={37d} r75={37d} r76={37d} r77={37d} r78={37d} r79={37d} r80={37d} 
;;    total ref usage 2822{2721d,101u,0e} in 79{42 regular + 37 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 version+0 S4 A32])
        (reg:SI 5 di [ version ])) sim2fitman_sup.cpp:387 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ version ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 version+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:389 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) sim2fitman_sup.cpp:389 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7ff9ba4b87e0 *.LC18>)) sim2fitman_sup.cpp:390 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:390 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7ff9ba4b8870 *.LC19>)) sim2fitman_sup.cpp:391 89 {*movdi_internal}
     (nil))
(call_insn 12 11 13 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:391 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7ff9ba4b8900 *.LC20>)) sim2fitman_sup.cpp:393 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:393 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7ff9ba4b8990 *.LC21>)) sim2fitman_sup.cpp:394 89 {*movdi_internal}
     (nil))
(call_insn 16 15 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:394 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7ff9ba4b8a20 *.LC22>)) sim2fitman_sup.cpp:395 89 {*movdi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:395 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7ff9ba4b8ab0 *.LC23>)) sim2fitman_sup.cpp:396 89 {*movdi_internal}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:396 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7ff9ba4b8b40 *.LC24>)) sim2fitman_sup.cpp:397 89 {*movdi_internal}
     (nil))
(call_insn 22 21 91 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:397 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 91 22 92 3 (set (pc)
        (label_ref:DI 95)) sim2fitman_sup.cpp:475 654 {jump}
     (nil)
 -> 95)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 92 91 25)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 25 92 26 4 73 "" [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7ff9ba4b8bd0 *.LC25>)) sim2fitman_sup.cpp:410 89 {*movdi_internal}
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:410 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7ff9ba4b8c60 *.LC26>)) sim2fitman_sup.cpp:411 89 {*movdi_internal}
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:411 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7ff9ba4b8870 *.LC19>)) sim2fitman_sup.cpp:412 89 {*movdi_internal}
     (nil))
(call_insn 32 31 33 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:412 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7ff9ba4b8cf0 *.LC27>)) sim2fitman_sup.cpp:416 89 {*movdi_internal}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:416 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7ff9ba4b8d80 *.LC28>)) sim2fitman_sup.cpp:418 89 {*movdi_internal}
     (nil))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:418 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7ff9ba4b8e10 *.LC29>)) sim2fitman_sup.cpp:419 89 {*movdi_internal}
     (nil))
(call_insn 38 37 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:419 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7ff9ba4b8ea0 *.LC30>)) sim2fitman_sup.cpp:420 89 {*movdi_internal}
     (nil))
(call_insn 40 39 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:420 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7ff9ba4b8f30 *.LC31>)) sim2fitman_sup.cpp:421 89 {*movdi_internal}
     (nil))
(call_insn 42 41 43 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:421 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7ff9ba4bf000 *.LC32>)) sim2fitman_sup.cpp:422 89 {*movdi_internal}
     (nil))
(call_insn 44 43 45 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:422 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7ff9ba4b8900 *.LC20>)) sim2fitman_sup.cpp:424 89 {*movdi_internal}
     (nil))
(call_insn 46 45 47 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:424 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7ff9ba4bf090 *.LC33>)) sim2fitman_sup.cpp:425 89 {*movdi_internal}
     (nil))
(call_insn 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:425 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7ff9ba4bf120 *.LC34>)) sim2fitman_sup.cpp:426 89 {*movdi_internal}
     (nil))
(call_insn 50 49 51 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:426 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7ff9ba4bf1b0 *.LC35>)) sim2fitman_sup.cpp:427 89 {*movdi_internal}
     (nil))
(call_insn 52 51 53 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:427 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7ff9ba4bf240 *.LC36>)) sim2fitman_sup.cpp:428 89 {*movdi_internal}
     (nil))
(call_insn 54 53 55 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:428 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7ff9ba4bf2d0 *.LC37>)) sim2fitman_sup.cpp:429 89 {*movdi_internal}
     (nil))
(call_insn 56 55 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:429 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7ff9ba4b8a20 *.LC22>)) sim2fitman_sup.cpp:431 89 {*movdi_internal}
     (nil))
(call_insn 58 57 59 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:431 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 59 58 60 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7ff9ba4bf360 *.LC38>)) sim2fitman_sup.cpp:432 89 {*movdi_internal}
     (nil))
(call_insn 60 59 61 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:432 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7ff9ba4bf3f0 *.LC39>)) sim2fitman_sup.cpp:433 89 {*movdi_internal}
     (nil))
(call_insn 62 61 63 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:433 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7ff9ba4bf480 *.LC40>)) sim2fitman_sup.cpp:434 89 {*movdi_internal}
     (nil))
(call_insn 64 63 65 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:434 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7ff9ba4bf510 *.LC41>)) sim2fitman_sup.cpp:435 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:435 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7ff9ba4bf5a0 *.LC42>)) sim2fitman_sup.cpp:436 89 {*movdi_internal}
     (nil))
(call_insn 68 67 69 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:436 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7ff9ba4bf630 *.LC43>)) sim2fitman_sup.cpp:437 89 {*movdi_internal}
     (nil))
(call_insn 70 69 71 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:437 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 71 70 72 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7ff9ba4bf6c0 *.LC44>)) sim2fitman_sup.cpp:438 89 {*movdi_internal}
     (nil))
(call_insn 72 71 73 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:438 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 73 72 74 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7ff9ba4bf750 *.LC45>)) sim2fitman_sup.cpp:456 89 {*movdi_internal}
     (nil))
(call_insn 74 73 75 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:456 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7ff9ba4bf7e0 *.LC46>)) sim2fitman_sup.cpp:457 89 {*movdi_internal}
     (nil))
(call_insn 76 75 77 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:457 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7ff9ba4bf870 *.LC47>)) sim2fitman_sup.cpp:458 89 {*movdi_internal}
     (nil))
(call_insn 78 77 79 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:458 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7ff9ba4bf900 *.LC48>)) sim2fitman_sup.cpp:460 89 {*movdi_internal}
     (nil))
(call_insn 80 79 81 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:460 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7ff9ba4bf990 *.LC49>)) sim2fitman_sup.cpp:468 89 {*movdi_internal}
     (nil))
(call_insn 82 81 83 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:468 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7ff9ba4bfa20 *.LC50>)) sim2fitman_sup.cpp:469 89 {*movdi_internal}
     (nil))
(call_insn 84 83 85 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:469 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7ff9ba4bfab0 *.LC51>)) sim2fitman_sup.cpp:471 89 {*movdi_internal}
     (nil))
(call_insn 86 85 95 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:471 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 95 86 93 6 75 "" [1 uses])
(note 93 95 94 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 89 6 (const_int 0 [0]) sim2fitman_sup.cpp:475 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 89 94 90 5 72 "" [0 uses])
(note 90 89 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void check_outfile(IOFiles*, bool, int) (_Z13check_outfileP7IOFilesbi, funcdef_no=12, decl_uid=5514, cgraph_uid=12, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 101 n_edges 151 count 101 (    1)
Building IRA IR
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 292.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 338.
verify found no changes in insn with uid = 364.
verify found no changes in insn with uid = 394.
verify found no changes in insn with uid = 432.
verify found no changes in insn with uid = 458.
verify found no changes in insn with uid = 488.
verify found no changes in insn with uid = 510.
verify found no changes in insn with uid = 518.
verify found no changes in insn with uid = 540.
verify found no changes in insn with uid = 578.
verify found no changes in insn with uid = 600.
verify found no changes in insn with uid = 643.
verify found no changes in insn with uid = 656.
verify found no changes in insn with uid = 664.
verify found no changes in insn with uid = 678.
verify found no changes in insn with uid = 686.
verify found no changes in insn with uid = 708.
verify found no changes in insn with uid = 746.
verify found no changes in insn with uid = 768.
verify found no changes in insn with uid = 813.
verify found no changes in insn with uid = 826.
verify found no changes in insn with uid = 834.
verify found no changes in insn with uid = 840.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r433: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r433,l0) best DIREG, allocno GENERAL_REGS
    r432: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r432,l0) best SIREG, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r427,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r426,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r415,l0) best DIREG, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r408,l0) best DIREG, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r401,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r400: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r400,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r395,l0) best DIREG, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r388,l0) best DIREG, allocno GENERAL_REGS
    r387: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r387,l0) best DIREG, allocno GENERAL_REGS
    r386: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r386,l0) best DIREG, allocno GENERAL_REGS
    r385: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r385,l0) best SIREG, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r373,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a79 (r368,l0) best DIREG, allocno GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r361,l0) best DIREG, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r348,l0) best DIREG, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a109 (r341,l0) best DIREG, allocno GENERAL_REGS
    r340: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r340,l0) best DIREG, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r331,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r329,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a199 (r305,l0) best DIREG, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a287 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a321 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a322 (r257,l0) best SIREG, allocno GENERAL_REGS
    r256: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r256,l0) best DIREG, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r254,l0) best AREG, allocno GENERAL_REGS
    r253: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r253,l0) best DIREG, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r248,l0) best AREG, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r245,l0) best AREG, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r240,l0) best AREG, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r237,l0) best AREG, allocno GENERAL_REGS
    r236: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r236,l0) best AREG, allocno GENERAL_REGS
    r235: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r235,l0) best DIREG, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r233,l0) best AREG, allocno GENERAL_REGS
    r232: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r232,l0) best DIREG, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a78 (r227,l0) best AREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r224,l0) best AREG, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r219,l0) best AREG, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r216,l0) best AREG, allocno GENERAL_REGS
    r215: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r215,l0) best AREG, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r213,l0) best AREG, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r205,l0) best AREG, allocno GENERAL_REGS
    r204: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a141 (r204,l0) best DIREG, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r198,l0) best AREG, allocno GENERAL_REGS
    r197: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r197,l0) best DIREG, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a183 (r187,l0) best AREG, allocno GENERAL_REGS
    r186: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a184 (r186,l0) best DIREG, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r180,l0) best AREG, allocno GENERAL_REGS
    r179: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r179,l0) best DIREG, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r169,l0) best DIREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r162,l0) best AREG, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a203 (r160,l0) best AREG, allocno GENERAL_REGS
    r159: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r159,l0) best DIREG, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a228 (r152,l0) best AREG, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a229 (r151,l0) best DIREG, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a233 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a216 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a217 (r144,l0) best DIREG, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a271 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a272 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a259 (r127,l0) best AREG, allocno GENERAL_REGS
    r126: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a260 (r126,l0) best DIREG, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a264 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a266 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a246 (r117,l0) best AREG, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a247 (r116,l0) best DIREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a286 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a291 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a292 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a293 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a304 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a305 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a315 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a316 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a319 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a320 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r431,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a6(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r430,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a9(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a10(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a11(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r423,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r420,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a23(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a27(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a31(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a32(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a37(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r400,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r401,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r397,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a41(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a42(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a43(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a45(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a49(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a53(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a55(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a61(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a62(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a63(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a65(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a66(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:36 NO_REX_SSE_REGS:36 SSE_REGS:36 MMX_REGS:51 INT_SSE_REGS:39 ALL_REGS:728 MEM:16
  a67(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a70(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a71(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a75(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a77(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a78(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a79(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a81(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a83(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a84(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a85(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a87(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a89(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a90(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a91(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a93(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a94(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a97(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a100(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a101(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a102(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a107(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a109(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a111(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a112(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a113(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a114(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a116(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a118(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a119(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a120(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a121(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a122(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a124(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a125(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a126(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a127(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a128(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a129(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a131(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a132(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a133(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a135(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a137(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a138(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a139(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a140(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a141(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a143(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a144(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a145(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a146(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a147(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a148(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a150(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a151(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a152(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a153(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a154(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a155(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a156(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a157(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a158(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a159(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a160(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a161(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a162(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a163(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a164(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a165(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a166(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a167(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a168(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a169(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a170(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a171(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a172(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a173(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a174(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a175(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a176(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a177(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a180(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a181(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a182(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a183(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a184(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a186(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a187(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a188(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a189(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a190(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a191(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a192(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a193(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a194(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a195(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a196(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a197(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a198(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a199(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a200(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a201(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a202(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a203(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a204(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a205(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a206(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a207(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a208(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a209(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a210(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a211(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a212(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a213(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a214(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a215(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a216(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a217(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a218(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a219(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a220(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a221(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a222(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a223(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a224(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a225(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a226(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a227(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a229(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a230(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a231(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a232(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a233(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a234(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a235(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a236(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a237(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a238(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a239(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a240(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a241(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a242(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a243(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a244(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a245(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a246(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a247(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a248(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a249(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a250(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a251(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a252(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a253(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a255(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a256(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a257(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a258(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a259(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a260(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a261(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a262(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a263(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a264(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a265(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a266(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a267(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a268(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a269(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a270(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a271(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a272(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a273(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a274(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a275(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a276(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a277(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a278(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a279(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a280(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a281(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a282(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a283(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a284(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a285(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a286(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a287(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a288(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a289(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a290(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a291(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a292(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a293(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a294(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a295(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a296(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a297(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a298(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a299(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a300(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a301(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a302(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a303(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a304(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a305(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a306(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a307(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a308(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a309(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a310(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a311(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a312(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a313(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a314(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a315(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a316(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a317(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a318(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a319(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a320(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a321(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a322(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 840(l0): point = 1
   Insn 839(l0): point = 4
   Insn 838(l0): point = 6
   Insn 898(l0): point = 9
   Insn 834(l0): point = 12
   Insn 833(l0): point = 14
   Insn 832(l0): point = 16
   Insn 830(l0): point = 19
   Insn 829(l0): point = 21
   Insn 826(l0): point = 24
   Insn 825(l0): point = 26
   Insn 824(l0): point = 28
   Insn 823(l0): point = 30
   Insn 822(l0): point = 32
   Insn 821(l0): point = 34
   Insn 819(l0): point = 37
   Insn 818(l0): point = 39
   Insn 817(l0): point = 41
   Insn 816(l0): point = 43
   Insn 815(l0): point = 45
   Insn 814(l0): point = 47
   Insn 813(l0): point = 49
   Insn 812(l0): point = 51
   Insn 811(l0): point = 53
   Insn 810(l0): point = 55
   Insn 809(l0): point = 57
   Insn 807(l0): point = 60
   Insn 806(l0): point = 62
   Insn 805(l0): point = 64
   Insn 804(l0): point = 66
   Insn 802(l0): point = 69
   Insn 801(l0): point = 71
   Insn 800(l0): point = 73
   Insn 799(l0): point = 75
   Insn 798(l0): point = 77
   Insn 795(l0): point = 80
   Insn 794(l0): point = 82
   Insn 793(l0): point = 84
   Insn 789(l0): point = 86
   Insn 788(l0): point = 88
   Insn 787(l0): point = 90
   Insn 892(l0): point = 93
   Insn 782(l0): point = 95
   Insn 781(l0): point = 97
   Insn 780(l0): point = 99
   Insn 776(l0): point = 101
   Insn 775(l0): point = 103
   Insn 774(l0): point = 105
   Insn 773(l0): point = 107
   Insn 771(l0): point = 110
   Insn 770(l0): point = 112
   Insn 769(l0): point = 114
   Insn 768(l0): point = 116
   Insn 767(l0): point = 118
   Insn 766(l0): point = 120
   Insn 765(l0): point = 122
   Insn 890(l0): point = 125
   Insn 760(l0): point = 127
   Insn 759(l0): point = 129
   Insn 758(l0): point = 131
   Insn 754(l0): point = 133
   Insn 753(l0): point = 135
   Insn 752(l0): point = 137
   Insn 751(l0): point = 139
   Insn 749(l0): point = 142
   Insn 748(l0): point = 144
   Insn 747(l0): point = 146
   Insn 746(l0): point = 148
   Insn 745(l0): point = 150
   Insn 744(l0): point = 152
   Insn 743(l0): point = 154
   Insn 888(l0): point = 157
   Insn 736(l0): point = 159
   Insn 735(l0): point = 161
   Insn 734(l0): point = 163
   Insn 730(l0): point = 165
   Insn 729(l0): point = 167
   Insn 728(l0): point = 169
   Insn 727(l0): point = 171
   Insn 886(l0): point = 174
   Insn 722(l0): point = 176
   Insn 721(l0): point = 178
   Insn 720(l0): point = 180
   Insn 716(l0): point = 182
   Insn 715(l0): point = 184
   Insn 714(l0): point = 186
   Insn 713(l0): point = 188
   Insn 711(l0): point = 191
   Insn 710(l0): point = 193
   Insn 709(l0): point = 195
   Insn 708(l0): point = 197
   Insn 707(l0): point = 199
   Insn 706(l0): point = 201
   Insn 705(l0): point = 203
   Insn 884(l0): point = 206
   Insn 700(l0): point = 208
   Insn 699(l0): point = 210
   Insn 698(l0): point = 212
   Insn 694(l0): point = 214
   Insn 693(l0): point = 216
   Insn 692(l0): point = 218
   Insn 691(l0): point = 220
   Insn 689(l0): point = 223
   Insn 688(l0): point = 225
   Insn 687(l0): point = 227
   Insn 686(l0): point = 229
   Insn 685(l0): point = 231
   Insn 684(l0): point = 233
   Insn 683(l0): point = 235
   Insn 681(l0): point = 238
   Insn 680(l0): point = 240
   Insn 679(l0): point = 242
   Insn 678(l0): point = 244
   Insn 677(l0): point = 246
   Insn 676(l0): point = 248
   Insn 675(l0): point = 250
   Insn 674(l0): point = 252
   Insn 671(l0): point = 255
   Insn 670(l0): point = 257
   Insn 668(l0): point = 260
   Insn 667(l0): point = 262
   Insn 664(l0): point = 265
   Insn 663(l0): point = 267
   Insn 662(l0): point = 269
   Insn 660(l0): point = 272
   Insn 659(l0): point = 274
   Insn 656(l0): point = 277
   Insn 655(l0): point = 279
   Insn 654(l0): point = 281
   Insn 653(l0): point = 283
   Insn 652(l0): point = 285
   Insn 651(l0): point = 287
   Insn 649(l0): point = 290
   Insn 648(l0): point = 292
   Insn 647(l0): point = 294
   Insn 646(l0): point = 296
   Insn 645(l0): point = 298
   Insn 644(l0): point = 300
   Insn 643(l0): point = 302
   Insn 642(l0): point = 304
   Insn 641(l0): point = 306
   Insn 640(l0): point = 308
   Insn 639(l0): point = 310
   Insn 637(l0): point = 313
   Insn 636(l0): point = 315
   Insn 635(l0): point = 317
   Insn 634(l0): point = 319
   Insn 633(l0): point = 321
   Insn 632(l0): point = 323
   Insn 631(l0): point = 325
   Insn 630(l0): point = 327
   Insn 627(l0): point = 330
   Insn 626(l0): point = 332
   Insn 625(l0): point = 334
   Insn 621(l0): point = 336
   Insn 620(l0): point = 338
   Insn 619(l0): point = 340
   Insn 882(l0): point = 343
   Insn 614(l0): point = 345
   Insn 613(l0): point = 347
   Insn 612(l0): point = 349
   Insn 608(l0): point = 351
   Insn 607(l0): point = 353
   Insn 606(l0): point = 355
   Insn 605(l0): point = 357
   Insn 603(l0): point = 360
   Insn 602(l0): point = 362
   Insn 601(l0): point = 364
   Insn 600(l0): point = 366
   Insn 599(l0): point = 368
   Insn 598(l0): point = 370
   Insn 597(l0): point = 372
   Insn 880(l0): point = 375
   Insn 592(l0): point = 377
   Insn 591(l0): point = 379
   Insn 590(l0): point = 381
   Insn 586(l0): point = 383
   Insn 585(l0): point = 385
   Insn 584(l0): point = 387
   Insn 583(l0): point = 389
   Insn 581(l0): point = 392
   Insn 580(l0): point = 394
   Insn 579(l0): point = 396
   Insn 578(l0): point = 398
   Insn 577(l0): point = 400
   Insn 576(l0): point = 402
   Insn 575(l0): point = 404
   Insn 878(l0): point = 407
   Insn 568(l0): point = 409
   Insn 567(l0): point = 411
   Insn 566(l0): point = 413
   Insn 562(l0): point = 415
   Insn 561(l0): point = 417
   Insn 560(l0): point = 419
   Insn 559(l0): point = 421
   Insn 876(l0): point = 424
   Insn 554(l0): point = 426
   Insn 553(l0): point = 428
   Insn 552(l0): point = 430
   Insn 548(l0): point = 432
   Insn 547(l0): point = 434
   Insn 546(l0): point = 436
   Insn 545(l0): point = 438
   Insn 543(l0): point = 441
   Insn 542(l0): point = 443
   Insn 541(l0): point = 445
   Insn 540(l0): point = 447
   Insn 539(l0): point = 449
   Insn 538(l0): point = 451
   Insn 537(l0): point = 453
   Insn 874(l0): point = 456
   Insn 532(l0): point = 458
   Insn 531(l0): point = 460
   Insn 530(l0): point = 462
   Insn 526(l0): point = 464
   Insn 525(l0): point = 466
   Insn 524(l0): point = 468
   Insn 523(l0): point = 470
   Insn 521(l0): point = 473
   Insn 520(l0): point = 475
   Insn 519(l0): point = 477
   Insn 518(l0): point = 479
   Insn 517(l0): point = 481
   Insn 516(l0): point = 483
   Insn 515(l0): point = 485
   Insn 513(l0): point = 488
   Insn 512(l0): point = 490
   Insn 511(l0): point = 492
   Insn 510(l0): point = 494
   Insn 509(l0): point = 496
   Insn 508(l0): point = 498
   Insn 507(l0): point = 500
   Insn 504(l0): point = 503
   Insn 503(l0): point = 505
   Insn 501(l0): point = 508
   Insn 500(l0): point = 510
   Insn 477(l0): point = 513
   Insn 476(l0): point = 515
   Insn 872(l0): point = 518
   Insn 494(l0): point = 520
   Insn 493(l0): point = 522
   Insn 492(l0): point = 524
   Insn 491(l0): point = 526
   Insn 490(l0): point = 528
   Insn 489(l0): point = 530
   Insn 488(l0): point = 532
   Insn 487(l0): point = 534
   Insn 486(l0): point = 536
   Insn 485(l0): point = 538
   Insn 484(l0): point = 540
   Insn 483(l0): point = 542
   Insn 482(l0): point = 544
   Insn 481(l0): point = 546
   Insn 480(l0): point = 548
   Insn 479(l0): point = 550
   Insn 474(l0): point = 553
   Insn 472(l0): point = 556
   Insn 471(l0): point = 558
   Insn 470(l0): point = 560
   Insn 447(l0): point = 563
   Insn 446(l0): point = 565
   Insn 870(l0): point = 568
   Insn 464(l0): point = 570
   Insn 463(l0): point = 572
   Insn 462(l0): point = 574
   Insn 461(l0): point = 576
   Insn 460(l0): point = 578
   Insn 459(l0): point = 580
   Insn 458(l0): point = 582
   Insn 457(l0): point = 584
   Insn 456(l0): point = 586
   Insn 455(l0): point = 588
   Insn 454(l0): point = 590
   Insn 453(l0): point = 592
   Insn 452(l0): point = 594
   Insn 451(l0): point = 596
   Insn 450(l0): point = 598
   Insn 449(l0): point = 600
   Insn 444(l0): point = 603
   Insn 421(l0): point = 606
   Insn 420(l0): point = 608
   Insn 868(l0): point = 611
   Insn 438(l0): point = 613
   Insn 437(l0): point = 615
   Insn 436(l0): point = 617
   Insn 435(l0): point = 619
   Insn 434(l0): point = 621
   Insn 433(l0): point = 623
   Insn 432(l0): point = 625
   Insn 431(l0): point = 627
   Insn 430(l0): point = 629
   Insn 429(l0): point = 631
   Insn 428(l0): point = 633
   Insn 427(l0): point = 635
   Insn 426(l0): point = 637
   Insn 425(l0): point = 639
   Insn 424(l0): point = 641
   Insn 423(l0): point = 643
   Insn 418(l0): point = 646
   Insn 416(l0): point = 649
   Insn 415(l0): point = 651
   Insn 414(l0): point = 653
   Insn 413(l0): point = 655
   Insn 412(l0): point = 657
   Insn 411(l0): point = 659
   Insn 410(l0): point = 661
   Insn 408(l0): point = 664
   Insn 407(l0): point = 666
   Insn 406(l0): point = 668
   Insn 383(l0): point = 671
   Insn 382(l0): point = 673
   Insn 866(l0): point = 676
   Insn 400(l0): point = 678
   Insn 399(l0): point = 680
   Insn 398(l0): point = 682
   Insn 397(l0): point = 684
   Insn 396(l0): point = 686
   Insn 395(l0): point = 688
   Insn 394(l0): point = 690
   Insn 393(l0): point = 692
   Insn 392(l0): point = 694
   Insn 391(l0): point = 696
   Insn 390(l0): point = 698
   Insn 389(l0): point = 700
   Insn 388(l0): point = 702
   Insn 387(l0): point = 704
   Insn 386(l0): point = 706
   Insn 385(l0): point = 708
   Insn 380(l0): point = 711
   Insn 378(l0): point = 714
   Insn 377(l0): point = 716
   Insn 376(l0): point = 718
   Insn 353(l0): point = 721
   Insn 352(l0): point = 723
   Insn 864(l0): point = 726
   Insn 370(l0): point = 728
   Insn 369(l0): point = 730
   Insn 368(l0): point = 732
   Insn 367(l0): point = 734
   Insn 366(l0): point = 736
   Insn 365(l0): point = 738
   Insn 364(l0): point = 740
   Insn 363(l0): point = 742
   Insn 362(l0): point = 744
   Insn 361(l0): point = 746
   Insn 360(l0): point = 748
   Insn 359(l0): point = 750
   Insn 358(l0): point = 752
   Insn 357(l0): point = 754
   Insn 356(l0): point = 756
   Insn 355(l0): point = 758
   Insn 350(l0): point = 761
   Insn 327(l0): point = 764
   Insn 326(l0): point = 766
   Insn 862(l0): point = 769
   Insn 344(l0): point = 771
   Insn 343(l0): point = 773
   Insn 342(l0): point = 775
   Insn 341(l0): point = 777
   Insn 340(l0): point = 779
   Insn 339(l0): point = 781
   Insn 338(l0): point = 783
   Insn 337(l0): point = 785
   Insn 336(l0): point = 787
   Insn 335(l0): point = 789
   Insn 334(l0): point = 791
   Insn 333(l0): point = 793
   Insn 332(l0): point = 795
   Insn 331(l0): point = 797
   Insn 330(l0): point = 799
   Insn 329(l0): point = 801
   Insn 324(l0): point = 804
   Insn 322(l0): point = 807
   Insn 321(l0): point = 809
   Insn 320(l0): point = 811
   Insn 319(l0): point = 813
   Insn 318(l0): point = 815
   Insn 317(l0): point = 817
   Insn 316(l0): point = 819
   Insn 314(l0): point = 822
   Insn 313(l0): point = 824
   Insn 312(l0): point = 826
   Insn 310(l0): point = 829
   Insn 309(l0): point = 831
   Insn 308(l0): point = 833
   Insn 307(l0): point = 835
   Insn 306(l0): point = 837
   Insn 305(l0): point = 839
   Insn 304(l0): point = 841
   Insn 281(l0): point = 844
   Insn 280(l0): point = 846
   Insn 860(l0): point = 849
   Insn 298(l0): point = 851
   Insn 297(l0): point = 853
   Insn 296(l0): point = 855
   Insn 295(l0): point = 857
   Insn 294(l0): point = 859
   Insn 293(l0): point = 861
   Insn 292(l0): point = 863
   Insn 291(l0): point = 865
   Insn 290(l0): point = 867
   Insn 289(l0): point = 869
   Insn 288(l0): point = 871
   Insn 287(l0): point = 873
   Insn 286(l0): point = 875
   Insn 285(l0): point = 877
   Insn 284(l0): point = 879
   Insn 283(l0): point = 881
   Insn 278(l0): point = 884
   Insn 276(l0): point = 887
   Insn 275(l0): point = 889
   Insn 274(l0): point = 891
   Insn 251(l0): point = 894
   Insn 250(l0): point = 896
   Insn 858(l0): point = 899
   Insn 268(l0): point = 901
   Insn 267(l0): point = 903
   Insn 266(l0): point = 905
   Insn 265(l0): point = 907
   Insn 264(l0): point = 909
   Insn 263(l0): point = 911
   Insn 262(l0): point = 913
   Insn 261(l0): point = 915
   Insn 260(l0): point = 917
   Insn 259(l0): point = 919
   Insn 258(l0): point = 921
   Insn 257(l0): point = 923
   Insn 256(l0): point = 925
   Insn 255(l0): point = 927
   Insn 254(l0): point = 929
   Insn 253(l0): point = 931
   Insn 248(l0): point = 934
   Insn 225(l0): point = 937
   Insn 224(l0): point = 939
   Insn 856(l0): point = 942
   Insn 242(l0): point = 944
   Insn 241(l0): point = 946
   Insn 240(l0): point = 948
   Insn 239(l0): point = 950
   Insn 238(l0): point = 952
   Insn 237(l0): point = 954
   Insn 236(l0): point = 956
   Insn 235(l0): point = 958
   Insn 234(l0): point = 960
   Insn 233(l0): point = 962
   Insn 232(l0): point = 964
   Insn 231(l0): point = 966
   Insn 230(l0): point = 968
   Insn 229(l0): point = 970
   Insn 228(l0): point = 972
   Insn 227(l0): point = 974
   Insn 222(l0): point = 977
   Insn 220(l0): point = 980
   Insn 219(l0): point = 982
   Insn 218(l0): point = 984
   Insn 217(l0): point = 986
   Insn 216(l0): point = 988
   Insn 215(l0): point = 990
   Insn 214(l0): point = 992
   Insn 212(l0): point = 995
   Insn 211(l0): point = 997
   Insn 210(l0): point = 999
   Insn 187(l0): point = 1002
   Insn 186(l0): point = 1004
   Insn 854(l0): point = 1007
   Insn 204(l0): point = 1009
   Insn 203(l0): point = 1011
   Insn 202(l0): point = 1013
   Insn 201(l0): point = 1015
   Insn 200(l0): point = 1017
   Insn 199(l0): point = 1019
   Insn 198(l0): point = 1021
   Insn 197(l0): point = 1023
   Insn 196(l0): point = 1025
   Insn 195(l0): point = 1027
   Insn 194(l0): point = 1029
   Insn 193(l0): point = 1031
   Insn 192(l0): point = 1033
   Insn 191(l0): point = 1035
   Insn 190(l0): point = 1037
   Insn 189(l0): point = 1039
   Insn 184(l0): point = 1042
   Insn 182(l0): point = 1045
   Insn 181(l0): point = 1047
   Insn 180(l0): point = 1049
   Insn 157(l0): point = 1052
   Insn 156(l0): point = 1054
   Insn 852(l0): point = 1057
   Insn 174(l0): point = 1059
   Insn 173(l0): point = 1061
   Insn 172(l0): point = 1063
   Insn 171(l0): point = 1065
   Insn 170(l0): point = 1067
   Insn 169(l0): point = 1069
   Insn 168(l0): point = 1071
   Insn 167(l0): point = 1073
   Insn 166(l0): point = 1075
   Insn 165(l0): point = 1077
   Insn 164(l0): point = 1079
   Insn 163(l0): point = 1081
   Insn 162(l0): point = 1083
   Insn 161(l0): point = 1085
   Insn 160(l0): point = 1087
   Insn 159(l0): point = 1089
   Insn 154(l0): point = 1092
   Insn 131(l0): point = 1095
   Insn 130(l0): point = 1097
   Insn 850(l0): point = 1100
   Insn 148(l0): point = 1102
   Insn 147(l0): point = 1104
   Insn 146(l0): point = 1106
   Insn 145(l0): point = 1108
   Insn 144(l0): point = 1110
   Insn 143(l0): point = 1112
   Insn 142(l0): point = 1114
   Insn 141(l0): point = 1116
   Insn 140(l0): point = 1118
   Insn 139(l0): point = 1120
   Insn 138(l0): point = 1122
   Insn 137(l0): point = 1124
   Insn 136(l0): point = 1126
   Insn 135(l0): point = 1128
   Insn 134(l0): point = 1130
   Insn 133(l0): point = 1132
   Insn 128(l0): point = 1135
   Insn 126(l0): point = 1138
   Insn 125(l0): point = 1140
   Insn 124(l0): point = 1142
   Insn 123(l0): point = 1144
   Insn 122(l0): point = 1146
   Insn 121(l0): point = 1148
   Insn 120(l0): point = 1150
   Insn 118(l0): point = 1153
   Insn 117(l0): point = 1155
   Insn 116(l0): point = 1157
   Insn 114(l0): point = 1160
   Insn 113(l0): point = 1162
   Insn 112(l0): point = 1164
   Insn 111(l0): point = 1166
   Insn 110(l0): point = 1168
   Insn 109(l0): point = 1170
   Insn 108(l0): point = 1172
   Insn 85(l0): point = 1175
   Insn 84(l0): point = 1177
   Insn 848(l0): point = 1180
   Insn 102(l0): point = 1182
   Insn 101(l0): point = 1184
   Insn 100(l0): point = 1186
   Insn 99(l0): point = 1188
   Insn 98(l0): point = 1190
   Insn 97(l0): point = 1192
   Insn 96(l0): point = 1194
   Insn 95(l0): point = 1196
   Insn 94(l0): point = 1198
   Insn 93(l0): point = 1200
   Insn 92(l0): point = 1202
   Insn 91(l0): point = 1204
   Insn 90(l0): point = 1206
   Insn 89(l0): point = 1208
   Insn 88(l0): point = 1210
   Insn 87(l0): point = 1212
   Insn 82(l0): point = 1215
   Insn 80(l0): point = 1218
   Insn 79(l0): point = 1220
   Insn 78(l0): point = 1222
   Insn 55(l0): point = 1225
   Insn 54(l0): point = 1227
   Insn 846(l0): point = 1230
   Insn 72(l0): point = 1232
   Insn 71(l0): point = 1234
   Insn 70(l0): point = 1236
   Insn 69(l0): point = 1238
   Insn 68(l0): point = 1240
   Insn 67(l0): point = 1242
   Insn 66(l0): point = 1244
   Insn 65(l0): point = 1246
   Insn 64(l0): point = 1248
   Insn 63(l0): point = 1250
   Insn 62(l0): point = 1252
   Insn 61(l0): point = 1254
   Insn 60(l0): point = 1256
   Insn 59(l0): point = 1258
   Insn 58(l0): point = 1260
   Insn 57(l0): point = 1262
   Insn 52(l0): point = 1265
   Insn 50(l0): point = 1268
   Insn 49(l0): point = 1270
   Insn 48(l0): point = 1272
   Insn 47(l0): point = 1274
   Insn 46(l0): point = 1276
   Insn 45(l0): point = 1278
   Insn 44(l0): point = 1280
   Insn 43(l0): point = 1282
   Insn 42(l0): point = 1284
   Insn 41(l0): point = 1286
   Insn 40(l0): point = 1288
   Insn 39(l0): point = 1290
   Insn 38(l0): point = 1292
   Insn 37(l0): point = 1294
   Insn 36(l0): point = 1296
   Insn 35(l0): point = 1298
   Insn 34(l0): point = 1300
   Insn 33(l0): point = 1302
   Insn 32(l0): point = 1304
   Insn 31(l0): point = 1306
   Insn 30(l0): point = 1308
   Insn 29(l0): point = 1310
   Insn 28(l0): point = 1312
   Insn 27(l0): point = 1314
   Insn 26(l0): point = 1316
   Insn 25(l0): point = 1318
   Insn 24(l0): point = 1320
   Insn 23(l0): point = 1322
   Insn 22(l0): point = 1324
   Insn 21(l0): point = 1326
   Insn 20(l0): point = 1328
   Insn 19(l0): point = 1330
   Insn 18(l0): point = 1332
   Insn 17(l0): point = 1334
   Insn 16(l0): point = 1336
   Insn 15(l0): point = 1338
   Insn 14(l0): point = 1340
   Insn 13(l0): point = 1342
   Insn 12(l0): point = 1344
   Insn 11(l0): point = 1346
   Insn 10(l0): point = 1348
   Insn 7(l0): point = 1350
   Insn 4(l0): point = 1352
   Insn 5(l0): point = 1354
   Insn 3(l0): point = 1356
   Insn 2(l0): point = 1358
 a0(r433): [15..16]
 a1(r256): [27..32]
 a2(r432): [29..30]
 a3(r431): [33..34]
 a4(r255): [40..41]
 a5(r254): [46..47]
 a6(r253): [52..55]
 a7(r430): [56..57]
 a8(r252): [63..64]
 a9(r429): [65..66]
 a10(r428): [74..77]
 a11(r426): [81..82]
 a12(r427): [83..84]
 a13(r423): [83..86]
 a14(r422): [87..88]
 a15(r251): [89..90]
 a16(r420): [96..97]
 a17(r421): [98..99]
 a18(r417): [98..101]
 a19(r416): [102..103]
 a20(r250): [104..105]
 a21(r249): [106..107]
 a22(r248): [113..114]
 a23(r415): [119..122]
 a24(r413): [128..129]
 a25(r414): [130..131]
 a26(r410): [130..133]
 a27(r409): [134..135]
 a28(r247): [136..137]
 a29(r246): [138..139]
 a30(r245): [145..146]
 a31(r408): [151..154]
 a32(r406): [160..161]
 a33(r407): [162..163]
 a34(r403): [162..165]
 a35(r402): [166..167]
 a36(r244): [168..169]
 a37(r243): [170..171]
 a38(r400): [177..178]
 a39(r401): [179..180]
 a40(r397): [179..182]
 a41(r396): [183..184]
 a42(r242): [185..186]
 a43(r241): [187..188]
 a44(r240): [194..195]
 a45(r395): [200..203]
 a46(r393): [209..210]
 a47(r394): [211..212]
 a48(r390): [211..214]
 a49(r389): [215..216]
 a50(r239): [217..218]
 a51(r238): [219..220]
 a52(r237): [226..227]
 a53(r388): [232..235]
 a54(r236): [241..242]
 a55(r387): [247..250]
 a56(r386): [268..269]
 a57(r235): [280..285]
 a58(r385): [282..283]
 a59(r384): [286..287]
 a60(r234): [293..294]
 a61(r233): [299..300]
 a62(r232): [305..308]
 a63(r383): [309..310]
 a64(r231): [316..317]
 a65(r382): [318..319]
 a66(r381): [322..327]
 a67(r379): [331..332]
 a68(r380): [333..334]
 a69(r376): [333..336]
 a70(r375): [337..338]
 a71(r230): [339..340]
 a72(r373): [346..347]
 a73(r374): [348..349]
 a74(r370): [348..351]
 a75(r369): [352..353]
 a76(r229): [354..355]
 a77(r228): [356..357]
 a78(r227): [363..364]
 a79(r368): [369..372]
 a80(r366): [378..379]
 a81(r367): [380..381]
 a82(r363): [380..383]
 a83(r362): [384..385]
 a84(r226): [386..387]
 a85(r225): [388..389]
 a86(r224): [395..396]
 a87(r361): [401..404]
 a88(r359): [410..411]
 a89(r360): [412..413]
 a90(r356): [412..415]
 a91(r355): [416..417]
 a92(r223): [418..419]
 a93(r222): [420..421]
 a94(r353): [427..428]
 a95(r354): [429..430]
 a96(r350): [429..432]
 a97(r349): [433..434]
 a98(r221): [435..436]
 a99(r220): [437..438]
 a100(r219): [444..445]
 a101(r348): [450..453]
 a102(r346): [459..460]
 a103(r347): [461..462]
 a104(r343): [461..464]
 a105(r342): [465..466]
 a106(r218): [467..468]
 a107(r217): [469..470]
 a108(r216): [476..477]
 a109(r341): [482..485]
 a110(r215): [491..492]
 a111(r340): [497..500]
 a112(r338): [523..524]
 a113(r214): [523..528]
 a114(r339): [525..526]
 a115(r213): [529..530]
 a116(r212): [535..536]
 a117(r211): [537..538]
 a118(r337): [539..540]
 a119(r336): [539..542]
 a120(r210): [541..544]
 a121(r209): [545..546]
 a122(r208): [545..550]
 a123(r335): [547..548]
 a124(r207): [559..560]
 a125(r333): [573..574]
 a126(r199): [573..578]
 a127(r334): [575..576]
 a128(r198): [579..580]
 a129(r197): [585..586]
 a130(r196): [587..588]
 a131(r332): [589..590]
 a132(r331): [589..592]
 a133(r195): [591..594]
 a134(r194): [595..596]
 a135(r193): [595..600]
 a136(r330): [597..598]
 a137(r328): [616..617]
 a138(r206): [616..621]
 a139(r329): [618..619]
 a140(r205): [622..623]
 a141(r204): [628..629]
 a142(r203): [630..631]
 a143(r327): [632..633]
 a144(r326): [632..635]
 a145(r202): [634..637]
 a146(r201): [638..639]
 a147(r200): [638..643]
 a148(r325): [640..641]
 a149(r192): [652..653]
 a150(r324): [654..655]
 a151(r323): [654..657]
 a152(r191): [656..659]
 a153(r190): [660..661]
 a154(r189): [667..668]
 a155(r321): [681..682]
 a156(r171): [681..686]
 a157(r322): [683..684]
 a158(r170): [687..688]
 a159(r169): [693..694]
 a160(r168): [695..696]
 a161(r320): [697..698]
 a162(r319): [697..700]
 a163(r167): [699..702]
 a164(r166): [703..704]
 a165(r165): [703..708]
 a166(r318): [705..706]
 a167(r164): [717..718]
 a168(r316): [731..732]
 a169(r181): [731..736]
 a170(r317): [733..734]
 a171(r180): [737..738]
 a172(r179): [743..744]
 a173(r178): [745..746]
 a174(r315): [747..748]
 a175(r314): [747..750]
 a176(r177): [749..752]
 a177(r176): [753..754]
 a178(r175): [753..758]
 a179(r313): [755..756]
 a180(r311): [774..775]
 a181(r188): [774..779]
 a182(r312): [776..777]
 a183(r187): [780..781]
 a184(r186): [786..787]
 a185(r185): [788..789]
 a186(r310): [790..791]
 a187(r309): [790..793]
 a188(r184): [792..795]
 a189(r183): [796..797]
 a190(r182): [796..801]
 a191(r308): [798..799]
 a192(r174): [810..811]
 a193(r307): [812..813]
 a194(r306): [812..815]
 a195(r173): [814..817]
 a196(r172): [818..819]
 a197(r163): [825..826]
 a198(r162): [832..833]
 a199(r305): [838..841]
 a200(r303): [854..855]
 a201(r161): [854..859]
 a202(r304): [856..857]
 a203(r160): [860..861]
 a204(r159): [866..867]
 a205(r158): [868..869]
 a206(r302): [870..871]
 a207(r301): [870..873]
 a208(r157): [872..875]
 a209(r156): [876..877]
 a210(r155): [876..881]
 a211(r300): [878..879]
 a212(r154): [890..891]
 a213(r298): [904..905]
 a214(r146): [904..909]
 a215(r299): [906..907]
 a216(r145): [910..911]
 a217(r144): [916..917]
 a218(r143): [918..919]
 a219(r297): [920..921]
 a220(r296): [920..923]
 a221(r142): [922..925]
 a222(r141): [926..927]
 a223(r140): [926..931]
 a224(r295): [928..929]
 a225(r293): [947..948]
 a226(r153): [947..952]
 a227(r294): [949..950]
 a228(r152): [953..954]
 a229(r151): [959..960]
 a230(r150): [961..962]
 a231(r292): [963..964]
 a232(r291): [963..966]
 a233(r149): [965..968]
 a234(r148): [969..970]
 a235(r147): [969..974]
 a236(r290): [971..972]
 a237(r139): [983..984]
 a238(r289): [985..986]
 a239(r288): [985..988]
 a240(r138): [987..990]
 a241(r137): [991..992]
 a242(r136): [998..999]
 a243(r286): [1012..1013]
 a244(r118): [1012..1017]
 a245(r287): [1014..1015]
 a246(r117): [1018..1019]
 a247(r116): [1024..1025]
 a248(r115): [1026..1027]
 a249(r285): [1028..1029]
 a250(r284): [1028..1031]
 a251(r114): [1030..1033]
 a252(r113): [1034..1035]
 a253(r112): [1034..1039]
 a254(r283): [1036..1037]
 a255(r111): [1048..1049]
 a256(r281): [1062..1063]
 a257(r128): [1062..1067]
 a258(r282): [1064..1065]
 a259(r127): [1068..1069]
 a260(r126): [1074..1075]
 a261(r125): [1076..1077]
 a262(r280): [1078..1079]
 a263(r279): [1078..1081]
 a264(r124): [1080..1083]
 a265(r123): [1084..1085]
 a266(r122): [1084..1089]
 a267(r278): [1086..1087]
 a268(r276): [1105..1106]
 a269(r135): [1105..1110]
 a270(r277): [1107..1108]
 a271(r134): [1111..1112]
 a272(r133): [1117..1118]
 a273(r132): [1119..1120]
 a274(r275): [1121..1122]
 a275(r274): [1121..1124]
 a276(r131): [1123..1126]
 a277(r130): [1127..1128]
 a278(r129): [1127..1132]
 a279(r273): [1129..1130]
 a280(r121): [1141..1142]
 a281(r272): [1143..1144]
 a282(r271): [1143..1146]
 a283(r120): [1145..1148]
 a284(r119): [1149..1150]
 a285(r110): [1156..1157]
 a286(r109): [1163..1164]
 a287(r270): [1169..1172]
 a288(r268): [1185..1186]
 a289(r108): [1185..1190]
 a290(r269): [1187..1188]
 a291(r107): [1191..1192]
 a292(r106): [1197..1198]
 a293(r105): [1199..1200]
 a294(r267): [1201..1202]
 a295(r266): [1201..1204]
 a296(r104): [1203..1206]
 a297(r103): [1207..1208]
 a298(r102): [1207..1212]
 a299(r265): [1209..1210]
 a300(r101): [1221..1222]
 a301(r263): [1235..1236]
 a302(r100): [1235..1240]
 a303(r264): [1237..1238]
 a304(r99): [1241..1242]
 a305(r98): [1247..1248]
 a306(r97): [1249..1250]
 a307(r262): [1251..1252]
 a308(r261): [1251..1254]
 a309(r96): [1253..1256]
 a310(r95): [1257..1258]
 a311(r94): [1257..1262]
 a312(r260): [1259..1260]
 a313(r93): [1271..1272]
 a314(r92): [1275..1276]
 a315(r91): [1277..1278]
 a316(r90): [1283..1284]
 a317(r259): [1285..1286]
 a318(r89): [1289..1290]
 a319(r88): [1291..1292]
 a320(r87): [1297..1298]
 a321(r258): [1299..1300]
 a322(r257): [1353..1356]
Compressing live ranges: from 1361 to 526 - 38%
Ranges after the compression:
 a0(r433): [0..1]
 a1(r256): [2..3]
 a2(r432): [2..3]
 a3(r431): [4..5]
 a4(r255): [6..7]
 a5(r254): [8..9]
 a6(r253): [10..11]
 a7(r430): [12..13]
 a8(r252): [14..15]
 a9(r429): [16..17]
 a10(r428): [18..19]
 a11(r426): [20..21]
 a12(r427): [22..23]
 a13(r423): [22..23]
 a14(r422): [24..25]
 a15(r251): [26..27]
 a16(r420): [28..29]
 a17(r421): [30..31]
 a18(r417): [30..31]
 a19(r416): [32..33]
 a20(r250): [34..35]
 a21(r249): [36..37]
 a22(r248): [38..39]
 a23(r415): [40..41]
 a24(r413): [42..43]
 a25(r414): [44..45]
 a26(r410): [44..45]
 a27(r409): [46..47]
 a28(r247): [48..49]
 a29(r246): [50..51]
 a30(r245): [52..53]
 a31(r408): [54..55]
 a32(r406): [56..57]
 a33(r407): [58..59]
 a34(r403): [58..59]
 a35(r402): [60..61]
 a36(r244): [62..63]
 a37(r243): [64..65]
 a38(r400): [66..67]
 a39(r401): [68..69]
 a40(r397): [68..69]
 a41(r396): [70..71]
 a42(r242): [72..73]
 a43(r241): [74..75]
 a44(r240): [76..77]
 a45(r395): [78..79]
 a46(r393): [80..81]
 a47(r394): [82..83]
 a48(r390): [82..83]
 a49(r389): [84..85]
 a50(r239): [86..87]
 a51(r238): [88..89]
 a52(r237): [90..91]
 a53(r388): [92..93]
 a54(r236): [94..95]
 a55(r387): [96..97]
 a56(r386): [98..99]
 a57(r235): [100..101]
 a58(r385): [100..101]
 a59(r384): [102..103]
 a60(r234): [104..105]
 a61(r233): [106..107]
 a62(r232): [108..109]
 a63(r383): [110..111]
 a64(r231): [112..113]
 a65(r382): [114..115]
 a66(r381): [116..117]
 a67(r379): [118..119]
 a68(r380): [120..121]
 a69(r376): [120..121]
 a70(r375): [122..123]
 a71(r230): [124..125]
 a72(r373): [126..127]
 a73(r374): [128..129]
 a74(r370): [128..129]
 a75(r369): [130..131]
 a76(r229): [132..133]
 a77(r228): [134..135]
 a78(r227): [136..137]
 a79(r368): [138..139]
 a80(r366): [140..141]
 a81(r367): [142..143]
 a82(r363): [142..143]
 a83(r362): [144..145]
 a84(r226): [146..147]
 a85(r225): [148..149]
 a86(r224): [150..151]
 a87(r361): [152..153]
 a88(r359): [154..155]
 a89(r360): [156..157]
 a90(r356): [156..157]
 a91(r355): [158..159]
 a92(r223): [160..161]
 a93(r222): [162..163]
 a94(r353): [164..165]
 a95(r354): [166..167]
 a96(r350): [166..167]
 a97(r349): [168..169]
 a98(r221): [170..171]
 a99(r220): [172..173]
 a100(r219): [174..175]
 a101(r348): [176..177]
 a102(r346): [178..179]
 a103(r347): [180..181]
 a104(r343): [180..181]
 a105(r342): [182..183]
 a106(r218): [184..185]
 a107(r217): [186..187]
 a108(r216): [188..189]
 a109(r341): [190..191]
 a110(r215): [192..193]
 a111(r340): [194..195]
 a112(r338): [196..197]
 a113(r214): [196..199]
 a114(r339): [198..199]
 a115(r213): [200..201]
 a116(r212): [202..203]
 a117(r211): [204..205]
 a118(r337): [206..207]
 a119(r336): [206..209]
 a120(r210): [208..209]
 a121(r209): [210..211]
 a122(r208): [210..213]
 a123(r335): [212..213]
 a124(r207): [214..215]
 a125(r333): [216..217]
 a126(r199): [216..219]
 a127(r334): [218..219]
 a128(r198): [220..221]
 a129(r197): [222..223]
 a130(r196): [224..225]
 a131(r332): [226..227]
 a132(r331): [226..229]
 a133(r195): [228..229]
 a134(r194): [230..231]
 a135(r193): [230..233]
 a136(r330): [232..233]
 a137(r328): [234..235]
 a138(r206): [234..237]
 a139(r329): [236..237]
 a140(r205): [238..239]
 a141(r204): [240..241]
 a142(r203): [242..243]
 a143(r327): [244..245]
 a144(r326): [244..247]
 a145(r202): [246..247]
 a146(r201): [248..249]
 a147(r200): [248..251]
 a148(r325): [250..251]
 a149(r192): [252..253]
 a150(r324): [254..255]
 a151(r323): [254..257]
 a152(r191): [256..257]
 a153(r190): [258..259]
 a154(r189): [260..261]
 a155(r321): [262..263]
 a156(r171): [262..265]
 a157(r322): [264..265]
 a158(r170): [266..267]
 a159(r169): [268..269]
 a160(r168): [270..271]
 a161(r320): [272..273]
 a162(r319): [272..275]
 a163(r167): [274..275]
 a164(r166): [276..277]
 a165(r165): [276..279]
 a166(r318): [278..279]
 a167(r164): [280..281]
 a168(r316): [282..283]
 a169(r181): [282..285]
 a170(r317): [284..285]
 a171(r180): [286..287]
 a172(r179): [288..289]
 a173(r178): [290..291]
 a174(r315): [292..293]
 a175(r314): [292..295]
 a176(r177): [294..295]
 a177(r176): [296..297]
 a178(r175): [296..299]
 a179(r313): [298..299]
 a180(r311): [300..301]
 a181(r188): [300..303]
 a182(r312): [302..303]
 a183(r187): [304..305]
 a184(r186): [306..307]
 a185(r185): [308..309]
 a186(r310): [310..311]
 a187(r309): [310..313]
 a188(r184): [312..313]
 a189(r183): [314..315]
 a190(r182): [314..317]
 a191(r308): [316..317]
 a192(r174): [318..319]
 a193(r307): [320..321]
 a194(r306): [320..323]
 a195(r173): [322..323]
 a196(r172): [324..325]
 a197(r163): [326..327]
 a198(r162): [328..329]
 a199(r305): [330..331]
 a200(r303): [332..333]
 a201(r161): [332..335]
 a202(r304): [334..335]
 a203(r160): [336..337]
 a204(r159): [338..339]
 a205(r158): [340..341]
 a206(r302): [342..343]
 a207(r301): [342..345]
 a208(r157): [344..345]
 a209(r156): [346..347]
 a210(r155): [346..349]
 a211(r300): [348..349]
 a212(r154): [350..351]
 a213(r298): [352..353]
 a214(r146): [352..355]
 a215(r299): [354..355]
 a216(r145): [356..357]
 a217(r144): [358..359]
 a218(r143): [360..361]
 a219(r297): [362..363]
 a220(r296): [362..365]
 a221(r142): [364..365]
 a222(r141): [366..367]
 a223(r140): [366..369]
 a224(r295): [368..369]
 a225(r293): [370..371]
 a226(r153): [370..373]
 a227(r294): [372..373]
 a228(r152): [374..375]
 a229(r151): [376..377]
 a230(r150): [378..379]
 a231(r292): [380..381]
 a232(r291): [380..383]
 a233(r149): [382..383]
 a234(r148): [384..385]
 a235(r147): [384..387]
 a236(r290): [386..387]
 a237(r139): [388..389]
 a238(r289): [390..391]
 a239(r288): [390..393]
 a240(r138): [392..393]
 a241(r137): [394..395]
 a242(r136): [396..397]
 a243(r286): [398..399]
 a244(r118): [398..401]
 a245(r287): [400..401]
 a246(r117): [402..403]
 a247(r116): [404..405]
 a248(r115): [406..407]
 a249(r285): [408..409]
 a250(r284): [408..411]
 a251(r114): [410..411]
 a252(r113): [412..413]
 a253(r112): [412..415]
 a254(r283): [414..415]
 a255(r111): [416..417]
 a256(r281): [418..419]
 a257(r128): [418..421]
 a258(r282): [420..421]
 a259(r127): [422..423]
 a260(r126): [424..425]
 a261(r125): [426..427]
 a262(r280): [428..429]
 a263(r279): [428..431]
 a264(r124): [430..431]
 a265(r123): [432..433]
 a266(r122): [432..435]
 a267(r278): [434..435]
 a268(r276): [436..437]
 a269(r135): [436..439]
 a270(r277): [438..439]
 a271(r134): [440..441]
 a272(r133): [442..443]
 a273(r132): [444..445]
 a274(r275): [446..447]
 a275(r274): [446..449]
 a276(r131): [448..449]
 a277(r130): [450..451]
 a278(r129): [450..453]
 a279(r273): [452..453]
 a280(r121): [454..455]
 a281(r272): [456..457]
 a282(r271): [456..459]
 a283(r120): [458..459]
 a284(r119): [460..461]
 a285(r110): [462..463]
 a286(r109): [464..465]
 a287(r270): [466..467]
 a288(r268): [468..469]
 a289(r108): [468..471]
 a290(r269): [470..471]
 a291(r107): [472..473]
 a292(r106): [474..475]
 a293(r105): [476..477]
 a294(r267): [478..479]
 a295(r266): [478..481]
 a296(r104): [480..481]
 a297(r103): [482..483]
 a298(r102): [482..485]
 a299(r265): [484..485]
 a300(r101): [486..487]
 a301(r263): [488..489]
 a302(r100): [488..491]
 a303(r264): [490..491]
 a304(r99): [492..493]
 a305(r98): [494..495]
 a306(r97): [496..497]
 a307(r262): [498..499]
 a308(r261): [498..501]
 a309(r96): [500..501]
 a310(r95): [502..503]
 a311(r94): [502..505]
 a312(r260): [504..505]
 a313(r93): [506..507]
 a314(r92): [508..509]
 a315(r91): [510..511]
 a316(r90): [512..513]
 a317(r259): [514..515]
 a318(r89): [516..517]
 a319(r88): [518..519]
 a320(r87): [520..521]
 a321(r258): [522..523]
 a322(r257): [524..525]
  regions=1, blocks=101, points=526
    allocnos=323 (big 0), copies=0, conflicts=0, ranges=323
Disposition:
  320:r87  l0     0  319:r88  l0     0  318:r89  l0     0  316:r90  l0     0
  315:r91  l0     0  314:r92  l0     0  313:r93  l0     0  311:r94  l0     0
  310:r95  l0     1  309:r96  l0     0  306:r97  l0     0  305:r98  l0     0
  304:r99  l0     0  302:r100 l0     1  300:r101 l0     0  298:r102 l0     0
  297:r103 l0     1  296:r104 l0     0  293:r105 l0     0  292:r106 l0     0
  291:r107 l0     0  289:r108 l0     1  286:r109 l0     0  285:r110 l0     0
  255:r111 l0     0  253:r112 l0     0  252:r113 l0     1  251:r114 l0     0
  248:r115 l0     0  247:r116 l0     0  246:r117 l0     0  244:r118 l0     1
  284:r119 l0     0  283:r120 l0     0  280:r121 l0     0  266:r122 l0     0
  265:r123 l0     1  264:r124 l0     0  261:r125 l0     0  260:r126 l0     0
  259:r127 l0     0  257:r128 l0     1  278:r129 l0     0  277:r130 l0     1
  276:r131 l0     0  273:r132 l0     0  272:r133 l0     0  271:r134 l0     0
  269:r135 l0     1  242:r136 l0     0  241:r137 l0     0  240:r138 l0     0
  237:r139 l0     0  223:r140 l0     0  222:r141 l0     1  221:r142 l0     0
  218:r143 l0     0  217:r144 l0     0  216:r145 l0     0  214:r146 l0     1
  235:r147 l0     0  234:r148 l0     1  233:r149 l0     0  230:r150 l0     0
  229:r151 l0     0  228:r152 l0     0  226:r153 l0     1  212:r154 l0     0
  210:r155 l0     0  209:r156 l0     1  208:r157 l0     0  205:r158 l0     0
  204:r159 l0     0  203:r160 l0     0  201:r161 l0     1  198:r162 l0     0
  197:r163 l0     0  167:r164 l0     0  165:r165 l0     0  164:r166 l0     1
  163:r167 l0     0  160:r168 l0     0  159:r169 l0     0  158:r170 l0     0
  156:r171 l0     1  196:r172 l0     0  195:r173 l0     0  192:r174 l0     0
  178:r175 l0     0  177:r176 l0     1  176:r177 l0     0  173:r178 l0     0
  172:r179 l0     0  171:r180 l0     0  169:r181 l0     1  190:r182 l0     0
  189:r183 l0     1  188:r184 l0     0  185:r185 l0     0  184:r186 l0     0
  183:r187 l0     0  181:r188 l0     1  154:r189 l0     0  153:r190 l0     0
  152:r191 l0     0  149:r192 l0     0  135:r193 l0     0  134:r194 l0     1
  133:r195 l0     0  130:r196 l0     0  129:r197 l0     0  128:r198 l0     0
  126:r199 l0     1  147:r200 l0     0  146:r201 l0     1  145:r202 l0     0
  142:r203 l0     0  141:r204 l0     0  140:r205 l0     0  138:r206 l0     1
  124:r207 l0     0  122:r208 l0     0  121:r209 l0     1  120:r210 l0     0
  117:r211 l0     0  116:r212 l0     0  115:r213 l0     0  113:r214 l0     1
  110:r215 l0     0  108:r216 l0     0  107:r217 l0     0  106:r218 l0     0
  100:r219 l0     0   99:r220 l0     0   98:r221 l0     0   93:r222 l0     0
   92:r223 l0     0   86:r224 l0     0   85:r225 l0     0   84:r226 l0     0
   78:r227 l0     0   77:r228 l0     0   76:r229 l0     0   71:r230 l0     0
   64:r231 l0     0   62:r232 l0     0   61:r233 l0     0   60:r234 l0     0
   57:r235 l0     1   54:r236 l0     0   52:r237 l0     0   51:r238 l0     0
   50:r239 l0     0   44:r240 l0     0   43:r241 l0     0   42:r242 l0     0
   37:r243 l0     0   36:r244 l0     0   30:r245 l0     0   29:r246 l0     0
   28:r247 l0     0   22:r248 l0     0   21:r249 l0     0   20:r250 l0     0
   15:r251 l0     0    8:r252 l0     0    6:r253 l0     0    5:r254 l0     0
    4:r255 l0     0    1:r256 l0     1  322:r257 l0     0  321:r258 l0     0
  317:r259 l0     0  312:r260 l0     1  308:r261 l0     1  307:r262 l0     0
  301:r263 l0     0  303:r264 l0     0  299:r265 l0     1  295:r266 l0     1
  294:r267 l0     0  288:r268 l0     0  290:r269 l0     0  287:r270 l0     0
  282:r271 l0     1  281:r272 l0     0  279:r273 l0     1  275:r274 l0     1
  274:r275 l0     0  268:r276 l0     0  270:r277 l0     0  267:r278 l0     1
  263:r279 l0     1  262:r280 l0     0  256:r281 l0     0  258:r282 l0     0
  254:r283 l0     1  250:r284 l0     1  249:r285 l0     0  243:r286 l0     0
  245:r287 l0     0  239:r288 l0     1  238:r289 l0     0  236:r290 l0     1
  232:r291 l0     1  231:r292 l0     0  225:r293 l0     0  227:r294 l0     0
  224:r295 l0     1  220:r296 l0     1  219:r297 l0     0  213:r298 l0     0
  215:r299 l0     0  211:r300 l0     1  207:r301 l0     1  206:r302 l0     0
  200:r303 l0     0  202:r304 l0     0  199:r305 l0     0  194:r306 l0     1
  193:r307 l0     0  191:r308 l0     1  187:r309 l0     1  186:r310 l0     0
  180:r311 l0     0  182:r312 l0     0  179:r313 l0     1  175:r314 l0     1
  174:r315 l0     0  168:r316 l0     0  170:r317 l0     0  166:r318 l0     1
  162:r319 l0     1  161:r320 l0     0  155:r321 l0     0  157:r322 l0     0
  151:r323 l0     1  150:r324 l0     0  148:r325 l0     1  144:r326 l0     1
  143:r327 l0     0  137:r328 l0     0  139:r329 l0     0  136:r330 l0     1
  132:r331 l0     1  131:r332 l0     0  125:r333 l0     0  127:r334 l0     0
  123:r335 l0     1  119:r336 l0     1  118:r337 l0     0  112:r338 l0     0
  114:r339 l0     0  111:r340 l0     0  109:r341 l0     0  105:r342 l0     0
  104:r343 l0     1  102:r346 l0     0  103:r347 l0     0  101:r348 l0     0
   97:r349 l0     0   96:r350 l0     1   94:r353 l0     0   95:r354 l0     0
   91:r355 l0     0   90:r356 l0     1   88:r359 l0     0   89:r360 l0     0
   87:r361 l0     0   83:r362 l0     0   82:r363 l0     1   80:r366 l0     0
   81:r367 l0     0   79:r368 l0     0   75:r369 l0     0   74:r370 l0     1
   72:r373 l0     0   73:r374 l0     0   70:r375 l0     0   69:r376 l0     1
   67:r379 l0     0   68:r380 l0     0   66:r381 l0     0   65:r382 l0     0
   63:r383 l0     0   59:r384 l0     0   58:r385 l0     0   56:r386 l0     0
   55:r387 l0     0   53:r388 l0     0   49:r389 l0     0   48:r390 l0     1
   46:r393 l0     0   47:r394 l0     0   45:r395 l0     0   41:r396 l0     0
   40:r397 l0     1   38:r400 l0     0   39:r401 l0     0   35:r402 l0     0
   34:r403 l0     1   32:r406 l0     0   33:r407 l0     0   31:r408 l0     0
   27:r409 l0     0   26:r410 l0     1   24:r413 l0     0   25:r414 l0     0
   23:r415 l0     0   19:r416 l0     0   18:r417 l0     1   16:r420 l0     0
   17:r421 l0     0   14:r422 l0     0   13:r423 l0     1   11:r426 l0     0
   12:r427 l0     0   10:r428 l0     0    9:r429 l0     0    7:r430 l0     0
    3:r431 l0     0    2:r432 l0     0    0:r433 l0     0
+++Costs: overall -67, reg -67, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void check_outfile(IOFiles*, bool, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={36d,30u} r1={36d,1u} r2={36d} r4={52d,17u} r5={70d,35u} r6={1d,100u} r7={1d,135u} r8={35d} r9={35d} r10={35d} r11={35d} r12={35d} r13={35d} r14={35d} r15={35d} r16={1d,99u} r17={190d,54u} r18={35d} r19={35d} r20={1d,349u,34e} r21={36d} r22={36d} r23={36d} r24={36d} r25={36d} r26={36d} r27={36d} r28={36d} r29={35d} r30={35d} r31={35d} r32={35d} r33={35d} r34={35d} r35={35d} r36={35d} r37={36d} r38={36d} r39={35d} r40={35d} r45={35d} r46={35d} r47={35d} r48={35d} r49={35d} r50={35d} r51={35d} r52={35d} r53={35d} r54={35d} r55={35d} r56={35d} r57={35d} r58={35d} r59={35d} r60={35d} r61={35d} r62={35d} r63={35d} r64={35d} r65={35d} r66={35d} r67={35d} r68={35d} r69={35d} r70={35d} r71={35d} r72={35d} r73={35d} r74={35d} r75={35d} r76={35d} r77={35d} r78={35d} r79={35d} r80={35d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u,1e} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u,1e} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u,1e} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u,1e} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u,1e} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u,1e} r379={1d,1u} r380={1d,1u} r381={1d,3u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u,1e} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u,1e} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u,1e} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u,1e} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u,1e} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u,1e} r426={1d,1u} r427={1d,1u} r428={1d,2u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} 
;;    total ref usage 4259{3067d,1146u,46e} in 631{596 regular + 35 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 257 258 259
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
        (reg:DI 5 di [ io_filenames ])) sim2fitman_sup.cpp:482 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ io_filenames ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 257)
        (reg:SI 4 si [ overwrite ])) sim2fitman_sup.cpp:482 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ overwrite ])
        (nil)))
(insn 5 3 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
        (reg:SI 1 dx [ s_u_out ])) sim2fitman_sup.cpp:482 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ s_u_out ])
        (nil)))
(insn 4 5 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A32])
        (subreg:QI (reg:SI 257) 0)) sim2fitman_sup.cpp:482 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(note 6 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6580+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:482 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 found_extension+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:483 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 sup_ext+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 93 {*movqi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -63 [0xffffffffffffffc1])) [0 sup_ext+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 93 {*movqi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -62 [0xffffffffffffffc2])) [0 sup_ext+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 93 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -61 [0xffffffffffffffc3])) [0 sup_ext+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 93 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [0 sup_ext+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 93 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 93 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -47 [0xffffffffffffffd1])) [0 sup_suf+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -46 [0xffffffffffffffd2])) [0 sup_suf+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 93 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -45 [0xffffffffffffffd3])) [0 sup_suf+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 93 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [0 sup_suf+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 93 {*movqi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 uns_ext+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 93 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -31 [0xffffffffffffffe1])) [0 uns_ext+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 93 {*movqi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -30 [0xffffffffffffffe2])) [0 uns_ext+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 93 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -29 [0xffffffffffffffe3])) [0 uns_ext+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 93 {*movqi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 uns_ext+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 93 {*movqi_internal}
     (nil))
(insn 26 25 27 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 93 {*movqi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -15 [0xfffffffffffffff1])) [0 uns_suf+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 93 {*movqi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 uns_suf+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 93 {*movqi_internal}
     (nil))
(insn 29 28 30 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 uns_suf+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 93 {*movqi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 uns_suf+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 93 {*movqi_internal}
     (nil))
(insn 31 30 32 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:491 90 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:491 90 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:494 89 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:496 89 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 87 [ D.6574 ])
                (plus:DI (reg/f:DI 258)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:496 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6574 ])) sim2fitman_sup.cpp:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6574 ])
        (nil)))
(call_insn/i 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7ff9ba9650d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:496 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 2 (set (reg:DI 88 [ D.6575 ])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 2 (set (reg:SI 89 [ D.6576 ])
        (subreg:SI (reg:DI 88 [ D.6575 ]) 0)) sim2fitman_sup.cpp:496 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6575 ])
        (nil)))
(insn 40 39 41 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])
        (reg:SI 89 [ D.6576 ])) sim2fitman_sup.cpp:496 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6576 ])
        (nil)))
(insn 41 40 42 2 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:497 89 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 90 [ D.6574 ])
                (plus:DI (reg/f:DI 259)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:497 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 259)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 768 [0x300]))
                (nil)))))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6574 ])) sim2fitman_sup.cpp:497 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6574 ])
        (nil)))
(call_insn/i 44 43 45 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7ff9ba9650d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:497 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 2 (set (reg:DI 91 [ D.6575 ])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:497 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 46 45 47 2 (set (reg:SI 92 [ D.6576 ])
        (subreg:SI (reg:DI 91 [ D.6575 ]) 0)) sim2fitman_sup.cpp:497 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.6575 ])
        (nil)))
(insn 47 46 48 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])
        (reg:SI 92 [ D.6576 ])) sim2fitman_sup.cpp:497 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6576 ])
        (nil)))
(insn 48 47 49 2 (set (reg:SI 93 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:499 90 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93 [ D.6576 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:499 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.6576 ])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) sim2fitman_sup.cpp:499 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 76)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 73 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:500 90 {*movsi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              5 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 73 52 53 4 78 "" [1 uses])
(note 53 73 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:500 7 {*cmpsi_1}
     (nil))
(jump_insn 55 54 56 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) sim2fitman_sup.cpp:500 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 76)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 96 97 98 99 100 260 261 262 263 264
(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 5 (set (reg:SI 94 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:501 90 {*movsi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:501 90 {*movsi_internal}
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 95 [ D.6576 ])
                (plus:SI (reg:SI 260)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:501 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 60 59 61 5 (parallel [
            (set (reg:SI 96 [ D.6576 ])
                (plus:SI (reg:SI 94 [ D.6576 ])
                    (reg:SI 95 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:501 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 94 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 5 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:501 89 {*movdi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:DI 262)
        (sign_extend:DI (reg:SI 96 [ D.6576 ]))) sim2fitman_sup.cpp:501 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 96 [ D.6576 ])
        (nil)))
(insn 63 62 64 5 (set (reg:QI 97 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 261)
                    (reg:DI 262))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:501 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 262)
        (expr_list:REG_DEAD (reg/f:DI 261)
            (nil))))
(insn 64 63 65 5 (set (reg:SI 98 [ D.6576 ])
        (sign_extend:SI (reg:QI 97 [ D.6577 ]))) sim2fitman_sup.cpp:501 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 97 [ D.6577 ])
        (nil)))
(insn 65 64 66 5 (set (reg:SI 5 di)
        (reg:SI 98 [ D.6576 ])) sim2fitman_sup.cpp:501 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ D.6576 ])
        (nil)))
(call_insn/i 66 65 67 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:501 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 67 66 68 5 (set (reg:SI 99 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:501 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 68 67 69 5 (set (reg:QI 100 [ D.6577 ])
        (subreg:QI (reg:SI 99 [ D.6576 ]) 0)) sim2fitman_sup.cpp:501 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6576 ])
        (nil)))
(insn 69 68 70 5 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:501 90 {*movsi_internal}
     (nil))
(insn 70 69 71 5 (set (reg:DI 263)
        (sign_extend:DI (reg:SI 264))) sim2fitman_sup.cpp:501 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 264)
        (nil)))
(insn 71 70 72 5 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 263))
                (const_int -64 [0xffffffffffffffc0])) [0 sup_ext S1 A8])
        (reg:QI 100 [ D.6577 ])) sim2fitman_sup.cpp:501 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (expr_list:REG_DEAD (reg:QI 100 [ D.6577 ])
            (nil))))
(insn 72 71 846 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:500 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 846 72 847 5 (set (pc)
        (label_ref 73)) sim2fitman_sup.cpp:500 654 {jump}
     (nil)
 -> 73)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 847 846 76)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101
(code_label 76 847 77 6 77 "" [2 uses])
(note 77 76 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 6 (set (reg:SI 101 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:505 90 {*movsi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 101 [ D.6576 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:505 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.6576 ])
        (nil)))
(jump_insn 80 79 81 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) sim2fitman_sup.cpp:505 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 106)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 103 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:506 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              9 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 103 82 83 8 80 "" [1 uses])
(note 83 103 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:506 7 {*cmpsi_1}
     (nil))
(jump_insn 85 84 86 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) sim2fitman_sup.cpp:506 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 106)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 104 105 106 107 108 265 266 267 268 269
(note 86 85 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 9 (set (reg:SI 102 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:507 90 {*movsi_internal}
     (nil))
(insn 88 87 89 9 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:507 90 {*movsi_internal}
     (nil))
(insn 89 88 90 9 (parallel [
            (set (reg:SI 103 [ D.6576 ])
                (plus:SI (reg:SI 265)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:507 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 265)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 90 89 91 9 (parallel [
            (set (reg:SI 104 [ D.6576 ])
                (plus:SI (reg:SI 102 [ D.6576 ])
                    (reg:SI 103 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:507 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 102 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 91 90 92 9 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:507 89 {*movdi_internal}
     (nil))
(insn 92 91 93 9 (set (reg:DI 267)
        (sign_extend:DI (reg:SI 104 [ D.6576 ]))) sim2fitman_sup.cpp:507 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104 [ D.6576 ])
        (nil)))
(insn 93 92 94 9 (set (reg:QI 105 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 266)
                    (reg:DI 267))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:507 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 267)
        (expr_list:REG_DEAD (reg/f:DI 266)
            (nil))))
(insn 94 93 95 9 (set (reg:SI 106 [ D.6576 ])
        (sign_extend:SI (reg:QI 105 [ D.6577 ]))) sim2fitman_sup.cpp:507 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 105 [ D.6577 ])
        (nil)))
(insn 95 94 96 9 (set (reg:SI 5 di)
        (reg:SI 106 [ D.6576 ])) sim2fitman_sup.cpp:507 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 106 [ D.6576 ])
        (nil)))
(call_insn/i 96 95 97 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:507 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 97 96 98 9 (set (reg:SI 107 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:507 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 98 97 99 9 (set (reg:QI 108 [ D.6577 ])
        (subreg:QI (reg:SI 107 [ D.6576 ]) 0)) sim2fitman_sup.cpp:507 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 107 [ D.6576 ])
        (nil)))
(insn 99 98 100 9 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:507 90 {*movsi_internal}
     (nil))
(insn 100 99 101 9 (set (reg:DI 268)
        (sign_extend:DI (reg:SI 269))) sim2fitman_sup.cpp:507 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 101 100 102 9 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 268))
                (const_int -32 [0xffffffffffffffe0])) [0 uns_ext S1 A8])
        (reg:QI 108 [ D.6577 ])) sim2fitman_sup.cpp:507 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 268)
        (expr_list:REG_DEAD (reg:QI 108 [ D.6577 ])
            (nil))))
(insn 102 101 848 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:506 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 848 102 849 9 (set (pc)
        (label_ref 103)) sim2fitman_sup.cpp:506 654 {jump}
     (nil)
 -> 103)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 849 848 106)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 270
(code_label 106 849 107 10 79 "" [2 uses])
(note 107 106 108 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 10 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:512 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7ff9ba4c45a0 *.LC52>)) sim2fitman_sup.cpp:512 89 {*movdi_internal}
     (nil))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 270)) sim2fitman_sup.cpp:512 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(call_insn/i 111 110 112 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:512 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 112 111 113 10 (set (reg:SI 109 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:512 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 113 112 114 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:512 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.6576 ])
        (nil)))
(jump_insn 114 113 115 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) sim2fitman_sup.cpp:512 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 208)
;;  succ:       11 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110
(note 115 114 116 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 11 (set (reg:SI 110 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:513 90 {*movsi_internal}
     (nil))
(insn 117 116 118 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 110 [ D.6576 ])
            (const_int 8 [0x8]))) sim2fitman_sup.cpp:513 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 110 [ D.6576 ])
        (nil)))
(jump_insn 118 117 119 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) sim2fitman_sup.cpp:513 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 178)
;;  succ:       12 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 120 121 271 272
(note 119 118 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (reg:SI 119 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:514 90 {*movsi_internal}
     (nil))
(insn 121 120 122 12 (parallel [
            (set (reg:SI 120 [ D.6576 ])
                (plus:SI (reg:SI 119 [ D.6576 ])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:514 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 12 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:514 89 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (set (reg:DI 272)
        (sign_extend:DI (reg:SI 120 [ D.6576 ]))) sim2fitman_sup.cpp:514 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 120 [ D.6576 ])
        (nil)))
(insn 124 123 125 12 (set (reg:QI 121 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 271)
                    (reg:DI 272))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:514 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 272)
        (expr_list:REG_DEAD (reg/f:DI 271)
            (nil))))
(insn 125 124 126 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.6577 ])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:514 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 121 [ D.6577 ])
        (nil)))
(jump_insn 126 125 127 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) sim2fitman_sup.cpp:514 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 152)
;;  succ:       13 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 127 126 128 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 149 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:516 90 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              15 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 149 128 129 14 85 "" [1 uses])
(note 129 149 130 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:516 7 {*cmpsi_1}
     (nil))
(jump_insn 131 130 132 14 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:516 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130 131 132 133 134 135 273 274 275 276 277
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 15 (set (reg:SI 129 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:517 90 {*movsi_internal}
     (nil))
(insn 134 133 135 15 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:517 90 {*movsi_internal}
     (nil))
(insn 135 134 136 15 (parallel [
            (set (reg:SI 130 [ D.6576 ])
                (plus:SI (reg:SI 273)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:517 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 273)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -6 [0xfffffffffffffffa]))
                (nil)))))
(insn 136 135 137 15 (parallel [
            (set (reg:SI 131 [ D.6576 ])
                (plus:SI (reg:SI 129 [ D.6576 ])
                    (reg:SI 130 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:517 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 129 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 137 136 138 15 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:517 89 {*movdi_internal}
     (nil))
(insn 138 137 139 15 (set (reg:DI 275)
        (sign_extend:DI (reg:SI 131 [ D.6576 ]))) sim2fitman_sup.cpp:517 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 131 [ D.6576 ])
        (nil)))
(insn 139 138 140 15 (set (reg:QI 132 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 274)
                    (reg:DI 275))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 275)
        (expr_list:REG_DEAD (reg/f:DI 274)
            (nil))))
(insn 140 139 141 15 (set (reg:SI 133 [ D.6576 ])
        (sign_extend:SI (reg:QI 132 [ D.6577 ]))) sim2fitman_sup.cpp:517 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 132 [ D.6577 ])
        (nil)))
(insn 141 140 142 15 (set (reg:SI 5 di)
        (reg:SI 133 [ D.6576 ])) sim2fitman_sup.cpp:517 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 133 [ D.6576 ])
        (nil)))
(call_insn/i 142 141 143 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:517 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 143 142 144 15 (set (reg:SI 134 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:517 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 144 143 145 15 (set (reg:QI 135 [ D.6577 ])
        (subreg:QI (reg:SI 134 [ D.6576 ]) 0)) sim2fitman_sup.cpp:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ D.6576 ])
        (nil)))
(insn 145 144 146 15 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:517 90 {*movsi_internal}
     (nil))
(insn 146 145 147 15 (set (reg:DI 276)
        (sign_extend:DI (reg:SI 277))) sim2fitman_sup.cpp:517 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277)
        (nil)))
(insn 147 146 148 15 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 276))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 135 [ D.6577 ])) sim2fitman_sup.cpp:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 276)
        (expr_list:REG_DEAD (reg:QI 135 [ D.6577 ])
            (nil))))
(insn 148 147 850 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:516 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 850 148 851 15 (set (pc)
        (label_ref 149)) sim2fitman_sup.cpp:516 654 {jump}
     (nil)
 -> 149)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 851 850 152)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 152 851 153 16 83 "" [1 uses])
(note 153 152 154 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 175 16 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:521 90 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              18 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 175 154 155 17 86 "" [1 uses])
(note 155 175 156 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:521 7 {*cmpsi_1}
     (nil))
(jump_insn 157 156 158 17 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:521 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 124 125 126 127 128 278 279 280 281 282
(note 158 157 159 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 18 (set (reg:SI 122 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:522 90 {*movsi_internal}
     (nil))
(insn 160 159 161 18 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:522 90 {*movsi_internal}
     (nil))
(insn 161 160 162 18 (parallel [
            (set (reg:SI 123 [ D.6576 ])
                (plus:SI (reg:SI 278)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:522 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 278)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -8 [0xfffffffffffffff8]))
                (nil)))))
(insn 162 161 163 18 (parallel [
            (set (reg:SI 124 [ D.6576 ])
                (plus:SI (reg:SI 122 [ D.6576 ])
                    (reg:SI 123 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:522 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 123 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 122 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 163 162 164 18 (set (reg/f:DI 279)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:522 89 {*movdi_internal}
     (nil))
(insn 164 163 165 18 (set (reg:DI 280)
        (sign_extend:DI (reg:SI 124 [ D.6576 ]))) sim2fitman_sup.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 124 [ D.6576 ])
        (nil)))
(insn 165 164 166 18 (set (reg:QI 125 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 279)
                    (reg:DI 280))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:522 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 280)
        (expr_list:REG_DEAD (reg/f:DI 279)
            (nil))))
(insn 166 165 167 18 (set (reg:SI 126 [ D.6576 ])
        (sign_extend:SI (reg:QI 125 [ D.6577 ]))) sim2fitman_sup.cpp:522 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 125 [ D.6577 ])
        (nil)))
(insn 167 166 168 18 (set (reg:SI 5 di)
        (reg:SI 126 [ D.6576 ])) sim2fitman_sup.cpp:522 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126 [ D.6576 ])
        (nil)))
(call_insn/i 168 167 169 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:522 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 169 168 170 18 (set (reg:SI 127 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:522 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 170 169 171 18 (set (reg:QI 128 [ D.6577 ])
        (subreg:QI (reg:SI 127 [ D.6576 ]) 0)) sim2fitman_sup.cpp:522 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 127 [ D.6576 ])
        (nil)))
(insn 171 170 172 18 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:522 90 {*movsi_internal}
     (nil))
(insn 172 171 173 18 (set (reg:DI 281)
        (sign_extend:DI (reg:SI 282))) sim2fitman_sup.cpp:522 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))
(insn 173 172 174 18 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 281))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 128 [ D.6577 ])) sim2fitman_sup.cpp:522 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (expr_list:REG_DEAD (reg:QI 128 [ D.6577 ])
            (nil))))
(insn 174 173 852 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:521 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 852 174 853 18 (set (pc)
        (label_ref 175)) sim2fitman_sup.cpp:521 654 {jump}
     (nil)
 -> 175)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 853 852 178)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111
(code_label 178 853 179 19 82 "" [1 uses])
(note 179 178 180 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 19 (set (reg:SI 111 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:526 90 {*movsi_internal}
     (nil))
(insn 181 180 182 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 111 [ D.6576 ])
            (const_int 6 [0x6]))) sim2fitman_sup.cpp:526 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.6576 ])
        (nil)))
(jump_insn 182 181 183 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:526 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       20 (FALLTHRU)
;;              35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 183 182 184 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 205 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:528 90 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              22 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 205 184 185 21 87 "" [1 uses])
(note 185 205 186 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:528 7 {*cmpsi_1}
     (nil))
(jump_insn 187 186 188 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:528 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112 113 114 115 116 117 118 283 284 285 286 287
(note 188 187 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 22 (set (reg:SI 112 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:529 90 {*movsi_internal}
     (nil))
(insn 190 189 191 22 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:529 90 {*movsi_internal}
     (nil))
(insn 191 190 192 22 (parallel [
            (set (reg:SI 113 [ D.6576 ])
                (plus:SI (reg:SI 283)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:529 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 283)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -6 [0xfffffffffffffffa]))
                (nil)))))
(insn 192 191 193 22 (parallel [
            (set (reg:SI 114 [ D.6576 ])
                (plus:SI (reg:SI 112 [ D.6576 ])
                    (reg:SI 113 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:529 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 112 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 193 192 194 22 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:529 89 {*movdi_internal}
     (nil))
(insn 194 193 195 22 (set (reg:DI 285)
        (sign_extend:DI (reg:SI 114 [ D.6576 ]))) sim2fitman_sup.cpp:529 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114 [ D.6576 ])
        (nil)))
(insn 195 194 196 22 (set (reg:QI 115 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 284)
                    (reg:DI 285))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:529 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (expr_list:REG_DEAD (reg/f:DI 284)
            (nil))))
(insn 196 195 197 22 (set (reg:SI 116 [ D.6576 ])
        (sign_extend:SI (reg:QI 115 [ D.6577 ]))) sim2fitman_sup.cpp:529 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 115 [ D.6577 ])
        (nil)))
(insn 197 196 198 22 (set (reg:SI 5 di)
        (reg:SI 116 [ D.6576 ])) sim2fitman_sup.cpp:529 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116 [ D.6576 ])
        (nil)))
(call_insn/i 198 197 199 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:529 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 199 198 200 22 (set (reg:SI 117 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:529 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 200 199 201 22 (set (reg:QI 118 [ D.6577 ])
        (subreg:QI (reg:SI 117 [ D.6576 ]) 0)) sim2fitman_sup.cpp:529 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 117 [ D.6576 ])
        (nil)))
(insn 201 200 202 22 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:529 90 {*movsi_internal}
     (nil))
(insn 202 201 203 22 (set (reg:DI 286)
        (sign_extend:DI (reg:SI 287))) sim2fitman_sup.cpp:529 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
(insn 203 202 204 22 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 286))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 118 [ D.6577 ])) sim2fitman_sup.cpp:529 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 286)
        (expr_list:REG_DEAD (reg:QI 118 [ D.6577 ])
            (nil))))
(insn 204 203 854 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:528 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 854 204 855 22 (set (pc)
        (label_ref 205)) sim2fitman_sup.cpp:528 654 {jump}
     (nil)
 -> 205)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 855 854 208)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 136
(code_label 208 855 209 23 81 "" [1 uses])
(note 209 208 210 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 23 (set (reg:SI 136 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:533 90 {*movsi_internal}
     (nil))
(insn 211 210 212 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 136 [ D.6576 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:533 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 136 [ D.6576 ])
        (nil)))
(jump_insn 212 211 213 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) sim2fitman_sup.cpp:533 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 272)
;;  succ:       24 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137 138 139 288 289
(note 213 212 214 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 24 (set (reg:SI 137 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:534 90 {*movsi_internal}
     (nil))
(insn 215 214 216 24 (parallel [
            (set (reg:SI 138 [ D.6576 ])
                (plus:SI (reg:SI 137 [ D.6576 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:534 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 24 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:534 89 {*movdi_internal}
     (nil))
(insn 217 216 218 24 (set (reg:DI 289)
        (sign_extend:DI (reg:SI 138 [ D.6576 ]))) sim2fitman_sup.cpp:534 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ D.6576 ])
        (nil)))
(insn 218 217 219 24 (set (reg:QI 139 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 288)
                    (reg:DI 289))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:534 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (expr_list:REG_DEAD (reg/f:DI 288)
            (nil))))
(insn 219 218 220 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 139 [ D.6577 ])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:534 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 139 [ D.6577 ])
        (nil)))
(jump_insn 220 219 221 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) sim2fitman_sup.cpp:534 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 246)
;;  succ:       25 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 221 220 222 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 243 25 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:536 90 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              27 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 243 222 223 26 90 "" [1 uses])
(note 223 243 224 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:536 7 {*cmpsi_1}
     (nil))
(jump_insn 225 224 226 26 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:536 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 147 148 149 150 151 152 153 290 291 292 293 294
(note 226 225 227 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 27 (set (reg:SI 147 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:537 90 {*movsi_internal}
     (nil))
(insn 228 227 229 27 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:537 90 {*movsi_internal}
     (nil))
(insn 229 228 230 27 (parallel [
            (set (reg:SI 148 [ D.6576 ])
                (plus:SI (reg:SI 290)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:537 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 290)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 230 229 231 27 (parallel [
            (set (reg:SI 149 [ D.6576 ])
                (plus:SI (reg:SI 147 [ D.6576 ])
                    (reg:SI 148 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:537 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 147 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 231 230 232 27 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:537 89 {*movdi_internal}
     (nil))
(insn 232 231 233 27 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 149 [ D.6576 ]))) sim2fitman_sup.cpp:537 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 149 [ D.6576 ])
        (nil)))
(insn 233 232 234 27 (set (reg:QI 150 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 291)
                    (reg:DI 292))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:537 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 292)
        (expr_list:REG_DEAD (reg/f:DI 291)
            (nil))))
(insn 234 233 235 27 (set (reg:SI 151 [ D.6576 ])
        (sign_extend:SI (reg:QI 150 [ D.6577 ]))) sim2fitman_sup.cpp:537 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 150 [ D.6577 ])
        (nil)))
(insn 235 234 236 27 (set (reg:SI 5 di)
        (reg:SI 151 [ D.6576 ])) sim2fitman_sup.cpp:537 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151 [ D.6576 ])
        (nil)))
(call_insn/i 236 235 237 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:537 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 237 236 238 27 (set (reg:SI 152 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:537 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 238 237 239 27 (set (reg:QI 153 [ D.6577 ])
        (subreg:QI (reg:SI 152 [ D.6576 ]) 0)) sim2fitman_sup.cpp:537 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 152 [ D.6576 ])
        (nil)))
(insn 239 238 240 27 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:537 90 {*movsi_internal}
     (nil))
(insn 240 239 241 27 (set (reg:DI 293)
        (sign_extend:DI (reg:SI 294))) sim2fitman_sup.cpp:537 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 294)
        (nil)))
(insn 241 240 242 27 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 293))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 153 [ D.6577 ])) sim2fitman_sup.cpp:537 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 293)
        (expr_list:REG_DEAD (reg:QI 153 [ D.6577 ])
            (nil))))
(insn 242 241 856 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:536 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 856 242 857 27 (set (pc)
        (label_ref 243)) sim2fitman_sup.cpp:536 654 {jump}
     (nil)
 -> 243)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 857 856 246)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 246 857 247 28 89 "" [1 uses])
(note 247 246 248 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 269 28 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:541 90 {*movsi_internal}
     (nil))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;;              30 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 269 248 249 29 91 "" [1 uses])
(note 249 269 250 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:541 7 {*cmpsi_1}
     (nil))
(jump_insn 251 250 252 29 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:541 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140 141 142 143 144 145 146 295 296 297 298 299
(note 252 251 253 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 30 (set (reg:SI 140 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:542 90 {*movsi_internal}
     (nil))
(insn 254 253 255 30 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:542 90 {*movsi_internal}
     (nil))
(insn 255 254 256 30 (parallel [
            (set (reg:SI 141 [ D.6576 ])
                (plus:SI (reg:SI 295)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:542 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 295)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 256 255 257 30 (parallel [
            (set (reg:SI 142 [ D.6576 ])
                (plus:SI (reg:SI 140 [ D.6576 ])
                    (reg:SI 141 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:542 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 141 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 140 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 257 256 258 30 (set (reg/f:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:542 89 {*movdi_internal}
     (nil))
(insn 258 257 259 30 (set (reg:DI 297)
        (sign_extend:DI (reg:SI 142 [ D.6576 ]))) sim2fitman_sup.cpp:542 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 142 [ D.6576 ])
        (nil)))
(insn 259 258 260 30 (set (reg:QI 143 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 296)
                    (reg:DI 297))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:542 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (expr_list:REG_DEAD (reg/f:DI 296)
            (nil))))
(insn 260 259 261 30 (set (reg:SI 144 [ D.6576 ])
        (sign_extend:SI (reg:QI 143 [ D.6577 ]))) sim2fitman_sup.cpp:542 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 143 [ D.6577 ])
        (nil)))
(insn 261 260 262 30 (set (reg:SI 5 di)
        (reg:SI 144 [ D.6576 ])) sim2fitman_sup.cpp:542 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144 [ D.6576 ])
        (nil)))
(call_insn/i 262 261 263 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:542 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 263 262 264 30 (set (reg:SI 145 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:542 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 264 263 265 30 (set (reg:QI 146 [ D.6577 ])
        (subreg:QI (reg:SI 145 [ D.6576 ]) 0)) sim2fitman_sup.cpp:542 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 145 [ D.6576 ])
        (nil)))
(insn 265 264 266 30 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:542 90 {*movsi_internal}
     (nil))
(insn 266 265 267 30 (set (reg:DI 298)
        (sign_extend:DI (reg:SI 299))) sim2fitman_sup.cpp:542 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 267 266 268 30 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 298))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 146 [ D.6577 ])) sim2fitman_sup.cpp:542 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (expr_list:REG_DEAD (reg:QI 146 [ D.6577 ])
            (nil))))
(insn 268 267 858 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:541 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 858 268 859 30 (set (pc)
        (label_ref 269)) sim2fitman_sup.cpp:541 654 {jump}
     (nil)
 -> 269)
;;  succ:       29 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 859 858 272)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 154
(code_label 272 859 273 31 88 "" [1 uses])
(note 273 272 274 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 31 (set (reg:SI 154 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:546 90 {*movsi_internal}
     (nil))
(insn 275 274 276 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 154 [ D.6576 ])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:546 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 154 [ D.6576 ])
        (nil)))
(jump_insn 276 275 277 31 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:546 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       32 (FALLTHRU)
;;              35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 277 276 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 299 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:547 90 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              34 [100.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 299 278 279 33 92 "" [1 uses])
(note 279 299 280 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:547 7 {*cmpsi_1}
     (nil))
(jump_insn 281 280 282 33 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman_sup.cpp:547 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 302)
;;  succ:       35
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 155 156 157 158 159 160 161 300 301 302 303 304
(note 282 281 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 34 (set (reg:SI 155 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:548 90 {*movsi_internal}
     (nil))
(insn 284 283 285 34 (set (reg:SI 300)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:548 90 {*movsi_internal}
     (nil))
(insn 285 284 286 34 (parallel [
            (set (reg:SI 156 [ D.6576 ])
                (plus:SI (reg:SI 300)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:548 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 300)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 286 285 287 34 (parallel [
            (set (reg:SI 157 [ D.6576 ])
                (plus:SI (reg:SI 155 [ D.6576 ])
                    (reg:SI 156 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:548 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 156 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 155 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 287 286 288 34 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:548 89 {*movdi_internal}
     (nil))
(insn 288 287 289 34 (set (reg:DI 302)
        (sign_extend:DI (reg:SI 157 [ D.6576 ]))) sim2fitman_sup.cpp:548 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 157 [ D.6576 ])
        (nil)))
(insn 289 288 290 34 (set (reg:QI 158 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 301)
                    (reg:DI 302))
                (const_int 512 [0x200])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:548 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 302)
        (expr_list:REG_DEAD (reg/f:DI 301)
            (nil))))
(insn 290 289 291 34 (set (reg:SI 159 [ D.6576 ])
        (sign_extend:SI (reg:QI 158 [ D.6577 ]))) sim2fitman_sup.cpp:548 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 158 [ D.6577 ])
        (nil)))
(insn 291 290 292 34 (set (reg:SI 5 di)
        (reg:SI 159 [ D.6576 ])) sim2fitman_sup.cpp:548 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 159 [ D.6576 ])
        (nil)))
(call_insn/i 292 291 293 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:548 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 293 292 294 34 (set (reg:SI 160 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:548 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 294 293 295 34 (set (reg:QI 161 [ D.6577 ])
        (subreg:QI (reg:SI 160 [ D.6576 ]) 0)) sim2fitman_sup.cpp:548 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 160 [ D.6576 ])
        (nil)))
(insn 295 294 296 34 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:548 90 {*movsi_internal}
     (nil))
(insn 296 295 297 34 (set (reg:DI 303)
        (sign_extend:DI (reg:SI 304))) sim2fitman_sup.cpp:548 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 304)
        (nil)))
(insn 297 296 298 34 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 303))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 161 [ D.6577 ])) sim2fitman_sup.cpp:548 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 303)
        (expr_list:REG_DEAD (reg:QI 161 [ D.6577 ])
            (nil))))
(insn 298 297 860 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:547 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 860 298 861 34 (set (pc)
        (label_ref 299)) sim2fitman_sup.cpp:547 654 {jump}
     (nil)
 -> 299)
;;  succ:       33 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 861 860 302)
;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;;              29
;;              31
;;              33
;;              17
;;              14
;;              21
;;              26
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 162 305
(code_label 302 861 303 35 84 "" [8 uses])
(note 303 302 304 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 35 (parallel [
            (set (reg:DI 305)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:554 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 305 304 306 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7ff9ba4c45a0 *.LC52>)) sim2fitman_sup.cpp:554 89 {*movdi_internal}
     (nil))
(insn 306 305 307 35 (set (reg:DI 5 di)
        (reg:DI 305)) sim2fitman_sup.cpp:554 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(call_insn/i 307 306 308 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:554 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 308 307 309 35 (set (reg:SI 162 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:554 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 309 308 310 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 162 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:554 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 162 [ D.6576 ])
        (nil)))
(jump_insn 310 309 311 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) sim2fitman_sup.cpp:554 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 404)
;;  succ:       36 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 163
(note 311 310 312 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 36 (set (reg:SI 163 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:555 90 {*movsi_internal}
     (nil))
(insn 313 312 314 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 163 [ D.6576 ])
            (const_int 8 [0x8]))) sim2fitman_sup.cpp:555 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 163 [ D.6576 ])
        (nil)))
(jump_insn 314 313 315 36 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 374)
            (pc))) sim2fitman_sup.cpp:555 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 374)
;;  succ:       37 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 172 173 174 306 307
(note 315 314 316 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 37 (set (reg:SI 172 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:556 90 {*movsi_internal}
     (nil))
(insn 317 316 318 37 (parallel [
            (set (reg:SI 173 [ D.6576 ])
                (plus:SI (reg:SI 172 [ D.6576 ])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:556 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 172 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 318 317 319 37 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:556 89 {*movdi_internal}
     (nil))
(insn 319 318 320 37 (set (reg:DI 307)
        (sign_extend:DI (reg:SI 173 [ D.6576 ]))) sim2fitman_sup.cpp:556 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 173 [ D.6576 ])
        (nil)))
(insn 320 319 321 37 (set (reg:QI 174 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 306)
                    (reg:DI 307))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:556 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (expr_list:REG_DEAD (reg/f:DI 306)
            (nil))))
(insn 321 320 322 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 174 [ D.6577 ])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:556 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 174 [ D.6577 ])
        (nil)))
(jump_insn 322 321 323 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) sim2fitman_sup.cpp:556 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 348)
;;  succ:       38 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 323 322 324 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 345 38 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:558 90 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              40 [100.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 345 324 325 39 97 "" [1 uses])
(note 325 345 326 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:558 7 {*cmpsi_1}
     (nil))
(jump_insn 327 326 328 39 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:558 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 182 183 184 185 186 187 188 308 309 310 311 312
(note 328 327 329 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 40 (set (reg:SI 182 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:559 90 {*movsi_internal}
     (nil))
(insn 330 329 331 40 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:559 90 {*movsi_internal}
     (nil))
(insn 331 330 332 40 (parallel [
            (set (reg:SI 183 [ D.6576 ])
                (plus:SI (reg:SI 308)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:559 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 308)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -6 [0xfffffffffffffffa]))
                (nil)))))
(insn 332 331 333 40 (parallel [
            (set (reg:SI 184 [ D.6576 ])
                (plus:SI (reg:SI 182 [ D.6576 ])
                    (reg:SI 183 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:559 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 183 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 182 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 333 332 334 40 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:559 89 {*movdi_internal}
     (nil))
(insn 334 333 335 40 (set (reg:DI 310)
        (sign_extend:DI (reg:SI 184 [ D.6576 ]))) sim2fitman_sup.cpp:559 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 184 [ D.6576 ])
        (nil)))
(insn 335 334 336 40 (set (reg:QI 185 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 309)
                    (reg:DI 310))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:559 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (expr_list:REG_DEAD (reg/f:DI 309)
            (nil))))
(insn 336 335 337 40 (set (reg:SI 186 [ D.6576 ])
        (sign_extend:SI (reg:QI 185 [ D.6577 ]))) sim2fitman_sup.cpp:559 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 185 [ D.6577 ])
        (nil)))
(insn 337 336 338 40 (set (reg:SI 5 di)
        (reg:SI 186 [ D.6576 ])) sim2fitman_sup.cpp:559 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 186 [ D.6576 ])
        (nil)))
(call_insn/i 338 337 339 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:559 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 339 338 340 40 (set (reg:SI 187 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:559 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 340 339 341 40 (set (reg:QI 188 [ D.6577 ])
        (subreg:QI (reg:SI 187 [ D.6576 ]) 0)) sim2fitman_sup.cpp:559 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 187 [ D.6576 ])
        (nil)))
(insn 341 340 342 40 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:559 90 {*movsi_internal}
     (nil))
(insn 342 341 343 40 (set (reg:DI 311)
        (sign_extend:DI (reg:SI 312))) sim2fitman_sup.cpp:559 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 312)
        (nil)))
(insn 343 342 344 40 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 311))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 188 [ D.6577 ])) sim2fitman_sup.cpp:559 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_DEAD (reg:QI 188 [ D.6577 ])
            (nil))))
(insn 344 343 862 40 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:558 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 862 344 863 40 (set (pc)
        (label_ref 345)) sim2fitman_sup.cpp:558 654 {jump}
     (nil)
 -> 345)
;;  succ:       39 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 863 862 348)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 348 863 349 41 95 "" [1 uses])
(note 349 348 350 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 371 41 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:563 90 {*movsi_internal}
     (nil))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              43 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 371 350 351 42 98 "" [1 uses])
(note 351 371 352 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 42 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:563 7 {*cmpsi_1}
     (nil))
(jump_insn 353 352 354 42 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:563 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 177 178 179 180 181 313 314 315 316 317
(note 354 353 355 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 43 (set (reg:SI 175 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:564 90 {*movsi_internal}
     (nil))
(insn 356 355 357 43 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:564 90 {*movsi_internal}
     (nil))
(insn 357 356 358 43 (parallel [
            (set (reg:SI 176 [ D.6576 ])
                (plus:SI (reg:SI 313)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:564 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 313)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -8 [0xfffffffffffffff8]))
                (nil)))))
(insn 358 357 359 43 (parallel [
            (set (reg:SI 177 [ D.6576 ])
                (plus:SI (reg:SI 175 [ D.6576 ])
                    (reg:SI 176 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:564 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 176 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 175 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 359 358 360 43 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:564 89 {*movdi_internal}
     (nil))
(insn 360 359 361 43 (set (reg:DI 315)
        (sign_extend:DI (reg:SI 177 [ D.6576 ]))) sim2fitman_sup.cpp:564 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 177 [ D.6576 ])
        (nil)))
(insn 361 360 362 43 (set (reg:QI 178 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 314)
                    (reg:DI 315))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:564 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (expr_list:REG_DEAD (reg/f:DI 314)
            (nil))))
(insn 362 361 363 43 (set (reg:SI 179 [ D.6576 ])
        (sign_extend:SI (reg:QI 178 [ D.6577 ]))) sim2fitman_sup.cpp:564 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 178 [ D.6577 ])
        (nil)))
(insn 363 362 364 43 (set (reg:SI 5 di)
        (reg:SI 179 [ D.6576 ])) sim2fitman_sup.cpp:564 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 179 [ D.6576 ])
        (nil)))
(call_insn/i 364 363 365 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:564 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 365 364 366 43 (set (reg:SI 180 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:564 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 366 365 367 43 (set (reg:QI 181 [ D.6577 ])
        (subreg:QI (reg:SI 180 [ D.6576 ]) 0)) sim2fitman_sup.cpp:564 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 180 [ D.6576 ])
        (nil)))
(insn 367 366 368 43 (set (reg:SI 317)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:564 90 {*movsi_internal}
     (nil))
(insn 368 367 369 43 (set (reg:DI 316)
        (sign_extend:DI (reg:SI 317))) sim2fitman_sup.cpp:564 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 317)
        (nil)))
(insn 369 368 370 43 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 316))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 181 [ D.6577 ])) sim2fitman_sup.cpp:564 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 316)
        (expr_list:REG_DEAD (reg:QI 181 [ D.6577 ])
            (nil))))
(insn 370 369 864 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:563 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 864 370 865 43 (set (pc)
        (label_ref 371)) sim2fitman_sup.cpp:563 654 {jump}
     (nil)
 -> 371)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 865 864 374)
;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 164
(code_label 374 865 375 44 94 "" [1 uses])
(note 375 374 376 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 44 (set (reg:SI 164 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:568 90 {*movsi_internal}
     (nil))
(insn 377 376 378 44 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 164 [ D.6576 ])
            (const_int 6 [0x6]))) sim2fitman_sup.cpp:568 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 164 [ D.6576 ])
        (nil)))
(jump_insn 378 377 379 44 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:568 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       45 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 379 378 380 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 401 45 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:570 90 {*movsi_internal}
     (nil))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;;              47 [100.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 401 380 381 46 99 "" [1 uses])
(note 381 401 382 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:570 7 {*cmpsi_1}
     (nil))
(jump_insn 383 382 384 46 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:570 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 165 166 167 168 169 170 171 318 319 320 321 322
(note 384 383 385 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 47 (set (reg:SI 165 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:571 90 {*movsi_internal}
     (nil))
(insn 386 385 387 47 (set (reg:SI 318)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:571 90 {*movsi_internal}
     (nil))
(insn 387 386 388 47 (parallel [
            (set (reg:SI 166 [ D.6576 ])
                (plus:SI (reg:SI 318)
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:571 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 318)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -6 [0xfffffffffffffffa]))
                (nil)))))
(insn 388 387 389 47 (parallel [
            (set (reg:SI 167 [ D.6576 ])
                (plus:SI (reg:SI 165 [ D.6576 ])
                    (reg:SI 166 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:571 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 166 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 165 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 389 388 390 47 (set (reg/f:DI 319)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:571 89 {*movdi_internal}
     (nil))
(insn 390 389 391 47 (set (reg:DI 320)
        (sign_extend:DI (reg:SI 167 [ D.6576 ]))) sim2fitman_sup.cpp:571 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 167 [ D.6576 ])
        (nil)))
(insn 391 390 392 47 (set (reg:QI 168 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 319)
                    (reg:DI 320))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:571 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (expr_list:REG_DEAD (reg/f:DI 319)
            (nil))))
(insn 392 391 393 47 (set (reg:SI 169 [ D.6576 ])
        (sign_extend:SI (reg:QI 168 [ D.6577 ]))) sim2fitman_sup.cpp:571 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 168 [ D.6577 ])
        (nil)))
(insn 393 392 394 47 (set (reg:SI 5 di)
        (reg:SI 169 [ D.6576 ])) sim2fitman_sup.cpp:571 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169 [ D.6576 ])
        (nil)))
(call_insn/i 394 393 395 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:571 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 395 394 396 47 (set (reg:SI 170 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:571 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 396 395 397 47 (set (reg:QI 171 [ D.6577 ])
        (subreg:QI (reg:SI 170 [ D.6576 ]) 0)) sim2fitman_sup.cpp:571 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 170 [ D.6576 ])
        (nil)))
(insn 397 396 398 47 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:571 90 {*movsi_internal}
     (nil))
(insn 398 397 399 47 (set (reg:DI 321)
        (sign_extend:DI (reg:SI 322))) sim2fitman_sup.cpp:571 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 322)
        (nil)))
(insn 399 398 400 47 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 321))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 171 [ D.6577 ])) sim2fitman_sup.cpp:571 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (expr_list:REG_DEAD (reg:QI 171 [ D.6577 ])
            (nil))))
(insn 400 399 866 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:570 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 866 400 867 47 (set (pc)
        (label_ref 401)) sim2fitman_sup.cpp:570 654 {jump}
     (nil)
 -> 401)
;;  succ:       46 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 867 866 404)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 189
(code_label 404 867 405 48 93 "" [1 uses])
(note 405 404 406 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 48 (set (reg:SI 189 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:575 90 {*movsi_internal}
     (nil))
(insn 407 406 408 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 189 [ D.6576 ])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:575 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 189 [ D.6576 ])
        (nil)))
(jump_insn 408 407 409 48 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 468)
            (pc))) sim2fitman_sup.cpp:575 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 468)
;;  succ:       49 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 190 191 192 323 324
(note 409 408 410 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 49 (set (reg:SI 190 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:576 90 {*movsi_internal}
     (nil))
(insn 411 410 412 49 (parallel [
            (set (reg:SI 191 [ D.6576 ])
                (plus:SI (reg:SI 190 [ D.6576 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:576 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 190 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 412 411 413 49 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:576 89 {*movdi_internal}
     (nil))
(insn 413 412 414 49 (set (reg:DI 324)
        (sign_extend:DI (reg:SI 191 [ D.6576 ]))) sim2fitman_sup.cpp:576 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 191 [ D.6576 ])
        (nil)))
(insn 414 413 415 49 (set (reg:QI 192 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 323)
                    (reg:DI 324))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:576 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (expr_list:REG_DEAD (reg/f:DI 323)
            (nil))))
(insn 415 414 416 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 192 [ D.6577 ])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:576 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 192 [ D.6577 ])
        (nil)))
(jump_insn 416 415 417 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 442)
            (pc))) sim2fitman_sup.cpp:576 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 442)
;;  succ:       50 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 417 416 418 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 439 50 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:578 90 {*movsi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              52 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 439 418 419 51 102 "" [1 uses])
(note 419 439 420 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:578 7 {*cmpsi_1}
     (nil))
(jump_insn 421 420 422 51 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:578 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 200 201 202 203 204 205 206 325 326 327 328 329
(note 422 421 423 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 52 (set (reg:SI 200 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:579 90 {*movsi_internal}
     (nil))
(insn 424 423 425 52 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:579 90 {*movsi_internal}
     (nil))
(insn 425 424 426 52 (parallel [
            (set (reg:SI 201 [ D.6576 ])
                (plus:SI (reg:SI 325)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:579 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 325)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 426 425 427 52 (parallel [
            (set (reg:SI 202 [ D.6576 ])
                (plus:SI (reg:SI 200 [ D.6576 ])
                    (reg:SI 201 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:579 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 201 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 200 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 427 426 428 52 (set (reg/f:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:579 89 {*movdi_internal}
     (nil))
(insn 428 427 429 52 (set (reg:DI 327)
        (sign_extend:DI (reg:SI 202 [ D.6576 ]))) sim2fitman_sup.cpp:579 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 202 [ D.6576 ])
        (nil)))
(insn 429 428 430 52 (set (reg:QI 203 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 326)
                    (reg:DI 327))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:579 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 327)
        (expr_list:REG_DEAD (reg/f:DI 326)
            (nil))))
(insn 430 429 431 52 (set (reg:SI 204 [ D.6576 ])
        (sign_extend:SI (reg:QI 203 [ D.6577 ]))) sim2fitman_sup.cpp:579 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 203 [ D.6577 ])
        (nil)))
(insn 431 430 432 52 (set (reg:SI 5 di)
        (reg:SI 204 [ D.6576 ])) sim2fitman_sup.cpp:579 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 204 [ D.6576 ])
        (nil)))
(call_insn/i 432 431 433 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:579 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 433 432 434 52 (set (reg:SI 205 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:579 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 434 433 435 52 (set (reg:QI 206 [ D.6577 ])
        (subreg:QI (reg:SI 205 [ D.6576 ]) 0)) sim2fitman_sup.cpp:579 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 205 [ D.6576 ])
        (nil)))
(insn 435 434 436 52 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:579 90 {*movsi_internal}
     (nil))
(insn 436 435 437 52 (set (reg:DI 328)
        (sign_extend:DI (reg:SI 329))) sim2fitman_sup.cpp:579 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 329)
        (nil)))
(insn 437 436 438 52 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 328))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 206 [ D.6577 ])) sim2fitman_sup.cpp:579 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 328)
        (expr_list:REG_DEAD (reg:QI 206 [ D.6577 ])
            (nil))))
(insn 438 437 868 52 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:578 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 868 438 869 52 (set (pc)
        (label_ref 439)) sim2fitman_sup.cpp:578 654 {jump}
     (nil)
 -> 439)
;;  succ:       51 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 869 868 442)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 442 869 443 53 101 "" [1 uses])
(note 443 442 444 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 465 53 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:583 90 {*movsi_internal}
     (nil))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              55 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 465 444 445 54 103 "" [1 uses])
(note 445 465 446 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:583 7 {*cmpsi_1}
     (nil))
(jump_insn 447 446 448 54 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:583 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 193 194 195 196 197 198 199 330 331 332 333 334
(note 448 447 449 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 55 (set (reg:SI 193 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:584 90 {*movsi_internal}
     (nil))
(insn 450 449 451 55 (set (reg:SI 330)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:584 90 {*movsi_internal}
     (nil))
(insn 451 450 452 55 (parallel [
            (set (reg:SI 194 [ D.6576 ])
                (plus:SI (reg:SI 330)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:584 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 330)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))
(insn 452 451 453 55 (parallel [
            (set (reg:SI 195 [ D.6576 ])
                (plus:SI (reg:SI 193 [ D.6576 ])
                    (reg:SI 194 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:584 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 193 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 453 452 454 55 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:584 89 {*movdi_internal}
     (nil))
(insn 454 453 455 55 (set (reg:DI 332)
        (sign_extend:DI (reg:SI 195 [ D.6576 ]))) sim2fitman_sup.cpp:584 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 195 [ D.6576 ])
        (nil)))
(insn 455 454 456 55 (set (reg:QI 196 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 331)
                    (reg:DI 332))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:584 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (expr_list:REG_DEAD (reg/f:DI 331)
            (nil))))
(insn 456 455 457 55 (set (reg:SI 197 [ D.6576 ])
        (sign_extend:SI (reg:QI 196 [ D.6577 ]))) sim2fitman_sup.cpp:584 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 196 [ D.6577 ])
        (nil)))
(insn 457 456 458 55 (set (reg:SI 5 di)
        (reg:SI 197 [ D.6576 ])) sim2fitman_sup.cpp:584 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 197 [ D.6576 ])
        (nil)))
(call_insn/i 458 457 459 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:584 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 459 458 460 55 (set (reg:SI 198 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:584 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 460 459 461 55 (set (reg:QI 199 [ D.6577 ])
        (subreg:QI (reg:SI 198 [ D.6576 ]) 0)) sim2fitman_sup.cpp:584 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 198 [ D.6576 ])
        (nil)))
(insn 461 460 462 55 (set (reg:SI 334)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:584 90 {*movsi_internal}
     (nil))
(insn 462 461 463 55 (set (reg:DI 333)
        (sign_extend:DI (reg:SI 334))) sim2fitman_sup.cpp:584 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 334)
        (nil)))
(insn 463 462 464 55 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 333))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 199 [ D.6577 ])) sim2fitman_sup.cpp:584 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 333)
        (expr_list:REG_DEAD (reg:QI 199 [ D.6577 ])
            (nil))))
(insn 464 463 870 55 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:583 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 870 464 871 55 (set (pc)
        (label_ref 465)) sim2fitman_sup.cpp:583 654 {jump}
     (nil)
 -> 465)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 871 870 468)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207
(code_label 468 871 469 56 100 "" [1 uses])
(note 469 468 470 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 56 (set (reg:SI 207 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:588 90 {*movsi_internal}
     (nil))
(insn 471 470 472 56 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207 [ D.6576 ])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:588 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 207 [ D.6576 ])
        (nil)))
(jump_insn 472 471 473 56 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:588 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       57 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 473 472 474 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 495 57 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:589 90 {*movsi_internal}
     (nil))
;;  succ:       58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;;              59 [100.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 495 474 475 58 104 "" [1 uses])
(note 475 495 476 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:589 7 {*cmpsi_1}
     (nil))
(jump_insn 477 476 478 58 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) sim2fitman_sup.cpp:589 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 498)
;;  succ:       60
;;              59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 208 209 210 211 212 213 214 335 336 337 338 339
(note 478 477 479 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 59 (set (reg:SI 208 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:590 90 {*movsi_internal}
     (nil))
(insn 480 479 481 59 (set (reg:SI 335)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:590 90 {*movsi_internal}
     (nil))
(insn 481 480 482 59 (parallel [
            (set (reg:SI 209 [ D.6576 ])
                (plus:SI (reg:SI 335)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:590 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 335)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int -2 [0xfffffffffffffffe]))
                (nil)))))
(insn 482 481 483 59 (parallel [
            (set (reg:SI 210 [ D.6576 ])
                (plus:SI (reg:SI 208 [ D.6576 ])
                    (reg:SI 209 [ D.6576 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:590 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 209 [ D.6576 ])
        (expr_list:REG_DEAD (reg:SI 208 [ D.6576 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 483 482 484 59 (set (reg/f:DI 336)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:590 89 {*movdi_internal}
     (nil))
(insn 484 483 485 59 (set (reg:DI 337)
        (sign_extend:DI (reg:SI 210 [ D.6576 ]))) sim2fitman_sup.cpp:590 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 210 [ D.6576 ])
        (nil)))
(insn 485 484 486 59 (set (reg:QI 211 [ D.6577 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 336)
                    (reg:DI 337))
                (const_int 768 [0x300])) [0 io_filenames_70(D)->out S1 A8])) sim2fitman_sup.cpp:590 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 337)
        (expr_list:REG_DEAD (reg/f:DI 336)
            (nil))))
(insn 486 485 487 59 (set (reg:SI 212 [ D.6576 ])
        (sign_extend:SI (reg:QI 211 [ D.6577 ]))) sim2fitman_sup.cpp:590 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 211 [ D.6577 ])
        (nil)))
(insn 487 486 488 59 (set (reg:SI 5 di)
        (reg:SI 212 [ D.6576 ])) sim2fitman_sup.cpp:590 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212 [ D.6576 ])
        (nil)))
(call_insn/i 488 487 489 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7ff9ba979870 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:590 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 489 488 490 59 (set (reg:SI 213 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:590 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 490 489 491 59 (set (reg:QI 214 [ D.6577 ])
        (subreg:QI (reg:SI 213 [ D.6576 ]) 0)) sim2fitman_sup.cpp:590 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 213 [ D.6576 ])
        (nil)))
(insn 491 490 492 59 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:590 90 {*movsi_internal}
     (nil))
(insn 492 491 493 59 (set (reg:DI 338)
        (sign_extend:DI (reg:SI 339))) sim2fitman_sup.cpp:590 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 339)
        (nil)))
(insn 493 492 494 59 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 338))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 214 [ D.6577 ])) sim2fitman_sup.cpp:590 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 338)
        (expr_list:REG_DEAD (reg:QI 214 [ D.6577 ])
            (nil))))
(insn 494 493 872 59 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:589 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 872 494 873 59 (set (pc)
        (label_ref 495)) sim2fitman_sup.cpp:589 654 {jump}
     (nil)
 -> 495)
;;  succ:       58 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 873 872 498)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              54
;;              56
;;              58
;;              42
;;              39
;;              46
;;              51
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 498 873 499 60 96 "" [8 uses])
(note 499 498 500 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:595 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 501 500 502 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) sim2fitman_sup.cpp:595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 505)
;;  succ:       62
;;              61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 502 501 503 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:595 7 {*cmpsi_1}
     (nil))
(jump_insn 504 503 505 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) sim2fitman_sup.cpp:595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 665)
;;  succ:       62 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;;              61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 215 340
(code_label 505 504 506 62 105 "" [1 uses])
(note 506 505 507 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 62 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:598 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 508 507 509 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7ff9ba4c45a0 *.LC52>)) sim2fitman_sup.cpp:598 89 {*movdi_internal}
     (nil))
(insn 509 508 510 62 (set (reg:DI 5 di)
        (reg:DI 340)) sim2fitman_sup.cpp:598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 340)
        (nil)))
(call_insn/i 510 509 511 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:598 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 511 510 512 62 (set (reg:SI 215 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:598 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 512 511 513 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:598 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 215 [ D.6576 ])
        (nil)))
(jump_insn 513 512 514 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 573)
            (pc))) sim2fitman_sup.cpp:598 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 573)
;;  succ:       63 (FALLTHRU)
;;              68
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 216 341
(note 514 513 515 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 63 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:599 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 516 515 517 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7ff9ba4c4630 *.LC53>)) sim2fitman_sup.cpp:599 89 {*movdi_internal}
     (nil))
(insn 517 516 518 63 (set (reg:DI 5 di)
        (reg:DI 341)) sim2fitman_sup.cpp:599 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 341)
        (nil)))
(call_insn/i 518 517 519 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:599 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 519 518 520 63 (set (reg:SI 216 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:599 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 520 519 521 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 216 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:599 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 216 [ D.6576 ])
        (nil)))
(jump_insn 521 520 522 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) sim2fitman_sup.cpp:599 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 535)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 217 218 342 343 346 347
(note 522 521 523 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 524 64 (set (reg:SI 217 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:600 90 {*movsi_internal}
     (nil))
(insn 524 523 525 64 (parallel [
            (set (reg:SI 218 [ D.6576 ])
                (plus:SI (reg:SI 217 [ D.6576 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 217 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 525 524 526 64 (set (reg:DI 342)
        (sign_extend:DI (reg:SI 218 [ D.6576 ]))) sim2fitman_sup.cpp:600 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 218 [ D.6576 ])
        (nil)))
(insn 526 525 530 64 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg:DI 342)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 342)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 530 526 531 64 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:600 89 {*movdi_internal}
     (nil))
(insn 531 530 532 64 (parallel [
            (set (reg:DI 346)
                (plus:DI (reg:DI 343)
                    (reg/f:DI 347)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (expr_list:REG_DEAD (reg:DI 343)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 343))
                    (nil))))))
(insn 532 531 874 64 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 346)) sim2fitman_sup.cpp:600 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 346)
        (nil)))
(jump_insn 874 532 875 64 (set (pc)
        (label_ref 628)) 654 {jump}
     (nil)
 -> 628)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 875 874 535)
;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 219 348
(code_label 535 875 536 65 108 "" [1 uses])
(note 536 535 537 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 65 (parallel [
            (set (reg:DI 348)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:601 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 538 537 539 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7ff9ba4c46c0 *.LC54>)) sim2fitman_sup.cpp:601 89 {*movdi_internal}
     (nil))
(insn 539 538 540 65 (set (reg:DI 5 di)
        (reg:DI 348)) sim2fitman_sup.cpp:601 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 348)
        (nil)))
(call_insn/i 540 539 541 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:601 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 541 540 542 65 (set (reg:SI 219 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:601 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 542 541 543 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 219 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:601 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 219 [ D.6576 ])
        (nil)))
(jump_insn 543 542 544 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 557)
            (pc))) sim2fitman_sup.cpp:601 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 557)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 220 221 349 350 353 354
(note 544 543 545 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 66 (set (reg:SI 220 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:602 90 {*movsi_internal}
     (nil))
(insn 546 545 547 66 (parallel [
            (set (reg:SI 221 [ D.6576 ])
                (plus:SI (reg:SI 220 [ D.6576 ])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 220 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 547 546 548 66 (set (reg:DI 349)
        (sign_extend:DI (reg:SI 221 [ D.6576 ]))) sim2fitman_sup.cpp:602 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 221 [ D.6576 ])
        (nil)))
(insn 548 547 552 66 (parallel [
            (set (reg:DI 350)
                (plus:DI (reg:DI 349)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 349)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 552 548 553 66 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:602 89 {*movdi_internal}
     (nil))
(insn 553 552 554 66 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg:DI 350)
                    (reg/f:DI 354)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_DEAD (reg:DI 350)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 350))
                    (nil))))))
(insn 554 553 876 66 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 353)) sim2fitman_sup.cpp:602 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 353)
        (nil)))
(jump_insn 876 554 877 66 (set (pc)
        (label_ref 628)) 654 {jump}
     (nil)
 -> 628)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 877 876 557)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 222 223 355 356 359 360
(code_label 557 877 558 67 110 "" [1 uses])
(note 558 557 559 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 559 558 560 67 (set (reg:SI 222 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:604 90 {*movsi_internal}
     (nil))
(insn 560 559 561 67 (parallel [
            (set (reg:SI 223 [ D.6576 ])
                (plus:SI (reg:SI 222 [ D.6576 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 222 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 561 560 562 67 (set (reg:DI 355)
        (sign_extend:DI (reg:SI 223 [ D.6576 ]))) sim2fitman_sup.cpp:604 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 223 [ D.6576 ])
        (nil)))
(insn 562 561 566 67 (parallel [
            (set (reg:DI 356)
                (plus:DI (reg:DI 355)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 355)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 566 562 567 67 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:604 89 {*movdi_internal}
     (nil))
(insn 567 566 568 67 (parallel [
            (set (reg:DI 359)
                (plus:DI (reg:DI 356)
                    (reg/f:DI 360)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (expr_list:REG_DEAD (reg:DI 356)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 356))
                    (nil))))))
(insn 568 567 878 67 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 359)) sim2fitman_sup.cpp:604 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 359)
        (nil)))
(jump_insn 878 568 879 67 (set (pc)
        (label_ref 628)) 654 {jump}
     (nil)
 -> 628)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 879 878 573)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       62
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 224 361
(code_label 573 879 574 68 107 "" [1 uses])
(note 574 573 575 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 575 574 576 68 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:607 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 576 575 577 68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7ff9ba4c4630 *.LC53>)) sim2fitman_sup.cpp:607 89 {*movdi_internal}
     (nil))
(insn 577 576 578 68 (set (reg:DI 5 di)
        (reg:DI 361)) sim2fitman_sup.cpp:607 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 361)
        (nil)))
(call_insn/i 578 577 579 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:607 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 579 578 580 68 (set (reg:SI 224 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:607 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 580 579 581 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 224 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:607 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 224 [ D.6576 ])
        (nil)))
(jump_insn 581 580 582 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 595)
            (pc))) sim2fitman_sup.cpp:607 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 595)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 225 226 362 363 366 367
(note 582 581 583 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 69 (set (reg:SI 225 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:608 90 {*movsi_internal}
     (nil))
(insn 584 583 585 69 (parallel [
            (set (reg:SI 226 [ D.6576 ])
                (plus:SI (reg:SI 225 [ D.6576 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 225 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 585 584 586 69 (set (reg:DI 362)
        (sign_extend:DI (reg:SI 226 [ D.6576 ]))) sim2fitman_sup.cpp:608 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 226 [ D.6576 ])
        (nil)))
(insn 586 585 590 69 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg:DI 362)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 362)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 590 586 591 69 (set (reg/f:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:608 89 {*movdi_internal}
     (nil))
(insn 591 590 592 69 (parallel [
            (set (reg:DI 366)
                (plus:DI (reg:DI 363)
                    (reg/f:DI 367)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 367)
        (expr_list:REG_DEAD (reg:DI 363)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 363))
                    (nil))))))
(insn 592 591 880 69 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 366)) sim2fitman_sup.cpp:608 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 366)
        (nil)))
(jump_insn 880 592 881 69 (set (pc)
        (label_ref 628)) 654 {jump}
     (nil)
 -> 628)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 881 880 595)
;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 227 368
(code_label 595 881 596 70 112 "" [1 uses])
(note 596 595 597 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 70 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:609 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 598 597 599 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7ff9ba4c46c0 *.LC54>)) sim2fitman_sup.cpp:609 89 {*movdi_internal}
     (nil))
(insn 599 598 600 70 (set (reg:DI 5 di)
        (reg:DI 368)) sim2fitman_sup.cpp:609 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 368)
        (nil)))
(call_insn/i 600 599 601 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:609 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 601 600 602 70 (set (reg:SI 227 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:609 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 602 601 603 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 227 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:609 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 227 [ D.6576 ])
        (nil)))
(jump_insn 603 602 604 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) sim2fitman_sup.cpp:609 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 617)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 228 229 369 370 373 374
(note 604 603 605 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 71 (set (reg:SI 228 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:610 90 {*movsi_internal}
     (nil))
(insn 606 605 607 71 (parallel [
            (set (reg:SI 229 [ D.6576 ])
                (plus:SI (reg:SI 228 [ D.6576 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 228 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 607 606 608 71 (set (reg:DI 369)
        (sign_extend:DI (reg:SI 229 [ D.6576 ]))) sim2fitman_sup.cpp:610 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 229 [ D.6576 ])
        (nil)))
(insn 608 607 612 71 (parallel [
            (set (reg:DI 370)
                (plus:DI (reg:DI 369)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 369)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 612 608 613 71 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:610 89 {*movdi_internal}
     (nil))
(insn 613 612 614 71 (parallel [
            (set (reg:DI 373)
                (plus:DI (reg:DI 370)
                    (reg/f:DI 374)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (expr_list:REG_DEAD (reg:DI 370)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 370))
                    (nil))))))
(insn 614 613 882 71 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 373)) sim2fitman_sup.cpp:610 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 373)
        (nil)))
(jump_insn 882 614 883 71 (set (pc)
        (label_ref 628)) 654 {jump}
     (nil)
 -> 628)
;;  succ:       73 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 883 882 617)
;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 230 375 376 379 380
(code_label 617 883 618 72 113 "" [1 uses])
(note 618 617 619 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 72 (set (reg:SI 230 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:612 90 {*movsi_internal}
     (nil))
(insn 620 619 621 72 (set (reg:DI 375)
        (sign_extend:DI (reg:SI 230 [ D.6576 ]))) sim2fitman_sup.cpp:612 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 230 [ D.6576 ])
        (nil)))
(insn 621 620 625 72 (parallel [
            (set (reg:DI 376)
                (plus:DI (reg:DI 375)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:612 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 375)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 625 621 626 72 (set (reg/f:DI 380)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:612 89 {*movdi_internal}
     (nil))
(insn 626 625 627 72 (parallel [
            (set (reg:DI 379)
                (plus:DI (reg:DI 376)
                    (reg/f:DI 380)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:612 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 380)
        (expr_list:REG_DEAD (reg:DI 376)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 376))
                    (nil))))))
(insn 627 626 628 72 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 379)) sim2fitman_sup.cpp:612 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 379)
        (nil)))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 [100.0%] 
;;              67 [100.0%] 
;;              69 [100.0%] 
;;              72 (FALLTHRU)
;;              64 [100.0%] 
;;              71 [100.0%] 
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 231 381 382
(code_label 628 627 629 73 111 "" [5 uses])
(note 629 628 630 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 630 629 631 73 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])) sim2fitman_sup.cpp:616 89 {*movdi_internal}
     (nil))
(insn 631 630 632 73 (set (mem:SI (reg/f:DI 381) [0 MEM[(void *)fname_suffix_2]+0 S4 A8])
        (const_int 1680765791 [0x642e735f])) sim2fitman_sup.cpp:616 90 {*movsi_internal}
     (nil))
(insn 632 631 633 73 (set (mem:HI (plus:DI (reg/f:DI 381)
                (const_int 4 [0x4])) [0 MEM[(void *)fname_suffix_2]+4 S2 A8])
        (const_int 29793 [0x7461])) sim2fitman_sup.cpp:616 92 {*movhi_internal}
     (nil))
(insn 633 632 634 73 (set (mem:QI (plus:DI (reg/f:DI 381)
                (const_int 6 [0x6])) [0 MEM[(void *)fname_suffix_2]+6 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:616 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 381)
        (nil)))
(insn 634 633 635 73 (set (reg:QI 382)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A32])) sim2fitman_sup.cpp:618 93 {*movqi_internal}
     (nil))
(insn 635 634 636 73 (parallel [
            (set (reg:QI 231 [ D.6578 ])
                (xor:QI (reg:QI 382)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:618 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 382)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                            (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 636 635 637 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 231 [ D.6578 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:618 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 231 [ D.6578 ])
        (nil)))
(jump_insn 637 636 638 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 657)
            (pc))) sim2fitman_sup.cpp:618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 657)
;;  succ:       74 (FALLTHRU)
;;              76
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 232 233 234 383
(note 638 637 639 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 74 (set (reg/f:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:620 89 {*movdi_internal}
     (nil))
(insn 640 639 641 74 (parallel [
            (set (reg/f:DI 232 [ D.6574 ])
                (plus:DI (reg/f:DI 383)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:620 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 383)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 641 640 642 74 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7ff9ba4c4750 *.LC55>)) sim2fitman_sup.cpp:620 89 {*movdi_internal}
     (nil))
(insn 642 641 643 74 (set (reg:DI 5 di)
        (reg/f:DI 232 [ D.6574 ])) sim2fitman_sup.cpp:620 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.6574 ])
        (nil)))
(call_insn 643 642 644 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7ff9ba725e58 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 644 643 645 74 (set (reg/f:DI 233 [ D.6579 ])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:620 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 645 644 646 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
        (reg/f:DI 233 [ D.6579 ])) sim2fitman_sup.cpp:620 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 233 [ D.6579 ])
        (nil)))
(insn 646 645 647 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 4 {*cmpdi_ccno_1}
     (nil))
(insn 647 646 648 74 (set (reg:QI 234 [ D.6578 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 648 647 649 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 234 [ D.6578 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 234 [ D.6578 ])
        (nil)))
(jump_insn 649 648 650 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 657)
            (pc))) sim2fitman_sup.cpp:620 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 657)
;;  succ:       75 (FALLTHRU)
;;              76
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 235 384 385
(note 650 649 651 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 75 (set (reg/f:DI 384)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:624 89 {*movdi_internal}
     (nil))
(insn 652 651 653 75 (parallel [
            (set (reg/f:DI 235 [ D.6574 ])
                (plus:DI (reg/f:DI 384)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:624 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 384)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 653 652 654 75 (set (reg:SI 385)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])) sim2fitman_sup.cpp:624 90 {*movsi_internal}
     (nil))
(insn 654 653 655 75 (set (reg:SI 4 si)
        (reg:SI 385)) sim2fitman_sup.cpp:624 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 385)
        (nil)))
(insn 655 654 656 75 (set (reg:DI 5 di)
        (reg/f:DI 235 [ D.6574 ])) sim2fitman_sup.cpp:624 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 235 [ D.6574 ])
        (nil)))
(call_insn 656 655 657 75 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_03Pci") [flags 0x41]  <function_decl 0x7ff9ba86f360 cond_exit_03>) [0 cond_exit_03 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:624 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              75 (FALLTHRU)
;;              74
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 657 656 658 76 114 "" [2 uses])
(note 658 657 659 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:628 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 660 659 661 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) sim2fitman_sup.cpp:628 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 665)
;;  succ:       77 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 386
(note 661 660 662 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 77 (set (reg:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])) sim2fitman_sup.cpp:629 89 {*movdi_internal}
     (nil))
(insn 663 662 664 77 (set (reg:DI 5 di)
        (reg:DI 386)) sim2fitman_sup.cpp:629 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386)
        (nil)))
(call_insn 664 663 665 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7ff9ba725af8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:629 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              76
;;              77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 665 664 666 78 106 "" [2 uses])
(note 666 665 667 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 668 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:633 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 668 667 669 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 672)
            (pc))) sim2fitman_sup.cpp:633 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 672)
;;  succ:       80
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 669 668 670 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:633 7 {*cmpsi_1}
     (nil))
(jump_insn 671 670 672 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 897)
            (pc))) sim2fitman_sup.cpp:633 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 897)
;;  succ:       80 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;;              79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 236 387
(code_label 672 671 673 80 115 "" [1 uses])
(note 673 672 674 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 80 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:635 89 {*movdi_internal}
     (nil))
(insn 675 674 676 80 (parallel [
            (set (reg:DI 387)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:637 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 676 675 677 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7ff9ba4c45a0 *.LC52>)) sim2fitman_sup.cpp:637 89 {*movdi_internal}
     (nil))
(insn 677 676 678 80 (set (reg:DI 5 di)
        (reg:DI 387)) sim2fitman_sup.cpp:637 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 387)
        (nil)))
(call_insn/i 678 677 679 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:637 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 679 678 680 80 (set (reg:SI 236 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:637 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 680 679 681 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 236 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:637 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 236 [ D.6576 ])
        (nil)))
(jump_insn 681 680 682 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 741)
            (pc))) sim2fitman_sup.cpp:637 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 741)
;;  succ:       81 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 237 388
(note 682 681 683 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 683 682 684 81 (parallel [
            (set (reg:DI 388)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:638 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 684 683 685 81 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7ff9ba4c4630 *.LC53>)) sim2fitman_sup.cpp:638 89 {*movdi_internal}
     (nil))
(insn 685 684 686 81 (set (reg:DI 5 di)
        (reg:DI 388)) sim2fitman_sup.cpp:638 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 388)
        (nil)))
(call_insn/i 686 685 687 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:638 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 687 686 688 81 (set (reg:SI 237 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:638 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 688 687 689 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 237 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:638 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 237 [ D.6576 ])
        (nil)))
(jump_insn 689 688 690 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 703)
            (pc))) sim2fitman_sup.cpp:638 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 703)
;;  succ:       82 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 238 239 389 390 393 394
(note 690 689 691 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 691 690 692 82 (set (reg:SI 238 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:639 90 {*movsi_internal}
     (nil))
(insn 692 691 693 82 (parallel [
            (set (reg:SI 239 [ D.6576 ])
                (plus:SI (reg:SI 238 [ D.6576 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 238 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 693 692 694 82 (set (reg:DI 389)
        (sign_extend:DI (reg:SI 239 [ D.6576 ]))) sim2fitman_sup.cpp:639 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 239 [ D.6576 ])
        (nil)))
(insn 694 693 698 82 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg:DI 389)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 389)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 698 694 699 82 (set (reg/f:DI 394)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:639 89 {*movdi_internal}
     (nil))
(insn 699 698 700 82 (parallel [
            (set (reg:DI 393)
                (plus:DI (reg:DI 390)
                    (reg/f:DI 394)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 394)
        (expr_list:REG_DEAD (reg:DI 390)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 390))
                    (nil))))))
(insn 700 699 884 82 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 393)) sim2fitman_sup.cpp:639 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 393)
        (nil)))
(jump_insn 884 700 885 82 (set (pc)
        (label_ref 796)) 654 {jump}
     (nil)
 -> 796)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 885 884 703)
;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 240 395
(code_label 703 885 704 83 118 "" [1 uses])
(note 704 703 705 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 83 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:640 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 706 705 707 83 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7ff9ba4c46c0 *.LC54>)) sim2fitman_sup.cpp:640 89 {*movdi_internal}
     (nil))
(insn 707 706 708 83 (set (reg:DI 5 di)
        (reg:DI 395)) sim2fitman_sup.cpp:640 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 395)
        (nil)))
(call_insn/i 708 707 709 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:640 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 709 708 710 83 (set (reg:SI 240 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:640 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 710 709 711 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 240 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:640 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 240 [ D.6576 ])
        (nil)))
(jump_insn 711 710 712 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 725)
            (pc))) sim2fitman_sup.cpp:640 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 725)
;;  succ:       84 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 241 242 396 397 400 401
(note 712 711 713 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 84 (set (reg:SI 241 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:641 90 {*movsi_internal}
     (nil))
(insn 714 713 715 84 (parallel [
            (set (reg:SI 242 [ D.6576 ])
                (plus:SI (reg:SI 241 [ D.6576 ])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 241 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 715 714 716 84 (set (reg:DI 396)
        (sign_extend:DI (reg:SI 242 [ D.6576 ]))) sim2fitman_sup.cpp:641 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 242 [ D.6576 ])
        (nil)))
(insn 716 715 720 84 (parallel [
            (set (reg:DI 397)
                (plus:DI (reg:DI 396)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 396)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 720 716 721 84 (set (reg/f:DI 401)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:641 89 {*movdi_internal}
     (nil))
(insn 721 720 722 84 (parallel [
            (set (reg:DI 400)
                (plus:DI (reg:DI 397)
                    (reg/f:DI 401)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 401)
        (expr_list:REG_DEAD (reg:DI 397)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 397))
                    (nil))))))
(insn 722 721 886 84 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 400)) sim2fitman_sup.cpp:641 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 400)
        (nil)))
(jump_insn 886 722 887 84 (set (pc)
        (label_ref 796)) 654 {jump}
     (nil)
 -> 796)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 887 886 725)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 243 244 402 403 406 407
(code_label 725 887 726 85 120 "" [1 uses])
(note 726 725 727 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 727 726 728 85 (set (reg:SI 243 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:643 90 {*movsi_internal}
     (nil))
(insn 728 727 729 85 (parallel [
            (set (reg:SI 244 [ D.6576 ])
                (plus:SI (reg:SI 243 [ D.6576 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 243 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 729 728 730 85 (set (reg:DI 402)
        (sign_extend:DI (reg:SI 244 [ D.6576 ]))) sim2fitman_sup.cpp:643 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 244 [ D.6576 ])
        (nil)))
(insn 730 729 734 85 (parallel [
            (set (reg:DI 403)
                (plus:DI (reg:DI 402)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 402)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 734 730 735 85 (set (reg/f:DI 407)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:643 89 {*movdi_internal}
     (nil))
(insn 735 734 736 85 (parallel [
            (set (reg:DI 406)
                (plus:DI (reg:DI 403)
                    (reg/f:DI 407)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 407)
        (expr_list:REG_DEAD (reg:DI 403)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 403))
                    (nil))))))
(insn 736 735 888 85 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 406)) sim2fitman_sup.cpp:643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 406)
        (nil)))
(jump_insn 888 736 889 85 (set (pc)
        (label_ref 796)) 654 {jump}
     (nil)
 -> 796)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 889 888 741)
;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 245 408
(code_label 741 889 742 86 117 "" [1 uses])
(note 742 741 743 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 86 (parallel [
            (set (reg:DI 408)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:646 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 744 743 745 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7ff9ba4c4630 *.LC53>)) sim2fitman_sup.cpp:646 89 {*movdi_internal}
     (nil))
(insn 745 744 746 86 (set (reg:DI 5 di)
        (reg:DI 408)) sim2fitman_sup.cpp:646 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 408)
        (nil)))
(call_insn/i 746 745 747 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:646 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 747 746 748 86 (set (reg:SI 245 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:646 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 748 747 749 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 245 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:646 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 245 [ D.6576 ])
        (nil)))
(jump_insn 749 748 750 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 763)
            (pc))) sim2fitman_sup.cpp:646 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 763)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 246 247 409 410 413 414
(note 750 749 751 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 751 750 752 87 (set (reg:SI 246 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:647 90 {*movsi_internal}
     (nil))
(insn 752 751 753 87 (parallel [
            (set (reg:SI 247 [ D.6576 ])
                (plus:SI (reg:SI 246 [ D.6576 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 246 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 753 752 754 87 (set (reg:DI 409)
        (sign_extend:DI (reg:SI 247 [ D.6576 ]))) sim2fitman_sup.cpp:647 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 247 [ D.6576 ])
        (nil)))
(insn 754 753 758 87 (parallel [
            (set (reg:DI 410)
                (plus:DI (reg:DI 409)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 409)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 758 754 759 87 (set (reg/f:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:647 89 {*movdi_internal}
     (nil))
(insn 759 758 760 87 (parallel [
            (set (reg:DI 413)
                (plus:DI (reg:DI 410)
                    (reg/f:DI 414)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 414)
        (expr_list:REG_DEAD (reg:DI 410)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 410))
                    (nil))))))
(insn 760 759 890 87 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 413)) sim2fitman_sup.cpp:647 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 413)
        (nil)))
(jump_insn 890 760 891 87 (set (pc)
        (label_ref 796)) 654 {jump}
     (nil)
 -> 796)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 891 890 763)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 248 415
(code_label 763 891 764 88 122 "" [1 uses])
(note 764 763 765 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 765 764 766 88 (parallel [
            (set (reg:DI 415)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:648 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 766 765 767 88 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7ff9ba4c46c0 *.LC54>)) sim2fitman_sup.cpp:648 89 {*movdi_internal}
     (nil))
(insn 767 766 768 88 (set (reg:DI 5 di)
        (reg:DI 415)) sim2fitman_sup.cpp:648 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 415)
        (nil)))
(call_insn/i 768 767 769 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7ff9ba963360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:648 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 769 768 770 88 (set (reg:SI 248 [ D.6576 ])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:648 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 770 769 771 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 248 [ D.6576 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:648 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 248 [ D.6576 ])
        (nil)))
(jump_insn 771 770 772 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) sim2fitman_sup.cpp:648 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 785)
;;  succ:       89 (FALLTHRU)
;;              90
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 249 250 416 417 420 421
(note 772 771 773 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 774 89 (set (reg:SI 249 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:649 90 {*movsi_internal}
     (nil))
(insn 774 773 775 89 (parallel [
            (set (reg:SI 250 [ D.6576 ])
                (plus:SI (reg:SI 249 [ D.6576 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 249 [ D.6576 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 775 774 776 89 (set (reg:DI 416)
        (sign_extend:DI (reg:SI 250 [ D.6576 ]))) sim2fitman_sup.cpp:649 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 250 [ D.6576 ])
        (nil)))
(insn 776 775 780 89 (parallel [
            (set (reg:DI 417)
                (plus:DI (reg:DI 416)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 416)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 780 776 781 89 (set (reg/f:DI 421)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:649 89 {*movdi_internal}
     (nil))
(insn 781 780 782 89 (parallel [
            (set (reg:DI 420)
                (plus:DI (reg:DI 417)
                    (reg/f:DI 421)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 421)
        (expr_list:REG_DEAD (reg:DI 417)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 417))
                    (nil))))))
(insn 782 781 892 89 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 420)) sim2fitman_sup.cpp:649 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 420)
        (nil)))
(jump_insn 892 782 893 89 (set (pc)
        (label_ref 796)) 654 {jump}
     (nil)
 -> 796)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 893 892 785)
;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 251 422 423 426 427
(code_label 785 893 786 90 123 "" [1 uses])
(note 786 785 787 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 788 90 (set (reg:SI 251 [ D.6576 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:651 90 {*movsi_internal}
     (nil))
(insn 788 787 789 90 (set (reg:DI 422)
        (sign_extend:DI (reg:SI 251 [ D.6576 ]))) sim2fitman_sup.cpp:651 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 251 [ D.6576 ])
        (nil)))
(insn 789 788 793 90 (parallel [
            (set (reg:DI 423)
                (plus:DI (reg:DI 422)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:651 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 422)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 793 789 794 90 (set (reg/f:DI 427)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:651 89 {*movdi_internal}
     (nil))
(insn 794 793 795 90 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg:DI 423)
                    (reg/f:DI 427)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:651 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 427)
        (expr_list:REG_DEAD (reg:DI 423)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                        (reg:DI 423))
                    (nil))))))
(insn 795 794 796 90 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 426)) sim2fitman_sup.cpp:651 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 426)
        (nil)))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 [100.0%] 
;;              85 [100.0%] 
;;              87 [100.0%] 
;;              90 (FALLTHRU)
;;              82 [100.0%] 
;;              89 [100.0%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 428
(code_label 796 795 797 91 121 "" [5 uses])
(note 797 796 798 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 91 (set (reg/f:DI 428)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 fname_suffix+0 S8 A64])) sim2fitman_sup.cpp:655 89 {*movdi_internal}
     (nil))
(insn 799 798 800 91 (set (mem:DI (reg/f:DI 428) [0 MEM[(void *)fname_suffix_4]+0 S8 A8])
        (const_int 8386094131808466271 [0x7461642e736e755f])) sim2fitman_sup.cpp:655 89 {*movdi_internal}
     (nil))
(insn 800 799 801 91 (set (mem:QI (plus:DI (reg/f:DI 428)
                (const_int 8 [0x8])) [0 MEM[(void *)fname_suffix_4]+8 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:655 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 428)
        (nil)))
(insn 801 800 802 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:657 7 {*cmpsi_1}
     (nil))
(jump_insn 802 801 803 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 897)
            (pc))) sim2fitman_sup.cpp:657 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 897)
;;  succ:       92 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 429
(note 803 802 804 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 92 (set (reg:QI 429)
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A32])) sim2fitman_sup.cpp:659 93 {*movqi_internal}
     (nil))
(insn 805 804 806 92 (parallel [
            (set (reg:QI 252 [ D.6578 ])
                (xor:QI (reg:QI 429)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:659 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 429)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                            (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 806 805 807 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 252 [ D.6578 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:659 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 252 [ D.6578 ])
        (nil)))
(jump_insn 807 806 808 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) sim2fitman_sup.cpp:659 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 827)
;;  succ:       93 (FALLTHRU)
;;              95
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 253 254 255 430
(note 808 807 809 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 93 (set (reg/f:DI 430)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:661 89 {*movdi_internal}
     (nil))
(insn 810 809 811 93 (parallel [
            (set (reg/f:DI 253 [ D.6574 ])
                (plus:DI (reg/f:DI 430)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:661 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 430)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 768 [0x300]))
                (nil)))))
(insn 811 810 812 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7ff9ba4c4750 *.LC55>)) sim2fitman_sup.cpp:661 89 {*movdi_internal}
     (nil))
(insn 812 811 813 93 (set (reg:DI 5 di)
        (reg/f:DI 253 [ D.6574 ])) sim2fitman_sup.cpp:661 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ D.6574 ])
        (nil)))
(call_insn 813 812 814 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7ff9ba725e58 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 814 813 815 93 (set (reg/f:DI 254 [ D.6579 ])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:661 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 815 814 816 93 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
        (reg/f:DI 254 [ D.6579 ])) sim2fitman_sup.cpp:661 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.6579 ])
        (nil)))
(insn 816 815 817 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 4 {*cmpdi_ccno_1}
     (nil))
(insn 817 816 818 93 (set (reg:QI 255 [ D.6578 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 818 817 819 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 255 [ D.6578 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 255 [ D.6578 ])
        (nil)))
(jump_insn 819 818 820 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) sim2fitman_sup.cpp:661 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 827)
;;  succ:       94 (FALLTHRU)
;;              95
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 256 431 432
(note 820 819 821 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 94 (set (reg/f:DI 431)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:665 89 {*movdi_internal}
     (nil))
(insn 822 821 823 94 (parallel [
            (set (reg/f:DI 256 [ D.6574 ])
                (plus:DI (reg/f:DI 431)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:665 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 431)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (const_int 768 [0x300]))
                (nil)))))
(insn 823 822 824 94 (set (reg:SI 432)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])) sim2fitman_sup.cpp:665 90 {*movsi_internal}
     (nil))
(insn 824 823 825 94 (set (reg:SI 4 si)
        (reg:SI 432)) sim2fitman_sup.cpp:665 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 432)
        (nil)))
(insn 825 824 826 94 (set (reg:DI 5 di)
        (reg/f:DI 256 [ D.6574 ])) sim2fitman_sup.cpp:665 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 256 [ D.6574 ])
        (nil)))
(call_insn 826 825 827 94 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_03Pci") [flags 0x41]  <function_decl 0x7ff9ba86f360 cond_exit_03>) [0 cond_exit_03 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:665 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       95 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92
;;              94 (FALLTHRU)
;;              93
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 827 826 828 95 124 "" [2 uses])
(note 828 827 829 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 829 828 830 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:670 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 830 829 831 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 897)
            (pc))) sim2fitman_sup.cpp:670 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 897)
;;  succ:       96 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 433
(note 831 830 832 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 832 831 833 96 (set (reg:DI 433)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 check_file+0 S8 A64])) sim2fitman_sup.cpp:671 89 {*movdi_internal}
     (nil))
(insn 833 832 834 96 (set (reg:DI 5 di)
        (reg:DI 433)) sim2fitman_sup.cpp:671 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 433)
        (nil)))
(call_insn 834 833 897 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7ff9ba725af8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:671 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       100 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 97, flags: (NEW, RTL, MODIFIED)
;;  pred:       79
;;              95
;;              96 [100.0%]  (FALLTHRU)
;;              91
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 897 834 896 100 126 "" [3 uses])
(note 896 897 898 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 898 896 837 100 (const_int 0 [0]) sim2fitman_sup.cpp:675 684 {nop}
     (nil))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 [100.0%]  (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 837 898 843 97 76 "" [0 uses])
(note 843 837 838 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 838 843 839 97 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6580+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sim2fitman_sup.cpp:675 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 839 838 844 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 842)
            (pc))) sim2fitman_sup.cpp:675 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 842)
;;  succ:       99
;;              98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 844 839 840 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(call_insn 840 844 841 98 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7ff9ba875d80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:675 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 841 840 842)
;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 842 841 845 99 125 "" [1 uses])
(note 845 842 0 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void infile_stats(Procpar_info*, InFile_struct*, Data_file_header*) (_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header, funcdef_no=13, decl_uid=5518, cgraph_uid=13, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 125.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r110,l0) best DIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best SIREG, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best SIREG, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a8(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a17(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a19(r95,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a20(r123,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a21(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a23(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a25(r93,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a26(r119,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a27(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a31(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a32(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a34(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a35(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a36(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a39(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a40(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a41(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a42(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a43(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a44(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 128(l0): point = 0
   Insn 125(l0): point = 2
   Insn 124(l0): point = 4
   Insn 123(l0): point = 6
   Insn 122(l0): point = 8
   Insn 121(l0): point = 10
   Insn 120(l0): point = 12
   Insn 119(l0): point = 14
   Insn 118(l0): point = 16
   Insn 117(l0): point = 18
   Insn 116(l0): point = 20
   Insn 115(l0): point = 22
   Insn 114(l0): point = 24
   Insn 113(l0): point = 26
   Insn 112(l0): point = 28
   Insn 111(l0): point = 30
   Insn 110(l0): point = 32
   Insn 109(l0): point = 34
   Insn 108(l0): point = 36
   Insn 107(l0): point = 38
   Insn 106(l0): point = 40
   Insn 105(l0): point = 42
   Insn 104(l0): point = 44
   Insn 103(l0): point = 46
   Insn 102(l0): point = 48
   Insn 101(l0): point = 50
   Insn 100(l0): point = 52
   Insn 99(l0): point = 54
   Insn 98(l0): point = 56
   Insn 97(l0): point = 58
   Insn 96(l0): point = 60
   Insn 95(l0): point = 62
   Insn 94(l0): point = 64
   Insn 93(l0): point = 66
   Insn 92(l0): point = 68
   Insn 91(l0): point = 70
   Insn 90(l0): point = 72
   Insn 89(l0): point = 74
   Insn 88(l0): point = 76
   Insn 87(l0): point = 78
   Insn 86(l0): point = 80
   Insn 85(l0): point = 82
   Insn 84(l0): point = 84
   Insn 83(l0): point = 86
   Insn 82(l0): point = 88
   Insn 81(l0): point = 90
   Insn 80(l0): point = 92
   Insn 79(l0): point = 94
   Insn 78(l0): point = 96
   Insn 77(l0): point = 98
   Insn 76(l0): point = 100
   Insn 75(l0): point = 102
   Insn 74(l0): point = 104
   Insn 73(l0): point = 106
   Insn 72(l0): point = 108
   Insn 71(l0): point = 110
   Insn 70(l0): point = 112
   Insn 69(l0): point = 114
   Insn 68(l0): point = 116
   Insn 67(l0): point = 118
   Insn 66(l0): point = 120
   Insn 65(l0): point = 122
   Insn 64(l0): point = 124
   Insn 63(l0): point = 126
   Insn 62(l0): point = 128
   Insn 61(l0): point = 130
   Insn 60(l0): point = 132
   Insn 59(l0): point = 134
   Insn 58(l0): point = 136
   Insn 57(l0): point = 138
   Insn 56(l0): point = 140
   Insn 55(l0): point = 142
   Insn 54(l0): point = 144
   Insn 53(l0): point = 146
   Insn 52(l0): point = 148
   Insn 51(l0): point = 150
   Insn 37(l0): point = 153
   Insn 36(l0): point = 155
   Insn 129(l0): point = 158
   Insn 45(l0): point = 160
   Insn 44(l0): point = 162
   Insn 43(l0): point = 164
   Insn 42(l0): point = 166
   Insn 41(l0): point = 168
   Insn 40(l0): point = 170
   Insn 39(l0): point = 172
   Insn 34(l0): point = 175
   Insn 33(l0): point = 177
   Insn 32(l0): point = 179
   Insn 31(l0): point = 181
   Insn 30(l0): point = 183
   Insn 29(l0): point = 185
   Insn 28(l0): point = 187
   Insn 27(l0): point = 189
   Insn 26(l0): point = 191
   Insn 25(l0): point = 193
   Insn 24(l0): point = 195
   Insn 23(l0): point = 197
   Insn 22(l0): point = 199
   Insn 21(l0): point = 201
   Insn 20(l0): point = 203
   Insn 19(l0): point = 205
   Insn 18(l0): point = 207
   Insn 17(l0): point = 209
   Insn 16(l0): point = 211
   Insn 15(l0): point = 213
   Insn 14(l0): point = 215
   Insn 13(l0): point = 217
   Insn 12(l0): point = 219
   Insn 11(l0): point = 221
   Insn 10(l0): point = 223
   Insn 9(l0): point = 225
   Insn 8(l0): point = 227
   Insn 4(l0): point = 229
   Insn 3(l0): point = 231
   Insn 2(l0): point = 233
 a0(r132): [5..6]
 a1(r105): [19..20]
 a2(r131): [21..22]
 a3(r104): [31..32]
 a4(r103): [33..34]
 a5(r102): [33..38]
 a6(r130): [35..36]
 a7(r129): [39..40]
 a8(r101): [49..50]
 a9(r128): [51..52]
 a10(r100): [61..62]
 a11(r99): [63..64]
 a12(r98): [63..68]
 a13(r127): [65..66]
 a14(r97): [69..70]
 a15(r126): [71..72]
 a16(r96): [81..82]
 a17(r125): [83..84]
 a18(r124): [85..86]
 a19(r95): [87..90]
 a20(r123): [87..88]
 a21(r122): [91..92]
 a22(r94): [101..102]
 a23(r121): [103..104]
 a24(r120): [105..106]
 a25(r93): [107..110]
 a26(r119): [107..108]
 a27(r118): [111..112]
 a28(r92): [121..122]
 a29(r117): [123..124]
 a30(r91): [133..134]
 a31(r116): [135..136]
 a32(r115): [145..146]
 a33(r114): [161..162]
 a34(r113): [171..172]
 a35(r112): [176..177]
 a36(r111): [182..185]
 a37(r110): [190..193]
 a38(r90): [192..195]
 a39(r109): [196..197]
 a40(r108): [200..201]
 a41(r107): [204..205]
 a42(r89): [210..211]
 a43(r88): [212..213]
 a44(r87): [218..219]
 a45(r106): [220..221]
Compressing live ranges: from 236 to 82 - 34%
Ranges after the compression:
 a0(r132): [0..1]
 a1(r105): [2..3]
 a2(r131): [4..5]
 a3(r104): [6..7]
 a4(r103): [8..9]
 a5(r102): [8..11]
 a6(r130): [10..11]
 a7(r129): [12..13]
 a8(r101): [14..15]
 a9(r128): [16..17]
 a10(r100): [18..19]
 a11(r99): [20..21]
 a12(r98): [20..23]
 a13(r127): [22..23]
 a14(r97): [24..25]
 a15(r126): [26..27]
 a16(r96): [28..29]
 a17(r125): [30..31]
 a18(r124): [32..33]
 a19(r95): [34..35]
 a20(r123): [34..35]
 a21(r122): [36..37]
 a22(r94): [38..39]
 a23(r121): [40..41]
 a24(r120): [42..43]
 a25(r93): [44..45]
 a26(r119): [44..45]
 a27(r118): [46..47]
 a28(r92): [48..49]
 a29(r117): [50..51]
 a30(r91): [52..53]
 a31(r116): [54..55]
 a32(r115): [56..57]
 a33(r114): [58..59]
 a34(r113): [60..61]
 a35(r112): [62..63]
 a36(r111): [64..65]
 a37(r110): [66..67]
 a38(r90): [66..67]
 a39(r109): [68..69]
 a40(r108): [70..71]
 a41(r107): [72..73]
 a42(r89): [74..75]
 a43(r88): [76..77]
 a44(r87): [78..79]
 a45(r106): [80..81]
  regions=1, blocks=6, points=82
    allocnos=46 (big 0), copies=0, conflicts=0, ranges=46
Disposition:
   44:r87  l0     0   43:r88  l0     0   42:r89  l0     0   38:r90  l0     1
   30:r91  l0     0   28:r92  l0     0   25:r93  l0     0   22:r94  l0     0
   19:r95  l0     0   16:r96  l0     0   14:r97  l0     0   12:r98  l0     1
   11:r99  l0     0   10:r100 l0     0    8:r101 l0     0    5:r102 l0     1
    4:r103 l0     0    3:r104 l0     0    1:r105 l0     0   45:r106 l0     0
   41:r107 l0     0   40:r108 l0     0   39:r109 l0     0   37:r110 l0     0
   36:r111 l0     0   35:r112 l0     0   34:r113 l0     0   33:r114 l0     0
   32:r115 l0     0   31:r116 l0     0   29:r117 l0     0   27:r118 l0     0
   26:r119 l0     1   24:r120 l0     0   23:r121 l0     0   21:r122 l0     0
   20:r123 l0     1   18:r124 l0     0   17:r125 l0     0   15:r126 l0     0
   13:r127 l0     0    9:r128 l0     0    7:r129 l0     0    6:r130 l0     0
    2:r131 l0     0    0:r132 l0     0
+++Costs: overall -11, reg -11, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void infile_stats(Procpar_info*, InFile_struct*, Data_file_header*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={27d,13u} r1={18d,1u} r2={18d} r4={30d,13u} r5={35d,18u} r6={1d,5u} r7={1d,22u} r8={17d} r9={17d} r10={17d} r11={17d} r12={17d} r13={17d} r14={17d} r15={17d} r16={1d,4u} r17={29d,1u} r18={17d} r19={17d} r20={1d,35u,2e} r21={18d} r22={18d} r23={18d} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={18d} r38={18d} r39={17d} r40={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} 
;;    total ref usage 1501{1339d,160u,2e} in 116{99 regular + 17 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 106 107 108 109 110 111 112
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) sim2fitman_sup.cpp:681 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ procpar_info ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])
        (reg:DI 4 si [ infile_struct ])) sim2fitman_sup.cpp:681 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ infile_struct ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])
        (reg:DI 1 dx [ main_header ])) sim2fitman_sup.cpp:681 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ main_header ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:683 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:684 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:685 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 87 [ D.6585 ])
                (plus:DI (reg/f:DI 106)
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:688 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (const_int 60 [0x3c]))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6585 ])) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6585 ])
        (nil)))
(call_insn/i 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7ff9ba9650d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:688 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 88 [ D.6586 ])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 89 [ D.6586 ])
                (plus:DI (reg:DI 88 [ D.6586 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:688 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6586 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 89 [ D.6586 ])) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.6586 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff9ba999a20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:688 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 107)
        (reg:DI 0 ax)) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 107)
            (nil))))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg/f:DI 107)) sim2fitman_sup.cpp:688 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:689 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])
        (reg/f:DI 108)) sim2fitman_sup.cpp:689 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:692 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 90 [ D.6585 ])
                (plus:DI (reg/f:DI 109)
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:692 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (const_int 60 [0x3c]))
                (nil)))))
(insn 25 24 26 2 (set (reg:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:692 89 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.6585 ])) sim2fitman_sup.cpp:692 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6585 ])
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 110)) sim2fitman_sup.cpp:692 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7ff9ba9635e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:692 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:693 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7ff9ba5011b0 *.LC56>)) sim2fitman_sup.cpp:693 89 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 111)) sim2fitman_sup.cpp:693 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(call_insn 32 31 33 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ff9ba7a5870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:693 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg:DI 112)
        (reg:DI 0 ax)) sim2fitman_sup.cpp:693 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 46 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg:DI 112)) sim2fitman_sup.cpp:693 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 46 34 35 3 129 "" [1 uses])
(note 35 46 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:694 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) sim2fitman_sup.cpp:694 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:695 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])
        (reg/f:DI 113)) sim2fitman_sup.cpp:695 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 41 40 42 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7ff9ba5011b0 *.LC56>)) sim2fitman_sup.cpp:696 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_sup.cpp:696 89 {*movdi_internal}
     (nil))
(call_insn 43 42 44 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7ff9ba7a5870 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:696 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 4 (set (reg:DI 114)
        (reg:DI 0 ax)) sim2fitman_sup.cpp:696 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 45 44 129 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg:DI 114)) sim2fitman_sup.cpp:696 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(jump_insn 129 45 130 4 (set (pc)
        (label_ref 46)) sim2fitman_sup.cpp:694 654 {jump}
     (nil)
 -> 46)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 130 129 49)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132
(code_label 49 130 50 5 128 "" [1 uses])
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7ff9ba501240 *.LC57>)) sim2fitman_sup.cpp:699 89 {*movdi_internal}
     (nil))
(call_insn 52 51 53 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:699 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 5 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])) sim2fitman_sup.cpp:700 89 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:DI 4 si)
        (reg:DI 115)) sim2fitman_sup.cpp:700 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7ff9ba5012d0 *.LC58>)) sim2fitman_sup.cpp:700 89 {*movdi_internal}
     (nil))
(insn 56 55 57 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:700 93 {*movqi_internal}
     (nil))
(call_insn 57 56 58 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:700 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 58 57 59 5 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:702 89 {*movdi_internal}
     (nil))
(insn 59 58 60 5 (set (reg:SI 91 [ D.6587 ])
        (mem/j:SI (plus:DI (reg/f:DI 116)
                (const_int 8 [0x8])) [0 infile_struct_25(D)->file_size+0 S4 A64])) sim2fitman_sup.cpp:702 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 60 59 61 5 (set (reg:SI 4 si)
        (reg:SI 91 [ D.6587 ])) sim2fitman_sup.cpp:702 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.6587 ])
        (nil)))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7ff9ba501360 *.LC59>)) sim2fitman_sup.cpp:702 89 {*movdi_internal}
     (nil))
(insn 62 61 63 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:702 93 {*movqi_internal}
     (nil))
(call_insn 63 62 64 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:702 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 64 63 65 5 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:703 89 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:SI 92 [ D.6587 ])
        (mem/j:SI (plus:DI (reg/f:DI 117)
                (const_int 328 [0x148])) [0 procpar_info_7(D)->num_points+0 S4 A64])) sim2fitman_sup.cpp:703 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 66 65 67 5 (set (reg:SI 4 si)
        (reg:SI 92 [ D.6587 ])) sim2fitman_sup.cpp:703 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6587 ])
        (nil)))
(insn 67 66 68 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7ff9ba5013f0 *.LC60>)) sim2fitman_sup.cpp:703 89 {*movdi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:703 93 {*movqi_internal}
     (nil))
(call_insn 69 68 70 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:703 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 70 69 71 5 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:704 89 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (set (reg:DI 93 [ D.6588 ])
        (mem/j:DI (plus:DI (reg/f:DI 118)
                (const_int 24 [0x18])) [0 main_header_30(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:704 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (nil)))
(insn 72 71 73 5 (parallel [
            (set (reg:DI 119)
                (lshiftrt:DI (reg:DI 93 [ D.6588 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 5 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg:DI 119)
                    (reg:DI 93 [ D.6588 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119)
        (expr_list:REG_DEAD (reg:DI 93 [ D.6588 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 74 73 75 5 (parallel [
            (set (reg:DI 121)
                (ashiftrt:DI (reg:DI 120)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 120)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 5 (set (reg:DI 94 [ D.6588 ])
        (reg:DI 121)) sim2fitman_sup.cpp:704 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121)
        (nil)))
(insn 76 75 77 5 (set (reg:DI 4 si)
        (reg:DI 94 [ D.6588 ])) sim2fitman_sup.cpp:704 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6588 ])
        (nil)))
(insn 77 76 78 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7ff9ba501480 *.LC61>)) sim2fitman_sup.cpp:704 89 {*movdi_internal}
     (nil))
(insn 78 77 79 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:704 93 {*movqi_internal}
     (nil))
(call_insn 79 78 80 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:704 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 80 79 81 5 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:705 89 {*movdi_internal}
     (nil))
(insn 81 80 82 5 (set (reg:DI 95 [ D.6588 ])
        (mem/j:DI (plus:DI (reg/f:DI 122)
                (const_int 24 [0x18])) [0 main_header_30(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:705 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (nil)))
(insn 82 81 83 5 (parallel [
            (set (reg:DI 123)
                (lshiftrt:DI (reg:DI 95 [ D.6588 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 83 82 84 5 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg:DI 123)
                    (reg:DI 95 [ D.6588 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123)
        (expr_list:REG_DEAD (reg:DI 95 [ D.6588 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 84 83 85 5 (parallel [
            (set (reg:DI 125)
                (ashiftrt:DI (reg:DI 124)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 5 (set (reg:DI 96 [ D.6588 ])
        (reg:DI 125)) sim2fitman_sup.cpp:705 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(insn 86 85 87 5 (set (reg:DI 4 si)
        (reg:DI 96 [ D.6588 ])) sim2fitman_sup.cpp:705 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.6588 ])
        (nil)))
(insn 87 86 88 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7ff9ba501510 *.LC62>)) sim2fitman_sup.cpp:705 89 {*movdi_internal}
     (nil))
(insn 88 87 89 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:705 93 {*movqi_internal}
     (nil))
(call_insn 89 88 90 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:705 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 90 89 91 5 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:707 89 {*movdi_internal}
     (nil))
(insn 91 90 92 5 (set (reg:SI 97 [ D.6587 ])
        (mem/j:SI (plus:DI (reg/f:DI 126)
                (const_int 328 [0x148])) [0 procpar_info_7(D)->num_points+0 S4 A64])) sim2fitman_sup.cpp:707 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126)
        (nil)))
(insn 92 91 93 5 (set (reg:DI 98 [ D.6588 ])
        (sign_extend:DI (reg:SI 97 [ D.6587 ]))) sim2fitman_sup.cpp:706 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ D.6587 ])
        (nil)))
(insn 93 92 94 5 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:707 89 {*movdi_internal}
     (nil))
(insn 94 93 95 5 (set (reg:DI 99 [ D.6588 ])
        (mem/j:DI (plus:DI (reg/f:DI 127)
                (const_int 24 [0x18])) [0 main_header_30(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:707 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127)
        (nil)))
(insn 95 94 96 5 (parallel [
            (set (reg:DI 100 [ D.6588 ])
                (mult:DI (reg:DI 98 [ D.6588 ])
                    (reg:DI 99 [ D.6588 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:706 306 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.6588 ])
        (expr_list:REG_DEAD (reg:DI 98 [ D.6588 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 96 95 97 5 (set (reg:DI 4 si)
        (reg:DI 100 [ D.6588 ])) sim2fitman_sup.cpp:707 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ D.6588 ])
        (nil)))
(insn 97 96 98 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC63") [flags 0x2]  <var_decl 0x7ff9ba5015a0 *.LC63>)) sim2fitman_sup.cpp:707 89 {*movdi_internal}
     (nil))
(insn 98 97 99 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:707 93 {*movqi_internal}
     (nil))
(call_insn 99 98 100 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:707 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 100 99 101 5 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:708 89 {*movdi_internal}
     (nil))
(insn 101 100 102 5 (set (reg:SI 101 [ D.6587 ])
        (mem/j:SI (plus:DI (reg/f:DI 128)
                (const_int 4 [0x4])) [0 infile_struct_25(D)->num_unsup_sets+0 S4 A32])) sim2fitman_sup.cpp:708 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128)
        (nil)))
(insn 102 101 103 5 (set (reg:SI 4 si)
        (reg:SI 101 [ D.6587 ])) sim2fitman_sup.cpp:708 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 101 [ D.6587 ])
        (nil)))
(insn 103 102 104 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC64") [flags 0x2]  <var_decl 0x7ff9ba501630 *.LC64>)) sim2fitman_sup.cpp:708 89 {*movdi_internal}
     (nil))
(insn 104 103 105 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:708 93 {*movqi_internal}
     (nil))
(call_insn 105 104 106 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:708 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 106 105 107 5 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:710 89 {*movdi_internal}
     (nil))
(insn 107 106 108 5 (set (reg:SI 102 [ D.6587 ])
        (mem/j:SI (reg/f:DI 129) [0 infile_struct_25(D)->num_datasets+0 S4 A64])) sim2fitman_sup.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(insn 108 107 109 5 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:710 89 {*movdi_internal}
     (nil))
(insn 109 108 110 5 (set (reg:SI 103 [ D.6587 ])
        (mem/j:SI (plus:DI (reg/f:DI 130)
                (const_int 4 [0x4])) [0 infile_struct_25(D)->num_unsup_sets+0 S4 A32])) sim2fitman_sup.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 110 109 111 5 (parallel [
            (set (reg:SI 104 [ D.6587 ])
                (minus:SI (reg:SI 102 [ D.6587 ])
                    (reg:SI 103 [ D.6587 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:709 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.6587 ])
        (expr_list:REG_DEAD (reg:SI 102 [ D.6587 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 111 110 112 5 (set (reg:SI 4 si)
        (reg:SI 104 [ D.6587 ])) sim2fitman_sup.cpp:710 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ D.6587 ])
        (nil)))
(insn 112 111 113 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC65") [flags 0x2]  <var_decl 0x7ff9ba5016c0 *.LC65>)) sim2fitman_sup.cpp:710 89 {*movdi_internal}
     (nil))
(insn 113 112 114 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:710 93 {*movqi_internal}
     (nil))
(call_insn 114 113 115 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:710 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 115 114 116 5 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:711 89 {*movdi_internal}
     (nil))
(insn 116 115 117 5 (set (reg:SI 105 [ D.6587 ])
        (mem/j:SI (reg/f:DI 131) [0 infile_struct_25(D)->num_datasets+0 S4 A64])) sim2fitman_sup.cpp:711 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (nil)))
(insn 117 116 118 5 (set (reg:SI 4 si)
        (reg:SI 105 [ D.6587 ])) sim2fitman_sup.cpp:711 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 105 [ D.6587 ])
        (nil)))
(insn 118 117 119 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC66") [flags 0x2]  <var_decl 0x7ff9ba501750 *.LC66>)) sim2fitman_sup.cpp:711 89 {*movdi_internal}
     (nil))
(insn 119 118 120 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:711 93 {*movqi_internal}
     (nil))
(call_insn 120 119 121 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:711 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 121 120 122 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7ff9ba501240 *.LC57>)) sim2fitman_sup.cpp:712 89 {*movdi_internal}
     (nil))
(call_insn 122 121 123 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:712 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 123 122 124 5 (set (reg:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])) sim2fitman_sup.cpp:714 89 {*movdi_internal}
     (nil))
(insn 124 123 125 5 (set (reg:DI 5 di)
        (reg:DI 132)) sim2fitman_sup.cpp:714 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132)
        (nil)))
(call_insn 125 124 128 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7ff9ba98f1b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:714 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 128 125 0 5 (const_int 0 [0]) sim2fitman_sup.cpp:715 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void print_version() (_Z13print_versionv, funcdef_no=14, decl_uid=5519, cgraph_uid=14, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
Compressing live ranges: from 19 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void print_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,1u} r1={4d} r2={4d} r4={5d,1u} r5={7d,3u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 255{240d,15u,0e} in 9{6 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC67") [flags 0x2]  <var_decl 0x7ff9ba501cf0 *.LC67>)) sim2fitman_sup.cpp:722 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC68") [flags 0x2]  <var_decl 0x7ff9ba501d80 *.LC68>)) sim2fitman_sup.cpp:722 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:722 93 {*movqi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:722 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC69") [flags 0x2]  <var_decl 0x7ff9ba501e10 *.LC69>)) sim2fitman_sup.cpp:723 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:723 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC70") [flags 0x2]  <var_decl 0x7ff9ba501ea0 *.LC70>)) sim2fitman_sup.cpp:724 89 {*movdi_internal}
     (nil))
(call_insn 12 11 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff9ba96f000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:724 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 12 0 2 (const_int 0 [0]) sim2fitman_sup.cpp:726 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void close_infiles(FILE**) (_Z13close_infilesPP8_IO_FILE, funcdef_no=15, decl_uid=5521, cgraph_uid=15, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 42(l0): point = 1
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 38(l0): point = 9
   Insn 30(l0): point = 11
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 27(l0): point = 31
   Insn 26(l0): point = 33
   Insn 25(l0): point = 35
   Insn 24(l0): point = 37
   Insn 23(l0): point = 39
   Insn 22(l0): point = 41
   Insn 21(l0): point = 43
   Insn 20(l0): point = 45
   Insn 6(l0): point = 48
   Insn 2(l0): point = 50
 a0(r94): [34..35]
 a1(r93): [36..37]
 a2(r98): [38..39]
 a3(r92): [38..41]
 a4(r91): [42..43]
 a5(r97): [44..45]
 a6(r90): [17..18]
 a7(r89): [19..20]
 a8(r96): [21..22]
 a9(r88): [21..24]
 a10(r87): [25..26]
 a11(r95): [27..28]
Compressing live ranges: from 53 to 20 - 37%
Ranges after the compression:
 a0(r94): [10..11]
 a1(r93): [12..13]
 a2(r98): [14..15]
 a3(r92): [14..15]
 a4(r91): [16..17]
 a5(r97): [18..19]
 a6(r90): [0..1]
 a7(r89): [2..3]
 a8(r96): [4..5]
 a9(r88): [4..5]
 a10(r87): [6..7]
 a11(r95): [8..9]
  regions=1, blocks=9, points=20
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
   10:r87  l0     0    9:r88  l0     1    7:r89  l0     0    6:r90  l0     0
    4:r91  l0     0    3:r92  l0     1    1:r93  l0     0    0:r94  l0     0
   11:r95  l0     0    8:r96  l0     0    5:r97  l0     0    2:r98  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void close_infiles(FILE**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={8d,2u} r18={1d} r19={1d} r20={1d,17u,2e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 172{111d,57u,4e} in 23{22 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) sim2fitman_sup.cpp:731 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ in_file ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 31 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:734 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              6 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 31 6 7 3 134 "" [1 uses])
(note 7 31 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:734 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) sim2fitman_sup.cpp:734 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 41)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 95 96
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:735 90 {*movsi_internal}
     (nil))
(insn 12 11 13 4 (set (reg:DI 87 [ D.6604 ])
        (sign_extend:DI (reg:SI 95))) sim2fitman_sup.cpp:735 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 13 12 14 4 (parallel [
            (set (reg:DI 88 [ D.6604 ])
                (ashift:DI (reg:DI 87 [ D.6604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:735 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.6604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])) sim2fitman_sup.cpp:735 89 {*movdi_internal}
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg/f:DI 89 [ D.6605 ])
                (plus:DI (reg:DI 88 [ D.6604 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:735 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_DEAD (reg:DI 88 [ D.6604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
                        (reg:DI 88 [ D.6604 ]))
                    (nil))))))
(insn 16 15 17 4 (set (reg/f:DI 90 [ D.6606 ])
        (mem/f:DI (reg/f:DI 89 [ D.6605 ]) [0 *_9+0 S8 A64])) sim2fitman_sup.cpp:735 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6605 ])
        (nil)))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6606 ])
            (const_int 0 [0]))) sim2fitman_sup.cpp:735 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6606 ])
        (nil)))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) sim2fitman_sup.cpp:735 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 97 98
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:736 90 {*movsi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:DI 91 [ D.6604 ])
        (sign_extend:DI (reg:SI 97))) sim2fitman_sup.cpp:736 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 22 21 23 5 (parallel [
            (set (reg:DI 92 [ D.6604 ])
                (ashift:DI (reg:DI 91 [ D.6604 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:736 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.6604 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 23 22 24 5 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])) sim2fitman_sup.cpp:736 89 {*movdi_internal}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 93 [ D.6605 ])
                (plus:DI (reg:DI 92 [ D.6604 ])
                    (reg/f:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:736 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_DEAD (reg:DI 92 [ D.6604 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
                        (reg:DI 92 [ D.6604 ]))
                    (nil))))))
(insn 25 24 26 5 (set (reg/f:DI 94 [ D.6606 ])
        (mem/f:DI (reg/f:DI 93 [ D.6605 ]) [0 *_13+0 S8 A64])) sim2fitman_sup.cpp:736 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.6605 ])
        (nil)))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.6606 ])) sim2fitman_sup.cpp:736 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.6606 ])
        (nil)))
(call_insn 27 26 28 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7ff9ba725af8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:736 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 28 27 29 6 133 "" [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 38 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:734 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 38 30 39 6 (set (pc)
        (label_ref 31)) sim2fitman_sup.cpp:734 654 {jump}
     (nil)
 -> 31)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 39 38 41)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 41 39 40 8 135 "" [1 uses])
(note 40 41 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 36 8 (const_int 0 [0]) sim2fitman_sup.cpp:739 684 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 42 37 7 131 "" [0 uses])
(note 37 36 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void printHex(char*, int) (_Z8printHexPci, funcdef_no=16, decl_uid=5524, cgraph_uid=16, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best SIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best DREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 40(l0): point = 0
   Insn 37(l0): point = 2
   Insn 36(l0): point = 4
   Insn 13(l0): point = 7
   Insn 12(l0): point = 9
   Insn 11(l0): point = 11
   Insn 41(l0): point = 14
   Insn 30(l0): point = 16
   Insn 29(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 23(l0): point = 30
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 18(l0): point = 40
   Insn 17(l0): point = 42
   Insn 16(l0): point = 44
   Insn 15(l0): point = 46
   Insn 9(l0): point = 49
   Insn 8(l0): point = 51
   Insn 7(l0): point = 53
   Insn 3(l0): point = 55
   Insn 2(l0): point = 57
 a0(r92): [25..28]
 a1(r90): [27..36]
 a2(r98): [29..30]
 a3(r91): [29..32]
 a4(r97): [33..34]
 a5(r89): [37..38]
 a6(r88): [39..40]
 a7(r96): [41..42]
 a8(r87): [41..44]
 a9(r95): [45..46]
 a10(r94): [10..11]
 a11(r93): [52..53]
Compressing live ranges: from 60 to 18 - 30%
Ranges after the compression:
 a0(r92): [2..3]
 a1(r90): [2..7]
 a2(r98): [4..5]
 a3(r91): [4..5]
 a4(r97): [6..7]
 a5(r89): [8..9]
 a6(r88): [10..11]
 a7(r96): [12..13]
 a8(r87): [12..13]
 a9(r95): [14..15]
 a10(r94): [0..1]
 a11(r93): [16..17]
  regions=1, blocks=6, points=18
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=12
Disposition:
    8:r87  l0     1    6:r88  l0     0    5:r89  l0     0    1:r90  l0     0
    3:r91  l0     2    0:r92  l0     2   11:r93  l0     0   10:r94  l0     0
    9:r95  l0     0    7:r96  l0     0    4:r97  l0     1    2:r98  l0     1
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void printHex(char*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={6d,1u} r18={2d} r19={2d} r20={1d,18u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 242{184d,54u,4e} in 28{26 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])
        (reg:DI 5 di [ theThing ])) sim2fitman_sup.cpp:744 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ theThing ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) sim2fitman_sup.cpp:744 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])) sim2fitman_sup.cpp:747 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])
        (reg/f:DI 93)) sim2fitman_sup.cpp:747 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 9 8 31 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:748 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94
(code_label 31 9 10 3 138 "" [1 uses])
(note 10 31 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:748 90 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32]))) sim2fitman_sup.cpp:748 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) sim2fitman_sup.cpp:748 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 95 96 97 98
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:749 90 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 87 [ D.6607 ])
        (sign_extend:DI (reg:SI 95))) sim2fitman_sup.cpp:749 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 17 16 18 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])) sim2fitman_sup.cpp:749 89 {*movdi_internal}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:DI 88 [ D.6608 ])
                (plus:DI (reg:DI 87 [ D.6607 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:749 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_DEAD (reg:DI 87 [ D.6607 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])
                        (reg:DI 87 [ D.6607 ]))
                    (nil))))))
(insn 19 18 20 4 (set (reg:QI 89 [ D.6609 ])
        (mem:QI (reg/f:DI 88 [ D.6608 ]) [0 *_9+0 S1 A8])) sim2fitman_sup.cpp:749 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.6608 ])
        (nil)))
(insn 20 19 21 4 (set (reg:SI 90 [ D.6610 ])
        (sign_extend:SI (reg:QI 89 [ D.6609 ]))) sim2fitman_sup.cpp:749 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 89 [ D.6609 ])
        (nil)))
(insn 21 20 22 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:749 90 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 91 [ D.6607 ])
        (sign_extend:DI (reg:SI 97))) sim2fitman_sup.cpp:749 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])) sim2fitman_sup.cpp:749 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:DI 92 [ D.6608 ])
                (plus:DI (reg:DI 91 [ D.6607 ])
                    (reg/f:DI 98)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:749 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_DEAD (reg:DI 91 [ D.6607 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])
                        (reg:DI 91 [ D.6607 ]))
                    (nil))))))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (reg:SI 90 [ D.6610 ])) sim2fitman_sup.cpp:749 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.6610 ])
        (nil)))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/f:DI 92 [ D.6608 ])) sim2fitman_sup.cpp:749 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6608 ])
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC71") [flags 0x2]  <var_decl 0x7ff9ba50fc60 *.LC71>)) sim2fitman_sup.cpp:749 89 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:749 93 {*movqi_internal}
     (nil))
(call_insn 29 28 30 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff9ba96e5e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:749 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 30 29 41 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:748 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 41 30 42 4 (set (pc)
        (label_ref 31)) sim2fitman_sup.cpp:748 654 {jump}
     (nil)
 -> 31)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 34)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 34 42 35 5 137 "" [1 uses])
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sim2fitman_sup.cpp:752 90 {*movsi_internal}
     (nil))
(call_insn 37 36 40 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7ff9ba96ea20 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:752 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 40 37 0 5 (const_int 0 [0]) sim2fitman_sup.cpp:753 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

