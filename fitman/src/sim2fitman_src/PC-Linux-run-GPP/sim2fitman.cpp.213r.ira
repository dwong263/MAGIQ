
;; Function int main(int, char**) (main, funcdef_no=2, decl_uid=5489, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 130 n_edges 197 count 130 (    1)
Building IRA IR
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 87.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 117.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 243.
verify found no changes in insn with uid = 253.
verify found no changes in insn with uid = 263.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 278.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 332.
verify found no changes in insn with uid = 343.
verify found no changes in insn with uid = 359.
verify found no changes in insn with uid = 374.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 404.
verify found no changes in insn with uid = 431.
verify found no changes in insn with uid = 439.
verify found no changes in insn with uid = 448.
verify found no changes in insn with uid = 457.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 529.
verify found no changes in insn with uid = 536.
verify found no changes in insn with uid = 548.
verify found no changes in insn with uid = 602.
verify found no changes in insn with uid = 612.
verify found no changes in insn with uid = 618.
verify found no changes in insn with uid = 635.
verify found no changes in insn with uid = 650.
verify found no changes in insn with uid = 666.
verify found no changes in insn with uid = 682.
verify found no changes in insn with uid = 686.
verify found no changes in insn with uid = 696.
verify found no changes in insn with uid = 706.
verify found no changes in insn with uid = 715.
verify found no changes in insn with uid = 724.
verify found no changes in insn with uid = 775.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 859.
verify found no changes in insn with uid = 861.
verify found no changes in insn with uid = 867.
verify found no changes in insn with uid = 875.
verify found no changes in insn with uid = 900.
verify found no changes in insn with uid = 911.
verify found no changes in insn with uid = 940.
verify found no changes in insn with uid = 951.
verify found no changes in insn with uid = 955.
verify found no changes in insn with uid = 970.
verify found no changes in insn with uid = 982.
verify found no changes in insn with uid = 985.
verify found no changes in insn with uid = 988.
verify found no changes in insn with uid = 991.
verify found no changes in insn with uid = 998.
verify found no changes in insn with uid = 1001.
verify found no changes in insn with uid = 1004.
verify found no changes in insn with uid = 1007.
verify found no changes in insn with uid = 1020.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r388,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r387: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r387,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r385: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r385,l0) best SIREG, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r381,l0) best DIREG, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r379,l0) best DREG, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r377,l0) best CREG, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r373,l0) best SIREG, allocno GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r370,l0) best DIREG, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r368,l0) best DREG, allocno GENERAL_REGS
    r367: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r367,l0) best CREG, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r365,l0) best DIREG, allocno GENERAL_REGS
    r364: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r364,l0) best SIREG, allocno GENERAL_REGS
    r363: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r363,l0) best DREG, allocno GENERAL_REGS
    r362: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r362,l0) best CREG, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r337,l0) best DIREG, allocno GENERAL_REGS
    r336: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r336,l0) best SIREG, allocno GENERAL_REGS
    r335: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r335,l0) best DREG, allocno GENERAL_REGS
    r334: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r334,l0) best CREG, allocno GENERAL_REGS
    r333: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r333,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r331: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a108 (r331,l0) best DIREG, allocno GENERAL_REGS
    r330: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r330,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r329: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a111 (r329,l0) best DIREG, allocno GENERAL_REGS
    r328: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a112 (r328,l0) best SIREG, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r326,l0) best DIREG, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a116 (r324,l0) best SIREG, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r322,l0) best DREG, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r320,l0) best DIREG, allocno GENERAL_REGS
    r319: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r319,l0) best SIREG, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r317,l0) best DREG, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a126 (r315,l0) best DIREG, allocno GENERAL_REGS
    r314: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a127 (r314,l0) best SIREG, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a128 (r312,l0) best DREG, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r310,l0) best DIREG, allocno GENERAL_REGS
    r309: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a132 (r309,l0) best SIREG, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a135 (r307,l0) best DIREG, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a136 (r305,l0) best SIREG, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r303,l0) best CREG, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a145 (r298,l0) best DIREG, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r296,l0) best SIREG, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r294,l0) best DREG, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a158 (r288,l0) best CREG, allocno GENERAL_REGS
    r287: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a160 (r287,l0) best SIREG, allocno GENERAL_REGS
    r286: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a159 (r286,l0) best DIREG, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a174 (r273,l0) best DIREG, allocno GENERAL_REGS
    r272: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a175 (r272,l0) best SIREG, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a178 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r269,l0) best SIREG, allocno GENERAL_REGS
    r268: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r268,l0) best DREG, allocno GENERAL_REGS
    r267: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a182 (r267,l0) best DIREG, allocno GENERAL_REGS
    r266: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a183 (r266,l0) best SIREG, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a189 (r263,l0) best SIREG, allocno GENERAL_REGS
    r262: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a190 (r262,l0) best DREG, allocno GENERAL_REGS
    r261: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a191 (r261,l0) best CREG, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a197 (r259,l0) best DIREG, allocno GENERAL_REGS
    r258: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a198 (r258,l0) best SIREG, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a202 (r256,l0) best DIREG, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a205 (r254,l0) best DIREG, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a208 (r252,l0) best DIREG, allocno GENERAL_REGS
    r251: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a209 (r251,l0) best SIREG, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a211 (r249,l0) best DIREG, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a221 (r245,l0) best DIREG, allocno GENERAL_REGS
    r244: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a222 (r244,l0) best SIREG, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a223 (r242,l0) best DREG, allocno GENERAL_REGS
    r241: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a225 (r241,l0) best DIREG, allocno GENERAL_REGS
    r240: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a226 (r240,l0) best SIREG, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a227 (r238,l0) best DREG, allocno GENERAL_REGS
    r237: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a229 (r237,l0) best DIREG, allocno GENERAL_REGS
    r236: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a230 (r236,l0) best SIREG, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a233 (r234,l0) best DIREG, allocno GENERAL_REGS
    r233: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a234 (r233,l0) best SIREG, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a236 (r231,l0) best CREG, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a240 (r228,l0) best DIREG, allocno GENERAL_REGS
    r227: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a241 (r227,l0) best SIREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a245 (r225,l0) best SIREG, allocno GENERAL_REGS
    r224: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a246 (r224,l0) best DREG, allocno GENERAL_REGS
    r223: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a247 (r223,l0) best CREG, allocno GENERAL_REGS
    r222: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a254 (r222,l0) best DIREG, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a257 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a258 (r220,l0) best SIREG, allocno GENERAL_REGS
    r219: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a261 (r219,l0) best DIREG, allocno GENERAL_REGS
    r218: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a262 (r218,l0) best DIREG, allocno GENERAL_REGS
    r217: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a264 (r217,l0) best DREG, allocno GENERAL_REGS
    r216: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a266 (r216,l0) best DIREG, allocno GENERAL_REGS
    r215: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a267 (r215,l0) best DIREG, allocno GENERAL_REGS
    r214: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a268 (r214,l0) best DIREG, allocno GENERAL_REGS
    r213: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a269 (r213,l0) best DIREG, allocno GENERAL_REGS
    r212: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a270 (r212,l0) best DIREG, allocno GENERAL_REGS
    r211: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a271 (r211,l0) best DIREG, allocno GENERAL_REGS
    r210: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a272 (r210,l0) best DIREG, allocno GENERAL_REGS
    r209: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a273 (r209,l0) best DIREG, allocno GENERAL_REGS
    r208: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a274 (r208,l0) best DIREG, allocno GENERAL_REGS
    r207: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a275 (r207,l0) best DIREG, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a276 (r206,l0) best DIREG, allocno GENERAL_REGS
    r205: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a277 (r205,l0) best DIREG, allocno GENERAL_REGS
    r204: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a278 (r204,l0) best DIREG, allocno GENERAL_REGS
    r203: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a279 (r203,l0) best DIREG, allocno GENERAL_REGS
    r202: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a280 (r202,l0) best DIREG, allocno GENERAL_REGS
    r201: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a281 (r201,l0) best DIREG, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a288 (r199,l0) best DIREG, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a290 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a291 (r193,l0) best SIREG, allocno GENERAL_REGS
    r192: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a292 (r192,l0) best DREG, allocno GENERAL_REGS
    r191: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a293 (r191,l0) best CREG, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a294 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a295 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a300 (r188,l0) best DIREG, allocno GENERAL_REGS
    r187: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a301 (r187,l0) best SIREG, allocno GENERAL_REGS
    r186: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a302 (r186,l0) best DREG, allocno GENERAL_REGS
    r185: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a303 (r185,l0) best CREG, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a304 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a306 (r182,l0) best DIREG, allocno GENERAL_REGS
    r181: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r181,l0) best AREG, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r179,l0) best DIREG, allocno GENERAL_REGS
    r178: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r178,l0) best DIREG, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r176,l0) best DIREG, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r174,l0) best DIREG, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r172,l0) best DIREG, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r170,l0) best DIREG, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r167,l0) best SIREG, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r165,l0) best SIREG, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred SSE_REGS, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a60 (r161,l0) best SSE_REGS, allocno INT_SSE_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred SSE_REGS, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a75 (r152,l0) best SSE_REGS, allocno INT_SSE_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a107 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a110 (r131,l0) best AREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a134 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r128,l0) best DREG, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a173 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a201 (r113,l0) best AREG, allocno GENERAL_REGS
    r112: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a204 (r112,l0) best AREG, allocno GENERAL_REGS
    r111: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a207 (r111,l0) best AREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a212 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a232 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a235 (r103,l0) best DREG, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a243 (r102,l0) best AREG, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a244 (r101,l0) best DIREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a255 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a260 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a263 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a265 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a282 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a289 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a3(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a8(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a9(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a10(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a11(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a13(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a14(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a15(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a16(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a17(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a18(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a19(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a20(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a21(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a22(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a23(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a24(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a25(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a26(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a27(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a28(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a29(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a30(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a31(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a32(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a33(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a34(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a35(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a36(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a37(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a38(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a39(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a40(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a41(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a42(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a43(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a44(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a45(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a46(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a47(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a48(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a49(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a50(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a51(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a52(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a53(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a54(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a55(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a56(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a57(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a58(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a59(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a60(r161,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 SSE_REGS:0 ALL_SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a61(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a62(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a63(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a64(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a65(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a66(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a67(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a68(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a69(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a70(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a71(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a72(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a73(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a74(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a75(r152,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 SSE_REGS:0 ALL_SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a76(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a77(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a78(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a79(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a80(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a81(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a82(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a83(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a84(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a85(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a86(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a87(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a88(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a89(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a90(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a91(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a92(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a93(r333,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a94(r332,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a95(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a96(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a97(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a98(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a99(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a100(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a101(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a102(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a103(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a104(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a105(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a106(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a107(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a108(r331,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a109(r330,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a110(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a111(r329,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a112(r328,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a113(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a114(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a115(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a116(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a117(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a118(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a119(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a120(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a121(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a122(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a123(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a124(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a125(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a126(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a127(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a128(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a129(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a130(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a131(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a132(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a133(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a134(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a135(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a136(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a137(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a138(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a139(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a140(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a141(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a142(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a143(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a144(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a145(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a146(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a147(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a148(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a149(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a150(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a151(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a152(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a153(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a154(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a155(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a156(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a157(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a158(r288,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:29 SSE_REGS:29 ALL_SSE_REGS:29 MMX_REGS:34 FP_TOP_SSE_REGS:516 FP_SECOND_SSE_REGS:516 FLOAT_SSE_REGS:516 FLOAT_INT_REGS:516 INT_SSE_REGS:30 FLOAT_INT_SSE_REGS:516 ALL_REGS:516 MEM:9
  a159(r286,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:34 SSE_REGS:34 ALL_SSE_REGS:34 MMX_REGS:39 FP_TOP_SSE_REGS:624 FP_SECOND_SSE_REGS:624 FLOAT_SSE_REGS:624 FLOAT_INT_REGS:624 INT_SSE_REGS:35 FLOAT_INT_SSE_REGS:624 ALL_REGS:624 MEM:12
  a160(r287,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 SSE_FIRST_REG:34 SSE_REGS:34 ALL_SSE_REGS:34 MMX_REGS:39 FP_TOP_SSE_REGS:624 FP_SECOND_SSE_REGS:624 FLOAT_SSE_REGS:624 FLOAT_INT_REGS:624 INT_SSE_REGS:35 FLOAT_INT_SSE_REGS:624 ALL_REGS:624 MEM:12
  a161(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a162(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a163(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a164(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a165(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a166(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a167(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a168(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a169(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a170(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a171(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a172(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a173(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a174(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a175(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a176(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a177(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a178(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a179(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a180(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a181(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a182(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a183(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a184(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a185(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:308 INT_SSE_REGS:308 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a186(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:6
  a187(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a188(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a189(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a190(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a191(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a192(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a193(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a194(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a195(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a196(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a197(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a198(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a199(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a200(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a201(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a202(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a203(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a204(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a205(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a206(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a207(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a208(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a209(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a210(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a211(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a212(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a213(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a214(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a215(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a216(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a217(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a218(r106,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:30 SSE_REGS:30 ALL_SSE_REGS:30 MMX_REGS:40 FP_TOP_SSE_REGS:522 FP_SECOND_SSE_REGS:522 FLOAT_SSE_REGS:522 FLOAT_INT_REGS:522 INT_SSE_REGS:32 FLOAT_INT_SSE_REGS:522 ALL_REGS:522 MEM:12
  a219(r246,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 INDEX_REGS:2 GENERAL_REGS:2 LEGACY_REGS:2 CLOBBERED_REGS:2 SSE_FIRST_REG:23 SSE_REGS:23 ALL_SSE_REGS:23 MMX_REGS:28 FP_TOP_SSE_REGS:418 FP_SECOND_SSE_REGS:418 FLOAT_SSE_REGS:418 FLOAT_INT_REGS:418 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:418 ALL_REGS:418 MEM:8
  a220(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a221(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a222(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a223(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a224(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a225(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a226(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a227(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a228(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a229(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a230(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a231(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a232(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a233(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a234(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a235(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a236(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a237(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a238(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a239(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a240(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a241(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a242(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a243(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a244(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a245(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a246(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a247(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a248(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a249(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a250(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a251(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a252(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a253(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a254(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a255(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a256(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a257(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a258(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a259(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a260(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a261(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a262(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a263(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a264(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a265(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a266(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a267(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a268(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a269(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a270(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a271(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a272(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a273(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a274(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a275(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a276(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a277(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a278(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a279(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a280(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a281(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a282(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a283(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a284(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a285(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a286(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a287(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a288(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a289(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a290(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a291(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a292(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a293(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a294(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a295(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a296(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a297(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a298(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a299(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a300(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a301(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a302(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a303(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a304(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a305(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a306(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7

   Insn 1023(l0): point = 0
   Insn 1020(l0): point = 3
   Insn 1019(l0): point = 6
   Insn 1018(l0): point = 8
   Insn 1017(l0): point = 10
   Insn 1013(l0): point = 12
   Insn 1010(l0): point = 14
   Insn 1007(l0): point = 17
   Insn 1006(l0): point = 19
   Insn 1005(l0): point = 21
   Insn 1004(l0): point = 23
   Insn 1003(l0): point = 25
   Insn 1002(l0): point = 27
   Insn 1001(l0): point = 29
   Insn 1000(l0): point = 31
   Insn 999(l0): point = 33
   Insn 998(l0): point = 35
   Insn 997(l0): point = 37
   Insn 996(l0): point = 39
   Insn 994(l0): point = 42
   Insn 993(l0): point = 44
   Insn 992(l0): point = 46
   Insn 991(l0): point = 48
   Insn 990(l0): point = 50
   Insn 989(l0): point = 52
   Insn 988(l0): point = 54
   Insn 987(l0): point = 56
   Insn 986(l0): point = 58
   Insn 985(l0): point = 60
   Insn 984(l0): point = 62
   Insn 983(l0): point = 64
   Insn 982(l0): point = 66
   Insn 981(l0): point = 68
   Insn 980(l0): point = 70
   Insn 964(l0): point = 73
   Insn 963(l0): point = 75
   Insn 962(l0): point = 77
   Insn 961(l0): point = 79
   Insn 960(l0): point = 81
   Insn 978(l0): point = 84
   Insn 977(l0): point = 86
   Insn 973(l0): point = 89
   Insn 970(l0): point = 92
   Insn 969(l0): point = 94
   Insn 968(l0): point = 96
   Insn 967(l0): point = 98
   Insn 966(l0): point = 100
   Insn 1091(l0): point = 103
   Insn 956(l0): point = 105
   Insn 955(l0): point = 107
   Insn 954(l0): point = 109
   Insn 951(l0): point = 112
   Insn 950(l0): point = 114
   Insn 949(l0): point = 116
   Insn 948(l0): point = 118
   Insn 947(l0): point = 120
   Insn 946(l0): point = 122
   Insn 944(l0): point = 125
   Insn 943(l0): point = 127
   Insn 942(l0): point = 129
   Insn 941(l0): point = 131
   Insn 940(l0): point = 133
   Insn 939(l0): point = 135
   Insn 938(l0): point = 137
   Insn 937(l0): point = 139
   Insn 936(l0): point = 141
   Insn 935(l0): point = 143
   Insn 934(l0): point = 145
   Insn 933(l0): point = 147
   Insn 932(l0): point = 149
   Insn 931(l0): point = 151
   Insn 930(l0): point = 153
   Insn 929(l0): point = 155
   Insn 928(l0): point = 157
   Insn 927(l0): point = 159
   Insn 926(l0): point = 161
   Insn 925(l0): point = 163
   Insn 924(l0): point = 165
   Insn 923(l0): point = 167
   Insn 922(l0): point = 169
   Insn 921(l0): point = 171
   Insn 918(l0): point = 174
   Insn 917(l0): point = 176
   Insn 915(l0): point = 179
   Insn 914(l0): point = 181
   Insn 911(l0): point = 184
   Insn 910(l0): point = 186
   Insn 909(l0): point = 188
   Insn 908(l0): point = 190
   Insn 907(l0): point = 192
   Insn 906(l0): point = 194
   Insn 904(l0): point = 197
   Insn 903(l0): point = 199
   Insn 902(l0): point = 201
   Insn 901(l0): point = 203
   Insn 900(l0): point = 205
   Insn 899(l0): point = 207
   Insn 898(l0): point = 209
   Insn 897(l0): point = 211
   Insn 896(l0): point = 213
   Insn 895(l0): point = 215
   Insn 894(l0): point = 217
   Insn 893(l0): point = 219
   Insn 892(l0): point = 221
   Insn 891(l0): point = 223
   Insn 890(l0): point = 225
   Insn 889(l0): point = 227
   Insn 888(l0): point = 229
   Insn 887(l0): point = 231
   Insn 886(l0): point = 233
   Insn 885(l0): point = 235
   Insn 882(l0): point = 238
   Insn 881(l0): point = 240
   Insn 879(l0): point = 243
   Insn 878(l0): point = 245
   Insn 875(l0): point = 248
   Insn 874(l0): point = 250
   Insn 872(l0): point = 253
   Insn 871(l0): point = 255
   Insn 870(l0): point = 257
   Insn 867(l0): point = 260
   Insn 866(l0): point = 262
   Insn 864(l0): point = 265
   Insn 863(l0): point = 267
   Insn 862(l0): point = 269
   Insn 861(l0): point = 271
   Insn 860(l0): point = 273
   Insn 859(l0): point = 275
   Insn 858(l0): point = 277
   Insn 857(l0): point = 279
   Insn 856(l0): point = 281
   Insn 855(l0): point = 283
   Insn 854(l0): point = 285
   Insn 853(l0): point = 287
   Insn 852(l0): point = 289
   Insn 851(l0): point = 291
   Insn 850(l0): point = 293
   Insn 849(l0): point = 295
   Insn 846(l0): point = 298
   Insn 845(l0): point = 300
   Insn 843(l0): point = 303
   Insn 842(l0): point = 305
   Insn 841(l0): point = 307
   Insn 1089(l0): point = 310
   Insn 781(l0): point = 312
   Insn 839(l0): point = 315
   Insn 838(l0): point = 317
   Insn 836(l0): point = 319
   Insn 833(l0): point = 322
   Insn 831(l0): point = 325
   Insn 830(l0): point = 327
   Insn 828(l0): point = 329
   Insn 827(l0): point = 331
   Insn 826(l0): point = 333
   Insn 825(l0): point = 335
   Insn 824(l0): point = 337
   Insn 823(l0): point = 339
   Insn 822(l0): point = 341
   Insn 821(l0): point = 343
   Insn 820(l0): point = 345
   Insn 817(l0): point = 348
   Insn 816(l0): point = 350
   Insn 815(l0): point = 352
   Insn 814(l0): point = 354
   Insn 813(l0): point = 356
   Insn 812(l0): point = 358
   Insn 811(l0): point = 360
   Insn 810(l0): point = 362
   Insn 809(l0): point = 364
   Insn 808(l0): point = 366
   Insn 807(l0): point = 368
   Insn 806(l0): point = 370
   Insn 805(l0): point = 372
   Insn 804(l0): point = 374
   Insn 803(l0): point = 376
   Insn 802(l0): point = 378
   Insn 801(l0): point = 380
   Insn 800(l0): point = 382
   Insn 799(l0): point = 384
   Insn 798(l0): point = 386
   Insn 797(l0): point = 388
   Insn 796(l0): point = 390
   Insn 795(l0): point = 392
   Insn 794(l0): point = 394
   Insn 793(l0): point = 396
   Insn 792(l0): point = 398
   Insn 791(l0): point = 400
   Insn 790(l0): point = 402
   Insn 789(l0): point = 404
   Insn 788(l0): point = 406
   Insn 787(l0): point = 408
   Insn 786(l0): point = 410
   Insn 785(l0): point = 412
   Insn 1087(l0): point = 415
   Insn 777(l0): point = 417
   Insn 776(l0): point = 419
   Insn 775(l0): point = 421
   Insn 774(l0): point = 423
   Insn 773(l0): point = 425
   Insn 772(l0): point = 427
   Insn 771(l0): point = 429
   Insn 770(l0): point = 431
   Insn 769(l0): point = 433
   Insn 768(l0): point = 435
   Insn 767(l0): point = 437
   Insn 766(l0): point = 439
   Insn 765(l0): point = 441
   Insn 764(l0): point = 443
   Insn 763(l0): point = 445
   Insn 762(l0): point = 447
   Insn 761(l0): point = 449
   Insn 760(l0): point = 451
   Insn 759(l0): point = 453
   Insn 758(l0): point = 455
   Insn 757(l0): point = 457
   Insn 756(l0): point = 459
   Insn 755(l0): point = 461
   Insn 754(l0): point = 463
   Insn 753(l0): point = 465
   Insn 752(l0): point = 467
   Insn 751(l0): point = 469
   Insn 750(l0): point = 471
   Insn 747(l0): point = 474
   Insn 746(l0): point = 476
   Insn 1085(l0): point = 479
   Insn 741(l0): point = 481
   Insn 740(l0): point = 483
   Insn 739(l0): point = 485
   Insn 737(l0): point = 488
   Insn 736(l0): point = 490
   Insn 1083(l0): point = 493
   Insn 731(l0): point = 495
   Insn 730(l0): point = 497
   Insn 729(l0): point = 499
   Insn 727(l0): point = 502
   Insn 726(l0): point = 504
   Insn 725(l0): point = 506
   Insn 724(l0): point = 508
   Insn 723(l0): point = 510
   Insn 722(l0): point = 512
   Insn 721(l0): point = 514
   Insn 720(l0): point = 516
   Insn 718(l0): point = 519
   Insn 717(l0): point = 521
   Insn 716(l0): point = 523
   Insn 715(l0): point = 525
   Insn 714(l0): point = 527
   Insn 713(l0): point = 529
   Insn 712(l0): point = 531
   Insn 711(l0): point = 533
   Insn 710(l0): point = 535
   Insn 709(l0): point = 537
   Insn 706(l0): point = 540
   Insn 705(l0): point = 542
   Insn 703(l0): point = 545
   Insn 702(l0): point = 547
   Insn 701(l0): point = 549
   Insn 696(l0): point = 552
   Insn 695(l0): point = 554
   Insn 694(l0): point = 556
   Insn 693(l0): point = 558
   Insn 692(l0): point = 560
   Insn 691(l0): point = 562
   Insn 690(l0): point = 564
   Insn 689(l0): point = 566
   Insn 688(l0): point = 568
   Insn 687(l0): point = 570
   Insn 686(l0): point = 572
   Insn 685(l0): point = 574
   Insn 682(l0): point = 577
   Insn 681(l0): point = 579
   Insn 680(l0): point = 581
   Insn 679(l0): point = 583
   Insn 678(l0): point = 585
   Insn 677(l0): point = 587
   Insn 676(l0): point = 589
   Insn 675(l0): point = 591
   Insn 674(l0): point = 593
   Insn 672(l0): point = 596
   Insn 671(l0): point = 598
   Insn 1081(l0): point = 601
   Insn 666(l0): point = 603
   Insn 665(l0): point = 605
   Insn 664(l0): point = 607
   Insn 663(l0): point = 609
   Insn 662(l0): point = 611
   Insn 661(l0): point = 613
   Insn 660(l0): point = 615
   Insn 659(l0): point = 617
   Insn 658(l0): point = 619
   Insn 656(l0): point = 622
   Insn 655(l0): point = 624
   Insn 1079(l0): point = 627
   Insn 650(l0): point = 629
   Insn 649(l0): point = 631
   Insn 648(l0): point = 633
   Insn 647(l0): point = 635
   Insn 646(l0): point = 637
   Insn 645(l0): point = 639
   Insn 643(l0): point = 642
   Insn 642(l0): point = 644
   Insn 640(l0): point = 647
   Insn 639(l0): point = 649
   Insn 638(l0): point = 651
   Insn 637(l0): point = 653
   Insn 636(l0): point = 655
   Insn 635(l0): point = 657
   Insn 634(l0): point = 659
   Insn 633(l0): point = 661
   Insn 632(l0): point = 663
   Insn 631(l0): point = 665
   Insn 630(l0): point = 667
   Insn 629(l0): point = 669
   Insn 628(l0): point = 671
   Insn 627(l0): point = 673
   Insn 626(l0): point = 675
   Insn 625(l0): point = 677
   Insn 624(l0): point = 679
   Insn 623(l0): point = 681
   Insn 622(l0): point = 683
   Insn 621(l0): point = 685
   Insn 620(l0): point = 687
   Insn 619(l0): point = 689
   Insn 618(l0): point = 691
   Insn 617(l0): point = 693
   Insn 1077(l0): point = 696
   Insn 612(l0): point = 698
   Insn 611(l0): point = 700
   Insn 610(l0): point = 702
   Insn 609(l0): point = 704
   Insn 608(l0): point = 706
   Insn 607(l0): point = 708
   Insn 606(l0): point = 710
   Insn 605(l0): point = 712
   Insn 604(l0): point = 714
   Insn 603(l0): point = 716
   Insn 602(l0): point = 718
   Insn 601(l0): point = 720
   Insn 600(l0): point = 722
   Insn 598(l0): point = 725
   Insn 597(l0): point = 727
   Insn 595(l0): point = 730
   Insn 594(l0): point = 732
   Insn 593(l0): point = 734
   Insn 592(l0): point = 736
   Insn 591(l0): point = 738
   Insn 590(l0): point = 740
   Insn 589(l0): point = 742
   Insn 588(l0): point = 744
   Insn 587(l0): point = 746
   Insn 586(l0): point = 748
   Insn 585(l0): point = 750
   Insn 584(l0): point = 752
   Insn 583(l0): point = 754
   Insn 582(l0): point = 756
   Insn 581(l0): point = 758
   Insn 580(l0): point = 760
   Insn 579(l0): point = 762
   Insn 578(l0): point = 764
   Insn 577(l0): point = 766
   Insn 576(l0): point = 768
   Insn 575(l0): point = 770
   Insn 574(l0): point = 772
   Insn 573(l0): point = 774
   Insn 572(l0): point = 776
   Insn 571(l0): point = 778
   Insn 570(l0): point = 780
   Insn 569(l0): point = 782
   Insn 568(l0): point = 784
   Insn 567(l0): point = 786
   Insn 566(l0): point = 788
   Insn 565(l0): point = 790
   Insn 564(l0): point = 792
   Insn 563(l0): point = 794
   Insn 562(l0): point = 796
   Insn 561(l0): point = 798
   Insn 560(l0): point = 800
   Insn 559(l0): point = 802
   Insn 558(l0): point = 804
   Insn 557(l0): point = 806
   Insn 556(l0): point = 808
   Insn 555(l0): point = 810
   Insn 554(l0): point = 812
   Insn 553(l0): point = 814
   Insn 551(l0): point = 817
   Insn 550(l0): point = 819
   Insn 549(l0): point = 821
   Insn 548(l0): point = 823
   Insn 547(l0): point = 825
   Insn 546(l0): point = 827
   Insn 545(l0): point = 829
   Insn 544(l0): point = 831
   Insn 543(l0): point = 833
   Insn 541(l0): point = 836
   Insn 540(l0): point = 838
   Insn 539(l0): point = 840
   Insn 536(l0): point = 843
   Insn 535(l0): point = 845
   Insn 534(l0): point = 847
   Insn 533(l0): point = 849
   Insn 532(l0): point = 851
   Insn 531(l0): point = 853
   Insn 530(l0): point = 855
   Insn 529(l0): point = 857
   Insn 528(l0): point = 859
   Insn 525(l0): point = 862
   Insn 524(l0): point = 864
   Insn 522(l0): point = 867
   Insn 521(l0): point = 869
   Insn 519(l0): point = 872
   Insn 518(l0): point = 874
   Insn 517(l0): point = 876
   Insn 514(l0): point = 879
   Insn 513(l0): point = 881
   Insn 512(l0): point = 883
   Insn 511(l0): point = 885
   Insn 510(l0): point = 887
   Insn 509(l0): point = 889
   Insn 507(l0): point = 892
   Insn 506(l0): point = 894
   Insn 505(l0): point = 896
   Insn 504(l0): point = 898
   Insn 503(l0): point = 900
   Insn 502(l0): point = 902
   Insn 501(l0): point = 904
   Insn 500(l0): point = 906
   Insn 499(l0): point = 908
   Insn 498(l0): point = 910
   Insn 497(l0): point = 912
   Insn 496(l0): point = 914
   Insn 495(l0): point = 916
   Insn 494(l0): point = 918
   Insn 493(l0): point = 920
   Insn 492(l0): point = 922
   Insn 491(l0): point = 924
   Insn 490(l0): point = 926
   Insn 1075(l0): point = 929
   Insn 485(l0): point = 931
   Insn 483(l0): point = 934
   Insn 482(l0): point = 936
   Insn 481(l0): point = 938
   Insn 1073(l0): point = 941
   Insn 476(l0): point = 943
   Insn 474(l0): point = 946
   Insn 473(l0): point = 948
   Insn 472(l0): point = 950
   Insn 469(l0): point = 953
   Insn 468(l0): point = 955
   Insn 467(l0): point = 957
   Insn 466(l0): point = 959
   Insn 465(l0): point = 961
   Insn 464(l0): point = 963
   Insn 462(l0): point = 966
   Insn 461(l0): point = 968
   Insn 460(l0): point = 970
   Insn 459(l0): point = 972
   Insn 458(l0): point = 974
   Insn 457(l0): point = 976
   Insn 456(l0): point = 978
   Insn 455(l0): point = 980
   Insn 454(l0): point = 982
   Insn 453(l0): point = 984
   Insn 451(l0): point = 987
   Insn 450(l0): point = 989
   Insn 449(l0): point = 991
   Insn 448(l0): point = 993
   Insn 447(l0): point = 995
   Insn 446(l0): point = 997
   Insn 445(l0): point = 999
   Insn 444(l0): point = 1001
   Insn 442(l0): point = 1004
   Insn 441(l0): point = 1006
   Insn 440(l0): point = 1008
   Insn 439(l0): point = 1010
   Insn 438(l0): point = 1012
   Insn 437(l0): point = 1014
   Insn 436(l0): point = 1016
   Insn 435(l0): point = 1018
   Insn 434(l0): point = 1020
   Insn 431(l0): point = 1023
   Insn 430(l0): point = 1025
   Insn 429(l0): point = 1027
   Insn 428(l0): point = 1029
   Insn 427(l0): point = 1031
   Insn 425(l0): point = 1034
   Insn 424(l0): point = 1036
   Insn 423(l0): point = 1038
   Insn 420(l0): point = 1041
   Insn 419(l0): point = 1043
   Insn 418(l0): point = 1045
   Insn 417(l0): point = 1047
   Insn 416(l0): point = 1049
   Insn 415(l0): point = 1051
   Insn 414(l0): point = 1053
   Insn 413(l0): point = 1055
   Insn 411(l0): point = 1058
   Insn 410(l0): point = 1060
   Insn 409(l0): point = 1062
   Insn 1071(l0): point = 1065
   Insn 404(l0): point = 1067
   Insn 403(l0): point = 1069
   Insn 402(l0): point = 1071
   Insn 401(l0): point = 1073
   Insn 400(l0): point = 1075
   Insn 399(l0): point = 1077
   Insn 398(l0): point = 1079
   Insn 397(l0): point = 1081
   Insn 395(l0): point = 1084
   Insn 394(l0): point = 1086
   Insn 1069(l0): point = 1089
   Insn 389(l0): point = 1091
   Insn 388(l0): point = 1093
   Insn 387(l0): point = 1095
   Insn 386(l0): point = 1097
   Insn 385(l0): point = 1099
   Insn 384(l0): point = 1101
   Insn 383(l0): point = 1103
   Insn 382(l0): point = 1105
   Insn 380(l0): point = 1108
   Insn 379(l0): point = 1110
   Insn 1067(l0): point = 1113
   Insn 374(l0): point = 1115
   Insn 373(l0): point = 1117
   Insn 372(l0): point = 1119
   Insn 371(l0): point = 1121
   Insn 370(l0): point = 1123
   Insn 369(l0): point = 1125
   Insn 367(l0): point = 1128
   Insn 366(l0): point = 1130
   Insn 364(l0): point = 1133
   Insn 363(l0): point = 1135
   Insn 362(l0): point = 1137
   Insn 361(l0): point = 1139
   Insn 360(l0): point = 1141
   Insn 359(l0): point = 1143
   Insn 358(l0): point = 1145
   Insn 357(l0): point = 1147
   Insn 356(l0): point = 1149
   Insn 355(l0): point = 1151
   Insn 354(l0): point = 1153
   Insn 353(l0): point = 1155
   Insn 352(l0): point = 1157
   Insn 351(l0): point = 1159
   Insn 350(l0): point = 1161
   Insn 349(l0): point = 1163
   Insn 348(l0): point = 1165
   Insn 347(l0): point = 1167
   Insn 346(l0): point = 1169
   Insn 343(l0): point = 1172
   Insn 342(l0): point = 1174
   Insn 341(l0): point = 1176
   Insn 340(l0): point = 1178
   Insn 339(l0): point = 1180
   Insn 338(l0): point = 1182
   Insn 336(l0): point = 1185
   Insn 335(l0): point = 1187
   Insn 334(l0): point = 1189
   Insn 333(l0): point = 1191
   Insn 332(l0): point = 1193
   Insn 331(l0): point = 1195
   Insn 330(l0): point = 1197
   Insn 329(l0): point = 1199
   Insn 328(l0): point = 1201
   Insn 327(l0): point = 1203
   Insn 326(l0): point = 1205
   Insn 325(l0): point = 1207
   Insn 324(l0): point = 1209
   Insn 323(l0): point = 1211
   Insn 322(l0): point = 1213
   Insn 321(l0): point = 1215
   Insn 1065(l0): point = 1218
   Insn 316(l0): point = 1220
   Insn 313(l0): point = 1223
   Insn 312(l0): point = 1225
   Insn 310(l0): point = 1228
   Insn 309(l0): point = 1230
   Insn 308(l0): point = 1232
   Insn 306(l0): point = 1235
   Insn 305(l0): point = 1237
   Insn 304(l0): point = 1239
   Insn 1063(l0): point = 1242
   Insn 299(l0): point = 1244
   Insn 296(l0): point = 1247
   Insn 295(l0): point = 1249
   Insn 293(l0): point = 1252
   Insn 292(l0): point = 1254
   Insn 291(l0): point = 1256
   Insn 289(l0): point = 1259
   Insn 288(l0): point = 1261
   Insn 287(l0): point = 1263
   Insn 286(l0): point = 1265
   Insn 285(l0): point = 1267
   Insn 284(l0): point = 1269
   Insn 283(l0): point = 1271
   Insn 282(l0): point = 1273
   Insn 281(l0): point = 1275
   Insn 278(l0): point = 1278
   Insn 277(l0): point = 1280
   Insn 276(l0): point = 1282
   Insn 275(l0): point = 1284
   Insn 274(l0): point = 1286
   Insn 272(l0): point = 1289
   Insn 271(l0): point = 1291
   Insn 270(l0): point = 1293
   Insn 269(l0): point = 1295
   Insn 268(l0): point = 1297
   Insn 267(l0): point = 1299
   Insn 266(l0): point = 1301
   Insn 265(l0): point = 1303
   Insn 264(l0): point = 1305
   Insn 263(l0): point = 1307
   Insn 262(l0): point = 1309
   Insn 261(l0): point = 1311
   Insn 260(l0): point = 1313
   Insn 259(l0): point = 1315
   Insn 258(l0): point = 1317
   Insn 257(l0): point = 1319
   Insn 256(l0): point = 1321
   Insn 253(l0): point = 1324
   Insn 252(l0): point = 1326
   Insn 251(l0): point = 1328
   Insn 249(l0): point = 1331
   Insn 248(l0): point = 1333
   Insn 1061(l0): point = 1336
   Insn 243(l0): point = 1338
   Insn 242(l0): point = 1340
   Insn 241(l0): point = 1342
   Insn 239(l0): point = 1345
   Insn 238(l0): point = 1347
   Insn 1059(l0): point = 1350
   Insn 233(l0): point = 1352
   Insn 232(l0): point = 1354
   Insn 231(l0): point = 1356
   Insn 229(l0): point = 1359
   Insn 228(l0): point = 1361
   Insn 1057(l0): point = 1364
   Insn 223(l0): point = 1366
   Insn 222(l0): point = 1368
   Insn 221(l0): point = 1370
   Insn 219(l0): point = 1373
   Insn 218(l0): point = 1375
   Insn 1055(l0): point = 1378
   Insn 213(l0): point = 1380
   Insn 211(l0): point = 1383
   Insn 210(l0): point = 1385
   Insn 1053(l0): point = 1388
   Insn 205(l0): point = 1390
   Insn 203(l0): point = 1393
   Insn 202(l0): point = 1395
   Insn 1051(l0): point = 1398
   Insn 197(l0): point = 1400
   Insn 196(l0): point = 1402
   Insn 195(l0): point = 1404
   Insn 193(l0): point = 1407
   Insn 192(l0): point = 1409
   Insn 1049(l0): point = 1412
   Insn 187(l0): point = 1414
   Insn 186(l0): point = 1416
   Insn 185(l0): point = 1418
   Insn 183(l0): point = 1421
   Insn 182(l0): point = 1423
   Insn 1047(l0): point = 1426
   Insn 177(l0): point = 1428
   Insn 176(l0): point = 1430
   Insn 175(l0): point = 1432
   Insn 173(l0): point = 1435
   Insn 172(l0): point = 1437
   Insn 1045(l0): point = 1440
   Insn 167(l0): point = 1442
   Insn 166(l0): point = 1444
   Insn 165(l0): point = 1446
   Insn 163(l0): point = 1449
   Insn 162(l0): point = 1451
   Insn 1043(l0): point = 1454
   Insn 157(l0): point = 1456
   Insn 156(l0): point = 1458
   Insn 155(l0): point = 1460
   Insn 153(l0): point = 1463
   Insn 152(l0): point = 1465
   Insn 1041(l0): point = 1468
   Insn 147(l0): point = 1470
   Insn 146(l0): point = 1472
   Insn 145(l0): point = 1474
   Insn 143(l0): point = 1477
   Insn 142(l0): point = 1479
   Insn 1039(l0): point = 1482
   Insn 137(l0): point = 1484
   Insn 136(l0): point = 1486
   Insn 135(l0): point = 1488
   Insn 133(l0): point = 1491
   Insn 132(l0): point = 1493
   Insn 1037(l0): point = 1496
   Insn 127(l0): point = 1498
   Insn 126(l0): point = 1500
   Insn 125(l0): point = 1502
   Insn 123(l0): point = 1505
   Insn 122(l0): point = 1507
   Insn 1035(l0): point = 1510
   Insn 117(l0): point = 1512
   Insn 116(l0): point = 1514
   Insn 115(l0): point = 1516
   Insn 113(l0): point = 1519
   Insn 112(l0): point = 1521
   Insn 1033(l0): point = 1524
   Insn 107(l0): point = 1526
   Insn 106(l0): point = 1528
   Insn 105(l0): point = 1530
   Insn 103(l0): point = 1533
   Insn 102(l0): point = 1535
   Insn 1031(l0): point = 1538
   Insn 97(l0): point = 1540
   Insn 96(l0): point = 1542
   Insn 95(l0): point = 1544
   Insn 93(l0): point = 1547
   Insn 92(l0): point = 1549
   Insn 1029(l0): point = 1552
   Insn 87(l0): point = 1554
   Insn 86(l0): point = 1556
   Insn 85(l0): point = 1558
   Insn 84(l0): point = 1560
   Insn 83(l0): point = 1562
   Insn 82(l0): point = 1564
   Insn 81(l0): point = 1566
   Insn 80(l0): point = 1568
   Insn 79(l0): point = 1570
   Insn 78(l0): point = 1572
   Insn 76(l0): point = 1575
   Insn 75(l0): point = 1577
   Insn 1027(l0): point = 1580
   Insn 70(l0): point = 1582
   Insn 69(l0): point = 1584
   Insn 68(l0): point = 1586
   Insn 66(l0): point = 1589
   Insn 65(l0): point = 1591
   Insn 64(l0): point = 1593
   Insn 63(l0): point = 1595
   Insn 62(l0): point = 1597
   Insn 61(l0): point = 1599
   Insn 60(l0): point = 1601
   Insn 59(l0): point = 1603
   Insn 58(l0): point = 1605
   Insn 57(l0): point = 1607
   Insn 56(l0): point = 1609
   Insn 55(l0): point = 1611
   Insn 54(l0): point = 1613
   Insn 53(l0): point = 1615
   Insn 52(l0): point = 1617
   Insn 51(l0): point = 1619
   Insn 50(l0): point = 1621
   Insn 49(l0): point = 1623
   Insn 48(l0): point = 1625
   Insn 47(l0): point = 1627
   Insn 46(l0): point = 1629
   Insn 45(l0): point = 1631
   Insn 44(l0): point = 1633
   Insn 43(l0): point = 1635
   Insn 42(l0): point = 1637
   Insn 41(l0): point = 1639
   Insn 40(l0): point = 1641
   Insn 39(l0): point = 1643
   Insn 38(l0): point = 1645
   Insn 37(l0): point = 1647
   Insn 36(l0): point = 1649
   Insn 35(l0): point = 1651
   Insn 34(l0): point = 1653
   Insn 33(l0): point = 1655
   Insn 32(l0): point = 1657
   Insn 31(l0): point = 1659
   Insn 30(l0): point = 1661
   Insn 29(l0): point = 1663
   Insn 28(l0): point = 1665
   Insn 25(l0): point = 1668
   Insn 24(l0): point = 1670
   Insn 23(l0): point = 1672
   Insn 21(l0): point = 1675
   Insn 20(l0): point = 1677
   Insn 19(l0): point = 1679
   Insn 18(l0): point = 1681
   Insn 17(l0): point = 1683
   Insn 16(l0): point = 1685
   Insn 15(l0): point = 1687
   Insn 14(l0): point = 1689
   Insn 13(l0): point = 1691
   Insn 12(l0): point = 1693
   Insn 11(l0): point = 1695
   Insn 10(l0): point = 1697
   Insn 9(l0): point = 1699
   Insn 8(l0): point = 1701
   Insn 5(l0): point = 1703
   Insn 3(l0): point = 1705
   Insn 2(l0): point = 1707
 a0(r181): [11..12]
 a1(r180): [13..14]
 a2(r179): [20..21]
 a3(r178): [26..27]
 a4(r177): [32..33]
 a5(r176): [38..39]
 a6(r175): [45..46]
 a7(r174): [51..52]
 a8(r173): [57..58]
 a9(r172): [63..64]
 a10(r171): [69..70]
 a11(r170): [95..96]
 a12(r388): [97..98]
 a13(r389): [99..100]
 a14(r169): [76..77]
 a15(r386): [78..79]
 a16(r387): [80..81]
 a17(r385): [119..120]
 a18(r384): [121..122]
 a19(r168): [128..129]
 a20(r381): [136..153]
 a21(r167): [138..171]
 a22(r379): [140..157]
 a23(r377): [142..161]
 a24(r375): [146..165]
 a25(r383): [148..149]
 a26(r382): [150..151]
 a27(r380): [154..155]
 a28(r378): [158..159]
 a29(r376): [162..163]
 a30(r374): [166..167]
 a31(r373): [191..192]
 a32(r372): [193..194]
 a33(r166): [200..201]
 a34(r370): [208..223]
 a35(r165): [210..235]
 a36(r368): [212..227]
 a37(r367): [214..229]
 a38(r366): [218..231]
 a39(r371): [220..221]
 a40(r369): [224..225]
 a41(r164): [256..257]
 a42(r163): [268..269]
 a43(r365): [278..287]
 a44(r364): [280..289]
 a45(r363): [282..291]
 a46(r362): [284..293]
 a47(r361): [286..295]
 a48(r162): [306..307]
 a49(r140): [318..319]
 a50(r143): [328..329]
 a51(r141): [328..343]
 a52(r142): [330..331]
 a53(r360): [332..333]
 a54(r359): [334..335]
 a55(r358): [336..337]
 a56(r356): [338..339]
 a57(r357): [340..341]
 a58(r355): [344..345]
 a59(r156): [351..368]
 a60(r161): [351..352]
 a61(r160): [353..354]
 a62(r159): [355..356]
 a63(r157): [355..362]
 a64(r158): [357..358]
 a65(r354): [359..360]
 a66(r352): [363..364]
 a67(r353): [365..366]
 a68(r155): [369..370]
 a69(r153): [369..376]
 a70(r154): [371..372]
 a71(r351): [373..374]
 a72(r349): [377..378]
 a73(r350): [379..380]
 a74(r147): [383..400]
 a75(r152): [383..384]
 a76(r151): [385..386]
 a77(r150): [387..388]
 a78(r148): [387..394]
 a79(r149): [389..390]
 a80(r348): [391..392]
 a81(r346): [395..396]
 a82(r347): [397..398]
 a83(r146): [401..402]
 a84(r144): [401..408]
 a85(r145): [403..404]
 a86(r345): [405..406]
 a87(r343): [409..410]
 a88(r344): [411..412]
 a89(r337): [424..457]
 a90(r336): [426..459]
 a91(r335): [428..461]
 a92(r334): [430..463]
 a93(r333): [432..465]
 a94(r332): [434..467]
 a95(r342): [436..437]
 a96(r341): [440..441]
 a97(r340): [444..445]
 a98(r339): [448..449]
 a99(r139): [452..469]
 a100(r338): [454..455]
 a101(r138): [470..471]
 a102(r137): [475..476]
 a103(r136): [482..483]
 a104(r135): [484..485]
 a105(r134): [496..497]
 a106(r133): [498..499]
 a107(r132): [505..506]
 a108(r331): [511..514]
 a109(r330): [515..516]
 a110(r131): [522..523]
 a111(r329): [528..531]
 a112(r328): [530..533]
 a113(r327): [534..535]
 a114(r130): [548..549]
 a115(r326): [555..560]
 a116(r324): [557..564]
 a117(r322): [559..568]
 a118(r325): [561..562]
 a119(r323): [565..566]
 a120(r321): [569..570]
 a121(r320): [580..585]
 a122(r319): [582..587]
 a123(r317): [584..591]
 a124(r318): [588..589]
 a125(r316): [592..593]
 a126(r315): [606..611]
 a127(r314): [608..613]
 a128(r312): [610..617]
 a129(r313): [614..615]
 a130(r311): [618..619]
 a131(r310): [632..635]
 a132(r309): [634..637]
 a133(r308): [638..639]
 a134(r129): [654..655]
 a135(r307): [660..671]
 a136(r305): [662..675]
 a137(r128): [664..689]
 a138(r303): [666..679]
 a139(r302): [668..681]
 a140(r300): [670..685]
 a141(r306): [672..673]
 a142(r304): [676..677]
 a143(r301): [682..683]
 a144(r299): [686..687]
 a145(r298): [701..706]
 a146(r296): [703..710]
 a147(r294): [705..714]
 a148(r297): [707..708]
 a149(r295): [711..712]
 a150(r293): [715..716]
 a151(r127): [733..734]
 a152(r126): [737..738]
 a153(r125): [741..742]
 a154(r292): [745..746]
 a155(r291): [749..750]
 a156(r290): [753..754]
 a157(r289): [757..758]
 a158(r288): [760..762]
 a159(r286): [760..766]
 a160(r287): [760..764]
 a161(r285): [769..770]
 a162(r284): [773..774]
 a163(r283): [777..778]
 a164(r282): [781..782]
 a165(r281): [785..786]
 a166(r280): [789..790]
 a167(r279): [793..794]
 a168(r278): [797..798]
 a169(r277): [801..802]
 a170(r276): [805..806]
 a171(r275): [809..810]
 a172(r274): [813..814]
 a173(r124): [820..821]
 a174(r273): [826..829]
 a175(r272): [828..831]
 a176(r271): [832..833]
 a177(r123): [839..840]
 a178(r270): [846..851]
 a179(r269): [848..853]
 a180(r268): [850..855]
 a181(r122): [875..876]
 a182(r267): [882..885]
 a183(r266): [884..887]
 a184(r265): [888..889]
 a185(r121): [895..896]
 a186(r264): [897..898]
 a187(r120): [899..900]
 a188(r119): [905..922]
 a189(r263): [907..914]
 a190(r262): [909..916]
 a191(r261): [911..918]
 a192(r118): [913..924]
 a193(r260): [919..920]
 a194(r117): [925..926]
 a195(r116): [937..938]
 a196(r115): [949..950]
 a197(r259): [956..959]
 a198(r258): [958..961]
 a199(r257): [962..963]
 a200(r114): [969..970]
 a201(r113): [973..974]
 a202(r256): [979..982]
 a203(r255): [983..984]
 a204(r112): [990..991]
 a205(r254): [996..999]
 a206(r253): [1000..1001]
 a207(r111): [1007..1008]
 a208(r252): [1013..1016]
 a209(r251): [1015..1018]
 a210(r250): [1019..1020]
 a211(r249): [1026..1029]
 a212(r110): [1028..1031]
 a213(r109): [1037..1038]
 a214(r108): [1044..1045]
 a215(r107): [1044..1047]
 a216(r248): [1048..1049]
 a217(r247): [1050..1051]
 a218(r106): [1052..1055]
 a219(r246): [1052..1053]
 a220(r105): [1061..1062]
 a221(r245): [1070..1075]
 a222(r244): [1072..1077]
 a223(r242): [1074..1081]
 a224(r243): [1078..1079]
 a225(r241): [1094..1099]
 a226(r240): [1096..1101]
 a227(r238): [1098..1105]
 a228(r239): [1102..1103]
 a229(r237): [1118..1121]
 a230(r236): [1120..1123]
 a231(r235): [1124..1125]
 a232(r104): [1140..1141]
 a233(r234): [1146..1157]
 a234(r233): [1148..1159]
 a235(r103): [1150..1169]
 a236(r231): [1152..1163]
 a237(r230): [1154..1165]
 a238(r229): [1156..1167]
 a239(r232): [1160..1161]
 a240(r228): [1175..1178]
 a241(r227): [1177..1180]
 a242(r226): [1181..1182]
 a243(r102): [1190..1191]
 a244(r101): [1196..1211]
 a245(r225): [1198..1205]
 a246(r224): [1200..1207]
 a247(r223): [1202..1209]
 a248(r100): [1204..1213]
 a249(r99): [1214..1215]
 a250(r98): [1231..1232]
 a251(r97): [1238..1239]
 a252(r96): [1255..1256]
 a253(r95): [1262..1263]
 a254(r222): [1268..1271]
 a255(r94): [1270..1273]
 a256(r93): [1274..1275]
 a257(r221): [1281..1284]
 a258(r220): [1283..1286]
 a259(r92): [1292..1293]
 a260(r91): [1296..1297]
 a261(r219): [1302..1305]
 a262(r218): [1310..1315]
 a263(r90): [1312..1319]
 a264(r217): [1314..1317]
 a265(r89): [1320..1321]
 a266(r216): [1327..1328]
 a267(r215): [1341..1342]
 a268(r214): [1355..1356]
 a269(r213): [1369..1370]
 a270(r212): [1403..1404]
 a271(r211): [1417..1418]
 a272(r210): [1431..1432]
 a273(r209): [1445..1446]
 a274(r208): [1459..1460]
 a275(r207): [1473..1474]
 a276(r206): [1487..1488]
 a277(r205): [1501..1502]
 a278(r204): [1515..1516]
 a279(r203): [1529..1530]
 a280(r202): [1543..1544]
 a281(r201): [1557..1560]
 a282(r88): [1559..1562]
 a283(r87): [1563..1564]
 a284(r200): [1565..1566]
 a285(r86): [1565..1568]
 a286(r85): [1569..1570]
 a287(r84): [1571..1572]
 a288(r199): [1585..1586]
 a289(r83): [1594..1595]
 a290(r194): [1602..1629]
 a291(r193): [1604..1631]
 a292(r192): [1606..1633]
 a293(r191): [1608..1635]
 a294(r190): [1610..1637]
 a295(r189): [1612..1639]
 a296(r198): [1614..1615]
 a297(r197): [1618..1619]
 a298(r196): [1622..1623]
 a299(r195): [1626..1627]
 a300(r188): [1644..1655]
 a301(r187): [1646..1657]
 a302(r186): [1648..1659]
 a303(r185): [1650..1661]
 a304(r184): [1652..1663]
 a305(r183): [1654..1665]
 a306(r182): [1671..1672]
Compressing live ranges: from 1710 to 434 - 25%
Ranges after the compression:
 a0(r181): [0..1]
 a1(r180): [2..3]
 a2(r179): [4..5]
 a3(r178): [6..7]
 a4(r177): [8..9]
 a5(r176): [10..11]
 a6(r175): [12..13]
 a7(r174): [14..15]
 a8(r173): [16..17]
 a9(r172): [18..19]
 a10(r171): [20..21]
 a11(r170): [28..29]
 a12(r388): [30..31]
 a13(r389): [32..33]
 a14(r169): [22..23]
 a15(r386): [24..25]
 a16(r387): [26..27]
 a17(r385): [34..35]
 a18(r384): [36..37]
 a19(r168): [38..39]
 a20(r381): [40..43]
 a21(r167): [40..51]
 a22(r379): [40..45]
 a23(r377): [40..47]
 a24(r375): [40..49]
 a25(r383): [40..41]
 a26(r382): [42..43]
 a27(r380): [44..45]
 a28(r378): [46..47]
 a29(r376): [48..49]
 a30(r374): [50..51]
 a31(r373): [52..53]
 a32(r372): [54..55]
 a33(r166): [56..57]
 a34(r370): [58..59]
 a35(r165): [58..61]
 a36(r368): [58..61]
 a37(r367): [58..61]
 a38(r366): [58..61]
 a39(r371): [58..59]
 a40(r369): [60..61]
 a41(r164): [62..63]
 a42(r163): [64..65]
 a43(r365): [66..67]
 a44(r364): [66..67]
 a45(r363): [66..67]
 a46(r362): [66..67]
 a47(r361): [66..67]
 a48(r162): [68..69]
 a49(r140): [70..71]
 a50(r143): [72..73]
 a51(r141): [72..85]
 a52(r142): [74..75]
 a53(r360): [76..77]
 a54(r359): [78..79]
 a55(r358): [80..81]
 a56(r356): [82..83]
 a57(r357): [84..85]
 a58(r355): [86..87]
 a59(r156): [88..101]
 a60(r161): [88..89]
 a61(r160): [90..91]
 a62(r159): [92..93]
 a63(r157): [92..97]
 a64(r158): [94..95]
 a65(r354): [96..97]
 a66(r352): [98..99]
 a67(r353): [100..101]
 a68(r155): [102..103]
 a69(r153): [102..107]
 a70(r154): [104..105]
 a71(r351): [106..107]
 a72(r349): [108..109]
 a73(r350): [110..111]
 a74(r147): [112..125]
 a75(r152): [112..113]
 a76(r151): [114..115]
 a77(r150): [116..117]
 a78(r148): [116..121]
 a79(r149): [118..119]
 a80(r348): [120..121]
 a81(r346): [122..123]
 a82(r347): [124..125]
 a83(r146): [126..127]
 a84(r144): [126..131]
 a85(r145): [128..129]
 a86(r345): [130..131]
 a87(r343): [132..133]
 a88(r344): [134..135]
 a89(r337): [136..145]
 a90(r336): [136..145]
 a91(r335): [136..145]
 a92(r334): [136..145]
 a93(r333): [136..145]
 a94(r332): [136..145]
 a95(r342): [136..137]
 a96(r341): [138..139]
 a97(r340): [140..141]
 a98(r339): [142..143]
 a99(r139): [144..145]
 a100(r338): [144..145]
 a101(r138): [146..147]
 a102(r137): [148..149]
 a103(r136): [150..151]
 a104(r135): [152..153]
 a105(r134): [154..155]
 a106(r133): [156..157]
 a107(r132): [158..159]
 a108(r331): [160..161]
 a109(r330): [162..163]
 a110(r131): [164..165]
 a111(r329): [166..167]
 a112(r328): [166..167]
 a113(r327): [168..169]
 a114(r130): [170..171]
 a115(r326): [172..173]
 a116(r324): [172..175]
 a117(r322): [172..177]
 a118(r325): [174..175]
 a119(r323): [176..177]
 a120(r321): [178..179]
 a121(r320): [180..181]
 a122(r319): [180..181]
 a123(r317): [180..183]
 a124(r318): [182..183]
 a125(r316): [184..185]
 a126(r315): [186..187]
 a127(r314): [186..187]
 a128(r312): [186..189]
 a129(r313): [188..189]
 a130(r311): [190..191]
 a131(r310): [192..193]
 a132(r309): [192..193]
 a133(r308): [194..195]
 a134(r129): [196..197]
 a135(r307): [198..199]
 a136(r305): [198..201]
 a137(r128): [198..207]
 a138(r303): [198..203]
 a139(r302): [198..203]
 a140(r300): [198..205]
 a141(r306): [200..201]
 a142(r304): [202..203]
 a143(r301): [204..205]
 a144(r299): [206..207]
 a145(r298): [208..209]
 a146(r296): [208..211]
 a147(r294): [208..213]
 a148(r297): [210..211]
 a149(r295): [212..213]
 a150(r293): [214..215]
 a151(r127): [216..217]
 a152(r126): [218..219]
 a153(r125): [220..221]
 a154(r292): [222..223]
 a155(r291): [224..225]
 a156(r290): [226..227]
 a157(r289): [228..229]
 a158(r288): [230..231]
 a159(r286): [230..231]
 a160(r287): [230..231]
 a161(r285): [232..233]
 a162(r284): [234..235]
 a163(r283): [236..237]
 a164(r282): [238..239]
 a165(r281): [240..241]
 a166(r280): [242..243]
 a167(r279): [244..245]
 a168(r278): [246..247]
 a169(r277): [248..249]
 a170(r276): [250..251]
 a171(r275): [252..253]
 a172(r274): [254..255]
 a173(r124): [256..257]
 a174(r273): [258..259]
 a175(r272): [258..259]
 a176(r271): [260..261]
 a177(r123): [262..263]
 a178(r270): [264..265]
 a179(r269): [264..265]
 a180(r268): [264..265]
 a181(r122): [266..267]
 a182(r267): [268..269]
 a183(r266): [268..269]
 a184(r265): [270..271]
 a185(r121): [272..273]
 a186(r264): [274..275]
 a187(r120): [276..277]
 a188(r119): [278..281]
 a189(r263): [278..279]
 a190(r262): [278..279]
 a191(r261): [278..279]
 a192(r118): [278..281]
 a193(r260): [280..281]
 a194(r117): [282..283]
 a195(r116): [284..285]
 a196(r115): [286..287]
 a197(r259): [288..289]
 a198(r258): [288..289]
 a199(r257): [290..291]
 a200(r114): [292..293]
 a201(r113): [294..295]
 a202(r256): [296..297]
 a203(r255): [298..299]
 a204(r112): [300..301]
 a205(r254): [302..303]
 a206(r253): [304..305]
 a207(r111): [306..307]
 a208(r252): [308..309]
 a209(r251): [308..309]
 a210(r250): [310..311]
 a211(r249): [312..313]
 a212(r110): [312..313]
 a213(r109): [314..315]
 a214(r108): [316..317]
 a215(r107): [316..317]
 a216(r248): [318..319]
 a217(r247): [320..321]
 a218(r106): [322..323]
 a219(r246): [322..323]
 a220(r105): [324..325]
 a221(r245): [326..327]
 a222(r244): [326..327]
 a223(r242): [326..329]
 a224(r243): [328..329]
 a225(r241): [330..331]
 a226(r240): [330..331]
 a227(r238): [330..333]
 a228(r239): [332..333]
 a229(r237): [334..335]
 a230(r236): [334..335]
 a231(r235): [336..337]
 a232(r104): [338..339]
 a233(r234): [340..341]
 a234(r233): [340..341]
 a235(r103): [340..343]
 a236(r231): [340..343]
 a237(r230): [340..343]
 a238(r229): [340..343]
 a239(r232): [342..343]
 a240(r228): [344..345]
 a241(r227): [344..345]
 a242(r226): [346..347]
 a243(r102): [348..349]
 a244(r101): [350..351]
 a245(r225): [350..351]
 a246(r224): [350..351]
 a247(r223): [350..351]
 a248(r100): [350..351]
 a249(r99): [352..353]
 a250(r98): [354..355]
 a251(r97): [356..357]
 a252(r96): [358..359]
 a253(r95): [360..361]
 a254(r222): [362..363]
 a255(r94): [362..363]
 a256(r93): [364..365]
 a257(r221): [366..367]
 a258(r220): [366..367]
 a259(r92): [368..369]
 a260(r91): [370..371]
 a261(r219): [372..373]
 a262(r218): [374..375]
 a263(r90): [374..375]
 a264(r217): [374..375]
 a265(r89): [376..377]
 a266(r216): [378..379]
 a267(r215): [380..381]
 a268(r214): [382..383]
 a269(r213): [384..385]
 a270(r212): [386..387]
 a271(r211): [388..389]
 a272(r210): [390..391]
 a273(r209): [392..393]
 a274(r208): [394..395]
 a275(r207): [396..397]
 a276(r206): [398..399]
 a277(r205): [400..401]
 a278(r204): [402..403]
 a279(r203): [404..405]
 a280(r202): [406..407]
 a281(r201): [408..409]
 a282(r88): [408..409]
 a283(r87): [410..411]
 a284(r200): [412..413]
 a285(r86): [412..413]
 a286(r85): [414..415]
 a287(r84): [416..417]
 a288(r199): [418..419]
 a289(r83): [420..421]
 a290(r194): [422..429]
 a291(r193): [422..429]
 a292(r192): [422..429]
 a293(r191): [422..429]
 a294(r190): [422..429]
 a295(r189): [422..429]
 a296(r198): [422..423]
 a297(r197): [424..425]
 a298(r196): [426..427]
 a299(r195): [428..429]
 a300(r188): [430..431]
 a301(r187): [430..431]
 a302(r186): [430..431]
 a303(r185): [430..431]
 a304(r184): [430..431]
 a305(r183): [430..431]
 a306(r182): [432..433]
  pref0:a158(r288)<-hr2@2
  pref1:a160(r287)<-hr4@2
  pref2:a159(r286)<-hr5@2
  regions=1, blocks=130, points=434
    allocnos=307 (big 0), copies=0, conflicts=0, ranges=307
Disposition:
  289:r83  l0     0  287:r84  l0     0  286:r85  l0     0  285:r86  l0     1
  283:r87  l0     0  282:r88  l0     1  265:r89  l0     0  263:r90  l0     2
  260:r91  l0     0  259:r92  l0     0  256:r93  l0     0  255:r94  l0     1
  253:r95  l0     0  252:r96  l0     0  251:r97  l0     0  250:r98  l0     0
  249:r99  l0     0  248:r100 l0     5  244:r101 l0     0  243:r102 l0     0
  235:r103 l0     1  232:r104 l0     0  220:r105 l0     0  218:r106 l0     0
  215:r107 l0     1  214:r108 l0     0  213:r109 l0     0  212:r110 l0     1
  207:r111 l0     0  204:r112 l0     0  201:r113 l0     0  200:r114 l0     0
  196:r115 l0     0  195:r116 l0     0  194:r117 l0     0  192:r118 l0     5
  188:r119 l0     0  187:r120 l0     0  185:r121 l0     0  181:r122 l0     0
  177:r123 l0     0  173:r124 l0     0  153:r125 l0     0  152:r126 l0     0
  151:r127 l0     0  137:r128 l0     0  134:r129 l0     0  114:r130 l0     0
  110:r131 l0     0  107:r132 l0     0  106:r133 l0     0  105:r134 l0     0
  104:r135 l0     0  103:r136 l0     0  102:r137 l0     0  101:r138 l0     0
   99:r139 l0     5   49:r140 l0     0   51:r141 l0     0   52:r142 l0     1
   50:r143 l0     1   84:r144 l0     0   85:r145 l0     1   83:r146 l0     1
   74:r147 l0     1   78:r148 l0     0   79:r149 l0     2   77:r150 l0     2
   76:r151 l0     0   75:r152 l0     0   69:r153 l0     0   70:r154 l0     1
   68:r155 l0     1   59:r156 l0     1   63:r157 l0     0   64:r158 l0     2
   62:r159 l0     2   61:r160 l0     0   60:r161 l0     0   48:r162 l0     0
   42:r163 l0     0   41:r164 l0     0   35:r165 l0     0   33:r166 l0     0
   21:r167 l0     0   19:r168 l0     0   14:r169 l0     0   11:r170 l0     0
   10:r171 l0     0    9:r172 l0     0    8:r173 l0     0    7:r174 l0     0
    6:r175 l0     0    5:r176 l0     0    4:r177 l0     0    3:r178 l0     0
    2:r179 l0     0    1:r180 l0     0    0:r181 l0     0  306:r182 l0     0
  305:r183 l0    37  304:r184 l0     5  303:r185 l0     2  302:r186 l0     1
  301:r187 l0     4  300:r188 l0     0  295:r189 l0    38  294:r190 l0    37
  293:r191 l0     2  292:r192 l0     1  291:r193 l0     4  290:r194 l0     0
  299:r195 l0     5  298:r196 l0     5  297:r197 l0     5  296:r198 l0     5
  288:r199 l0     0  284:r200 l0     0  281:r201 l0     0  280:r202 l0     0
  279:r203 l0     0  278:r204 l0     0  277:r205 l0     0  276:r206 l0     0
  275:r207 l0     0  274:r208 l0     0  273:r209 l0     0  272:r210 l0     0
  271:r211 l0     0  270:r212 l0     0  269:r213 l0     0  268:r214 l0     0
  267:r215 l0     0  266:r216 l0     0  264:r217 l0     1  262:r218 l0     0
  261:r219 l0     0  258:r220 l0     1  257:r221 l0     0  254:r222 l0     0
  247:r223 l0     2  246:r224 l0     1  245:r225 l0     4  242:r226 l0     0
  241:r227 l0     1  240:r228 l0     0  238:r229 l0    37  237:r230 l0     5
  236:r231 l0     2  239:r232 l0     0  234:r233 l0     4  233:r234 l0     0
  231:r235 l0     0  230:r236 l0     1  229:r237 l0     0  227:r238 l0     1
  228:r239 l0     0  226:r240 l0     2  225:r241 l0     0  223:r242 l0     1
  224:r243 l0     0  222:r244 l0     2  221:r245 l0     0  219:r246 l0     1
  217:r247 l0     0  216:r248 l0     0  211:r249 l0     0  210:r250 l0     0
  209:r251 l0     1  208:r252 l0     0  206:r253 l0     0  205:r254 l0     0
  203:r255 l0     0  202:r256 l0     0  199:r257 l0     0  198:r258 l0     1
  197:r259 l0     0  193:r260 l0     1  191:r261 l0     2  190:r262 l0     1
  189:r263 l0     4  186:r264 l0     0  184:r265 l0     0  183:r266 l0     1
  182:r267 l0     0  180:r268 l0     1  179:r269 l0     2  178:r270 l0     0
  176:r271 l0     0  175:r272 l0     1  174:r273 l0     0  172:r274 l0     0
  171:r275 l0     0  170:r276 l0     0  169:r277 l0     0  168:r278 l0     0
  167:r279 l0     0  166:r280 l0     0  165:r281 l0     0  164:r282 l0     0
  163:r283 l0     0  162:r284 l0     0  161:r285 l0     0  159:r286 l0     0
  160:r287 l0     1  158:r288 l0     2  157:r289 l0     0  156:r290 l0     0
  155:r291 l0     0  154:r292 l0     0  150:r293 l0     0  147:r294 l0     1
  149:r295 l0     0  146:r296 l0     2  148:r297 l0     0  145:r298 l0     0
  144:r299 l0     1  140:r300 l0    38  143:r301 l0     1  139:r302 l0    37
  138:r303 l0     1  142:r304 l0     2  136:r305 l0     4  141:r306 l0     2
  135:r307 l0     5  133:r308 l0     0  132:r309 l0     1  131:r310 l0     0
  130:r311 l0     0  128:r312 l0     1  129:r313 l0     0  127:r314 l0     2
  126:r315 l0     0  125:r316 l0     0  123:r317 l0     1  124:r318 l0     0
  122:r319 l0     2  121:r320 l0     0  120:r321 l0     0  117:r322 l0     1
  119:r323 l0     0  116:r324 l0     2  118:r325 l0     0  115:r326 l0     0
  113:r327 l0     0  112:r328 l0     1  111:r329 l0     0  109:r330 l0     0
  108:r331 l0     0   94:r332 l0    38   93:r333 l0    39   92:r334 l0     2
   91:r335 l0     1   90:r336 l0     4   89:r337 l0     0  100:r338 l0    37
   98:r339 l0     5   97:r340 l0     5   96:r341 l0     5   95:r342 l0     5
   87:r343 l0     0   88:r344 l0     0   86:r345 l0     1   81:r346 l0     0
   82:r347 l0     0   80:r348 l0     2   72:r349 l0     0   73:r350 l0     0
   71:r351 l0     1   66:r352 l0     0   67:r353 l0     0   65:r354 l0     2
   58:r355 l0     0   56:r356 l0     1   57:r357 l0     1   55:r358 l0     1
   54:r359 l0     1   53:r360 l0     1   47:r361 l0     5   46:r362 l0     2
   45:r363 l0     1   44:r364 l0     4   43:r365 l0     0   38:r366 l0    37
   37:r367 l0     2   36:r368 l0     1   40:r369 l0     4   34:r370 l0     5
   39:r371 l0     4   32:r372 l0     0   31:r373 l0     0   30:r374 l0     1
   24:r375 l0    37   29:r376 l0     1   23:r377 l0     2   28:r378 l0     1
   22:r379 l0     1   27:r380 l0     4   20:r381 l0     5   26:r382 l0     4
   25:r383 l0     4   18:r384 l0     0   17:r385 l0     0   15:r386 l0     0
   16:r387 l0     0   12:r388 l0     0   13:r389 l0     0
+++Costs: overall -129, reg -129, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int main(int, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={79d,16u} r1={94d,18u} r2={86d,10u} r4={112d,37u} r5={150d,75u} r6={1d,129u} r7={19d,229u} r8={75d} r9={75d} r10={75d} r11={75d} r12={75d} r13={75d} r14={75d} r15={75d} r16={1d,128u} r17={335d,69u} r18={75d} r19={75d} r20={1d,442u,1e} r21={76d} r22={76d} r23={76d} r24={76d} r25={76d} r26={76d} r27={76d} r28={76d} r29={75d} r30={75d} r31={75d} r32={75d} r33={75d} r34={75d} r35={75d} r36={75d} r37={86d,10u} r38={83d,7u} r39={75d} r40={75d} r45={75d} r46={75d} r47={75d} r48={75d} r49={75d} r50={75d} r51={75d} r52={75d} r53={75d} r54={75d} r55={75d} r56={75d} r57={75d} r58={75d} r59={75d} r60={75d} r61={75d} r62={75d} r63={75d} r64={75d} r65={75d} r66={75d} r67={75d} r68={75d} r69={75d} r70={75d} r71={75d} r72={75d} r73={75d} r74={75d} r75={75d} r76={75d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u,1e} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,2u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={2d,2u} r287={2d,2u} r288={2d,3u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} 
;;    total ref usage 7349{5865d,1482u,2e} in 791{716 regular + 75 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) sim2fitman.cpp:30 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) sim2fitman.cpp:30 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.5834+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:30 964 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3336 [0xfffffffffffff2f8])) [0 maxval+0 S8 A64])
        (const_int 16384 [0x4000])) sim2fitman.cpp:54 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:56 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:57 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3384 [0xfffffffffffff2c8])) [0 arg_read+0 S4 A64])
        (const_int 0 [0])) sim2fitman.cpp:58 90 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])
        (const_int 0 [0])) sim2fitman.cpp:59 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:59 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:64 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:69 93 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])
        (const_int 1 [0x1])) sim2fitman.cpp:70 93 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3389 [0xfffffffffffff2c3])) [0 overwrite+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:71 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])
        (const_int 0 [0])) sim2fitman.cpp:77 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (const_int 0 [0])) sim2fitman.cpp:78 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:81 7 {*cmpsi_1}
     (nil))
(jump_insn 21 20 22 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) sim2fitman.cpp:81 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 26)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 182
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 3 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:82 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 182)) sim2fitman.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 182)
        (nil)))
(call_insn 25 24 26 3 (call (mem:QI (symbol_ref:DI ("_Z7exit_01PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b518f00 exit_01>) [0 exit_01 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:82 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198
(code_label 26 25 27 4 2 "" [1 uses])
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 4 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:86 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 4 (set (reg:DI 38 r9)
        (reg:DI 183)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 183)
        (nil)))
(insn 35 34 36 4 (set (reg:DI 37 r8)
        (reg:DI 184)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 184)
        (nil)))
(insn 36 35 37 4 (set (reg:DI 2 cx)
        (reg:DI 185)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 185)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 1 dx)
        (reg:DI 186)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (nil)))
(insn 38 37 39 4 (set (reg:DI 4 si)
        (reg:DI 187)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 187)
        (nil)))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg:DI 188)) sim2fitman.cpp:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(call_insn 40 39 41 4 (call (mem:QI (symbol_ref:DI ("_Z4initP16Data_file_headerP17Data_block_headerP12Procpar_infoP10PreprocessP7IOFilesP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b518900 init>) [0 init S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:86 642 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3388 [0xfffffffffffff2c4])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])) sim2fitman.cpp:92 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3396 [0xfffffffffffff2bc])) [0 argc+0 S4 A32])) sim2fitman.cpp:92 90 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 46 45 47 4 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3390 [0xfffffffffffff2c2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 195)) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 195)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3389 [0xfffffffffffff2c3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 196)) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 196)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3344 [0xfffffffffffff2f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 197)) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 197)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3384 [0xfffffffffffff2c8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 198)) sim2fitman.cpp:92 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 198)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 55 54 56 4 (set (reg:DI 38 r9)
        (reg:DI 189)) sim2fitman.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 56 55 57 4 (set (reg:DI 37 r8)
        (reg:DI 190)) sim2fitman.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 190)
        (nil)))
(insn 57 56 58 4 (set (reg:SI 2 cx)
        (reg:SI 191)) sim2fitman.cpp:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 191)
        (nil)))
(insn 58 57 59 4 (set (reg:DI 1 dx)
        (reg:DI 192)) sim2fitman.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(insn 59 58 60 4 (set (reg:DI 4 si)
        (reg:DI 193)) sim2fitman.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(insn 60 59 61 4 (set (reg:DI 5 di)
        (reg:DI 194)) sim2fitman.cpp:92 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 61 60 62 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_") [flags 0x41]  <function_decl 0x2ad76b4f1200 command_line>) [0 command_line S1 A8])
            (const_int 32 [0x20]))) sim2fitman.cpp:92 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 62 61 63 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:92 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 63 62 64 4 (set (reg:SI 83 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 64 63 65 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 83 [ D.5824 ])) sim2fitman.cpp:92 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ D.5824 ])
        (nil)))
(insn 65 64 66 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:93 7 {*cmpsi_1}
     (nil))
(jump_insn 66 65 67 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) sim2fitman.cpp:93 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 73)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 199
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 5 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:95 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 5 (set (reg:DI 5 di)
        (reg:DI 199)) sim2fitman.cpp:95 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(call_insn 70 69 1027 5 (call (mem:QI (symbol_ref:DI ("_Z7exit_05PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51c300 exit_05>) [0 exit_05 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:95 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1027 70 1028 5 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1028 1027 73)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 73 1028 74 6 3 "" [1 uses])
(note 74 73 75 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:96 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) sim2fitman.cpp:96 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 90)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87 88 200 201
(note 77 76 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 7 (set (reg:SI 84 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3384 [0xfffffffffffff2c8])) [0 arg_read+0 S4 A64])) sim2fitman.cpp:98 90 {*movsi_internal}
     (nil))
(insn 79 78 80 7 (set (reg:DI 85 [ D.5825 ])
        (sign_extend:DI (reg:SI 84 [ D.5824 ]))) sim2fitman.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 84 [ D.5824 ])
        (nil)))
(insn 80 79 81 7 (parallel [
            (set (reg:DI 86 [ D.5825 ])
                (ashift:DI (reg:DI 85 [ D.5825 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 85 [ D.5825 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 81 80 82 7 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])) sim2fitman.cpp:98 89 {*movdi_internal}
     (nil))
(insn 82 81 83 7 (parallel [
            (set (reg/f:DI 87 [ D.5826 ])
                (plus:DI (reg:DI 86 [ D.5825 ])
                    (reg/f:DI 200)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (expr_list:REG_DEAD (reg:DI 86 [ D.5825 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -3408 [0xfffffffffffff2b0])) [0 argv+0 S8 A64])
                        (reg:DI 86 [ D.5825 ]))
                    (nil))))))
(insn 83 82 84 7 (set (reg/f:DI 88 [ D.5827 ])
        (mem/f:DI (reg/f:DI 87 [ D.5826 ]) [0 *_15+0 S8 A64])) sim2fitman.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.5826 ])
        (nil)))
(insn 84 83 85 7 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:98 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 7 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.5827 ])) sim2fitman.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.5827 ])
        (nil)))
(insn 86 85 87 7 (set (reg:DI 5 di)
        (reg:DI 201)) sim2fitman.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 201)
        (nil)))
(call_insn 87 86 1029 7 (call (mem:QI (symbol_ref:DI ("_Z7exit_04PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c200 exit_04>) [0 exit_04 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:98 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1029 87 1030 7 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1030 1029 90)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 90 1030 91 8 5 "" [1 uses])
(note 91 90 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:99 7 {*cmpsi_1}
     (nil))
(jump_insn 93 92 94 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) sim2fitman.cpp:99 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 100)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 202
(note 94 93 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 9 (parallel [
            (set (reg:DI 202)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:101 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 96 95 97 9 (set (reg:DI 5 di)
        (reg:DI 202)) sim2fitman.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 202)
        (nil)))
(call_insn 97 96 1031 9 (call (mem:QI (symbol_ref:DI ("_Z7exit_11PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51c900 exit_11>) [0 exit_11 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:101 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1031 97 1032 9 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1032 1031 100)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 100 1032 101 10 6 "" [1 uses])
(note 101 100 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -4 [0xfffffffffffffffc]))) sim2fitman.cpp:102 7 {*cmpsi_1}
     (nil))
(jump_insn 103 102 104 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) sim2fitman.cpp:102 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 110)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 203
(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 11 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:104 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 106 105 107 11 (set (reg:DI 5 di)
        (reg:DI 203)) sim2fitman.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 203)
        (nil)))
(call_insn 107 106 1033 11 (call (mem:QI (symbol_ref:DI ("_Z7exit_12PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51ca00 exit_12>) [0 exit_12 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:104 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1033 107 1034 11 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1034 1033 110)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 110 1034 111 12 7 "" [1 uses])
(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -5 [0xfffffffffffffffb]))) sim2fitman.cpp:105 7 {*cmpsi_1}
     (nil))
(jump_insn 113 112 114 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) sim2fitman.cpp:105 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 120)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 204
(note 114 113 115 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 13 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:107 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 116 115 117 13 (set (reg:DI 5 di)
        (reg:DI 204)) sim2fitman.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 204)
        (nil)))
(call_insn 117 116 1035 13 (call (mem:QI (symbol_ref:DI ("_Z7exit_13PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51cb00 exit_13>) [0 exit_13 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:107 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1035 117 1036 13 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1036 1035 120)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 120 1036 121 14 8 "" [1 uses])
(note 121 120 122 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -6 [0xfffffffffffffffa]))) sim2fitman.cpp:108 7 {*cmpsi_1}
     (nil))
(jump_insn 123 122 124 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) sim2fitman.cpp:108 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 130)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 205
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 15 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:110 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 15 (set (reg:DI 5 di)
        (reg:DI 205)) sim2fitman.cpp:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(call_insn 127 126 1037 15 (call (mem:QI (symbol_ref:DI ("_Z7exit_14PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51cc00 exit_14>) [0 exit_14 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:110 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1037 127 1038 15 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1038 1037 130)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 130 1038 131 16 9 "" [1 uses])
(note 131 130 132 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -7 [0xfffffffffffffff9]))) sim2fitman.cpp:111 7 {*cmpsi_1}
     (nil))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) sim2fitman.cpp:111 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 140)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 206
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:113 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 136 135 137 17 (set (reg:DI 5 di)
        (reg:DI 206)) sim2fitman.cpp:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(call_insn 137 136 1039 17 (call (mem:QI (symbol_ref:DI ("_Z7exit_15PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51cd00 exit_15>) [0 exit_15 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:113 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1039 137 1040 17 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1040 1039 140)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 140 1040 141 18 10 "" [1 uses])
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -8 [0xfffffffffffffff8]))) sim2fitman.cpp:114 7 {*cmpsi_1}
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) sim2fitman.cpp:114 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 150)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 207
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:116 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 146 145 147 19 (set (reg:DI 5 di)
        (reg:DI 207)) sim2fitman.cpp:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(call_insn 147 146 1041 19 (call (mem:QI (symbol_ref:DI ("_Z7exit_19PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520100 exit_19>) [0 exit_19 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:116 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1041 147 1042 19 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1042 1041 150)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 150 1042 151 20 11 "" [1 uses])
(note 151 150 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -9 [0xfffffffffffffff7]))) sim2fitman.cpp:117 7 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) sim2fitman.cpp:117 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 160)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 208
(note 154 153 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 21 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:119 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 156 155 157 21 (set (reg:DI 5 di)
        (reg:DI 208)) sim2fitman.cpp:119 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 208)
        (nil)))
(call_insn 157 156 1043 21 (call (mem:QI (symbol_ref:DI ("_Z7exit_16PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51ce00 exit_16>) [0 exit_16 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:119 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1043 157 1044 21 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1044 1043 160)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 160 1044 161 22 12 "" [1 uses])
(note 161 160 162 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -10 [0xfffffffffffffff6]))) sim2fitman.cpp:120 7 {*cmpsi_1}
     (nil))
(jump_insn 163 162 164 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) sim2fitman.cpp:120 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 170)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209
(note 164 163 165 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 23 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:122 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 166 165 167 23 (set (reg:DI 5 di)
        (reg:DI 209)) sim2fitman.cpp:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 209)
        (nil)))
(call_insn 167 166 1045 23 (call (mem:QI (symbol_ref:DI ("_Z7exit_17PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b51cf00 exit_17>) [0 exit_17 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:122 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1045 167 1046 23 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1046 1045 170)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 1046 171 24 13 "" [1 uses])
(note 171 170 172 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -11 [0xfffffffffffffff5]))) sim2fitman.cpp:123 7 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) sim2fitman.cpp:123 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 180)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 210
(note 174 173 175 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 25 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:125 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 176 175 177 25 (set (reg:DI 5 di)
        (reg:DI 210)) sim2fitman.cpp:125 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(call_insn 177 176 1047 25 (call (mem:QI (symbol_ref:DI ("_Z7exit_18PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520000 exit_18>) [0 exit_18 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:125 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1047 177 1048 25 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1048 1047 180)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 180 1048 181 26 14 "" [1 uses])
(note 181 180 182 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -12 [0xfffffffffffffff4]))) sim2fitman.cpp:126 7 {*cmpsi_1}
     (nil))
(jump_insn 183 182 184 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 190)
            (pc))) sim2fitman.cpp:126 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 190)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 211
(note 184 183 185 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 27 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:128 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 186 185 187 27 (set (reg:DI 5 di)
        (reg:DI 211)) sim2fitman.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(call_insn 187 186 1049 27 (call (mem:QI (symbol_ref:DI ("_Z7exit_20PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520200 exit_20>) [0 exit_20 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:128 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1049 187 1050 27 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1050 1049 190)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 190 1050 191 28 15 "" [1 uses])
(note 191 190 192 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -13 [0xfffffffffffffff3]))) sim2fitman.cpp:129 7 {*cmpsi_1}
     (nil))
(jump_insn 193 192 194 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) sim2fitman.cpp:129 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 200)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 212
(note 194 193 195 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 29 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:131 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 196 195 197 29 (set (reg:DI 5 di)
        (reg:DI 212)) sim2fitman.cpp:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 212)
        (nil)))
(call_insn 197 196 1051 29 (call (mem:QI (symbol_ref:DI ("_Z7exit_22PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520400 exit_22>) [0 exit_22 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:131 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1051 197 1052 29 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1052 1051 200)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 200 1052 201 30 16 "" [1 uses])
(note 201 200 202 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:132 7 {*cmpsi_1}
     (nil))
(jump_insn 203 202 204 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) sim2fitman.cpp:132 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 208)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 204 203 205 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 1053 31 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:134 90 {*movsi_internal}
     (nil))
(jump_insn 1053 205 1054 31 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1054 1053 208)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 208 1054 209 32 17 "" [1 uses])
(note 209 208 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:135 7 {*cmpsi_1}
     (nil))
(jump_insn 211 210 212 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) sim2fitman.cpp:135 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 216)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 212 211 213 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 1055 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
        (const_int 2 [0x2])) sim2fitman.cpp:137 90 {*movsi_internal}
     (nil))
(jump_insn 1055 213 1056 33 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1056 1055 216)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 216 1056 217 34 18 "" [1 uses])
(note 217 216 218 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -14 [0xfffffffffffffff2]))) sim2fitman.cpp:138 7 {*cmpsi_1}
     (nil))
(jump_insn 219 218 220 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) sim2fitman.cpp:138 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 226)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 213
(note 220 219 221 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 35 (parallel [
            (set (reg:DI 213)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:140 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 35 (set (reg:DI 5 di)
        (reg:DI 213)) sim2fitman.cpp:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 213)
        (nil)))
(call_insn 223 222 1057 35 (call (mem:QI (symbol_ref:DI ("_Z7exit_25PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520700 exit_25>) [0 exit_25 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:140 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1057 223 1058 35 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1058 1057 226)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 226 1058 227 36 19 "" [1 uses])
(note 227 226 228 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -15 [0xfffffffffffffff1]))) sim2fitman.cpp:141 7 {*cmpsi_1}
     (nil))
(jump_insn 229 228 230 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) sim2fitman.cpp:141 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 236)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 214
(note 230 229 231 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 37 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:143 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 232 231 233 37 (set (reg:DI 5 di)
        (reg:DI 214)) sim2fitman.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 214)
        (nil)))
(call_insn 233 232 1059 37 (call (mem:QI (symbol_ref:DI ("_Z7exit_26PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520800 exit_26>) [0 exit_26 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:143 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1059 233 1060 37 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1060 1059 236)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 236 1060 237 38 20 "" [1 uses])
(note 237 236 238 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -16 [0xfffffffffffffff0]))) sim2fitman.cpp:144 7 {*cmpsi_1}
     (nil))
(jump_insn 239 238 240 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) sim2fitman.cpp:144 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 246)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 215
(note 240 239 241 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 39 (parallel [
            (set (reg:DI 215)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:146 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 243 39 (set (reg:DI 5 di)
        (reg:DI 215)) sim2fitman.cpp:146 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 215)
        (nil)))
(call_insn 243 242 1061 39 (call (mem:QI (symbol_ref:DI ("_Z7exit_27PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520900 exit_27>) [0 exit_27 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:146 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1061 243 1062 39 (set (pc)
        (label_ref 254)) 636 {jump}
     (nil)
 -> 254)
;;  succ:       42 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1062 1061 246)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 246 1062 247 40 21 "" [1 uses])
(note 247 246 248 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -17 [0xffffffffffffffef]))) sim2fitman.cpp:147 7 {*cmpsi_1}
     (nil))
(jump_insn 249 248 250 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) sim2fitman.cpp:147 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 254)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 216
(note 250 249 251 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 41 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:149 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 252 251 253 41 (set (reg:DI 5 di)
        (reg:DI 216)) sim2fitman.cpp:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 216)
        (nil)))
(call_insn 253 252 254 41 (call (mem:QI (symbol_ref:DI ("_Z7exit_28PP8_IO_FILE") [flags 0x41]  <function_decl 0x2ad76b520a00 exit_28>) [0 exit_28 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:149 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              5 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;;              11 [100.0%] 
;;              13 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;;              19 [100.0%] 
;;              21 [100.0%] 
;;              23 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              33 [100.0%] 
;;              35 [100.0%] 
;;              37 [100.0%] 
;;              40
;;              39 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 89 90 91 92 217 218 219
(code_label 254 253 255 42 4 "" [19 uses])
(note 255 254 256 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 42 (set (reg:QI 89 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3389 [0xfffffffffffff2c3])) [0 overwrite+0 S1 A8])) sim2fitman.cpp:153 93 {*movqi_internal}
     (nil))
(insn 257 256 258 42 (set (reg:SI 90 [ D.5824 ])
        (zero_extend:SI (reg:QI 89 [ D.5828 ]))) sim2fitman.cpp:153 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 89 [ D.5828 ])
        (nil)))
(insn 258 257 259 42 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])) sim2fitman.cpp:153 90 {*movsi_internal}
     (nil))
(insn 259 258 260 42 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:153 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 260 259 261 42 (set (reg:SI 1 dx)
        (reg:SI 217)) sim2fitman.cpp:153 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 261 260 262 42 (set (reg:SI 4 si)
        (reg:SI 90 [ D.5824 ])) sim2fitman.cpp:153 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.5824 ])
        (nil)))
(insn 262 261 263 42 (set (reg:DI 5 di)
        (reg:DI 218)) sim2fitman.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 218)
        (nil)))
(call_insn 263 262 264 42 (call (mem:QI (symbol_ref:DI ("_Z13check_outfileP7IOFilesbi") [flags 0x41]  <function_decl 0x2ad76b518a00 check_outfile>) [0 check_outfile S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:153 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 42 (parallel [
            (set (reg:DI 219)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:156 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 265 264 266 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ad76b5781c8 *.LC0>)) sim2fitman.cpp:156 89 {*movdi_internal}
     (nil))
(insn 266 265 267 42 (set (reg:DI 5 di)
        (reg:DI 219)) sim2fitman.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 219)
        (nil)))
(call_insn 267 266 268 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ad76b3d4d00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:156 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 268 267 269 42 (set (reg/f:DI 91 [ D.5829 ])
        (reg:DI 0 ax)) sim2fitman.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 269 268 270 42 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])
        (reg/f:DI 91 [ D.5829 ])) sim2fitman.cpp:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.5829 ])
        (nil)))
(insn 270 269 271 42 (set (reg/f:DI 92 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:157 89 {*movdi_internal}
     (nil))
(insn 271 270 272 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.5829 ])
            (const_int 0 [0]))) sim2fitman.cpp:157 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.5829 ])
        (nil)))
(jump_insn 272 271 273 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) sim2fitman.cpp:157 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 279)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 220 221
(note 273 272 274 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 43 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:158 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 275 274 276 43 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:158 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 276 275 277 43 (set (reg:DI 4 si)
        (reg:DI 220)) sim2fitman.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 220)
        (nil)))
(insn 277 276 278 43 (set (reg:DI 5 di)
        (reg:DI 221)) sim2fitman.cpp:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 221)
        (nil)))
(call_insn 278 277 279 43 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c000 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:158 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 93 94 95 222
(code_label 279 278 280 44 22 "" [1 uses])
(note 280 279 281 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 44 (set (reg:QI 93 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:162 93 {*movqi_internal}
     (nil))
(insn 282 281 283 44 (set (reg:SI 94 [ D.5824 ])
        (zero_extend:SI (reg:QI 93 [ D.5828 ]))) sim2fitman.cpp:162 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 93 [ D.5828 ])
        (nil)))
(insn 283 282 284 44 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:162 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 284 283 285 44 (set (reg:SI 4 si)
        (reg:SI 94 [ D.5824 ])) sim2fitman.cpp:162 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.5824 ])
        (nil)))
(insn 285 284 286 44 (set (reg:DI 5 di)
        (reg:DI 222)) sim2fitman.cpp:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 222)
        (nil)))
(call_insn 286 285 287 44 (call (mem:QI (symbol_ref:DI ("_Z18endianCheck_systemP12Endian_Checkb") [flags 0x41]  <function_decl 0x2ad76b518200 endianCheck_system>) [0 endianCheck_system S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:162 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 287 286 288 44 (set (reg:SI 95 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:164 90 {*movsi_internal}
     (nil))
(insn 288 287 289 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.5824 ])
            (const_int 1 [0x1]))) sim2fitman.cpp:164 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95 [ D.5824 ])
        (nil)))
(jump_insn 289 288 290 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) sim2fitman.cpp:164 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 302)
;;  succ:       45 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96
(note 290 289 291 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 45 (set (reg:QI 96 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:166 93 {*movqi_internal}
     (nil))
(insn 292 291 293 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:166 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 96 [ D.5828 ])
        (nil)))
(jump_insn 293 292 294 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) sim2fitman.cpp:166 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 297)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 294 293 295 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 46 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ad76b578260 *.LC1>)) sim2fitman.cpp:167 89 {*movdi_internal}
     (nil))
(call_insn 296 295 297 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:167 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 297 296 298 47 24 "" [1 uses])
(note 298 297 299 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 1063 47 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:169 93 {*movqi_internal}
     (nil))
(jump_insn 1063 299 1064 47 (set (pc)
        (label_ref 344)) 636 {jump}
     (nil)
 -> 344)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1064 1063 302)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97
(code_label 302 1064 303 48 23 "" [1 uses])
(note 303 302 304 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 48 (set (reg:SI 97 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:170 90 {*movsi_internal}
     (nil))
(insn 305 304 306 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.5824 ])
            (const_int 2 [0x2]))) sim2fitman.cpp:170 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 97 [ D.5824 ])
        (nil)))
(jump_insn 306 305 307 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) sim2fitman.cpp:170 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 319)
;;  succ:       49 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98
(note 307 306 308 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 49 (set (reg:QI 98 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:172 93 {*movqi_internal}
     (nil))
(insn 309 308 310 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:172 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 98 [ D.5828 ])
        (nil)))
(jump_insn 310 309 311 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) sim2fitman.cpp:172 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 314)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 311 310 312 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ad76b5782f8 *.LC2>)) sim2fitman.cpp:173 89 {*movdi_internal}
     (nil))
(call_insn 313 312 314 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:173 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 314 313 315 51 27 "" [1 uses])
(note 315 314 316 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 1065 51 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:175 93 {*movqi_internal}
     (nil))
(jump_insn 1065 316 1066 51 (set (pc)
        (label_ref 344)) 636 {jump}
     (nil)
 -> 344)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1066 1065 319)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 99 100 101 102 223 224 225
(code_label 319 1066 320 52 26 "" [1 uses])
(note 320 319 321 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 52 (set (reg:QI 99 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:179 93 {*movqi_internal}
     (nil))
(insn 322 321 323 52 (set (reg:SI 100 [ D.5824 ])
        (zero_extend:SI (reg:QI 99 [ D.5828 ]))) sim2fitman.cpp:179 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 99 [ D.5828 ])
        (nil)))
(insn 323 322 324 52 (set (reg/f:DI 101 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:179 89 {*movdi_internal}
     (nil))
(insn 324 323 325 52 (parallel [
            (set (reg:DI 223)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 325 324 326 52 (parallel [
            (set (reg:DI 224)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 326 325 327 52 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:179 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 327 326 328 52 (set (reg:SI 37 r8)
        (reg:SI 100 [ D.5824 ])) sim2fitman.cpp:179 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ D.5824 ])
        (nil)))
(insn 328 327 329 52 (set (reg:DI 2 cx)
        (reg:DI 223)) sim2fitman.cpp:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 223)
        (nil)))
(insn 329 328 330 52 (set (reg:DI 1 dx)
        (reg:DI 224)) sim2fitman.cpp:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 224)
        (nil)))
(insn 330 329 331 52 (set (reg:DI 4 si)
        (reg:DI 225)) sim2fitman.cpp:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 225)
        (nil)))
(insn 331 330 332 52 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.5829 ])) sim2fitman.cpp:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.5829 ])
        (nil)))
(call_insn 332 331 333 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x2ad76b518300 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:179 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 333 332 334 52 (set (reg:SI 102 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:179 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 334 333 335 52 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 102 [ D.5824 ])) sim2fitman.cpp:179 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ D.5824 ])
        (nil)))
(insn 335 334 336 52 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:180 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 336 335 337 52 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 344)
            (pc))) sim2fitman.cpp:180 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 344)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 226 227 228
(note 337 336 338 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 53 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 339 338 340 53 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg:DI 226)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 226)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 340 339 341 53 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:181 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 341 340 342 53 (set (reg:DI 4 si)
        (reg:DI 227)) sim2fitman.cpp:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 227)
        (nil)))
(insn 342 341 343 53 (set (reg:DI 5 di)
        (reg:DI 228)) sim2fitman.cpp:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 228)
        (nil)))
(call_insn 343 342 344 53 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c500 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:181 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              47 [100.0%] 
;;              52
;;              51 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 103 104 229 230 231 232 233 234
(code_label 344 343 345 54 25 "" [3 uses])
(note 345 344 346 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 54 (set (reg/f:DI 103 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:190 89 {*movdi_internal}
     (nil))
(insn 347 346 348 54 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 348 347 349 54 (parallel [
            (set (reg:DI 230)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 349 348 350 54 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 350 349 351 54 (parallel [
            (set (reg:DI 232)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 351 350 352 54 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg:DI 232)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 232)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 352 351 353 54 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:190 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 353 352 354 54 (set (reg:DI 38 r9)
        (reg:DI 229)) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 229)
        (nil)))
(insn 354 353 355 54 (set (reg:DI 37 r8)
        (reg:DI 230)) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(insn 355 354 356 54 (set (reg:DI 2 cx)
        (reg:DI 231)) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 231)
        (nil)))
(insn 356 355 357 54 (set (reg:DI 1 dx)
        (reg/f:DI 103 [ D.5829 ])) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.5829 ])
        (nil)))
(insn 357 356 358 54 (set (reg:DI 4 si)
        (reg:DI 233)) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 233)
        (nil)))
(insn 358 357 359 54 (set (reg:DI 5 di)
        (reg:DI 234)) sim2fitman.cpp:190 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 234)
        (nil)))
(call_insn 359 358 360 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x2ad76b4f1300 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:190 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 360 359 361 54 (set (reg:SI 104 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:190 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 361 360 362 54 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 104 [ D.5824 ])) sim2fitman.cpp:190 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104 [ D.5824 ])
        (nil)))
(insn 362 361 363 54 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3180 [0xfffffffffffff394])) [0 infile_struct[0].num_unsup_sets+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:193 90 {*movsi_internal}
     (nil))
(insn 363 362 364 54 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:195 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 364 363 365 54 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) sim2fitman.cpp:195 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 407)
;;  succ:       55 (FALLTHRU)
;;              61
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 365 364 366 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:196 7 {*cmpsi_1}
     (nil))
(jump_insn 367 366 368 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) sim2fitman.cpp:196 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 377)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 235 236 237
(note 368 367 369 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 56 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 370 369 371 56 (parallel [
            (set (reg:DI 236)
                (plus:DI (reg:DI 235)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 235)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 371 370 372 56 (parallel [
            (set (reg:DI 237)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:197 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 372 371 373 56 (set (reg:DI 4 si)
        (reg:DI 236)) sim2fitman.cpp:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 236)
        (nil)))
(insn 373 372 374 56 (set (reg:DI 5 di)
        (reg:DI 237)) sim2fitman.cpp:197 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 237)
        (nil)))
(call_insn 374 373 1067 56 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c500 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:197 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1067 374 1068 56 (set (pc)
        (label_ref 432)) 636 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1068 1067 377)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 377 1068 378 57 29 "" [1 uses])
(note 378 377 379 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 380 379 381 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 392)
            (pc))) sim2fitman.cpp:198 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 392)
;;  succ:       58 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 238 239 240 241
(note 381 380 382 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 58 (parallel [
            (set (reg:DI 238)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 383 382 384 58 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 384 383 385 58 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg:DI 239)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 239)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 385 384 386 58 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:199 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 386 385 387 58 (set (reg:DI 1 dx)
        (reg:DI 238)) sim2fitman.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 238)
        (nil)))
(insn 387 386 388 58 (set (reg:DI 4 si)
        (reg:DI 240)) sim2fitman.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 240)
        (nil)))
(insn 388 387 389 58 (set (reg:DI 5 di)
        (reg:DI 241)) sim2fitman.cpp:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 241)
        (nil)))
(call_insn 389 388 1069 58 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b51c700 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:199 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1069 389 1070 58 (set (pc)
        (label_ref 432)) 636 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1070 1069 392)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 392 1070 393 59 31 "" [1 uses])
(note 393 392 394 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:200 7 {*cmpsi_1}
     (nil))
(jump_insn 395 394 396 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:200 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 432)
;;  succ:       60 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 242 243 244 245
(note 396 395 397 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 60 (parallel [
            (set (reg:DI 242)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 398 397 399 60 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 399 398 400 60 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 243)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 243)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 400 399 401 60 (parallel [
            (set (reg:DI 245)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:201 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 401 400 402 60 (set (reg:DI 1 dx)
        (reg:DI 242)) sim2fitman.cpp:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 242)
        (nil)))
(insn 402 401 403 60 (set (reg:DI 4 si)
        (reg:DI 244)) sim2fitman.cpp:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 244)
        (nil)))
(insn 403 402 404 60 (set (reg:DI 5 di)
        (reg:DI 245)) sim2fitman.cpp:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 245)
        (nil)))
(call_insn 404 403 1071 60 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b51c800 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:201 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1071 404 1072 60 (set (pc)
        (label_ref 432)) 636 {jump}
     (nil)
 -> 432)
;;  succ:       65 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1072 1071 407)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105
(code_label 407 1072 408 61 28 "" [1 uses])
(note 408 407 409 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 61 (set (reg:SI 105 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) sim2fitman.cpp:203 90 {*movsi_internal}
     (nil))
(insn 410 409 411 61 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 105 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:203 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 105 [ D.5824 ])
        (nil)))
(jump_insn 411 410 412 61 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) sim2fitman.cpp:203 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 421)
;;  succ:       63
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 106 107 108 246 247 248
(note 412 411 413 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 62 (set (reg:SI 106 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -2948 [0xfffffffffffff47c])) [0 preprocess[0].pre_quecc_points+0 S4 A32])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 414 413 415 62 (parallel [
            (set (reg:SI 246)
                (lshiftrt:SI (reg:SI 106 [ D.5824 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 529 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 415 414 416 62 (parallel [
            (set (reg:SI 247)
                (plus:SI (reg:SI 246)
                    (reg:SI 106 [ D.5824 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 106 [ D.5824 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 416 415 417 62 (parallel [
            (set (reg:SI 248)
                (ashiftrt:SI (reg:SI 247)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:204 530 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 417 416 418 62 (set (reg:SI 107 [ D.5824 ])
        (reg:SI 248)) sim2fitman.cpp:204 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 248)
        (nil)))
(insn 418 417 419 62 (set (reg:SI 108 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -2504 [0xfffffffffffff638])) [0 procpar_info[0].num_points+0 S4 A64])) sim2fitman.cpp:204 90 {*movsi_internal}
     (nil))
(insn 419 418 420 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 107 [ D.5824 ])
            (reg:SI 108 [ D.5824 ]))) sim2fitman.cpp:203 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.5824 ])
        (expr_list:REG_DEAD (reg:SI 107 [ D.5824 ])
            (nil))))
(jump_insn 420 419 421 62 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:203 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 432)
;;  succ:       63 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109
(code_label 421 420 422 63 32 "" [1 uses])
(note 422 421 423 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 63 (set (reg:SI 109 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -2952 [0xfffffffffffff478])) [0 preprocess[0].pre_quecc+0 S4 A64])) sim2fitman.cpp:205 90 {*movsi_internal}
     (nil))
(insn 424 423 425 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.5824 ])
            (const_int 1 [0x1]))) sim2fitman.cpp:204 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.5824 ])
        (nil)))
(jump_insn 425 424 426 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) sim2fitman.cpp:204 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 432)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 110 249
(note 426 425 427 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 64 (set (reg:SI 110 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -2504 [0xfffffffffffff638])) [0 procpar_info[0].num_points+0 S4 A64])) sim2fitman.cpp:207 90 {*movsi_internal}
     (nil))
(insn 428 427 429 64 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:207 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 429 428 430 64 (set (reg:SI 4 si)
        (reg:SI 110 [ D.5824 ])) sim2fitman.cpp:207 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ D.5824 ])
        (nil)))
(insn 430 429 431 64 (set (reg:DI 5 di)
        (reg:DI 249)) sim2fitman.cpp:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 249)
        (nil)))
(call_insn 431 430 432 64 (call (mem:QI (symbol_ref:DI ("_Z7exit_24PP8_IO_FILEi") [flags 0x41]  <function_decl 0x2ad76b520600 exit_24>) [0 exit_24 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:207 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 [100.0%] 
;;              62
;;              63
;;              64 (FALLTHRU)
;;              59
;;              58 [100.0%] 
;;              60 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 111 250 251 252
(code_label 432 431 433 65 30 "" [6 uses])
(note 433 432 434 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 65 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 435 434 436 65 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg:DI 250)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 250)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 436 435 437 65 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:221 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 437 436 438 65 (set (reg:DI 4 si)
        (reg:DI 251)) sim2fitman.cpp:221 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 251)
        (nil)))
(insn 438 437 439 65 (set (reg:DI 5 di)
        (reg:DI 252)) sim2fitman.cpp:221 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 252)
        (nil)))
(call_insn/i 439 438 440 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ad76b20c300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:221 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 440 439 441 65 (set (reg:SI 111 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:221 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 441 440 442 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:221 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.5824 ])
        (nil)))
(jump_insn 442 441 443 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:221 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 515)
;;  succ:       66 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 112 253 254
(note 443 442 444 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 66 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:222 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 445 444 446 66 (parallel [
            (set (reg:DI 254)
                (plus:DI (reg:DI 253)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:222 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 253)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 446 445 447 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2ad76b578390 *.LC3>)) sim2fitman.cpp:222 89 {*movdi_internal}
     (nil))
(insn 447 446 448 66 (set (reg:DI 5 di)
        (reg:DI 254)) sim2fitman.cpp:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 254)
        (nil)))
(call_insn/i 448 447 449 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ad76b20c300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:222 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 449 448 450 66 (set (reg:SI 112 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:222 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 450 449 451 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:221 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.5824 ])
        (nil)))
(jump_insn 451 450 452 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:221 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 515)
;;  succ:       67 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 113 114 255 256
(note 452 451 453 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 67 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:224 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 454 453 455 67 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg:DI 255)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:224 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 255)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 455 454 456 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ad76b5781c8 *.LC0>)) sim2fitman.cpp:224 89 {*movdi_internal}
     (nil))
(insn 456 455 457 67 (set (reg:DI 5 di)
        (reg:DI 256)) sim2fitman.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 256)
        (nil)))
(call_insn 457 456 458 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ad76b3d4d00 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:224 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 458 457 459 67 (set (reg/f:DI 113 [ D.5829 ])
        (reg:DI 0 ax)) sim2fitman.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 459 458 460 67 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (reg/f:DI 113 [ D.5829 ])) sim2fitman.cpp:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.5829 ])
        (nil)))
(insn 460 459 461 67 (set (reg/f:DI 114 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:225 89 {*movdi_internal}
     (nil))
(insn 461 460 462 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ D.5829 ])
            (const_int 0 [0]))) sim2fitman.cpp:225 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 114 [ D.5829 ])
        (nil)))
(jump_insn 462 461 463 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) sim2fitman.cpp:225 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 470)
;;  succ:       68 (FALLTHRU)
;;              69
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 257 258 259
(note 463 462 464 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 68 (parallel [
            (set (reg:DI 257)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 465 464 466 68 (parallel [
            (set (reg:DI 258)
                (plus:DI (reg:DI 257)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 257)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 466 465 467 68 (parallel [
            (set (reg:DI 259)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:226 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 467 466 468 68 (set (reg:DI 4 si)
        (reg:DI 258)) sim2fitman.cpp:226 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 258)
        (nil)))
(insn 468 467 469 68 (set (reg:DI 5 di)
        (reg:DI 259)) sim2fitman.cpp:226 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 259)
        (nil)))
(call_insn 469 468 470 68 (call (mem:QI (symbol_ref:DI ("_Z7exit_02PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c000 exit_02>) [0 exit_02 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:226 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;;              68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 115
(code_label 470 469 471 69 34 "" [1 uses])
(note 471 470 472 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 69 (set (reg:SI 115 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])) sim2fitman.cpp:228 90 {*movsi_internal}
     (nil))
(insn 473 472 474 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.5824 ])
            (const_int 1 [0x1]))) sim2fitman.cpp:228 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ D.5824 ])
        (nil)))
(jump_insn 474 473 475 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 479)
            (pc))) sim2fitman.cpp:228 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 479)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 475 474 476 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 1073 70 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman.cpp:230 93 {*movqi_internal}
     (nil))
(jump_insn 1073 476 1074 70 (set (pc)
        (label_ref 515)) 636 {jump}
     (nil)
 -> 515)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1074 1073 479)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116
(code_label 479 1074 480 71 35 "" [1 uses])
(note 480 479 481 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 71 (set (reg:SI 116 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])) sim2fitman.cpp:231 90 {*movsi_internal}
     (nil))
(insn 482 481 483 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116 [ D.5824 ])
            (const_int 2 [0x2]))) sim2fitman.cpp:231 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 116 [ D.5824 ])
        (nil)))
(jump_insn 483 482 484 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) sim2fitman.cpp:231 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 488)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 484 483 485 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 1075 72 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:233 93 {*movqi_internal}
     (nil))
(jump_insn 1075 485 1076 72 (set (pc)
        (label_ref 515)) 636 {jump}
     (nil)
 -> 515)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1076 1075 488)
;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 117 118 119 120 121 260 261 262 263 264
(code_label 488 1076 489 73 36 "" [1 uses])
(note 489 488 490 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 73 (set (reg:QI 117 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:237 93 {*movqi_internal}
     (nil))
(insn 491 490 492 73 (set (reg:SI 118 [ D.5824 ])
        (zero_extend:SI (reg:QI 117 [ D.5828 ]))) sim2fitman.cpp:237 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 117 [ D.5828 ])
        (nil)))
(insn 492 491 493 73 (set (reg/f:DI 119 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:237 89 {*movdi_internal}
     (nil))
(insn 493 492 494 73 (parallel [
            (set (reg:DI 260)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:237 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 494 493 495 73 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg:DI 260)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:237 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 260)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 495 494 496 73 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:237 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 496 495 497 73 (parallel [
            (set (reg:DI 263)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3360 [0xfffffffffffff2e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:237 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 497 496 498 73 (set (reg:SI 37 r8)
        (reg:SI 118 [ D.5824 ])) sim2fitman.cpp:237 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 118 [ D.5824 ])
        (nil)))
(insn 498 497 499 73 (set (reg:DI 2 cx)
        (reg:DI 261)) sim2fitman.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 261)
        (nil)))
(insn 499 498 500 73 (set (reg:DI 1 dx)
        (reg:DI 262)) sim2fitman.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 262)
        (nil)))
(insn 500 499 501 73 (set (reg:DI 4 si)
        (reg:DI 263)) sim2fitman.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 263)
        (nil)))
(insn 501 500 502 73 (set (reg:DI 5 di)
        (reg/f:DI 119 [ D.5829 ])) sim2fitman.cpp:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.5829 ])
        (nil)))
(call_insn 502 501 503 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb") [flags 0x41]  <function_decl 0x2ad76b518300 endianCheck_file>) [0 endianCheck_file S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:237 649 {*call_value}
     (expr_list:REG_DEAD (reg:SI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 503 502 504 73 (set (reg:SI 120 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:237 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 504 503 505 73 (parallel [
            (set (reg:SI 264)
                (lshiftrt:SI (reg:SI 120 [ D.5824 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:236 529 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.5824 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 505 504 506 73 (set (reg:QI 121 [ D.5828 ])
        (subreg:QI (reg:SI 264) 0)) sim2fitman.cpp:236 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 264)
        (nil)))
(insn 506 505 507 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:236 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 121 [ D.5828 ])
        (nil)))
(jump_insn 507 506 508 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) sim2fitman.cpp:236 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 515)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 265 266 267
(note 508 507 509 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 74 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 510 509 511 74 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg:DI 265)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 265)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 511 510 512 74 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:238 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 512 511 513 74 (set (reg:DI 4 si)
        (reg:DI 266)) sim2fitman.cpp:238 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 266)
        (nil)))
(insn 513 512 514 74 (set (reg:DI 5 di)
        (reg:DI 267)) sim2fitman.cpp:238 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 267)
        (nil)))
(call_insn 514 513 515 74 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c500 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:238 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;;              66
;;              70 [100.0%] 
;;              73
;;              74 (FALLTHRU)
;;              72 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122
(code_label 515 514 516 75 33 "" [5 uses])
(note 516 515 517 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 75 (set (reg:QI 122 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:244 93 {*movqi_internal}
     (nil))
(insn 518 517 519 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:244 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 122 [ D.5828 ])
        (nil)))
(jump_insn 519 518 520 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman.cpp:244 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 537)
;;  succ:       76 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 520 519 521 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:244 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 522 521 523 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 526)
            (pc))) sim2fitman.cpp:244 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 526)
;;  succ:       78
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 523 522 524 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:244 7 {*cmpsi_1}
     (nil))
(jump_insn 525 524 526 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) sim2fitman.cpp:244 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 537)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76
;;              77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 268 269 270
(code_label 526 525 527 78 38 "" [1 uses])
(note 527 526 528 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ad76b578428 *.LC4>)) sim2fitman.cpp:246 89 {*movdi_internal}
     (nil))
(call_insn 529 528 530 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:246 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 530 529 531 78 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 531 530 532 78 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 532 531 533 78 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:247 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 533 532 534 78 (set (reg:DI 1 dx)
        (reg:DI 268)) sim2fitman.cpp:247 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 268)
        (nil)))
(insn 534 533 535 78 (set (reg:DI 4 si)
        (reg:DI 269)) sim2fitman.cpp:247 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 269)
        (nil)))
(insn 535 534 536 78 (set (reg:DI 5 di)
        (reg:DI 270)) sim2fitman.cpp:247 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 270)
        (nil)))
(call_insn 536 535 537 78 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x2ad76b518b00 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:247 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              77
;;              78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 123
(code_label 537 536 538 79 37 "" [2 uses])
(note 538 537 539 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 79 (set (reg:SI 123 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:252 90 {*movsi_internal}
     (nil))
(insn 540 539 541 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.5824 ])
            (const_int 1 [0x1]))) sim2fitman.cpp:252 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 123 [ D.5824 ])
        (nil)))
(jump_insn 541 540 542 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) sim2fitman.cpp:252 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 699)
;;  succ:       80 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 124 271 272 273
(note 542 541 543 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 80 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 544 543 545 80 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg:DI 271)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 271)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 545 544 546 80 (parallel [
            (set (reg:DI 273)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:254 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 546 545 547 80 (set (reg:DI 4 si)
        (reg:DI 272)) sim2fitman.cpp:254 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 272)
        (nil)))
(insn 547 546 548 80 (set (reg:DI 5 di)
        (reg:DI 273)) sim2fitman.cpp:254 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 273)
        (nil)))
(call_insn/i 548 547 549 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ad76b20c300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:254 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 549 548 550 80 (set (reg:SI 124 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:254 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 550 549 551 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:254 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 124 [ D.5824 ])
        (nil)))
(jump_insn 551 550 552 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 615)
            (pc))) sim2fitman.cpp:254 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 615)
;;  succ:       81 (FALLTHRU)
;;              84
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 125 126 127 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292
(note 552 551 553 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 81 (set (reg:DI 274)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3120 [0xfffffffffffff3d0])) [0 main_header+0 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 554 553 555 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3056 [0xfffffffffffff410])) [0 main_header+64 S8 A64])
        (reg:DI 274)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 274)
        (nil)))
(insn 555 554 556 81 (set (reg:DI 275)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3112 [0xfffffffffffff3d8])) [0 main_header+8 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 556 555 557 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3048 [0xfffffffffffff418])) [0 main_header+72 S8 A64])
        (reg:DI 275)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 275)
        (nil)))
(insn 557 556 558 81 (set (reg:DI 276)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3104 [0xfffffffffffff3e0])) [0 main_header+16 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 558 557 559 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3040 [0xfffffffffffff420])) [0 main_header+80 S8 A64])
        (reg:DI 276)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 276)
        (nil)))
(insn 559 558 560 81 (set (reg:DI 277)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3096 [0xfffffffffffff3e8])) [0 main_header+24 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 560 559 561 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3032 [0xfffffffffffff428])) [0 main_header+88 S8 A64])
        (reg:DI 277)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 277)
        (nil)))
(insn 561 560 562 81 (set (reg:DI 278)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3088 [0xfffffffffffff3f0])) [0 main_header+32 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 562 561 563 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3024 [0xfffffffffffff430])) [0 main_header+96 S8 A64])
        (reg:DI 278)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 278)
        (nil)))
(insn 563 562 564 81 (set (reg:DI 279)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3080 [0xfffffffffffff3f8])) [0 main_header+40 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 564 563 565 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3016 [0xfffffffffffff438])) [0 main_header+104 S8 A64])
        (reg:DI 279)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 279)
        (nil)))
(insn 565 564 566 81 (set (reg:DI 280)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3072 [0xfffffffffffff400])) [0 main_header+48 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 566 565 567 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3008 [0xfffffffffffff440])) [0 main_header+112 S8 A64])
        (reg:DI 280)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 280)
        (nil)))
(insn 567 566 568 81 (set (reg:DI 281)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3064 [0xfffffffffffff408])) [0 main_header+56 S8 A64])) sim2fitman.cpp:262 89 {*movdi_internal}
     (nil))
(insn 568 567 569 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3000 [0xfffffffffffff448])) [0 main_header+120 S8 A64])
        (reg:DI 281)) sim2fitman.cpp:262 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 281)
        (nil)))
(insn 569 568 570 81 (set (reg:DI 282)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3248 [0xfffffffffffff350])) [0 block_header+0 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 570 569 571 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3216 [0xfffffffffffff370])) [0 block_header+32 S8 A64])
        (reg:DI 282)) sim2fitman.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 282)
        (nil)))
(insn 571 570 572 81 (set (reg:DI 283)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3240 [0xfffffffffffff358])) [0 block_header+8 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 572 571 573 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3208 [0xfffffffffffff378])) [0 block_header+40 S8 A64])
        (reg:DI 283)) sim2fitman.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 283)
        (nil)))
(insn 573 572 574 81 (set (reg:DI 284)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3232 [0xfffffffffffff360])) [0 block_header+16 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 574 573 575 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3200 [0xfffffffffffff380])) [0 block_header+48 S8 A64])
        (reg:DI 284)) sim2fitman.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 284)
        (nil)))
(insn 575 574 576 81 (set (reg:DI 285)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3224 [0xfffffffffffff368])) [0 block_header+24 S8 A64])) sim2fitman.cpp:263 89 {*movdi_internal}
     (nil))
(insn 576 575 577 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3192 [0xfffffffffffff388])) [0 block_header+56 S8 A64])
        (reg:DI 285)) sim2fitman.cpp:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 285)
        (nil)))
(insn 577 576 578 81 (parallel [
            (set (reg/f:DI 286)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2320 [0xfffffffffffff6f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:264 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 578 577 579 81 (parallel [
            (set (reg/f:DI 287)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:264 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 579 578 580 81 (set (reg:DI 288)
        (const_int 64 [0x40])) sim2fitman.cpp:264 89 {*movdi_internal}
     (nil))
(insn 580 579 581 81 (parallel [
            (set (reg:DI 288)
                (const_int 0 [0]))
            (set (reg/f:DI 286)
                (plus:DI (ashift:DI (reg:DI 288)
                        (const_int 3 [0x3]))
                    (reg/f:DI 286)))
            (set (reg/f:DI 287)
                (plus:DI (ashift:DI (reg:DI 288)
                        (const_int 3 [0x3]))
                    (reg/f:DI 287)))
            (set (mem/j/c:BLK (reg/f:DI 286) [0 procpar_info+512 S512 A64])
                (mem/j/c:BLK (reg/f:DI 287) [0 procpar_info+0 S512 A64]))
            (use (reg:DI 288))
        ]) sim2fitman.cpp:264 899 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 288)
        (expr_list:REG_UNUSED (reg/f:DI 287)
            (expr_list:REG_UNUSED (reg/f:DI 286)
                (nil)))))
(insn 581 580 582 81 (set (reg:DI 289)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3184 [0xfffffffffffff390])) [0 infile_struct+0 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 582 581 583 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3152 [0xfffffffffffff3b0])) [0 infile_struct+32 S8 A64])
        (reg:DI 289)) sim2fitman.cpp:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 289)
        (nil)))
(insn 583 582 584 81 (set (reg:DI 290)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3176 [0xfffffffffffff398])) [0 infile_struct+8 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 584 583 585 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3144 [0xfffffffffffff3b8])) [0 infile_struct+40 S8 A64])
        (reg:DI 290)) sim2fitman.cpp:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 290)
        (nil)))
(insn 585 584 586 81 (set (reg:DI 291)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3168 [0xfffffffffffff3a0])) [0 infile_struct+16 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 586 585 587 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3136 [0xfffffffffffff3c0])) [0 infile_struct+48 S8 A64])
        (reg:DI 291)) sim2fitman.cpp:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 291)
        (nil)))
(insn 587 586 588 81 (set (reg:DI 292)
        (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3160 [0xfffffffffffff3a8])) [0 infile_struct+24 S8 A64])) sim2fitman.cpp:265 89 {*movdi_internal}
     (nil))
(insn 588 587 589 81 (set (mem/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3128 [0xfffffffffffff3c8])) [0 infile_struct+56 S8 A64])
        (reg:DI 292)) sim2fitman.cpp:265 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 292)
        (nil)))
(insn 589 588 590 81 (set (reg:SI 125 [ D.5824 ])
        (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3344 [0xfffffffffffff2f0])) [0 forced_swap+0 S4 A64])) sim2fitman.cpp:266 90 {*movsi_internal}
     (nil))
(insn 590 589 591 81 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3340 [0xfffffffffffff2f4])) [0 forced_swap+4 S4 A32])
        (reg:SI 125 [ D.5824 ])) sim2fitman.cpp:266 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ D.5824 ])
        (nil)))
(insn 591 590 592 81 (set (reg/f:DI 126 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3264 [0xfffffffffffff340])) [0 in_file+0 S8 A64])) sim2fitman.cpp:267 89 {*movdi_internal}
     (nil))
(insn 592 591 593 81 (set (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])
        (reg/f:DI 126 [ D.5829 ])) sim2fitman.cpp:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.5829 ])
        (nil)))
(insn 593 592 594 81 (set (reg:QI 127 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:269 93 {*movqi_internal}
     (nil))
(insn 594 593 595 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:269 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 127 [ D.5828 ])
        (nil)))
(jump_insn 595 594 596 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) sim2fitman.cpp:269 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 699)
;;  succ:       82 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 596 595 597 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:269 7 {*cmpsi_1}
     (nil))
(jump_insn 598 597 599 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 699)
            (pc))) sim2fitman.cpp:269 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 699)
;;  succ:       83 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 293 294 295 296 297 298
(note 599 598 600 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 83 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3148 [0xfffffffffffff3b4])) [0 infile_struct[1].num_unsup_sets+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:271 90 {*movsi_internal}
     (nil))
(insn 601 600 602 83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2ad76b5784c0 *.LC5>)) sim2fitman.cpp:272 89 {*movdi_internal}
     (nil))
(call_insn 602 601 603 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:272 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 603 602 604 83 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 604 603 605 83 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg:DI 293)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 293)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 605 604 606 83 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 606 605 607 83 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 295)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 295)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 607 606 608 83 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 608 607 609 83 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg:DI 297)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:273 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 297)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 609 608 610 83 (set (reg:DI 1 dx)
        (reg:DI 294)) sim2fitman.cpp:273 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 294)
        (nil)))
(insn 610 609 611 83 (set (reg:DI 4 si)
        (reg:DI 296)) sim2fitman.cpp:273 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 296)
        (nil)))
(insn 611 610 612 83 (set (reg:DI 5 di)
        (reg:DI 298)) sim2fitman.cpp:273 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (nil)))
(call_insn 612 611 1077 83 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x2ad76b518b00 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:273 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1077 612 1078 83 (set (pc)
        (label_ref 699)) 636 {jump}
     (nil)
 -> 699)
;;  succ:       92 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1078 1077 615)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 128 129 299 300 301 302 303 304 305 306 307
(code_label 615 1078 616 84 40 "" [1 uses])
(note 616 615 617 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 617 616 618 84 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ad76b578558 *.LC6>)) sim2fitman.cpp:278 89 {*movdi_internal}
     (nil))
(call_insn 618 617 619 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:278 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 619 618 620 84 (set (reg/f:DI 128 [ D.5829 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3256 [0xfffffffffffff348])) [0 in_file+8 S8 A64])) sim2fitman.cpp:282 89 {*movdi_internal}
     (nil))
(insn 620 619 621 84 (parallel [
            (set (reg:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 621 620 622 84 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg:DI 299)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 299)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 622 621 623 84 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 623 622 624 84 (parallel [
            (set (reg:DI 302)
                (plus:DI (reg:DI 301)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 301)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 624 623 625 84 (parallel [
            (set (reg:DI 303)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3391 [0xfffffffffffff2c1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 625 624 626 84 (parallel [
            (set (reg:DI 304)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 626 625 627 84 (parallel [
            (set (reg:DI 305)
                (plus:DI (reg:DI 304)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 304)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 627 626 628 84 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 628 627 629 84 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 306)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:282 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 306)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 629 628 630 84 (set (reg:DI 38 r9)
        (reg:DI 300)) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 300)
        (nil)))
(insn 630 629 631 84 (set (reg:DI 37 r8)
        (reg:DI 302)) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 302)
        (nil)))
(insn 631 630 632 84 (set (reg:DI 2 cx)
        (reg:DI 303)) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 303)
        (nil)))
(insn 632 631 633 84 (set (reg:DI 1 dx)
        (reg/f:DI 128 [ D.5829 ])) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.5829 ])
        (nil)))
(insn 633 632 634 84 (set (reg:DI 4 si)
        (reg:DI 305)) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 305)
        (nil)))
(insn 634 633 635 84 (set (reg:DI 5 di)
        (reg:DI 307)) sim2fitman.cpp:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (nil)))
(call_insn 635 634 636 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x2ad76b4f1300 read_procpar>) [0 read_procpar S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:282 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 636 635 637 84 (set (reg:SI 129 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:282 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 637 636 638 84 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
        (reg:SI 129 [ D.5824 ])) sim2fitman.cpp:282 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129 [ D.5824 ])
        (nil)))
(insn 638 637 639 84 (set (mem/j/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3148 [0xfffffffffffff3b4])) [0 infile_struct[1].num_unsup_sets+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman.cpp:285 90 {*movsi_internal}
     (nil))
(insn 639 638 640 84 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:287 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 640 639 641 84 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) sim2fitman.cpp:287 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 683)
;;  succ:       85 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 641 640 642 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) sim2fitman.cpp:288 7 {*cmpsi_1}
     (nil))
(jump_insn 643 642 644 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 653)
            (pc))) sim2fitman.cpp:288 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 653)
;;  succ:       86 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 308 309 310
(note 644 643 645 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 86 (parallel [
            (set (reg:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 646 645 647 86 (parallel [
            (set (reg:DI 309)
                (plus:DI (reg:DI 308)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 308)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 647 646 648 86 (parallel [
            (set (reg:DI 310)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:289 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 648 647 649 86 (set (reg:DI 4 si)
        (reg:DI 309)) sim2fitman.cpp:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 309)
        (nil)))
(insn 649 648 650 86 (set (reg:DI 5 di)
        (reg:DI 310)) sim2fitman.cpp:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 310)
        (nil)))
(call_insn 650 649 1079 86 (call (mem:QI (symbol_ref:DI ("_Z7exit_07PP8_IO_FILEPc") [flags 0x41]  <function_decl 0x2ad76b51c500 exit_07>) [0 exit_07 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:289 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 1079 650 1080 86 (set (pc)
        (label_ref 683)) 636 {jump}
     (nil)
 -> 683)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1080 1079 653)
;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 653 1080 654 87 43 "" [1 uses])
(note 654 653 655 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 655 654 656 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -2 [0xfffffffffffffffe]))) sim2fitman.cpp:290 7 {*cmpsi_1}
     (nil))
(jump_insn 656 655 657 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 669)
            (pc))) sim2fitman.cpp:290 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 669)
;;  succ:       88 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 311 312 313 314 315
(note 657 656 658 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 88 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 659 658 660 88 (parallel [
            (set (reg:DI 312)
                (plus:DI (reg:DI 311)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 660 659 661 88 (parallel [
            (set (reg:DI 313)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 661 660 662 88 (parallel [
            (set (reg:DI 314)
                (plus:DI (reg:DI 313)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 313)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 662 661 663 88 (parallel [
            (set (reg:DI 315)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:291 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 663 662 664 88 (set (reg:DI 1 dx)
        (reg:DI 312)) sim2fitman.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(insn 664 663 665 88 (set (reg:DI 4 si)
        (reg:DI 314)) sim2fitman.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 314)
        (nil)))
(insn 665 664 666 88 (set (reg:DI 5 di)
        (reg:DI 315)) sim2fitman.cpp:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 315)
        (nil)))
(call_insn 666 665 1081 88 (call (mem:QI (symbol_ref:DI ("_Z7exit_09PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b51c700 exit_09>) [0 exit_09 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:291 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1081 666 1082 88 (set (pc)
        (label_ref 683)) 636 {jump}
     (nil)
 -> 683)
;;  succ:       91 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1082 1081 669)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       87
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 669 1082 670 89 44 "" [1 uses])
(note 670 669 671 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 671 670 672 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3364 [0xfffffffffffff2dc])) [0 exit_code+0 S4 A32])
            (const_int -3 [0xfffffffffffffffd]))) sim2fitman.cpp:292 7 {*cmpsi_1}
     (nil))
(jump_insn 672 671 673 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) sim2fitman.cpp:292 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 683)
;;  succ:       90 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 316 317 318 319 320
(note 673 672 674 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 90 (parallel [
            (set (reg:DI 316)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 675 674 676 90 (parallel [
            (set (reg:DI 317)
                (plus:DI (reg:DI 316)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 316)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 676 675 677 90 (parallel [
            (set (reg:DI 318)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 677 676 678 90 (parallel [
            (set (reg:DI 319)
                (plus:DI (reg:DI 318)
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 318)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 678 677 679 90 (parallel [
            (set (reg:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:293 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 679 678 680 90 (set (reg:DI 1 dx)
        (reg:DI 317)) sim2fitman.cpp:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 317)
        (nil)))
(insn 680 679 681 90 (set (reg:DI 4 si)
        (reg:DI 319)) sim2fitman.cpp:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319)
        (nil)))
(insn 681 680 682 90 (set (reg:DI 5 di)
        (reg:DI 320)) sim2fitman.cpp:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 320)
        (nil)))
(call_insn 682 681 683 90 (call (mem:QI (symbol_ref:DI ("_Z7exit_10PP8_IO_FILEPcP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b51c800 exit_10>) [0 exit_10 S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:293 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84
;;              86 [100.0%] 
;;              89
;;              90 (FALLTHRU)
;;              88 [100.0%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 321 322 323 324 325 326
(code_label 683 682 684 91 42 "" [4 uses])
(note 684 683 685 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 91 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2ad76b5784c0 *.LC5>)) sim2fitman.cpp:298 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:298 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 687 686 688 91 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 688 687 689 91 (parallel [
            (set (reg:DI 322)
                (plus:DI (reg:DI 321)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 321)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 689 688 690 91 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 690 689 691 91 (parallel [
            (set (reg:DI 324)
                (plus:DI (reg:DI 323)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 323)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 691 690 692 91 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 692 691 693 91 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg:DI 325)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:299 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 325)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 693 692 694 91 (set (reg:DI 1 dx)
        (reg:DI 322)) sim2fitman.cpp:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(insn 694 693 695 91 (set (reg:DI 4 si)
        (reg:DI 324)) sim2fitman.cpp:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 324)
        (nil)))
(insn 695 694 696 91 (set (reg:DI 5 di)
        (reg:DI 326)) sim2fitman.cpp:299 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(call_insn 696 695 699 91 (call (mem:QI (symbol_ref:DI ("_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header") [flags 0x41]  <function_decl 0x2ad76b518b00 infile_stats>) [0 infile_stats S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:299 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              91 (FALLTHRU)
;;              81
;;              82
;;              83 [100.0%] 
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130
(code_label 699 696 700 92 39 "" [4 uses])
(note 700 699 701 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 92 (set (reg:QI 130 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:305 93 {*movqi_internal}
     (nil))
(insn 702 701 703 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:305 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 130 [ D.5828 ])
        (nil)))
(jump_insn 703 702 704 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 707)
            (pc))) sim2fitman.cpp:305 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 707)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 704 703 705 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 93 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ad76b5785f0 *.LC7>)) sim2fitman.cpp:306 89 {*movdi_internal}
     (nil))
(call_insn 706 705 707 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:306 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92
;;              93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 131 327 328 329
(code_label 707 706 708 94 45 "" [1 uses])
(note 708 707 709 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 94 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:309 90 {*movsi_internal}
     (nil))
(insn 710 709 711 94 (parallel [
            (set (reg:DI 327)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 711 710 712 94 (parallel [
            (set (reg:DI 328)
                (plus:DI (reg:DI 327)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 327)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 712 711 713 94 (parallel [
            (set (reg:DI 329)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:320 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 713 712 714 94 (set (reg:DI 4 si)
        (reg:DI 328)) sim2fitman.cpp:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 328)
        (nil)))
(insn 714 713 715 94 (set (reg:DI 5 di)
        (reg:DI 329)) sim2fitman.cpp:320 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 329)
        (nil)))
(call_insn/i 715 714 716 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ad76b20c300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:320 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 716 715 717 94 (set (reg:SI 131 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:320 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 717 716 718 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:320 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 131 [ D.5824 ])
        (nil)))
(jump_insn 718 717 719 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) sim2fitman.cpp:320 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 734)
;;  succ:       95 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 132 330 331
(note 719 718 720 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 720 719 721 95 (parallel [
            (set (reg:DI 330)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:321 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 721 720 722 95 (parallel [
            (set (reg:DI 331)
                (plus:DI (reg:DI 330)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:321 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 330)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 722 721 723 95 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2ad76b578390 *.LC3>)) sim2fitman.cpp:321 89 {*movdi_internal}
     (nil))
(insn 723 722 724 95 (set (reg:DI 5 di)
        (reg:DI 331)) sim2fitman.cpp:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 331)
        (nil)))
(call_insn/i 724 723 725 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ad76b20c300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:321 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 725 724 726 95 (set (reg:SI 132 [ D.5824 ])
        (reg:SI 0 ax)) sim2fitman.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 726 725 727 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.5824 ])
            (const_int 0 [0]))) sim2fitman.cpp:320 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 132 [ D.5824 ])
        (nil)))
(jump_insn 727 726 728 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) sim2fitman.cpp:320 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 734)
;;  succ:       96 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133 134
(note 728 727 729 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 96 (set (reg:SI 133 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:322 90 {*movsi_internal}
     (nil))
(insn 730 729 731 96 (parallel [
            (set (reg:SI 134 [ D.5824 ])
                (plus:SI (reg:SI 133 [ D.5824 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:322 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 133 [ D.5824 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 731 730 1083 96 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 134 [ D.5824 ])) sim2fitman.cpp:322 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ D.5824 ])
        (nil)))
(jump_insn 1083 731 1084 96 (set (pc)
        (label_ref 748)) sim2fitman.cpp:322 636 {jump}
     (nil)
 -> 748)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1084 1083 734)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;;              95
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 734 1084 735 97 46 "" [2 uses])
(note 735 734 736 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:325 7 {*cmpsi_1}
     (nil))
(jump_insn 737 736 738 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 744)
            (pc))) sim2fitman.cpp:325 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 744)
;;  succ:       98 (FALLTHRU)
;;              99
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135 136
(note 738 737 739 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 98 (set (reg:SI 135 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:326 90 {*movsi_internal}
     (nil))
(insn 740 739 741 98 (parallel [
            (set (reg:SI 136 [ D.5824 ])
                (plus:SI (reg:SI 135 [ D.5824 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:326 220 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135 [ D.5824 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 741 740 1085 98 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 136 [ D.5824 ])) sim2fitman.cpp:326 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 136 [ D.5824 ])
        (nil)))
(jump_insn 1085 741 1086 98 (set (pc)
        (label_ref 748)) 636 {jump}
     (nil)
 -> 748)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1086 1085 744)
;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 137
(code_label 744 1086 745 99 48 "" [1 uses])
(note 745 744 746 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 99 (set (reg:SI 137 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:330 90 {*movsi_internal}
     (nil))
(insn 747 746 748 99 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])
        (reg:SI 137 [ D.5824 ])) sim2fitman.cpp:330 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137 [ D.5824 ])
        (nil)))
;;  succ:       100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;;              96 [100.0%] 
;;              98 [100.0%] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 138 139 332 333 334 335 336 337 338 339 340 341 342
(code_label 748 747 749 100 47 "" [2 uses])
(note 749 748 750 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 750 749 751 100 (set (reg:QI 138 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3391 [0xfffffffffffff2c1])) [0 swap_bytes+0 S1 A8])) sim2fitman.cpp:341 93 {*movqi_internal}
     (nil))
(insn 751 750 752 100 (set (reg:SI 139 [ D.5824 ])
        (zero_extend:SI (reg:QI 138 [ D.5828 ]))) sim2fitman.cpp:341 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 138 [ D.5828 ])
        (nil)))
(insn 752 751 753 100 (parallel [
            (set (reg:DI 332)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3312 [0xfffffffffffff310])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 753 752 754 100 (parallel [
            (set (reg:DI 333)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 754 753 755 100 (parallel [
            (set (reg:DI 334)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 755 754 756 100 (parallel [
            (set (reg:DI 335)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 756 755 757 100 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 757 756 758 100 (parallel [
            (set (reg:DI 337)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3380 [0xfffffffffffff2cc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 758 757 759 100 (parallel [
            (set (reg:DI 338)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3184 [0xfffffffffffff390])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 759 758 760 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 338)) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 338)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 760 759 761 100 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [0  S4 A32])
        (reg:SI 139 [ D.5824 ])) sim2fitman.cpp:341 69 {*pushsi2_rex64}
     (expr_list:REG_DEAD (reg:SI 139 [ D.5824 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 761 760 762 100 (parallel [
            (set (reg:DI 339)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 762 761 763 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 339)) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 339)
        (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
            (nil))))
(insn 763 762 764 100 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3296 [0xfffffffffffff320])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 764 763 765 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 340)) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 340)
        (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
            (nil))))
(insn 765 764 766 100 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3328 [0xfffffffffffff300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 766 765 767 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 341)) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 341)
        (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
            (nil))))
(insn 767 766 768 100 (parallel [
            (set (reg:DI 342)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3264 [0xfffffffffffff340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 768 767 769 100 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 342)) sim2fitman.cpp:341 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 342)
        (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
            (nil))))
(insn 769 768 770 100 (set (reg:DI 38 r9)
        (reg:DI 332)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332)
        (nil)))
(insn 770 769 771 100 (set (reg:DI 37 r8)
        (reg:DI 333)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 333)
        (nil)))
(insn 771 770 772 100 (set (reg:DI 2 cx)
        (reg:DI 334)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 334)
        (nil)))
(insn 772 771 773 100 (set (reg:DI 1 dx)
        (reg:DI 335)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 335)
        (nil)))
(insn 773 772 774 100 (set (reg:DI 4 si)
        (reg:DI 336)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 336)
        (nil)))
(insn 774 773 775 100 (set (reg:DI 5 di)
        (reg:DI 337)) sim2fitman.cpp:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 337)
        (nil)))
(call_insn 775 774 776 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9read_dataPiP10PreprocessP7IOFilesP16Data_file_headerP17Data_block_headerP10Precision2PP8_IO_FILEP10Precision1PPfSG_iP13InFile_struct") [flags 0x41]  <function_decl 0x2ad76b4f1500 read_data>) [0 read_data S1 A8])
            (const_int 48 [0x30]))) sim2fitman.cpp:341 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_UNUSED (reg:SI 0 ax)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 776 775 777 100 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:341 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 777 776 1087 100 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:353 90 {*movsi_internal}
     (nil))
(jump_insn 1087 777 1088 100 (set (pc)
        (label_ref 834)) sim2fitman.cpp:353 636 {jump}
     (nil)
 -> 834)
;;  succ:       105 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1088 1087 837)
;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 837 1088 780 101 52 "" [1 uses])
(note 780 837 781 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 1089 101 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
(jump_insn 1089 781 1090 101 (set (pc)
        (label_ref 818)) sim2fitman.cpp:359 636 {jump}
     (nil)
 -> 818)
;;  succ:       103 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1090 1089 829)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 343 344 345 346 347 348 349 350 351 352 353 354
(code_label 829 1090 784 102 51 "" [1 uses])
(note 784 829 785 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 102 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 786 785 787 102 (set (reg:DI 343)
        (sign_extend:DI (reg:SI 344))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 344)
        (nil)))
(insn 787 786 788 102 (set (reg/f:DI 144 [ D.5831 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 343)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3296 [0xfffffffffffff320])) [0 out_data S8 A64])) sim2fitman.cpp:361 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 343)
        (nil)))
(insn 788 787 789 102 (set (reg:SI 345)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 789 788 790 102 (set (reg:DI 145 [ D.5825 ])
        (sign_extend:DI (reg:SI 345))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 345)
        (nil)))
(insn 790 789 791 102 (parallel [
            (set (reg:DI 146 [ D.5825 ])
                (ashift:DI (reg:DI 145 [ D.5825 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 145 [ D.5825 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 791 790 792 102 (parallel [
            (set (reg/f:DI 147 [ D.5831 ])
                (plus:DI (reg/f:DI 144 [ D.5831 ])
                    (reg:DI 146 [ D.5825 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5825 ])
        (expr_list:REG_DEAD (reg/f:DI 144 [ D.5831 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 792 791 793 102 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 793 792 794 102 (set (reg:DI 346)
        (sign_extend:DI (reg:SI 347))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 347)
        (nil)))
(insn 794 793 795 102 (set (reg/f:DI 148 [ D.5831 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 346)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[i_1].fl+0 S8 A64])) sim2fitman.cpp:361 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 346)
        (nil)))
(insn 795 794 796 102 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:361 90 {*movsi_internal}
     (nil))
(insn 796 795 797 102 (set (reg:DI 149 [ D.5825 ])
        (sign_extend:DI (reg:SI 348))) sim2fitman.cpp:361 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 348)
        (nil)))
(insn 797 796 798 102 (parallel [
            (set (reg:DI 150 [ D.5825 ])
                (ashift:DI (reg:DI 149 [ D.5825 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.5825 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 798 797 799 102 (parallel [
            (set (reg/f:DI 151 [ D.5831 ])
                (plus:DI (reg/f:DI 148 [ D.5831 ])
                    (reg:DI 150 [ D.5825 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:361 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.5825 ])
        (expr_list:REG_DEAD (reg/f:DI 148 [ D.5831 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 799 798 800 102 (set (reg:SF 152 [ D.5832 ])
        (mem:SF (reg/f:DI 151 [ D.5831 ]) [0 *_89+0 S4 A32])) sim2fitman.cpp:361 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.5831 ])
        (nil)))
(insn 800 799 801 102 (set (mem:SF (reg/f:DI 147 [ D.5831 ]) [0 *_85+0 S4 A32])
        (reg:SF 152 [ D.5832 ])) sim2fitman.cpp:361 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 152 [ D.5832 ])
        (expr_list:REG_DEAD (reg/f:DI 147 [ D.5831 ])
            (nil))))
(insn 801 800 802 102 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 802 801 803 102 (set (reg:DI 349)
        (sign_extend:DI (reg:SI 350))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 350)
        (nil)))
(insn 803 802 804 102 (set (reg/f:DI 153 [ D.5831 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 349)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3280 [0xfffffffffffff330])) [0 scratch_data S8 A64])) sim2fitman.cpp:368 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 349)
        (nil)))
(insn 804 803 805 102 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 805 804 806 102 (set (reg:DI 154 [ D.5825 ])
        (sign_extend:DI (reg:SI 351))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 351)
        (nil)))
(insn 806 805 807 102 (parallel [
            (set (reg:DI 155 [ D.5825 ])
                (ashift:DI (reg:DI 154 [ D.5825 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.5825 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 807 806 808 102 (parallel [
            (set (reg/f:DI 156 [ D.5831 ])
                (plus:DI (reg/f:DI 153 [ D.5831 ])
                    (reg:DI 155 [ D.5825 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.5825 ])
        (expr_list:REG_DEAD (reg/f:DI 153 [ D.5831 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 808 807 809 102 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 809 808 810 102 (set (reg:DI 352)
        (sign_extend:DI (reg:SI 353))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 353)
        (nil)))
(insn 810 809 811 102 (set (reg/f:DI 157 [ D.5831 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 352)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[i_1].fl+0 S8 A64])) sim2fitman.cpp:368 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 352)
        (nil)))
(insn 811 810 812 102 (set (reg:SI 354)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:368 90 {*movsi_internal}
     (nil))
(insn 812 811 813 102 (set (reg:DI 158 [ D.5825 ])
        (sign_extend:DI (reg:SI 354))) sim2fitman.cpp:368 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 354)
        (nil)))
(insn 813 812 814 102 (parallel [
            (set (reg:DI 159 [ D.5825 ])
                (ashift:DI (reg:DI 158 [ D.5825 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.5825 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 814 813 815 102 (parallel [
            (set (reg/f:DI 160 [ D.5831 ])
                (plus:DI (reg/f:DI 157 [ D.5831 ])
                    (reg:DI 159 [ D.5825 ])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:368 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 159 [ D.5825 ])
        (expr_list:REG_DEAD (reg/f:DI 157 [ D.5831 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 815 814 816 102 (set (reg:SF 161 [ D.5832 ])
        (mem:SF (reg/f:DI 160 [ D.5831 ]) [0 *_98+0 S4 A32])) sim2fitman.cpp:368 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.5831 ])
        (nil)))
(insn 816 815 817 102 (set (mem:SF (reg/f:DI 156 [ D.5831 ]) [0 *_94+0 S4 A32])
        (reg:SF 161 [ D.5832 ])) sim2fitman.cpp:368 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 161 [ D.5832 ])
        (expr_list:REG_DEAD (reg/f:DI 156 [ D.5831 ])
            (nil))))
(insn 817 816 818 102 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       103 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU,DFS_BACK)
;;              101 [100.0%] 
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 142 143 355 356 357 358 359 360
(code_label 818 817 819 103 50 "" [1 uses])
(note 819 818 820 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 820 819 821 103 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3372 [0xfffffffffffff2d4])) [0 j+0 S4 A32])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
(insn 821 820 822 103 (set (reg:DI 141 [ D.5830 ])
        (sign_extend:DI (reg:SI 355))) sim2fitman.cpp:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 355)
        (nil)))
(insn 822 821 823 103 (set (reg:SI 357)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:359 90 {*movsi_internal}
     (nil))
(insn 823 822 824 103 (set (reg:DI 356)
        (sign_extend:DI (reg:SI 357))) sim2fitman.cpp:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 357)
        (nil)))
(insn 824 823 825 103 (parallel [
            (set (reg:DI 358)
                (ashift:DI (reg:DI 356)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 356)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 825 824 826 103 (parallel [
            (set (reg:DI 359)
                (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 358)))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 358)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 826 825 827 103 (parallel [
            (set (reg/f:DI 360)
                (plus:DI (reg:DI 359)
                    (const_int -3104 [0xfffffffffffff3e0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 359)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 827 826 828 103 (set (reg:DI 142 [ D.5830 ])
        (mem/j:DI (reg/f:DI 360) [0 main_header[i_1].np.number+0 S8 A64])) sim2fitman.cpp:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (nil)))
(insn 828 827 830 103 (parallel [
            (set (reg:DI 143 [ D.5830 ])
                (ashift:DI (reg:DI 142 [ D.5830 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:359 497 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.5830 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 830 828 831 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 141 [ D.5830 ])
            (reg:DI 143 [ D.5830 ]))) sim2fitman.cpp:359 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.5830 ])
        (expr_list:REG_DEAD (reg:DI 141 [ D.5830 ])
            (nil))))
(jump_insn 831 830 832 103 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) sim2fitman.cpp:359 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 829)
;;  succ:       102
;;              104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 832 831 833 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 104 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:353 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       105 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       104 (FALLTHRU,DFS_BACK)
;;              100 [100.0%] 
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 140
(code_label 834 833 835 105 49 "" [1 uses])
(note 835 834 836 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 836 835 838 105 (set (reg:SI 140 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3380 [0xfffffffffffff2cc])) [0 fidlimit+0 S4 A32])) sim2fitman.cpp:353 90 {*movsi_internal}
     (nil))
(insn 838 836 839 105 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
            (reg:SI 140 [ D.5824 ]))) sim2fitman.cpp:353 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 140 [ D.5824 ])
        (nil)))
(jump_insn 839 838 840 105 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 837)
            (pc))) sim2fitman.cpp:353 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 837)
;;  succ:       101
;;              106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162
(note 840 839 841 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 106 (set (reg:QI 162 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:385 93 {*movqi_internal}
     (nil))
(insn 842 841 843 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:385 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 162 [ D.5828 ])
        (nil)))
(jump_insn 843 842 844 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 847)
            (pc))) sim2fitman.cpp:385 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 847)
;;  succ:       107 (FALLTHRU)
;;              108
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 844 843 845 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 107 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ad76b578720 *.LC8>)) sim2fitman.cpp:386 89 {*movdi_internal}
     (nil))
(call_insn 846 845 847 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:386 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106
;;              107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 163 361 362 363 364 365
(code_label 847 846 848 108 53 "" [1 uses])
(note 848 847 849 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 849 848 850 108 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3280 [0xfffffffffffff330])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 850 849 851 108 (parallel [
            (set (reg:DI 362)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3296 [0xfffffffffffff320])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 851 850 852 108 (parallel [
            (set (reg:DI 363)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 852 851 853 108 (parallel [
            (set (reg:DI 364)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 853 852 854 108 (parallel [
            (set (reg:DI 365)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3380 [0xfffffffffffff2cc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:389 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 854 853 855 108 (set (reg:DI 37 r8)
        (reg:DI 361)) sim2fitman.cpp:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 361)
        (nil)))
(insn 855 854 856 108 (set (reg:DI 2 cx)
        (reg:DI 362)) sim2fitman.cpp:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 362)
        (nil)))
(insn 856 855 857 108 (set (reg:DI 1 dx)
        (reg:DI 363)) sim2fitman.cpp:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 363)
        (nil)))
(insn 857 856 858 108 (set (reg:DI 4 si)
        (reg:DI 364)) sim2fitman.cpp:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 364)
        (nil)))
(insn 858 857 859 108 (set (reg:DI 5 di)
        (reg:DI 365)) sim2fitman.cpp:389 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 365)
        (nil)))
(call_insn 859 858 860 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_") [flags 0x41]  <function_decl 0x2ad76b4f1700 pre_process>) [0 pre_process S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:389 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 860 859 861 108 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2ad76b5787b8 *.LC9>)) sim2fitman.cpp:391 89 {*movdi_internal}
     (nil))
(call_insn 861 860 862 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:391 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 862 861 863 108 (set (reg:QI 163 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:400 93 {*movqi_internal}
     (nil))
(insn 863 862 864 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:400 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 163 [ D.5828 ])
        (nil)))
(jump_insn 864 863 865 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 868)
            (pc))) sim2fitman.cpp:400 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 868)
;;  succ:       109 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 865 864 866 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 866 865 867 109 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2ad76b578850 *.LC10>)) sim2fitman.cpp:401 89 {*movdi_internal}
     (nil))
(call_insn 867 866 868 109 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:401 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108
;;              109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 164
(code_label 868 867 869 110 54 "" [1 uses])
(note 869 868 870 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 870 869 871 110 (set (reg:QI 164 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:405 93 {*movqi_internal}
     (nil))
(insn 871 870 872 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 164 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:405 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 164 [ D.5828 ])
        (nil)))
(jump_insn 872 871 873 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 876)
            (pc))) sim2fitman.cpp:405 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 876)
;;  succ:       111 (FALLTHRU)
;;              112
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 873 872 874 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 875 111 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2ad76b5788e8 *.LC11>)) sim2fitman.cpp:406 89 {*movdi_internal}
     (nil))
(call_insn 875 874 876 111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:406 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;;              111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 876 875 877 112 55 "" [1 uses])
(note 877 876 878 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:408 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 879 878 880 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 883)
            (pc))) sim2fitman.cpp:408 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 883)
;;  succ:       114
;;              113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 880 879 881 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 881 880 882 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:408 7 {*cmpsi_1}
     (nil))
(jump_insn 882 881 883 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) sim2fitman.cpp:408 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 912)
;;  succ:       114 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112
;;              113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 165 166 366 367 368 369 370 371
(code_label 883 882 884 114 56 "" [1 uses])
(note 884 883 885 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 114 (set (reg/f:DI 165 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3296 [0xfffffffffffff320])) [0 out_data+0 S8 A64])) sim2fitman.cpp:411 89 {*movdi_internal}
     (nil))
(insn 886 885 887 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 887 886 888 114 (parallel [
            (set (reg:DI 366)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 888 887 889 114 (parallel [
            (set (reg:DI 367)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 889 888 890 114 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 890 889 891 114 (parallel [
            (set (reg:DI 369)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 891 890 892 114 (parallel [
            (set (reg:DI 370)
                (plus:DI (reg:DI 369)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 369)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 892 891 893 114 (parallel [
            (set (reg:DI 371)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 893 892 894 114 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 371)) sim2fitman.cpp:411 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 371)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 894 893 895 114 (set (reg:DI 38 r9)
        (reg:DI 366)) sim2fitman.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 366)
        (nil)))
(insn 895 894 896 114 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) sim2fitman.cpp:411 90 {*movsi_internal}
     (nil))
(insn 896 895 897 114 (set (reg:DI 2 cx)
        (reg:DI 367)) sim2fitman.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 367)
        (nil)))
(insn 897 896 898 114 (set (reg:DI 1 dx)
        (reg:DI 368)) sim2fitman.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 368)
        (nil)))
(insn 898 897 899 114 (set (reg:DI 4 si)
        (reg/f:DI 165 [ D.5831 ])) sim2fitman.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165 [ D.5831 ])
        (nil)))
(insn 899 898 900 114 (set (reg:DI 5 di)
        (reg:DI 370)) sim2fitman.cpp:411 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 370)
        (nil)))
(call_insn 900 899 901 114 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x2ad76b4f1600 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) sim2fitman.cpp:411 642 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 901 900 902 114 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:411 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 902 901 903 114 (set (reg:QI 166 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:412 93 {*movqi_internal}
     (nil))
(insn 903 902 904 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:412 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 166 [ D.5828 ])
        (nil)))
(jump_insn 904 903 905 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 912)
            (pc))) sim2fitman.cpp:412 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 912)
;;  succ:       115 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 372 373
(note 905 904 906 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 906 905 907 115 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:413 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 907 906 908 115 (parallel [
            (set (reg:DI 373)
                (plus:DI (reg:DI 372)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:413 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 372)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 908 907 909 115 (set (reg:DI 4 si)
        (reg:DI 373)) sim2fitman.cpp:413 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 373)
        (nil)))
(insn 909 908 910 115 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2ad76b578980 *.LC12>)) sim2fitman.cpp:413 89 {*movdi_internal}
     (nil))
(insn 910 909 911 115 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman.cpp:413 93 {*movqi_internal}
     (nil))
(call_insn 911 910 912 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2ad76b216e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:413 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113
;;              114
;;              115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 912 911 913 116 57 "" [2 uses])
(note 913 912 914 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman.cpp:416 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 915 914 916 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 919)
            (pc))) sim2fitman.cpp:416 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 919)
;;  succ:       118
;;              117 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 916 915 917 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 917 916 918 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3368 [0xfffffffffffff2d8])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman.cpp:416 7 {*cmpsi_1}
     (nil))
(jump_insn 918 917 919 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) sim2fitman.cpp:416 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 952)
;;  succ:       118 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116
;;              117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 167 168 374 375 376 377 378 379 380 381 382 383
(code_label 919 918 920 118 58 "" [1 uses])
(note 920 919 921 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 921 920 922 118 (set (reg/f:DI 167 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3288 [0xfffffffffffff328])) [0 out_data+8 S8 A64])) sim2fitman.cpp:419 89 {*movdi_internal}
     (nil))
(insn 922 921 923 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 923 922 924 118 (parallel [
            (set (reg:DI 374)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2832 [0xfffffffffffff4f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 924 923 925 118 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg:DI 374)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 374)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 925 924 926 118 (parallel [
            (set (reg:DI 376)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3248 [0xfffffffffffff350])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 926 925 927 118 (parallel [
            (set (reg:DI 377)
                (plus:DI (reg:DI 376)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 376)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 927 926 928 118 (parallel [
            (set (reg:DI 378)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -3120 [0xfffffffffffff3d0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 928 927 929 118 (parallel [
            (set (reg:DI 379)
                (plus:DI (reg:DI 378)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 378)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 929 928 930 118 (parallel [
            (set (reg:DI 380)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 930 929 931 118 (parallel [
            (set (reg:DI 381)
                (plus:DI (reg:DI 380)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 380)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 931 930 932 118 (parallel [
            (set (reg:DI 382)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -2992 [0xfffffffffffff450])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 932 931 933 118 (parallel [
            (set (reg:DI 383)
                (plus:DI (reg:DI 382)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 382)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 933 932 934 118 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 383)) sim2fitman.cpp:419 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 383)
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 934 933 935 118 (set (reg:DI 38 r9)
        (reg:DI 375)) sim2fitman.cpp:419 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 375)
        (nil)))
(insn 935 934 936 118 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) sim2fitman.cpp:419 90 {*movsi_internal}
     (nil))
(insn 936 935 937 118 (set (reg:DI 2 cx)
        (reg:DI 377)) sim2fitman.cpp:419 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 377)
        (nil)))
(insn 937 936 938 118 (set (reg:DI 1 dx)
        (reg:DI 379)) sim2fitman.cpp:419 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 379)
        (nil)))
(insn 938 937 939 118 (set (reg:DI 4 si)
        (reg/f:DI 167 [ D.5831 ])) sim2fitman.cpp:419 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.5831 ])
        (nil)))
(insn 939 938 940 118 (set (reg:DI 5 di)
        (reg:DI 381)) sim2fitman.cpp:419 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 381)
        (nil)))
(call_insn 940 939 941 118 (call (mem:QI (symbol_ref:DI ("_Z10fwrite_ascPcPfP16Data_file_headerP17Data_block_headeriP12Procpar_infoP10Preprocess") [flags 0x41]  <function_decl 0x2ad76b4f1600 fwrite_asc>) [0 fwrite_asc S1 A8])
        (const_int 16 [0x10])) sim2fitman.cpp:419 642 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:SI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 941 940 942 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:419 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 942 941 943 118 (set (reg:QI 168 [ D.5828 ])
        (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3390 [0xfffffffffffff2c2])) [0 verbose+0 S1 A16])) sim2fitman.cpp:420 93 {*movqi_internal}
     (nil))
(insn 943 942 944 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.5828 ])
            (const_int 0 [0]))) sim2fitman.cpp:420 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 168 [ D.5828 ])
        (nil)))
(jump_insn 944 943 945 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 952)
            (pc))) sim2fitman.cpp:420 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 952)
;;  succ:       119 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 384 385
(note 945 944 946 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 119 (parallel [
            (set (reg:DI 384)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -1808 [0xfffffffffffff8f0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:421 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 947 946 948 119 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg:DI 384)
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:421 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 384)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 948 947 949 119 (set (reg:DI 4 si)
        (reg:DI 385)) sim2fitman.cpp:421 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 385)
        (nil)))
(insn 949 948 950 119 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2ad76b578a18 *.LC13>)) sim2fitman.cpp:421 89 {*movdi_internal}
     (nil))
(insn 950 949 951 119 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman.cpp:421 93 {*movqi_internal}
     (nil))
(call_insn 951 950 952 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2ad76b216e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:421 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;;              118
;;              119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(code_label 952 951 953 120 59 "" [2 uses])
(note 953 952 954 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 120 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2ad76b578ab0 *.LC14>)) sim2fitman.cpp:425 89 {*movdi_internal}
     (nil))
(call_insn 955 954 956 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2ad76b219900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:425 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 956 955 1091 120 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman.cpp:428 90 {*movsi_internal}
     (nil))
(jump_insn 1091 956 1092 120 (set (pc)
        (label_ref 974)) sim2fitman.cpp:428 636 {jump}
     (nil)
 -> 974)
;;  succ:       124 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1092 1091 976)
;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 169 386 387
(code_label 976 1092 959 121 62 "" [1 uses])
(note 959 976 960 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 960 959 961 121 (set (reg:SI 387)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:429 90 {*movsi_internal}
     (nil))
(insn 961 960 962 121 (set (reg:DI 386)
        (sign_extend:DI (reg:SI 387))) sim2fitman.cpp:429 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 387)
        (nil)))
(insn 962 961 963 121 (set (reg/f:DI 169 [ D.5829 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 386)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3264 [0xfffffffffffff340])) [0 in_file S8 A64])) sim2fitman.cpp:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386)
        (nil)))
(insn 963 962 964 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 169 [ D.5829 ])
            (const_int 0 [0]))) sim2fitman.cpp:429 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 169 [ D.5829 ])
        (nil)))
(jump_insn 964 963 965 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 971)
            (pc))) sim2fitman.cpp:429 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 971)
;;  succ:       122 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 170 388 389
(note 965 964 966 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 966 965 967 122 (set (reg:SI 389)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])) sim2fitman.cpp:430 90 {*movsi_internal}
     (nil))
(insn 967 966 968 122 (set (reg:DI 388)
        (sign_extend:DI (reg:SI 389))) sim2fitman.cpp:430 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 389)
        (nil)))
(insn 968 967 969 122 (set (reg/f:DI 170 [ D.5829 ])
        (mem/f/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 388)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -3264 [0xfffffffffffff340])) [0 in_file S8 A64])) sim2fitman.cpp:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 388)
        (nil)))
(insn 969 968 970 122 (set (reg:DI 5 di)
        (reg/f:DI 170 [ D.5829 ])) sim2fitman.cpp:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 170 [ D.5829 ])
        (nil)))
(call_insn 970 969 971 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2ad76b3d4900 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman.cpp:430 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121
;;              122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 971 970 972 123 61 "" [1 uses])
(note 972 971 973 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 973 972 974 123 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman.cpp:428 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       124 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU,DFS_BACK)
;;              120 [100.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 974 973 975 124 60 "" [1 uses])
(note 975 974 977 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 977 975 978 124 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -3376 [0xfffffffffffff2d0])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman.cpp:428 7 {*cmpsi_1}
     (nil))
(jump_insn 978 977 979 124 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 976)
            (pc))) sim2fitman.cpp:428 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 976)
;;  succ:       121
;;              125 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 171 172 173 174 175
(note 979 978 980 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 980 979 981 125 (set (reg/f:DI 171 [ D.5833 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3328 [0xfffffffffffff300])) [0 in_data[0].lo+0 S8 A64])) sim2fitman.cpp:434 89 {*movdi_internal}
     (nil))
(insn 981 980 982 125 (set (reg:DI 5 di)
        (reg/f:DI 171 [ D.5833 ])) sim2fitman.cpp:434 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ D.5833 ])
        (nil)))
(call_insn 982 981 983 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:434 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 983 982 984 125 (set (reg/f:DI 172 [ D.5833 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3312 [0xfffffffffffff310])) [0 switch_data[0].lo+0 S8 A64])) sim2fitman.cpp:435 89 {*movdi_internal}
     (nil))
(insn 984 983 985 125 (set (reg:DI 5 di)
        (reg/f:DI 172 [ D.5833 ])) sim2fitman.cpp:435 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 172 [ D.5833 ])
        (nil)))
(call_insn 985 984 986 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:435 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 986 985 987 125 (set (reg/f:DI 173 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3296 [0xfffffffffffff320])) [0 out_data+0 S8 A64])) sim2fitman.cpp:436 89 {*movdi_internal}
     (nil))
(insn 987 986 988 125 (set (reg:DI 5 di)
        (reg/f:DI 173 [ D.5831 ])) sim2fitman.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.5831 ])
        (nil)))
(call_insn 988 987 989 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:436 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 989 988 990 125 (set (reg/f:DI 174 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3280 [0xfffffffffffff330])) [0 scratch_data+0 S8 A64])) sim2fitman.cpp:437 89 {*movdi_internal}
     (nil))
(insn 990 989 991 125 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.5831 ])) sim2fitman.cpp:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ D.5831 ])
        (nil)))
(call_insn 991 990 992 125 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:437 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 992 991 993 125 (set (reg:SI 175 [ D.5824 ])
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -3388 [0xfffffffffffff2c4])) [0 fid+0 S4 A32])) sim2fitman.cpp:439 90 {*movsi_internal}
     (nil))
(insn 993 992 994 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.5824 ])
            (const_int 1 [0x1]))) sim2fitman.cpp:439 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 175 [ D.5824 ])
        (nil)))
(jump_insn 994 993 995 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1008)
            (pc))) sim2fitman.cpp:439 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1008)
;;  succ:       126 (FALLTHRU)
;;              127
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 176 177 178 179
(note 995 994 996 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 126 (set (reg/f:DI 176 [ D.5833 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3320 [0xfffffffffffff308])) [0 in_data[1].lo+0 S8 A64])) sim2fitman.cpp:440 89 {*movdi_internal}
     (nil))
(insn 997 996 998 126 (set (reg:DI 5 di)
        (reg/f:DI 176 [ D.5833 ])) sim2fitman.cpp:440 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ D.5833 ])
        (nil)))
(call_insn 998 997 999 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:440 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 999 998 1000 126 (set (reg/f:DI 177 [ D.5833 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3304 [0xfffffffffffff318])) [0 switch_data[1].lo+0 S8 A64])) sim2fitman.cpp:441 89 {*movdi_internal}
     (nil))
(insn 1000 999 1001 126 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.5833 ])) sim2fitman.cpp:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.5833 ])
        (nil)))
(call_insn 1001 1000 1002 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:441 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1002 1001 1003 126 (set (reg/f:DI 178 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3288 [0xfffffffffffff328])) [0 out_data+8 S8 A64])) sim2fitman.cpp:442 89 {*movdi_internal}
     (nil))
(insn 1003 1002 1004 126 (set (reg:DI 5 di)
        (reg/f:DI 178 [ D.5831 ])) sim2fitman.cpp:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178 [ D.5831 ])
        (nil)))
(call_insn 1004 1003 1005 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:442 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1005 1004 1006 126 (set (reg/f:DI 179 [ D.5831 ])
        (mem/f/j/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -3272 [0xfffffffffffff338])) [0 scratch_data+8 S8 A64])) sim2fitman.cpp:443 89 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 126 (set (reg:DI 5 di)
        (reg/f:DI 179 [ D.5831 ])) sim2fitman.cpp:443 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 179 [ D.5831 ])
        (nil)))
(call_insn 1007 1006 1008 126 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ad76b236000 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:443 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125
;;              126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 180 181
(code_label 1008 1007 1009 127 63 "" [1 uses])
(note 1009 1008 1010 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1010 1009 1013 127 (set (reg:SI 180 [ D.5824 ])
        (const_int 0 [0])) sim2fitman.cpp:446 90 {*movsi_internal}
     (nil))
(insn 1013 1010 1017 127 (set (reg:SI 181 [ <retval> ])
        (reg:SI 180 [ D.5824 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 180 [ D.5824 ])
        (nil)))
(insn 1017 1013 1018 127 (set (reg/i:SI 0 ax)
        (reg:SI 181 [ <retval> ])) sim2fitman.cpp:448 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 181 [ <retval> ])
        (nil)))
(insn 1018 1017 1019 127 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.5834+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) sim2fitman.cpp:448 968 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1019 1018 1025 127 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) sim2fitman.cpp:448 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 1022)
;;  succ:       129
;;              128 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1025 1019 1020 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(call_insn 1020 1025 1021 128 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2ad76b543300 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman.cpp:448 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1021 1020 1022)
;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1022 1021 1026 129 65 "" [1 uses])
(note 1026 1022 1023 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1026 0 129 (use (reg/i:SI 0 ax)) sim2fitman.cpp:448 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

