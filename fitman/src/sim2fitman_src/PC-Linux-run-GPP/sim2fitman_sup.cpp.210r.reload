
;; Function void endianCheck_system(Endian_Check*, bool) (_Z18endianCheck_systemP12Endian_Checkb, funcdef_no=2, decl_uid=5365, cgraph_uid=2)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 3
changing reg in insn 15
changing reg in insn 16
changing reg in insn 26
changing reg in insn 27
starting the processing of deferred insns
ending the processing of deferred insns


void endianCheck_system(Endian_Check*, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,6u} r1={4d} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,13u} r7={1d,10u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={7d,4u} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 199{161d,38u,0e} in 22{19 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])
        (reg:DI 5 di [ endian_check ])) sim2fitman_sup.cpp:21 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ endian_check ])
        (nil)))
(insn 3 2 4 2 (set (reg:SI 0 ax [61])
        (reg:SI 4 si [ verbose ])) sim2fitman_sup.cpp:21 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ verbose ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A8])
        (reg:QI 0 ax [61])) sim2fitman_sup.cpp:21 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [61])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 8 5 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z11isBigEndianv") [flags 0x3]  <function_decl 0x7f7e9f0bec00 isBigEndian>) [0 isBigEndian S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 663 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:59 D.6357 ] [59])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:24 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.6357 ] [59])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6357 ] [59])
        (nil)))
(insn 11 10 12 2 (set (reg:QI 0 ax [orig:60 retval.0 ] [60])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 608 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:60 retval.0 ] [60])
            (const_int 0 [0]))) sim2fitman_sup.cpp:24 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:60 retval.0 ] [60])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) sim2fitman_sup.cpp:24 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 62
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:DI 0 ax [62])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:25 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (set (mem/j:SI (reg/f:DI 0 ax [62]) [0 endian_check_3(D)->systemStruct+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [62])
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:26 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) sim2fitman_sup.cpp:26 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7e9ec788e8 *.LC0>)) sim2fitman_sup.cpp:27 87 {*movdi_internal_rex64}
     (nil))
(call_insn 21 20 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:27 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(jump_insn 37 21 38 4 (set (pc)
        (label_ref 35)) 650 {jump}
     (nil)
 -> 35)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 38 37 24)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63
(code_label 24 38 25 5 2 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:31 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (set (mem/j:SI (reg/f:DI 0 ax [63]) [0 endian_check_3(D)->systemStruct+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:31 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [63])
        (nil)))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 verbose+0 S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:32 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) sim2fitman_sup.cpp:32 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7e9ec78980 *.LC1>)) sim2fitman_sup.cpp:33 87 {*movdi_internal_rex64}
     (nil))
(call_insn 32 31 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:33 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3
;;              5
;;              4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 35 32 36 7 1 "" [3 uses])
(note 36 35 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int endianCheck_file(FILE*, Endian_Check*, bool*, char*, bool) (_Z16endianCheck_fileP8_IO_FILEP12Endian_CheckPbPcb, funcdef_no=3, decl_uid=5371, cgraph_uid=3)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 7:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) ?mq {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 38:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 51:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 26
changing reg in insn 27
changing reg in insn 54
changing reg in insn 57
changing reg in insn 57
changing reg in insn 61
changing reg in insn 6
changing reg in insn 14
changing reg in insn 15
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 37
changing reg in insn 38
changing reg in insn 50
changing reg in insn 51
starting the processing of deferred insns
ending the processing of deferred insns


int endianCheck_file(FILE*, Endian_Check*, bool*, char*, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={16d,12u} r1={5d,1u} r2={5d,1u} r4={6d,2u} r5={9d,5u} r6={1d,24u} r7={1d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={8d,4u} r18={4d} r19={4d} r20={1d,1u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 280{214d,66u,0e} in 38{34 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 62
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) sim2fitman_sup.cpp:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ in_file ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])
        (reg:DI 4 si [ endian_check ])) sim2fitman_sup.cpp:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ endian_check ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])
        (reg:DI 1 dx [ swap_bytes ])) sim2fitman_sup.cpp:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ swap_bytes ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 filename+0 S8 A64])
        (reg:DI 2 cx [ filename ])) sim2fitman_sup.cpp:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ filename ])
        (nil)))
(insn 6 5 7 2 (set (reg:SI 0 ax [62])
        (reg:SI 37 r8 [ verbose ])) sim2fitman_sup.cpp:44 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ verbose ])
        (nil)))
(insn 7 6 8 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A8])
        (reg:QI 0 ax [62])) sim2fitman_sup.cpp:44 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [62])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:53 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) sim2fitman_sup.cpp:53 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 0 ax [63])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 filename+0 S8 A64])) sim2fitman_sup.cpp:54 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 0 ax [63])) sim2fitman_sup.cpp:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [63])
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7e9ec9a130 *.LC2>)) sim2fitman_sup.cpp:54 87 {*movdi_internal_rex64}
     (nil))
(insn 17 16 18 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:54 91 {*movqi_internal}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:54 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7e9ec9a1c8 *.LC3>)) sim2fitman_sup.cpp:55 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:55 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 64 65
(code_label 21 20 22 4 5 "" [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg/f:DI 0 ax [64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:57 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [64])
                (const_int 4 [0x4])) [0 endian_check_3(D)->fileStruct+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:57 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 25 24 26 4 (set (reg/f:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 endian_check+0 S8 A64])) sim2fitman_sup.cpp:59 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 4 (set (reg:SI 0 ax [orig:59 D.6360 ] [59])
        (mem/j:SI (reg/f:DI 0 ax [65]) [0 endian_check_3(D)->systemStruct+0 S4 A32])) sim2fitman_sup.cpp:59 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (nil)))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:59 D.6360 ] [59])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:59 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6360 ] [59])
        (nil)))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) sim2fitman_sup.cpp:59 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 41)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:61 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) sim2fitman_sup.cpp:61 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 35)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7e9ec9a260 *.LC4>)) sim2fitman_sup.cpp:62 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:62 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66
(code_label 35 34 36 7 7 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg/f:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])) sim2fitman_sup.cpp:64 87 {*movdi_internal_rex64}
     (nil))
(insn 38 37 67 7 (set (mem:QI (reg/f:DI 0 ax [66]) [0 *swap_bytes_5(D)+0 S1 A8])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:64 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (nil)))
(jump_insn 67 38 68 7 (set (pc)
        (label_ref 52)) 650 {jump}
     (nil)
 -> 52)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 68 67 41)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 41 68 42 8 6 "" [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 verbose+0 S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:67 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) sim2fitman_sup.cpp:67 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 48)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7e9ec9a2f8 *.LC5>)) sim2fitman_sup.cpp:68 87 {*movdi_internal_rex64}
     (nil))
(call_insn 47 46 48 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:68 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 67
(code_label 48 47 49 10 9 "" [1 uses])
(note 49 48 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 10 (set (reg/f:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 swap_bytes+0 S8 A64])) sim2fitman_sup.cpp:70 87 {*movdi_internal_rex64}
     (nil))
(insn 51 50 52 10 (set (mem:QI (reg/f:DI 0 ax [67]) [0 *swap_bytes_5(D)+0 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:70 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              7 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 60 61
(code_label 52 51 53 11 8 "" [1 uses])
(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 57 11 (set (reg:SI 0 ax [orig:60 D.6360 ] [60])
        (const_int 0 [0])) sim2fitman_sup.cpp:74 89 {*movsi_internal}
     (nil))
(insn 57 54 61 11 (set (reg:SI 0 ax [orig:61 <retval> ] [61])
        (reg:SI 0 ax [orig:60 D.6360 ] [60])) sim2fitman_sup.cpp:74 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 D.6360 ] [60])
        (nil)))
(insn 61 57 64 11 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:61 <retval> ] [61])) sim2fitman_sup.cpp:75 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 <retval> ] [61])
        (nil)))
(insn 64 61 0 11 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:75 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int isBigEndian() (_Z11isBigEndianv, funcdef_no=4, decl_uid=5362, cgraph_uid=4)


********** Local #1: **********

          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 6:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 7:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 16
changing reg in insn 11
changing reg in insn 21
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 21
changing reg in insn 25
starting the processing of deferred insns
ending the processing of deferred insns


int isBigEndian()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 17[flags]
;;  ref usage 	r0={7d,6u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,7u} r7={1d,5u} r17={2d,1u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 46{26d,20u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -2 [0xfffffffffffffffe])) [0 word+0 S2 A16])
        (const_int 17185 [0x4321])) sim2fitman_sup.cpp:83 90 {*movhi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:DI 0 ax [orig:60 word.1 ] [60])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:84 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:QI 0 ax [orig:61 D.6366 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 word.1 ] [60]) [0 MEM[(char *)word.1_2]+0 S1 A8])) sim2fitman_sup.cpp:84 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 word.1 ] [60])
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:61 D.6366 ] [61])
            (const_int 33 [0x21]))) sim2fitman_sup.cpp:84 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.6366 ] [61])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) sim2fitman_sup.cpp:84 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 14)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 31 3 (set (reg:SI 0 ax [orig:59 D.6365 ] [59])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:85 89 {*movsi_internal}
     (nil))
(jump_insn 31 11 32 3 (set (pc)
        (label_ref 19)) sim2fitman_sup.cpp:85 650 {jump}
     (nil)
 -> 19)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 32 31 14)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 14 32 15 4 12 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 19 4 (set (reg:SI 0 ax [orig:59 D.6365 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:87 89 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 62
(code_label 19 16 20 5 14 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 25 5 (set (reg:SI 0 ax [orig:62 <retval> ] [62])
        (reg:SI 0 ax [orig:59 D.6365 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6365 ] [59])
        (nil)))
(insn 25 21 28 5 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:62 <retval> ] [62])) sim2fitman_sup.cpp:89 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 <retval> ] [62])
        (nil)))
(insn 28 25 0 5 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:89 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool isNumber(char*) (_Z8isNumberPc, funcdef_no=5, decl_uid=5361, cgraph_uid=5)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 16
	 Choosing alt 0 in insn 16:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 24
	 Choosing alt 0 in insn 24:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 40
	 Choosing alt 0 in insn 40:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 43:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 52:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 58
	 Choosing alt 0 in insn 58:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 59:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 68:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 81:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) q  (1) qn {*movqi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 105: point = 0
   Insn 102: point = 0
   Insn 98: point = 1
  BB 18
   Insn 118: point = 4
   Insn 90: point = 4
  BB 17
   Insn 116: point = 5
   Insn 85: point = 5
  BB 16
   Insn 83: point = 6
   Insn 82: point = 6
   Insn 81: point = 7
   Insn 80: point = 9
  BB 15
   Insn 78: point = 10
   Insn 77: point = 10
  BB 14
   Insn 114: point = 10
   Insn 72: point = 10
  BB 13
   Insn 70: point = 11
   Insn 69: point = 11
   Insn 68: point = 12
   Insn 67: point = 14
  BB 12
   Insn 65: point = 15
   Insn 64: point = 15
  BB 9
   Insn 112: point = 15
   Insn 47: point = 15
  BB 7
   Insn 110: point = 16
   Insn 32: point = 16
  BB 6
   Insn 30: point = 17
   Insn 29: point = 17
  BB 5
   Insn 27: point = 17
   Insn 26: point = 17
   Insn 25: point = 18
   Insn 24: point = 20
   Insn 23: point = 22
   Insn 22: point = 23
   Insn 21: point = 25
  BB 4
   Insn 19: point = 26
   Insn 18: point = 26
   Insn 17: point = 27
   Insn 16: point = 29
   Insn 15: point = 31
   Insn 14: point = 32
   Insn 13: point = 34
  BB 11
   Insn 62: point = 35
   Insn 61: point = 35
   Insn 59: point = 36
   Insn 58: point = 38
   Insn 57: point = 40
   Insn 56: point = 41
   Insn 55: point = 43
  BB 3
   Insn 108: point = 44
  BB 10
   Insn 52: point = 44
  BB 8
   Insn 45: point = 44
   Insn 44: point = 44
   Insn 43: point = 45
   Insn 42: point = 47
   Insn 41: point = 49
   Insn 40: point = 51
   Insn 39: point = 53
   Insn 38: point = 54
   Insn 37: point = 56
  BB 19
   Insn 95: point = 57
  BB 2
   Insn 8: point = 58
   Insn 7: point = 58
   Insn 6: point = 58
   Insn 2: point = 58
 r59: [57..57] [15..16] [10..10] [2..5]
 r60: [39..41]
 r61: [37..38]
 r62: [35..36]
 r63: [30..32]
 r64: [28..29]
 r65: [26..27]
 r66: [21..23]
 r67: [19..20]
 r68: [17..18]
 r69: [52..54]
 r70: [50..51]
 r71: [48..49]
 r72: [46..47]
 r73: [44..45]
 r74: [11..12]
 r75: [6..7]
 r76: [0..1]
 r77: [33..34]
 r78: [30..31]
 r79: [24..25]
 r80: [21..22]
 r81: [55..56]
 r82: [52..53]
 r83: [42..43]
 r84: [39..40]
 r85: [13..14]
 r86: [8..9]
Compressing live ranges: from 58 to 52 - 89%
Ranges after the compression:
 r59: [51..51] [13..14] [8..8] [2..3]
 r60: [35..36]
 r61: [33..34]
 r62: [31..32]
 r63: [27..28]
 r64: [25..26]
 r65: [23..24]
 r66: [19..20]
 r67: [17..18]
 r68: [15..16]
 r69: [47..48]
 r70: [45..46]
 r71: [43..44]
 r72: [41..42]
 r73: [39..40]
 r74: [9..10]
 r75: [4..5]
 r76: [0..1]
 r77: [29..30]
 r78: [27..28]
 r79: [21..22]
 r80: [19..20]
 r81: [49..50]
 r82: [47..48]
 r83: [37..38]
 r84: [35..36]
 r85: [11..12]
 r86: [6..7]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 95
changing reg in insn 90
changing reg in insn 85
changing reg in insn 72
changing reg in insn 47
changing reg in insn 32
changing reg in insn 98
changing reg in insn 56
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 38
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 68
changing reg in insn 69
changing reg in insn 81
changing reg in insn 82
changing reg in insn 98
changing reg in insn 102
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 67
changing reg in insn 68
changing reg in insn 80
changing reg in insn 81
starting the processing of deferred insns
ending the processing of deferred insns


bool isNumber(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={31d,26u} r1={5d,4u,4e} r2={1d} r4={1d} r5={1d,1u} r6={1d,38u} r7={1d,20u} r17={16d,10u} r20={1d,1u,4e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 176{68d,100u,8e} in 64{64 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
        (reg:DI 5 di [ string ])) sim2fitman_sup.cpp:94 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ string ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:95 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:97 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) sim2fitman_sup.cpp:97 612 {*jcc_1}
     (nil)
 -> 93)
;;  succ:       3 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 9 8 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 108 9 109 3 (set (pc)
        (label_ref 53)) sim2fitman_sup.cpp:98 650 {jump}
     (nil)
 -> 53)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 109 108 60)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 63 64 65 77 78
(code_label 60 109 12 4 21 "" [1 uses])
(note 12 60 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 0 ax [77])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:99 89 {*movsi_internal}
     (nil))
(insn 14 13 15 4 (set (reg:DI 1 dx [orig:63 D.6368 ] [63])
        (sign_extend:DI (reg:SI 0 ax [77]))) sim2fitman_sup.cpp:99 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [77])
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:99 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/f:DI 0 ax [orig:64 D.6369 ] [64])
                (plus:DI (reg/f:DI 0 ax [78])
                    (reg:DI 1 dx [orig:63 D.6368 ] [63])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:99 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.6368 ] [63])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                    (reg:DI 1 dx [orig:63 D.6368 ] [63]))
                (nil)))))
(insn 17 16 18 4 (set (reg:QI 0 ax [orig:65 D.6370 ] [65])
        (mem:QI (reg/f:DI 0 ax [orig:64 D.6369 ] [64]) [0 *_9+0 S1 A8])) sim2fitman_sup.cpp:99 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 D.6369 ] [64])
        (nil)))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:65 D.6370 ] [65])
            (const_int 46 [0x2e]))) sim2fitman_sup.cpp:99 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:65 D.6370 ] [65])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sim2fitman_sup.cpp:99 612 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       10
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 66 67 68 79 80
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:SI 0 ax [79])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:101 89 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:DI 1 dx [orig:66 D.6368 ] [66])
        (sign_extend:DI (reg:SI 0 ax [79]))) sim2fitman_sup.cpp:101 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [79])
        (nil)))
(insn 23 22 24 5 (set (reg/f:DI 0 ax [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:101 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.6369 ] [67])
                (plus:DI (reg/f:DI 0 ax [80])
                    (reg:DI 1 dx [orig:66 D.6368 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:101 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.6368 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.6368 ] [66]))
                (nil)))))
(insn 25 24 26 5 (set (reg:QI 0 ax [orig:68 D.6370 ] [68])
        (mem:QI (reg/f:DI 0 ax [orig:67 D.6369 ] [67]) [0 *_12+0 S1 A8])) sim2fitman_sup.cpp:101 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6369 ] [67])
        (nil)))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:68 D.6370 ] [68])
            (const_int 45 [0x2d]))) sim2fitman_sup.cpp:101 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.6370 ] [68])
        (nil)))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) sim2fitman_sup.cpp:101 612 {*jcc_1}
     (nil)
 -> 35)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:102 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sim2fitman_sup.cpp:102 612 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 110 7 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:103 91 {*movqi_internal}
     (nil))
(jump_insn 110 32 111 7 (set (pc)
        (label_ref 96)) sim2fitman_sup.cpp:103 650 {jump}
     (nil)
 -> 96)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 111 110 35)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 69 70 71 72 73 81 82
(code_label 35 111 36 8 19 "" [1 uses])
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:SI 0 ax [81])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:105 89 {*movsi_internal}
     (nil))
(insn 38 37 39 8 (set (reg:DI 1 dx [orig:69 D.6368 ] [69])
        (sign_extend:DI (reg:SI 0 ax [81]))) sim2fitman_sup.cpp:105 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [81])
        (nil)))
(insn 39 38 40 8 (set (reg/f:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:105 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6369 ] [70])
                (plus:DI (reg/f:DI 0 ax [82])
                    (reg:DI 1 dx [orig:69 D.6368 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:105 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [82])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.6368 ] [69])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                    (reg:DI 1 dx [orig:69 D.6368 ] [69]))
                (nil)))))
(insn 41 40 42 8 (set (reg:QI 0 ax [orig:71 D.6370 ] [71])
        (mem:QI (reg/f:DI 0 ax [orig:70 D.6369 ] [70]) [0 *_16+0 S1 A8])) sim2fitman_sup.cpp:105 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6369 ] [70])
        (nil)))
(insn 42 41 43 8 (set (reg:SI 0 ax [orig:72 D.6371 ] [72])
        (sign_extend:SI (reg:QI 0 ax [orig:71 D.6370 ] [71]))) sim2fitman_sup.cpp:105 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:71 D.6370 ] [71])
        (nil)))
(insn 43 42 44 8 (parallel [
            (set (reg:SI 0 ax [orig:73 D.6371 ] [73])
                (plus:SI (reg:SI 0 ax [orig:72 D.6371 ] [72])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:105 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:72 D.6371 ] [72])
        (nil)))
(insn 44 43 45 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:73 D.6371 ] [73])
            (const_int 9 [0x9]))) sim2fitman_sup.cpp:105 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 D.6371 ] [73])
        (nil)))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sim2fitman_sup.cpp:105 612 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 112 9 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:106 91 {*movqi_internal}
     (nil))
(jump_insn 112 47 113 9 (set (pc)
        (label_ref 96)) sim2fitman_sup.cpp:106 650 {jump}
     (nil)
 -> 96)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 113 112 50)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              6
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 50 113 51 10 18 "" [3 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:108 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 83 84
(code_label 53 52 54 11 17 "" [1 uses])
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 11 (set (reg:SI 0 ax [83])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:98 89 {*movsi_internal}
     (nil))
(insn 56 55 57 11 (set (reg:DI 1 dx [orig:60 D.6368 ] [60])
        (sign_extend:DI (reg:SI 0 ax [83]))) sim2fitman_sup.cpp:98 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [83])
        (nil)))
(insn 57 56 58 11 (set (reg/f:DI 0 ax [84])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:98 87 {*movdi_internal_rex64}
     (nil))
(insn 58 57 59 11 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.6369 ] [61])
                (plus:DI (reg/f:DI 0 ax [84])
                    (reg:DI 1 dx [orig:60 D.6368 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:98 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [84])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6368 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.6368 ] [60]))
                (nil)))))
(insn 59 58 61 11 (set (reg:QI 0 ax [orig:62 D.6370 ] [62])
        (mem:QI (reg/f:DI 0 ax [orig:61 D.6369 ] [61]) [0 *_6+0 S1 A8])) sim2fitman_sup.cpp:98 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6369 ] [61])
        (nil)))
(insn 61 59 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:62 D.6370 ] [62])
            (const_int 0 [0]))) sim2fitman_sup.cpp:98 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:62 D.6370 ] [62])
        (nil)))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) sim2fitman_sup.cpp:98 612 {*jcc_1}
     (nil)
 -> 60)
;;  succ:       4
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:110 7 {*cmpsi_1}
     (nil))
(jump_insn 65 64 66 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) sim2fitman_sup.cpp:110 612 {*jcc_1}
     (nil)
 -> 75)
;;  succ:       13 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 74 85
(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 13 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:110 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 13 (set (reg:QI 0 ax [orig:74 D.6370 ] [74])
        (mem:QI (reg/f:DI 0 ax [85]) [0 *string_4(D)+0 S1 A8])) sim2fitman_sup.cpp:110 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (nil)))
(insn 69 68 70 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:74 D.6370 ] [74])
            (const_int 45 [0x2d]))) sim2fitman_sup.cpp:110 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:74 D.6370 ] [74])
        (nil)))
(jump_insn 70 69 71 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) sim2fitman_sup.cpp:110 612 {*jcc_1}
     (nil)
 -> 75)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 71 70 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 114 14 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:111 91 {*movqi_internal}
     (nil))
(jump_insn 114 72 115 14 (set (pc)
        (label_ref 96)) sim2fitman_sup.cpp:111 650 {jump}
     (nil)
 -> 96)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 115 114 75)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 75 115 76 15 22 "" [2 uses])
(note 76 75 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:112 7 {*cmpsi_1}
     (nil))
(jump_insn 78 77 79 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) sim2fitman_sup.cpp:112 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       16 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 75 86
(note 79 78 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 16 (set (reg/f:DI 0 ax [86])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 string+0 S8 A64])) sim2fitman_sup.cpp:112 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 82 16 (set (reg:QI 0 ax [orig:75 D.6370 ] [75])
        (mem:QI (reg/f:DI 0 ax [86]) [0 *string_4(D)+0 S1 A8])) sim2fitman_sup.cpp:112 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [86])
        (nil)))
(insn 82 81 83 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:75 D.6370 ] [75])
            (const_int 46 [0x2e]))) sim2fitman_sup.cpp:112 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:75 D.6370 ] [75])
        (nil)))
(jump_insn 83 82 84 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) sim2fitman_sup.cpp:112 612 {*jcc_1}
     (nil)
 -> 88)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(note 84 83 85 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 116 17 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:113 91 {*movqi_internal}
     (nil))
(jump_insn 116 85 117 17 (set (pc)
        (label_ref 96)) sim2fitman_sup.cpp:113 650 {jump}
     (nil)
 -> 96)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 117 116 88)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 88 117 89 18 23 "" [2 uses])
(note 89 88 90 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 118 18 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:115 91 {*movqi_internal}
     (nil))
(jump_insn 118 90 119 18 (set (pc)
        (label_ref 96)) sim2fitman_sup.cpp:115 650 {jump}
     (nil)
 -> 96)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 119 118 93)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 93 119 94 19 16 "" [1 uses])
(note 94 93 95 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 19 (set (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:118 91 {*movqi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              7 [100.0%] 
;;              9 [100.0%] 
;;              14 [100.0%] 
;;              17 [100.0%] 
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 76
(code_label 96 95 97 20 20 "" [5 uses])
(note 97 96 98 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 102 20 (set (reg:QI 0 ax [orig:76 <retval> ] [76])
        (reg:QI 0 ax [orig:59 D.6367 ] [59])) 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:59 D.6367 ] [59])
        (nil)))
(insn 102 98 105 20 (set (reg/i:QI 0 ax)
        (reg:QI 0 ax [orig:76 <retval> ] [76])) sim2fitman_sup.cpp:121 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:76 <retval> ] [76])
        (nil)))
(insn 105 102 0 20 (use (reg/i:QI 0 ax)) sim2fitman_sup.cpp:121 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int isNAN(float) (_Z5isNANf, funcdef_no=6, decl_uid=5378, cgraph_uid=6)

      Creating newreg=72
Removing SCRATCH in insn #4 (nop 2)
rescanning insn with uid = 4.
deleting insn with uid = 4.
      Creating newreg=73
Removing SCRATCH in insn #64 (nop 3)
rescanning insn with uid = 64.
deleting insn with uid = 64.

********** Local #1: **********

          alt=0,overall=1225,losers=3,rld_nregs=2
          alt=1,overall=615,losers=2,rld_nregs=1
          alt=3,overall=1229,losers=3 -- reject
          alt=4,overall=620,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=19,losers=2 -- reject
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2:  (0) m  (1) x {*movsf_internal}
          alt=0,overall=8,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r72
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 14:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 30:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r73
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 9
   Insn 66: point = 0
  BB 10
   Insn 69: point = 0
  BB 8
   Insn 65: point = 0
   Insn 64: point = 0
   Insn 61: point = 1
   Insn 57: point = 2
  BB 6
   Insn 74: point = 5
   Insn 47: point = 5
  BB 7
   Insn 52: point = 6
  BB 5
   Insn 44: point = 7
   Insn 43: point = 7
   Insn 42: point = 8
   Insn 41: point = 9
   Insn 40: point = 9
   Insn 39: point = 10
   Insn 38: point = 10
  BB 4
   Insn 36: point = 11
   Insn 35: point = 11
   Insn 34: point = 12
   Insn 33: point = 13
   Insn 32: point = 13
   Insn 31: point = 14
   Insn 30: point = 14
  BB 3
   Insn 28: point = 15
   Insn 27: point = 15
   Insn 26: point = 16
   Insn 25: point = 17
   Insn 24: point = 17
   Insn 23: point = 18
   Insn 22: point = 18
  BB 2
   Insn 20: point = 19
   Insn 19: point = 19
   Insn 18: point = 20
   Insn 17: point = 21
   Insn 16: point = 21
   Insn 15: point = 22
   Insn 14: point = 22
   Insn 13: point = 23
   Insn 12: point = 23
   Insn 11: point = 23
   Insn 10: point = 24
   Insn 9: point = 24
   Insn 8: point = 25
   Insn 7: point = 26
   Insn 4: point = 27
   Insn 2: point = 29
 r59: [3..6]
 r60: [24..26]
 r61: [19..20]
 r62: [15..16]
 r63: [11..12]
 r64: [7..8]
 r65: [1..2]
 r66: [23..25]
 r67: [21..22]
 r68: [17..18]
 r69: [13..14]
 r70: [9..10]
 r72: [27..28]
 r73: [0..0]
Compressing live ranges: from 29 to 25 - 86%
Ranges after the compression:
 r59: [3..4]
 r60: [21..22]
 r61: [17..18]
 r62: [13..14]
 r63: [9..10]
 r64: [5..6]
 r65: [1..2]
 r66: [21..22]
 r67: [19..20]
 r68: [15..16]
 r69: [11..12]
 r70: [7..8]
 r72: [23..24]
 r73: [0..0]
	 Assigning to 72 (cl=INDEX_REGS, orig=72, freq=1, tfirst=72, tfreq=1)...
	   Assign 0 to reload r72 (freq=1)
	 Assigning to 73 (cl=INDEX_REGS, orig=73, freq=1, tfirst=73, tfreq=1)...
	   Assign 1 to reload r73 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 47
changing reg in insn 57
changing reg in insn 7
changing reg in insn 9
changing reg in insn 18
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 34
changing reg in insn 35
changing reg in insn 42
changing reg in insn 43
changing reg in insn 57
changing reg in insn 61
changing reg in insn 8
changing reg in insn 11
changing reg in insn 14
changing reg in insn 16
changing reg in insn 22
changing reg in insn 24
changing reg in insn 30
changing reg in insn 32
changing reg in insn 38
changing reg in insn 40
changing reg in insn 4
changing reg in insn 64
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 66.


int isNAN(float)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={22d,18u} r1={8d} r2={7d} r4={12d,5u} r5={12d,5u} r6={1d,19u} r7={1d,16u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={17d,5u} r18={6d} r19={6d} r20={1d,1u} r21={9d,3u} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} 
;;    total ref usage 393{321d,72u,0e} in 46{40 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61 66 67
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 float_value+0 S4 A32])
        (reg:SF 21 xmm0 [ float_value ])) sim2fitman_sup.cpp:128 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ float_value ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6374+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [72])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:128 968 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [72])
        (nil)))
(insn 7 4 8 2 (set (reg:DF 21 xmm0 [orig:60 D.6373 ] [60])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 float_value+0 S4 A32]))) sim2fitman_sup.cpp:142 159 {*extendsfdf2_sse}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 0 ax [66])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:142 274 {*adddi_1}
     (nil))
(insn 9 8 10 2 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:60 D.6373 ] [60])) sim2fitman_sup.cpp:142 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:60 D.6373 ] [60])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7e9ecad5f0 *.LC6>)) sim2fitman_sup.cpp:142 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [66])) sim2fitman_sup.cpp:142 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [66])
        (nil)))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) sim2fitman_sup.cpp:142 91 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7f7e9f1c4400 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:142 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:DF (use (reg:DF 21 xmm0))
                    (nil))))))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 0 ax [67])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:143 274 {*adddi_1}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7e9ecad688 *.LC7>)) sim2fitman_sup.cpp:143 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [67])) sim2fitman_sup.cpp:143 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (nil)))
(call_insn/i 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:61 D.6372 ] [61])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:143 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:61 D.6372 ] [61])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6372 ] [61])
        (nil)))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:143 612 {*jcc_1}
     (nil)
 -> 45)
;;  succ:       6
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 68
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg:DI 0 ax [68])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:144 274 {*adddi_1}
     (nil))
(insn 23 22 24 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7e9ecad720 *.LC8>)) sim2fitman_sup.cpp:144 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [68])) sim2fitman_sup.cpp:144 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil)))
(call_insn/i 25 24 26 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:144 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 3 (set (reg:SI 0 ax [orig:62 D.6372 ] [62])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:144 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 26 28 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:62 D.6372 ] [62])
            (const_int 0 [0]))) sim2fitman_sup.cpp:143 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.6372 ] [62])
        (nil)))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:143 612 {*jcc_1}
     (nil)
 -> 45)
;;  succ:       6
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 69
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (parallel [
            (set (reg:DI 0 ax [69])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:145 274 {*adddi_1}
     (nil))
(insn 31 30 32 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7e9ecad7b8 *.LC9>)) sim2fitman_sup.cpp:145 87 {*movdi_internal_rex64}
     (nil))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 0 ax [69])) sim2fitman_sup.cpp:145 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [69])
        (nil)))
(call_insn/i 33 32 34 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:145 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 4 (set (reg:SI 0 ax [orig:63 D.6372 ] [63])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:145 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 35 34 36 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:63 D.6372 ] [63])
            (const_int 0 [0]))) sim2fitman_sup.cpp:144 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.6372 ] [63])
        (nil)))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) sim2fitman_sup.cpp:144 612 {*jcc_1}
     (nil)
 -> 45)
;;  succ:       6
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 64 70
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (parallel [
            (set (reg:DI 0 ax [70])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:146 274 {*adddi_1}
     (nil))
(insn 39 38 40 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7e9ecad850 *.LC10>)) sim2fitman_sup.cpp:146 87 {*movdi_internal_rex64}
     (nil))
(insn 40 39 41 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [70])) sim2fitman_sup.cpp:146 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(call_insn/i 41 40 42 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:146 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 5 (set (reg:SI 0 ax [orig:64 D.6372 ] [64])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:146 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.6372 ] [64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:145 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6372 ] [64])
        (nil)))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) sim2fitman_sup.cpp:145 612 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 45 44 46 6 25 "" [3 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 74 6 (set (reg:SI 0 ax [orig:59 D.6372 ] [59])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:147 89 {*movsi_internal}
     (nil))
(jump_insn 74 47 75 6 (set (pc)
        (label_ref 55)) sim2fitman_sup.cpp:147 650 {jump}
     (nil)
 -> 55)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 75 74 50)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 50 75 51 7 26 "" [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 55 7 (set (reg:SI 0 ax [orig:59 D.6372 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:149 89 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 17 [flags] 65
(code_label 55 52 56 8 28 "" [1 uses])
(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 8 (set (reg:SI 0 ax [orig:65 <retval> ] [65])
        (reg:SI 0 ax [orig:59 D.6372 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6372 ] [59])
        (nil)))
(insn 61 57 64 8 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:65 <retval> ] [65])) sim2fitman_sup.cpp:153 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 <retval> ] [65])
        (nil)))
(insn 64 61 65 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6374+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 1 dx [73]))
        ]) sim2fitman_sup.cpp:153 972 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 1 dx [73])
        (nil)))
(jump_insn 65 64 72 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) sim2fitman_sup.cpp:153 612 {*jcc_1}
     (nil)
 -> 68)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 72 65 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 72 67 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7e9ec94c00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:153 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 68)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 68 67 73 10 29 "" [1 uses])
(note 73 68 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 73 0 10 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:153 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void swapBytes(char*, int) (_Z9swapBytesPci, funcdef_no=7, decl_uid=5374, cgraph_uid=7)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 14
	 Choosing alt 0 in insn 14:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 23:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=89 from oldreg=64, assigning class GENERAL_REGS to r89
   23: {r89:SI=r89:SI-r78:SI;clobber flags:CC;}
      REG_DEAD r79:SI
      REG_DEAD r78:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:DI-0x1c]-[frame:DI-0x4]
    Inserting insn reload before:
   55: r89:SI=r79:SI
    Inserting insn reload after:
   56: r64:SI=r89:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 27
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 32:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=90 from oldreg=69, assigning class GENERAL_REGS to r90
   32: {r90:SI=r90:SI-r81:SI;clobber flags:CC;}
      REG_DEAD r82:SI
      REG_DEAD r81:SI
      REG_UNUSED flags:CC
      REG_EQUAL [frame:DI-0x1c]-[frame:DI-0x4]
    Inserting insn reload before:
   57: r90:SI=r82:SI
    Inserting insn reload after:
   58: r69:SI=r90:SI

          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 37:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 38:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 39:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 43:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
      Creating newreg=91 from oldreg=86, assigning class GENERAL_REGS to r91
   43: {r91:SI=r91:SI 0>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
   59: r91:SI=r85:SI
    Inserting insn reload after:
   60: r86:SI=r91:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 44
	 Choosing alt 0 in insn 44:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rm {*cmpsi_1}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 4
   Insn 49: point = 0
   Insn 48: point = 0
   Insn 46: point = 1
   Insn 45: point = 3
   Insn 44: point = 5
   Insn 60: point = 7
	Hard reg 1 is preferable by r91 with profit 1
   Insn 43: point = 9
   Insn 59: point = 9
   Insn 42: point = 10
  BB 2
   Insn 53: point = 11
   Insn 7: point = 11
   Insn 3: point = 11
   Insn 2: point = 11
  BB 3
   Insn 39: point = 11
   Insn 38: point = 11
   Insn 37: point = 12
   Insn 36: point = 13
   Insn 35: point = 15
   Insn 34: point = 16
   Insn 33: point = 18
   Insn 58: point = 20
	Hard reg 0 is preferable by r90 with profit 1
   Insn 32: point = 22
   Insn 57: point = 23
	Hard reg 0 is preferable by r90 with profit 1
	Hard reg 1 is preferable by r90 with profit 1
   Insn 31: point = 25
   Insn 30: point = 26
   Insn 29: point = 27
   Insn 28: point = 28
   Insn 27: point = 30
   Insn 26: point = 32
   Insn 25: point = 33
   Insn 24: point = 35
   Insn 56: point = 37
	Hard reg 0 is preferable by r89 with profit 1
   Insn 23: point = 39
   Insn 55: point = 40
	Hard reg 0 is preferable by r89 with profit 1
	Hard reg 2 is preferable by r89 with profit 1
   Insn 22: point = 42
   Insn 21: point = 43
   Insn 20: point = 44
   Insn 19: point = 46
   Insn 18: point = 47
   Insn 17: point = 49
   Insn 16: point = 50
   Insn 15: point = 51
   Insn 14: point = 53
   Insn 13: point = 55
   Insn 12: point = 56
   Insn 11: point = 58
 r59: [0..1]
 r60: [54..56]
 r61: [52..53]
 r62: [45..47]
 r63: [27..44]
 r64: [36..37]
 r65: [34..35]
 r66: [31..33]
 r67: [29..30]
 r68: [27..28]
 r69: [19..20]
 r70: [17..18]
 r71: [14..16]
 r72: [11..13]
 r73: [57..58]
 r74: [54..55]
 r75: [50..51]
 r76: [48..49]
 r77: [45..46]
 r78: [39..43]
 r79: [41..42]
 r80: [31..32]
 r81: [22..26]
 r82: [24..25]
 r83: [14..15]
 r84: [11..12]
 r85: [6..10]
 r86: [6..7]
 r87: [4..5]
 r88: [2..3]
 r89: [38..40]
 r90: [21..23]
 r91: [8..9]
Compressing live ranges: from 59 to 48 - 81%
Ranges after the compression:
 r59: [0..1]
 r60: [44..45]
 r61: [42..43]
 r62: [36..37]
 r63: [22..35]
 r64: [30..31]
 r65: [28..29]
 r66: [26..27]
 r67: [24..25]
 r68: [22..23]
 r69: [16..17]
 r70: [14..15]
 r71: [12..13]
 r72: [10..11]
 r73: [46..47]
 r74: [44..45]
 r75: [40..41]
 r76: [38..39]
 r77: [36..37]
 r78: [32..35]
 r79: [34..35]
 r80: [26..27]
 r81: [18..21]
 r82: [20..21]
 r83: [12..13]
 r84: [10..11]
 r85: [6..9]
 r86: [6..7]
 r87: [4..5]
 r88: [2..3]
 r89: [32..33]
 r90: [18..19]
 r91: [8..9]
	 Assigning to 89 (cl=GENERAL_REGS, orig=64, freq=3, tfirst=89, tfreq=3)...
	   Assign 2 to reload r89 (freq=3)
	 Assigning to 90 (cl=GENERAL_REGS, orig=69, freq=3, tfirst=90, tfreq=3)...
	   Assign 1 to reload r90 (freq=3)
	 Assigning to 91 (cl=GENERAL_REGS, orig=86, freq=3, tfirst=91, tfreq=3)...
	   Assign 1 to reload r91 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 46
changing reg in insn 48
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 20
changing reg in insn 20
changing reg in insn 29
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 36
changing reg in insn 36
changing reg in insn 38
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 22
changing reg in insn 26
changing reg in insn 30
changing reg in insn 32
changing reg in insn 31
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
starting the processing of deferred insns
ending the processing of deferred insns


void swapBytes(char*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={22d,22u} r1={12d,11u,3e} r2={5d,4u,1e} r4={1d,1u} r5={1d,1u} r6={1d,24u} r7={1d,5u} r17={13d,1u} r20={1d,1u,8e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 149{67d,70u,12e} in 46{46 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
        (reg:DI 5 di [ theVarChar ])) sim2fitman_sup.cpp:158 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ theVarChar ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) sim2fitman_sup.cpp:158 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 53 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:169 89 {*movsi_internal}
     (nil))
(jump_insn 53 7 54 2 (set (pc)
        (label_ref 40)) sim2fitman_sup.cpp:169 650 {jump}
     (nil)
 -> 40)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 54 53 47)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
(code_label 47 54 10 3 32 "" [1 uses])
(note 10 47 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 0 ax [73])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:170 89 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 1 dx [orig:60 D.6383 ] [60])
        (sign_extend:DI (reg:SI 0 ax [73]))) sim2fitman_sup.cpp:170 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [73])
        (nil)))
(insn 13 12 14 3 (set (reg/f:DI 0 ax [74])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:170 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.6384 ] [61])
                (plus:DI (reg/f:DI 0 ax [74])
                    (reg:DI 1 dx [orig:60 D.6383 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:170 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6383 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.6383 ] [60]))
                (nil)))))
(insn 15 14 16 3 (set (reg:QI 0 ax [75])
        (mem:QI (reg/f:DI 0 ax [orig:61 D.6384 ] [61]) [0 *_7+0 S1 A8])) sim2fitman_sup.cpp:170 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6384 ] [61])
        (nil)))
(insn 16 15 17 3 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -5 [0xfffffffffffffffb])) [0 tempChar+0 S1 A8])
        (reg:QI 0 ax [75])) sim2fitman_sup.cpp:170 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [75])
        (nil)))
(insn 17 16 18 3 (set (reg:SI 0 ax [76])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:171 89 {*movsi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:DI 1 dx [orig:62 D.6383 ] [62])
        (sign_extend:DI (reg:SI 0 ax [76]))) sim2fitman_sup.cpp:171 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [76])
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [77])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:171 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 3 (parallel [
            (set (reg/f:DI 1 dx [orig:63 D.6384 ] [63])
                (plus:DI (reg:DI 1 dx [orig:62 D.6383 ] [62])
                    (reg/f:DI 0 ax [77])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [77])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.6383 ] [62])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                    (reg:DI 1 dx [orig:62 D.6383 ] [62]))
                (nil)))))
(insn 21 20 22 3 (set (reg:SI 0 ax [78])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:171 89 {*movsi_internal}
     (nil))
(insn 22 21 55 3 (set (reg:SI 2 cx [79])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:171 89 {*movsi_internal}
     (nil))
(insn 55 22 23 3 (set (reg:SI 2 cx [orig:64 D.6382 ] [64])
        (reg:SI 2 cx [79])) sim2fitman_sup.cpp:171 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [79])
        (nil)))
(insn 23 55 56 3 (parallel [
            (set (reg:SI 2 cx [orig:64 D.6382 ] [64])
                (minus:SI (reg:SI 2 cx [orig:64 D.6382 ] [64])
                    (reg:SI 0 ax [78])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [78])
        (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
                (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))
            (nil))))
(insn 56 23 24 3 (set (reg:SI 0 ax [orig:64 D.6382 ] [64])
        (reg:SI 2 cx [orig:64 D.6382 ] [64])) sim2fitman_sup.cpp:171 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:64 D.6382 ] [64])
        (nil)))
(insn 24 56 25 3 (set (reg:DI 0 ax [orig:65 D.6383 ] [65])
        (sign_extend:DI (reg:SI 0 ax [orig:64 D.6382 ] [64]))) sim2fitman_sup.cpp:171 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6382 ] [64])
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 2 cx [orig:66 D.6383 ] [66])
                (plus:DI (reg:DI 0 ax [orig:65 D.6383 ] [65])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.6383 ] [65])
        (nil)))
(insn 26 25 27 3 (set (reg/f:DI 0 ax [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:171 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 3 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.6384 ] [67])
                (plus:DI (reg/f:DI 0 ax [80])
                    (reg:DI 2 cx [orig:66 D.6383 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:171 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:66 D.6383 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                    (reg:DI 2 cx [orig:66 D.6383 ] [66]))
                (nil)))))
(insn 28 27 29 3 (set (reg:QI 0 ax [orig:68 D.6385 ] [68])
        (mem:QI (reg/f:DI 0 ax [orig:67 D.6384 ] [67]) [0 *_14+0 S1 A8])) sim2fitman_sup.cpp:171 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6384 ] [67])
        (nil)))
(insn 29 28 30 3 (set (mem:QI (reg/f:DI 1 dx [orig:63 D.6384 ] [63]) [0 *_10+0 S1 A8])
        (reg:QI 0 ax [orig:68 D.6385 ] [68])) sim2fitman_sup.cpp:171 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:68 D.6385 ] [68])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:63 D.6384 ] [63])
            (nil))))
(insn 30 29 31 3 (set (reg:SI 0 ax [81])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:172 89 {*movsi_internal}
     (nil))
(insn 31 30 57 3 (set (reg:SI 1 dx [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:172 89 {*movsi_internal}
     (nil))
(insn 57 31 32 3 (set (reg:SI 1 dx [orig:69 D.6382 ] [69])
        (reg:SI 1 dx [82])) sim2fitman_sup.cpp:172 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [82])
        (nil)))
(insn 32 57 58 3 (parallel [
            (set (reg:SI 1 dx [orig:69 D.6382 ] [69])
                (minus:SI (reg:SI 1 dx [orig:69 D.6382 ] [69])
                    (reg:SI 0 ax [81])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [81])
        (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
                (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))
            (nil))))
(insn 58 32 33 3 (set (reg:SI 0 ax [orig:69 D.6382 ] [69])
        (reg:SI 1 dx [orig:69 D.6382 ] [69])) sim2fitman_sup.cpp:172 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:69 D.6382 ] [69])
        (nil)))
(insn 33 58 34 3 (set (reg:DI 0 ax [orig:70 D.6383 ] [70])
        (sign_extend:DI (reg:SI 0 ax [orig:69 D.6382 ] [69]))) sim2fitman_sup.cpp:172 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 D.6382 ] [69])
        (nil)))
(insn 34 33 35 3 (parallel [
            (set (reg:DI 1 dx [orig:71 D.6383 ] [71])
                (plus:DI (reg:DI 0 ax [orig:70 D.6383 ] [70])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:70 D.6383 ] [70])
        (nil)))
(insn 35 34 36 3 (set (reg/f:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])) sim2fitman_sup.cpp:172 87 {*movdi_internal_rex64}
     (nil))
(insn 36 35 37 3 (parallel [
            (set (reg/f:DI 1 dx [orig:72 D.6384 ] [72])
                (plus:DI (reg:DI 1 dx [orig:71 D.6383 ] [71])
                    (reg/f:DI 0 ax [83])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:172 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [83])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:71 D.6383 ] [71])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 theVarChar+0 S8 A64])
                    (reg:DI 1 dx [orig:71 D.6383 ] [71]))
                (nil)))))
(insn 37 36 38 3 (set (reg:QI 0 ax [84])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -5 [0xfffffffffffffffb])) [0 tempChar+0 S1 A8])) sim2fitman_sup.cpp:172 91 {*movqi_internal}
     (nil))
(insn 38 37 39 3 (set (mem:QI (reg/f:DI 1 dx [orig:72 D.6384 ] [72]) [0 *_19+0 S1 A8])
        (reg:QI 0 ax [84])) sim2fitman_sup.cpp:172 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [84])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:72 D.6384 ] [72])
            (nil))))
(insn 39 38 40 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 85 86 87 88
(code_label 40 39 41 4 31 "" [1 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 59 4 (set (reg:SI 0 ax [85])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) sim2fitman_sup.cpp:169 89 {*movsi_internal}
     (nil))
(insn 59 42 43 4 (set (reg:SI 1 dx [86])
        (reg:SI 0 ax [85])) sim2fitman_sup.cpp:169 89 {*movsi_internal}
     (nil))
(insn 43 59 60 4 (parallel [
            (set (reg:SI 1 dx [86])
                (lshiftrt:SI (reg:SI 1 dx [86])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 545 {*lshrsi3_1}
     (nil))
(insn 60 43 44 4 (set (reg:SI 1 dx [86])
        (reg:SI 1 dx [86])) sim2fitman_sup.cpp:169 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [86])
        (nil)))
(insn 44 60 45 4 (parallel [
            (set (reg:SI 0 ax [87])
                (plus:SI (reg:SI 0 ax [85])
                    (reg:SI 1 dx [86])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [86])
        (expr_list:REG_DEAD (reg:SI 0 ax [85])
            (nil))))
(insn 45 44 46 4 (parallel [
            (set (reg:SI 0 ax [88])
                (ashiftrt:SI (reg:SI 0 ax [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:169 546 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [87])
        (nil)))
(insn 46 45 48 4 (set (reg:SI 0 ax [orig:59 D.6382 ] [59])
        (reg:SI 0 ax [88])) sim2fitman_sup.cpp:169 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [88])
        (nil)))
(insn 48 46 49 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:59 D.6382 ] [59])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) sim2fitman_sup.cpp:169 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6382 ] [59])
        (nil)))
(jump_insn 49 48 50 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) sim2fitman_sup.cpp:169 612 {*jcc_1}
     (nil)
 -> 47)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 50 49 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool promptYN() (_Z8promptYNv, funcdef_no=8, decl_uid=5375, cgraph_uid=8)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 46
changing reg in insn 41
changing reg in insn 62
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 23
changing reg in insn 35
changing reg in insn 33
changing reg in insn 28
changing reg in insn 26
changing reg in insn 24
changing reg in insn 62
changing reg in insn 66
starting the processing of deferred insns
ending the processing of deferred insns


bool promptYN()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={17d,17u} r1={6d} r2={6d} r4={6d} r5={11d,5u} r6={1d,18u} r7={1d,19u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={11d,6u} r18={5d} r19={5d} r20={1d,1u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 326{260d,66u,0e} in 41{36 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 57 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              13 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61
(code_label 57 2 4 3 40 "" [1 uses])
(note 4 57 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7e9ecb5a18 *.LC11>)) sim2fitman_sup.cpp:192 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:192 91 {*movqi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:192 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 3 (set (reg/f:DI 0 ax [orig:60 stdin.2 ] [60])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f7e9ef60688 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:193 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:60 stdin.2 ] [60])) sim2fitman_sup.cpp:193 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 stdin.2 ] [60])
        (nil)))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f7e9ef41e00 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:193 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:SI 0 ax [orig:61 D.6387 ] [61])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:193 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 19 3 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8])
        (reg:QI 0 ax [orig:61 D.6387 ] [61])) sim2fitman_sup.cpp:193 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6387 ] [61])
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              4 (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63
(code_label 19 12 13 4 34 "" [1 uses])
(note 13 19 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 0 ax [orig:62 stdin.3 ] [62])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f7e9ef60688 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:195 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:62 stdin.3 ] [62])) sim2fitman_sup.cpp:195 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 stdin.3 ] [62])
        (nil)))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f7e9ef41e00 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:195 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 4 (set (reg:SI 0 ax [orig:63 D.6387 ] [63])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:195 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 20 4 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
        (reg:QI 0 ax [orig:63 D.6387 ] [63])) sim2fitman_sup.cpp:195 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.6387 ] [63])
        (nil)))
(insn 20 18 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
            (const_int 10 [0xa]))) sim2fitman_sup.cpp:194 5 {*cmpqi_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) sim2fitman_sup.cpp:194 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       4 (DFS_BACK)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 0 ax [orig:64 D.6387 ] [64])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8]))) sim2fitman_sup.cpp:198 155 {extendqisi2}
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.6387 ] [64])
            (const_int 89 [0x59]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 25 24 71 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 39)
;;  succ:       11
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags]
(note 71 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 71 27 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:64 D.6387 ] [64])
            (const_int 89 [0x59]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 27 26 72 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 32)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags]
(note 72 27 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 72 29 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.6387 ] [64])
            (const_int 78 [0x4e]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6387 ] [64])
        (nil)))
(jump_insn 29 28 79 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
;;  succ:       12
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 79 29 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 49)) sim2fitman_sup.cpp:198 650 {jump}
     (nil)
 -> 49)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 81 80 32)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags]
(code_label 32 81 74 9 37 "" [1 uses])
(note 74 32 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 74 34 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.6387 ] [64])
            (const_int 110 [0x6e]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (nil))
(jump_insn 34 33 75 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
;;  succ:       12
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 64
;; lr  def 	 17 [flags]
(note 75 34 35 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 35 75 36 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:64 D.6387 ] [64])
            (const_int 121 [0x79]))) sim2fitman_sup.cpp:198 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6387 ] [64])
        (nil)))
(jump_insn 36 35 39 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) sim2fitman_sup.cpp:198 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 49)
;;  succ:       11 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 39 36 40 11 36 "" [1 uses])
(note 40 39 41 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 82 11 (set (reg:QI 0 ax [orig:59 D.6386 ] [59])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:201 91 {*movqi_internal}
     (nil))
(jump_insn 82 41 83 11 (set (pc)
        (label_ref 60)) sim2fitman_sup.cpp:201 650 {jump}
     (nil)
 -> 60)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 83 82 44)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              9
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 44 83 45 12 38 "" [2 uses])
(note 45 44 46 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 84 12 (set (reg:QI 0 ax [orig:59 D.6386 ] [59])
        (const_int 0 [0])) sim2fitman_sup.cpp:205 91 {*movqi_internal}
     (nil))
(jump_insn 84 46 85 12 (set (pc)
        (label_ref 60)) sim2fitman_sup.cpp:205 650 {jump}
     (nil)
 -> 60)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 85 84 49)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              8 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 49 85 50 13 35 "" [2 uses])
(note 50 49 51 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7e9ecb5ab0 *.LC12>)) sim2fitman_sup.cpp:208 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:208 91 {*movqi_internal}
     (nil))
(call_insn 53 52 54 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:208 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 54 53 55 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7e9ecb5b48 *.LC13>)) sim2fitman_sup.cpp:209 87 {*movdi_internal_rex64}
     (nil))
(call_insn 55 54 78 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:209 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 78 55 86 13 (const_int 0 [0]) sim2fitman_sup.cpp:210 676 {nop}
     (nil))
(jump_insn 86 78 87 13 (set (pc)
        (label_ref 57)) sim2fitman_sup.cpp:212 650 {jump}
     (nil)
 -> 57)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 87 86 60)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%] 
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 65
(code_label 60 87 61 14 39 "" [2 uses])
(note 61 60 62 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 66 14 (set (reg:QI 0 ax [orig:65 <retval> ] [65])
        (reg:QI 0 ax [orig:59 D.6386 ] [59])) 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:59 D.6386 ] [59])
        (nil)))
(insn 66 62 69 14 (set (reg/i:QI 0 ax)
        (reg:QI 0 ax [orig:65 <retval> ] [65])) sim2fitman_sup.cpp:213 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:65 <retval> ] [65])
        (nil)))
(insn 69 66 0 14 (use (reg/i:QI 0 ax)) sim2fitman_sup.cpp:213 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int promptSUBN() (_Z10promptSUBNv, funcdef_no=9, decl_uid=5376, cgraph_uid=9)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) m  (1) qn {*movqi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 24:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rw {*tablejump_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 46
changing reg in insn 41
changing reg in insn 36
changing reg in insn 62
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 23
changing reg in insn 24
changing reg in insn 62
changing reg in insn 66
changing reg in insn 24
changing reg in insn 27
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
starting the processing of deferred insns
ending the processing of deferred insns


int promptSUBN()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={21d,17u} r1={6d} r2={6d} r4={6d} r5={11d,5u} r6={1d,15u} r7={1d,16u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={8d,2u} r18={5d} r19={5d} r20={1d,1u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} 
;;    total ref usage 317{261d,56u,0e} in 38{33 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 57 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              10 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 60 61
(code_label 57 2 4 3 49 "" [1 uses])
(note 4 57 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 4 6 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7e9ecc1850 *.LC14>)) sim2fitman_sup.cpp:223 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:223 91 {*movqi_internal}
     (nil))
(call_insn 7 6 8 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:223 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 8 7 9 3 (set (reg/f:DI 0 ax [orig:60 stdin.4 ] [60])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f7e9ef60688 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:224 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:60 stdin.4 ] [60])) sim2fitman_sup.cpp:224 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 stdin.4 ] [60])
        (nil)))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f7e9ef41e00 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:224 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:SI 0 ax [orig:61 D.6392 ] [61])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:224 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 12 11 19 3 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8])
        (reg:QI 0 ax [orig:61 D.6392 ] [61])) sim2fitman_sup.cpp:224 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6392 ] [61])
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              4 (DFS_BACK)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63
(code_label 19 12 13 4 42 "" [1 uses])
(note 13 19 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 0 ax [orig:62 stdin.5 ] [62])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f7e9ef60688 stdin>) [0 stdin+0 S8 A64])) sim2fitman_sup.cpp:226 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:62 stdin.5 ] [62])) sim2fitman_sup.cpp:226 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 stdin.5 ] [62])
        (nil)))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f7e9ef41e00 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:226 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 4 (set (reg:SI 0 ax [orig:63 D.6392 ] [63])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:226 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 18 17 20 4 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
        (reg:QI 0 ax [orig:63 D.6392 ] [63])) sim2fitman_sup.cpp:226 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.6392 ] [63])
        (nil)))
(insn 20 18 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -1 [0xffffffffffffffff])) [0 junk+0 S1 A8])
            (const_int 10 [0xa]))) sim2fitman_sup.cpp:225 5 {*cmpqi_1}
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) sim2fitman_sup.cpp:225 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       4 (DFS_BACK)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 64 66
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 0 ax [orig:64 D.6392 ] [64])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -2 [0xfffffffffffffffe])) [0 option+0 S1 A8]))) sim2fitman_sup.cpp:229 155 {extendqisi2}
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:SI 0 ax [66])
                (plus:SI (reg:SI 0 ax [orig:64 D.6392 ] [64])
                    (const_int -78 [0xffffffffffffffb2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:229 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6392 ] [64])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 5 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [66])
            (const_int 39 [0x27]))) sim2fitman_sup.cpp:229 7 {*cmpsi_1}
     (nil))
(jump_insn 26 25 71 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) sim2fitman_sup.cpp:229 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 49)
;;  succ:       10
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 66
;; lr  def 	 67 68
(note 71 26 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 71 28 6 (set (reg:DI 0 ax [67])
        (zero_extend:DI (reg:SI 0 ax [66]))) sim2fitman_sup.cpp:229 139 {*zero_extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [66])
        (nil)))
(insn 28 27 29 6 (set (reg:DI 0 ax [68])
        (mem/u/c:DI (plus:DI (mult:DI (reg:DI 0 ax [67])
                    (const_int 8 [0x8]))
                (label_ref:DI 31)) [0  S8 A8])) sim2fitman_sup.cpp:229 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (insn_list:REG_LABEL_OPERAND 31 (nil))))
(jump_insn 29 28 30 6 (parallel [
            (set (pc)
                (reg:DI 0 ax [68]))
            (use (label_ref 31))
        ]) sim2fitman_sup.cpp:229 654 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil))
 -> 31)
;;  succ:       10
;;              9
;;              7
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 31)
;; Insn is not within a basic block
(code_label 31 30 32 45 "" [2 uses])
;; Insn is not within a basic block
(jump_insn 32 31 33 (addr_vec:DI [
            (label_ref:DI 44)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 34)
            (label_ref:DI 49)
            (label_ref:DI 39)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 44)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 49)
            (label_ref:DI 34)
            (label_ref:DI 49)
            (label_ref:DI 39)
        ]) sim2fitman_sup.cpp:229 -1
     (nil))
(barrier 33 32 34)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 34 33 35 7 46 "" [2 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 74 7 (set (reg:SI 0 ax [orig:59 D.6392 ] [59])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:232 89 {*movsi_internal}
     (nil))
(jump_insn 74 36 75 7 (set (pc)
        (label_ref 60)) sim2fitman_sup.cpp:232 650 {jump}
     (nil)
 -> 60)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 75 74 39)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 39 75 40 8 47 "" [2 uses])
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 76 8 (set (reg:SI 0 ax [orig:59 D.6392 ] [59])
        (const_int 2 [0x2])) sim2fitman_sup.cpp:236 89 {*movsi_internal}
     (nil))
(jump_insn 76 41 77 8 (set (pc)
        (label_ref 60)) sim2fitman_sup.cpp:236 650 {jump}
     (nil)
 -> 60)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 77 76 44)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 59
(code_label 44 77 45 9 44 "" [2 uses])
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 78 9 (set (reg:SI 0 ax [orig:59 D.6392 ] [59])
        (const_int -1 [0xffffffffffffffff])) sim2fitman_sup.cpp:240 89 {*movsi_internal}
     (nil))
(jump_insn 78 46 79 9 (set (pc)
        (label_ref 60)) sim2fitman_sup.cpp:240 650 {jump}
     (nil)
 -> 60)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59

(barrier 79 78 49)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              5
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 49 79 50 10 43 "" [35 uses])
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7e9ecb5ab0 *.LC12>)) sim2fitman_sup.cpp:243 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:243 91 {*movqi_internal}
     (nil))
(call_insn 53 52 54 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:243 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (nil))))
(insn 54 53 55 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7e9ecc18e8 *.LC15>)) sim2fitman_sup.cpp:244 87 {*movdi_internal_rex64}
     (nil))
(call_insn 55 54 73 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:244 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 73 55 80 10 (const_int 0 [0]) sim2fitman_sup.cpp:245 676 {nop}
     (nil))
(jump_insn 80 73 81 10 (set (pc)
        (label_ref 57)) sim2fitman_sup.cpp:247 650 {jump}
     (nil)
 -> 57)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 81 80 60)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;;              7 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 59
;; lr  def 	 0 [ax] 65
(code_label 60 81 61 11 48 "" [3 uses])
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 66 11 (set (reg:SI 0 ax [orig:65 <retval> ] [65])
        (reg:SI 0 ax [orig:59 D.6392 ] [59])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.6392 ] [59])
        (nil)))
(insn 66 62 69 11 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:65 <retval> ] [65])) sim2fitman_sup.cpp:248 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 <retval> ] [65])
        (nil)))
(insn 69 66 0 11 (use (reg/i:SI 0 ax)) sim2fitman_sup.cpp:248 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void init(Data_file_header*, Data_block_header*, Procpar_info*, Preprocess*, IOFiles*, InFile_struct*) (_Z4initP16Data_file_headerP17Data_block_headerP12Procpar_infoP10PreprocessP7IOFilesP13InFile_struct, funcdef_no=10, decl_uid=5387, cgraph_uid=10)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 17:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=513 from oldreg=60, assigning class GENERAL_REGS to r513
   17: {r513:DI=r513:DI<<0x9;clobber flags:CC;}
      REG_DEAD r59:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  775: r513:DI=r59:DI
    Inserting insn reload after:
  776: r60:DI=r513:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 24:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=514 from oldreg=63, assigning class GENERAL_REGS to r514
   24: {r514:DI=r514:DI<<0x9;clobber flags:CC;}
      REG_DEAD r62:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  777: r514:DI=r62:DI
    Inserting insn reload after:
  778: r63:DI=r514:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 31:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=515 from oldreg=66, assigning class GENERAL_REGS to r515
   31: {r515:DI=r515:DI<<0x9;clobber flags:CC;}
      REG_DEAD r65:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  779: r515:DI=r65:DI
    Inserting insn reload after:
  780: r66:DI=r515:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 33
	 Choosing alt 0 in insn 33:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 37:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=516 from oldreg=69, assigning class GENERAL_REGS to r516
   37: {r516:DI=r516:DI<<0x9;clobber flags:CC;}
      REG_DEAD r68:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  781: r516:DI=r68:DI
    Inserting insn reload after:
  782: r69:DI=r516:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 39
	 Choosing alt 0 in insn 39:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 43:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=517 from oldreg=72, assigning class GENERAL_REGS to r517
   43: {r517:DI=r517:DI<<0x9;clobber flags:CC;}
      REG_DEAD r71:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  783: r517:DI=r71:DI
    Inserting insn reload after:
  784: r72:DI=r517:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 47:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 50:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=518 from oldreg=75, assigning class GENERAL_REGS to r518
   50: {r518:DI=r518:DI<<0x9;clobber flags:CC;}
      REG_DEAD r74:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  785: r518:DI=r74:DI
    Inserting insn reload after:
  786: r75:DI=r518:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 54:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=519 from oldreg=78, assigning class GENERAL_REGS to r519
   57: {r519:DI=r519:DI<<0x9;clobber flags:CC;}
      REG_DEAD r77:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  787: r519:DI=r77:DI
    Inserting insn reload after:
  788: r78:DI=r519:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 61:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 64:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=520 from oldreg=81, assigning class GENERAL_REGS to r520
   64: {r520:DI=r520:DI<<0x9;clobber flags:CC;}
      REG_DEAD r80:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  789: r520:DI=r80:DI
    Inserting insn reload after:
  790: r81:DI=r520:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 68:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 71:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=521 from oldreg=84, assigning class GENERAL_REGS to r521
   71: {r521:DI=r521:DI<<0x9;clobber flags:CC;}
      REG_DEAD r83:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  791: r521:DI=r83:DI
    Inserting insn reload after:
  792: r84:DI=r521:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 75:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 78:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=522 from oldreg=87, assigning class GENERAL_REGS to r522
   78: {r522:DI=r522:DI<<0x9;clobber flags:CC;}
      REG_DEAD r86:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  793: r522:DI=r86:DI
    Inserting insn reload after:
  794: r87:DI=r522:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 85:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=523 from oldreg=90, assigning class GENERAL_REGS to r523
   85: {r523:DI=r523:DI<<0x9;clobber flags:CC;}
      REG_DEAD r89:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  795: r523:DI=r89:DI
    Inserting insn reload after:
  796: r90:DI=r523:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 89:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 92:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=524 from oldreg=93, assigning class GENERAL_REGS to r524
   92: {r524:DI=r524:DI<<0x9;clobber flags:CC;}
      REG_DEAD r92:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  797: r524:DI=r92:DI
    Inserting insn reload after:
  798: r93:DI=r524:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 96:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 99:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=525 from oldreg=96, assigning class GENERAL_REGS to r525
   99: {r525:DI=r525:DI<<0x9;clobber flags:CC;}
      REG_DEAD r95:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  799: r525:DI=r95:DI
    Inserting insn reload after:
  800: r96:DI=r525:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 103:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 106:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=526 from oldreg=99, assigning class GENERAL_REGS to r526
  106: {r526:DI=r526:DI<<0x9;clobber flags:CC;}
      REG_DEAD r98:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  801: r526:DI=r98:DI
    Inserting insn reload after:
  802: r99:DI=r526:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 110:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 113:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=527 from oldreg=102, assigning class GENERAL_REGS to r527
  113: {r527:DI=r527:DI<<0x9;clobber flags:CC;}
      REG_DEAD r101:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  803: r527:DI=r101:DI
    Inserting insn reload after:
  804: r102:DI=r527:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 120:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=528 from oldreg=105, assigning class GENERAL_REGS to r528
  120: {r528:DI=r528:DI<<0x9;clobber flags:CC;}
      REG_DEAD r104:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  805: r528:DI=r104:DI
    Inserting insn reload after:
  806: r105:DI=r528:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 123:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 124:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 127:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=529 from oldreg=108, assigning class GENERAL_REGS to r529
  127: {r529:DI=r529:DI<<0x9;clobber flags:CC;}
      REG_DEAD r107:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  807: r529:DI=r107:DI
    Inserting insn reload after:
  808: r108:DI=r529:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 130:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 131:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 134:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=530 from oldreg=111, assigning class GENERAL_REGS to r530
  134: {r530:DI=r530:DI<<0x9;clobber flags:CC;}
      REG_DEAD r110:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  809: r530:DI=r110:DI
    Inserting insn reload after:
  810: r111:DI=r530:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 136
	 Choosing alt 0 in insn 136:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 144:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=531 from oldreg=115, assigning class GENERAL_REGS to r531
  144: {r531:DI=r531:DI<<0x9;clobber flags:CC;}
      REG_DEAD r114:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  811: r531:DI=r114:DI
    Inserting insn reload after:
  812: r115:DI=r531:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 149:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 150:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 165:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=532 from oldreg=119, assigning class GENERAL_REGS to r532
  165: {r532:DI=r532:DI<<0x9;clobber flags:CC;}
      REG_DEAD r118:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  813: r532:DI=r118:DI
    Inserting insn reload after:
  814: r119:DI=r532:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 170:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 171:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 182:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=533 from oldreg=122, assigning class GENERAL_REGS to r533
  182: {r533:DI=r533:DI<<0x9;clobber flags:CC;}
      REG_DEAD r121:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  815: r533:DI=r121:DI
    Inserting insn reload after:
  816: r122:DI=r533:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 0 in insn 184:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 185:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 186:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=534, assigning class GENERAL_REGS to r534
  186: r534:DI=0x2065746144206f4e
    Inserting insn reload after:
  817: [r124:DI]=r534:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 817:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 187:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=535, assigning class GENERAL_REGS to r535
  187: r535:DI=0x6c62616c69617641
    Inserting insn reload after:
  818: [r124:DI+0x8]=r535:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 818:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 188:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 195:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=536 from oldreg=127, assigning class GENERAL_REGS to r536
  195: {r536:DI=r536:DI<<0x9;clobber flags:CC;}
      REG_DEAD r126:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  819: r536:DI=r126:DI
    Inserting insn reload after:
  820: r127:DI=r536:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 200:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 201:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 212:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=537 from oldreg=130, assigning class GENERAL_REGS to r537
  212: {r537:DI=r537:DI<<0x9;clobber flags:CC;}
      REG_DEAD r129:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  821: r537:DI=r129:DI
    Inserting insn reload after:
  822: r130:DI=r537:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 214
	 Choosing alt 0 in insn 214:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 215:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 216:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=538, assigning class GENERAL_REGS to r538
  216: r538:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  823: [r132:DI]=r538:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 823:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 217:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=539, assigning class GENERAL_REGS to r539
  217: r539:DI=0x6961764120656d61
    Inserting insn reload after:
  824: [r132:DI+0x8]=r539:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 824:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 219:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 226:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=540 from oldreg=135, assigning class GENERAL_REGS to r540
  226: {r540:DI=r540:DI<<0x9;clobber flags:CC;}
      REG_DEAD r134:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  825: r540:DI=r134:DI
    Inserting insn reload after:
  826: r135:DI=r540:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 227:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 231:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 232:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 243:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=541 from oldreg=138, assigning class GENERAL_REGS to r541
  243: {r541:DI=r541:DI<<0x9;clobber flags:CC;}
      REG_DEAD r137:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  827: r541:DI=r137:DI
    Inserting insn reload after:
  828: r138:DI=r541:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 245
	 Choosing alt 0 in insn 245:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 246:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 247:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=542, assigning class GENERAL_REGS to r542
  247: r542:DI=0x6970736f48206f4e
    Inserting insn reload after:
  829: [r140:DI]=r542:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 829:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 248:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=543, assigning class GENERAL_REGS to r543
  248: r543:DI=0x656d614e206c6174
    Inserting insn reload after:
  830: [r140:DI+0x8]=r543:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 830:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 249:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=544, assigning class GENERAL_REGS to r544
  249: r544:DI=0x62616c6961764120
    Inserting insn reload after:
  831: [r140:DI+0x10]=r544:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 831:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 250:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 251:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 258:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=545 from oldreg=143, assigning class GENERAL_REGS to r545
  258: {r545:DI=r545:DI<<0x9;clobber flags:CC;}
      REG_DEAD r142:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  832: r545:DI=r142:DI
    Inserting insn reload after:
  833: r143:DI=r545:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 259:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 263:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 264:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 275:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=546 from oldreg=146, assigning class GENERAL_REGS to r546
  275: {r546:DI=r546:DI<<0x9;clobber flags:CC;}
      REG_DEAD r145:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  834: r546:DI=r145:DI
    Inserting insn reload after:
  835: r146:DI=r546:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 277
	 Choosing alt 0 in insn 277:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 278:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 279:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=547, assigning class GENERAL_REGS to r547
  279: r547:DI=0x6569746150206f4e
    Inserting insn reload after:
  836: [r148:DI]=r547:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 836:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 280:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=548, assigning class GENERAL_REGS to r548
  280: r548:DI=0x20656d614e20746e
    Inserting insn reload after:
  837: [r148:DI+0x8]=r548:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 837:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 281:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=549, assigning class GENERAL_REGS to r549
  281: r549:DI=0x6c62616c69617641
    Inserting insn reload after:
  838: [r148:DI+0x10]=r549:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 838:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 282:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 289:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=550 from oldreg=151, assigning class GENERAL_REGS to r550
  289: {r550:DI=r550:DI<<0x9;clobber flags:CC;}
      REG_DEAD r150:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  839: r550:DI=r150:DI
    Inserting insn reload after:
  840: r151:DI=r550:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 294:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 295:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 301:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 306:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=551 from oldreg=154, assigning class GENERAL_REGS to r551
  306: {r551:DI=r551:DI<<0x9;clobber flags:CC;}
      REG_DEAD r153:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  841: r551:DI=r153:DI
    Inserting insn reload after:
  842: r154:DI=r551:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 308
	 Choosing alt 0 in insn 308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 309:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 310:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=552, assigning class GENERAL_REGS to r552
  310: r552:DI=0x65736c7550206f4e
    Inserting insn reload after:
  843: [r156:DI]=r552:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 843:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 311:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=553, assigning class GENERAL_REGS to r553
  311: r553:DI=0x636e657571655320
    Inserting insn reload after:
  844: [r156:DI+0x8]=r553:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 844:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 312:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=554, assigning class GENERAL_REGS to r554
  312: r554:DI=0x4120656d614e2065
    Inserting insn reload after:
  845: [r156:DI+0x10]=r554:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 845:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 313:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=555, assigning class GENERAL_REGS to r555
  313: r555:DI=0x656c62616c696176
    Inserting insn reload after:
  846: [r156:DI+0x18]=r555:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 846:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 314:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 316:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 326
	 Choosing alt 0 in insn 326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 329:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 340:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 341:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 353
	 Choosing alt 0 in insn 353:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 354:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 356:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 365:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 366
	 Choosing alt 0 in insn 366:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 367:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 369:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 375:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 379
	 Choosing alt 0 in insn 379:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 392
	 Choosing alt 0 in insn 392:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 395:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 405
	 Choosing alt 0 in insn 405:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 406:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 408:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 417:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 419:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 420:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 422:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 432
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 433:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 444:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 445
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 446:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 457:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 458
	 Choosing alt 0 in insn 458:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 459:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 471
	 Choosing alt 0 in insn 471:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 472:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 474:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 486:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 488:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 497:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 498
	 Choosing alt 0 in insn 498:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 499:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 510:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 511
	 Choosing alt 0 in insn 511:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 512:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 514:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 523:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 524
	 Choosing alt 0 in insn 524:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 525:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 527:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 536:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 537
	 Choosing alt 0 in insn 537:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 540:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 542:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 549:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 550
	 Choosing alt 0 in insn 550:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 551:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 552:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 554:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=556 from oldreg=212, assigning class GENERAL_REGS to r556
  554: {r556:DI=r556:DI<<0x6;clobber flags:CC;}
      REG_DEAD r211:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  847: r556:DI=r211:DI
    Inserting insn reload after:
  848: r212:DI=r556:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 555:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 556
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 557:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 559:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 560:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=557 from oldreg=215, assigning class GENERAL_REGS to r557
  560: {r557:DI=r557:DI<<0x6;clobber flags:CC;}
      REG_DEAD r214:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  849: r557:DI=r214:DI
    Inserting insn reload after:
  850: r215:DI=r557:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 561:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 562
	 Choosing alt 0 in insn 562:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 563:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 565:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 566:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=558 from oldreg=218, assigning class GENERAL_REGS to r558
  566: {r558:DI=r558:DI<<0x6;clobber flags:CC;}
      REG_DEAD r217:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  851: r558:DI=r217:DI
    Inserting insn reload after:
  852: r218:DI=r558:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 567:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 568
	 Choosing alt 0 in insn 568:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 569:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 572:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=559 from oldreg=221, assigning class GENERAL_REGS to r559
  572: {r559:DI=r559:DI<<0x6;clobber flags:CC;}
      REG_DEAD r220:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  853: r559:DI=r220:DI
    Inserting insn reload after:
  854: r221:DI=r559:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 573:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 574
	 Choosing alt 0 in insn 574:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 575:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 577:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 578:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=560 from oldreg=224, assigning class GENERAL_REGS to r560
  578: {r560:DI=r560:DI<<0x6;clobber flags:CC;}
      REG_DEAD r223:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  855: r560:DI=r223:DI
    Inserting insn reload after:
  856: r224:DI=r560:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 580
	 Choosing alt 0 in insn 580:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 581:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 584:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=561 from oldreg=227, assigning class GENERAL_REGS to r561
  584: {r561:DI=r561:DI<<0x6;clobber flags:CC;}
      REG_DEAD r226:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  857: r561:DI=r226:DI
    Inserting insn reload after:
  858: r227:DI=r561:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 585:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 586
	 Choosing alt 0 in insn 586:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 587:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 588:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 590:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=562 from oldreg=230, assigning class GENERAL_REGS to r562
  590: {r562:DI=r562:DI<<0x6;clobber flags:CC;}
      REG_DEAD r229:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  859: r562:DI=r229:DI
    Inserting insn reload after:
  860: r230:DI=r562:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 591:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 592
	 Choosing alt 0 in insn 592:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 593:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 596:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=563 from oldreg=233, assigning class GENERAL_REGS to r563
  596: {r563:DI=r563:DI<<0x6;clobber flags:CC;}
      REG_DEAD r232:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  861: r563:DI=r232:DI
    Inserting insn reload after:
  862: r233:DI=r563:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 597:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 598
	 Choosing alt 0 in insn 598:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 599:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 602:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=564 from oldreg=236, assigning class GENERAL_REGS to r564
  602: {r564:DI=r564:DI<<0x6;clobber flags:CC;}
      REG_DEAD r235:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  863: r564:DI=r235:DI
    Inserting insn reload after:
  864: r236:DI=r564:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 603:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 604
	 Choosing alt 0 in insn 604:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 605:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 608:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=565 from oldreg=239, assigning class GENERAL_REGS to r565
  608: {r565:DI=r565:DI<<0x5;clobber flags:CC;}
      REG_DEAD r238:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  865: r565:DI=r238:DI
    Inserting insn reload after:
  866: r239:DI=r565:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 610
	 Choosing alt 0 in insn 610:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 611:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 614:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=566 from oldreg=242, assigning class GENERAL_REGS to r566
  614: {r566:DI=r566:DI<<0x5;clobber flags:CC;}
      REG_DEAD r241:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  867: r566:DI=r241:DI
    Inserting insn reload after:
  868: r242:DI=r566:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 616
	 Choosing alt 0 in insn 616:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 617:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 620:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=567 from oldreg=245, assigning class GENERAL_REGS to r567
  620: {r567:DI=r567:DI<<0x5;clobber flags:CC;}
      REG_DEAD r244:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  869: r567:DI=r244:DI
    Inserting insn reload after:
  870: r245:DI=r567:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 621:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 622
	 Choosing alt 0 in insn 622:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 623:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 626:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=568 from oldreg=248, assigning class GENERAL_REGS to r568
  626: {r568:DI=r568:DI<<0x5;clobber flags:CC;}
      REG_DEAD r247:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  871: r568:DI=r247:DI
    Inserting insn reload after:
  872: r248:DI=r568:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 628
	 Choosing alt 0 in insn 628:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 629:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 631:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 632:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=569 from oldreg=251, assigning class GENERAL_REGS to r569
  632: {r569:DI=r569:DI<<0x5;clobber flags:CC;}
      REG_DEAD r250:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  873: r569:DI=r250:DI
    Inserting insn reload after:
  874: r251:DI=r569:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 633:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 634
	 Choosing alt 0 in insn 634:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 635:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 638:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=570 from oldreg=254, assigning class GENERAL_REGS to r570
  638: {r570:DI=r570:DI<<0x5;clobber flags:CC;}
      REG_DEAD r253:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  875: r570:DI=r253:DI
    Inserting insn reload after:
  876: r254:DI=r570:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 639:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 641:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 642:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 645:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=571 from oldreg=257, assigning class GENERAL_REGS to r571
  645: {r571:DI=r571:DI<<0x5;clobber flags:CC;}
      REG_DEAD r256:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  877: r571:DI=r256:DI
    Inserting insn reload after:
  878: r257:DI=r571:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 646:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 648:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 649:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 652:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=572 from oldreg=260, assigning class GENERAL_REGS to r572
  652: {r572:DI=r572:DI<<0x5;clobber flags:CC;}
      REG_DEAD r259:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  879: r572:DI=r259:DI
    Inserting insn reload after:
  880: r260:DI=r572:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 655:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 656:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 659:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=573 from oldreg=263, assigning class GENERAL_REGS to r573
  659: {r573:DI=r573:DI<<0x5;clobber flags:CC;}
      REG_DEAD r262:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  881: r573:DI=r262:DI
    Inserting insn reload after:
  882: r263:DI=r573:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 660:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 662:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 663:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 666:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=574 from oldreg=266, assigning class GENERAL_REGS to r574
  666: {r574:DI=r574:DI<<0x5;clobber flags:CC;}
      REG_DEAD r265:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  883: r574:DI=r265:DI
    Inserting insn reload after:
  884: r266:DI=r574:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 667:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 668
	 Choosing alt 0 in insn 668:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 669:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 672:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=575 from oldreg=269, assigning class GENERAL_REGS to r575
  672: {r575:DI=r575:DI<<0x5;clobber flags:CC;}
      REG_DEAD r268:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  885: r575:DI=r268:DI
    Inserting insn reload after:
  886: r269:DI=r575:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 673:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 674
	 Choosing alt 0 in insn 674:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 675:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 678:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=576 from oldreg=272, assigning class GENERAL_REGS to r576
  678: {r576:DI=r576:DI<<0x5;clobber flags:CC;}
      REG_DEAD r271:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  887: r576:DI=r271:DI
    Inserting insn reload after:
  888: r272:DI=r576:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 679:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 680
	 Choosing alt 0 in insn 680:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 681:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 684:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=577 from oldreg=275, assigning class GENERAL_REGS to r577
  684: {r577:DI=r577:DI<<0x5;clobber flags:CC;}
      REG_DEAD r274:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  889: r577:DI=r274:DI
    Inserting insn reload after:
  890: r275:DI=r577:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 685:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 686
	 Choosing alt 0 in insn 686:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 687:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 693:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 694:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
      Creating newreg=578 from oldreg=279, assigning class GENERAL_REGS to r578
  694: {r578:DI=r578:DI<<0x5;clobber flags:CC;}
      REG_DEAD r278:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  891: r578:DI=r278:DI
    Inserting insn reload after:
  892: r279:DI=r578:DI

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 699:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 700:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 704:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 709:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 716:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 717:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=579, assigning class GENERAL_REGS to r579
  717: r579:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  893: [r281:DI]=r579:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 893:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 718:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=580, assigning class GENERAL_REGS to r580
  718: r580:DI=0x6961764120656d61
    Inserting insn reload after:
  894: [r281:DI+0x8]=r580:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 894:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 720:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 721:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 722:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 723:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=581, assigning class GENERAL_REGS to r581
  723: r581:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  895: [r282:DI]=r581:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 895:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 724:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=582, assigning class GENERAL_REGS to r582
  724: r582:DI=0x6961764120656d61
    Inserting insn reload after:
  896: [r282:DI+0x8]=r582:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 896:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 725:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 726:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 727:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 728:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 729:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=583, assigning class GENERAL_REGS to r583
  729: r583:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  897: [r283:DI]=r583:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 897:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 730:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=584, assigning class GENERAL_REGS to r584
  730: r584:DI=0x6961764120656d61
    Inserting insn reload after:
  898: [r283:DI+0x8]=r584:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 898:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 731:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 732:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 734:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 735:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=585, assigning class GENERAL_REGS to r585
  735: r585:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  899: [r284:DI]=r585:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 899:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 736:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=586, assigning class GENERAL_REGS to r586
  736: r586:DI=0x6961764120656d61
    Inserting insn reload after:
  900: [r284:DI+0x8]=r586:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 900:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 738:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 739:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 740:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 741:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=587, assigning class GENERAL_REGS to r587
  741: r587:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  901: [r285:DI]=r587:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 901:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 742:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=588, assigning class GENERAL_REGS to r588
  742: r588:DI=0x6961764120656d61
    Inserting insn reload after:
  902: [r285:DI+0x8]=r588:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 902:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 743:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 744:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 745:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 746:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 747:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=589, assigning class GENERAL_REGS to r589
  747: r589:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  903: [r286:DI]=r589:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 903:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 748:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=590, assigning class GENERAL_REGS to r590
  748: r590:DI=0x6961764120656d61
    Inserting insn reload after:
  904: [r286:DI+0x8]=r590:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 904:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 750:  (0) m  (1) rn {*movhi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 752:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 753:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=591, assigning class GENERAL_REGS to r591
  753: r591:DI=0x6e656c6946206f4e
    Inserting insn reload after:
  905: [r287:DI]=r591:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 905:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 754:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=592, assigning class GENERAL_REGS to r592
  754: r592:DI=0x6961764120656d61
    Inserting insn reload after:
  906: [r287:DI+0x8]=r592:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 906:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 756:  (0) m  (1) rn {*movhi_internal}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26

********** Pseudo live ranges #1: **********

  BB 26
   Insn 756: point = 0
   Insn 755: point = 1
   Insn 906: point = 1
   Insn 754: point = 2
   Insn 905: point = 3
   Insn 753: point = 4
   Insn 752: point = 5
   Insn 751: point = 7
   Insn 750: point = 8
   Insn 749: point = 9
   Insn 904: point = 9
   Insn 748: point = 10
   Insn 903: point = 11
   Insn 747: point = 12
   Insn 746: point = 13
   Insn 745: point = 15
   Insn 744: point = 16
   Insn 743: point = 17
   Insn 902: point = 17
   Insn 742: point = 18
   Insn 901: point = 19
   Insn 741: point = 20
   Insn 740: point = 21
   Insn 739: point = 23
   Insn 738: point = 24
   Insn 737: point = 25
   Insn 900: point = 25
   Insn 736: point = 26
   Insn 899: point = 27
   Insn 735: point = 28
   Insn 734: point = 29
   Insn 733: point = 31
   Insn 732: point = 32
   Insn 731: point = 33
   Insn 898: point = 33
   Insn 730: point = 34
   Insn 897: point = 35
   Insn 729: point = 36
   Insn 728: point = 37
   Insn 727: point = 39
   Insn 726: point = 40
   Insn 725: point = 41
   Insn 896: point = 41
   Insn 724: point = 42
   Insn 895: point = 43
   Insn 723: point = 44
   Insn 722: point = 45
   Insn 721: point = 47
   Insn 720: point = 48
   Insn 719: point = 49
   Insn 894: point = 49
   Insn 718: point = 50
   Insn 893: point = 51
   Insn 717: point = 52
   Insn 716: point = 53
  BB 25
   Insn 714: point = 54
   Insn 713: point = 54
  BB 2
   Insn 759: point = 54
   Insn 11: point = 54
   Insn 7: point = 54
   Insn 6: point = 54
   Insn 5: point = 54
   Insn 4: point = 54
   Insn 3: point = 54
   Insn 2: point = 54
  BB 24
   Insn 709: point = 54
  BB 23
   Insn 707: point = 54
   Insn 706: point = 54
   Insn 704: point = 55
   Insn 703: point = 57
  BB 21
   Insn 773: point = 58
   Insn 688: point = 58
   Insn 687: point = 58
   Insn 686: point = 59
   Insn 685: point = 61
   Insn 890: point = 62
	Hard reg 1 is preferable by r577 with profit 1
   Insn 684: point = 64
   Insn 889: point = 64
	Hard reg 1 is preferable by r577 with profit 1
	Hard reg 0 is preferable by r577 with profit 1
   Insn 683: point = 66
   Insn 682: point = 68
   Insn 681: point = 69
   Insn 680: point = 70
   Insn 679: point = 72
   Insn 888: point = 73
	Hard reg 1 is preferable by r576 with profit 1
   Insn 678: point = 75
   Insn 887: point = 75
	Hard reg 1 is preferable by r576 with profit 1
	Hard reg 0 is preferable by r576 with profit 1
   Insn 677: point = 77
   Insn 676: point = 79
   Insn 675: point = 80
   Insn 674: point = 81
   Insn 673: point = 83
   Insn 886: point = 84
	Hard reg 1 is preferable by r575 with profit 1
   Insn 672: point = 86
   Insn 885: point = 86
	Hard reg 1 is preferable by r575 with profit 1
	Hard reg 0 is preferable by r575 with profit 1
   Insn 671: point = 88
   Insn 670: point = 90
   Insn 669: point = 91
   Insn 668: point = 92
   Insn 667: point = 94
   Insn 884: point = 95
	Hard reg 1 is preferable by r574 with profit 1
   Insn 666: point = 97
   Insn 883: point = 97
	Hard reg 1 is preferable by r574 with profit 1
	Hard reg 0 is preferable by r574 with profit 1
   Insn 665: point = 99
   Insn 664: point = 101
   Insn 663: point = 102
   Insn 662: point = 103
   Insn 661: point = 104
   Insn 660: point = 106
   Insn 882: point = 107
	Hard reg 1 is preferable by r573 with profit 1
   Insn 659: point = 109
   Insn 881: point = 109
	Hard reg 1 is preferable by r573 with profit 1
	Hard reg 0 is preferable by r573 with profit 1
   Insn 658: point = 111
   Insn 657: point = 113
   Insn 656: point = 114
   Insn 655: point = 115
   Insn 654: point = 116
   Insn 653: point = 118
   Insn 880: point = 119
	Hard reg 1 is preferable by r572 with profit 1
   Insn 652: point = 121
   Insn 879: point = 121
	Hard reg 1 is preferable by r572 with profit 1
	Hard reg 0 is preferable by r572 with profit 1
   Insn 651: point = 123
   Insn 650: point = 125
   Insn 649: point = 126
   Insn 648: point = 127
   Insn 647: point = 128
   Insn 646: point = 130
   Insn 878: point = 131
	Hard reg 1 is preferable by r571 with profit 1
   Insn 645: point = 133
   Insn 877: point = 133
	Hard reg 1 is preferable by r571 with profit 1
	Hard reg 0 is preferable by r571 with profit 1
   Insn 644: point = 135
   Insn 643: point = 137
   Insn 642: point = 138
   Insn 641: point = 139
   Insn 640: point = 140
   Insn 639: point = 142
   Insn 876: point = 143
	Hard reg 1 is preferable by r570 with profit 1
   Insn 638: point = 145
   Insn 875: point = 145
	Hard reg 1 is preferable by r570 with profit 1
	Hard reg 0 is preferable by r570 with profit 1
   Insn 637: point = 147
   Insn 636: point = 149
   Insn 635: point = 150
   Insn 634: point = 151
   Insn 633: point = 153
   Insn 874: point = 154
	Hard reg 1 is preferable by r569 with profit 1
   Insn 632: point = 156
   Insn 873: point = 156
	Hard reg 1 is preferable by r569 with profit 1
	Hard reg 0 is preferable by r569 with profit 1
   Insn 631: point = 158
   Insn 630: point = 160
   Insn 629: point = 161
   Insn 628: point = 162
   Insn 627: point = 164
   Insn 872: point = 165
	Hard reg 1 is preferable by r568 with profit 1
   Insn 626: point = 167
   Insn 871: point = 167
	Hard reg 1 is preferable by r568 with profit 1
	Hard reg 0 is preferable by r568 with profit 1
   Insn 625: point = 169
   Insn 624: point = 171
   Insn 623: point = 172
   Insn 622: point = 173
   Insn 621: point = 175
   Insn 870: point = 176
	Hard reg 1 is preferable by r567 with profit 1
   Insn 620: point = 178
   Insn 869: point = 178
	Hard reg 1 is preferable by r567 with profit 1
	Hard reg 0 is preferable by r567 with profit 1
   Insn 619: point = 180
   Insn 618: point = 182
   Insn 617: point = 183
   Insn 616: point = 184
   Insn 615: point = 186
   Insn 868: point = 187
	Hard reg 1 is preferable by r566 with profit 1
   Insn 614: point = 189
   Insn 867: point = 189
	Hard reg 1 is preferable by r566 with profit 1
	Hard reg 0 is preferable by r566 with profit 1
   Insn 613: point = 191
   Insn 612: point = 193
   Insn 611: point = 194
   Insn 610: point = 195
   Insn 609: point = 197
   Insn 866: point = 198
	Hard reg 1 is preferable by r565 with profit 1
   Insn 608: point = 200
   Insn 865: point = 200
	Hard reg 1 is preferable by r565 with profit 1
	Hard reg 0 is preferable by r565 with profit 1
   Insn 607: point = 202
   Insn 606: point = 204
   Insn 605: point = 205
   Insn 604: point = 206
   Insn 603: point = 208
   Insn 864: point = 209
	Hard reg 1 is preferable by r564 with profit 1
   Insn 602: point = 211
   Insn 863: point = 211
	Hard reg 1 is preferable by r564 with profit 1
	Hard reg 0 is preferable by r564 with profit 1
   Insn 601: point = 213
   Insn 600: point = 215
   Insn 599: point = 216
   Insn 598: point = 217
   Insn 597: point = 219
   Insn 862: point = 220
	Hard reg 1 is preferable by r563 with profit 1
   Insn 596: point = 222
   Insn 861: point = 222
	Hard reg 1 is preferable by r563 with profit 1
	Hard reg 0 is preferable by r563 with profit 1
   Insn 595: point = 224
   Insn 594: point = 226
   Insn 593: point = 227
   Insn 592: point = 228
   Insn 591: point = 230
   Insn 860: point = 231
	Hard reg 1 is preferable by r562 with profit 1
   Insn 590: point = 233
   Insn 859: point = 233
	Hard reg 1 is preferable by r562 with profit 1
	Hard reg 0 is preferable by r562 with profit 1
   Insn 589: point = 235
   Insn 588: point = 237
   Insn 587: point = 238
   Insn 586: point = 239
   Insn 585: point = 241
   Insn 858: point = 242
	Hard reg 1 is preferable by r561 with profit 1
   Insn 584: point = 244
   Insn 857: point = 244
	Hard reg 1 is preferable by r561 with profit 1
	Hard reg 0 is preferable by r561 with profit 1
   Insn 583: point = 246
   Insn 582: point = 248
   Insn 581: point = 249
   Insn 580: point = 250
   Insn 579: point = 252
   Insn 856: point = 253
	Hard reg 1 is preferable by r560 with profit 1
   Insn 578: point = 255
   Insn 855: point = 255
	Hard reg 1 is preferable by r560 with profit 1
	Hard reg 0 is preferable by r560 with profit 1
   Insn 577: point = 257
   Insn 576: point = 259
   Insn 575: point = 260
   Insn 574: point = 261
   Insn 573: point = 263
   Insn 854: point = 264
	Hard reg 1 is preferable by r559 with profit 1
   Insn 572: point = 266
   Insn 853: point = 266
	Hard reg 1 is preferable by r559 with profit 1
	Hard reg 0 is preferable by r559 with profit 1
   Insn 571: point = 268
   Insn 570: point = 270
   Insn 569: point = 271
   Insn 568: point = 272
   Insn 567: point = 274
   Insn 852: point = 275
	Hard reg 1 is preferable by r558 with profit 1
   Insn 566: point = 277
   Insn 851: point = 277
	Hard reg 1 is preferable by r558 with profit 1
	Hard reg 0 is preferable by r558 with profit 1
   Insn 565: point = 279
   Insn 564: point = 281
   Insn 563: point = 282
   Insn 562: point = 283
   Insn 561: point = 285
   Insn 850: point = 286
	Hard reg 1 is preferable by r557 with profit 1
   Insn 560: point = 288
   Insn 849: point = 288
	Hard reg 1 is preferable by r557 with profit 1
	Hard reg 0 is preferable by r557 with profit 1
   Insn 559: point = 290
   Insn 558: point = 292
   Insn 557: point = 293
   Insn 556: point = 294
   Insn 555: point = 296
   Insn 848: point = 297
	Hard reg 1 is preferable by r556 with profit 1
   Insn 554: point = 299
   Insn 847: point = 299
	Hard reg 1 is preferable by r556 with profit 1
	Hard reg 0 is preferable by r556 with profit 1
   Insn 553: point = 301
   Insn 552: point = 303
   Insn 551: point = 304
   Insn 550: point = 305
   Insn 549: point = 307
   Insn 548: point = 308
   Insn 547: point = 310
   Insn 546: point = 312
   Insn 545: point = 314
   Insn 544: point = 315
   Insn 543: point = 315
   Insn 542: point = 315
   Insn 541: point = 315
   Insn 540: point = 316
   Insn 539: point = 318
   Insn 538: point = 319
   Insn 537: point = 320
   Insn 536: point = 322
   Insn 535: point = 323
   Insn 534: point = 325
   Insn 533: point = 327
   Insn 532: point = 329
   Insn 531: point = 330
   Insn 530: point = 330
   Insn 529: point = 330
   Insn 528: point = 330
   Insn 527: point = 331
   Insn 526: point = 333
   Insn 525: point = 334
   Insn 524: point = 335
   Insn 523: point = 337
   Insn 522: point = 338
   Insn 521: point = 340
   Insn 520: point = 342
   Insn 519: point = 344
   Insn 518: point = 345
   Insn 517: point = 345
   Insn 516: point = 345
   Insn 515: point = 345
   Insn 514: point = 346
   Insn 513: point = 348
   Insn 512: point = 349
   Insn 511: point = 350
   Insn 510: point = 352
   Insn 509: point = 353
   Insn 508: point = 355
   Insn 507: point = 357
   Insn 506: point = 359
   Insn 505: point = 360
   Insn 504: point = 360
   Insn 503: point = 360
   Insn 502: point = 360
   Insn 501: point = 361
   Insn 500: point = 363
   Insn 499: point = 364
   Insn 498: point = 365
   Insn 497: point = 367
   Insn 496: point = 368
   Insn 495: point = 370
   Insn 494: point = 372
   Insn 493: point = 374
   Insn 492: point = 375
   Insn 491: point = 375
   Insn 490: point = 375
   Insn 489: point = 375
   Insn 488: point = 376
   Insn 487: point = 378
   Insn 486: point = 379
   Insn 485: point = 380
   Insn 484: point = 381
   Insn 483: point = 383
   Insn 482: point = 384
   Insn 481: point = 386
   Insn 480: point = 388
   Insn 479: point = 390
   Insn 478: point = 391
   Insn 477: point = 391
   Insn 476: point = 391
   Insn 475: point = 391
   Insn 474: point = 392
   Insn 473: point = 394
   Insn 472: point = 395
   Insn 471: point = 396
   Insn 470: point = 398
   Insn 469: point = 399
   Insn 468: point = 401
   Insn 467: point = 403
   Insn 466: point = 405
   Insn 465: point = 406
   Insn 464: point = 406
   Insn 463: point = 406
   Insn 462: point = 406
   Insn 461: point = 407
   Insn 460: point = 409
   Insn 459: point = 410
   Insn 458: point = 411
   Insn 457: point = 413
   Insn 456: point = 414
   Insn 455: point = 416
   Insn 454: point = 418
   Insn 453: point = 420
   Insn 452: point = 421
   Insn 451: point = 421
   Insn 450: point = 421
   Insn 449: point = 421
   Insn 448: point = 422
   Insn 447: point = 424
   Insn 446: point = 425
   Insn 445: point = 426
   Insn 444: point = 428
   Insn 443: point = 429
   Insn 442: point = 431
   Insn 441: point = 433
   Insn 440: point = 435
   Insn 439: point = 436
   Insn 438: point = 436
   Insn 437: point = 436
   Insn 436: point = 436
   Insn 435: point = 437
   Insn 434: point = 439
   Insn 433: point = 440
   Insn 432: point = 441
   Insn 431: point = 443
   Insn 430: point = 444
   Insn 429: point = 446
   Insn 428: point = 448
   Insn 427: point = 450
   Insn 426: point = 451
   Insn 425: point = 451
   Insn 424: point = 451
   Insn 423: point = 451
   Insn 422: point = 452
   Insn 421: point = 454
   Insn 420: point = 455
   Insn 419: point = 456
   Insn 418: point = 457
   Insn 417: point = 459
   Insn 416: point = 460
   Insn 415: point = 462
   Insn 414: point = 464
   Insn 413: point = 466
   Insn 412: point = 467
   Insn 411: point = 467
   Insn 410: point = 467
   Insn 409: point = 467
   Insn 408: point = 468
   Insn 407: point = 470
   Insn 406: point = 471
   Insn 405: point = 472
   Insn 404: point = 474
   Insn 403: point = 475
   Insn 402: point = 477
   Insn 401: point = 479
   Insn 400: point = 481
   Insn 399: point = 482
   Insn 398: point = 482
   Insn 397: point = 482
   Insn 396: point = 482
   Insn 395: point = 483
   Insn 394: point = 485
   Insn 393: point = 486
   Insn 392: point = 487
   Insn 391: point = 489
   Insn 390: point = 490
   Insn 389: point = 492
   Insn 388: point = 494
   Insn 387: point = 496
   Insn 386: point = 497
   Insn 385: point = 497
   Insn 384: point = 497
   Insn 383: point = 497
   Insn 382: point = 498
   Insn 381: point = 500
   Insn 380: point = 501
   Insn 379: point = 502
   Insn 378: point = 504
   Insn 377: point = 505
   Insn 376: point = 507
   Insn 375: point = 509
   Insn 374: point = 511
   Insn 373: point = 512
   Insn 372: point = 512
   Insn 371: point = 512
   Insn 370: point = 512
   Insn 369: point = 513
   Insn 368: point = 515
   Insn 367: point = 516
   Insn 366: point = 517
   Insn 365: point = 519
   Insn 364: point = 520
   Insn 363: point = 522
   Insn 362: point = 524
   Insn 361: point = 526
   Insn 360: point = 527
   Insn 359: point = 527
   Insn 358: point = 527
   Insn 357: point = 527
   Insn 356: point = 528
   Insn 355: point = 530
   Insn 354: point = 531
   Insn 353: point = 532
   Insn 352: point = 534
   Insn 351: point = 535
   Insn 350: point = 537
   Insn 349: point = 539
   Insn 348: point = 541
   Insn 347: point = 542
   Insn 346: point = 542
   Insn 345: point = 542
   Insn 344: point = 542
   Insn 343: point = 543
   Insn 342: point = 545
   Insn 341: point = 546
   Insn 340: point = 547
   Insn 339: point = 548
   Insn 338: point = 550
   Insn 337: point = 551
   Insn 336: point = 553
   Insn 335: point = 555
   Insn 334: point = 557
   Insn 333: point = 558
   Insn 332: point = 558
   Insn 331: point = 558
   Insn 330: point = 558
   Insn 329: point = 559
   Insn 328: point = 561
   Insn 327: point = 562
   Insn 326: point = 563
   Insn 325: point = 565
   Insn 324: point = 566
   Insn 323: point = 568
   Insn 322: point = 570
   Insn 321: point = 572
   Insn 320: point = 573
   Insn 319: point = 573
   Insn 318: point = 573
   Insn 317: point = 573
   Insn 316: point = 574
   Insn 315: point = 576
   Insn 314: point = 577
   Insn 846: point = 578
   Insn 313: point = 579
   Insn 845: point = 580
   Insn 312: point = 581
   Insn 844: point = 582
   Insn 311: point = 583
   Insn 843: point = 584
   Insn 310: point = 585
   Insn 309: point = 586
   Insn 308: point = 588
   Insn 307: point = 590
   Insn 842: point = 591
	Hard reg 1 is preferable by r551 with profit 1
   Insn 306: point = 593
   Insn 841: point = 593
	Hard reg 1 is preferable by r551 with profit 1
	Hard reg 0 is preferable by r551 with profit 1
   Insn 305: point = 595
   Insn 304: point = 597
  BB 20
   Insn 302: point = 598
   Insn 301: point = 598
   Insn 299: point = 599
   Insn 298: point = 601
  BB 18
   Insn 771: point = 602
   Insn 283: point = 602
   Insn 282: point = 602
   Insn 838: point = 603
   Insn 281: point = 604
   Insn 837: point = 605
   Insn 280: point = 606
   Insn 836: point = 607
   Insn 279: point = 608
   Insn 278: point = 609
   Insn 277: point = 611
   Insn 276: point = 613
   Insn 835: point = 614
	Hard reg 1 is preferable by r546 with profit 1
   Insn 275: point = 616
   Insn 834: point = 616
	Hard reg 1 is preferable by r546 with profit 1
	Hard reg 0 is preferable by r546 with profit 1
   Insn 274: point = 618
   Insn 273: point = 620
  BB 17
   Insn 271: point = 621
   Insn 270: point = 621
   Insn 268: point = 622
   Insn 267: point = 624
  BB 15
   Insn 769: point = 625
   Insn 252: point = 625
   Insn 251: point = 625
   Insn 250: point = 626
   Insn 831: point = 626
   Insn 249: point = 627
   Insn 830: point = 628
   Insn 248: point = 629
   Insn 829: point = 630
   Insn 247: point = 631
   Insn 246: point = 632
   Insn 245: point = 634
   Insn 244: point = 636
   Insn 828: point = 637
	Hard reg 1 is preferable by r541 with profit 1
   Insn 243: point = 639
   Insn 827: point = 639
	Hard reg 1 is preferable by r541 with profit 1
	Hard reg 0 is preferable by r541 with profit 1
   Insn 242: point = 641
   Insn 241: point = 643
  BB 14
   Insn 239: point = 644
   Insn 238: point = 644
   Insn 236: point = 645
   Insn 235: point = 647
  BB 12
   Insn 767: point = 648
   Insn 220: point = 648
   Insn 219: point = 648
   Insn 218: point = 649
   Insn 824: point = 649
   Insn 217: point = 650
   Insn 823: point = 651
   Insn 216: point = 652
   Insn 215: point = 653
   Insn 214: point = 655
   Insn 213: point = 657
   Insn 822: point = 658
	Hard reg 1 is preferable by r537 with profit 1
   Insn 212: point = 660
   Insn 821: point = 660
	Hard reg 1 is preferable by r537 with profit 1
	Hard reg 0 is preferable by r537 with profit 1
   Insn 211: point = 662
   Insn 210: point = 664
  BB 11
   Insn 208: point = 665
   Insn 207: point = 665
   Insn 205: point = 666
   Insn 204: point = 668
  BB 9
   Insn 765: point = 669
   Insn 189: point = 669
   Insn 188: point = 669
   Insn 818: point = 670
   Insn 187: point = 671
   Insn 817: point = 672
   Insn 186: point = 673
   Insn 185: point = 674
   Insn 184: point = 676
   Insn 183: point = 678
   Insn 816: point = 679
	Hard reg 1 is preferable by r533 with profit 1
   Insn 182: point = 681
   Insn 815: point = 681
	Hard reg 1 is preferable by r533 with profit 1
	Hard reg 0 is preferable by r533 with profit 1
   Insn 181: point = 683
   Insn 180: point = 685
  BB 8
   Insn 178: point = 686
   Insn 177: point = 686
   Insn 175: point = 687
   Insn 174: point = 689
  BB 6
   Insn 763: point = 690
   Insn 159: point = 690
  BB 5
   Insn 157: point = 690
   Insn 156: point = 690
   Insn 154: point = 691
   Insn 153: point = 693
  BB 3
   Insn 761: point = 694
   Insn 138: point = 694
   Insn 137: point = 694
   Insn 136: point = 695
   Insn 135: point = 697
   Insn 810: point = 698
	Hard reg 1 is preferable by r530 with profit 1
   Insn 134: point = 700
   Insn 809: point = 700
	Hard reg 1 is preferable by r530 with profit 1
	Hard reg 0 is preferable by r530 with profit 1
   Insn 133: point = 702
   Insn 132: point = 704
   Insn 131: point = 705
   Insn 130: point = 706
   Insn 129: point = 707
   Insn 128: point = 709
   Insn 808: point = 710
	Hard reg 1 is preferable by r529 with profit 1
   Insn 127: point = 712
   Insn 807: point = 712
	Hard reg 1 is preferable by r529 with profit 1
	Hard reg 0 is preferable by r529 with profit 1
   Insn 126: point = 714
   Insn 125: point = 716
   Insn 124: point = 717
   Insn 123: point = 718
   Insn 122: point = 719
   Insn 121: point = 721
   Insn 806: point = 722
	Hard reg 1 is preferable by r528 with profit 1
   Insn 120: point = 724
   Insn 805: point = 724
	Hard reg 1 is preferable by r528 with profit 1
	Hard reg 0 is preferable by r528 with profit 1
   Insn 119: point = 726
   Insn 118: point = 728
   Insn 117: point = 729
   Insn 116: point = 730
   Insn 115: point = 731
   Insn 114: point = 733
   Insn 804: point = 734
	Hard reg 1 is preferable by r527 with profit 1
   Insn 113: point = 736
   Insn 803: point = 736
	Hard reg 1 is preferable by r527 with profit 1
	Hard reg 0 is preferable by r527 with profit 1
   Insn 112: point = 738
   Insn 111: point = 740
   Insn 110: point = 741
   Insn 109: point = 742
   Insn 108: point = 743
   Insn 107: point = 745
   Insn 802: point = 746
	Hard reg 1 is preferable by r526 with profit 1
   Insn 106: point = 748
   Insn 801: point = 748
	Hard reg 1 is preferable by r526 with profit 1
	Hard reg 0 is preferable by r526 with profit 1
   Insn 105: point = 750
   Insn 104: point = 752
   Insn 103: point = 753
   Insn 102: point = 754
   Insn 101: point = 755
   Insn 100: point = 757
   Insn 800: point = 758
	Hard reg 1 is preferable by r525 with profit 1
   Insn 99: point = 760
   Insn 799: point = 760
	Hard reg 1 is preferable by r525 with profit 1
	Hard reg 0 is preferable by r525 with profit 1
   Insn 98: point = 762
   Insn 97: point = 764
   Insn 96: point = 765
   Insn 95: point = 766
   Insn 94: point = 767
   Insn 93: point = 769
   Insn 798: point = 770
	Hard reg 1 is preferable by r524 with profit 1
   Insn 92: point = 772
   Insn 797: point = 772
	Hard reg 1 is preferable by r524 with profit 1
	Hard reg 0 is preferable by r524 with profit 1
   Insn 91: point = 774
   Insn 90: point = 776
   Insn 89: point = 777
   Insn 88: point = 778
   Insn 87: point = 779
   Insn 86: point = 781
   Insn 796: point = 782
	Hard reg 1 is preferable by r523 with profit 1
   Insn 85: point = 784
   Insn 795: point = 784
	Hard reg 1 is preferable by r523 with profit 1
	Hard reg 0 is preferable by r523 with profit 1
   Insn 84: point = 786
   Insn 83: point = 788
   Insn 82: point = 789
   Insn 81: point = 790
   Insn 80: point = 791
   Insn 79: point = 793
   Insn 794: point = 794
	Hard reg 1 is preferable by r522 with profit 1
   Insn 78: point = 796
   Insn 793: point = 796
	Hard reg 1 is preferable by r522 with profit 1
	Hard reg 0 is preferable by r522 with profit 1
   Insn 77: point = 798
   Insn 76: point = 800
   Insn 75: point = 801
   Insn 74: point = 802
   Insn 73: point = 803
   Insn 72: point = 805
   Insn 792: point = 806
	Hard reg 1 is preferable by r521 with profit 1
   Insn 71: point = 808
   Insn 791: point = 808
	Hard reg 1 is preferable by r521 with profit 1
	Hard reg 0 is preferable by r521 with profit 1
   Insn 70: point = 810
   Insn 69: point = 812
   Insn 68: point = 813
   Insn 67: point = 814
   Insn 66: point = 815
   Insn 65: point = 817
   Insn 790: point = 818
	Hard reg 1 is preferable by r520 with profit 1
   Insn 64: point = 820
   Insn 789: point = 820
	Hard reg 1 is preferable by r520 with profit 1
	Hard reg 0 is preferable by r520 with profit 1
   Insn 63: point = 822
   Insn 62: point = 824
   Insn 61: point = 825
   Insn 60: point = 826
   Insn 59: point = 827
   Insn 58: point = 829
   Insn 788: point = 830
	Hard reg 1 is preferable by r519 with profit 1
   Insn 57: point = 832
   Insn 787: point = 832
	Hard reg 1 is preferable by r519 with profit 1
	Hard reg 0 is preferable by r519 with profit 1
   Insn 56: point = 834
   Insn 55: point = 836
   Insn 54: point = 837
   Insn 53: point = 838
   Insn 52: point = 839
   Insn 51: point = 841
   Insn 786: point = 842
	Hard reg 1 is preferable by r518 with profit 1
   Insn 50: point = 844
   Insn 785: point = 844
	Hard reg 1 is preferable by r518 with profit 1
	Hard reg 0 is preferable by r518 with profit 1
   Insn 49: point = 846
   Insn 48: point = 848
   Insn 47: point = 849
   Insn 46: point = 850
   Insn 45: point = 851
   Insn 44: point = 853
   Insn 784: point = 854
	Hard reg 1 is preferable by r517 with profit 1
   Insn 43: point = 856
   Insn 783: point = 856
	Hard reg 1 is preferable by r517 with profit 1
	Hard reg 0 is preferable by r517 with profit 1
   Insn 42: point = 858
   Insn 41: point = 860
   Insn 40: point = 861
   Insn 39: point = 862
   Insn 38: point = 864
   Insn 782: point = 865
	Hard reg 1 is preferable by r516 with profit 1
   Insn 37: point = 867
   Insn 781: point = 867
	Hard reg 1 is preferable by r516 with profit 1
	Hard reg 0 is preferable by r516 with profit 1
   Insn 36: point = 869
   Insn 35: point = 871
   Insn 34: point = 872
   Insn 33: point = 873
   Insn 32: point = 875
   Insn 780: point = 876
	Hard reg 1 is preferable by r515 with profit 1
   Insn 31: point = 878
   Insn 779: point = 878
	Hard reg 1 is preferable by r515 with profit 1
	Hard reg 0 is preferable by r515 with profit 1
   Insn 30: point = 880
   Insn 29: point = 882
   Insn 28: point = 883
   Insn 27: point = 884
   Insn 26: point = 885
   Insn 25: point = 887
   Insn 778: point = 888
	Hard reg 1 is preferable by r514 with profit 1
   Insn 24: point = 890
   Insn 777: point = 890
	Hard reg 1 is preferable by r514 with profit 1
	Hard reg 0 is preferable by r514 with profit 1
   Insn 23: point = 892
   Insn 22: point = 894
   Insn 21: point = 895
   Insn 20: point = 896
   Insn 19: point = 897
   Insn 18: point = 899
   Insn 776: point = 900
	Hard reg 1 is preferable by r513 with profit 1
   Insn 17: point = 902
   Insn 775: point = 902
	Hard reg 1 is preferable by r513 with profit 1
	Hard reg 0 is preferable by r513 with profit 1
   Insn 16: point = 904
   Insn 15: point = 906
  BB 4
   Insn 150: point = 907
   Insn 149: point = 907
   Insn 148: point = 908
   Insn 147: point = 910
   Insn 146: point = 911
   Insn 145: point = 913
   Insn 812: point = 914
	Hard reg 1 is preferable by r531 with profit 1
   Insn 144: point = 916
   Insn 811: point = 916
	Hard reg 1 is preferable by r531 with profit 1
	Hard reg 0 is preferable by r531 with profit 1
   Insn 143: point = 918
   Insn 142: point = 920
  BB 7
   Insn 171: point = 921
   Insn 170: point = 921
   Insn 169: point = 922
   Insn 168: point = 924
   Insn 167: point = 925
   Insn 166: point = 927
   Insn 814: point = 928
	Hard reg 1 is preferable by r532 with profit 1
   Insn 165: point = 930
   Insn 813: point = 930
	Hard reg 1 is preferable by r532 with profit 1
	Hard reg 0 is preferable by r532 with profit 1
   Insn 164: point = 932
   Insn 163: point = 934
  BB 10
   Insn 201: point = 935
   Insn 200: point = 935
   Insn 199: point = 936
   Insn 198: point = 938
   Insn 197: point = 939
   Insn 196: point = 941
   Insn 820: point = 942
	Hard reg 1 is preferable by r536 with profit 1
   Insn 195: point = 944
   Insn 819: point = 944
	Hard reg 1 is preferable by r536 with profit 1
	Hard reg 0 is preferable by r536 with profit 1
   Insn 194: point = 946
   Insn 193: point = 948
  BB 13
   Insn 232: point = 949
   Insn 231: point = 949
   Insn 230: point = 950
   Insn 229: point = 952
   Insn 228: point = 953
   Insn 227: point = 955
   Insn 826: point = 956
	Hard reg 1 is preferable by r540 with profit 1
   Insn 226: point = 958
   Insn 825: point = 958
	Hard reg 1 is preferable by r540 with profit 1
	Hard reg 0 is preferable by r540 with profit 1
   Insn 225: point = 960
   Insn 224: point = 962
  BB 16
   Insn 264: point = 963
   Insn 263: point = 963
   Insn 262: point = 964
   Insn 261: point = 966
   Insn 260: point = 967
   Insn 259: point = 969
   Insn 833: point = 970
	Hard reg 1 is preferable by r545 with profit 1
   Insn 258: point = 972
   Insn 832: point = 972
	Hard reg 1 is preferable by r545 with profit 1
	Hard reg 0 is preferable by r545 with profit 1
   Insn 257: point = 974
   Insn 256: point = 976
  BB 19
   Insn 295: point = 977
   Insn 294: point = 977
   Insn 293: point = 978
   Insn 292: point = 980
   Insn 291: point = 981
   Insn 290: point = 983
   Insn 840: point = 984
	Hard reg 1 is preferable by r550 with profit 1
   Insn 289: point = 986
   Insn 839: point = 986
	Hard reg 1 is preferable by r550 with profit 1
	Hard reg 0 is preferable by r550 with profit 1
   Insn 288: point = 988
   Insn 287: point = 990
  BB 22
   Insn 700: point = 991
   Insn 699: point = 991
   Insn 698: point = 992
   Insn 697: point = 994
   Insn 696: point = 995
   Insn 695: point = 997
   Insn 892: point = 998
	Hard reg 1 is preferable by r578 with profit 1
   Insn 694: point = 1000
   Insn 891: point = 1000
	Hard reg 1 is preferable by r578 with profit 1
	Hard reg 0 is preferable by r578 with profit 1
   Insn 693: point = 1002
   Insn 692: point = 1004
 r59: [903..904]
 r60: [898..900]
 r61: [895..897]
 r62: [891..892]
 r63: [886..888]
 r64: [883..885]
 r65: [879..880]
 r66: [874..876]
 r67: [872..873]
 r68: [868..869]
 r69: [863..865]
 r70: [861..862]
 r71: [857..858]
 r72: [852..854]
 r73: [849..851]
 r74: [845..846]
 r75: [840..842]
 r76: [837..839]
 r77: [833..834]
 r78: [828..830]
 r79: [825..827]
 r80: [821..822]
 r81: [816..818]
 r82: [813..815]
 r83: [809..810]
 r84: [804..806]
 r85: [801..803]
 r86: [797..798]
 r87: [792..794]
 r88: [789..791]
 r89: [785..786]
 r90: [780..782]
 r91: [777..779]
 r92: [773..774]
 r93: [768..770]
 r94: [765..767]
 r95: [761..762]
 r96: [756..758]
 r97: [753..755]
 r98: [749..750]
 r99: [744..746]
 r100: [741..743]
 r101: [737..738]
 r102: [732..734]
 r103: [729..731]
 r104: [725..726]
 r105: [720..722]
 r106: [717..719]
 r107: [713..714]
 r108: [708..710]
 r109: [705..707]
 r110: [701..702]
 r111: [696..698]
 r112: [694..695]
 r113: [690..691]
 r114: [917..918]
 r115: [912..914]
 r116: [907..911]
 r117: [686..687]
 r118: [931..932]
 r119: [926..928]
 r120: [921..925]
 r121: [682..683]
 r122: [677..679]
 r123: [675..676]
 r124: [669..674]
 r125: [665..666]
 r126: [945..946]
 r127: [940..942]
 r128: [935..939]
 r129: [661..662]
 r130: [656..658]
 r131: [654..655]
 r132: [648..653]
 r133: [644..645]
 r134: [959..960]
 r135: [954..956]
 r136: [949..953]
 r137: [640..641]
 r138: [635..637]
 r139: [633..634]
 r140: [625..632]
 r141: [621..622]
 r142: [973..974]
 r143: [968..970]
 r144: [963..967]
 r145: [617..618]
 r146: [612..614]
 r147: [610..611]
 r148: [602..609]
 r149: [598..599]
 r150: [987..988]
 r151: [982..984]
 r152: [977..981]
 r153: [594..595]
 r154: [589..591]
 r155: [587..588]
 r156: [577..586]
 r157: [572..574]
 r158: [564..566]
 r159: [562..563]
 r160: [557..559]
 r161: [549..551]
 r162: [546..548]
 r163: [541..543]
 r164: [533..535]
 r165: [531..532]
 r166: [526..528]
 r167: [518..520]
 r168: [516..517]
 r169: [511..513]
 r170: [503..505]
 r171: [501..502]
 r172: [496..498]
 r173: [488..490]
 r174: [486..487]
 r175: [481..483]
 r176: [473..475]
 r177: [471..472]
 r178: [466..468]
 r179: [458..460]
 r180: [455..457]
 r181: [450..452]
 r182: [442..444]
 r183: [440..441]
 r184: [435..437]
 r185: [427..429]
 r186: [425..426]
 r187: [420..422]
 r188: [412..414]
 r189: [410..411]
 r190: [405..407]
 r191: [397..399]
 r192: [395..396]
 r193: [390..392]
 r194: [382..384]
 r195: [379..381]
 r196: [374..376]
 r197: [366..368]
 r198: [364..365]
 r199: [359..361]
 r200: [351..353]
 r201: [349..350]
 r202: [344..346]
 r203: [336..338]
 r204: [334..335]
 r205: [329..331]
 r206: [321..323]
 r207: [319..320]
 r208: [314..316]
 r209: [306..308]
 r210: [304..305]
 r211: [300..301]
 r212: [295..297]
 r213: [293..294]
 r214: [289..290]
 r215: [284..286]
 r216: [282..283]
 r217: [278..279]
 r218: [273..275]
 r219: [271..272]
 r220: [267..268]
 r221: [262..264]
 r222: [260..261]
 r223: [256..257]
 r224: [251..253]
 r225: [249..250]
 r226: [245..246]
 r227: [240..242]
 r228: [238..239]
 r229: [234..235]
 r230: [229..231]
 r231: [227..228]
 r232: [223..224]
 r233: [218..220]
 r234: [216..217]
 r235: [212..213]
 r236: [207..209]
 r237: [205..206]
 r238: [201..202]
 r239: [196..198]
 r240: [194..195]
 r241: [190..191]
 r242: [185..187]
 r243: [183..184]
 r244: [179..180]
 r245: [174..176]
 r246: [172..173]
 r247: [168..169]
 r248: [163..165]
 r249: [161..162]
 r250: [157..158]
 r251: [152..154]
 r252: [150..151]
 r253: [146..147]
 r254: [141..143]
 r255: [138..140]
 r256: [134..135]
 r257: [129..131]
 r258: [126..128]
 r259: [122..123]
 r260: [117..119]
 r261: [114..116]
 r262: [110..111]
 r263: [105..107]
 r264: [102..104]
 r265: [98..99]
 r266: [93..95]
 r267: [91..92]
 r268: [87..88]
 r269: [82..84]
 r270: [80..81]
 r271: [76..77]
 r272: [71..73]
 r273: [69..70]
 r274: [65..66]
 r275: [60..62]
 r276: [58..59]
 r277: [54..55]
 r278: [1001..1002]
 r279: [996..998]
 r280: [991..995]
 r281: [48..53]
 r282: [40..45]
 r283: [32..37]
 r284: [24..29]
 r285: [16..21]
 r286: [8..13]
 r287: [0..5]
 r288: [905..906]
 r289: [898..899]
 r290: [895..896]
 r291: [893..894]
 r292: [886..887]
 r293: [883..884]
 r294: [881..882]
 r295: [874..875]
 r296: [870..871]
 r297: [863..864]
 r298: [859..860]
 r299: [852..853]
 r300: [849..850]
 r301: [847..848]
 r302: [840..841]
 r303: [837..838]
 r304: [835..836]
 r305: [828..829]
 r306: [825..826]
 r307: [823..824]
 r308: [816..817]
 r309: [813..814]
 r310: [811..812]
 r311: [804..805]
 r312: [801..802]
 r313: [799..800]
 r314: [792..793]
 r315: [789..790]
 r316: [787..788]
 r317: [780..781]
 r318: [777..778]
 r319: [775..776]
 r320: [768..769]
 r321: [765..766]
 r322: [763..764]
 r323: [756..757]
 r324: [753..754]
 r325: [751..752]
 r326: [744..745]
 r327: [741..742]
 r328: [739..740]
 r329: [732..733]
 r330: [729..730]
 r331: [727..728]
 r332: [720..721]
 r333: [717..718]
 r334: [715..716]
 r335: [708..709]
 r336: [705..706]
 r337: [703..704]
 r338: [696..697]
 r339: [919..920]
 r340: [912..913]
 r341: [907..908]
 r342: [909..910]
 r343: [692..693]
 r344: [933..934]
 r345: [926..927]
 r346: [921..922]
 r347: [923..924]
 r348: [688..689]
 r349: [684..685]
 r350: [677..678]
 r351: [947..948]
 r352: [940..941]
 r353: [935..936]
 r354: [937..938]
 r355: [667..668]
 r356: [663..664]
 r357: [656..657]
 r358: [961..962]
 r359: [954..955]
 r360: [949..950]
 r361: [951..952]
 r362: [646..647]
 r363: [642..643]
 r364: [635..636]
 r365: [975..976]
 r366: [968..969]
 r367: [963..964]
 r368: [965..966]
 r369: [623..624]
 r370: [619..620]
 r371: [612..613]
 r372: [989..990]
 r373: [982..983]
 r374: [977..978]
 r375: [979..980]
 r376: [600..601]
 r377: [596..597]
 r378: [589..590]
 r379: [575..576]
 r380: [571..573] [567..568]
 r381: [569..570]
 r382: [564..565]
 r383: [560..561]
 r384: [556..558] [552..553]
 r385: [554..555]
 r386: [549..550]
 r387: [546..547]
 r388: [544..545]
 r389: [540..542] [536..537]
 r390: [538..539]
 r391: [533..534]
 r392: [529..530]
 r393: [525..527] [521..522]
 r394: [523..524]
 r395: [518..519]
 r396: [514..515]
 r397: [510..512] [506..507]
 r398: [508..509]
 r399: [503..504]
 r400: [499..500]
 r401: [495..497] [491..492]
 r402: [493..494]
 r403: [488..489]
 r404: [484..485]
 r405: [480..482] [476..477]
 r406: [478..479]
 r407: [473..474]
 r408: [469..470]
 r409: [465..467] [461..462]
 r410: [463..464]
 r411: [458..459]
 r412: [455..456]
 r413: [453..454]
 r414: [449..451] [445..446]
 r415: [447..448]
 r416: [442..443]
 r417: [438..439]
 r418: [434..436] [430..431]
 r419: [432..433]
 r420: [427..428]
 r421: [423..424]
 r422: [419..421] [415..416]
 r423: [417..418]
 r424: [412..413]
 r425: [408..409]
 r426: [404..406] [400..401]
 r427: [402..403]
 r428: [397..398]
 r429: [393..394]
 r430: [389..391] [385..386]
 r431: [387..388]
 r432: [382..383]
 r433: [379..380]
 r434: [377..378]
 r435: [373..375] [369..370]
 r436: [371..372]
 r437: [366..367]
 r438: [362..363]
 r439: [358..360] [354..355]
 r440: [356..357]
 r441: [351..352]
 r442: [347..348]
 r443: [343..345] [339..340]
 r444: [341..342]
 r445: [336..337]
 r446: [332..333]
 r447: [328..330] [324..325]
 r448: [326..327]
 r449: [321..322]
 r450: [317..318]
 r451: [313..315] [309..310]
 r452: [311..312]
 r453: [306..307]
 r454: [302..303]
 r455: [295..296]
 r456: [291..292]
 r457: [284..285]
 r458: [280..281]
 r459: [273..274]
 r460: [269..270]
 r461: [262..263]
 r462: [258..259]
 r463: [251..252]
 r464: [247..248]
 r465: [240..241]
 r466: [236..237]
 r467: [229..230]
 r468: [225..226]
 r469: [218..219]
 r470: [214..215]
 r471: [207..208]
 r472: [203..204]
 r473: [196..197]
 r474: [192..193]
 r475: [185..186]
 r476: [181..182]
 r477: [174..175]
 r478: [170..171]
 r479: [163..164]
 r480: [159..160]
 r481: [152..153]
 r482: [148..149]
 r483: [141..142]
 r484: [138..139]
 r485: [136..137]
 r486: [129..130]
 r487: [126..127]
 r488: [124..125]
 r489: [117..118]
 r490: [114..115]
 r491: [112..113]
 r492: [105..106]
 r493: [102..103]
 r494: [100..101]
 r495: [93..94]
 r496: [89..90]
 r497: [82..83]
 r498: [78..79]
 r499: [71..72]
 r500: [67..68]
 r501: [60..61]
 r502: [1003..1004]
 r503: [996..997]
 r504: [991..992]
 r505: [993..994]
 r506: [56..57]
 r507: [46..47]
 r508: [38..39]
 r509: [30..31]
 r510: [22..23]
 r511: [14..15]
 r512: [6..7]
 r513: [901..902]
 r514: [889..890]
 r515: [877..878]
 r516: [866..867]
 r517: [855..856]
 r518: [843..844]
 r519: [831..832]
 r520: [819..820]
 r521: [807..808]
 r522: [795..796]
 r523: [783..784]
 r524: [771..772]
 r525: [759..760]
 r526: [747..748]
 r527: [735..736]
 r528: [723..724]
 r529: [711..712]
 r530: [699..700]
 r531: [915..916]
 r532: [929..930]
 r533: [680..681]
 r534: [672..673]
 r535: [670..671]
 r536: [943..944]
 r537: [659..660]
 r538: [651..652]
 r539: [649..650]
 r540: [957..958]
 r541: [638..639]
 r542: [630..631]
 r543: [628..629]
 r544: [626..627]
 r545: [971..972]
 r546: [615..616]
 r547: [607..608]
 r548: [605..606]
 r549: [603..604]
 r550: [985..986]
 r551: [592..593]
 r552: [584..585]
 r553: [582..583]
 r554: [580..581]
 r555: [578..579]
 r556: [298..299]
 r557: [287..288]
 r558: [276..277]
 r559: [265..266]
 r560: [254..255]
 r561: [243..244]
 r562: [232..233]
 r563: [221..222]
 r564: [210..211]
 r565: [199..200]
 r566: [188..189]
 r567: [177..178]
 r568: [166..167]
 r569: [155..156]
 r570: [144..145]
 r571: [132..133]
 r572: [120..121]
 r573: [108..109]
 r574: [96..97]
 r575: [85..86]
 r576: [74..75]
 r577: [63..64]
 r578: [999..1000]
 r579: [51..52]
 r580: [49..50]
 r581: [43..44]
 r582: [41..42]
 r583: [35..36]
 r584: [33..34]
 r585: [27..28]
 r586: [25..26]
 r587: [19..20]
 r588: [17..18]
 r589: [11..12]
 r590: [9..10]
 r591: [3..4]
 r592: [1..2]
Compressing live ranges: from 1005 to 846 - 84%
Ranges after the compression:
 r59: [758..759]
 r60: [754..755]
 r61: [752..753]
 r62: [748..749]
 r63: [744..745]
 r64: [742..743]
 r65: [738..739]
 r66: [734..735]
 r67: [732..733]
 r68: [728..729]
 r69: [724..725]
 r70: [722..723]
 r71: [718..719]
 r72: [714..715]
 r73: [712..713]
 r74: [708..709]
 r75: [704..705]
 r76: [702..703]
 r77: [698..699]
 r78: [694..695]
 r79: [692..693]
 r80: [688..689]
 r81: [684..685]
 r82: [682..683]
 r83: [678..679]
 r84: [674..675]
 r85: [672..673]
 r86: [668..669]
 r87: [664..665]
 r88: [662..663]
 r89: [658..659]
 r90: [654..655]
 r91: [652..653]
 r92: [648..649]
 r93: [644..645]
 r94: [642..643]
 r95: [638..639]
 r96: [634..635]
 r97: [632..633]
 r98: [628..629]
 r99: [624..625]
 r100: [622..623]
 r101: [618..619]
 r102: [614..615]
 r103: [612..613]
 r104: [608..609]
 r105: [604..605]
 r106: [602..603]
 r107: [598..599]
 r108: [594..595]
 r109: [592..593]
 r110: [588..589]
 r111: [584..585]
 r112: [582..583]
 r113: [578..579]
 r114: [770..771]
 r115: [766..767]
 r116: [762..765]
 r117: [574..575]
 r118: [782..783]
 r119: [778..779]
 r120: [774..777]
 r121: [570..571]
 r122: [566..567]
 r123: [564..565]
 r124: [560..563]
 r125: [556..557]
 r126: [794..795]
 r127: [790..791]
 r128: [786..789]
 r129: [552..553]
 r130: [548..549]
 r131: [546..547]
 r132: [542..545]
 r133: [538..539]
 r134: [806..807]
 r135: [802..803]
 r136: [798..801]
 r137: [534..535]
 r138: [530..531]
 r139: [528..529]
 r140: [522..527]
 r141: [518..519]
 r142: [818..819]
 r143: [814..815]
 r144: [810..813]
 r145: [514..515]
 r146: [510..511]
 r147: [508..509]
 r148: [502..507]
 r149: [498..499]
 r150: [830..831]
 r151: [826..827]
 r152: [822..825]
 r153: [494..495]
 r154: [490..491]
 r155: [488..489]
 r156: [480..487]
 r157: [476..477]
 r158: [470..471]
 r159: [468..469]
 r160: [464..465]
 r161: [458..459]
 r162: [456..457]
 r163: [452..453]
 r164: [446..447]
 r165: [444..445]
 r166: [440..441]
 r167: [434..435]
 r168: [432..433]
 r169: [428..429]
 r170: [422..423]
 r171: [420..421]
 r172: [416..417]
 r173: [410..411]
 r174: [408..409]
 r175: [404..405]
 r176: [398..399]
 r177: [396..397]
 r178: [392..393]
 r179: [386..387]
 r180: [384..385]
 r181: [380..381]
 r182: [374..375]
 r183: [372..373]
 r184: [368..369]
 r185: [362..363]
 r186: [360..361]
 r187: [356..357]
 r188: [350..351]
 r189: [348..349]
 r190: [344..345]
 r191: [338..339]
 r192: [336..337]
 r193: [332..333]
 r194: [326..327]
 r195: [324..325]
 r196: [320..321]
 r197: [314..315]
 r198: [312..313]
 r199: [308..309]
 r200: [302..303]
 r201: [300..301]
 r202: [296..297]
 r203: [290..291]
 r204: [288..289]
 r205: [284..285]
 r206: [278..279]
 r207: [276..277]
 r208: [272..273]
 r209: [266..267]
 r210: [264..265]
 r211: [260..261]
 r212: [256..257]
 r213: [254..255]
 r214: [250..251]
 r215: [246..247]
 r216: [244..245]
 r217: [240..241]
 r218: [236..237]
 r219: [234..235]
 r220: [230..231]
 r221: [226..227]
 r222: [224..225]
 r223: [220..221]
 r224: [216..217]
 r225: [214..215]
 r226: [210..211]
 r227: [206..207]
 r228: [204..205]
 r229: [200..201]
 r230: [196..197]
 r231: [194..195]
 r232: [190..191]
 r233: [186..187]
 r234: [184..185]
 r235: [180..181]
 r236: [176..177]
 r237: [174..175]
 r238: [170..171]
 r239: [166..167]
 r240: [164..165]
 r241: [160..161]
 r242: [156..157]
 r243: [154..155]
 r244: [150..151]
 r245: [146..147]
 r246: [144..145]
 r247: [140..141]
 r248: [136..137]
 r249: [134..135]
 r250: [130..131]
 r251: [126..127]
 r252: [124..125]
 r253: [120..121]
 r254: [116..117]
 r255: [114..115]
 r256: [110..111]
 r257: [106..107]
 r258: [104..105]
 r259: [100..101]
 r260: [96..97]
 r261: [94..95]
 r262: [90..91]
 r263: [86..87]
 r264: [84..85]
 r265: [80..81]
 r266: [76..77]
 r267: [74..75]
 r268: [70..71]
 r269: [66..67]
 r270: [64..65]
 r271: [60..61]
 r272: [56..57]
 r273: [54..55]
 r274: [50..51]
 r275: [46..47]
 r276: [44..45]
 r277: [40..41]
 r278: [842..843]
 r279: [838..839]
 r280: [834..837]
 r281: [36..39]
 r282: [30..33]
 r283: [24..27]
 r284: [18..21]
 r285: [12..15]
 r286: [6..9]
 r287: [0..3]
 r288: [760..761]
 r289: [754..755]
 r290: [752..753]
 r291: [750..751]
 r292: [744..745]
 r293: [742..743]
 r294: [740..741]
 r295: [734..735]
 r296: [730..731]
 r297: [724..725]
 r298: [720..721]
 r299: [714..715]
 r300: [712..713]
 r301: [710..711]
 r302: [704..705]
 r303: [702..703]
 r304: [700..701]
 r305: [694..695]
 r306: [692..693]
 r307: [690..691]
 r308: [684..685]
 r309: [682..683]
 r310: [680..681]
 r311: [674..675]
 r312: [672..673]
 r313: [670..671]
 r314: [664..665]
 r315: [662..663]
 r316: [660..661]
 r317: [654..655]
 r318: [652..653]
 r319: [650..651]
 r320: [644..645]
 r321: [642..643]
 r322: [640..641]
 r323: [634..635]
 r324: [632..633]
 r325: [630..631]
 r326: [624..625]
 r327: [622..623]
 r328: [620..621]
 r329: [614..615]
 r330: [612..613]
 r331: [610..611]
 r332: [604..605]
 r333: [602..603]
 r334: [600..601]
 r335: [594..595]
 r336: [592..593]
 r337: [590..591]
 r338: [584..585]
 r339: [772..773]
 r340: [766..767]
 r341: [762..763]
 r342: [764..765]
 r343: [580..581]
 r344: [784..785]
 r345: [778..779]
 r346: [774..775]
 r347: [776..777]
 r348: [576..577]
 r349: [572..573]
 r350: [566..567]
 r351: [796..797]
 r352: [790..791]
 r353: [786..787]
 r354: [788..789]
 r355: [558..559]
 r356: [554..555]
 r357: [548..549]
 r358: [808..809]
 r359: [802..803]
 r360: [798..799]
 r361: [800..801]
 r362: [540..541]
 r363: [536..537]
 r364: [530..531]
 r365: [820..821]
 r366: [814..815]
 r367: [810..811]
 r368: [812..813]
 r369: [520..521]
 r370: [516..517]
 r371: [510..511]
 r372: [832..833]
 r373: [826..827]
 r374: [822..823]
 r375: [824..825]
 r376: [500..501]
 r377: [496..497]
 r378: [490..491]
 r379: [478..479]
 r380: [476..477] [472..473]
 r381: [474..475]
 r382: [470..471]
 r383: [466..467]
 r384: [464..465] [460..461]
 r385: [462..463]
 r386: [458..459]
 r387: [456..457]
 r388: [454..455]
 r389: [452..453] [448..449]
 r390: [450..451]
 r391: [446..447]
 r392: [442..443]
 r393: [440..441] [436..437]
 r394: [438..439]
 r395: [434..435]
 r396: [430..431]
 r397: [428..429] [424..425]
 r398: [426..427]
 r399: [422..423]
 r400: [418..419]
 r401: [416..417] [412..413]
 r402: [414..415]
 r403: [410..411]
 r404: [406..407]
 r405: [404..405] [400..401]
 r406: [402..403]
 r407: [398..399]
 r408: [394..395]
 r409: [392..393] [388..389]
 r410: [390..391]
 r411: [386..387]
 r412: [384..385]
 r413: [382..383]
 r414: [380..381] [376..377]
 r415: [378..379]
 r416: [374..375]
 r417: [370..371]
 r418: [368..369] [364..365]
 r419: [366..367]
 r420: [362..363]
 r421: [358..359]
 r422: [356..357] [352..353]
 r423: [354..355]
 r424: [350..351]
 r425: [346..347]
 r426: [344..345] [340..341]
 r427: [342..343]
 r428: [338..339]
 r429: [334..335]
 r430: [332..333] [328..329]
 r431: [330..331]
 r432: [326..327]
 r433: [324..325]
 r434: [322..323]
 r435: [320..321] [316..317]
 r436: [318..319]
 r437: [314..315]
 r438: [310..311]
 r439: [308..309] [304..305]
 r440: [306..307]
 r441: [302..303]
 r442: [298..299]
 r443: [296..297] [292..293]
 r444: [294..295]
 r445: [290..291]
 r446: [286..287]
 r447: [284..285] [280..281]
 r448: [282..283]
 r449: [278..279]
 r450: [274..275]
 r451: [272..273] [268..269]
 r452: [270..271]
 r453: [266..267]
 r454: [262..263]
 r455: [256..257]
 r456: [252..253]
 r457: [246..247]
 r458: [242..243]
 r459: [236..237]
 r460: [232..233]
 r461: [226..227]
 r462: [222..223]
 r463: [216..217]
 r464: [212..213]
 r465: [206..207]
 r466: [202..203]
 r467: [196..197]
 r468: [192..193]
 r469: [186..187]
 r470: [182..183]
 r471: [176..177]
 r472: [172..173]
 r473: [166..167]
 r474: [162..163]
 r475: [156..157]
 r476: [152..153]
 r477: [146..147]
 r478: [142..143]
 r479: [136..137]
 r480: [132..133]
 r481: [126..127]
 r482: [122..123]
 r483: [116..117]
 r484: [114..115]
 r485: [112..113]
 r486: [106..107]
 r487: [104..105]
 r488: [102..103]
 r489: [96..97]
 r490: [94..95]
 r491: [92..93]
 r492: [86..87]
 r493: [84..85]
 r494: [82..83]
 r495: [76..77]
 r496: [72..73]
 r497: [66..67]
 r498: [62..63]
 r499: [56..57]
 r500: [52..53]
 r501: [46..47]
 r502: [844..845]
 r503: [838..839]
 r504: [834..835]
 r505: [836..837]
 r506: [42..43]
 r507: [34..35]
 r508: [28..29]
 r509: [22..23]
 r510: [16..17]
 r511: [10..11]
 r512: [4..5]
 r513: [756..757]
 r514: [746..747]
 r515: [736..737]
 r516: [726..727]
 r517: [716..717]
 r518: [706..707]
 r519: [696..697]
 r520: [686..687]
 r521: [676..677]
 r522: [666..667]
 r523: [656..657]
 r524: [646..647]
 r525: [636..637]
 r526: [626..627]
 r527: [616..617]
 r528: [606..607]
 r529: [596..597]
 r530: [586..587]
 r531: [768..769]
 r532: [780..781]
 r533: [568..569]
 r534: [562..563]
 r535: [560..561]
 r536: [792..793]
 r537: [550..551]
 r538: [544..545]
 r539: [542..543]
 r540: [804..805]
 r541: [532..533]
 r542: [526..527]
 r543: [524..525]
 r544: [522..523]
 r545: [816..817]
 r546: [512..513]
 r547: [506..507]
 r548: [504..505]
 r549: [502..503]
 r550: [828..829]
 r551: [492..493]
 r552: [486..487]
 r553: [484..485]
 r554: [482..483]
 r555: [480..481]
 r556: [258..259]
 r557: [248..249]
 r558: [238..239]
 r559: [228..229]
 r560: [218..219]
 r561: [208..209]
 r562: [198..199]
 r563: [188..189]
 r564: [178..179]
 r565: [168..169]
 r566: [158..159]
 r567: [148..149]
 r568: [138..139]
 r569: [128..129]
 r570: [118..119]
 r571: [108..109]
 r572: [98..99]
 r573: [88..89]
 r574: [78..79]
 r575: [68..69]
 r576: [58..59]
 r577: [48..49]
 r578: [840..841]
 r579: [38..39]
 r580: [36..37]
 r581: [32..33]
 r582: [30..31]
 r583: [26..27]
 r584: [24..25]
 r585: [20..21]
 r586: [18..19]
 r587: [14..15]
 r588: [12..13]
 r589: [8..9]
 r590: [6..7]
 r591: [2..3]
 r592: [0..1]
	 Assigning to 513 (cl=GENERAL_REGS, orig=60, freq=3, tfirst=513, tfreq=3)...
	   Assign 0 to reload r513 (freq=3)
	 Assigning to 514 (cl=GENERAL_REGS, orig=63, freq=3, tfirst=514, tfreq=3)...
	   Assign 0 to reload r514 (freq=3)
	 Assigning to 515 (cl=GENERAL_REGS, orig=66, freq=3, tfirst=515, tfreq=3)...
	   Assign 0 to reload r515 (freq=3)
	 Assigning to 516 (cl=GENERAL_REGS, orig=69, freq=3, tfirst=516, tfreq=3)...
	   Assign 0 to reload r516 (freq=3)
	 Assigning to 517 (cl=GENERAL_REGS, orig=72, freq=3, tfirst=517, tfreq=3)...
	   Assign 0 to reload r517 (freq=3)
	 Assigning to 518 (cl=GENERAL_REGS, orig=75, freq=3, tfirst=518, tfreq=3)...
	   Assign 0 to reload r518 (freq=3)
	 Assigning to 519 (cl=GENERAL_REGS, orig=78, freq=3, tfirst=519, tfreq=3)...
	   Assign 0 to reload r519 (freq=3)
	 Assigning to 520 (cl=GENERAL_REGS, orig=81, freq=3, tfirst=520, tfreq=3)...
	   Assign 0 to reload r520 (freq=3)
	 Assigning to 521 (cl=GENERAL_REGS, orig=84, freq=3, tfirst=521, tfreq=3)...
	   Assign 0 to reload r521 (freq=3)
	 Assigning to 522 (cl=GENERAL_REGS, orig=87, freq=3, tfirst=522, tfreq=3)...
	   Assign 0 to reload r522 (freq=3)
	 Assigning to 523 (cl=GENERAL_REGS, orig=90, freq=3, tfirst=523, tfreq=3)...
	   Assign 0 to reload r523 (freq=3)
	 Assigning to 524 (cl=GENERAL_REGS, orig=93, freq=3, tfirst=524, tfreq=3)...
	   Assign 0 to reload r524 (freq=3)
	 Assigning to 525 (cl=GENERAL_REGS, orig=96, freq=3, tfirst=525, tfreq=3)...
	   Assign 0 to reload r525 (freq=3)
	 Assigning to 526 (cl=GENERAL_REGS, orig=99, freq=3, tfirst=526, tfreq=3)...
	   Assign 0 to reload r526 (freq=3)
	 Assigning to 527 (cl=GENERAL_REGS, orig=102, freq=3, tfirst=527, tfreq=3)...
	   Assign 0 to reload r527 (freq=3)
	 Assigning to 528 (cl=GENERAL_REGS, orig=105, freq=3, tfirst=528, tfreq=3)...
	   Assign 0 to reload r528 (freq=3)
	 Assigning to 529 (cl=GENERAL_REGS, orig=108, freq=3, tfirst=529, tfreq=3)...
	   Assign 0 to reload r529 (freq=3)
	 Assigning to 530 (cl=GENERAL_REGS, orig=111, freq=3, tfirst=530, tfreq=3)...
	   Assign 0 to reload r530 (freq=3)
	 Assigning to 531 (cl=GENERAL_REGS, orig=115, freq=3, tfirst=531, tfreq=3)...
	   Assign 0 to reload r531 (freq=3)
	 Assigning to 532 (cl=GENERAL_REGS, orig=119, freq=3, tfirst=532, tfreq=3)...
	   Assign 0 to reload r532 (freq=3)
	 Assigning to 533 (cl=GENERAL_REGS, orig=122, freq=3, tfirst=533, tfreq=3)...
	   Assign 0 to reload r533 (freq=3)
	 Assigning to 536 (cl=GENERAL_REGS, orig=127, freq=3, tfirst=536, tfreq=3)...
	   Assign 0 to reload r536 (freq=3)
	 Assigning to 537 (cl=GENERAL_REGS, orig=130, freq=3, tfirst=537, tfreq=3)...
	   Assign 0 to reload r537 (freq=3)
	 Assigning to 540 (cl=GENERAL_REGS, orig=135, freq=3, tfirst=540, tfreq=3)...
	   Assign 0 to reload r540 (freq=3)
	 Assigning to 541 (cl=GENERAL_REGS, orig=138, freq=3, tfirst=541, tfreq=3)...
	   Assign 0 to reload r541 (freq=3)
	 Assigning to 545 (cl=GENERAL_REGS, orig=143, freq=3, tfirst=545, tfreq=3)...
	   Assign 0 to reload r545 (freq=3)
	 Assigning to 546 (cl=GENERAL_REGS, orig=146, freq=3, tfirst=546, tfreq=3)...
	   Assign 0 to reload r546 (freq=3)
	 Assigning to 550 (cl=GENERAL_REGS, orig=151, freq=3, tfirst=550, tfreq=3)...
	   Assign 0 to reload r550 (freq=3)
	 Assigning to 551 (cl=GENERAL_REGS, orig=154, freq=3, tfirst=551, tfreq=3)...
	   Assign 0 to reload r551 (freq=3)
	 Assigning to 556 (cl=GENERAL_REGS, orig=212, freq=3, tfirst=556, tfreq=3)...
	   Assign 0 to reload r556 (freq=3)
	 Assigning to 557 (cl=GENERAL_REGS, orig=215, freq=3, tfirst=557, tfreq=3)...
	   Assign 0 to reload r557 (freq=3)
	 Assigning to 558 (cl=GENERAL_REGS, orig=218, freq=3, tfirst=558, tfreq=3)...
	   Assign 0 to reload r558 (freq=3)
	 Assigning to 559 (cl=GENERAL_REGS, orig=221, freq=3, tfirst=559, tfreq=3)...
	   Assign 0 to reload r559 (freq=3)
	 Assigning to 560 (cl=GENERAL_REGS, orig=224, freq=3, tfirst=560, tfreq=3)...
	   Assign 0 to reload r560 (freq=3)
	 Assigning to 561 (cl=GENERAL_REGS, orig=227, freq=3, tfirst=561, tfreq=3)...
	   Assign 0 to reload r561 (freq=3)
	 Assigning to 562 (cl=GENERAL_REGS, orig=230, freq=3, tfirst=562, tfreq=3)...
	   Assign 0 to reload r562 (freq=3)
	 Assigning to 563 (cl=GENERAL_REGS, orig=233, freq=3, tfirst=563, tfreq=3)...
	   Assign 0 to reload r563 (freq=3)
	 Assigning to 564 (cl=GENERAL_REGS, orig=236, freq=3, tfirst=564, tfreq=3)...
	   Assign 0 to reload r564 (freq=3)
	 Assigning to 565 (cl=GENERAL_REGS, orig=239, freq=3, tfirst=565, tfreq=3)...
	   Assign 0 to reload r565 (freq=3)
	 Assigning to 566 (cl=GENERAL_REGS, orig=242, freq=3, tfirst=566, tfreq=3)...
	   Assign 0 to reload r566 (freq=3)
	 Assigning to 567 (cl=GENERAL_REGS, orig=245, freq=3, tfirst=567, tfreq=3)...
	   Assign 0 to reload r567 (freq=3)
	 Assigning to 568 (cl=GENERAL_REGS, orig=248, freq=3, tfirst=568, tfreq=3)...
	   Assign 0 to reload r568 (freq=3)
	 Assigning to 569 (cl=GENERAL_REGS, orig=251, freq=3, tfirst=569, tfreq=3)...
	   Assign 0 to reload r569 (freq=3)
	 Assigning to 570 (cl=GENERAL_REGS, orig=254, freq=3, tfirst=570, tfreq=3)...
	   Assign 0 to reload r570 (freq=3)
	 Assigning to 571 (cl=GENERAL_REGS, orig=257, freq=3, tfirst=571, tfreq=3)...
	   Assign 0 to reload r571 (freq=3)
	 Assigning to 572 (cl=GENERAL_REGS, orig=260, freq=3, tfirst=572, tfreq=3)...
	   Assign 0 to reload r572 (freq=3)
	 Assigning to 573 (cl=GENERAL_REGS, orig=263, freq=3, tfirst=573, tfreq=3)...
	   Assign 0 to reload r573 (freq=3)
	 Assigning to 574 (cl=GENERAL_REGS, orig=266, freq=3, tfirst=574, tfreq=3)...
	   Assign 0 to reload r574 (freq=3)
	 Assigning to 575 (cl=GENERAL_REGS, orig=269, freq=3, tfirst=575, tfreq=3)...
	   Assign 0 to reload r575 (freq=3)
	 Assigning to 576 (cl=GENERAL_REGS, orig=272, freq=3, tfirst=576, tfreq=3)...
	   Assign 0 to reload r576 (freq=3)
	 Assigning to 577 (cl=GENERAL_REGS, orig=275, freq=3, tfirst=577, tfreq=3)...
	   Assign 0 to reload r577 (freq=3)
	 Assigning to 578 (cl=GENERAL_REGS, orig=279, freq=3, tfirst=578, tfreq=3)...
	   Assign 0 to reload r578 (freq=3)
	 Assigning to 534 (cl=GENERAL_REGS, orig=534, freq=2, tfirst=534, tfreq=2)...
	   Assign 3 to reload r534 (freq=2)
	 Assigning to 535 (cl=GENERAL_REGS, orig=535, freq=2, tfirst=535, tfreq=2)...
	   Assign 2 to reload r535 (freq=2)
	 Assigning to 538 (cl=GENERAL_REGS, orig=538, freq=2, tfirst=538, tfreq=2)...
	   Assign 4 to reload r538 (freq=2)
	 Assigning to 539 (cl=GENERAL_REGS, orig=539, freq=2, tfirst=539, tfreq=2)...
	   Assign 5 to reload r539 (freq=2)
	 Assigning to 542 (cl=GENERAL_REGS, orig=542, freq=2, tfirst=542, tfreq=2)...
	   Assign 3 to reload r542 (freq=2)
	 Assigning to 543 (cl=GENERAL_REGS, orig=543, freq=2, tfirst=543, tfreq=2)...
	   Assign 2 to reload r543 (freq=2)
	 Assigning to 544 (cl=GENERAL_REGS, orig=544, freq=2, tfirst=544, tfreq=2)...
	   Assign 4 to reload r544 (freq=2)
	 Assigning to 547 (cl=GENERAL_REGS, orig=547, freq=2, tfirst=547, tfreq=2)...
	   Assign 5 to reload r547 (freq=2)
	 Assigning to 548 (cl=GENERAL_REGS, orig=548, freq=2, tfirst=548, tfreq=2)...
	   Assign 3 to reload r548 (freq=2)
	 Assigning to 549 (cl=GENERAL_REGS, orig=549, freq=2, tfirst=549, tfreq=2)...
	   Assign 2 to reload r549 (freq=2)
	 Assigning to 552 (cl=GENERAL_REGS, orig=552, freq=2, tfirst=552, tfreq=2)...
	   Assign 4 to reload r552 (freq=2)
	 Assigning to 553 (cl=GENERAL_REGS, orig=553, freq=2, tfirst=553, tfreq=2)...
	   Assign 5 to reload r553 (freq=2)
	 Assigning to 554 (cl=GENERAL_REGS, orig=554, freq=2, tfirst=554, tfreq=2)...
	   Assign 3 to reload r554 (freq=2)
	 Assigning to 555 (cl=GENERAL_REGS, orig=555, freq=2, tfirst=555, tfreq=2)...
	   Assign 2 to reload r555 (freq=2)
	 Assigning to 579 (cl=GENERAL_REGS, orig=579, freq=2, tfirst=579, tfreq=2)...
	   Assign 4 to reload r579 (freq=2)
	 Assigning to 580 (cl=GENERAL_REGS, orig=580, freq=2, tfirst=580, tfreq=2)...
	   Assign 5 to reload r580 (freq=2)
	 Assigning to 581 (cl=GENERAL_REGS, orig=581, freq=2, tfirst=581, tfreq=2)...
	   Assign 3 to reload r581 (freq=2)
	 Assigning to 582 (cl=GENERAL_REGS, orig=582, freq=2, tfirst=582, tfreq=2)...
	   Assign 2 to reload r582 (freq=2)
	 Assigning to 583 (cl=GENERAL_REGS, orig=583, freq=2, tfirst=583, tfreq=2)...
	   Assign 4 to reload r583 (freq=2)
	 Assigning to 584 (cl=GENERAL_REGS, orig=584, freq=2, tfirst=584, tfreq=2)...
	   Assign 5 to reload r584 (freq=2)
	 Assigning to 585 (cl=GENERAL_REGS, orig=585, freq=2, tfirst=585, tfreq=2)...
	   Assign 3 to reload r585 (freq=2)
	 Assigning to 586 (cl=GENERAL_REGS, orig=586, freq=2, tfirst=586, tfreq=2)...
	   Assign 2 to reload r586 (freq=2)
	 Assigning to 587 (cl=GENERAL_REGS, orig=587, freq=2, tfirst=587, tfreq=2)...
	   Assign 4 to reload r587 (freq=2)
	 Assigning to 588 (cl=GENERAL_REGS, orig=588, freq=2, tfirst=588, tfreq=2)...
	   Assign 5 to reload r588 (freq=2)
	 Assigning to 589 (cl=GENERAL_REGS, orig=589, freq=2, tfirst=589, tfreq=2)...
	   Assign 3 to reload r589 (freq=2)
	 Assigning to 590 (cl=GENERAL_REGS, orig=590, freq=2, tfirst=590, tfreq=2)...
	   Assign 2 to reload r590 (freq=2)
	 Assigning to 591 (cl=GENERAL_REGS, orig=591, freq=2, tfirst=591, tfreq=2)...
	   Assign 4 to reload r591 (freq=2)
	 Assigning to 592 (cl=GENERAL_REGS, orig=592, freq=2, tfirst=592, tfreq=2)...
	   Assign 5 to reload r592 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 745:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 739:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 727:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 721:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 716:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 709:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 700:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 685:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 679:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 673:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 667:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 660:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 646:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 639:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 633:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 621:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 603:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 597:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 591:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 588:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 585:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 573:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 567:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 561:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 555:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 552:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 549:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 536:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 523:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 510:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 497:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 457:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 444:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 417:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 378:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 365:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 295:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 264:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 259:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 232:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 227:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 201:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 189:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 171:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 166:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 150:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 128:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 107:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=24, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 16
changing reg in insn 19
changing reg in insn 19
changing reg in insn 19
changing reg in insn 21
changing reg in insn 23
changing reg in insn 26
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 30
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
changing reg in insn 36
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 45
changing reg in insn 45
changing reg in insn 45
changing reg in insn 47
changing reg in insn 49
changing reg in insn 52
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 56
changing reg in insn 59
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 63
changing reg in insn 66
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 70
changing reg in insn 73
changing reg in insn 73
changing reg in insn 73
changing reg in insn 75
changing reg in insn 77
changing reg in insn 80
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 84
changing reg in insn 87
changing reg in insn 87
changing reg in insn 87
changing reg in insn 89
changing reg in insn 91
changing reg in insn 94
changing reg in insn 94
changing reg in insn 94
changing reg in insn 96
changing reg in insn 98
changing reg in insn 101
changing reg in insn 101
changing reg in insn 101
changing reg in insn 103
changing reg in insn 105
changing reg in insn 108
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 112
changing reg in insn 115
changing reg in insn 115
changing reg in insn 115
changing reg in insn 117
changing reg in insn 119
changing reg in insn 122
changing reg in insn 122
changing reg in insn 122
changing reg in insn 124
changing reg in insn 126
changing reg in insn 129
changing reg in insn 129
changing reg in insn 129
changing reg in insn 131
changing reg in insn 133
changing reg in insn 136
changing reg in insn 136
changing reg in insn 137
changing reg in insn 154
changing reg in insn 156
changing reg in insn 143
changing reg in insn 146
changing reg in insn 146
changing reg in insn 146
changing reg in insn 149
changing reg in insn 175
changing reg in insn 177
changing reg in insn 164
changing reg in insn 167
changing reg in insn 167
changing reg in insn 167
changing reg in insn 170
changing reg in insn 181
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 188
changing reg in insn 187
changing reg in insn 186
changing reg in insn 205
changing reg in insn 207
changing reg in insn 194
changing reg in insn 197
changing reg in insn 197
changing reg in insn 197
changing reg in insn 200
changing reg in insn 211
changing reg in insn 214
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 219
changing reg in insn 218
changing reg in insn 217
changing reg in insn 216
changing reg in insn 236
changing reg in insn 238
changing reg in insn 225
changing reg in insn 228
changing reg in insn 228
changing reg in insn 228
changing reg in insn 231
changing reg in insn 242
changing reg in insn 245
changing reg in insn 245
changing reg in insn 246
changing reg in insn 246
changing reg in insn 251
changing reg in insn 250
changing reg in insn 249
changing reg in insn 248
changing reg in insn 247
changing reg in insn 268
changing reg in insn 270
changing reg in insn 257
changing reg in insn 260
changing reg in insn 260
changing reg in insn 260
changing reg in insn 263
changing reg in insn 274
changing reg in insn 277
changing reg in insn 277
changing reg in insn 278
changing reg in insn 278
changing reg in insn 282
changing reg in insn 281
changing reg in insn 280
changing reg in insn 279
changing reg in insn 299
changing reg in insn 301
changing reg in insn 288
changing reg in insn 291
changing reg in insn 291
changing reg in insn 291
changing reg in insn 294
changing reg in insn 305
changing reg in insn 308
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 314
changing reg in insn 313
changing reg in insn 312
changing reg in insn 311
changing reg in insn 310
changing reg in insn 316
changing reg in insn 321
changing reg in insn 319
changing reg in insn 317
changing reg in insn 321
changing reg in insn 319
changing reg in insn 324
changing reg in insn 326
changing reg in insn 326
changing reg in insn 327
changing reg in insn 329
changing reg in insn 334
changing reg in insn 332
changing reg in insn 330
changing reg in insn 334
changing reg in insn 332
changing reg in insn 337
changing reg in insn 339
changing reg in insn 339
changing reg in insn 339
changing reg in insn 341
changing reg in insn 343
changing reg in insn 348
changing reg in insn 346
changing reg in insn 344
changing reg in insn 348
changing reg in insn 346
changing reg in insn 351
changing reg in insn 353
changing reg in insn 353
changing reg in insn 354
changing reg in insn 356
changing reg in insn 361
changing reg in insn 359
changing reg in insn 357
changing reg in insn 361
changing reg in insn 359
changing reg in insn 364
changing reg in insn 366
changing reg in insn 366
changing reg in insn 367
changing reg in insn 369
changing reg in insn 374
changing reg in insn 372
changing reg in insn 370
changing reg in insn 374
changing reg in insn 372
changing reg in insn 377
changing reg in insn 379
changing reg in insn 379
changing reg in insn 380
changing reg in insn 382
changing reg in insn 387
changing reg in insn 385
changing reg in insn 383
changing reg in insn 387
changing reg in insn 385
changing reg in insn 390
changing reg in insn 392
changing reg in insn 392
changing reg in insn 393
changing reg in insn 395
changing reg in insn 400
changing reg in insn 398
changing reg in insn 396
changing reg in insn 400
changing reg in insn 398
changing reg in insn 403
changing reg in insn 405
changing reg in insn 405
changing reg in insn 406
changing reg in insn 408
changing reg in insn 413
changing reg in insn 411
changing reg in insn 409
changing reg in insn 413
changing reg in insn 411
changing reg in insn 416
changing reg in insn 418
changing reg in insn 418
changing reg in insn 418
changing reg in insn 420
changing reg in insn 422
changing reg in insn 427
changing reg in insn 425
changing reg in insn 423
changing reg in insn 427
changing reg in insn 425
changing reg in insn 430
changing reg in insn 432
changing reg in insn 432
changing reg in insn 433
changing reg in insn 435
changing reg in insn 440
changing reg in insn 438
changing reg in insn 436
changing reg in insn 440
changing reg in insn 438
changing reg in insn 443
changing reg in insn 445
changing reg in insn 445
changing reg in insn 446
changing reg in insn 448
changing reg in insn 453
changing reg in insn 451
changing reg in insn 449
changing reg in insn 453
changing reg in insn 451
changing reg in insn 456
changing reg in insn 458
changing reg in insn 458
changing reg in insn 459
changing reg in insn 461
changing reg in insn 466
changing reg in insn 464
changing reg in insn 462
changing reg in insn 466
changing reg in insn 464
changing reg in insn 469
changing reg in insn 471
changing reg in insn 471
changing reg in insn 472
changing reg in insn 474
changing reg in insn 479
changing reg in insn 477
changing reg in insn 475
changing reg in insn 479
changing reg in insn 477
changing reg in insn 482
changing reg in insn 484
changing reg in insn 484
changing reg in insn 484
changing reg in insn 486
changing reg in insn 488
changing reg in insn 493
changing reg in insn 491
changing reg in insn 489
changing reg in insn 493
changing reg in insn 491
changing reg in insn 496
changing reg in insn 498
changing reg in insn 498
changing reg in insn 499
changing reg in insn 501
changing reg in insn 506
changing reg in insn 504
changing reg in insn 502
changing reg in insn 506
changing reg in insn 504
changing reg in insn 509
changing reg in insn 511
changing reg in insn 511
changing reg in insn 512
changing reg in insn 514
changing reg in insn 519
changing reg in insn 517
changing reg in insn 515
changing reg in insn 519
changing reg in insn 517
changing reg in insn 522
changing reg in insn 524
changing reg in insn 524
changing reg in insn 525
changing reg in insn 527
changing reg in insn 532
changing reg in insn 530
changing reg in insn 528
changing reg in insn 532
changing reg in insn 530
changing reg in insn 535
changing reg in insn 537
changing reg in insn 537
changing reg in insn 538
changing reg in insn 540
changing reg in insn 545
changing reg in insn 543
changing reg in insn 541
changing reg in insn 545
changing reg in insn 543
changing reg in insn 548
changing reg in insn 550
changing reg in insn 550
changing reg in insn 551
changing reg in insn 553
changing reg in insn 556
changing reg in insn 556
changing reg in insn 557
changing reg in insn 559
changing reg in insn 562
changing reg in insn 562
changing reg in insn 563
changing reg in insn 565
changing reg in insn 568
changing reg in insn 568
changing reg in insn 569
changing reg in insn 571
changing reg in insn 574
changing reg in insn 574
changing reg in insn 575
changing reg in insn 577
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 583
changing reg in insn 586
changing reg in insn 586
changing reg in insn 587
changing reg in insn 589
changing reg in insn 592
changing reg in insn 592
changing reg in insn 593
changing reg in insn 595
changing reg in insn 598
changing reg in insn 598
changing reg in insn 599
changing reg in insn 601
changing reg in insn 604
changing reg in insn 604
changing reg in insn 605
changing reg in insn 607
changing reg in insn 610
changing reg in insn 610
changing reg in insn 611
changing reg in insn 613
changing reg in insn 616
changing reg in insn 616
changing reg in insn 617
changing reg in insn 619
changing reg in insn 622
changing reg in insn 622
changing reg in insn 623
changing reg in insn 625
changing reg in insn 628
changing reg in insn 628
changing reg in insn 629
changing reg in insn 631
changing reg in insn 634
changing reg in insn 634
changing reg in insn 635
changing reg in insn 637
changing reg in insn 640
changing reg in insn 640
changing reg in insn 640
changing reg in insn 642
changing reg in insn 644
changing reg in insn 647
changing reg in insn 647
changing reg in insn 647
changing reg in insn 649
changing reg in insn 651
changing reg in insn 654
changing reg in insn 654
changing reg in insn 654
changing reg in insn 656
changing reg in insn 658
changing reg in insn 661
changing reg in insn 661
changing reg in insn 661
changing reg in insn 663
changing reg in insn 665
changing reg in insn 668
changing reg in insn 668
changing reg in insn 669
changing reg in insn 671
changing reg in insn 674
changing reg in insn 674
changing reg in insn 675
changing reg in insn 677
changing reg in insn 680
changing reg in insn 680
changing reg in insn 681
changing reg in insn 683
changing reg in insn 686
changing reg in insn 686
changing reg in insn 687
changing reg in insn 704
changing reg in insn 706
changing reg in insn 693
changing reg in insn 696
changing reg in insn 696
changing reg in insn 696
changing reg in insn 699
changing reg in insn 716
changing reg in insn 720
changing reg in insn 719
changing reg in insn 718
changing reg in insn 717
changing reg in insn 722
changing reg in insn 726
changing reg in insn 725
changing reg in insn 724
changing reg in insn 723
changing reg in insn 728
changing reg in insn 732
changing reg in insn 731
changing reg in insn 730
changing reg in insn 729
changing reg in insn 734
changing reg in insn 738
changing reg in insn 737
changing reg in insn 736
changing reg in insn 735
changing reg in insn 740
changing reg in insn 744
changing reg in insn 743
changing reg in insn 742
changing reg in insn 741
changing reg in insn 746
changing reg in insn 750
changing reg in insn 749
changing reg in insn 748
changing reg in insn 747
changing reg in insn 752
changing reg in insn 756
changing reg in insn 755
changing reg in insn 754
changing reg in insn 753
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 41
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 135
changing reg in insn 142
changing reg in insn 143
changing reg in insn 145
changing reg in insn 146
changing reg in insn 148
changing reg in insn 149
changing reg in insn 147
changing reg in insn 148
changing reg in insn 153
changing reg in insn 154
changing reg in insn 163
changing reg in insn 164
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 168
changing reg in insn 169
changing reg in insn 174
changing reg in insn 175
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 193
changing reg in insn 194
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 200
changing reg in insn 198
changing reg in insn 199
changing reg in insn 204
changing reg in insn 205
changing reg in insn 210
changing reg in insn 211
changing reg in insn 213
changing reg in insn 224
changing reg in insn 225
changing reg in insn 227
changing reg in insn 228
changing reg in insn 230
changing reg in insn 231
changing reg in insn 229
changing reg in insn 230
changing reg in insn 235
changing reg in insn 236
changing reg in insn 241
changing reg in insn 242
changing reg in insn 244
changing reg in insn 256
changing reg in insn 257
changing reg in insn 259
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 261
changing reg in insn 262
changing reg in insn 267
changing reg in insn 268
changing reg in insn 273
changing reg in insn 274
changing reg in insn 276
changing reg in insn 287
changing reg in insn 288
changing reg in insn 290
changing reg in insn 291
changing reg in insn 293
changing reg in insn 294
changing reg in insn 292
changing reg in insn 293
changing reg in insn 298
changing reg in insn 299
changing reg in insn 304
changing reg in insn 305
changing reg in insn 307
changing reg in insn 315
changing reg in insn 316
changing reg in insn 323
changing reg in insn 321
changing reg in insn 320
changing reg in insn 319
changing reg in insn 318
changing reg in insn 317
changing reg in insn 324
changing reg in insn 322
changing reg in insn 321
changing reg in insn 320
changing reg in insn 319
changing reg in insn 318
changing reg in insn 322
changing reg in insn 323
changing reg in insn 325
changing reg in insn 328
changing reg in insn 329
changing reg in insn 336
changing reg in insn 334
changing reg in insn 333
changing reg in insn 332
changing reg in insn 331
changing reg in insn 330
changing reg in insn 337
changing reg in insn 335
changing reg in insn 334
changing reg in insn 333
changing reg in insn 332
changing reg in insn 331
changing reg in insn 335
changing reg in insn 336
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 343
changing reg in insn 350
changing reg in insn 348
changing reg in insn 347
changing reg in insn 346
changing reg in insn 345
changing reg in insn 344
changing reg in insn 351
changing reg in insn 349
changing reg in insn 348
changing reg in insn 347
changing reg in insn 346
changing reg in insn 345
changing reg in insn 349
changing reg in insn 350
changing reg in insn 352
changing reg in insn 355
changing reg in insn 356
changing reg in insn 363
changing reg in insn 361
changing reg in insn 360
changing reg in insn 359
changing reg in insn 358
changing reg in insn 357
changing reg in insn 364
changing reg in insn 362
changing reg in insn 361
changing reg in insn 360
changing reg in insn 359
changing reg in insn 358
changing reg in insn 362
changing reg in insn 363
changing reg in insn 365
changing reg in insn 368
changing reg in insn 369
changing reg in insn 376
changing reg in insn 374
changing reg in insn 373
changing reg in insn 372
changing reg in insn 371
changing reg in insn 370
changing reg in insn 377
changing reg in insn 375
changing reg in insn 374
changing reg in insn 373
changing reg in insn 372
changing reg in insn 371
changing reg in insn 375
changing reg in insn 376
changing reg in insn 378
changing reg in insn 381
changing reg in insn 382
changing reg in insn 389
changing reg in insn 387
changing reg in insn 386
changing reg in insn 385
changing reg in insn 384
changing reg in insn 383
changing reg in insn 390
changing reg in insn 388
changing reg in insn 387
changing reg in insn 386
changing reg in insn 385
changing reg in insn 384
changing reg in insn 388
changing reg in insn 389
changing reg in insn 391
changing reg in insn 394
changing reg in insn 395
changing reg in insn 402
changing reg in insn 400
changing reg in insn 399
changing reg in insn 398
changing reg in insn 397
changing reg in insn 396
changing reg in insn 403
changing reg in insn 401
changing reg in insn 400
changing reg in insn 399
changing reg in insn 398
changing reg in insn 397
changing reg in insn 401
changing reg in insn 402
changing reg in insn 404
changing reg in insn 407
changing reg in insn 408
changing reg in insn 415
changing reg in insn 413
changing reg in insn 412
changing reg in insn 411
changing reg in insn 410
changing reg in insn 409
changing reg in insn 416
changing reg in insn 414
changing reg in insn 413
changing reg in insn 412
changing reg in insn 411
changing reg in insn 410
changing reg in insn 414
changing reg in insn 415
changing reg in insn 417
changing reg in insn 418
changing reg in insn 419
changing reg in insn 420
changing reg in insn 421
changing reg in insn 422
changing reg in insn 429
changing reg in insn 427
changing reg in insn 426
changing reg in insn 425
changing reg in insn 424
changing reg in insn 423
changing reg in insn 430
changing reg in insn 428
changing reg in insn 427
changing reg in insn 426
changing reg in insn 425
changing reg in insn 424
changing reg in insn 428
changing reg in insn 429
changing reg in insn 431
changing reg in insn 434
changing reg in insn 435
changing reg in insn 442
changing reg in insn 440
changing reg in insn 439
changing reg in insn 438
changing reg in insn 437
changing reg in insn 436
changing reg in insn 443
changing reg in insn 441
changing reg in insn 440
changing reg in insn 439
changing reg in insn 438
changing reg in insn 437
changing reg in insn 441
changing reg in insn 442
changing reg in insn 444
changing reg in insn 447
changing reg in insn 448
changing reg in insn 455
changing reg in insn 453
changing reg in insn 452
changing reg in insn 451
changing reg in insn 450
changing reg in insn 449
changing reg in insn 456
changing reg in insn 454
changing reg in insn 453
changing reg in insn 452
changing reg in insn 451
changing reg in insn 450
changing reg in insn 454
changing reg in insn 455
changing reg in insn 457
changing reg in insn 460
changing reg in insn 461
changing reg in insn 468
changing reg in insn 466
changing reg in insn 465
changing reg in insn 464
changing reg in insn 463
changing reg in insn 462
changing reg in insn 469
changing reg in insn 467
changing reg in insn 466
changing reg in insn 465
changing reg in insn 464
changing reg in insn 463
changing reg in insn 467
changing reg in insn 468
changing reg in insn 470
changing reg in insn 473
changing reg in insn 474
changing reg in insn 481
changing reg in insn 479
changing reg in insn 478
changing reg in insn 477
changing reg in insn 476
changing reg in insn 475
changing reg in insn 482
changing reg in insn 480
changing reg in insn 479
changing reg in insn 478
changing reg in insn 477
changing reg in insn 476
changing reg in insn 480
changing reg in insn 481
changing reg in insn 483
changing reg in insn 484
changing reg in insn 485
changing reg in insn 486
changing reg in insn 487
changing reg in insn 488
changing reg in insn 495
changing reg in insn 493
changing reg in insn 492
changing reg in insn 491
changing reg in insn 490
changing reg in insn 489
changing reg in insn 496
changing reg in insn 494
changing reg in insn 493
changing reg in insn 492
changing reg in insn 491
changing reg in insn 490
changing reg in insn 494
changing reg in insn 495
changing reg in insn 497
changing reg in insn 500
changing reg in insn 501
changing reg in insn 508
changing reg in insn 506
changing reg in insn 505
changing reg in insn 504
changing reg in insn 503
changing reg in insn 502
changing reg in insn 509
changing reg in insn 507
changing reg in insn 506
changing reg in insn 505
changing reg in insn 504
changing reg in insn 503
changing reg in insn 507
changing reg in insn 508
changing reg in insn 510
changing reg in insn 513
changing reg in insn 514
changing reg in insn 521
changing reg in insn 519
changing reg in insn 518
changing reg in insn 517
changing reg in insn 516
changing reg in insn 515
changing reg in insn 522
changing reg in insn 520
changing reg in insn 519
changing reg in insn 518
changing reg in insn 517
changing reg in insn 516
changing reg in insn 520
changing reg in insn 521
changing reg in insn 523
changing reg in insn 526
changing reg in insn 527
changing reg in insn 534
changing reg in insn 532
changing reg in insn 531
changing reg in insn 530
changing reg in insn 529
changing reg in insn 528
changing reg in insn 535
changing reg in insn 533
changing reg in insn 532
changing reg in insn 531
changing reg in insn 530
changing reg in insn 529
changing reg in insn 533
changing reg in insn 534
changing reg in insn 536
changing reg in insn 539
changing reg in insn 540
changing reg in insn 547
changing reg in insn 545
changing reg in insn 544
changing reg in insn 543
changing reg in insn 542
changing reg in insn 541
changing reg in insn 548
changing reg in insn 546
changing reg in insn 545
changing reg in insn 544
changing reg in insn 543
changing reg in insn 542
changing reg in insn 546
changing reg in insn 547
changing reg in insn 549
changing reg in insn 552
changing reg in insn 553
changing reg in insn 555
changing reg in insn 558
changing reg in insn 559
changing reg in insn 561
changing reg in insn 564
changing reg in insn 565
changing reg in insn 567
changing reg in insn 570
changing reg in insn 571
changing reg in insn 573
changing reg in insn 576
changing reg in insn 577
changing reg in insn 579
changing reg in insn 582
changing reg in insn 583
changing reg in insn 585
changing reg in insn 588
changing reg in insn 589
changing reg in insn 591
changing reg in insn 594
changing reg in insn 595
changing reg in insn 597
changing reg in insn 600
changing reg in insn 601
changing reg in insn 603
changing reg in insn 606
changing reg in insn 607
changing reg in insn 609
changing reg in insn 612
changing reg in insn 613
changing reg in insn 615
changing reg in insn 618
changing reg in insn 619
changing reg in insn 621
changing reg in insn 624
changing reg in insn 625
changing reg in insn 627
changing reg in insn 630
changing reg in insn 631
changing reg in insn 633
changing reg in insn 636
changing reg in insn 637
changing reg in insn 639
changing reg in insn 640
changing reg in insn 641
changing reg in insn 642
changing reg in insn 643
changing reg in insn 644
changing reg in insn 646
changing reg in insn 647
changing reg in insn 648
changing reg in insn 649
changing reg in insn 650
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 657
changing reg in insn 658
changing reg in insn 660
changing reg in insn 661
changing reg in insn 662
changing reg in insn 663
changing reg in insn 664
changing reg in insn 665
changing reg in insn 667
changing reg in insn 670
changing reg in insn 671
changing reg in insn 673
changing reg in insn 676
changing reg in insn 677
changing reg in insn 679
changing reg in insn 682
changing reg in insn 683
changing reg in insn 685
changing reg in insn 692
changing reg in insn 693
changing reg in insn 695
changing reg in insn 696
changing reg in insn 698
changing reg in insn 699
changing reg in insn 697
changing reg in insn 698
changing reg in insn 703
changing reg in insn 704
changing reg in insn 721
changing reg in insn 722
changing reg in insn 727
changing reg in insn 728
changing reg in insn 733
changing reg in insn 734
changing reg in insn 739
changing reg in insn 740
changing reg in insn 745
changing reg in insn 746
changing reg in insn 751
changing reg in insn 752
starting the processing of deferred insns
ending the processing of deferred insns


void init(Data_file_header*, Data_block_header*, Procpar_info*, Preprocess*, IOFiles*, InFile_struct*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={532d,568u} r1={118d,154u,106e} r2={8d,8u} r3={7d,7u} r4={8d,8u} r5={8d,8u} r6={1d,218u} r7={1d,26u} r17={239d,8u} r20={1d,1u,76e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} 
;;    total ref usage 2123{933d,1008u,182e} in 836{836 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])
        (reg:DI 5 di [ main_header ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ main_header ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])
        (reg:DI 4 si [ block_header ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ block_header ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])
        (reg:DI 37 r8 [ io_filenames ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ io_filenames ])
        (nil)))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])
        (reg:DI 38 r9 [ infile_struct ])) sim2fitman_sup.cpp:256 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ infile_struct ])
        (nil)))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 759 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:260 89 {*movsi_internal}
     (nil))
(jump_insn 759 11 760 2 (set (pc)
        (label_ref 710)) sim2fitman_sup.cpp:260 650 {jump}
     (nil)
 -> 710)
;;  succ:       25 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 760 759 712)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338
(code_label 712 760 14 3 66 "" [1 uses])
(note 14 712 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 0 ax [288])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:263 89 {*movsi_internal}
     (nil))
(insn 16 15 775 3 (set (reg:DI 0 ax [orig:59 D.6395 ] [59])
        (sign_extend:DI (reg:SI 0 ax [288]))) sim2fitman_sup.cpp:263 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [288])
        (nil)))
(insn 775 16 17 3 (set (reg:DI 0 ax [orig:60 D.6395 ] [60])
        (reg:DI 0 ax [orig:59 D.6395 ] [59])) sim2fitman_sup.cpp:263 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.6395 ] [59])
        (nil)))
(insn 17 775 776 3 (parallel [
            (set (reg:DI 0 ax [orig:60 D.6395 ] [60])
                (ashift:DI (reg:DI 0 ax [orig:60 D.6395 ] [60])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:263 513 {*ashldi3_1}
     (nil))
(insn 776 17 18 3 (set (reg:DI 1 dx [orig:60 D.6395 ] [60])
        (reg:DI 0 ax [orig:60 D.6395 ] [60])) sim2fitman_sup.cpp:263 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.6395 ] [60])
        (nil)))
(insn 18 776 19 3 (set (reg/f:DI 0 ax [289])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:263 87 {*movdi_internal_rex64}
     (nil))
(insn 19 18 20 3 (parallel [
            (set (reg/f:DI 1 dx [orig:61 D.6396 ] [61])
                (plus:DI (reg:DI 1 dx [orig:60 D.6395 ] [60])
                    (reg/f:DI 0 ax [289])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:263 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [289])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6395 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.6395 ] [60]))
                (nil)))))
(insn 20 19 21 3 (set (reg:SF 0 ax [290])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:263 135 {*movsf_internal}
     (nil))
(insn 21 20 22 3 (set (mem/j:SF (reg/f:DI 1 dx [orig:61 D.6396 ] [61]) [0 _13->acquision_time+0 S4 A64])
        (reg:SF 0 ax [290])) sim2fitman_sup.cpp:263 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [290])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 D.6396 ] [61])
            (nil))))
(insn 22 21 23 3 (set (reg:SI 0 ax [291])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:264 89 {*movsi_internal}
     (nil))
(insn 23 22 777 3 (set (reg:DI 0 ax [orig:62 D.6395 ] [62])
        (sign_extend:DI (reg:SI 0 ax [291]))) sim2fitman_sup.cpp:264 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [291])
        (nil)))
(insn 777 23 24 3 (set (reg:DI 0 ax [orig:63 D.6395 ] [63])
        (reg:DI 0 ax [orig:62 D.6395 ] [62])) sim2fitman_sup.cpp:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.6395 ] [62])
        (nil)))
(insn 24 777 778 3 (parallel [
            (set (reg:DI 0 ax [orig:63 D.6395 ] [63])
                (ashift:DI (reg:DI 0 ax [orig:63 D.6395 ] [63])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:264 513 {*ashldi3_1}
     (nil))
(insn 778 24 25 3 (set (reg:DI 1 dx [orig:63 D.6395 ] [63])
        (reg:DI 0 ax [orig:63 D.6395 ] [63])) sim2fitman_sup.cpp:264 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6395 ] [63])
        (nil)))
(insn 25 778 26 3 (set (reg/f:DI 0 ax [292])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:264 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (parallel [
            (set (reg/f:DI 1 dx [orig:64 D.6396 ] [64])
                (plus:DI (reg:DI 1 dx [orig:63 D.6395 ] [63])
                    (reg/f:DI 0 ax [292])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:264 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [292])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:63 D.6395 ] [63])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:63 D.6395 ] [63]))
                (nil)))))
(insn 27 26 28 3 (set (reg:SF 0 ax [293])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:264 135 {*movsf_internal}
     (nil))
(insn 28 27 29 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:64 D.6396 ] [64])
                (const_int 320 [0x140])) [0 _16->filter+0 S4 A64])
        (reg:SF 0 ax [293])) sim2fitman_sup.cpp:264 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [293])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:64 D.6396 ] [64])
            (nil))))
(insn 29 28 30 3 (set (reg:SI 0 ax [294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:265 89 {*movsi_internal}
     (nil))
(insn 30 29 779 3 (set (reg:DI 0 ax [orig:65 D.6395 ] [65])
        (sign_extend:DI (reg:SI 0 ax [294]))) sim2fitman_sup.cpp:265 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [294])
        (nil)))
(insn 779 30 31 3 (set (reg:DI 0 ax [orig:66 D.6395 ] [66])
        (reg:DI 0 ax [orig:65 D.6395 ] [65])) sim2fitman_sup.cpp:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.6395 ] [65])
        (nil)))
(insn 31 779 780 3 (parallel [
            (set (reg:DI 0 ax [orig:66 D.6395 ] [66])
                (ashift:DI (reg:DI 0 ax [orig:66 D.6395 ] [66])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:265 513 {*ashldi3_1}
     (nil))
(insn 780 31 32 3 (set (reg:DI 1 dx [orig:66 D.6395 ] [66])
        (reg:DI 0 ax [orig:66 D.6395 ] [66])) sim2fitman_sup.cpp:265 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.6395 ] [66])
        (nil)))
(insn 32 780 33 3 (set (reg/f:DI 0 ax [295])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:265 87 {*movdi_internal_rex64}
     (nil))
(insn 33 32 34 3 (parallel [
            (set (reg/f:DI 0 ax [orig:67 D.6396 ] [67])
                (plus:DI (reg/f:DI 0 ax [295])
                    (reg:DI 1 dx [orig:66 D.6395 ] [66])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:265 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [295])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:66 D.6395 ] [66])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:66 D.6395 ] [66]))
                (nil)))))
(insn 34 33 35 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:67 D.6396 ] [67])
                (const_int 324 [0x144])) [0 _19->num_transients+0 S4 A32])
        (const_int 1 [0x1])) sim2fitman_sup.cpp:265 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.6396 ] [67])
        (nil)))
(insn 35 34 36 3 (set (reg:SI 0 ax [296])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:266 89 {*movsi_internal}
     (nil))
(insn 36 35 781 3 (set (reg:DI 0 ax [orig:68 D.6395 ] [68])
        (sign_extend:DI (reg:SI 0 ax [296]))) sim2fitman_sup.cpp:266 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [296])
        (nil)))
(insn 781 36 37 3 (set (reg:DI 0 ax [orig:69 D.6395 ] [69])
        (reg:DI 0 ax [orig:68 D.6395 ] [68])) sim2fitman_sup.cpp:266 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:68 D.6395 ] [68])
        (nil)))
(insn 37 781 782 3 (parallel [
            (set (reg:DI 0 ax [orig:69 D.6395 ] [69])
                (ashift:DI (reg:DI 0 ax [orig:69 D.6395 ] [69])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:266 513 {*ashldi3_1}
     (nil))
(insn 782 37 38 3 (set (reg:DI 1 dx [orig:69 D.6395 ] [69])
        (reg:DI 0 ax [orig:69 D.6395 ] [69])) sim2fitman_sup.cpp:266 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.6395 ] [69])
        (nil)))
(insn 38 782 39 3 (set (reg/f:DI 0 ax [297])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:266 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 3 (parallel [
            (set (reg/f:DI 0 ax [orig:70 D.6396 ] [70])
                (plus:DI (reg/f:DI 0 ax [297])
                    (reg:DI 1 dx [orig:69 D.6395 ] [69])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:266 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [297])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:69 D.6395 ] [69])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:69 D.6395 ] [69]))
                (nil)))))
(insn 40 39 41 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:70 D.6396 ] [70])
                (const_int 328 [0x148])) [0 _22->num_points+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:266 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:70 D.6396 ] [70])
        (nil)))
(insn 41 40 42 3 (set (reg:SI 0 ax [298])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:267 89 {*movsi_internal}
     (nil))
(insn 42 41 783 3 (set (reg:DI 0 ax [orig:71 D.6395 ] [71])
        (sign_extend:DI (reg:SI 0 ax [298]))) sim2fitman_sup.cpp:267 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [298])
        (nil)))
(insn 783 42 43 3 (set (reg:DI 0 ax [orig:72 D.6395 ] [72])
        (reg:DI 0 ax [orig:71 D.6395 ] [71])) sim2fitman_sup.cpp:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:71 D.6395 ] [71])
        (nil)))
(insn 43 783 784 3 (parallel [
            (set (reg:DI 0 ax [orig:72 D.6395 ] [72])
                (ashift:DI (reg:DI 0 ax [orig:72 D.6395 ] [72])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:267 513 {*ashldi3_1}
     (nil))
(insn 784 43 44 3 (set (reg:DI 1 dx [orig:72 D.6395 ] [72])
        (reg:DI 0 ax [orig:72 D.6395 ] [72])) sim2fitman_sup.cpp:267 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:72 D.6395 ] [72])
        (nil)))
(insn 44 784 45 3 (set (reg/f:DI 0 ax [299])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:267 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 3 (parallel [
            (set (reg/f:DI 1 dx [orig:73 D.6396 ] [73])
                (plus:DI (reg:DI 1 dx [orig:72 D.6395 ] [72])
                    (reg/f:DI 0 ax [299])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:267 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [299])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:72 D.6395 ] [72])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:72 D.6395 ] [72]))
                (nil)))))
(insn 46 45 47 3 (set (reg:DF 0 ax [300])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:267 133 {*movdf_internal_rex64}
     (nil))
(insn 47 46 48 3 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:73 D.6396 ] [73])
                (const_int 336 [0x150])) [0 _25->main_frequency+0 S8 A64])
        (reg:DF 0 ax [300])) sim2fitman_sup.cpp:267 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [300])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:73 D.6396 ] [73])
            (nil))))
(insn 48 47 49 3 (set (reg:SI 0 ax [301])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:268 89 {*movsi_internal}
     (nil))
(insn 49 48 785 3 (set (reg:DI 0 ax [orig:74 D.6395 ] [74])
        (sign_extend:DI (reg:SI 0 ax [301]))) sim2fitman_sup.cpp:268 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [301])
        (nil)))
(insn 785 49 50 3 (set (reg:DI 0 ax [orig:75 D.6395 ] [75])
        (reg:DI 0 ax [orig:74 D.6395 ] [74])) sim2fitman_sup.cpp:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:74 D.6395 ] [74])
        (nil)))
(insn 50 785 786 3 (parallel [
            (set (reg:DI 0 ax [orig:75 D.6395 ] [75])
                (ashift:DI (reg:DI 0 ax [orig:75 D.6395 ] [75])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:268 513 {*ashldi3_1}
     (nil))
(insn 786 50 51 3 (set (reg:DI 1 dx [orig:75 D.6395 ] [75])
        (reg:DI 0 ax [orig:75 D.6395 ] [75])) sim2fitman_sup.cpp:268 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:75 D.6395 ] [75])
        (nil)))
(insn 51 786 52 3 (set (reg/f:DI 0 ax [302])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:268 87 {*movdi_internal_rex64}
     (nil))
(insn 52 51 53 3 (parallel [
            (set (reg/f:DI 1 dx [orig:76 D.6396 ] [76])
                (plus:DI (reg:DI 1 dx [orig:75 D.6395 ] [75])
                    (reg/f:DI 0 ax [302])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:268 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [302])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:75 D.6395 ] [75])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:75 D.6395 ] [75]))
                (nil)))))
(insn 53 52 54 3 (set (reg:DF 0 ax [303])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:268 133 {*movdf_internal_rex64}
     (nil))
(insn 54 53 55 3 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:76 D.6396 ] [76])
                (const_int 344 [0x158])) [0 _28->offset_frequency+0 S8 A64])
        (reg:DF 0 ax [303])) sim2fitman_sup.cpp:268 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [303])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:76 D.6396 ] [76])
            (nil))))
(insn 55 54 56 3 (set (reg:SI 0 ax [304])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:269 89 {*movsi_internal}
     (nil))
(insn 56 55 787 3 (set (reg:DI 0 ax [orig:77 D.6395 ] [77])
        (sign_extend:DI (reg:SI 0 ax [304]))) sim2fitman_sup.cpp:269 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [304])
        (nil)))
(insn 787 56 57 3 (set (reg:DI 0 ax [orig:78 D.6395 ] [78])
        (reg:DI 0 ax [orig:77 D.6395 ] [77])) sim2fitman_sup.cpp:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:77 D.6395 ] [77])
        (nil)))
(insn 57 787 788 3 (parallel [
            (set (reg:DI 0 ax [orig:78 D.6395 ] [78])
                (ashift:DI (reg:DI 0 ax [orig:78 D.6395 ] [78])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:269 513 {*ashldi3_1}
     (nil))
(insn 788 57 58 3 (set (reg:DI 1 dx [orig:78 D.6395 ] [78])
        (reg:DI 0 ax [orig:78 D.6395 ] [78])) sim2fitman_sup.cpp:269 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:78 D.6395 ] [78])
        (nil)))
(insn 58 788 59 3 (set (reg/f:DI 0 ax [305])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:269 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 3 (parallel [
            (set (reg/f:DI 1 dx [orig:79 D.6396 ] [79])
                (plus:DI (reg:DI 1 dx [orig:78 D.6395 ] [78])
                    (reg/f:DI 0 ax [305])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:269 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [305])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:78 D.6395 ] [78])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:78 D.6395 ] [78]))
                (nil)))))
(insn 60 59 61 3 (set (reg:SF 0 ax [306])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:269 135 {*movsf_internal}
     (nil))
(insn 61 60 62 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:79 D.6396 ] [79])
                (const_int 352 [0x160])) [0 _31->te+0 S4 A64])
        (reg:SF 0 ax [306])) sim2fitman_sup.cpp:269 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [306])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:79 D.6396 ] [79])
            (nil))))
(insn 62 61 63 3 (set (reg:SI 0 ax [307])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:270 89 {*movsi_internal}
     (nil))
(insn 63 62 789 3 (set (reg:DI 0 ax [orig:80 D.6395 ] [80])
        (sign_extend:DI (reg:SI 0 ax [307]))) sim2fitman_sup.cpp:270 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [307])
        (nil)))
(insn 789 63 64 3 (set (reg:DI 0 ax [orig:81 D.6395 ] [81])
        (reg:DI 0 ax [orig:80 D.6395 ] [80])) sim2fitman_sup.cpp:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:80 D.6395 ] [80])
        (nil)))
(insn 64 789 790 3 (parallel [
            (set (reg:DI 0 ax [orig:81 D.6395 ] [81])
                (ashift:DI (reg:DI 0 ax [orig:81 D.6395 ] [81])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:270 513 {*ashldi3_1}
     (nil))
(insn 790 64 65 3 (set (reg:DI 1 dx [orig:81 D.6395 ] [81])
        (reg:DI 0 ax [orig:81 D.6395 ] [81])) sim2fitman_sup.cpp:270 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:81 D.6395 ] [81])
        (nil)))
(insn 65 790 66 3 (set (reg/f:DI 0 ax [308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:270 87 {*movdi_internal_rex64}
     (nil))
(insn 66 65 67 3 (parallel [
            (set (reg/f:DI 1 dx [orig:82 D.6396 ] [82])
                (plus:DI (reg:DI 1 dx [orig:81 D.6395 ] [81])
                    (reg/f:DI 0 ax [308])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:270 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [308])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:81 D.6395 ] [81])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:81 D.6395 ] [81]))
                (nil)))))
(insn 67 66 68 3 (set (reg:SF 0 ax [309])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:270 135 {*movsf_internal}
     (nil))
(insn 68 67 69 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:82 D.6396 ] [82])
                (const_int 356 [0x164])) [0 _34->tr+0 S4 A32])
        (reg:SF 0 ax [309])) sim2fitman_sup.cpp:270 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [309])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:82 D.6396 ] [82])
            (nil))))
(insn 69 68 70 3 (set (reg:SI 0 ax [310])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:271 89 {*movsi_internal}
     (nil))
(insn 70 69 791 3 (set (reg:DI 0 ax [orig:83 D.6395 ] [83])
        (sign_extend:DI (reg:SI 0 ax [310]))) sim2fitman_sup.cpp:271 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [310])
        (nil)))
(insn 791 70 71 3 (set (reg:DI 0 ax [orig:84 D.6395 ] [84])
        (reg:DI 0 ax [orig:83 D.6395 ] [83])) sim2fitman_sup.cpp:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:83 D.6395 ] [83])
        (nil)))
(insn 71 791 792 3 (parallel [
            (set (reg:DI 0 ax [orig:84 D.6395 ] [84])
                (ashift:DI (reg:DI 0 ax [orig:84 D.6395 ] [84])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:271 513 {*ashldi3_1}
     (nil))
(insn 792 71 72 3 (set (reg:DI 1 dx [orig:84 D.6395 ] [84])
        (reg:DI 0 ax [orig:84 D.6395 ] [84])) sim2fitman_sup.cpp:271 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:84 D.6395 ] [84])
        (nil)))
(insn 72 792 73 3 (set (reg/f:DI 0 ax [311])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:271 87 {*movdi_internal_rex64}
     (nil))
(insn 73 72 74 3 (parallel [
            (set (reg/f:DI 1 dx [orig:85 D.6396 ] [85])
                (plus:DI (reg:DI 1 dx [orig:84 D.6395 ] [84])
                    (reg/f:DI 0 ax [311])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:271 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [311])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:84 D.6395 ] [84])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:84 D.6395 ] [84]))
                (nil)))))
(insn 74 73 75 3 (set (reg:SF 0 ax [312])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:271 135 {*movsf_internal}
     (nil))
(insn 75 74 76 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:85 D.6396 ] [85])
                (const_int 360 [0x168])) [0 _37->gain+0 S4 A64])
        (reg:SF 0 ax [312])) sim2fitman_sup.cpp:271 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [312])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:85 D.6396 ] [85])
            (nil))))
(insn 76 75 77 3 (set (reg:SI 0 ax [313])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:272 89 {*movsi_internal}
     (nil))
(insn 77 76 793 3 (set (reg:DI 0 ax [orig:86 D.6395 ] [86])
        (sign_extend:DI (reg:SI 0 ax [313]))) sim2fitman_sup.cpp:272 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [313])
        (nil)))
(insn 793 77 78 3 (set (reg:DI 0 ax [orig:87 D.6395 ] [87])
        (reg:DI 0 ax [orig:86 D.6395 ] [86])) sim2fitman_sup.cpp:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:86 D.6395 ] [86])
        (nil)))
(insn 78 793 794 3 (parallel [
            (set (reg:DI 0 ax [orig:87 D.6395 ] [87])
                (ashift:DI (reg:DI 0 ax [orig:87 D.6395 ] [87])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:272 513 {*ashldi3_1}
     (nil))
(insn 794 78 79 3 (set (reg:DI 1 dx [orig:87 D.6395 ] [87])
        (reg:DI 0 ax [orig:87 D.6395 ] [87])) sim2fitman_sup.cpp:272 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:87 D.6395 ] [87])
        (nil)))
(insn 79 794 80 3 (set (reg/f:DI 0 ax [314])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:272 87 {*movdi_internal_rex64}
     (nil))
(insn 80 79 81 3 (parallel [
            (set (reg/f:DI 1 dx [orig:88 D.6396 ] [88])
                (plus:DI (reg:DI 1 dx [orig:87 D.6395 ] [87])
                    (reg/f:DI 0 ax [314])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:272 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [314])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:87 D.6395 ] [87])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:87 D.6395 ] [87]))
                (nil)))))
(insn 81 80 82 3 (set (reg:SF 0 ax [315])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:272 135 {*movsf_internal}
     (nil))
(insn 82 81 83 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:88 D.6396 ] [88])
                (const_int 364 [0x16c])) [0 _40->pos1+0 S4 A32])
        (reg:SF 0 ax [315])) sim2fitman_sup.cpp:272 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [315])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:88 D.6396 ] [88])
            (nil))))
(insn 83 82 84 3 (set (reg:SI 0 ax [316])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:273 89 {*movsi_internal}
     (nil))
(insn 84 83 795 3 (set (reg:DI 0 ax [orig:89 D.6395 ] [89])
        (sign_extend:DI (reg:SI 0 ax [316]))) sim2fitman_sup.cpp:273 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [316])
        (nil)))
(insn 795 84 85 3 (set (reg:DI 0 ax [orig:90 D.6395 ] [90])
        (reg:DI 0 ax [orig:89 D.6395 ] [89])) sim2fitman_sup.cpp:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:89 D.6395 ] [89])
        (nil)))
(insn 85 795 796 3 (parallel [
            (set (reg:DI 0 ax [orig:90 D.6395 ] [90])
                (ashift:DI (reg:DI 0 ax [orig:90 D.6395 ] [90])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:273 513 {*ashldi3_1}
     (nil))
(insn 796 85 86 3 (set (reg:DI 1 dx [orig:90 D.6395 ] [90])
        (reg:DI 0 ax [orig:90 D.6395 ] [90])) sim2fitman_sup.cpp:273 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:90 D.6395 ] [90])
        (nil)))
(insn 86 796 87 3 (set (reg/f:DI 0 ax [317])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:273 87 {*movdi_internal_rex64}
     (nil))
(insn 87 86 88 3 (parallel [
            (set (reg/f:DI 1 dx [orig:91 D.6396 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 D.6395 ] [90])
                    (reg/f:DI 0 ax [317])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:273 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [317])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:90 D.6395 ] [90])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:90 D.6395 ] [90]))
                (nil)))))
(insn 88 87 89 3 (set (reg:SF 0 ax [318])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:273 135 {*movsf_internal}
     (nil))
(insn 89 88 90 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:91 D.6396 ] [91])
                (const_int 368 [0x170])) [0 _43->pos2+0 S4 A64])
        (reg:SF 0 ax [318])) sim2fitman_sup.cpp:273 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [318])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:91 D.6396 ] [91])
            (nil))))
(insn 90 89 91 3 (set (reg:SI 0 ax [319])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:274 89 {*movsi_internal}
     (nil))
(insn 91 90 797 3 (set (reg:DI 0 ax [orig:92 D.6395 ] [92])
        (sign_extend:DI (reg:SI 0 ax [319]))) sim2fitman_sup.cpp:274 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [319])
        (nil)))
(insn 797 91 92 3 (set (reg:DI 0 ax [orig:93 D.6395 ] [93])
        (reg:DI 0 ax [orig:92 D.6395 ] [92])) sim2fitman_sup.cpp:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:92 D.6395 ] [92])
        (nil)))
(insn 92 797 798 3 (parallel [
            (set (reg:DI 0 ax [orig:93 D.6395 ] [93])
                (ashift:DI (reg:DI 0 ax [orig:93 D.6395 ] [93])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:274 513 {*ashldi3_1}
     (nil))
(insn 798 92 93 3 (set (reg:DI 1 dx [orig:93 D.6395 ] [93])
        (reg:DI 0 ax [orig:93 D.6395 ] [93])) sim2fitman_sup.cpp:274 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:93 D.6395 ] [93])
        (nil)))
(insn 93 798 94 3 (set (reg/f:DI 0 ax [320])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:274 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 3 (parallel [
            (set (reg/f:DI 1 dx [orig:94 D.6396 ] [94])
                (plus:DI (reg:DI 1 dx [orig:93 D.6395 ] [93])
                    (reg/f:DI 0 ax [320])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:274 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [320])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:93 D.6395 ] [93])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:93 D.6395 ] [93]))
                (nil)))))
(insn 95 94 96 3 (set (reg:SF 0 ax [321])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:274 135 {*movsf_internal}
     (nil))
(insn 96 95 97 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:94 D.6396 ] [94])
                (const_int 372 [0x174])) [0 _46->pos3+0 S4 A32])
        (reg:SF 0 ax [321])) sim2fitman_sup.cpp:274 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [321])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:94 D.6396 ] [94])
            (nil))))
(insn 97 96 98 3 (set (reg:SI 0 ax [322])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:275 89 {*movsi_internal}
     (nil))
(insn 98 97 799 3 (set (reg:DI 0 ax [orig:95 D.6395 ] [95])
        (sign_extend:DI (reg:SI 0 ax [322]))) sim2fitman_sup.cpp:275 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [322])
        (nil)))
(insn 799 98 99 3 (set (reg:DI 0 ax [orig:96 D.6395 ] [96])
        (reg:DI 0 ax [orig:95 D.6395 ] [95])) sim2fitman_sup.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:95 D.6395 ] [95])
        (nil)))
(insn 99 799 800 3 (parallel [
            (set (reg:DI 0 ax [orig:96 D.6395 ] [96])
                (ashift:DI (reg:DI 0 ax [orig:96 D.6395 ] [96])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:275 513 {*ashldi3_1}
     (nil))
(insn 800 99 100 3 (set (reg:DI 1 dx [orig:96 D.6395 ] [96])
        (reg:DI 0 ax [orig:96 D.6395 ] [96])) sim2fitman_sup.cpp:275 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:96 D.6395 ] [96])
        (nil)))
(insn 100 800 101 3 (set (reg/f:DI 0 ax [323])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:275 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 3 (parallel [
            (set (reg/f:DI 1 dx [orig:97 D.6396 ] [97])
                (plus:DI (reg:DI 1 dx [orig:96 D.6395 ] [96])
                    (reg/f:DI 0 ax [323])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:275 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [323])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:96 D.6395 ] [96])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:96 D.6395 ] [96]))
                (nil)))))
(insn 102 101 103 3 (set (reg:SF 0 ax [324])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:275 135 {*movsf_internal}
     (nil))
(insn 103 102 104 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:97 D.6396 ] [97])
                (const_int 376 [0x178])) [0 _49->vox1+0 S4 A64])
        (reg:SF 0 ax [324])) sim2fitman_sup.cpp:275 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [324])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:97 D.6396 ] [97])
            (nil))))
(insn 104 103 105 3 (set (reg:SI 0 ax [325])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:276 89 {*movsi_internal}
     (nil))
(insn 105 104 801 3 (set (reg:DI 0 ax [orig:98 D.6395 ] [98])
        (sign_extend:DI (reg:SI 0 ax [325]))) sim2fitman_sup.cpp:276 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [325])
        (nil)))
(insn 801 105 106 3 (set (reg:DI 0 ax [orig:99 D.6395 ] [99])
        (reg:DI 0 ax [orig:98 D.6395 ] [98])) sim2fitman_sup.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:98 D.6395 ] [98])
        (nil)))
(insn 106 801 802 3 (parallel [
            (set (reg:DI 0 ax [orig:99 D.6395 ] [99])
                (ashift:DI (reg:DI 0 ax [orig:99 D.6395 ] [99])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:276 513 {*ashldi3_1}
     (nil))
(insn 802 106 107 3 (set (reg:DI 1 dx [orig:99 D.6395 ] [99])
        (reg:DI 0 ax [orig:99 D.6395 ] [99])) sim2fitman_sup.cpp:276 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:99 D.6395 ] [99])
        (nil)))
(insn 107 802 108 3 (set (reg/f:DI 0 ax [326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:276 87 {*movdi_internal_rex64}
     (nil))
(insn 108 107 109 3 (parallel [
            (set (reg/f:DI 1 dx [orig:100 D.6396 ] [100])
                (plus:DI (reg:DI 1 dx [orig:99 D.6395 ] [99])
                    (reg/f:DI 0 ax [326])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:276 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [326])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:99 D.6395 ] [99])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:99 D.6395 ] [99]))
                (nil)))))
(insn 109 108 110 3 (set (reg:SF 0 ax [327])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:276 135 {*movsf_internal}
     (nil))
(insn 110 109 111 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:100 D.6396 ] [100])
                (const_int 380 [0x17c])) [0 _52->vox2+0 S4 A32])
        (reg:SF 0 ax [327])) sim2fitman_sup.cpp:276 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [327])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:100 D.6396 ] [100])
            (nil))))
(insn 111 110 112 3 (set (reg:SI 0 ax [328])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:277 89 {*movsi_internal}
     (nil))
(insn 112 111 803 3 (set (reg:DI 0 ax [orig:101 D.6395 ] [101])
        (sign_extend:DI (reg:SI 0 ax [328]))) sim2fitman_sup.cpp:277 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [328])
        (nil)))
(insn 803 112 113 3 (set (reg:DI 0 ax [orig:102 D.6395 ] [102])
        (reg:DI 0 ax [orig:101 D.6395 ] [101])) sim2fitman_sup.cpp:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:101 D.6395 ] [101])
        (nil)))
(insn 113 803 804 3 (parallel [
            (set (reg:DI 0 ax [orig:102 D.6395 ] [102])
                (ashift:DI (reg:DI 0 ax [orig:102 D.6395 ] [102])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:277 513 {*ashldi3_1}
     (nil))
(insn 804 113 114 3 (set (reg:DI 1 dx [orig:102 D.6395 ] [102])
        (reg:DI 0 ax [orig:102 D.6395 ] [102])) sim2fitman_sup.cpp:277 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:102 D.6395 ] [102])
        (nil)))
(insn 114 804 115 3 (set (reg/f:DI 0 ax [329])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:277 87 {*movdi_internal_rex64}
     (nil))
(insn 115 114 116 3 (parallel [
            (set (reg/f:DI 1 dx [orig:103 D.6396 ] [103])
                (plus:DI (reg:DI 1 dx [orig:102 D.6395 ] [102])
                    (reg/f:DI 0 ax [329])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:277 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [329])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:102 D.6395 ] [102])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:102 D.6395 ] [102]))
                (nil)))))
(insn 116 115 117 3 (set (reg:SF 0 ax [330])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:277 135 {*movsf_internal}
     (nil))
(insn 117 116 118 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:103 D.6396 ] [103])
                (const_int 384 [0x180])) [0 _55->vox3+0 S4 A64])
        (reg:SF 0 ax [330])) sim2fitman_sup.cpp:277 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [330])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:103 D.6396 ] [103])
            (nil))))
(insn 118 117 119 3 (set (reg:SI 0 ax [331])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:278 89 {*movsi_internal}
     (nil))
(insn 119 118 805 3 (set (reg:DI 0 ax [orig:104 D.6395 ] [104])
        (sign_extend:DI (reg:SI 0 ax [331]))) sim2fitman_sup.cpp:278 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [331])
        (nil)))
(insn 805 119 120 3 (set (reg:DI 0 ax [orig:105 D.6395 ] [105])
        (reg:DI 0 ax [orig:104 D.6395 ] [104])) sim2fitman_sup.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:104 D.6395 ] [104])
        (nil)))
(insn 120 805 806 3 (parallel [
            (set (reg:DI 0 ax [orig:105 D.6395 ] [105])
                (ashift:DI (reg:DI 0 ax [orig:105 D.6395 ] [105])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:278 513 {*ashldi3_1}
     (nil))
(insn 806 120 121 3 (set (reg:DI 1 dx [orig:105 D.6395 ] [105])
        (reg:DI 0 ax [orig:105 D.6395 ] [105])) sim2fitman_sup.cpp:278 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:105 D.6395 ] [105])
        (nil)))
(insn 121 806 122 3 (set (reg/f:DI 0 ax [332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:278 87 {*movdi_internal_rex64}
     (nil))
(insn 122 121 123 3 (parallel [
            (set (reg/f:DI 1 dx [orig:106 D.6396 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 D.6395 ] [105])
                    (reg/f:DI 0 ax [332])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:278 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [332])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:105 D.6395 ] [105])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:105 D.6395 ] [105]))
                (nil)))))
(insn 123 122 124 3 (set (reg:DF 0 ax [333])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) sim2fitman_sup.cpp:278 133 {*movdf_internal_rex64}
     (nil))
(insn 124 123 125 3 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [orig:106 D.6396 ] [106])
                (const_int 392 [0x188])) [0 _58->span+0 S8 A64])
        (reg:DF 0 ax [333])) sim2fitman_sup.cpp:278 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [333])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:106 D.6396 ] [106])
            (nil))))
(insn 125 124 126 3 (set (reg:SI 0 ax [334])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:279 89 {*movsi_internal}
     (nil))
(insn 126 125 807 3 (set (reg:DI 0 ax [orig:107 D.6395 ] [107])
        (sign_extend:DI (reg:SI 0 ax [334]))) sim2fitman_sup.cpp:279 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [334])
        (nil)))
(insn 807 126 127 3 (set (reg:DI 0 ax [orig:108 D.6395 ] [108])
        (reg:DI 0 ax [orig:107 D.6395 ] [107])) sim2fitman_sup.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:107 D.6395 ] [107])
        (nil)))
(insn 127 807 808 3 (parallel [
            (set (reg:DI 0 ax [orig:108 D.6395 ] [108])
                (ashift:DI (reg:DI 0 ax [orig:108 D.6395 ] [108])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:279 513 {*ashldi3_1}
     (nil))
(insn 808 127 128 3 (set (reg:DI 1 dx [orig:108 D.6395 ] [108])
        (reg:DI 0 ax [orig:108 D.6395 ] [108])) sim2fitman_sup.cpp:279 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:108 D.6395 ] [108])
        (nil)))
(insn 128 808 129 3 (set (reg/f:DI 0 ax [335])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:279 87 {*movdi_internal_rex64}
     (nil))
(insn 129 128 130 3 (parallel [
            (set (reg/f:DI 1 dx [orig:109 D.6396 ] [109])
                (plus:DI (reg:DI 1 dx [orig:108 D.6395 ] [108])
                    (reg/f:DI 0 ax [335])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:279 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [335])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:108 D.6395 ] [108])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:108 D.6395 ] [108]))
                (nil)))))
(insn 130 129 131 3 (set (reg:SF 0 ax [336])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:279 135 {*movsf_internal}
     (nil))
(insn 131 130 132 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:109 D.6396 ] [109])
                (const_int 400 [0x190])) [0 _61->vtheta+0 S4 A64])
        (reg:SF 0 ax [336])) sim2fitman_sup.cpp:279 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [336])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:109 D.6396 ] [109])
            (nil))))
(insn 132 131 133 3 (set (reg:SI 0 ax [337])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:280 89 {*movsi_internal}
     (nil))
(insn 133 132 809 3 (set (reg:DI 0 ax [orig:110 D.6395 ] [110])
        (sign_extend:DI (reg:SI 0 ax [337]))) sim2fitman_sup.cpp:280 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [337])
        (nil)))
(insn 809 133 134 3 (set (reg:DI 0 ax [orig:111 D.6395 ] [111])
        (reg:DI 0 ax [orig:110 D.6395 ] [110])) sim2fitman_sup.cpp:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:110 D.6395 ] [110])
        (nil)))
(insn 134 809 810 3 (parallel [
            (set (reg:DI 0 ax [orig:111 D.6395 ] [111])
                (ashift:DI (reg:DI 0 ax [orig:111 D.6395 ] [111])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:280 513 {*ashldi3_1}
     (nil))
(insn 810 134 135 3 (set (reg:DI 1 dx [orig:111 D.6395 ] [111])
        (reg:DI 0 ax [orig:111 D.6395 ] [111])) sim2fitman_sup.cpp:280 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:111 D.6395 ] [111])
        (nil)))
(insn 135 810 136 3 (set (reg/f:DI 0 ax [338])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:280 87 {*movdi_internal_rex64}
     (nil))
(insn 136 135 137 3 (parallel [
            (set (reg/f:DI 0 ax [orig:112 D.6396 ] [112])
                (plus:DI (reg/f:DI 0 ax [338])
                    (reg:DI 1 dx [orig:111 D.6395 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:280 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [338])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:111 D.6395 ] [111])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:111 D.6395 ] [111]))
                (nil)))))
(insn 137 136 138 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:112 D.6396 ] [112])
                (const_int 508 [0x1fc])) [0 _64->nex+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:280 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:112 D.6396 ] [112])
        (nil)))
(insn 138 137 761 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:285 89 {*movsi_internal}
     (nil))
(jump_insn 761 138 762 3 (set (pc)
        (label_ref 151)) sim2fitman_sup.cpp:285 650 {jump}
     (nil)
 -> 151)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 762 761 155)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 116 339 340 341 342
(code_label 155 762 141 4 53 "" [1 uses])
(note 141 155 142 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 4 (set (reg:SI 0 ax [339])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:286 89 {*movsi_internal}
     (nil))
(insn 143 142 811 4 (set (reg:DI 0 ax [orig:114 D.6395 ] [114])
        (sign_extend:DI (reg:SI 0 ax [339]))) sim2fitman_sup.cpp:286 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [339])
        (nil)))
(insn 811 143 144 4 (set (reg:DI 0 ax [orig:115 D.6395 ] [115])
        (reg:DI 0 ax [orig:114 D.6395 ] [114])) sim2fitman_sup.cpp:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:114 D.6395 ] [114])
        (nil)))
(insn 144 811 812 4 (parallel [
            (set (reg:DI 0 ax [orig:115 D.6395 ] [115])
                (ashift:DI (reg:DI 0 ax [orig:115 D.6395 ] [115])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:286 513 {*ashldi3_1}
     (nil))
(insn 812 144 145 4 (set (reg:DI 1 dx [orig:115 D.6395 ] [115])
        (reg:DI 0 ax [orig:115 D.6395 ] [115])) sim2fitman_sup.cpp:286 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:115 D.6395 ] [115])
        (nil)))
(insn 145 812 146 4 (set (reg/f:DI 0 ax [340])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:286 87 {*movdi_internal_rex64}
     (nil))
(insn 146 145 147 4 (parallel [
            (set (reg/f:DI 1 dx [orig:116 D.6396 ] [116])
                (plus:DI (reg:DI 1 dx [orig:115 D.6395 ] [115])
                    (reg/f:DI 0 ax [340])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:286 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [340])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:115 D.6395 ] [115])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:115 D.6395 ] [115]))
                (nil)))))
(insn 147 146 148 4 (set (reg:SI 0 ax [342])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:286 89 {*movsi_internal}
     (nil))
(insn 148 147 149 4 (set (reg:DI 0 ax [341])
        (sign_extend:DI (reg:SI 0 ax [342]))) sim2fitman_sup.cpp:286 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [342])
        (nil)))
(insn 149 148 150 4 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:116 D.6396 ] [116])
                    (reg:DI 0 ax [341]))
                (const_int 388 [0x184])) [0 _69->padding_1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:286 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [341])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:116 D.6396 ] [116])
            (nil))))
(insn 150 149 151 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:285 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 113 343
(code_label 151 150 152 5 52 "" [1 uses])
(note 152 151 153 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 5 (set (reg:SI 0 ax [343])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:285 89 {*movsi_internal}
     (nil))
(insn 154 153 156 5 (set (reg:DI 0 ax [orig:113 D.6395 ] [113])
        (sign_extend:DI (reg:SI 0 ax [343]))) sim2fitman_sup.cpp:285 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [343])
        (nil)))
(insn 156 154 157 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:113 D.6395 ] [113])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:285 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:113 D.6395 ] [113])
        (nil)))
(jump_insn 157 156 158 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) sim2fitman_sup.cpp:285 612 {*jcc_1}
     (nil)
 -> 155)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 158 157 159 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 763 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:290 89 {*movsi_internal}
     (nil))
(jump_insn 763 159 764 6 (set (pc)
        (label_ref 172)) sim2fitman_sup.cpp:290 650 {jump}
     (nil)
 -> 172)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 764 763 176)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 118 119 120 344 345 346 347
(code_label 176 764 162 7 55 "" [1 uses])
(note 162 176 163 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 7 (set (reg:SI 0 ax [344])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:291 89 {*movsi_internal}
     (nil))
(insn 164 163 813 7 (set (reg:DI 0 ax [orig:118 D.6395 ] [118])
        (sign_extend:DI (reg:SI 0 ax [344]))) sim2fitman_sup.cpp:291 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [344])
        (nil)))
(insn 813 164 165 7 (set (reg:DI 0 ax [orig:119 D.6395 ] [119])
        (reg:DI 0 ax [orig:118 D.6395 ] [118])) sim2fitman_sup.cpp:291 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:118 D.6395 ] [118])
        (nil)))
(insn 165 813 814 7 (parallel [
            (set (reg:DI 0 ax [orig:119 D.6395 ] [119])
                (ashift:DI (reg:DI 0 ax [orig:119 D.6395 ] [119])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:291 513 {*ashldi3_1}
     (nil))
(insn 814 165 166 7 (set (reg:DI 1 dx [orig:119 D.6395 ] [119])
        (reg:DI 0 ax [orig:119 D.6395 ] [119])) sim2fitman_sup.cpp:291 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:119 D.6395 ] [119])
        (nil)))
(insn 166 814 167 7 (set (reg/f:DI 0 ax [345])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:291 87 {*movdi_internal_rex64}
     (nil))
(insn 167 166 168 7 (parallel [
            (set (reg/f:DI 1 dx [orig:120 D.6396 ] [120])
                (plus:DI (reg:DI 1 dx [orig:119 D.6395 ] [119])
                    (reg/f:DI 0 ax [345])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:291 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [345])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:119 D.6395 ] [119])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:119 D.6395 ] [119]))
                (nil)))))
(insn 168 167 169 7 (set (reg:SI 0 ax [347])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:291 89 {*movsi_internal}
     (nil))
(insn 169 168 170 7 (set (reg:DI 0 ax [346])
        (sign_extend:DI (reg:SI 0 ax [347]))) sim2fitman_sup.cpp:291 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [347])
        (nil)))
(insn 170 169 171 7 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:120 D.6396 ] [120])
                    (reg:DI 0 ax [346]))
                (const_int 8 [0x8])) [0 _75->ex_datetime S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:291 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [346])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:120 D.6396 ] [120])
            (nil))))
(insn 171 170 172 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:290 273 {*addsi_1}
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 117 348
(code_label 172 171 173 8 54 "" [1 uses])
(note 173 172 174 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 8 (set (reg:SI 0 ax [348])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:290 89 {*movsi_internal}
     (nil))
(insn 175 174 177 8 (set (reg:DI 0 ax [orig:117 D.6395 ] [117])
        (sign_extend:DI (reg:SI 0 ax [348]))) sim2fitman_sup.cpp:290 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [348])
        (nil)))
(insn 177 175 178 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:117 D.6395 ] [117])
            (const_int 52 [0x34]))) sim2fitman_sup.cpp:290 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:117 D.6395 ] [117])
        (nil)))
(jump_insn 178 177 179 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) sim2fitman_sup.cpp:290 612 {*jcc_1}
     (nil)
 -> 176)
;;  succ:       7
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121 122 123 124 349 350
(note 179 178 180 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 9 (set (reg:SI 0 ax [349])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:293 89 {*movsi_internal}
     (nil))
(insn 181 180 815 9 (set (reg:DI 0 ax [orig:121 D.6395 ] [121])
        (sign_extend:DI (reg:SI 0 ax [349]))) sim2fitman_sup.cpp:293 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [349])
        (nil)))
(insn 815 181 182 9 (set (reg:DI 0 ax [orig:122 D.6395 ] [122])
        (reg:DI 0 ax [orig:121 D.6395 ] [121])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 D.6395 ] [121])
        (nil)))
(insn 182 815 816 9 (parallel [
            (set (reg:DI 0 ax [orig:122 D.6395 ] [122])
                (ashift:DI (reg:DI 0 ax [orig:122 D.6395 ] [122])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 513 {*ashldi3_1}
     (nil))
(insn 816 182 183 9 (set (reg:DI 1 dx [orig:122 D.6395 ] [122])
        (reg:DI 0 ax [orig:122 D.6395 ] [122])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:122 D.6395 ] [122])
        (nil)))
(insn 183 816 184 9 (set (reg/f:DI 0 ax [350])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (nil))
(insn 184 183 185 9 (parallel [
            (set (reg/f:DI 0 ax [orig:123 D.6396 ] [123])
                (plus:DI (reg/f:DI 0 ax [350])
                    (reg:DI 1 dx [orig:122 D.6395 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [350])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:122 D.6395 ] [122])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:122 D.6395 ] [122]))
                (nil)))))
(insn 185 184 186 9 (parallel [
            (set (reg/f:DI 0 ax [orig:124 D.6397 ] [124])
                (plus:DI (reg/f:DI 0 ax [orig:123 D.6396 ] [123])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:293 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:123 D.6396 ] [123])
        (nil)))
(insn 186 185 817 9 (set (reg:DI 3 bx [534])
        (const_int 2334399942965096270 [0x2065746144206f4e])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (nil))
(insn 817 186 187 9 (set (mem:DI (reg/f:DI 0 ax [orig:124 D.6397 ] [124]) [0 MEM[(void *)_80]+0 S8 A8])
        (reg:DI 3 bx [534])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [534])
        (nil)))
(insn 187 817 818 9 (set (reg:DI 2 cx [535])
        (const_int 7809911822066218561 [0x6c62616c69617641])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (nil))
(insn 818 187 188 9 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:124 D.6397 ] [124])
                (const_int 8 [0x8])) [0 MEM[(void *)_80]+8 S8 A8])
        (reg:DI 2 cx [535])) sim2fitman_sup.cpp:293 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [535])
        (nil)))
(insn 188 818 189 9 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:124 D.6397 ] [124])
                (const_int 16 [0x10])) [0 MEM[(void *)_80]+16 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:293 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:124 D.6397 ] [124])
        (nil)))
(insn 189 188 765 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:296 89 {*movsi_internal}
     (nil))
(jump_insn 765 189 766 9 (set (pc)
        (label_ref 202)) sim2fitman_sup.cpp:296 650 {jump}
     (nil)
 -> 202)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 766 765 206)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126 127 128 351 352 353 354
(code_label 206 766 192 10 57 "" [1 uses])
(note 192 206 193 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 10 (set (reg:SI 0 ax [351])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:297 89 {*movsi_internal}
     (nil))
(insn 194 193 819 10 (set (reg:DI 0 ax [orig:126 D.6395 ] [126])
        (sign_extend:DI (reg:SI 0 ax [351]))) sim2fitman_sup.cpp:297 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [351])
        (nil)))
(insn 819 194 195 10 (set (reg:DI 0 ax [orig:127 D.6395 ] [127])
        (reg:DI 0 ax [orig:126 D.6395 ] [126])) sim2fitman_sup.cpp:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:126 D.6395 ] [126])
        (nil)))
(insn 195 819 820 10 (parallel [
            (set (reg:DI 0 ax [orig:127 D.6395 ] [127])
                (ashift:DI (reg:DI 0 ax [orig:127 D.6395 ] [127])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:297 513 {*ashldi3_1}
     (nil))
(insn 820 195 196 10 (set (reg:DI 1 dx [orig:127 D.6395 ] [127])
        (reg:DI 0 ax [orig:127 D.6395 ] [127])) sim2fitman_sup.cpp:297 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:127 D.6395 ] [127])
        (nil)))
(insn 196 820 197 10 (set (reg/f:DI 0 ax [352])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:297 87 {*movdi_internal_rex64}
     (nil))
(insn 197 196 198 10 (parallel [
            (set (reg/f:DI 1 dx [orig:128 D.6396 ] [128])
                (plus:DI (reg:DI 1 dx [orig:127 D.6395 ] [127])
                    (reg/f:DI 0 ax [352])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:297 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [352])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:127 D.6395 ] [127])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:127 D.6395 ] [127]))
                (nil)))))
(insn 198 197 199 10 (set (reg:SI 0 ax [354])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:297 89 {*movsi_internal}
     (nil))
(insn 199 198 200 10 (set (reg:DI 0 ax [353])
        (sign_extend:DI (reg:SI 0 ax [354]))) sim2fitman_sup.cpp:297 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [354])
        (nil)))
(insn 200 199 201 10 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:128 D.6396 ] [128])
                    (reg:DI 0 ax [353]))
                (const_int 60 [0x3c])) [0 _85->file_name S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:297 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [353])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:128 D.6396 ] [128])
            (nil))))
(insn 201 200 202 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:296 273 {*addsi_1}
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU,DFS_BACK)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 125 355
(code_label 202 201 203 11 56 "" [1 uses])
(note 203 202 204 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 11 (set (reg:SI 0 ax [355])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:296 89 {*movsi_internal}
     (nil))
(insn 205 204 207 11 (set (reg:DI 0 ax [orig:125 D.6395 ] [125])
        (sign_extend:DI (reg:SI 0 ax [355]))) sim2fitman_sup.cpp:296 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [355])
        (nil)))
(insn 207 205 208 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:125 D.6395 ] [125])
            (const_int 260 [0x104]))) sim2fitman_sup.cpp:296 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:125 D.6395 ] [125])
        (nil)))
(jump_insn 208 207 209 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) sim2fitman_sup.cpp:296 612 {*jcc_1}
     (nil)
 -> 206)
;;  succ:       10
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 129 130 131 132 356 357
(note 209 208 210 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 12 (set (reg:SI 0 ax [356])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:299 89 {*movsi_internal}
     (nil))
(insn 211 210 821 12 (set (reg:DI 0 ax [orig:129 D.6395 ] [129])
        (sign_extend:DI (reg:SI 0 ax [356]))) sim2fitman_sup.cpp:299 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [356])
        (nil)))
(insn 821 211 212 12 (set (reg:DI 0 ax [orig:130 D.6395 ] [130])
        (reg:DI 0 ax [orig:129 D.6395 ] [129])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:129 D.6395 ] [129])
        (nil)))
(insn 212 821 822 12 (parallel [
            (set (reg:DI 0 ax [orig:130 D.6395 ] [130])
                (ashift:DI (reg:DI 0 ax [orig:130 D.6395 ] [130])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 513 {*ashldi3_1}
     (nil))
(insn 822 212 213 12 (set (reg:DI 1 dx [orig:130 D.6395 ] [130])
        (reg:DI 0 ax [orig:130 D.6395 ] [130])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:130 D.6395 ] [130])
        (nil)))
(insn 213 822 214 12 (set (reg/f:DI 0 ax [357])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (nil))
(insn 214 213 215 12 (parallel [
            (set (reg/f:DI 0 ax [orig:131 D.6396 ] [131])
                (plus:DI (reg/f:DI 0 ax [357])
                    (reg:DI 1 dx [orig:130 D.6395 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [357])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:130 D.6395 ] [130])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:130 D.6395 ] [130]))
                (nil)))))
(insn 215 214 216 12 (parallel [
            (set (reg/f:DI 0 ax [orig:132 D.6398 ] [132])
                (plus:DI (reg/f:DI 0 ax [orig:131 D.6396 ] [131])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:299 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:131 D.6396 ] [131])
        (nil)))
(insn 216 215 823 12 (set (reg:DI 4 si [538])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (nil))
(insn 823 216 217 12 (set (mem:DI (reg/f:DI 0 ax [orig:132 D.6398 ] [132]) [0 MEM[(void *)_90]+0 S8 A8])
        (reg:DI 4 si [538])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [538])
        (nil)))
(insn 217 823 824 12 (set (reg:DI 5 di [539])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (nil))
(insn 824 217 218 12 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:132 D.6398 ] [132])
                (const_int 8 [0x8])) [0 MEM[(void *)_90]+8 S8 A8])
        (reg:DI 5 di [539])) sim2fitman_sup.cpp:299 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [539])
        (nil)))
(insn 218 824 219 12 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:132 D.6398 ] [132])
                (const_int 16 [0x10])) [0 MEM[(void *)_90]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:299 89 {*movsi_internal}
     (nil))
(insn 219 218 220 12 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:132 D.6398 ] [132])
                (const_int 20 [0x14])) [0 MEM[(void *)_90]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:299 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:132 D.6398 ] [132])
        (nil)))
(insn 220 219 767 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:302 89 {*movsi_internal}
     (nil))
(jump_insn 767 220 768 12 (set (pc)
        (label_ref 233)) sim2fitman_sup.cpp:302 650 {jump}
     (nil)
 -> 233)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 768 767 237)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134 135 136 358 359 360 361
(code_label 237 768 223 13 59 "" [1 uses])
(note 223 237 224 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 13 (set (reg:SI 0 ax [358])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:303 89 {*movsi_internal}
     (nil))
(insn 225 224 825 13 (set (reg:DI 0 ax [orig:134 D.6395 ] [134])
        (sign_extend:DI (reg:SI 0 ax [358]))) sim2fitman_sup.cpp:303 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [358])
        (nil)))
(insn 825 225 226 13 (set (reg:DI 0 ax [orig:135 D.6395 ] [135])
        (reg:DI 0 ax [orig:134 D.6395 ] [134])) sim2fitman_sup.cpp:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:134 D.6395 ] [134])
        (nil)))
(insn 226 825 826 13 (parallel [
            (set (reg:DI 0 ax [orig:135 D.6395 ] [135])
                (ashift:DI (reg:DI 0 ax [orig:135 D.6395 ] [135])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:303 513 {*ashldi3_1}
     (nil))
(insn 826 226 227 13 (set (reg:DI 1 dx [orig:135 D.6395 ] [135])
        (reg:DI 0 ax [orig:135 D.6395 ] [135])) sim2fitman_sup.cpp:303 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:135 D.6395 ] [135])
        (nil)))
(insn 227 826 228 13 (set (reg/f:DI 0 ax [359])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:303 87 {*movdi_internal_rex64}
     (nil))
(insn 228 227 229 13 (parallel [
            (set (reg/f:DI 1 dx [orig:136 D.6396 ] [136])
                (plus:DI (reg:DI 1 dx [orig:135 D.6395 ] [135])
                    (reg/f:DI 0 ax [359])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:303 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [359])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:135 D.6395 ] [135])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:135 D.6395 ] [135]))
                (nil)))))
(insn 229 228 230 13 (set (reg:SI 0 ax [361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:303 89 {*movsi_internal}
     (nil))
(insn 230 229 231 13 (set (reg:DI 0 ax [360])
        (sign_extend:DI (reg:SI 0 ax [361]))) sim2fitman_sup.cpp:303 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [361])
        (nil)))
(insn 231 230 232 13 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:136 D.6396 ] [136])
                    (reg:DI 0 ax [360]))
                (const_int 404 [0x194])) [0 _95->hospname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:303 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [360])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:136 D.6396 ] [136])
            (nil))))
(insn 232 231 233 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:302 273 {*addsi_1}
     (nil))
;;  succ:       14 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU,DFS_BACK)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133 362
(code_label 233 232 234 14 58 "" [1 uses])
(note 234 233 235 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 14 (set (reg:SI 0 ax [362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:302 89 {*movsi_internal}
     (nil))
(insn 236 235 238 14 (set (reg:DI 0 ax [orig:133 D.6395 ] [133])
        (sign_extend:DI (reg:SI 0 ax [362]))) sim2fitman_sup.cpp:302 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [362])
        (nil)))
(insn 238 236 239 14 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:133 D.6395 ] [133])
            (const_int 36 [0x24]))) sim2fitman_sup.cpp:302 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:133 D.6395 ] [133])
        (nil)))
(jump_insn 239 238 240 14 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) sim2fitman_sup.cpp:302 612 {*jcc_1}
     (nil)
 -> 237)
;;  succ:       13
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 137 138 139 140 363 364
(note 240 239 241 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 15 (set (reg:SI 0 ax [363])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:305 89 {*movsi_internal}
     (nil))
(insn 242 241 827 15 (set (reg:DI 0 ax [orig:137 D.6395 ] [137])
        (sign_extend:DI (reg:SI 0 ax [363]))) sim2fitman_sup.cpp:305 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [363])
        (nil)))
(insn 827 242 243 15 (set (reg:DI 0 ax [orig:138 D.6395 ] [138])
        (reg:DI 0 ax [orig:137 D.6395 ] [137])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:137 D.6395 ] [137])
        (nil)))
(insn 243 827 828 15 (parallel [
            (set (reg:DI 0 ax [orig:138 D.6395 ] [138])
                (ashift:DI (reg:DI 0 ax [orig:138 D.6395 ] [138])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 513 {*ashldi3_1}
     (nil))
(insn 828 243 244 15 (set (reg:DI 1 dx [orig:138 D.6395 ] [138])
        (reg:DI 0 ax [orig:138 D.6395 ] [138])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:138 D.6395 ] [138])
        (nil)))
(insn 244 828 245 15 (set (reg/f:DI 0 ax [364])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (nil))
(insn 245 244 246 15 (parallel [
            (set (reg/f:DI 0 ax [orig:139 D.6396 ] [139])
                (plus:DI (reg/f:DI 0 ax [364])
                    (reg:DI 1 dx [orig:138 D.6395 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [364])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:138 D.6395 ] [138])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:138 D.6395 ] [138]))
                (nil)))))
(insn 246 245 247 15 (parallel [
            (set (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
                (plus:DI (reg/f:DI 0 ax [orig:139 D.6396 ] [139])
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:305 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:139 D.6396 ] [139])
        (nil)))
(insn 247 246 829 15 (set (reg:DI 3 bx [542])
        (const_int 7597699493162676046 [0x6970736f48206f4e])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (nil))
(insn 829 247 248 15 (set (mem:DI (reg/f:DI 0 ax [orig:140 D.6399 ] [140]) [0 MEM[(void *)_100]+0 S8 A8])
        (reg:DI 3 bx [542])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [542])
        (nil)))
(insn 248 829 830 15 (set (reg:DI 2 cx [543])
        (const_int 7308604758471500148 [0x656d614e206c6174])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (nil))
(insn 830 248 249 15 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
                (const_int 8 [0x8])) [0 MEM[(void *)_100]+8 S8 A8])
        (reg:DI 2 cx [543])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [543])
        (nil)))
(insn 249 830 831 15 (set (reg:DI 4 si [544])
        (const_int 7089066488320377120 [0x62616c6961764120])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (nil))
(insn 831 249 250 15 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
                (const_int 16 [0x10])) [0 MEM[(void *)_100]+16 S8 A8])
        (reg:DI 4 si [544])) sim2fitman_sup.cpp:305 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [544])
        (nil)))
(insn 250 831 251 15 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
                (const_int 24 [0x18])) [0 MEM[(void *)_100]+24 S2 A8])
        (const_int 25964 [0x656c])) sim2fitman_sup.cpp:305 90 {*movhi_internal}
     (nil))
(insn 251 250 252 15 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
                (const_int 26 [0x1a])) [0 MEM[(void *)_100]+26 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:305 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:140 D.6399 ] [140])
        (nil)))
(insn 252 251 769 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:308 89 {*movsi_internal}
     (nil))
(jump_insn 769 252 770 15 (set (pc)
        (label_ref 265)) sim2fitman_sup.cpp:308 650 {jump}
     (nil)
 -> 265)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 770 769 269)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 142 143 144 365 366 367 368
(code_label 269 770 255 16 61 "" [1 uses])
(note 255 269 256 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 16 (set (reg:SI 0 ax [365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:309 89 {*movsi_internal}
     (nil))
(insn 257 256 832 16 (set (reg:DI 0 ax [orig:142 D.6395 ] [142])
        (sign_extend:DI (reg:SI 0 ax [365]))) sim2fitman_sup.cpp:309 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [365])
        (nil)))
(insn 832 257 258 16 (set (reg:DI 0 ax [orig:143 D.6395 ] [143])
        (reg:DI 0 ax [orig:142 D.6395 ] [142])) sim2fitman_sup.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:142 D.6395 ] [142])
        (nil)))
(insn 258 832 833 16 (parallel [
            (set (reg:DI 0 ax [orig:143 D.6395 ] [143])
                (ashift:DI (reg:DI 0 ax [orig:143 D.6395 ] [143])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:309 513 {*ashldi3_1}
     (nil))
(insn 833 258 259 16 (set (reg:DI 1 dx [orig:143 D.6395 ] [143])
        (reg:DI 0 ax [orig:143 D.6395 ] [143])) sim2fitman_sup.cpp:309 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:143 D.6395 ] [143])
        (nil)))
(insn 259 833 260 16 (set (reg/f:DI 0 ax [366])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:309 87 {*movdi_internal_rex64}
     (nil))
(insn 260 259 261 16 (parallel [
            (set (reg/f:DI 1 dx [orig:144 D.6396 ] [144])
                (plus:DI (reg:DI 1 dx [orig:143 D.6395 ] [143])
                    (reg/f:DI 0 ax [366])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:309 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [366])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:143 D.6395 ] [143])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:143 D.6395 ] [143]))
                (nil)))))
(insn 261 260 262 16 (set (reg:SI 0 ax [368])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:309 89 {*movsi_internal}
     (nil))
(insn 262 261 263 16 (set (reg:DI 0 ax [367])
        (sign_extend:DI (reg:SI 0 ax [368]))) sim2fitman_sup.cpp:309 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [368])
        (nil)))
(insn 263 262 264 16 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:144 D.6396 ] [144])
                    (reg:DI 0 ax [367]))
                (const_int 440 [0x1b8])) [0 _105->patname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:309 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [367])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:144 D.6396 ] [144])
            (nil))))
(insn 264 263 265 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:308 273 {*addsi_1}
     (nil))
;;  succ:       17 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU,DFS_BACK)
;;              15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 369
(code_label 265 264 266 17 60 "" [1 uses])
(note 266 265 267 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 17 (set (reg:SI 0 ax [369])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:308 89 {*movsi_internal}
     (nil))
(insn 268 267 270 17 (set (reg:DI 0 ax [orig:141 D.6395 ] [141])
        (sign_extend:DI (reg:SI 0 ax [369]))) sim2fitman_sup.cpp:308 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [369])
        (nil)))
(insn 270 268 271 17 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:141 D.6395 ] [141])
            (const_int 28 [0x1c]))) sim2fitman_sup.cpp:308 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:141 D.6395 ] [141])
        (nil)))
(jump_insn 271 270 272 17 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) sim2fitman_sup.cpp:308 612 {*jcc_1}
     (nil)
 -> 269)
;;  succ:       16
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 146 147 148 370 371
(note 272 271 273 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 18 (set (reg:SI 0 ax [370])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:311 89 {*movsi_internal}
     (nil))
(insn 274 273 834 18 (set (reg:DI 0 ax [orig:145 D.6395 ] [145])
        (sign_extend:DI (reg:SI 0 ax [370]))) sim2fitman_sup.cpp:311 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [370])
        (nil)))
(insn 834 274 275 18 (set (reg:DI 0 ax [orig:146 D.6395 ] [146])
        (reg:DI 0 ax [orig:145 D.6395 ] [145])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:145 D.6395 ] [145])
        (nil)))
(insn 275 834 835 18 (parallel [
            (set (reg:DI 0 ax [orig:146 D.6395 ] [146])
                (ashift:DI (reg:DI 0 ax [orig:146 D.6395 ] [146])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 513 {*ashldi3_1}
     (nil))
(insn 835 275 276 18 (set (reg:DI 1 dx [orig:146 D.6395 ] [146])
        (reg:DI 0 ax [orig:146 D.6395 ] [146])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:146 D.6395 ] [146])
        (nil)))
(insn 276 835 277 18 (set (reg/f:DI 0 ax [371])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (nil))
(insn 277 276 278 18 (parallel [
            (set (reg/f:DI 0 ax [orig:147 D.6396 ] [147])
                (plus:DI (reg/f:DI 0 ax [371])
                    (reg:DI 1 dx [orig:146 D.6395 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [371])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:146 D.6395 ] [146])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:146 D.6395 ] [146]))
                (nil)))))
(insn 278 277 279 18 (parallel [
            (set (reg/f:DI 0 ax [orig:148 D.6400 ] [148])
                (plus:DI (reg/f:DI 0 ax [orig:147 D.6396 ] [147])
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:311 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:147 D.6396 ] [147])
        (nil)))
(insn 279 278 836 18 (set (reg:DI 5 di [547])
        (const_int 7307499831690293070 [0x6569746150206f4e])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (nil))
(insn 836 279 280 18 (set (mem:DI (reg/f:DI 0 ax [orig:148 D.6400 ] [148]) [0 MEM[(void *)_110]+0 S8 A8])
        (reg:DI 5 di [547])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [547])
        (nil)))
(insn 280 836 837 18 (set (reg:DI 3 bx [548])
        (const_int 2334392246551475310 [0x20656d614e20746e])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (nil))
(insn 837 280 281 18 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:148 D.6400 ] [148])
                (const_int 8 [0x8])) [0 MEM[(void *)_110]+8 S8 A8])
        (reg:DI 3 bx [548])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [548])
        (nil)))
(insn 281 837 838 18 (set (reg:DI 2 cx [549])
        (const_int 7809911822066218561 [0x6c62616c69617641])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (nil))
(insn 838 281 282 18 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:148 D.6400 ] [148])
                (const_int 16 [0x10])) [0 MEM[(void *)_110]+16 S8 A8])
        (reg:DI 2 cx [549])) sim2fitman_sup.cpp:311 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [549])
        (nil)))
(insn 282 838 283 18 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:148 D.6400 ] [148])
                (const_int 24 [0x18])) [0 MEM[(void *)_110]+24 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:311 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:148 D.6400 ] [148])
        (nil)))
(insn 283 282 771 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:314 89 {*movsi_internal}
     (nil))
(jump_insn 771 283 772 18 (set (pc)
        (label_ref 296)) sim2fitman_sup.cpp:314 650 {jump}
     (nil)
 -> 296)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 772 771 300)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 151 152 372 373 374 375
(code_label 300 772 286 19 63 "" [1 uses])
(note 286 300 287 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 19 (set (reg:SI 0 ax [372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:315 89 {*movsi_internal}
     (nil))
(insn 288 287 839 19 (set (reg:DI 0 ax [orig:150 D.6395 ] [150])
        (sign_extend:DI (reg:SI 0 ax [372]))) sim2fitman_sup.cpp:315 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [372])
        (nil)))
(insn 839 288 289 19 (set (reg:DI 0 ax [orig:151 D.6395 ] [151])
        (reg:DI 0 ax [orig:150 D.6395 ] [150])) sim2fitman_sup.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:150 D.6395 ] [150])
        (nil)))
(insn 289 839 840 19 (parallel [
            (set (reg:DI 0 ax [orig:151 D.6395 ] [151])
                (ashift:DI (reg:DI 0 ax [orig:151 D.6395 ] [151])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:315 513 {*ashldi3_1}
     (nil))
(insn 840 289 290 19 (set (reg:DI 1 dx [orig:151 D.6395 ] [151])
        (reg:DI 0 ax [orig:151 D.6395 ] [151])) sim2fitman_sup.cpp:315 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:151 D.6395 ] [151])
        (nil)))
(insn 290 840 291 19 (set (reg/f:DI 0 ax [373])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:315 87 {*movdi_internal_rex64}
     (nil))
(insn 291 290 292 19 (parallel [
            (set (reg/f:DI 1 dx [orig:152 D.6396 ] [152])
                (plus:DI (reg:DI 1 dx [orig:151 D.6395 ] [151])
                    (reg/f:DI 0 ax [373])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:315 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [373])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:151 D.6395 ] [151])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:151 D.6395 ] [151]))
                (nil)))))
(insn 292 291 293 19 (set (reg:SI 0 ax [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:315 89 {*movsi_internal}
     (nil))
(insn 293 292 294 19 (set (reg:DI 0 ax [374])
        (sign_extend:DI (reg:SI 0 ax [375]))) sim2fitman_sup.cpp:315 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [375])
        (nil)))
(insn 294 293 295 19 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:152 D.6396 ] [152])
                    (reg:DI 0 ax [374]))
                (const_int 468 [0x1d4])) [0 _115->psdname S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:315 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [374])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:152 D.6396 ] [152])
            (nil))))
(insn 295 294 296 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:314 273 {*addsi_1}
     (nil))
;;  succ:       20 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU,DFS_BACK)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 376
(code_label 296 295 297 20 62 "" [1 uses])
(note 297 296 298 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 20 (set (reg:SI 0 ax [376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:314 89 {*movsi_internal}
     (nil))
(insn 299 298 301 20 (set (reg:DI 0 ax [orig:149 D.6395 ] [149])
        (sign_extend:DI (reg:SI 0 ax [376]))) sim2fitman_sup.cpp:314 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [376])
        (nil)))
(insn 301 299 302 20 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:149 D.6395 ] [149])
            (const_int 40 [0x28]))) sim2fitman_sup.cpp:314 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:149 D.6395 ] [149])
        (nil)))
(jump_insn 302 301 303 20 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) sim2fitman_sup.cpp:314 612 {*jcc_1}
     (nil)
 -> 300)
;;  succ:       19
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501
(note 303 302 304 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 21 (set (reg:SI 0 ax [377])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:317 89 {*movsi_internal}
     (nil))
(insn 305 304 841 21 (set (reg:DI 0 ax [orig:153 D.6395 ] [153])
        (sign_extend:DI (reg:SI 0 ax [377]))) sim2fitman_sup.cpp:317 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [377])
        (nil)))
(insn 841 305 306 21 (set (reg:DI 0 ax [orig:154 D.6395 ] [154])
        (reg:DI 0 ax [orig:153 D.6395 ] [153])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:153 D.6395 ] [153])
        (nil)))
(insn 306 841 842 21 (parallel [
            (set (reg:DI 0 ax [orig:154 D.6395 ] [154])
                (ashift:DI (reg:DI 0 ax [orig:154 D.6395 ] [154])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 513 {*ashldi3_1}
     (nil))
(insn 842 306 307 21 (set (reg:DI 1 dx [orig:154 D.6395 ] [154])
        (reg:DI 0 ax [orig:154 D.6395 ] [154])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:154 D.6395 ] [154])
        (nil)))
(insn 307 842 308 21 (set (reg/f:DI 0 ax [378])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (nil))
(insn 308 307 309 21 (parallel [
            (set (reg/f:DI 0 ax [orig:155 D.6396 ] [155])
                (plus:DI (reg/f:DI 0 ax [378])
                    (reg:DI 1 dx [orig:154 D.6395 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [378])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:154 D.6395 ] [154])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                    (reg:DI 1 dx [orig:154 D.6395 ] [154]))
                (nil)))))
(insn 309 308 310 21 (parallel [
            (set (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
                (plus:DI (reg/f:DI 0 ax [orig:155 D.6396 ] [155])
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:317 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:155 D.6396 ] [155])
        (nil)))
(insn 310 309 843 21 (set (reg:DI 4 si [552])
        (const_int 7310305871263723342 [0x65736c7550206f4e])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (nil))
(insn 843 310 311 21 (set (mem:DI (reg/f:DI 0 ax [orig:156 D.6401 ] [156]) [0 MEM[(void *)_120]+0 S8 A8])
        (reg:DI 4 si [552])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [552])
        (nil)))
(insn 311 843 844 21 (set (reg:DI 5 di [553])
        (const_int 7164775612281082656 [0x636e657571655320])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (nil))
(insn 844 311 312 21 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
                (const_int 8 [0x8])) [0 MEM[(void *)_120]+8 S8 A8])
        (reg:DI 5 di [553])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [553])
        (nil)))
(insn 312 844 845 21 (set (reg:DI 3 bx [554])
        (const_int 4692862332178407525 [0x4120656d614e2065])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (nil))
(insn 845 312 313 21 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
                (const_int 16 [0x10])) [0 MEM[(void *)_120]+16 S8 A8])
        (reg:DI 3 bx [554])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [554])
        (nil)))
(insn 313 845 846 21 (set (reg:DI 2 cx [555])
        (const_int 7308324465885667702 [0x656c62616c696176])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (nil))
(insn 846 313 314 21 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
                (const_int 24 [0x18])) [0 MEM[(void *)_120]+24 S8 A8])
        (reg:DI 2 cx [555])) sim2fitman_sup.cpp:317 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [555])
        (nil)))
(insn 314 846 315 21 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
                (const_int 32 [0x20])) [0 MEM[(void *)_120]+32 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:317 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:156 D.6401 ] [156])
        (nil)))
(insn 315 314 316 21 (set (reg:SI 0 ax [379])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:321 89 {*movsi_internal}
     (nil))
(insn 316 315 317 21 (set (reg:DI 1 dx [orig:157 D.6395 ] [157])
        (sign_extend:DI (reg:SI 0 ax [379]))) sim2fitman_sup.cpp:321 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [379])
        (nil)))
(insn 317 316 318 21 (set (reg:DI 0 ax [380])
        (reg:DI 1 dx [orig:157 D.6395 ] [157])) sim2fitman_sup.cpp:321 87 {*movdi_internal_rex64}
     (nil))
(insn 318 317 319 21 (parallel [
            (set (reg:DI 0 ax [380])
                (ashift:DI (reg:DI 0 ax [380])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 513 {*ashldi3_1}
     (nil))
(insn 319 318 320 21 (parallel [
            (set (reg:DI 0 ax [380])
                (plus:DI (reg:DI 0 ax [380])
                    (reg:DI 1 dx [orig:157 D.6395 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:157 D.6395 ] [157])
            (const_int 9 [0x9]))
        (nil)))
(insn 320 319 321 21 (parallel [
            (set (reg:DI 0 ax [380])
                (ashift:DI (reg:DI 0 ax [380])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 513 {*ashldi3_1}
     (nil))
(insn 321 320 322 21 (parallel [
            (set (reg:DI 0 ax [380])
                (plus:DI (reg:DI 0 ax [380])
                    (reg:DI 1 dx [orig:157 D.6395 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:157 D.6395 ] [157])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:157 D.6395 ] [157])
                (const_int 19 [0x13]))
            (nil))))
(insn 322 321 323 21 (parallel [
            (set (reg:DI 0 ax [381])
                (ashift:DI (reg:DI 0 ax [380])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [380])
        (nil)))
(insn 323 322 324 21 (set (reg:DI 0 ax [380])
        (reg:DI 0 ax [381])) sim2fitman_sup.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [381])
        (nil)))
(insn 324 323 325 21 (set (reg:DI 1 dx [orig:158 D.6395 ] [158])
        (reg:DI 0 ax [380])) sim2fitman_sup.cpp:321 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [380])
        (nil)))
(insn 325 324 326 21 (set (reg/f:DI 0 ax [382])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:321 87 {*movdi_internal_rex64}
     (nil))
(insn 326 325 327 21 (parallel [
            (set (reg/f:DI 0 ax [orig:159 D.6402 ] [159])
                (plus:DI (reg/f:DI 0 ax [382])
                    (reg:DI 1 dx [orig:158 D.6395 ] [158])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:321 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [382])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:158 D.6395 ] [158])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:158 D.6395 ] [158]))
                (nil)))))
(insn 327 326 328 21 (set (mem/j:SI (reg/f:DI 0 ax [orig:159 D.6402 ] [159]) [0 _124->fid_scale+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:321 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.6402 ] [159])
        (nil)))
(insn 328 327 329 21 (set (reg:SI 0 ax [383])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:322 89 {*movsi_internal}
     (nil))
(insn 329 328 330 21 (set (reg:DI 1 dx [orig:160 D.6395 ] [160])
        (sign_extend:DI (reg:SI 0 ax [383]))) sim2fitman_sup.cpp:322 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [383])
        (nil)))
(insn 330 329 331 21 (set (reg:DI 0 ax [384])
        (reg:DI 1 dx [orig:160 D.6395 ] [160])) sim2fitman_sup.cpp:322 87 {*movdi_internal_rex64}
     (nil))
(insn 331 330 332 21 (parallel [
            (set (reg:DI 0 ax [384])
                (ashift:DI (reg:DI 0 ax [384])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 513 {*ashldi3_1}
     (nil))
(insn 332 331 333 21 (parallel [
            (set (reg:DI 0 ax [384])
                (plus:DI (reg:DI 0 ax [384])
                    (reg:DI 1 dx [orig:160 D.6395 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:160 D.6395 ] [160])
            (const_int 9 [0x9]))
        (nil)))
(insn 333 332 334 21 (parallel [
            (set (reg:DI 0 ax [384])
                (ashift:DI (reg:DI 0 ax [384])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 513 {*ashldi3_1}
     (nil))
(insn 334 333 335 21 (parallel [
            (set (reg:DI 0 ax [384])
                (plus:DI (reg:DI 0 ax [384])
                    (reg:DI 1 dx [orig:160 D.6395 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:160 D.6395 ] [160])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:160 D.6395 ] [160])
                (const_int 19 [0x13]))
            (nil))))
(insn 335 334 336 21 (parallel [
            (set (reg:DI 0 ax [385])
                (ashift:DI (reg:DI 0 ax [384])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [384])
        (nil)))
(insn 336 335 337 21 (set (reg:DI 0 ax [384])
        (reg:DI 0 ax [385])) sim2fitman_sup.cpp:322 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [385])
        (nil)))
(insn 337 336 338 21 (set (reg:DI 1 dx [orig:161 D.6395 ] [161])
        (reg:DI 0 ax [384])) sim2fitman_sup.cpp:322 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [384])
        (nil)))
(insn 338 337 339 21 (set (reg/f:DI 0 ax [386])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:322 87 {*movdi_internal_rex64}
     (nil))
(insn 339 338 340 21 (parallel [
            (set (reg/f:DI 1 dx [orig:162 D.6402 ] [162])
                (plus:DI (reg:DI 1 dx [orig:161 D.6395 ] [161])
                    (reg/f:DI 0 ax [386])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:322 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [386])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:161 D.6395 ] [161])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:161 D.6395 ] [161]))
                (nil)))))
(insn 340 339 341 21 (set (reg:SF 0 ax [387])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:322 135 {*movsf_internal}
     (nil))
(insn 341 340 342 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:162 D.6402 ] [162])
                (const_int 4 [0x4])) [0 _127->scale_factor+0 S4 A32])
        (reg:SF 0 ax [387])) sim2fitman_sup.cpp:322 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [387])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:162 D.6402 ] [162])
            (nil))))
(insn 342 341 343 21 (set (reg:SI 0 ax [388])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:323 89 {*movsi_internal}
     (nil))
(insn 343 342 344 21 (set (reg:DI 1 dx [orig:163 D.6395 ] [163])
        (sign_extend:DI (reg:SI 0 ax [388]))) sim2fitman_sup.cpp:323 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [388])
        (nil)))
(insn 344 343 345 21 (set (reg:DI 0 ax [389])
        (reg:DI 1 dx [orig:163 D.6395 ] [163])) sim2fitman_sup.cpp:323 87 {*movdi_internal_rex64}
     (nil))
(insn 345 344 346 21 (parallel [
            (set (reg:DI 0 ax [389])
                (ashift:DI (reg:DI 0 ax [389])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 513 {*ashldi3_1}
     (nil))
(insn 346 345 347 21 (parallel [
            (set (reg:DI 0 ax [389])
                (plus:DI (reg:DI 0 ax [389])
                    (reg:DI 1 dx [orig:163 D.6395 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:163 D.6395 ] [163])
            (const_int 9 [0x9]))
        (nil)))
(insn 347 346 348 21 (parallel [
            (set (reg:DI 0 ax [389])
                (ashift:DI (reg:DI 0 ax [389])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 513 {*ashldi3_1}
     (nil))
(insn 348 347 349 21 (parallel [
            (set (reg:DI 0 ax [389])
                (plus:DI (reg:DI 0 ax [389])
                    (reg:DI 1 dx [orig:163 D.6395 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:163 D.6395 ] [163])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:163 D.6395 ] [163])
                (const_int 19 [0x13]))
            (nil))))
(insn 349 348 350 21 (parallel [
            (set (reg:DI 0 ax [390])
                (ashift:DI (reg:DI 0 ax [389])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [389])
        (nil)))
(insn 350 349 351 21 (set (reg:DI 0 ax [389])
        (reg:DI 0 ax [390])) sim2fitman_sup.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [390])
        (nil)))
(insn 351 350 352 21 (set (reg:DI 1 dx [orig:164 D.6395 ] [164])
        (reg:DI 0 ax [389])) sim2fitman_sup.cpp:323 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [389])
        (nil)))
(insn 352 351 353 21 (set (reg/f:DI 0 ax [391])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:323 87 {*movdi_internal_rex64}
     (nil))
(insn 353 352 354 21 (parallel [
            (set (reg/f:DI 0 ax [orig:165 D.6402 ] [165])
                (plus:DI (reg/f:DI 0 ax [391])
                    (reg:DI 1 dx [orig:164 D.6395 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:323 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [391])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:164 D.6395 ] [164])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:164 D.6395 ] [164]))
                (nil)))))
(insn 354 353 355 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:165 D.6402 ] [165])
                (const_int 8 [0x8])) [0 _130->scaleby+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:323 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:165 D.6402 ] [165])
        (nil)))
(insn 355 354 356 21 (set (reg:SI 0 ax [392])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:324 89 {*movsi_internal}
     (nil))
(insn 356 355 357 21 (set (reg:DI 1 dx [orig:166 D.6395 ] [166])
        (sign_extend:DI (reg:SI 0 ax [392]))) sim2fitman_sup.cpp:324 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [392])
        (nil)))
(insn 357 356 358 21 (set (reg:DI 0 ax [393])
        (reg:DI 1 dx [orig:166 D.6395 ] [166])) sim2fitman_sup.cpp:324 87 {*movdi_internal_rex64}
     (nil))
(insn 358 357 359 21 (parallel [
            (set (reg:DI 0 ax [393])
                (ashift:DI (reg:DI 0 ax [393])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 513 {*ashldi3_1}
     (nil))
(insn 359 358 360 21 (parallel [
            (set (reg:DI 0 ax [393])
                (plus:DI (reg:DI 0 ax [393])
                    (reg:DI 1 dx [orig:166 D.6395 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:166 D.6395 ] [166])
            (const_int 9 [0x9]))
        (nil)))
(insn 360 359 361 21 (parallel [
            (set (reg:DI 0 ax [393])
                (ashift:DI (reg:DI 0 ax [393])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 513 {*ashldi3_1}
     (nil))
(insn 361 360 362 21 (parallel [
            (set (reg:DI 0 ax [393])
                (plus:DI (reg:DI 0 ax [393])
                    (reg:DI 1 dx [orig:166 D.6395 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:166 D.6395 ] [166])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:166 D.6395 ] [166])
                (const_int 19 [0x13]))
            (nil))))
(insn 362 361 363 21 (parallel [
            (set (reg:DI 0 ax [394])
                (ashift:DI (reg:DI 0 ax [393])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [393])
        (nil)))
(insn 363 362 364 21 (set (reg:DI 0 ax [393])
        (reg:DI 0 ax [394])) sim2fitman_sup.cpp:324 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [394])
        (nil)))
(insn 364 363 365 21 (set (reg:DI 1 dx [orig:167 D.6395 ] [167])
        (reg:DI 0 ax [393])) sim2fitman_sup.cpp:324 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [393])
        (nil)))
(insn 365 364 366 21 (set (reg/f:DI 0 ax [395])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:324 87 {*movdi_internal_rex64}
     (nil))
(insn 366 365 367 21 (parallel [
            (set (reg/f:DI 0 ax [orig:168 D.6402 ] [168])
                (plus:DI (reg/f:DI 0 ax [395])
                    (reg:DI 1 dx [orig:167 D.6395 ] [167])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:324 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [395])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:167 D.6395 ] [167])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:167 D.6395 ] [167]))
                (nil)))))
(insn 367 366 368 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:168 D.6402 ] [168])
                (const_int 12 [0xc])) [0 _133->pre_ecc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:324 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:168 D.6402 ] [168])
        (nil)))
(insn 368 367 369 21 (set (reg:SI 0 ax [396])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:325 89 {*movsi_internal}
     (nil))
(insn 369 368 370 21 (set (reg:DI 1 dx [orig:169 D.6395 ] [169])
        (sign_extend:DI (reg:SI 0 ax [396]))) sim2fitman_sup.cpp:325 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [396])
        (nil)))
(insn 370 369 371 21 (set (reg:DI 0 ax [397])
        (reg:DI 1 dx [orig:169 D.6395 ] [169])) sim2fitman_sup.cpp:325 87 {*movdi_internal_rex64}
     (nil))
(insn 371 370 372 21 (parallel [
            (set (reg:DI 0 ax [397])
                (ashift:DI (reg:DI 0 ax [397])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 513 {*ashldi3_1}
     (nil))
(insn 372 371 373 21 (parallel [
            (set (reg:DI 0 ax [397])
                (plus:DI (reg:DI 0 ax [397])
                    (reg:DI 1 dx [orig:169 D.6395 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:169 D.6395 ] [169])
            (const_int 9 [0x9]))
        (nil)))
(insn 373 372 374 21 (parallel [
            (set (reg:DI 0 ax [397])
                (ashift:DI (reg:DI 0 ax [397])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 513 {*ashldi3_1}
     (nil))
(insn 374 373 375 21 (parallel [
            (set (reg:DI 0 ax [397])
                (plus:DI (reg:DI 0 ax [397])
                    (reg:DI 1 dx [orig:169 D.6395 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:169 D.6395 ] [169])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:169 D.6395 ] [169])
                (const_int 19 [0x13]))
            (nil))))
(insn 375 374 376 21 (parallel [
            (set (reg:DI 0 ax [398])
                (ashift:DI (reg:DI 0 ax [397])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [397])
        (nil)))
(insn 376 375 377 21 (set (reg:DI 0 ax [397])
        (reg:DI 0 ax [398])) sim2fitman_sup.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [398])
        (nil)))
(insn 377 376 378 21 (set (reg:DI 1 dx [orig:170 D.6395 ] [170])
        (reg:DI 0 ax [397])) sim2fitman_sup.cpp:325 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [397])
        (nil)))
(insn 378 377 379 21 (set (reg/f:DI 0 ax [399])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:325 87 {*movdi_internal_rex64}
     (nil))
(insn 379 378 380 21 (parallel [
            (set (reg/f:DI 0 ax [orig:171 D.6402 ] [171])
                (plus:DI (reg/f:DI 0 ax [399])
                    (reg:DI 1 dx [orig:170 D.6395 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:325 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [399])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:170 D.6395 ] [170])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:170 D.6395 ] [170]))
                (nil)))))
(insn 380 379 381 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:171 D.6402 ] [171])
                (const_int 16 [0x10])) [0 _136->bc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:325 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:171 D.6402 ] [171])
        (nil)))
(insn 381 380 382 21 (set (reg:SI 0 ax [400])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:326 89 {*movsi_internal}
     (nil))
(insn 382 381 383 21 (set (reg:DI 1 dx [orig:172 D.6395 ] [172])
        (sign_extend:DI (reg:SI 0 ax [400]))) sim2fitman_sup.cpp:326 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [400])
        (nil)))
(insn 383 382 384 21 (set (reg:DI 0 ax [401])
        (reg:DI 1 dx [orig:172 D.6395 ] [172])) sim2fitman_sup.cpp:326 87 {*movdi_internal_rex64}
     (nil))
(insn 384 383 385 21 (parallel [
            (set (reg:DI 0 ax [401])
                (ashift:DI (reg:DI 0 ax [401])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 513 {*ashldi3_1}
     (nil))
(insn 385 384 386 21 (parallel [
            (set (reg:DI 0 ax [401])
                (plus:DI (reg:DI 0 ax [401])
                    (reg:DI 1 dx [orig:172 D.6395 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:172 D.6395 ] [172])
            (const_int 9 [0x9]))
        (nil)))
(insn 386 385 387 21 (parallel [
            (set (reg:DI 0 ax [401])
                (ashift:DI (reg:DI 0 ax [401])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 513 {*ashldi3_1}
     (nil))
(insn 387 386 388 21 (parallel [
            (set (reg:DI 0 ax [401])
                (plus:DI (reg:DI 0 ax [401])
                    (reg:DI 1 dx [orig:172 D.6395 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:172 D.6395 ] [172])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:172 D.6395 ] [172])
                (const_int 19 [0x13]))
            (nil))))
(insn 388 387 389 21 (parallel [
            (set (reg:DI 0 ax [402])
                (ashift:DI (reg:DI 0 ax [401])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [401])
        (nil)))
(insn 389 388 390 21 (set (reg:DI 0 ax [401])
        (reg:DI 0 ax [402])) sim2fitman_sup.cpp:326 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [402])
        (nil)))
(insn 390 389 391 21 (set (reg:DI 1 dx [orig:173 D.6395 ] [173])
        (reg:DI 0 ax [401])) sim2fitman_sup.cpp:326 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [401])
        (nil)))
(insn 391 390 392 21 (set (reg/f:DI 0 ax [403])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:326 87 {*movdi_internal_rex64}
     (nil))
(insn 392 391 393 21 (parallel [
            (set (reg/f:DI 0 ax [orig:174 D.6402 ] [174])
                (plus:DI (reg/f:DI 0 ax [403])
                    (reg:DI 1 dx [orig:173 D.6395 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:326 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [403])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:173 D.6395 ] [173])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:173 D.6395 ] [173]))
                (nil)))))
(insn 393 392 394 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:174 D.6402 ] [174])
                (const_int 20 [0x14])) [0 _139->file_type+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:326 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:174 D.6402 ] [174])
        (nil)))
(insn 394 393 395 21 (set (reg:SI 0 ax [404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:327 89 {*movsi_internal}
     (nil))
(insn 395 394 396 21 (set (reg:DI 1 dx [orig:175 D.6395 ] [175])
        (sign_extend:DI (reg:SI 0 ax [404]))) sim2fitman_sup.cpp:327 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [404])
        (nil)))
(insn 396 395 397 21 (set (reg:DI 0 ax [405])
        (reg:DI 1 dx [orig:175 D.6395 ] [175])) sim2fitman_sup.cpp:327 87 {*movdi_internal_rex64}
     (nil))
(insn 397 396 398 21 (parallel [
            (set (reg:DI 0 ax [405])
                (ashift:DI (reg:DI 0 ax [405])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 513 {*ashldi3_1}
     (nil))
(insn 398 397 399 21 (parallel [
            (set (reg:DI 0 ax [405])
                (plus:DI (reg:DI 0 ax [405])
                    (reg:DI 1 dx [orig:175 D.6395 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:175 D.6395 ] [175])
            (const_int 9 [0x9]))
        (nil)))
(insn 399 398 400 21 (parallel [
            (set (reg:DI 0 ax [405])
                (ashift:DI (reg:DI 0 ax [405])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 513 {*ashldi3_1}
     (nil))
(insn 400 399 401 21 (parallel [
            (set (reg:DI 0 ax [405])
                (plus:DI (reg:DI 0 ax [405])
                    (reg:DI 1 dx [orig:175 D.6395 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:175 D.6395 ] [175])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:175 D.6395 ] [175])
                (const_int 19 [0x13]))
            (nil))))
(insn 401 400 402 21 (parallel [
            (set (reg:DI 0 ax [406])
                (ashift:DI (reg:DI 0 ax [405])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [405])
        (nil)))
(insn 402 401 403 21 (set (reg:DI 0 ax [405])
        (reg:DI 0 ax [406])) sim2fitman_sup.cpp:327 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [406])
        (nil)))
(insn 403 402 404 21 (set (reg:DI 1 dx [orig:176 D.6395 ] [176])
        (reg:DI 0 ax [405])) sim2fitman_sup.cpp:327 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [405])
        (nil)))
(insn 404 403 405 21 (set (reg/f:DI 0 ax [407])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:327 87 {*movdi_internal_rex64}
     (nil))
(insn 405 404 406 21 (parallel [
            (set (reg/f:DI 0 ax [orig:177 D.6402 ] [177])
                (plus:DI (reg/f:DI 0 ax [407])
                    (reg:DI 1 dx [orig:176 D.6395 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:327 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [407])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:176 D.6395 ] [176])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:176 D.6395 ] [176]))
                (nil)))))
(insn 406 405 407 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:177 D.6402 ] [177])
                (const_int 24 [0x18])) [0 _142->data_zero_fill+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:327 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:177 D.6402 ] [177])
        (nil)))
(insn 407 406 408 21 (set (reg:SI 0 ax [408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:328 89 {*movsi_internal}
     (nil))
(insn 408 407 409 21 (set (reg:DI 1 dx [orig:178 D.6395 ] [178])
        (sign_extend:DI (reg:SI 0 ax [408]))) sim2fitman_sup.cpp:328 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [408])
        (nil)))
(insn 409 408 410 21 (set (reg:DI 0 ax [409])
        (reg:DI 1 dx [orig:178 D.6395 ] [178])) sim2fitman_sup.cpp:328 87 {*movdi_internal_rex64}
     (nil))
(insn 410 409 411 21 (parallel [
            (set (reg:DI 0 ax [409])
                (ashift:DI (reg:DI 0 ax [409])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 513 {*ashldi3_1}
     (nil))
(insn 411 410 412 21 (parallel [
            (set (reg:DI 0 ax [409])
                (plus:DI (reg:DI 0 ax [409])
                    (reg:DI 1 dx [orig:178 D.6395 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:178 D.6395 ] [178])
            (const_int 9 [0x9]))
        (nil)))
(insn 412 411 413 21 (parallel [
            (set (reg:DI 0 ax [409])
                (ashift:DI (reg:DI 0 ax [409])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 513 {*ashldi3_1}
     (nil))
(insn 413 412 414 21 (parallel [
            (set (reg:DI 0 ax [409])
                (plus:DI (reg:DI 0 ax [409])
                    (reg:DI 1 dx [orig:178 D.6395 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:178 D.6395 ] [178])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:178 D.6395 ] [178])
                (const_int 19 [0x13]))
            (nil))))
(insn 414 413 415 21 (parallel [
            (set (reg:DI 0 ax [410])
                (ashift:DI (reg:DI 0 ax [409])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [409])
        (nil)))
(insn 415 414 416 21 (set (reg:DI 0 ax [409])
        (reg:DI 0 ax [410])) sim2fitman_sup.cpp:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [410])
        (nil)))
(insn 416 415 417 21 (set (reg:DI 1 dx [orig:179 D.6395 ] [179])
        (reg:DI 0 ax [409])) sim2fitman_sup.cpp:328 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [409])
        (nil)))
(insn 417 416 418 21 (set (reg/f:DI 0 ax [411])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:328 87 {*movdi_internal_rex64}
     (nil))
(insn 418 417 419 21 (parallel [
            (set (reg/f:DI 1 dx [orig:180 D.6402 ] [180])
                (plus:DI (reg:DI 1 dx [orig:179 D.6395 ] [179])
                    (reg/f:DI 0 ax [411])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:328 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [411])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:179 D.6395 ] [179])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:179 D.6395 ] [179]))
                (nil)))))
(insn 419 418 420 21 (set (reg:SF 0 ax [412])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:328 135 {*movsf_internal}
     (nil))
(insn 420 419 421 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:180 D.6402 ] [180])
                (const_int 28 [0x1c])) [0 _145->comp_filter+0 S4 A32])
        (reg:SF 0 ax [412])) sim2fitman_sup.cpp:328 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [412])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:180 D.6402 ] [180])
            (nil))))
(insn 421 420 422 21 (set (reg:SI 0 ax [413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:329 89 {*movsi_internal}
     (nil))
(insn 422 421 423 21 (set (reg:DI 1 dx [orig:181 D.6395 ] [181])
        (sign_extend:DI (reg:SI 0 ax [413]))) sim2fitman_sup.cpp:329 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [413])
        (nil)))
(insn 423 422 424 21 (set (reg:DI 0 ax [414])
        (reg:DI 1 dx [orig:181 D.6395 ] [181])) sim2fitman_sup.cpp:329 87 {*movdi_internal_rex64}
     (nil))
(insn 424 423 425 21 (parallel [
            (set (reg:DI 0 ax [414])
                (ashift:DI (reg:DI 0 ax [414])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 513 {*ashldi3_1}
     (nil))
(insn 425 424 426 21 (parallel [
            (set (reg:DI 0 ax [414])
                (plus:DI (reg:DI 0 ax [414])
                    (reg:DI 1 dx [orig:181 D.6395 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:181 D.6395 ] [181])
            (const_int 9 [0x9]))
        (nil)))
(insn 426 425 427 21 (parallel [
            (set (reg:DI 0 ax [414])
                (ashift:DI (reg:DI 0 ax [414])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 513 {*ashldi3_1}
     (nil))
(insn 427 426 428 21 (parallel [
            (set (reg:DI 0 ax [414])
                (plus:DI (reg:DI 0 ax [414])
                    (reg:DI 1 dx [orig:181 D.6395 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:181 D.6395 ] [181])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:181 D.6395 ] [181])
                (const_int 19 [0x13]))
            (nil))))
(insn 428 427 429 21 (parallel [
            (set (reg:DI 0 ax [415])
                (ashift:DI (reg:DI 0 ax [414])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [414])
        (nil)))
(insn 429 428 430 21 (set (reg:DI 0 ax [414])
        (reg:DI 0 ax [415])) sim2fitman_sup.cpp:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [415])
        (nil)))
(insn 430 429 431 21 (set (reg:DI 1 dx [orig:182 D.6395 ] [182])
        (reg:DI 0 ax [414])) sim2fitman_sup.cpp:329 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [414])
        (nil)))
(insn 431 430 432 21 (set (reg/f:DI 0 ax [416])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:329 87 {*movdi_internal_rex64}
     (nil))
(insn 432 431 433 21 (parallel [
            (set (reg/f:DI 0 ax [orig:183 D.6402 ] [183])
                (plus:DI (reg/f:DI 0 ax [416])
                    (reg:DI 1 dx [orig:182 D.6395 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:329 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [416])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:182 D.6395 ] [182])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:182 D.6395 ] [182]))
                (nil)))))
(insn 433 432 434 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:183 D.6402 ] [183])
                (const_int 32 [0x20])) [0 _148->max_normalize+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:329 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:183 D.6402 ] [183])
        (nil)))
(insn 434 433 435 21 (set (reg:SI 0 ax [417])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:330 89 {*movsi_internal}
     (nil))
(insn 435 434 436 21 (set (reg:DI 1 dx [orig:184 D.6395 ] [184])
        (sign_extend:DI (reg:SI 0 ax [417]))) sim2fitman_sup.cpp:330 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [417])
        (nil)))
(insn 436 435 437 21 (set (reg:DI 0 ax [418])
        (reg:DI 1 dx [orig:184 D.6395 ] [184])) sim2fitman_sup.cpp:330 87 {*movdi_internal_rex64}
     (nil))
(insn 437 436 438 21 (parallel [
            (set (reg:DI 0 ax [418])
                (ashift:DI (reg:DI 0 ax [418])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 513 {*ashldi3_1}
     (nil))
(insn 438 437 439 21 (parallel [
            (set (reg:DI 0 ax [418])
                (plus:DI (reg:DI 0 ax [418])
                    (reg:DI 1 dx [orig:184 D.6395 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:184 D.6395 ] [184])
            (const_int 9 [0x9]))
        (nil)))
(insn 439 438 440 21 (parallel [
            (set (reg:DI 0 ax [418])
                (ashift:DI (reg:DI 0 ax [418])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 513 {*ashldi3_1}
     (nil))
(insn 440 439 441 21 (parallel [
            (set (reg:DI 0 ax [418])
                (plus:DI (reg:DI 0 ax [418])
                    (reg:DI 1 dx [orig:184 D.6395 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:184 D.6395 ] [184])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:184 D.6395 ] [184])
                (const_int 19 [0x13]))
            (nil))))
(insn 441 440 442 21 (parallel [
            (set (reg:DI 0 ax [419])
                (ashift:DI (reg:DI 0 ax [418])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [418])
        (nil)))
(insn 442 441 443 21 (set (reg:DI 0 ax [418])
        (reg:DI 0 ax [419])) sim2fitman_sup.cpp:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [419])
        (nil)))
(insn 443 442 444 21 (set (reg:DI 1 dx [orig:185 D.6395 ] [185])
        (reg:DI 0 ax [418])) sim2fitman_sup.cpp:330 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [418])
        (nil)))
(insn 444 443 445 21 (set (reg/f:DI 0 ax [420])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:330 87 {*movdi_internal_rex64}
     (nil))
(insn 445 444 446 21 (parallel [
            (set (reg/f:DI 0 ax [orig:186 D.6402 ] [186])
                (plus:DI (reg/f:DI 0 ax [420])
                    (reg:DI 1 dx [orig:185 D.6395 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:330 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [420])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:185 D.6395 ] [185])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:185 D.6395 ] [185]))
                (nil)))))
(insn 446 445 447 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:186 D.6402 ] [186])
                (const_int 36 [0x24])) [0 _151->pre_quality+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:330 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:186 D.6402 ] [186])
        (nil)))
(insn 447 446 448 21 (set (reg:SI 0 ax [421])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:331 89 {*movsi_internal}
     (nil))
(insn 448 447 449 21 (set (reg:DI 1 dx [orig:187 D.6395 ] [187])
        (sign_extend:DI (reg:SI 0 ax [421]))) sim2fitman_sup.cpp:331 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [421])
        (nil)))
(insn 449 448 450 21 (set (reg:DI 0 ax [422])
        (reg:DI 1 dx [orig:187 D.6395 ] [187])) sim2fitman_sup.cpp:331 87 {*movdi_internal_rex64}
     (nil))
(insn 450 449 451 21 (parallel [
            (set (reg:DI 0 ax [422])
                (ashift:DI (reg:DI 0 ax [422])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 513 {*ashldi3_1}
     (nil))
(insn 451 450 452 21 (parallel [
            (set (reg:DI 0 ax [422])
                (plus:DI (reg:DI 0 ax [422])
                    (reg:DI 1 dx [orig:187 D.6395 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:187 D.6395 ] [187])
            (const_int 9 [0x9]))
        (nil)))
(insn 452 451 453 21 (parallel [
            (set (reg:DI 0 ax [422])
                (ashift:DI (reg:DI 0 ax [422])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 513 {*ashldi3_1}
     (nil))
(insn 453 452 454 21 (parallel [
            (set (reg:DI 0 ax [422])
                (plus:DI (reg:DI 0 ax [422])
                    (reg:DI 1 dx [orig:187 D.6395 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:187 D.6395 ] [187])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:187 D.6395 ] [187])
                (const_int 19 [0x13]))
            (nil))))
(insn 454 453 455 21 (parallel [
            (set (reg:DI 0 ax [423])
                (ashift:DI (reg:DI 0 ax [422])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [422])
        (nil)))
(insn 455 454 456 21 (set (reg:DI 0 ax [422])
        (reg:DI 0 ax [423])) sim2fitman_sup.cpp:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [423])
        (nil)))
(insn 456 455 457 21 (set (reg:DI 1 dx [orig:188 D.6395 ] [188])
        (reg:DI 0 ax [422])) sim2fitman_sup.cpp:331 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [422])
        (nil)))
(insn 457 456 458 21 (set (reg/f:DI 0 ax [424])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:331 87 {*movdi_internal_rex64}
     (nil))
(insn 458 457 459 21 (parallel [
            (set (reg/f:DI 0 ax [orig:189 D.6402 ] [189])
                (plus:DI (reg/f:DI 0 ax [424])
                    (reg:DI 1 dx [orig:188 D.6395 ] [188])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:331 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [424])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:188 D.6395 ] [188])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:188 D.6395 ] [188]))
                (nil)))))
(insn 459 458 460 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:189 D.6402 ] [189])
                (const_int 40 [0x28])) [0 _154->pre_quecc+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:331 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:189 D.6402 ] [189])
        (nil)))
(insn 460 459 461 21 (set (reg:SI 0 ax [425])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:332 89 {*movsi_internal}
     (nil))
(insn 461 460 462 21 (set (reg:DI 1 dx [orig:190 D.6395 ] [190])
        (sign_extend:DI (reg:SI 0 ax [425]))) sim2fitman_sup.cpp:332 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [425])
        (nil)))
(insn 462 461 463 21 (set (reg:DI 0 ax [426])
        (reg:DI 1 dx [orig:190 D.6395 ] [190])) sim2fitman_sup.cpp:332 87 {*movdi_internal_rex64}
     (nil))
(insn 463 462 464 21 (parallel [
            (set (reg:DI 0 ax [426])
                (ashift:DI (reg:DI 0 ax [426])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 513 {*ashldi3_1}
     (nil))
(insn 464 463 465 21 (parallel [
            (set (reg:DI 0 ax [426])
                (plus:DI (reg:DI 0 ax [426])
                    (reg:DI 1 dx [orig:190 D.6395 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:190 D.6395 ] [190])
            (const_int 9 [0x9]))
        (nil)))
(insn 465 464 466 21 (parallel [
            (set (reg:DI 0 ax [426])
                (ashift:DI (reg:DI 0 ax [426])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 513 {*ashldi3_1}
     (nil))
(insn 466 465 467 21 (parallel [
            (set (reg:DI 0 ax [426])
                (plus:DI (reg:DI 0 ax [426])
                    (reg:DI 1 dx [orig:190 D.6395 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:190 D.6395 ] [190])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:190 D.6395 ] [190])
                (const_int 19 [0x13]))
            (nil))))
(insn 467 466 468 21 (parallel [
            (set (reg:DI 0 ax [427])
                (ashift:DI (reg:DI 0 ax [426])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [426])
        (nil)))
(insn 468 467 469 21 (set (reg:DI 0 ax [426])
        (reg:DI 0 ax [427])) sim2fitman_sup.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [427])
        (nil)))
(insn 469 468 470 21 (set (reg:DI 1 dx [orig:191 D.6395 ] [191])
        (reg:DI 0 ax [426])) sim2fitman_sup.cpp:332 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [426])
        (nil)))
(insn 470 469 471 21 (set (reg/f:DI 0 ax [428])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:332 87 {*movdi_internal_rex64}
     (nil))
(insn 471 470 472 21 (parallel [
            (set (reg/f:DI 0 ax [orig:192 D.6402 ] [192])
                (plus:DI (reg/f:DI 0 ax [428])
                    (reg:DI 1 dx [orig:191 D.6395 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:332 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [428])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:191 D.6395 ] [191])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:191 D.6395 ] [191]))
                (nil)))))
(insn 472 471 473 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:192 D.6402 ] [192])
                (const_int 44 [0x2c])) [0 _157->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:332 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:192 D.6402 ] [192])
        (nil)))
(insn 473 472 474 21 (set (reg:SI 0 ax [429])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:333 89 {*movsi_internal}
     (nil))
(insn 474 473 475 21 (set (reg:DI 1 dx [orig:193 D.6395 ] [193])
        (sign_extend:DI (reg:SI 0 ax [429]))) sim2fitman_sup.cpp:333 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [429])
        (nil)))
(insn 475 474 476 21 (set (reg:DI 0 ax [430])
        (reg:DI 1 dx [orig:193 D.6395 ] [193])) sim2fitman_sup.cpp:333 87 {*movdi_internal_rex64}
     (nil))
(insn 476 475 477 21 (parallel [
            (set (reg:DI 0 ax [430])
                (ashift:DI (reg:DI 0 ax [430])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 513 {*ashldi3_1}
     (nil))
(insn 477 476 478 21 (parallel [
            (set (reg:DI 0 ax [430])
                (plus:DI (reg:DI 0 ax [430])
                    (reg:DI 1 dx [orig:193 D.6395 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:193 D.6395 ] [193])
            (const_int 9 [0x9]))
        (nil)))
(insn 478 477 479 21 (parallel [
            (set (reg:DI 0 ax [430])
                (ashift:DI (reg:DI 0 ax [430])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 513 {*ashldi3_1}
     (nil))
(insn 479 478 480 21 (parallel [
            (set (reg:DI 0 ax [430])
                (plus:DI (reg:DI 0 ax [430])
                    (reg:DI 1 dx [orig:193 D.6395 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:193 D.6395 ] [193])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:193 D.6395 ] [193])
                (const_int 19 [0x13]))
            (nil))))
(insn 480 479 481 21 (parallel [
            (set (reg:DI 0 ax [431])
                (ashift:DI (reg:DI 0 ax [430])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [430])
        (nil)))
(insn 481 480 482 21 (set (reg:DI 0 ax [430])
        (reg:DI 0 ax [431])) sim2fitman_sup.cpp:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [431])
        (nil)))
(insn 482 481 483 21 (set (reg:DI 1 dx [orig:194 D.6395 ] [194])
        (reg:DI 0 ax [430])) sim2fitman_sup.cpp:333 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [430])
        (nil)))
(insn 483 482 484 21 (set (reg/f:DI 0 ax [432])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:333 87 {*movdi_internal_rex64}
     (nil))
(insn 484 483 485 21 (parallel [
            (set (reg/f:DI 1 dx [orig:195 D.6402 ] [195])
                (plus:DI (reg:DI 1 dx [orig:194 D.6395 ] [194])
                    (reg/f:DI 0 ax [432])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:333 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [432])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:194 D.6395 ] [194])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:194 D.6395 ] [194]))
                (nil)))))
(insn 485 484 486 21 (set (reg:SF 0 ax [433])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:333 135 {*movsf_internal}
     (nil))
(insn 486 485 487 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:195 D.6402 ] [195])
                (const_int 48 [0x30])) [0 _160->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [433])) sim2fitman_sup.cpp:333 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [433])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:195 D.6402 ] [195])
            (nil))))
(insn 487 486 488 21 (set (reg:SI 0 ax [434])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:334 89 {*movsi_internal}
     (nil))
(insn 488 487 489 21 (set (reg:DI 1 dx [orig:196 D.6395 ] [196])
        (sign_extend:DI (reg:SI 0 ax [434]))) sim2fitman_sup.cpp:334 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [434])
        (nil)))
(insn 489 488 490 21 (set (reg:DI 0 ax [435])
        (reg:DI 1 dx [orig:196 D.6395 ] [196])) sim2fitman_sup.cpp:334 87 {*movdi_internal_rex64}
     (nil))
(insn 490 489 491 21 (parallel [
            (set (reg:DI 0 ax [435])
                (ashift:DI (reg:DI 0 ax [435])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 513 {*ashldi3_1}
     (nil))
(insn 491 490 492 21 (parallel [
            (set (reg:DI 0 ax [435])
                (plus:DI (reg:DI 0 ax [435])
                    (reg:DI 1 dx [orig:196 D.6395 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:196 D.6395 ] [196])
            (const_int 9 [0x9]))
        (nil)))
(insn 492 491 493 21 (parallel [
            (set (reg:DI 0 ax [435])
                (ashift:DI (reg:DI 0 ax [435])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 513 {*ashldi3_1}
     (nil))
(insn 493 492 494 21 (parallel [
            (set (reg:DI 0 ax [435])
                (plus:DI (reg:DI 0 ax [435])
                    (reg:DI 1 dx [orig:196 D.6395 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:196 D.6395 ] [196])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:196 D.6395 ] [196])
                (const_int 19 [0x13]))
            (nil))))
(insn 494 493 495 21 (parallel [
            (set (reg:DI 0 ax [436])
                (ashift:DI (reg:DI 0 ax [435])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [435])
        (nil)))
(insn 495 494 496 21 (set (reg:DI 0 ax [435])
        (reg:DI 0 ax [436])) sim2fitman_sup.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [436])
        (nil)))
(insn 496 495 497 21 (set (reg:DI 1 dx [orig:197 D.6395 ] [197])
        (reg:DI 0 ax [435])) sim2fitman_sup.cpp:334 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [435])
        (nil)))
(insn 497 496 498 21 (set (reg/f:DI 0 ax [437])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:334 87 {*movdi_internal_rex64}
     (nil))
(insn 498 497 499 21 (parallel [
            (set (reg/f:DI 0 ax [orig:198 D.6402 ] [198])
                (plus:DI (reg/f:DI 0 ax [437])
                    (reg:DI 1 dx [orig:197 D.6395 ] [197])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:334 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [437])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:197 D.6395 ] [197])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:197 D.6395 ] [197]))
                (nil)))))
(insn 499 498 500 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:198 D.6402 ] [198])
                (const_int 52 [0x34])) [0 _163->pre_quecc_if+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:334 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:198 D.6402 ] [198])
        (nil)))
(insn 500 499 501 21 (set (reg:SI 0 ax [438])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:335 89 {*movsi_internal}
     (nil))
(insn 501 500 502 21 (set (reg:DI 1 dx [orig:199 D.6395 ] [199])
        (sign_extend:DI (reg:SI 0 ax [438]))) sim2fitman_sup.cpp:335 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [438])
        (nil)))
(insn 502 501 503 21 (set (reg:DI 0 ax [439])
        (reg:DI 1 dx [orig:199 D.6395 ] [199])) sim2fitman_sup.cpp:335 87 {*movdi_internal_rex64}
     (nil))
(insn 503 502 504 21 (parallel [
            (set (reg:DI 0 ax [439])
                (ashift:DI (reg:DI 0 ax [439])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 513 {*ashldi3_1}
     (nil))
(insn 504 503 505 21 (parallel [
            (set (reg:DI 0 ax [439])
                (plus:DI (reg:DI 0 ax [439])
                    (reg:DI 1 dx [orig:199 D.6395 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:199 D.6395 ] [199])
            (const_int 9 [0x9]))
        (nil)))
(insn 505 504 506 21 (parallel [
            (set (reg:DI 0 ax [439])
                (ashift:DI (reg:DI 0 ax [439])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 513 {*ashldi3_1}
     (nil))
(insn 506 505 507 21 (parallel [
            (set (reg:DI 0 ax [439])
                (plus:DI (reg:DI 0 ax [439])
                    (reg:DI 1 dx [orig:199 D.6395 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:199 D.6395 ] [199])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:199 D.6395 ] [199])
                (const_int 19 [0x13]))
            (nil))))
(insn 507 506 508 21 (parallel [
            (set (reg:DI 0 ax [440])
                (ashift:DI (reg:DI 0 ax [439])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [439])
        (nil)))
(insn 508 507 509 21 (set (reg:DI 0 ax [439])
        (reg:DI 0 ax [440])) sim2fitman_sup.cpp:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [440])
        (nil)))
(insn 509 508 510 21 (set (reg:DI 1 dx [orig:200 D.6395 ] [200])
        (reg:DI 0 ax [439])) sim2fitman_sup.cpp:335 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [439])
        (nil)))
(insn 510 509 511 21 (set (reg/f:DI 0 ax [441])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:335 87 {*movdi_internal_rex64}
     (nil))
(insn 511 510 512 21 (parallel [
            (set (reg/f:DI 0 ax [orig:201 D.6402 ] [201])
                (plus:DI (reg/f:DI 0 ax [441])
                    (reg:DI 1 dx [orig:200 D.6395 ] [200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:335 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [441])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:200 D.6395 ] [200])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:200 D.6395 ] [200]))
                (nil)))))
(insn 512 511 513 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:201 D.6402 ] [201])
                (const_int 56 [0x38])) [0 _166->input_file_type+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:335 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:201 D.6402 ] [201])
        (nil)))
(insn 513 512 514 21 (set (reg:SI 0 ax [442])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:336 89 {*movsi_internal}
     (nil))
(insn 514 513 515 21 (set (reg:DI 1 dx [orig:202 D.6395 ] [202])
        (sign_extend:DI (reg:SI 0 ax [442]))) sim2fitman_sup.cpp:336 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [442])
        (nil)))
(insn 515 514 516 21 (set (reg:DI 0 ax [443])
        (reg:DI 1 dx [orig:202 D.6395 ] [202])) sim2fitman_sup.cpp:336 87 {*movdi_internal_rex64}
     (nil))
(insn 516 515 517 21 (parallel [
            (set (reg:DI 0 ax [443])
                (ashift:DI (reg:DI 0 ax [443])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 513 {*ashldi3_1}
     (nil))
(insn 517 516 518 21 (parallel [
            (set (reg:DI 0 ax [443])
                (plus:DI (reg:DI 0 ax [443])
                    (reg:DI 1 dx [orig:202 D.6395 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:202 D.6395 ] [202])
            (const_int 9 [0x9]))
        (nil)))
(insn 518 517 519 21 (parallel [
            (set (reg:DI 0 ax [443])
                (ashift:DI (reg:DI 0 ax [443])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 513 {*ashldi3_1}
     (nil))
(insn 519 518 520 21 (parallel [
            (set (reg:DI 0 ax [443])
                (plus:DI (reg:DI 0 ax [443])
                    (reg:DI 1 dx [orig:202 D.6395 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:202 D.6395 ] [202])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:202 D.6395 ] [202])
                (const_int 19 [0x13]))
            (nil))))
(insn 520 519 521 21 (parallel [
            (set (reg:DI 0 ax [444])
                (ashift:DI (reg:DI 0 ax [443])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [443])
        (nil)))
(insn 521 520 522 21 (set (reg:DI 0 ax [443])
        (reg:DI 0 ax [444])) sim2fitman_sup.cpp:336 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [444])
        (nil)))
(insn 522 521 523 21 (set (reg:DI 1 dx [orig:203 D.6395 ] [203])
        (reg:DI 0 ax [443])) sim2fitman_sup.cpp:336 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [443])
        (nil)))
(insn 523 522 524 21 (set (reg/f:DI 0 ax [445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:336 87 {*movdi_internal_rex64}
     (nil))
(insn 524 523 525 21 (parallel [
            (set (reg/f:DI 0 ax [orig:204 D.6402 ] [204])
                (plus:DI (reg/f:DI 0 ax [445])
                    (reg:DI 1 dx [orig:203 D.6395 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:336 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [445])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:203 D.6395 ] [203])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:203 D.6395 ] [203]))
                (nil)))))
(insn 525 524 526 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:204 D.6402 ] [204])
                (const_int 60 [0x3c])) [0 _169->ref_file_argument+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:336 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:204 D.6402 ] [204])
        (nil)))
(insn 526 525 527 21 (set (reg:SI 0 ax [446])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:337 89 {*movsi_internal}
     (nil))
(insn 527 526 528 21 (set (reg:DI 1 dx [orig:205 D.6395 ] [205])
        (sign_extend:DI (reg:SI 0 ax [446]))) sim2fitman_sup.cpp:337 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [446])
        (nil)))
(insn 528 527 529 21 (set (reg:DI 0 ax [447])
        (reg:DI 1 dx [orig:205 D.6395 ] [205])) sim2fitman_sup.cpp:337 87 {*movdi_internal_rex64}
     (nil))
(insn 529 528 530 21 (parallel [
            (set (reg:DI 0 ax [447])
                (ashift:DI (reg:DI 0 ax [447])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 513 {*ashldi3_1}
     (nil))
(insn 530 529 531 21 (parallel [
            (set (reg:DI 0 ax [447])
                (plus:DI (reg:DI 0 ax [447])
                    (reg:DI 1 dx [orig:205 D.6395 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:205 D.6395 ] [205])
            (const_int 9 [0x9]))
        (nil)))
(insn 531 530 532 21 (parallel [
            (set (reg:DI 0 ax [447])
                (ashift:DI (reg:DI 0 ax [447])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 513 {*ashldi3_1}
     (nil))
(insn 532 531 533 21 (parallel [
            (set (reg:DI 0 ax [447])
                (plus:DI (reg:DI 0 ax [447])
                    (reg:DI 1 dx [orig:205 D.6395 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:205 D.6395 ] [205])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:205 D.6395 ] [205])
                (const_int 19 [0x13]))
            (nil))))
(insn 533 532 534 21 (parallel [
            (set (reg:DI 0 ax [448])
                (ashift:DI (reg:DI 0 ax [447])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [447])
        (nil)))
(insn 534 533 535 21 (set (reg:DI 0 ax [447])
        (reg:DI 0 ax [448])) sim2fitman_sup.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [448])
        (nil)))
(insn 535 534 536 21 (set (reg:DI 1 dx [orig:206 D.6395 ] [206])
        (reg:DI 0 ax [447])) sim2fitman_sup.cpp:337 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [447])
        (nil)))
(insn 536 535 537 21 (set (reg/f:DI 0 ax [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:337 87 {*movdi_internal_rex64}
     (nil))
(insn 537 536 538 21 (parallel [
            (set (reg/f:DI 0 ax [orig:207 D.6402 ] [207])
                (plus:DI (reg/f:DI 0 ax [449])
                    (reg:DI 1 dx [orig:206 D.6395 ] [206])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:337 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [449])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:206 D.6395 ] [206])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:206 D.6395 ] [206]))
                (nil)))))
(insn 538 537 539 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:207 D.6402 ] [207])
                (const_int 64 [0x40])) [0 _172->csi_reorder+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:337 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:207 D.6402 ] [207])
        (nil)))
(insn 539 538 540 21 (set (reg:SI 0 ax [450])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:338 89 {*movsi_internal}
     (nil))
(insn 540 539 541 21 (set (reg:DI 1 dx [orig:208 D.6395 ] [208])
        (sign_extend:DI (reg:SI 0 ax [450]))) sim2fitman_sup.cpp:338 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [450])
        (nil)))
(insn 541 540 542 21 (set (reg:DI 0 ax [451])
        (reg:DI 1 dx [orig:208 D.6395 ] [208])) sim2fitman_sup.cpp:338 87 {*movdi_internal_rex64}
     (nil))
(insn 542 541 543 21 (parallel [
            (set (reg:DI 0 ax [451])
                (ashift:DI (reg:DI 0 ax [451])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 513 {*ashldi3_1}
     (nil))
(insn 543 542 544 21 (parallel [
            (set (reg:DI 0 ax [451])
                (plus:DI (reg:DI 0 ax [451])
                    (reg:DI 1 dx [orig:208 D.6395 ] [208])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 274 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:208 D.6395 ] [208])
            (const_int 9 [0x9]))
        (nil)))
(insn 544 543 545 21 (parallel [
            (set (reg:DI 0 ax [451])
                (ashift:DI (reg:DI 0 ax [451])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 513 {*ashldi3_1}
     (nil))
(insn 545 544 546 21 (parallel [
            (set (reg:DI 0 ax [451])
                (plus:DI (reg:DI 0 ax [451])
                    (reg:DI 1 dx [orig:208 D.6395 ] [208])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:208 D.6395 ] [208])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:208 D.6395 ] [208])
                (const_int 19 [0x13]))
            (nil))))
(insn 546 545 547 21 (parallel [
            (set (reg:DI 0 ax [452])
                (ashift:DI (reg:DI 0 ax [451])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [451])
        (nil)))
(insn 547 546 548 21 (set (reg:DI 0 ax [451])
        (reg:DI 0 ax [452])) sim2fitman_sup.cpp:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [452])
        (nil)))
(insn 548 547 549 21 (set (reg:DI 1 dx [orig:209 D.6395 ] [209])
        (reg:DI 0 ax [451])) sim2fitman_sup.cpp:338 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [451])
        (nil)))
(insn 549 548 550 21 (set (reg/f:DI 0 ax [453])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 preprocess+0 S8 A64])) sim2fitman_sup.cpp:338 87 {*movdi_internal_rex64}
     (nil))
(insn 550 549 551 21 (parallel [
            (set (reg/f:DI 0 ax [orig:210 D.6402 ] [210])
                (plus:DI (reg/f:DI 0 ax [453])
                    (reg:DI 1 dx [orig:209 D.6395 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:338 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [453])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:209 D.6395 ] [209])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (reg:DI 1 dx [orig:209 D.6395 ] [209]))
                (nil)))))
(insn 551 550 552 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:210 D.6402 ] [210])
                (const_int 68 [0x44])) [0 _175->tilt+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:338 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:210 D.6402 ] [210])
        (nil)))
(insn 552 551 553 21 (set (reg:SI 0 ax [454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:341 89 {*movsi_internal}
     (nil))
(insn 553 552 847 21 (set (reg:DI 0 ax [orig:211 D.6395 ] [211])
        (sign_extend:DI (reg:SI 0 ax [454]))) sim2fitman_sup.cpp:341 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [454])
        (nil)))
(insn 847 553 554 21 (set (reg:DI 0 ax [orig:212 D.6395 ] [212])
        (reg:DI 0 ax [orig:211 D.6395 ] [211])) sim2fitman_sup.cpp:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:211 D.6395 ] [211])
        (nil)))
(insn 554 847 848 21 (parallel [
            (set (reg:DI 0 ax [orig:212 D.6395 ] [212])
                (ashift:DI (reg:DI 0 ax [orig:212 D.6395 ] [212])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:341 513 {*ashldi3_1}
     (nil))
(insn 848 554 555 21 (set (reg:DI 1 dx [orig:212 D.6395 ] [212])
        (reg:DI 0 ax [orig:212 D.6395 ] [212])) sim2fitman_sup.cpp:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:212 D.6395 ] [212])
        (nil)))
(insn 555 848 556 21 (set (reg/f:DI 0 ax [455])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:341 87 {*movdi_internal_rex64}
     (nil))
(insn 556 555 557 21 (parallel [
            (set (reg/f:DI 0 ax [orig:213 D.6403 ] [213])
                (plus:DI (reg/f:DI 0 ax [455])
                    (reg:DI 1 dx [orig:212 D.6395 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:341 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [455])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:212 D.6395 ] [212])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:212 D.6395 ] [212]))
                (nil)))))
(insn 557 556 558 21 (set (mem/j:DI (reg/f:DI 0 ax [orig:213 D.6403 ] [213]) [0 _179->nblocks.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:341 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:213 D.6403 ] [213])
        (nil)))
(insn 558 557 559 21 (set (reg:SI 0 ax [456])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:342 89 {*movsi_internal}
     (nil))
(insn 559 558 849 21 (set (reg:DI 0 ax [orig:214 D.6395 ] [214])
        (sign_extend:DI (reg:SI 0 ax [456]))) sim2fitman_sup.cpp:342 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [456])
        (nil)))
(insn 849 559 560 21 (set (reg:DI 0 ax [orig:215 D.6395 ] [215])
        (reg:DI 0 ax [orig:214 D.6395 ] [214])) sim2fitman_sup.cpp:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:214 D.6395 ] [214])
        (nil)))
(insn 560 849 850 21 (parallel [
            (set (reg:DI 0 ax [orig:215 D.6395 ] [215])
                (ashift:DI (reg:DI 0 ax [orig:215 D.6395 ] [215])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:342 513 {*ashldi3_1}
     (nil))
(insn 850 560 561 21 (set (reg:DI 1 dx [orig:215 D.6395 ] [215])
        (reg:DI 0 ax [orig:215 D.6395 ] [215])) sim2fitman_sup.cpp:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:215 D.6395 ] [215])
        (nil)))
(insn 561 850 562 21 (set (reg/f:DI 0 ax [457])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:342 87 {*movdi_internal_rex64}
     (nil))
(insn 562 561 563 21 (parallel [
            (set (reg/f:DI 0 ax [orig:216 D.6403 ] [216])
                (plus:DI (reg/f:DI 0 ax [457])
                    (reg:DI 1 dx [orig:215 D.6395 ] [215])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:342 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [457])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:215 D.6395 ] [215])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:215 D.6395 ] [215]))
                (nil)))))
(insn 563 562 564 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:216 D.6403 ] [216])
                (const_int 8 [0x8])) [0 _182->ntraces.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:342 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:216 D.6403 ] [216])
        (nil)))
(insn 564 563 565 21 (set (reg:SI 0 ax [458])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:343 89 {*movsi_internal}
     (nil))
(insn 565 564 851 21 (set (reg:DI 0 ax [orig:217 D.6395 ] [217])
        (sign_extend:DI (reg:SI 0 ax [458]))) sim2fitman_sup.cpp:343 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [458])
        (nil)))
(insn 851 565 566 21 (set (reg:DI 0 ax [orig:218 D.6395 ] [218])
        (reg:DI 0 ax [orig:217 D.6395 ] [217])) sim2fitman_sup.cpp:343 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:217 D.6395 ] [217])
        (nil)))
(insn 566 851 852 21 (parallel [
            (set (reg:DI 0 ax [orig:218 D.6395 ] [218])
                (ashift:DI (reg:DI 0 ax [orig:218 D.6395 ] [218])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:343 513 {*ashldi3_1}
     (nil))
(insn 852 566 567 21 (set (reg:DI 1 dx [orig:218 D.6395 ] [218])
        (reg:DI 0 ax [orig:218 D.6395 ] [218])) sim2fitman_sup.cpp:343 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:218 D.6395 ] [218])
        (nil)))
(insn 567 852 568 21 (set (reg/f:DI 0 ax [459])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:343 87 {*movdi_internal_rex64}
     (nil))
(insn 568 567 569 21 (parallel [
            (set (reg/f:DI 0 ax [orig:219 D.6403 ] [219])
                (plus:DI (reg/f:DI 0 ax [459])
                    (reg:DI 1 dx [orig:218 D.6395 ] [218])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:343 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [459])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:218 D.6395 ] [218])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:218 D.6395 ] [218]))
                (nil)))))
(insn 569 568 570 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:219 D.6403 ] [219])
                (const_int 16 [0x10])) [0 _185->np.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:343 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:219 D.6403 ] [219])
        (nil)))
(insn 570 569 571 21 (set (reg:SI 0 ax [460])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:344 89 {*movsi_internal}
     (nil))
(insn 571 570 853 21 (set (reg:DI 0 ax [orig:220 D.6395 ] [220])
        (sign_extend:DI (reg:SI 0 ax [460]))) sim2fitman_sup.cpp:344 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [460])
        (nil)))
(insn 853 571 572 21 (set (reg:DI 0 ax [orig:221 D.6395 ] [221])
        (reg:DI 0 ax [orig:220 D.6395 ] [220])) sim2fitman_sup.cpp:344 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:220 D.6395 ] [220])
        (nil)))
(insn 572 853 854 21 (parallel [
            (set (reg:DI 0 ax [orig:221 D.6395 ] [221])
                (ashift:DI (reg:DI 0 ax [orig:221 D.6395 ] [221])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:344 513 {*ashldi3_1}
     (nil))
(insn 854 572 573 21 (set (reg:DI 1 dx [orig:221 D.6395 ] [221])
        (reg:DI 0 ax [orig:221 D.6395 ] [221])) sim2fitman_sup.cpp:344 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:221 D.6395 ] [221])
        (nil)))
(insn 573 854 574 21 (set (reg/f:DI 0 ax [461])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:344 87 {*movdi_internal_rex64}
     (nil))
(insn 574 573 575 21 (parallel [
            (set (reg/f:DI 0 ax [orig:222 D.6403 ] [222])
                (plus:DI (reg/f:DI 0 ax [461])
                    (reg:DI 1 dx [orig:221 D.6395 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:344 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [461])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:221 D.6395 ] [221])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:221 D.6395 ] [221]))
                (nil)))))
(insn 575 574 576 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:222 D.6403 ] [222])
                (const_int 24 [0x18])) [0 _188->ebytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:344 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:222 D.6403 ] [222])
        (nil)))
(insn 576 575 577 21 (set (reg:SI 0 ax [462])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:345 89 {*movsi_internal}
     (nil))
(insn 577 576 855 21 (set (reg:DI 0 ax [orig:223 D.6395 ] [223])
        (sign_extend:DI (reg:SI 0 ax [462]))) sim2fitman_sup.cpp:345 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [462])
        (nil)))
(insn 855 577 578 21 (set (reg:DI 0 ax [orig:224 D.6395 ] [224])
        (reg:DI 0 ax [orig:223 D.6395 ] [223])) sim2fitman_sup.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:223 D.6395 ] [223])
        (nil)))
(insn 578 855 856 21 (parallel [
            (set (reg:DI 0 ax [orig:224 D.6395 ] [224])
                (ashift:DI (reg:DI 0 ax [orig:224 D.6395 ] [224])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:345 513 {*ashldi3_1}
     (nil))
(insn 856 578 579 21 (set (reg:DI 1 dx [orig:224 D.6395 ] [224])
        (reg:DI 0 ax [orig:224 D.6395 ] [224])) sim2fitman_sup.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:224 D.6395 ] [224])
        (nil)))
(insn 579 856 580 21 (set (reg/f:DI 0 ax [463])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:345 87 {*movdi_internal_rex64}
     (nil))
(insn 580 579 581 21 (parallel [
            (set (reg/f:DI 0 ax [orig:225 D.6403 ] [225])
                (plus:DI (reg/f:DI 0 ax [463])
                    (reg:DI 1 dx [orig:224 D.6395 ] [224])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:345 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [463])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:224 D.6395 ] [224])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:224 D.6395 ] [224]))
                (nil)))))
(insn 581 580 582 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:225 D.6403 ] [225])
                (const_int 32 [0x20])) [0 _191->tbytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:345 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:225 D.6403 ] [225])
        (nil)))
(insn 582 581 583 21 (set (reg:SI 0 ax [464])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:346 89 {*movsi_internal}
     (nil))
(insn 583 582 857 21 (set (reg:DI 0 ax [orig:226 D.6395 ] [226])
        (sign_extend:DI (reg:SI 0 ax [464]))) sim2fitman_sup.cpp:346 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [464])
        (nil)))
(insn 857 583 584 21 (set (reg:DI 0 ax [orig:227 D.6395 ] [227])
        (reg:DI 0 ax [orig:226 D.6395 ] [226])) sim2fitman_sup.cpp:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:226 D.6395 ] [226])
        (nil)))
(insn 584 857 858 21 (parallel [
            (set (reg:DI 0 ax [orig:227 D.6395 ] [227])
                (ashift:DI (reg:DI 0 ax [orig:227 D.6395 ] [227])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:346 513 {*ashldi3_1}
     (nil))
(insn 858 584 585 21 (set (reg:DI 1 dx [orig:227 D.6395 ] [227])
        (reg:DI 0 ax [orig:227 D.6395 ] [227])) sim2fitman_sup.cpp:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:227 D.6395 ] [227])
        (nil)))
(insn 585 858 586 21 (set (reg/f:DI 0 ax [465])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:346 87 {*movdi_internal_rex64}
     (nil))
(insn 586 585 587 21 (parallel [
            (set (reg/f:DI 0 ax [orig:228 D.6403 ] [228])
                (plus:DI (reg/f:DI 0 ax [465])
                    (reg:DI 1 dx [orig:227 D.6395 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:346 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [465])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:227 D.6395 ] [227])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:227 D.6395 ] [227]))
                (nil)))))
(insn 587 586 588 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:228 D.6403 ] [228])
                (const_int 40 [0x28])) [0 _194->bbytes.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:346 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:228 D.6403 ] [228])
        (nil)))
(insn 588 587 589 21 (set (reg:SI 0 ax [466])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:347 89 {*movsi_internal}
     (nil))
(insn 589 588 859 21 (set (reg:DI 0 ax [orig:229 D.6395 ] [229])
        (sign_extend:DI (reg:SI 0 ax [466]))) sim2fitman_sup.cpp:347 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [466])
        (nil)))
(insn 859 589 590 21 (set (reg:DI 0 ax [orig:230 D.6395 ] [230])
        (reg:DI 0 ax [orig:229 D.6395 ] [229])) sim2fitman_sup.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:229 D.6395 ] [229])
        (nil)))
(insn 590 859 860 21 (parallel [
            (set (reg:DI 0 ax [orig:230 D.6395 ] [230])
                (ashift:DI (reg:DI 0 ax [orig:230 D.6395 ] [230])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:347 513 {*ashldi3_1}
     (nil))
(insn 860 590 591 21 (set (reg:DI 1 dx [orig:230 D.6395 ] [230])
        (reg:DI 0 ax [orig:230 D.6395 ] [230])) sim2fitman_sup.cpp:347 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:230 D.6395 ] [230])
        (nil)))
(insn 591 860 592 21 (set (reg/f:DI 0 ax [467])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:347 87 {*movdi_internal_rex64}
     (nil))
(insn 592 591 593 21 (parallel [
            (set (reg/f:DI 0 ax [orig:231 D.6403 ] [231])
                (plus:DI (reg/f:DI 0 ax [467])
                    (reg:DI 1 dx [orig:230 D.6395 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:347 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [467])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:230 D.6395 ] [230])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:230 D.6395 ] [230]))
                (nil)))))
(insn 593 592 594 21 (set (mem/j:HI (plus:DI (reg/f:DI 0 ax [orig:231 D.6403 ] [231])
                (const_int 48 [0x30])) [0 _197->transf.number+0 S2 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:347 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:231 D.6403 ] [231])
        (nil)))
(insn 594 593 595 21 (set (reg:SI 0 ax [468])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:348 89 {*movsi_internal}
     (nil))
(insn 595 594 861 21 (set (reg:DI 0 ax [orig:232 D.6395 ] [232])
        (sign_extend:DI (reg:SI 0 ax [468]))) sim2fitman_sup.cpp:348 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [468])
        (nil)))
(insn 861 595 596 21 (set (reg:DI 0 ax [orig:233 D.6395 ] [233])
        (reg:DI 0 ax [orig:232 D.6395 ] [232])) sim2fitman_sup.cpp:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:232 D.6395 ] [232])
        (nil)))
(insn 596 861 862 21 (parallel [
            (set (reg:DI 0 ax [orig:233 D.6395 ] [233])
                (ashift:DI (reg:DI 0 ax [orig:233 D.6395 ] [233])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:348 513 {*ashldi3_1}
     (nil))
(insn 862 596 597 21 (set (reg:DI 1 dx [orig:233 D.6395 ] [233])
        (reg:DI 0 ax [orig:233 D.6395 ] [233])) sim2fitman_sup.cpp:348 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:233 D.6395 ] [233])
        (nil)))
(insn 597 862 598 21 (set (reg/f:DI 0 ax [469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:348 87 {*movdi_internal_rex64}
     (nil))
(insn 598 597 599 21 (parallel [
            (set (reg/f:DI 0 ax [orig:234 D.6403 ] [234])
                (plus:DI (reg/f:DI 0 ax [469])
                    (reg:DI 1 dx [orig:233 D.6395 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:348 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [469])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:233 D.6395 ] [233])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:233 D.6395 ] [233]))
                (nil)))))
(insn 599 598 600 21 (set (mem/j:HI (plus:DI (reg/f:DI 0 ax [orig:234 D.6403 ] [234])
                (const_int 50 [0x32])) [0 _200->status.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:348 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:234 D.6403 ] [234])
        (nil)))
(insn 600 599 601 21 (set (reg:SI 0 ax [470])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:349 89 {*movsi_internal}
     (nil))
(insn 601 600 863 21 (set (reg:DI 0 ax [orig:235 D.6395 ] [235])
        (sign_extend:DI (reg:SI 0 ax [470]))) sim2fitman_sup.cpp:349 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [470])
        (nil)))
(insn 863 601 602 21 (set (reg:DI 0 ax [orig:236 D.6395 ] [236])
        (reg:DI 0 ax [orig:235 D.6395 ] [235])) sim2fitman_sup.cpp:349 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:235 D.6395 ] [235])
        (nil)))
(insn 602 863 864 21 (parallel [
            (set (reg:DI 0 ax [orig:236 D.6395 ] [236])
                (ashift:DI (reg:DI 0 ax [orig:236 D.6395 ] [236])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:349 513 {*ashldi3_1}
     (nil))
(insn 864 602 603 21 (set (reg:DI 1 dx [orig:236 D.6395 ] [236])
        (reg:DI 0 ax [orig:236 D.6395 ] [236])) sim2fitman_sup.cpp:349 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:236 D.6395 ] [236])
        (nil)))
(insn 603 864 604 21 (set (reg/f:DI 0 ax [471])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:349 87 {*movdi_internal_rex64}
     (nil))
(insn 604 603 605 21 (parallel [
            (set (reg/f:DI 0 ax [orig:237 D.6403 ] [237])
                (plus:DI (reg/f:DI 0 ax [471])
                    (reg:DI 1 dx [orig:236 D.6395 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:349 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [471])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:236 D.6395 ] [236])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 main_header+0 S8 A64])
                    (reg:DI 1 dx [orig:236 D.6395 ] [236]))
                (nil)))))
(insn 605 604 606 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:237 D.6403 ] [237])
                (const_int 56 [0x38])) [0 _203->spare1.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:349 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:237 D.6403 ] [237])
        (nil)))
(insn 606 605 607 21 (set (reg:SI 0 ax [472])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:352 89 {*movsi_internal}
     (nil))
(insn 607 606 865 21 (set (reg:DI 0 ax [orig:238 D.6395 ] [238])
        (sign_extend:DI (reg:SI 0 ax [472]))) sim2fitman_sup.cpp:352 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [472])
        (nil)))
(insn 865 607 608 21 (set (reg:DI 0 ax [orig:239 D.6395 ] [239])
        (reg:DI 0 ax [orig:238 D.6395 ] [238])) sim2fitman_sup.cpp:352 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:238 D.6395 ] [238])
        (nil)))
(insn 608 865 866 21 (parallel [
            (set (reg:DI 0 ax [orig:239 D.6395 ] [239])
                (ashift:DI (reg:DI 0 ax [orig:239 D.6395 ] [239])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:352 513 {*ashldi3_1}
     (nil))
(insn 866 608 609 21 (set (reg:DI 1 dx [orig:239 D.6395 ] [239])
        (reg:DI 0 ax [orig:239 D.6395 ] [239])) sim2fitman_sup.cpp:352 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:239 D.6395 ] [239])
        (nil)))
(insn 609 866 610 21 (set (reg/f:DI 0 ax [473])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:352 87 {*movdi_internal_rex64}
     (nil))
(insn 610 609 611 21 (parallel [
            (set (reg/f:DI 0 ax [orig:240 D.6404 ] [240])
                (plus:DI (reg/f:DI 0 ax [473])
                    (reg:DI 1 dx [orig:239 D.6395 ] [239])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:352 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [473])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:239 D.6395 ] [239])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:239 D.6395 ] [239]))
                (nil)))))
(insn 611 610 612 21 (set (mem/j:HI (reg/f:DI 0 ax [orig:240 D.6404 ] [240]) [0 _207->scale.number+0 S2 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:352 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:240 D.6404 ] [240])
        (nil)))
(insn 612 611 613 21 (set (reg:SI 0 ax [474])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:353 89 {*movsi_internal}
     (nil))
(insn 613 612 867 21 (set (reg:DI 0 ax [orig:241 D.6395 ] [241])
        (sign_extend:DI (reg:SI 0 ax [474]))) sim2fitman_sup.cpp:353 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [474])
        (nil)))
(insn 867 613 614 21 (set (reg:DI 0 ax [orig:242 D.6395 ] [242])
        (reg:DI 0 ax [orig:241 D.6395 ] [241])) sim2fitman_sup.cpp:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:241 D.6395 ] [241])
        (nil)))
(insn 614 867 868 21 (parallel [
            (set (reg:DI 0 ax [orig:242 D.6395 ] [242])
                (ashift:DI (reg:DI 0 ax [orig:242 D.6395 ] [242])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:353 513 {*ashldi3_1}
     (nil))
(insn 868 614 615 21 (set (reg:DI 1 dx [orig:242 D.6395 ] [242])
        (reg:DI 0 ax [orig:242 D.6395 ] [242])) sim2fitman_sup.cpp:353 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:242 D.6395 ] [242])
        (nil)))
(insn 615 868 616 21 (set (reg/f:DI 0 ax [475])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:353 87 {*movdi_internal_rex64}
     (nil))
(insn 616 615 617 21 (parallel [
            (set (reg/f:DI 0 ax [orig:243 D.6404 ] [243])
                (plus:DI (reg/f:DI 0 ax [475])
                    (reg:DI 1 dx [orig:242 D.6395 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:353 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [475])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:242 D.6395 ] [242])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:242 D.6395 ] [242]))
                (nil)))))
(insn 617 616 618 21 (set (mem/j:HI (plus:DI (reg/f:DI 0 ax [orig:243 D.6404 ] [243])
                (const_int 2 [0x2])) [0 _210->status.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:353 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:243 D.6404 ] [243])
        (nil)))
(insn 618 617 619 21 (set (reg:SI 0 ax [476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:354 89 {*movsi_internal}
     (nil))
(insn 619 618 869 21 (set (reg:DI 0 ax [orig:244 D.6395 ] [244])
        (sign_extend:DI (reg:SI 0 ax [476]))) sim2fitman_sup.cpp:354 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [476])
        (nil)))
(insn 869 619 620 21 (set (reg:DI 0 ax [orig:245 D.6395 ] [245])
        (reg:DI 0 ax [orig:244 D.6395 ] [244])) sim2fitman_sup.cpp:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:244 D.6395 ] [244])
        (nil)))
(insn 620 869 870 21 (parallel [
            (set (reg:DI 0 ax [orig:245 D.6395 ] [245])
                (ashift:DI (reg:DI 0 ax [orig:245 D.6395 ] [245])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:354 513 {*ashldi3_1}
     (nil))
(insn 870 620 621 21 (set (reg:DI 1 dx [orig:245 D.6395 ] [245])
        (reg:DI 0 ax [orig:245 D.6395 ] [245])) sim2fitman_sup.cpp:354 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:245 D.6395 ] [245])
        (nil)))
(insn 621 870 622 21 (set (reg/f:DI 0 ax [477])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:354 87 {*movdi_internal_rex64}
     (nil))
(insn 622 621 623 21 (parallel [
            (set (reg/f:DI 0 ax [orig:246 D.6404 ] [246])
                (plus:DI (reg/f:DI 0 ax [477])
                    (reg:DI 1 dx [orig:245 D.6395 ] [245])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:354 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [477])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:245 D.6395 ] [245])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:245 D.6395 ] [245]))
                (nil)))))
(insn 623 622 624 21 (set (mem/j:HI (plus:DI (reg/f:DI 0 ax [orig:246 D.6404 ] [246])
                (const_int 4 [0x4])) [0 _213->index.number+0 S2 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:354 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:246 D.6404 ] [246])
        (nil)))
(insn 624 623 625 21 (set (reg:SI 0 ax [478])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:355 89 {*movsi_internal}
     (nil))
(insn 625 624 871 21 (set (reg:DI 0 ax [orig:247 D.6395 ] [247])
        (sign_extend:DI (reg:SI 0 ax [478]))) sim2fitman_sup.cpp:355 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [478])
        (nil)))
(insn 871 625 626 21 (set (reg:DI 0 ax [orig:248 D.6395 ] [248])
        (reg:DI 0 ax [orig:247 D.6395 ] [247])) sim2fitman_sup.cpp:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:247 D.6395 ] [247])
        (nil)))
(insn 626 871 872 21 (parallel [
            (set (reg:DI 0 ax [orig:248 D.6395 ] [248])
                (ashift:DI (reg:DI 0 ax [orig:248 D.6395 ] [248])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:355 513 {*ashldi3_1}
     (nil))
(insn 872 626 627 21 (set (reg:DI 1 dx [orig:248 D.6395 ] [248])
        (reg:DI 0 ax [orig:248 D.6395 ] [248])) sim2fitman_sup.cpp:355 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:248 D.6395 ] [248])
        (nil)))
(insn 627 872 628 21 (set (reg/f:DI 0 ax [479])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:355 87 {*movdi_internal_rex64}
     (nil))
(insn 628 627 629 21 (parallel [
            (set (reg/f:DI 0 ax [orig:249 D.6404 ] [249])
                (plus:DI (reg/f:DI 0 ax [479])
                    (reg:DI 1 dx [orig:248 D.6395 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:355 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [479])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:248 D.6395 ] [248])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:248 D.6395 ] [248]))
                (nil)))))
(insn 629 628 630 21 (set (mem/j:HI (plus:DI (reg/f:DI 0 ax [orig:249 D.6404 ] [249])
                (const_int 6 [0x6])) [0 _216->spare3.number+0 S2 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:355 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:249 D.6404 ] [249])
        (nil)))
(insn 630 629 631 21 (set (reg:SI 0 ax [480])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:356 89 {*movsi_internal}
     (nil))
(insn 631 630 873 21 (set (reg:DI 0 ax [orig:250 D.6395 ] [250])
        (sign_extend:DI (reg:SI 0 ax [480]))) sim2fitman_sup.cpp:356 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [480])
        (nil)))
(insn 873 631 632 21 (set (reg:DI 0 ax [orig:251 D.6395 ] [251])
        (reg:DI 0 ax [orig:250 D.6395 ] [250])) sim2fitman_sup.cpp:356 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:250 D.6395 ] [250])
        (nil)))
(insn 632 873 874 21 (parallel [
            (set (reg:DI 0 ax [orig:251 D.6395 ] [251])
                (ashift:DI (reg:DI 0 ax [orig:251 D.6395 ] [251])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:356 513 {*ashldi3_1}
     (nil))
(insn 874 632 633 21 (set (reg:DI 1 dx [orig:251 D.6395 ] [251])
        (reg:DI 0 ax [orig:251 D.6395 ] [251])) sim2fitman_sup.cpp:356 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:251 D.6395 ] [251])
        (nil)))
(insn 633 874 634 21 (set (reg/f:DI 0 ax [481])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:356 87 {*movdi_internal_rex64}
     (nil))
(insn 634 633 635 21 (parallel [
            (set (reg/f:DI 0 ax [orig:252 D.6404 ] [252])
                (plus:DI (reg/f:DI 0 ax [481])
                    (reg:DI 1 dx [orig:251 D.6395 ] [251])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:356 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [481])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:251 D.6395 ] [251])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:251 D.6395 ] [251]))
                (nil)))))
(insn 635 634 636 21 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [orig:252 D.6404 ] [252])
                (const_int 8 [0x8])) [0 _219->ctcount.number+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:356 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:252 D.6404 ] [252])
        (nil)))
(insn 636 635 637 21 (set (reg:SI 0 ax [482])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:357 89 {*movsi_internal}
     (nil))
(insn 637 636 875 21 (set (reg:DI 0 ax [orig:253 D.6395 ] [253])
        (sign_extend:DI (reg:SI 0 ax [482]))) sim2fitman_sup.cpp:357 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [482])
        (nil)))
(insn 875 637 638 21 (set (reg:DI 0 ax [orig:254 D.6395 ] [254])
        (reg:DI 0 ax [orig:253 D.6395 ] [253])) sim2fitman_sup.cpp:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:253 D.6395 ] [253])
        (nil)))
(insn 638 875 876 21 (parallel [
            (set (reg:DI 0 ax [orig:254 D.6395 ] [254])
                (ashift:DI (reg:DI 0 ax [orig:254 D.6395 ] [254])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:357 513 {*ashldi3_1}
     (nil))
(insn 876 638 639 21 (set (reg:DI 1 dx [orig:254 D.6395 ] [254])
        (reg:DI 0 ax [orig:254 D.6395 ] [254])) sim2fitman_sup.cpp:357 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:254 D.6395 ] [254])
        (nil)))
(insn 639 876 640 21 (set (reg/f:DI 0 ax [483])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:357 87 {*movdi_internal_rex64}
     (nil))
(insn 640 639 641 21 (parallel [
            (set (reg/f:DI 1 dx [orig:255 D.6404 ] [255])
                (plus:DI (reg:DI 1 dx [orig:254 D.6395 ] [254])
                    (reg/f:DI 0 ax [483])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:357 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [483])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:254 D.6395 ] [254])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:254 D.6395 ] [254]))
                (nil)))))
(insn 641 640 642 21 (set (reg:SF 0 ax [484])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:357 135 {*movsf_internal}
     (nil))
(insn 642 641 643 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:255 D.6404 ] [255])
                (const_int 16 [0x10])) [0 _222->lpval.number+0 S4 A64])
        (reg:SF 0 ax [484])) sim2fitman_sup.cpp:357 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [484])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:255 D.6404 ] [255])
            (nil))))
(insn 643 642 644 21 (set (reg:SI 0 ax [485])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:358 89 {*movsi_internal}
     (nil))
(insn 644 643 877 21 (set (reg:DI 0 ax [orig:256 D.6395 ] [256])
        (sign_extend:DI (reg:SI 0 ax [485]))) sim2fitman_sup.cpp:358 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [485])
        (nil)))
(insn 877 644 645 21 (set (reg:DI 0 ax [orig:257 D.6395 ] [257])
        (reg:DI 0 ax [orig:256 D.6395 ] [256])) sim2fitman_sup.cpp:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:256 D.6395 ] [256])
        (nil)))
(insn 645 877 878 21 (parallel [
            (set (reg:DI 0 ax [orig:257 D.6395 ] [257])
                (ashift:DI (reg:DI 0 ax [orig:257 D.6395 ] [257])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:358 513 {*ashldi3_1}
     (nil))
(insn 878 645 646 21 (set (reg:DI 1 dx [orig:257 D.6395 ] [257])
        (reg:DI 0 ax [orig:257 D.6395 ] [257])) sim2fitman_sup.cpp:358 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:257 D.6395 ] [257])
        (nil)))
(insn 646 878 647 21 (set (reg/f:DI 0 ax [486])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:358 87 {*movdi_internal_rex64}
     (nil))
(insn 647 646 648 21 (parallel [
            (set (reg/f:DI 1 dx [orig:258 D.6404 ] [258])
                (plus:DI (reg:DI 1 dx [orig:257 D.6395 ] [257])
                    (reg/f:DI 0 ax [486])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:358 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [486])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:257 D.6395 ] [257])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:257 D.6395 ] [257]))
                (nil)))))
(insn 648 647 649 21 (set (reg:SF 0 ax [487])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:358 135 {*movsf_internal}
     (nil))
(insn 649 648 650 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:258 D.6404 ] [258])
                (const_int 20 [0x14])) [0 _225->rpval.number+0 S4 A32])
        (reg:SF 0 ax [487])) sim2fitman_sup.cpp:358 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [487])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:258 D.6404 ] [258])
            (nil))))
(insn 650 649 651 21 (set (reg:SI 0 ax [488])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:359 89 {*movsi_internal}
     (nil))
(insn 651 650 879 21 (set (reg:DI 0 ax [orig:259 D.6395 ] [259])
        (sign_extend:DI (reg:SI 0 ax [488]))) sim2fitman_sup.cpp:359 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [488])
        (nil)))
(insn 879 651 652 21 (set (reg:DI 0 ax [orig:260 D.6395 ] [260])
        (reg:DI 0 ax [orig:259 D.6395 ] [259])) sim2fitman_sup.cpp:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:259 D.6395 ] [259])
        (nil)))
(insn 652 879 880 21 (parallel [
            (set (reg:DI 0 ax [orig:260 D.6395 ] [260])
                (ashift:DI (reg:DI 0 ax [orig:260 D.6395 ] [260])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:359 513 {*ashldi3_1}
     (nil))
(insn 880 652 653 21 (set (reg:DI 1 dx [orig:260 D.6395 ] [260])
        (reg:DI 0 ax [orig:260 D.6395 ] [260])) sim2fitman_sup.cpp:359 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:260 D.6395 ] [260])
        (nil)))
(insn 653 880 654 21 (set (reg/f:DI 0 ax [489])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:359 87 {*movdi_internal_rex64}
     (nil))
(insn 654 653 655 21 (parallel [
            (set (reg/f:DI 1 dx [orig:261 D.6404 ] [261])
                (plus:DI (reg:DI 1 dx [orig:260 D.6395 ] [260])
                    (reg/f:DI 0 ax [489])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:359 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [489])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:260 D.6395 ] [260])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:260 D.6395 ] [260]))
                (nil)))))
(insn 655 654 656 21 (set (reg:SF 0 ax [490])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:359 135 {*movsf_internal}
     (nil))
(insn 656 655 657 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:261 D.6404 ] [261])
                (const_int 24 [0x18])) [0 _228->lvl.number+0 S4 A64])
        (reg:SF 0 ax [490])) sim2fitman_sup.cpp:359 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [490])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:261 D.6404 ] [261])
            (nil))))
(insn 657 656 658 21 (set (reg:SI 0 ax [491])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:360 89 {*movsi_internal}
     (nil))
(insn 658 657 881 21 (set (reg:DI 0 ax [orig:262 D.6395 ] [262])
        (sign_extend:DI (reg:SI 0 ax [491]))) sim2fitman_sup.cpp:360 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [491])
        (nil)))
(insn 881 658 659 21 (set (reg:DI 0 ax [orig:263 D.6395 ] [263])
        (reg:DI 0 ax [orig:262 D.6395 ] [262])) sim2fitman_sup.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:262 D.6395 ] [262])
        (nil)))
(insn 659 881 882 21 (parallel [
            (set (reg:DI 0 ax [orig:263 D.6395 ] [263])
                (ashift:DI (reg:DI 0 ax [orig:263 D.6395 ] [263])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:360 513 {*ashldi3_1}
     (nil))
(insn 882 659 660 21 (set (reg:DI 1 dx [orig:263 D.6395 ] [263])
        (reg:DI 0 ax [orig:263 D.6395 ] [263])) sim2fitman_sup.cpp:360 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:263 D.6395 ] [263])
        (nil)))
(insn 660 882 661 21 (set (reg/f:DI 0 ax [492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 block_header+0 S8 A64])) sim2fitman_sup.cpp:360 87 {*movdi_internal_rex64}
     (nil))
(insn 661 660 662 21 (parallel [
            (set (reg/f:DI 1 dx [orig:264 D.6404 ] [264])
                (plus:DI (reg:DI 1 dx [orig:263 D.6395 ] [263])
                    (reg/f:DI 0 ax [492])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:360 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [492])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:263 D.6395 ] [263])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [0 block_header+0 S8 A64])
                    (reg:DI 1 dx [orig:263 D.6395 ] [263]))
                (nil)))))
(insn 662 661 663 21 (set (reg:SF 0 ax [493])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) sim2fitman_sup.cpp:360 135 {*movsf_internal}
     (nil))
(insn 663 662 664 21 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:264 D.6404 ] [264])
                (const_int 28 [0x1c])) [0 _231->tlt.number+0 S4 A32])
        (reg:SF 0 ax [493])) sim2fitman_sup.cpp:360 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 0 ax [493])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:264 D.6404 ] [264])
            (nil))))
(insn 664 663 665 21 (set (reg:SI 0 ax [494])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:363 89 {*movsi_internal}
     (nil))
(insn 665 664 883 21 (set (reg:DI 0 ax [orig:265 D.6395 ] [265])
        (sign_extend:DI (reg:SI 0 ax [494]))) sim2fitman_sup.cpp:363 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [494])
        (nil)))
(insn 883 665 666 21 (set (reg:DI 0 ax [orig:266 D.6395 ] [266])
        (reg:DI 0 ax [orig:265 D.6395 ] [265])) sim2fitman_sup.cpp:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:265 D.6395 ] [265])
        (nil)))
(insn 666 883 884 21 (parallel [
            (set (reg:DI 0 ax [orig:266 D.6395 ] [266])
                (ashift:DI (reg:DI 0 ax [orig:266 D.6395 ] [266])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:363 513 {*ashldi3_1}
     (nil))
(insn 884 666 667 21 (set (reg:DI 1 dx [orig:266 D.6395 ] [266])
        (reg:DI 0 ax [orig:266 D.6395 ] [266])) sim2fitman_sup.cpp:363 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:266 D.6395 ] [266])
        (nil)))
(insn 667 884 668 21 (set (reg/f:DI 0 ax [495])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:363 87 {*movdi_internal_rex64}
     (nil))
(insn 668 667 669 21 (parallel [
            (set (reg/f:DI 0 ax [orig:267 D.6405 ] [267])
                (plus:DI (reg/f:DI 0 ax [495])
                    (reg:DI 1 dx [orig:266 D.6395 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:363 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [495])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:266 D.6395 ] [266])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                    (reg:DI 1 dx [orig:266 D.6395 ] [266]))
                (nil)))))
(insn 669 668 670 21 (set (mem/j:SI (reg/f:DI 0 ax [orig:267 D.6405 ] [267]) [0 _235->num_datasets+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:363 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:267 D.6405 ] [267])
        (nil)))
(insn 670 669 671 21 (set (reg:SI 0 ax [496])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:364 89 {*movsi_internal}
     (nil))
(insn 671 670 885 21 (set (reg:DI 0 ax [orig:268 D.6395 ] [268])
        (sign_extend:DI (reg:SI 0 ax [496]))) sim2fitman_sup.cpp:364 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [496])
        (nil)))
(insn 885 671 672 21 (set (reg:DI 0 ax [orig:269 D.6395 ] [269])
        (reg:DI 0 ax [orig:268 D.6395 ] [268])) sim2fitman_sup.cpp:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:268 D.6395 ] [268])
        (nil)))
(insn 672 885 886 21 (parallel [
            (set (reg:DI 0 ax [orig:269 D.6395 ] [269])
                (ashift:DI (reg:DI 0 ax [orig:269 D.6395 ] [269])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:364 513 {*ashldi3_1}
     (nil))
(insn 886 672 673 21 (set (reg:DI 1 dx [orig:269 D.6395 ] [269])
        (reg:DI 0 ax [orig:269 D.6395 ] [269])) sim2fitman_sup.cpp:364 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:269 D.6395 ] [269])
        (nil)))
(insn 673 886 674 21 (set (reg/f:DI 0 ax [497])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:364 87 {*movdi_internal_rex64}
     (nil))
(insn 674 673 675 21 (parallel [
            (set (reg/f:DI 0 ax [orig:270 D.6405 ] [270])
                (plus:DI (reg/f:DI 0 ax [497])
                    (reg:DI 1 dx [orig:269 D.6395 ] [269])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:364 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [497])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:269 D.6395 ] [269])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                    (reg:DI 1 dx [orig:269 D.6395 ] [269]))
                (nil)))))
(insn 675 674 676 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:270 D.6405 ] [270])
                (const_int 4 [0x4])) [0 _238->num_unsup_sets+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:364 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:270 D.6405 ] [270])
        (nil)))
(insn 676 675 677 21 (set (reg:SI 0 ax [498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:365 89 {*movsi_internal}
     (nil))
(insn 677 676 887 21 (set (reg:DI 0 ax [orig:271 D.6395 ] [271])
        (sign_extend:DI (reg:SI 0 ax [498]))) sim2fitman_sup.cpp:365 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [498])
        (nil)))
(insn 887 677 678 21 (set (reg:DI 0 ax [orig:272 D.6395 ] [272])
        (reg:DI 0 ax [orig:271 D.6395 ] [271])) sim2fitman_sup.cpp:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:271 D.6395 ] [271])
        (nil)))
(insn 678 887 888 21 (parallel [
            (set (reg:DI 0 ax [orig:272 D.6395 ] [272])
                (ashift:DI (reg:DI 0 ax [orig:272 D.6395 ] [272])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:365 513 {*ashldi3_1}
     (nil))
(insn 888 678 679 21 (set (reg:DI 1 dx [orig:272 D.6395 ] [272])
        (reg:DI 0 ax [orig:272 D.6395 ] [272])) sim2fitman_sup.cpp:365 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:272 D.6395 ] [272])
        (nil)))
(insn 679 888 680 21 (set (reg/f:DI 0 ax [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:365 87 {*movdi_internal_rex64}
     (nil))
(insn 680 679 681 21 (parallel [
            (set (reg/f:DI 0 ax [orig:273 D.6405 ] [273])
                (plus:DI (reg/f:DI 0 ax [499])
                    (reg:DI 1 dx [orig:272 D.6395 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:365 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [499])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:272 D.6395 ] [272])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                    (reg:DI 1 dx [orig:272 D.6395 ] [272]))
                (nil)))))
(insn 681 680 682 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:273 D.6405 ] [273])
                (const_int 8 [0x8])) [0 _241->file_size+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:365 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:273 D.6405 ] [273])
        (nil)))
(insn 682 681 683 21 (set (reg:SI 0 ax [500])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:366 89 {*movsi_internal}
     (nil))
(insn 683 682 889 21 (set (reg:DI 0 ax [orig:274 D.6395 ] [274])
        (sign_extend:DI (reg:SI 0 ax [500]))) sim2fitman_sup.cpp:366 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [500])
        (nil)))
(insn 889 683 684 21 (set (reg:DI 0 ax [orig:275 D.6395 ] [275])
        (reg:DI 0 ax [orig:274 D.6395 ] [274])) sim2fitman_sup.cpp:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:274 D.6395 ] [274])
        (nil)))
(insn 684 889 890 21 (parallel [
            (set (reg:DI 0 ax [orig:275 D.6395 ] [275])
                (ashift:DI (reg:DI 0 ax [orig:275 D.6395 ] [275])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:366 513 {*ashldi3_1}
     (nil))
(insn 890 684 685 21 (set (reg:DI 1 dx [orig:275 D.6395 ] [275])
        (reg:DI 0 ax [orig:275 D.6395 ] [275])) sim2fitman_sup.cpp:366 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:275 D.6395 ] [275])
        (nil)))
(insn 685 890 686 21 (set (reg/f:DI 0 ax [501])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:366 87 {*movdi_internal_rex64}
     (nil))
(insn 686 685 687 21 (parallel [
            (set (reg/f:DI 0 ax [orig:276 D.6405 ] [276])
                (plus:DI (reg/f:DI 0 ax [501])
                    (reg:DI 1 dx [orig:275 D.6395 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:366 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [501])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:275 D.6395 ] [275])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                    (reg:DI 1 dx [orig:275 D.6395 ] [275]))
                (nil)))))
(insn 687 686 688 21 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:276 D.6405 ] [276])
                (const_int 12 [0xc])) [0 _244->total_data_size+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:366 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:276 D.6405 ] [276])
        (nil)))
(insn 688 687 773 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:367 89 {*movsi_internal}
     (nil))
(jump_insn 773 688 774 21 (set (pc)
        (label_ref 701)) sim2fitman_sup.cpp:367 650 {jump}
     (nil)
 -> 701)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 774 773 705)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 278 279 280 502 503 504 505
(code_label 705 774 691 22 65 "" [1 uses])
(note 691 705 692 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 692 691 693 22 (set (reg:SI 0 ax [502])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:368 89 {*movsi_internal}
     (nil))
(insn 693 692 891 22 (set (reg:DI 0 ax [orig:278 D.6395 ] [278])
        (sign_extend:DI (reg:SI 0 ax [502]))) sim2fitman_sup.cpp:368 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [502])
        (nil)))
(insn 891 693 694 22 (set (reg:DI 0 ax [orig:279 D.6395 ] [279])
        (reg:DI 0 ax [orig:278 D.6395 ] [278])) sim2fitman_sup.cpp:368 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:278 D.6395 ] [278])
        (nil)))
(insn 694 891 892 22 (parallel [
            (set (reg:DI 0 ax [orig:279 D.6395 ] [279])
                (ashift:DI (reg:DI 0 ax [orig:279 D.6395 ] [279])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:368 513 {*ashldi3_1}
     (nil))
(insn 892 694 695 22 (set (reg:DI 1 dx [orig:279 D.6395 ] [279])
        (reg:DI 0 ax [orig:279 D.6395 ] [279])) sim2fitman_sup.cpp:368 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:279 D.6395 ] [279])
        (nil)))
(insn 695 892 696 22 (set (reg/f:DI 0 ax [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:368 87 {*movdi_internal_rex64}
     (nil))
(insn 696 695 697 22 (parallel [
            (set (reg/f:DI 1 dx [orig:280 D.6405 ] [280])
                (plus:DI (reg:DI 1 dx [orig:279 D.6395 ] [279])
                    (reg/f:DI 0 ax [503])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:368 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [503])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:279 D.6395 ] [279])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 infile_struct+0 S8 A64])
                    (reg:DI 1 dx [orig:279 D.6395 ] [279]))
                (nil)))))
(insn 697 696 698 22 (set (reg:SI 0 ax [505])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:368 89 {*movsi_internal}
     (nil))
(insn 698 697 699 22 (set (reg:DI 0 ax [504])
        (sign_extend:DI (reg:SI 0 ax [505]))) sim2fitman_sup.cpp:368 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [505])
        (nil)))
(insn 699 698 700 22 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [orig:280 D.6405 ] [280])
                    (reg:DI 0 ax [504]))
                (const_int 16 [0x10])) [0 _249->version S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:368 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [504])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:280 D.6405 ] [280])
            (nil))))
(insn 700 699 701 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:367 273 {*addsi_1}
     (nil))
;;  succ:       23 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU,DFS_BACK)
;;              21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 277 506
(code_label 701 700 702 23 64 "" [1 uses])
(note 702 701 703 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 23 (set (reg:SI 0 ax [506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) sim2fitman_sup.cpp:367 89 {*movsi_internal}
     (nil))
(insn 704 703 706 23 (set (reg:DI 0 ax [orig:277 D.6395 ] [277])
        (sign_extend:DI (reg:SI 0 ax [506]))) sim2fitman_sup.cpp:367 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [506])
        (nil)))
(insn 706 704 707 23 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:277 D.6395 ] [277])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:367 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:277 D.6395 ] [277])
        (nil)))
(jump_insn 707 706 708 23 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 705)
            (pc))) sim2fitman_sup.cpp:367 612 {*jcc_1}
     (nil)
 -> 705)
;;  succ:       22
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 708 707 709 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 709 708 710 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:260 273 {*addsi_1}
     (nil))
;;  succ:       25 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 710 709 711 25 51 "" [1 uses])
(note 711 710 713 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 713 711 714 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:260 7 {*cmpsi_1}
     (nil))
(jump_insn 714 713 715 25 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 712)
            (pc))) sim2fitman_sup.cpp:260 612 {*jcc_1}
     (nil)
 -> 712)
;;  succ:       3
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 281 282 283 284 285 286 287 507 508 509 510 511 512
(note 715 714 716 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 716 715 717 26 (set (reg/f:DI 0 ax [orig:281 D.6406 ] [281])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:373 87 {*movdi_internal_rex64}
     (nil))
(insn 717 716 893 26 (set (reg:DI 4 si [579])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:373 87 {*movdi_internal_rex64}
     (nil))
(insn 893 717 718 26 (set (mem:DI (reg/f:DI 0 ax [orig:281 D.6406 ] [281]) [0 MEM[(void *)_253]+0 S8 A8])
        (reg:DI 4 si [579])) sim2fitman_sup.cpp:373 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [579])
        (nil)))
(insn 718 893 894 26 (set (reg:DI 5 di [580])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:373 87 {*movdi_internal_rex64}
     (nil))
(insn 894 718 719 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:281 D.6406 ] [281])
                (const_int 8 [0x8])) [0 MEM[(void *)_253]+8 S8 A8])
        (reg:DI 5 di [580])) sim2fitman_sup.cpp:373 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [580])
        (nil)))
(insn 719 894 720 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:281 D.6406 ] [281])
                (const_int 16 [0x10])) [0 MEM[(void *)_253]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:373 89 {*movsi_internal}
     (nil))
(insn 720 719 721 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:281 D.6406 ] [281])
                (const_int 20 [0x14])) [0 MEM[(void *)_253]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:373 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:281 D.6406 ] [281])
        (nil)))
(insn 721 720 722 26 (set (reg/f:DI 0 ax [507])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:374 87 {*movdi_internal_rex64}
     (nil))
(insn 722 721 723 26 (parallel [
            (set (reg/f:DI 0 ax [orig:282 D.6406 ] [282])
                (plus:DI (reg/f:DI 0 ax [507])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:374 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [507])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 256 [0x100]))
            (nil))))
(insn 723 722 895 26 (set (reg:DI 3 bx [581])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:374 87 {*movdi_internal_rex64}
     (nil))
(insn 895 723 724 26 (set (mem:DI (reg/f:DI 0 ax [orig:282 D.6406 ] [282]) [0 MEM[(void *)_254]+0 S8 A8])
        (reg:DI 3 bx [581])) sim2fitman_sup.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [581])
        (nil)))
(insn 724 895 896 26 (set (reg:DI 2 cx [582])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:374 87 {*movdi_internal_rex64}
     (nil))
(insn 896 724 725 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:282 D.6406 ] [282])
                (const_int 8 [0x8])) [0 MEM[(void *)_254]+8 S8 A8])
        (reg:DI 2 cx [582])) sim2fitman_sup.cpp:374 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [582])
        (nil)))
(insn 725 896 726 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:282 D.6406 ] [282])
                (const_int 16 [0x10])) [0 MEM[(void *)_254]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:374 89 {*movsi_internal}
     (nil))
(insn 726 725 727 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:282 D.6406 ] [282])
                (const_int 20 [0x14])) [0 MEM[(void *)_254]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:374 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:282 D.6406 ] [282])
        (nil)))
(insn 727 726 728 26 (set (reg/f:DI 0 ax [508])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:375 87 {*movdi_internal_rex64}
     (nil))
(insn 728 727 729 26 (parallel [
            (set (reg/f:DI 0 ax [orig:283 D.6406 ] [283])
                (plus:DI (reg/f:DI 0 ax [508])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:375 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [508])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 512 [0x200]))
            (nil))))
(insn 729 728 897 26 (set (reg:DI 4 si [583])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:375 87 {*movdi_internal_rex64}
     (nil))
(insn 897 729 730 26 (set (mem:DI (reg/f:DI 0 ax [orig:283 D.6406 ] [283]) [0 MEM[(void *)_255]+0 S8 A8])
        (reg:DI 4 si [583])) sim2fitman_sup.cpp:375 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [583])
        (nil)))
(insn 730 897 898 26 (set (reg:DI 5 di [584])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:375 87 {*movdi_internal_rex64}
     (nil))
(insn 898 730 731 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:283 D.6406 ] [283])
                (const_int 8 [0x8])) [0 MEM[(void *)_255]+8 S8 A8])
        (reg:DI 5 di [584])) sim2fitman_sup.cpp:375 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [584])
        (nil)))
(insn 731 898 732 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:283 D.6406 ] [283])
                (const_int 16 [0x10])) [0 MEM[(void *)_255]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:375 89 {*movsi_internal}
     (nil))
(insn 732 731 733 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:283 D.6406 ] [283])
                (const_int 20 [0x14])) [0 MEM[(void *)_255]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:375 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:283 D.6406 ] [283])
        (nil)))
(insn 733 732 734 26 (set (reg/f:DI 0 ax [509])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:376 87 {*movdi_internal_rex64}
     (nil))
(insn 734 733 735 26 (parallel [
            (set (reg/f:DI 0 ax [orig:284 D.6406 ] [284])
                (plus:DI (reg/f:DI 0 ax [509])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:376 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [509])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 768 [0x300]))
            (nil))))
(insn 735 734 899 26 (set (reg:DI 3 bx [585])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:376 87 {*movdi_internal_rex64}
     (nil))
(insn 899 735 736 26 (set (mem:DI (reg/f:DI 0 ax [orig:284 D.6406 ] [284]) [0 MEM[(void *)_256]+0 S8 A8])
        (reg:DI 3 bx [585])) sim2fitman_sup.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [585])
        (nil)))
(insn 736 899 900 26 (set (reg:DI 2 cx [586])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:376 87 {*movdi_internal_rex64}
     (nil))
(insn 900 736 737 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:284 D.6406 ] [284])
                (const_int 8 [0x8])) [0 MEM[(void *)_256]+8 S8 A8])
        (reg:DI 2 cx [586])) sim2fitman_sup.cpp:376 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [586])
        (nil)))
(insn 737 900 738 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:284 D.6406 ] [284])
                (const_int 16 [0x10])) [0 MEM[(void *)_256]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:376 89 {*movsi_internal}
     (nil))
(insn 738 737 739 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:284 D.6406 ] [284])
                (const_int 20 [0x14])) [0 MEM[(void *)_256]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:376 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:284 D.6406 ] [284])
        (nil)))
(insn 739 738 740 26 (set (reg/f:DI 0 ax [510])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:377 87 {*movdi_internal_rex64}
     (nil))
(insn 740 739 741 26 (parallel [
            (set (reg/f:DI 0 ax [orig:285 D.6406 ] [285])
                (plus:DI (reg/f:DI 0 ax [510])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:377 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [510])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 1024 [0x400]))
            (nil))))
(insn 741 740 901 26 (set (reg:DI 4 si [587])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:377 87 {*movdi_internal_rex64}
     (nil))
(insn 901 741 742 26 (set (mem:DI (reg/f:DI 0 ax [orig:285 D.6406 ] [285]) [0 MEM[(void *)_257]+0 S8 A8])
        (reg:DI 4 si [587])) sim2fitman_sup.cpp:377 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [587])
        (nil)))
(insn 742 901 902 26 (set (reg:DI 5 di [588])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:377 87 {*movdi_internal_rex64}
     (nil))
(insn 902 742 743 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:285 D.6406 ] [285])
                (const_int 8 [0x8])) [0 MEM[(void *)_257]+8 S8 A8])
        (reg:DI 5 di [588])) sim2fitman_sup.cpp:377 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [588])
        (nil)))
(insn 743 902 744 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:285 D.6406 ] [285])
                (const_int 16 [0x10])) [0 MEM[(void *)_257]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:377 89 {*movsi_internal}
     (nil))
(insn 744 743 745 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:285 D.6406 ] [285])
                (const_int 20 [0x14])) [0 MEM[(void *)_257]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:377 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:285 D.6406 ] [285])
        (nil)))
(insn 745 744 746 26 (set (reg/f:DI 0 ax [511])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:378 87 {*movdi_internal_rex64}
     (nil))
(insn 746 745 747 26 (parallel [
            (set (reg/f:DI 0 ax [orig:286 D.6406 ] [286])
                (plus:DI (reg/f:DI 0 ax [511])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:378 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [511])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 1280 [0x500]))
            (nil))))
(insn 747 746 903 26 (set (reg:DI 3 bx [589])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:378 87 {*movdi_internal_rex64}
     (nil))
(insn 903 747 748 26 (set (mem:DI (reg/f:DI 0 ax [orig:286 D.6406 ] [286]) [0 MEM[(void *)_258]+0 S8 A8])
        (reg:DI 3 bx [589])) sim2fitman_sup.cpp:378 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx [589])
        (nil)))
(insn 748 903 904 26 (set (reg:DI 2 cx [590])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:378 87 {*movdi_internal_rex64}
     (nil))
(insn 904 748 749 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:286 D.6406 ] [286])
                (const_int 8 [0x8])) [0 MEM[(void *)_258]+8 S8 A8])
        (reg:DI 2 cx [590])) sim2fitman_sup.cpp:378 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [590])
        (nil)))
(insn 749 904 750 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:286 D.6406 ] [286])
                (const_int 16 [0x10])) [0 MEM[(void *)_258]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:378 89 {*movsi_internal}
     (nil))
(insn 750 749 751 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:286 D.6406 ] [286])
                (const_int 20 [0x14])) [0 MEM[(void *)_258]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:378 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:286 D.6406 ] [286])
        (nil)))
(insn 751 750 752 26 (set (reg/f:DI 0 ax [512])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:379 87 {*movdi_internal_rex64}
     (nil))
(insn 752 751 753 26 (parallel [
            (set (reg/f:DI 0 ax [orig:287 D.6406 ] [287])
                (plus:DI (reg/f:DI 0 ax [512])
                    (const_int 1536 [0x600])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:379 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [512])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -56 [0xffffffffffffffc8])) [0 io_filenames+0 S8 A64])
                (const_int 1536 [0x600]))
            (nil))))
(insn 753 752 905 26 (set (reg:DI 4 si [591])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) sim2fitman_sup.cpp:379 87 {*movdi_internal_rex64}
     (nil))
(insn 905 753 754 26 (set (mem:DI (reg/f:DI 0 ax [orig:287 D.6406 ] [287]) [0 MEM[(void *)_259]+0 S8 A8])
        (reg:DI 4 si [591])) sim2fitman_sup.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [591])
        (nil)))
(insn 754 905 906 26 (set (reg:DI 5 di [592])
        (const_int 7593480468811836769 [0x6961764120656d61])) sim2fitman_sup.cpp:379 87 {*movdi_internal_rex64}
     (nil))
(insn 906 754 755 26 (set (mem:DI (plus:DI (reg/f:DI 0 ax [orig:287 D.6406 ] [287])
                (const_int 8 [0x8])) [0 MEM[(void *)_259]+8 S8 A8])
        (reg:DI 5 di [592])) sim2fitman_sup.cpp:379 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [592])
        (nil)))
(insn 755 906 756 26 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:287 D.6406 ] [287])
                (const_int 16 [0x10])) [0 MEM[(void *)_259]+16 S4 A8])
        (const_int 1818386796 [0x6c62616c])) sim2fitman_sup.cpp:379 89 {*movsi_internal}
     (nil))
(insn 756 755 0 26 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:287 D.6406 ] [287])
                (const_int 20 [0x14])) [0 MEM[(void *)_259]+20 S2 A8])
        (const_int 101 [0x65])) sim2fitman_sup.cpp:379 90 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:287 D.6406 ] [287])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void disp_help(int) (_Z9disp_helpi, funcdef_no=11, decl_uid=5380, cgraph_uid=11)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void disp_help(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={38d} r1={38d} r2={38d} r4={38d} r5={75d,38u} r6={1d,7u} r7={1d,42u} r8={37d} r9={37d} r10={37d} r11={37d} r12={37d} r13={37d} r14={37d} r15={37d} r17={38d,1u} r18={37d} r19={37d} r20={1d,1u} r21={38d} r22={38d} r23={38d} r24={38d} r25={38d} r26={38d} r27={38d} r28={38d} r29={37d} r30={37d} r31={37d} r32={37d} r33={37d} r34={37d} r35={37d} r36={37d} r37={38d} r38={38d} r39={37d} r40={37d} r45={37d} r46={37d} r47={37d} r48={37d} r49={37d} r50={37d} r51={37d} r52={37d} 
;;    total ref usage 1773{1684d,89u,0e} in 78{41 regular + 37 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 version+0 S4 A32])
        (reg:SI 5 di [ version ])) sim2fitman_sup.cpp:387 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ version ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 version+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:389 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) sim2fitman_sup.cpp:389 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7e9ed09428 *.LC18>)) sim2fitman_sup.cpp:390 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:390 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7e9ed094c0 *.LC19>)) sim2fitman_sup.cpp:391 87 {*movdi_internal_rex64}
     (nil))
(call_insn 12 11 13 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:391 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7e9ed09558 *.LC20>)) sim2fitman_sup.cpp:393 87 {*movdi_internal_rex64}
     (nil))
(call_insn 14 13 15 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:393 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7e9ed095f0 *.LC21>)) sim2fitman_sup.cpp:394 87 {*movdi_internal_rex64}
     (nil))
(call_insn 16 15 17 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:394 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7e9ed09688 *.LC22>)) sim2fitman_sup.cpp:395 87 {*movdi_internal_rex64}
     (nil))
(call_insn 18 17 19 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:395 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7e9ed09720 *.LC23>)) sim2fitman_sup.cpp:396 87 {*movdi_internal_rex64}
     (nil))
(call_insn 20 19 21 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:396 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7e9ed097b8 *.LC24>)) sim2fitman_sup.cpp:397 87 {*movdi_internal_rex64}
     (nil))
(call_insn 22 21 91 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:397 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(jump_insn 91 22 92 3 (set (pc)
        (label_ref 89)) 650 {jump}
     (nil)
 -> 89)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 92 91 25)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 25 92 26 4 68 "" [1 uses])
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7e9ed09850 *.LC25>)) sim2fitman_sup.cpp:410 87 {*movdi_internal_rex64}
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:410 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7e9ed098e8 *.LC26>)) sim2fitman_sup.cpp:411 87 {*movdi_internal_rex64}
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:411 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7e9ed094c0 *.LC19>)) sim2fitman_sup.cpp:412 87 {*movdi_internal_rex64}
     (nil))
(call_insn 32 31 33 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:412 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7e9ed09980 *.LC27>)) sim2fitman_sup.cpp:416 87 {*movdi_internal_rex64}
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:416 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7e9ed09a18 *.LC28>)) sim2fitman_sup.cpp:418 87 {*movdi_internal_rex64}
     (nil))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:418 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7e9ed09ab0 *.LC29>)) sim2fitman_sup.cpp:419 87 {*movdi_internal_rex64}
     (nil))
(call_insn 38 37 39 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:419 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7e9ed09b48 *.LC30>)) sim2fitman_sup.cpp:420 87 {*movdi_internal_rex64}
     (nil))
(call_insn 40 39 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:420 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f7e9ed09be0 *.LC31>)) sim2fitman_sup.cpp:421 87 {*movdi_internal_rex64}
     (nil))
(call_insn 42 41 43 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:421 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7e9ed09c78 *.LC32>)) sim2fitman_sup.cpp:422 87 {*movdi_internal_rex64}
     (nil))
(call_insn 44 43 45 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:422 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7e9ed09558 *.LC20>)) sim2fitman_sup.cpp:424 87 {*movdi_internal_rex64}
     (nil))
(call_insn 46 45 47 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:424 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7e9ed09d10 *.LC33>)) sim2fitman_sup.cpp:425 87 {*movdi_internal_rex64}
     (nil))
(call_insn 48 47 49 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:425 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7e9ed09da8 *.LC34>)) sim2fitman_sup.cpp:426 87 {*movdi_internal_rex64}
     (nil))
(call_insn 50 49 51 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:426 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f7e9ed09e40 *.LC35>)) sim2fitman_sup.cpp:427 87 {*movdi_internal_rex64}
     (nil))
(call_insn 52 51 53 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:427 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7e9ed09ed8 *.LC36>)) sim2fitman_sup.cpp:428 87 {*movdi_internal_rex64}
     (nil))
(call_insn 54 53 55 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:428 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f7e9ed10000 *.LC37>)) sim2fitman_sup.cpp:429 87 {*movdi_internal_rex64}
     (nil))
(call_insn 56 55 57 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:429 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7e9ed09688 *.LC22>)) sim2fitman_sup.cpp:431 87 {*movdi_internal_rex64}
     (nil))
(call_insn 58 57 59 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:431 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 59 58 60 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f7e9ed10098 *.LC38>)) sim2fitman_sup.cpp:432 87 {*movdi_internal_rex64}
     (nil))
(call_insn 60 59 61 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:432 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f7e9ed10130 *.LC39>)) sim2fitman_sup.cpp:433 87 {*movdi_internal_rex64}
     (nil))
(call_insn 62 61 63 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:433 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f7e9ed101c8 *.LC40>)) sim2fitman_sup.cpp:434 87 {*movdi_internal_rex64}
     (nil))
(call_insn 64 63 65 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:434 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f7e9ed10260 *.LC41>)) sim2fitman_sup.cpp:435 87 {*movdi_internal_rex64}
     (nil))
(call_insn 66 65 67 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:435 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f7e9ed102f8 *.LC42>)) sim2fitman_sup.cpp:436 87 {*movdi_internal_rex64}
     (nil))
(call_insn 68 67 69 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:436 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 69 68 70 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7f7e9ed10390 *.LC43>)) sim2fitman_sup.cpp:437 87 {*movdi_internal_rex64}
     (nil))
(call_insn 70 69 71 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:437 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 71 70 72 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f7e9ed10428 *.LC44>)) sim2fitman_sup.cpp:438 87 {*movdi_internal_rex64}
     (nil))
(call_insn 72 71 73 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:438 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 73 72 74 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f7e9ed104c0 *.LC45>)) sim2fitman_sup.cpp:456 87 {*movdi_internal_rex64}
     (nil))
(call_insn 74 73 75 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:456 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7f7e9ed10558 *.LC46>)) sim2fitman_sup.cpp:457 87 {*movdi_internal_rex64}
     (nil))
(call_insn 76 75 77 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:457 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7f7e9ed105f0 *.LC47>)) sim2fitman_sup.cpp:458 87 {*movdi_internal_rex64}
     (nil))
(call_insn 78 77 79 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:458 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7f7e9ed10688 *.LC48>)) sim2fitman_sup.cpp:460 87 {*movdi_internal_rex64}
     (nil))
(call_insn 80 79 81 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:460 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7f7e9ed10720 *.LC49>)) sim2fitman_sup.cpp:468 87 {*movdi_internal_rex64}
     (nil))
(call_insn 82 81 83 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:468 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 83 82 84 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7f7e9ed107b8 *.LC50>)) sim2fitman_sup.cpp:469 87 {*movdi_internal_rex64}
     (nil))
(call_insn 84 83 85 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:469 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC51") [flags 0x2]  <var_decl 0x7f7e9ed10850 *.LC51>)) sim2fitman_sup.cpp:471 87 {*movdi_internal_rex64}
     (nil))
(call_insn 86 85 89 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:471 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 89 86 90 5 67 "" [1 uses])
(note 90 89 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void check_outfile(IOFiles*, bool, int) (_Z13check_outfileP7IOFilesbi, funcdef_no=12, decl_uid=5391, cgraph_uid=12)

      Creating newreg=406
Removing SCRATCH in insn #7 (nop 2)
rescanning insn with uid = 7.
deleting insn with uid = 7.
      Creating newreg=407
Removing SCRATCH in insn #882 (nop 3)
rescanning insn with uid = 882.
deleting insn with uid = 882.

********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 4:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=8,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r406
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 19:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 21:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 24:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 25:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 28:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 30:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 35:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 42:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 52:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 58:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 62:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 70:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 71:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 89:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 93:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 101:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 102:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 110:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 123:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 126:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 136:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 138:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 140:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 148:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 149:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 166:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 170:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 178:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 179:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 194:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 200:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 204:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 212:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 213:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 229:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 232:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 236:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 242:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 246:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 254:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 255:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 272:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 274:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 276:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 284:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 285:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 300:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 306:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 310:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 315:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 318:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 319:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 327:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 340:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 341:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 343:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 347:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 353:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 355:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 357:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 365:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 366:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 377:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 383:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 385:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 387:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 395:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 396:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 417:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 419:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 421:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 429:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 430:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 446:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 447:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 449:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 453:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 463:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 468:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 471:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 472:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 489:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 491:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 493:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 501:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 502:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 523:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 525:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 527:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 534:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 535:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 536:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 544:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 551:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 552:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 559:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 568:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 569:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 570:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 574:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 575
	 Choosing alt 0 in insn 575:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 576:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 581:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 590:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 592:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 596:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 597
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 598:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 604:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 606:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 610:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 0 in insn 611:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 612:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 619:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 627:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 628:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 630:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 634:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 635
	 Choosing alt 0 in insn 635:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 636:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 641:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 650:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 652:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 656:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 657
	 Choosing alt 0 in insn 657:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 658:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 665:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 669:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 670
	 Choosing alt 0 in insn 670:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 671:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 674:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 675:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 676:  (0) m  (1) rn {*movhi_internal}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 677:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 678:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=9,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 679:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 683:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 684:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 689:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 690:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 696:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 700:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 703:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 706:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 711:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 718:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 719:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 727:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 728:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 736:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 738:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 742:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 743
	 Choosing alt 0 in insn 743:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 744:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 749:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 754:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 758:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 760:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 764:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 765
	 Choosing alt 0 in insn 765:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 766:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 771:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 772:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 774:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 778:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 779
	 Choosing alt 0 in insn 779:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 780:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 787:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 792:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 795:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 796:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 798:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 802:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 803
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 804:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 809:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 812:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 818:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 820:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 824:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 825
	 Choosing alt 0 in insn 825:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 826:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 831:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 832:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 833:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 837:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 838
	 Choosing alt 0 in insn 838:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 839:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 842:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=18,losers=2,rld_nregs=2
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=4,overall=10,losers=1 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=16,losers=1 -- reject
          alt=7,overall=15,losers=1 -- reject
          alt=9,overall=10,losers=1 -- reject
          alt=10,overall=16,losers=2 -- reject
          alt=11,overall=10,losers=1 -- reject
          alt=12,overall=10,losers=1 -- reject
          alt=13,overall=15,losers=1 -- reject
          alt=15,overall=16,losers=1 -- reject
	 Choosing alt 2 in insn 843:  (0) r  (1) i {*movdi_internal_rex64}
      Creating newreg=408, assigning class GENERAL_REGS to r408
  843: r408:DI=0x7461642e736e755f
    Inserting insn reload after:
  968: [r400:DI]=r408:DI

          alt=1,overall=10,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 968:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=15,losers=1 -- reject
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 844:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 845:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 848:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=9,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 849:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 853:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 854:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 855:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 859:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 860:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 862:  (0) q {*cmpqi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 865:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 866:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 867:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) rzw {*call}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 873:  (0) ?mr {*cmpdi_ccno_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 876:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 878:  (1) rzw {*call_value}
          alt=0,overall=7,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 882:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r407
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109

********** Pseudo live ranges #1: **********

  BB 108
   Insn 884: point = 0
  BB 109
  BB 107
   Insn 883: point = 0
   Insn 882: point = 0
  BB 106
   Insn 878: point = 1
   Insn 877: point = 1
   Insn 876: point = 2
  BB 105
   Insn 874: point = 3
   Insn 873: point = 3
  BB 104
   Insn 870: point = 3
   Insn 869: point = 3
   Insn 868: point = 4
   Insn 867: point = 5
   Insn 866: point = 6
   Insn 865: point = 8
  BB 103
   Insn 863: point = 9
   Insn 862: point = 9
   Insn 861: point = 10
   Insn 860: point = 11
   Insn 859: point = 11
   Insn 858: point = 12
   Insn 857: point = 13
   Insn 856: point = 13
   Insn 855: point = 14
   Insn 854: point = 14
   Insn 853: point = 16
  BB 102
   Insn 851: point = 17
   Insn 850: point = 17
   Insn 849: point = 18
   Insn 848: point = 20
  BB 101
   Insn 846: point = 21
   Insn 845: point = 21
   Insn 844: point = 21
   Insn 968: point = 22
   Insn 843: point = 23
   Insn 842: point = 24
  BB 99
   Insn 966: point = 25
   Insn 826: point = 25
   Insn 825: point = 26
   Insn 824: point = 28
   Insn 820: point = 29
   Insn 819: point = 31
   Insn 818: point = 33
   Insn 817: point = 35
  BB 92
   Insn 958: point = 36
   Insn 744: point = 36
   Insn 743: point = 37
   Insn 742: point = 39
   Insn 738: point = 40
   Insn 737: point = 42
   Insn 736: point = 44
   Insn 735: point = 46
  BB 100
   Insn 839: point = 47
   Insn 838: point = 48
   Insn 837: point = 50
   Insn 833: point = 51
   Insn 832: point = 53
   Insn 831: point = 55
  BB 98
   Insn 815: point = 56
   Insn 814: point = 56
   Insn 813: point = 57
   Insn 812: point = 58
   Insn 811: point = 58
   Insn 810: point = 59
   Insn 809: point = 59
  BB 97
   Insn 964: point = 60
   Insn 804: point = 60
   Insn 803: point = 61
   Insn 802: point = 63
   Insn 798: point = 64
   Insn 797: point = 66
   Insn 796: point = 68
   Insn 795: point = 70
  BB 96
   Insn 793: point = 71
   Insn 792: point = 71
   Insn 791: point = 72
   Insn 790: point = 73
   Insn 789: point = 73
   Insn 788: point = 74
   Insn 787: point = 74
  BB 95
   Insn 962: point = 75
   Insn 780: point = 75
   Insn 779: point = 76
   Insn 778: point = 78
   Insn 774: point = 79
   Insn 773: point = 81
   Insn 772: point = 83
   Insn 771: point = 85
  BB 94
   Insn 960: point = 86
   Insn 766: point = 86
   Insn 765: point = 87
   Insn 764: point = 89
   Insn 760: point = 90
   Insn 759: point = 92
   Insn 758: point = 94
   Insn 757: point = 96
  BB 93
   Insn 755: point = 97
   Insn 754: point = 97
   Insn 753: point = 98
   Insn 752: point = 99
   Insn 751: point = 99
   Insn 750: point = 100
   Insn 749: point = 100
  BB 91
   Insn 733: point = 101
   Insn 732: point = 101
   Insn 731: point = 102
   Insn 730: point = 103
   Insn 729: point = 103
   Insn 728: point = 104
   Insn 727: point = 104
  BB 90
   Insn 725: point = 105
   Insn 724: point = 105
   Insn 723: point = 106
   Insn 722: point = 107
   Insn 721: point = 107
   Insn 720: point = 108
   Insn 719: point = 108
   Insn 718: point = 109
  BB 89
   Insn 715: point = 109
   Insn 714: point = 109
  BB 88
   Insn 712: point = 109
   Insn 711: point = 109
  BB 87
   Insn 708: point = 109
   Insn 707: point = 109
   Insn 706: point = 110
  BB 86
   Insn 704: point = 111
   Insn 703: point = 111
  BB 85
   Insn 700: point = 111
   Insn 699: point = 111
   Insn 698: point = 112
   Insn 697: point = 113
   Insn 696: point = 114
   Insn 695: point = 116
  BB 84
   Insn 693: point = 117
   Insn 692: point = 117
   Insn 691: point = 118
   Insn 690: point = 119
   Insn 689: point = 119
   Insn 688: point = 120
   Insn 687: point = 121
   Insn 686: point = 121
   Insn 685: point = 122
   Insn 684: point = 122
   Insn 683: point = 124
  BB 83
   Insn 681: point = 125
   Insn 680: point = 125
   Insn 679: point = 126
   Insn 678: point = 128
   Insn 677: point = 129
   Insn 676: point = 130
   Insn 675: point = 130
   Insn 674: point = 130
  BB 81
   Insn 956: point = 131
   Insn 658: point = 131
   Insn 657: point = 132
   Insn 656: point = 134
   Insn 652: point = 135
   Insn 651: point = 137
   Insn 650: point = 139
   Insn 649: point = 141
  BB 74
   Insn 948: point = 142
   Insn 576: point = 142
   Insn 575: point = 143
   Insn 574: point = 145
   Insn 570: point = 146
   Insn 569: point = 148
   Insn 568: point = 150
   Insn 567: point = 152
  BB 82
   Insn 671: point = 153
   Insn 670: point = 154
   Insn 669: point = 156
   Insn 665: point = 157
   Insn 664: point = 159
   Insn 663: point = 161
  BB 80
   Insn 647: point = 162
   Insn 646: point = 162
   Insn 645: point = 163
   Insn 644: point = 164
   Insn 643: point = 164
   Insn 642: point = 165
   Insn 641: point = 165
  BB 79
   Insn 954: point = 166
   Insn 636: point = 166
   Insn 635: point = 167
   Insn 634: point = 169
   Insn 630: point = 170
   Insn 629: point = 172
   Insn 628: point = 174
   Insn 627: point = 176
  BB 78
   Insn 625: point = 177
   Insn 624: point = 177
   Insn 623: point = 178
   Insn 622: point = 179
   Insn 621: point = 179
   Insn 620: point = 180
   Insn 619: point = 180
  BB 77
   Insn 952: point = 181
   Insn 612: point = 181
   Insn 611: point = 182
   Insn 610: point = 184
   Insn 606: point = 185
   Insn 605: point = 187
   Insn 604: point = 189
   Insn 603: point = 191
  BB 76
   Insn 950: point = 192
   Insn 598: point = 192
   Insn 597: point = 193
   Insn 596: point = 195
   Insn 592: point = 196
   Insn 591: point = 198
   Insn 590: point = 200
   Insn 589: point = 202
  BB 75
   Insn 587: point = 203
   Insn 586: point = 203
   Insn 585: point = 204
   Insn 584: point = 205
   Insn 583: point = 205
   Insn 582: point = 206
   Insn 581: point = 206
  BB 73
   Insn 565: point = 207
   Insn 564: point = 207
   Insn 563: point = 208
   Insn 562: point = 209
   Insn 561: point = 209
   Insn 560: point = 210
   Insn 559: point = 210
  BB 72
   Insn 557: point = 211
   Insn 556: point = 211
   Insn 555: point = 212
   Insn 554: point = 213
   Insn 553: point = 213
   Insn 552: point = 214
   Insn 551: point = 214
  BB 71
   Insn 548: point = 215
   Insn 547: point = 215
  BB 70
   Insn 545: point = 215
   Insn 544: point = 215
  BB 65
   Insn 944: point = 215
  BB 64
   Insn 507: point = 215
   Insn 506: point = 215
  BB 62
   Insn 941: point = 215
   Insn 483: point = 215
  BB 63
   Insn 502: point = 215
   Insn 501: point = 215
   Insn 500: point = 216
   Insn 499: point = 218
   Insn 498: point = 219
   Insn 497: point = 221
   Insn 496: point = 222
   Insn 495: point = 222
   Insn 494: point = 223
   Insn 493: point = 225
   Insn 492: point = 227
   Insn 491: point = 229
   Insn 490: point = 230
   Insn 489: point = 232
   Insn 488: point = 234
   Insn 487: point = 235
  BB 46
   Insn 924: point = 236
  BB 45
   Insn 371: point = 236
   Insn 370: point = 236
  BB 43
   Insn 921: point = 236
   Insn 347: point = 236
  BB 44
   Insn 366: point = 236
   Insn 365: point = 236
   Insn 364: point = 237
   Insn 363: point = 239
   Insn 362: point = 240
   Insn 361: point = 242
   Insn 360: point = 243
   Insn 359: point = 243
   Insn 358: point = 244
   Insn 357: point = 246
   Insn 356: point = 248
   Insn 355: point = 250
   Insn 354: point = 251
   Insn 353: point = 253
   Insn 352: point = 255
   Insn 351: point = 256
  BB 50
   Insn 929: point = 257
  BB 49
   Insn 401: point = 257
   Insn 400: point = 257
  BB 47
   Insn 926: point = 257
   Insn 377: point = 257
  BB 42
   Insn 345: point = 257
   Insn 344: point = 257
   Insn 343: point = 258
   Insn 342: point = 260
   Insn 341: point = 262
   Insn 340: point = 263
   Insn 339: point = 265
  BB 48
   Insn 396: point = 266
   Insn 395: point = 266
   Insn 394: point = 267
   Insn 393: point = 269
   Insn 392: point = 270
   Insn 391: point = 272
   Insn 390: point = 273
   Insn 389: point = 273
   Insn 388: point = 274
   Insn 387: point = 276
   Insn 386: point = 278
   Insn 385: point = 280
   Insn 384: point = 281
   Insn 383: point = 283
   Insn 382: point = 285
   Insn 381: point = 286
  BB 61
   Insn 939: point = 287
  BB 60
   Insn 477: point = 287
   Insn 476: point = 287
  BB 58
   Insn 936: point = 287
   Insn 453: point = 287
  BB 57
   Insn 451: point = 287
   Insn 450: point = 287
   Insn 449: point = 288
   Insn 448: point = 290
   Insn 447: point = 292
   Insn 446: point = 293
   Insn 445: point = 295
  BB 59
   Insn 472: point = 296
   Insn 471: point = 296
   Insn 470: point = 297
   Insn 469: point = 299
   Insn 468: point = 300
   Insn 467: point = 302
   Insn 466: point = 303
   Insn 465: point = 303
   Insn 464: point = 304
   Insn 463: point = 306
   Insn 462: point = 308
   Insn 461: point = 310
   Insn 460: point = 311
   Insn 459: point = 313
   Insn 458: point = 315
   Insn 457: point = 316
  BB 69
   Insn 541: point = 317
   Insn 540: point = 317
  BB 67
   Insn 946: point = 317
   Insn 517: point = 317
  BB 68
   Insn 536: point = 317
   Insn 535: point = 317
   Insn 534: point = 318
   Insn 533: point = 320
   Insn 532: point = 321
   Insn 531: point = 323
   Insn 530: point = 324
   Insn 529: point = 324
   Insn 528: point = 325
   Insn 527: point = 327
   Insn 526: point = 329
   Insn 525: point = 331
   Insn 524: point = 332
   Insn 523: point = 334
   Insn 522: point = 336
   Insn 521: point = 337
  BB 66
   Insn 515: point = 338
   Insn 514: point = 338
   Insn 513: point = 339
  BB 56
   Insn 443: point = 340
   Insn 442: point = 340
   Insn 441: point = 341
  BB 55
   Insn 934: point = 342
  BB 54
   Insn 435: point = 342
   Insn 434: point = 342
  BB 52
   Insn 931: point = 342
   Insn 411: point = 342
  BB 53
   Insn 430: point = 342
   Insn 429: point = 342
   Insn 428: point = 343
   Insn 427: point = 345
   Insn 426: point = 346
   Insn 425: point = 348
   Insn 424: point = 349
   Insn 423: point = 349
   Insn 422: point = 350
   Insn 421: point = 352
   Insn 420: point = 354
   Insn 419: point = 356
   Insn 418: point = 357
   Insn 417: point = 359
   Insn 416: point = 361
   Insn 415: point = 362
  BB 51
   Insn 409: point = 363
   Insn 408: point = 363
   Insn 407: point = 364
  BB 41
   Insn 337: point = 365
   Insn 336: point = 365
   Insn 335: point = 366
  BB 40
   Insn 333: point = 367
   Insn 332: point = 367
   Insn 331: point = 368
   Insn 330: point = 369
   Insn 329: point = 369
   Insn 328: point = 370
   Insn 327: point = 370
  BB 35
   Insn 917: point = 371
  BB 34
   Insn 290: point = 371
   Insn 289: point = 371
  BB 32
   Insn 914: point = 371
   Insn 266: point = 371
  BB 33
   Insn 285: point = 371
   Insn 284: point = 371
   Insn 283: point = 372
   Insn 282: point = 374
   Insn 281: point = 375
   Insn 280: point = 377
   Insn 279: point = 378
   Insn 278: point = 378
   Insn 277: point = 379
   Insn 276: point = 381
   Insn 275: point = 383
   Insn 274: point = 385
   Insn 273: point = 386
   Insn 272: point = 388
   Insn 271: point = 390
   Insn 270: point = 391
  BB 16
   Insn 897: point = 392
  BB 15
   Insn 154: point = 392
   Insn 153: point = 392
  BB 13
   Insn 894: point = 392
   Insn 130: point = 392
  BB 14
   Insn 149: point = 392
   Insn 148: point = 392
   Insn 147: point = 393
   Insn 146: point = 395
   Insn 145: point = 396
   Insn 144: point = 398
   Insn 143: point = 399
   Insn 142: point = 399
   Insn 141: point = 400
   Insn 140: point = 402
   Insn 139: point = 404
   Insn 138: point = 406
   Insn 137: point = 407
   Insn 136: point = 409
   Insn 135: point = 411
   Insn 134: point = 412
  BB 20
   Insn 902: point = 413
  BB 19
   Insn 184: point = 413
   Insn 183: point = 413
  BB 17
   Insn 899: point = 413
   Insn 160: point = 413
  BB 12
   Insn 128: point = 413
   Insn 127: point = 413
   Insn 126: point = 414
   Insn 125: point = 416
   Insn 124: point = 418
   Insn 123: point = 419
   Insn 122: point = 421
  BB 18
   Insn 179: point = 422
   Insn 178: point = 422
   Insn 177: point = 423
   Insn 176: point = 425
   Insn 175: point = 426
   Insn 174: point = 428
   Insn 173: point = 429
   Insn 172: point = 429
   Insn 171: point = 430
   Insn 170: point = 432
   Insn 169: point = 434
   Insn 168: point = 436
   Insn 167: point = 437
   Insn 166: point = 439
   Insn 165: point = 441
   Insn 164: point = 442
  BB 31
   Insn 912: point = 443
  BB 30
   Insn 260: point = 443
   Insn 259: point = 443
  BB 28
   Insn 909: point = 443
   Insn 236: point = 443
  BB 27
   Insn 234: point = 443
   Insn 233: point = 443
   Insn 232: point = 444
   Insn 231: point = 446
   Insn 230: point = 448
   Insn 229: point = 449
   Insn 228: point = 451
  BB 29
   Insn 255: point = 452
   Insn 254: point = 452
   Insn 253: point = 453
   Insn 252: point = 455
   Insn 251: point = 456
   Insn 250: point = 458
   Insn 249: point = 459
   Insn 248: point = 459
   Insn 247: point = 460
   Insn 246: point = 462
   Insn 245: point = 464
   Insn 244: point = 466
   Insn 243: point = 467
   Insn 242: point = 469
   Insn 241: point = 471
   Insn 240: point = 472
  BB 39
   Insn 324: point = 473
   Insn 323: point = 473
  BB 37
   Insn 919: point = 473
   Insn 300: point = 473
  BB 38
   Insn 319: point = 473
   Insn 318: point = 473
   Insn 317: point = 474
   Insn 316: point = 476
   Insn 315: point = 477
   Insn 314: point = 479
   Insn 313: point = 480
   Insn 312: point = 480
   Insn 311: point = 481
   Insn 310: point = 483
   Insn 309: point = 485
   Insn 308: point = 487
   Insn 307: point = 488
   Insn 306: point = 490
   Insn 305: point = 492
   Insn 304: point = 493
  BB 36
   Insn 298: point = 494
   Insn 297: point = 494
   Insn 296: point = 495
  BB 26
   Insn 226: point = 496
   Insn 225: point = 496
   Insn 224: point = 497
  BB 25
   Insn 907: point = 498
  BB 24
   Insn 218: point = 498
   Insn 217: point = 498
  BB 22
   Insn 904: point = 498
   Insn 194: point = 498
  BB 23
   Insn 213: point = 498
   Insn 212: point = 498
   Insn 211: point = 499
   Insn 210: point = 501
   Insn 209: point = 502
   Insn 208: point = 504
   Insn 207: point = 505
   Insn 206: point = 505
   Insn 205: point = 506
   Insn 204: point = 508
   Insn 203: point = 510
   Insn 202: point = 512
   Insn 201: point = 513
   Insn 200: point = 515
   Insn 199: point = 517
   Insn 198: point = 518
  BB 21
   Insn 192: point = 519
   Insn 191: point = 519
   Insn 190: point = 520
  BB 11
   Insn 120: point = 521
   Insn 119: point = 521
   Insn 118: point = 522
  BB 10
   Insn 116: point = 523
   Insn 115: point = 523
   Insn 114: point = 524
   Insn 113: point = 525
   Insn 112: point = 525
   Insn 111: point = 526
   Insn 110: point = 526
  BB 9
   Insn 107: point = 527
   Insn 106: point = 527
  BB 7
   Insn 892: point = 527
   Insn 83: point = 527
  BB 8
   Insn 102: point = 527
   Insn 101: point = 527
   Insn 100: point = 528
   Insn 99: point = 530
   Insn 98: point = 531
   Insn 97: point = 533
   Insn 96: point = 534
   Insn 95: point = 534
   Insn 94: point = 535
   Insn 93: point = 537
   Insn 92: point = 539
   Insn 91: point = 541
   Insn 90: point = 542
   Insn 89: point = 544
   Insn 88: point = 546
   Insn 87: point = 547
  BB 6
   Insn 81: point = 548
   Insn 80: point = 548
   Insn 79: point = 549
  BB 5
   Insn 76: point = 550
   Insn 75: point = 550
  BB 3
   Insn 890: point = 550
   Insn 52: point = 550
  BB 4
   Insn 71: point = 550
   Insn 70: point = 550
   Insn 69: point = 551
   Insn 68: point = 553
   Insn 67: point = 554
   Insn 66: point = 556
   Insn 65: point = 557
   Insn 64: point = 557
   Insn 63: point = 558
   Insn 62: point = 560
   Insn 61: point = 562
   Insn 60: point = 564
   Insn 59: point = 565
   Insn 58: point = 567
   Insn 57: point = 569
   Insn 56: point = 570
  BB 2
   Insn 50: point = 571
   Insn 49: point = 571
   Insn 48: point = 572
   Insn 47: point = 573
   Insn 46: point = 574
   Insn 45: point = 576
   Insn 44: point = 577
   Insn 43: point = 577
   Insn 42: point = 578
   Insn 41: point = 580
   Insn 40: point = 581
   Insn 39: point = 582
   Insn 38: point = 584
   Insn 37: point = 585
   Insn 36: point = 585
   Insn 35: point = 586
   Insn 34: point = 588
   Insn 33: point = 589
   Insn 32: point = 589
   Insn 31: point = 589
   Insn 30: point = 589
   Insn 29: point = 589
   Insn 28: point = 589
   Insn 27: point = 589
   Insn 26: point = 589
   Insn 25: point = 589
   Insn 24: point = 589
   Insn 23: point = 589
   Insn 22: point = 589
   Insn 21: point = 589
   Insn 20: point = 589
   Insn 19: point = 589
   Insn 18: point = 589
   Insn 17: point = 589
   Insn 16: point = 589
   Insn 15: point = 589
   Insn 14: point = 589
   Insn 13: point = 589
   Insn 12: point = 589
   Insn 11: point = 589
   Insn 10: point = 589
   Insn 7: point = 589
   Insn 4: point = 591
   Insn 5: point = 592
   Insn 3: point = 592
   Insn 2: point = 593
 r59: [585..586]
 r60: [583..584]
 r61: [581..582]
 r62: [577..578]
 r63: [575..576]
 r64: [573..574]
 r65: [571..572]
 r66: [566..570]
 r67: [566..567]
 r68: [563..565]
 r69: [559..560]
 r70: [557..558]
 r71: [555..556]
 r72: [550..554]
 r73: [548..549]
 r74: [543..547]
 r75: [543..544]
 r76: [540..542]
 r77: [536..537]
 r78: [534..535]
 r79: [532..533]
 r80: [527..531]
 r81: [523..524]
 r82: [521..522]
 r83: [420..421]
 r84: [417..419]
 r85: [413..414]
 r86: [408..412]
 r87: [408..409]
 r88: [405..407]
 r89: [401..402]
 r90: [399..400]
 r91: [397..398]
 r92: [392..396]
 r93: [438..442]
 r94: [438..439]
 r95: [435..437]
 r96: [431..432]
 r97: [429..430]
 r98: [427..428]
 r99: [422..426]
 r100: [519..520]
 r101: [514..518]
 r102: [514..515]
 r103: [511..513]
 r104: [507..508]
 r105: [505..506]
 r106: [503..504]
 r107: [498..502]
 r108: [496..497]
 r109: [450..451]
 r110: [447..449]
 r111: [443..444]
 r112: [468..472]
 r113: [468..469]
 r114: [465..467]
 r115: [461..462]
 r116: [459..460]
 r117: [457..458]
 r118: [452..456]
 r119: [387..391]
 r120: [387..388]
 r121: [384..386]
 r122: [380..381]
 r123: [378..379]
 r124: [376..377]
 r125: [371..375]
 r126: [494..495]
 r127: [489..493]
 r128: [489..490]
 r129: [486..488]
 r130: [482..483]
 r131: [480..481]
 r132: [478..479]
 r133: [473..477]
 r134: [367..368]
 r135: [365..366]
 r136: [264..265]
 r137: [261..263]
 r138: [257..258]
 r139: [252..256]
 r140: [252..253]
 r141: [249..251]
 r142: [245..246]
 r143: [243..244]
 r144: [241..242]
 r145: [236..240]
 r146: [282..286]
 r147: [282..283]
 r148: [279..281]
 r149: [275..276]
 r150: [273..274]
 r151: [271..272]
 r152: [266..270]
 r153: [363..364]
 r154: [358..362]
 r155: [358..359]
 r156: [355..357]
 r157: [351..352]
 r158: [349..350]
 r159: [347..348]
 r160: [342..346]
 r161: [340..341]
 r162: [294..295]
 r163: [291..293]
 r164: [287..288]
 r165: [312..316]
 r166: [312..313]
 r167: [309..311]
 r168: [305..306]
 r169: [303..304]
 r170: [301..302]
 r171: [296..300]
 r172: [231..235]
 r173: [231..232]
 r174: [228..230]
 r175: [224..225]
 r176: [222..223]
 r177: [220..221]
 r178: [215..219]
 r179: [338..339]
 r180: [333..337]
 r181: [333..334]
 r182: [330..332]
 r183: [326..327]
 r184: [324..325]
 r185: [322..323]
 r186: [317..321]
 r187: [211..212]
 r188: [207..208]
 r189: [151..152]
 r190: [149..150]
 r191: [203..204]
 r192: [201..202]
 r193: [199..200]
 r194: [190..191]
 r195: [188..189]
 r196: [177..178]
 r197: [175..176]
 r198: [173..174]
 r199: [162..163]
 r200: [140..141]
 r201: [138..139]
 r202: [160..161]
 r203: [125..126]
 r204: [121..122]
 r205: [119..120]
 r206: [117..118]
 r207: [111..114]
 r208: [105..106]
 r209: [101..102]
 r210: [45..46]
 r211: [43..44]
 r212: [97..98]
 r213: [95..96]
 r214: [93..94]
 r215: [84..85]
 r216: [82..83]
 r217: [71..72]
 r218: [69..70]
 r219: [67..68]
 r220: [56..57]
 r221: [34..35]
 r222: [32..33]
 r223: [54..55]
 r224: [17..18]
 r225: [13..14]
 r226: [11..12]
 r227: [9..10]
 r228: [3..6]
 r229: [591..592]
 r230: [587..588]
 r231: [579..580]
 r232: [568..569]
 r233: [561..564]
 r234: [561..562]
 r235: [550..551]
 r236: [552..553]
 r237: [545..546]
 r238: [538..541]
 r239: [538..539]
 r240: [527..528]
 r241: [529..530]
 r242: [525..526]
 r243: [415..418]
 r244: [415..416]
 r245: [410..411]
 r246: [403..406]
 r247: [403..404]
 r248: [392..393]
 r249: [394..395]
 r250: [440..441]
 r251: [433..436]
 r252: [433..434]
 r253: [422..423]
 r254: [424..425]
 r255: [516..517]
 r256: [509..512]
 r257: [509..510]
 r258: [498..499]
 r259: [500..501]
 r260: [445..448]
 r261: [445..446]
 r262: [470..471]
 r263: [463..466]
 r264: [463..464]
 r265: [452..453]
 r266: [454..455]
 r267: [389..390]
 r268: [382..385]
 r269: [382..383]
 r270: [371..372]
 r271: [373..374]
 r272: [491..492]
 r273: [484..487]
 r274: [484..485]
 r275: [473..474]
 r276: [475..476]
 r277: [369..370]
 r278: [259..262]
 r279: [259..260]
 r280: [254..255]
 r281: [247..250]
 r282: [247..248]
 r283: [236..237]
 r284: [238..239]
 r285: [284..285]
 r286: [277..280]
 r287: [277..278]
 r288: [266..267]
 r289: [268..269]
 r290: [360..361]
 r291: [353..356]
 r292: [353..354]
 r293: [342..343]
 r294: [344..345]
 r295: [289..292]
 r296: [289..290]
 r297: [314..315]
 r298: [307..310]
 r299: [307..308]
 r300: [296..297]
 r301: [298..299]
 r302: [233..234]
 r303: [226..229]
 r304: [226..227]
 r305: [215..216]
 r306: [217..218]
 r307: [335..336]
 r308: [328..331]
 r309: [328..329]
 r310: [317..318]
 r311: [319..320]
 r312: [213..214]
 r313: [209..210]
 r314: [147..148]
 r315: [144..146]
 r318: [142..143]
 r319: [144..145]
 r320: [205..206]
 r321: [197..198]
 r322: [194..196]
 r325: [192..193]
 r326: [194..195]
 r327: [186..187]
 r328: [183..185]
 r331: [181..182]
 r332: [183..184]
 r333: [179..180]
 r334: [171..172]
 r335: [168..170]
 r338: [166..167]
 r339: [168..169]
 r340: [164..165]
 r341: [136..137]
 r342: [133..135]
 r345: [131..132]
 r346: [133..134]
 r347: [158..159]
 r348: [155..157]
 r351: [153..154]
 r352: [155..156]
 r353: [129..130]
 r354: [127..128]
 r355: [123..124]
 r356: [115..116]
 r357: [112..113]
 r358: [109..110]
 r359: [107..108]
 r360: [103..104]
 r361: [41..42]
 r362: [38..40]
 r365: [36..37]
 r366: [38..39]
 r367: [99..100]
 r368: [91..92]
 r369: [88..90]
 r372: [86..87]
 r373: [88..89]
 r374: [80..81]
 r375: [77..79]
 r378: [75..76]
 r379: [77..78]
 r380: [73..74]
 r381: [65..66]
 r382: [62..64]
 r385: [60..61]
 r386: [62..63]
 r387: [58..59]
 r388: [30..31]
 r389: [27..29]
 r392: [25..26]
 r393: [27..28]
 r394: [52..53]
 r395: [49..51]
 r398: [47..48]
 r399: [49..50]
 r400: [21..24]
 r401: [19..20]
 r402: [15..16]
 r403: [7..8]
 r404: [4..5]
 r405: [1..2]
 r406: [589..590]
 r407: [0..0]
 r408: [22..23]
Compressing live ranges: from 593 to 529 - 89%
Ranges after the compression:
 r59: [521..522]
 r60: [519..520]
 r61: [517..518]
 r62: [513..514]
 r63: [511..512]
 r64: [509..510]
 r65: [507..508]
 r66: [503..506]
 r67: [503..504]
 r68: [501..502]
 r69: [497..498]
 r70: [495..496]
 r71: [493..494]
 r72: [489..492]
 r73: [487..488]
 r74: [483..486]
 r75: [483..484]
 r76: [481..482]
 r77: [477..478]
 r78: [475..476]
 r79: [473..474]
 r80: [469..472]
 r81: [465..466]
 r82: [463..464]
 r83: [375..376]
 r84: [373..374]
 r85: [369..370]
 r86: [365..368]
 r87: [365..366]
 r88: [363..364]
 r89: [359..360]
 r90: [357..358]
 r91: [355..356]
 r92: [351..354]
 r93: [391..394]
 r94: [391..392]
 r95: [389..390]
 r96: [385..386]
 r97: [383..384]
 r98: [381..382]
 r99: [377..380]
 r100: [461..462]
 r101: [457..460]
 r102: [457..458]
 r103: [455..456]
 r104: [451..452]
 r105: [449..450]
 r106: [447..448]
 r107: [443..446]
 r108: [441..442]
 r109: [401..402]
 r110: [399..400]
 r111: [395..396]
 r112: [417..420]
 r113: [417..418]
 r114: [415..416]
 r115: [411..412]
 r116: [409..410]
 r117: [407..408]
 r118: [403..406]
 r119: [347..350]
 r120: [347..348]
 r121: [345..346]
 r122: [341..342]
 r123: [339..340]
 r124: [337..338]
 r125: [333..336]
 r126: [439..440]
 r127: [435..438]
 r128: [435..436]
 r129: [433..434]
 r130: [429..430]
 r131: [427..428]
 r132: [425..426]
 r133: [421..424]
 r134: [329..330]
 r135: [327..328]
 r136: [239..240]
 r137: [237..238]
 r138: [233..234]
 r139: [229..232]
 r140: [229..230]
 r141: [227..228]
 r142: [223..224]
 r143: [221..222]
 r144: [219..220]
 r145: [215..218]
 r146: [255..258]
 r147: [255..256]
 r148: [253..254]
 r149: [249..250]
 r150: [247..248]
 r151: [245..246]
 r152: [241..244]
 r153: [325..326]
 r154: [321..324]
 r155: [321..322]
 r156: [319..320]
 r157: [315..316]
 r158: [313..314]
 r159: [311..312]
 r160: [307..310]
 r161: [305..306]
 r162: [265..266]
 r163: [263..264]
 r164: [259..260]
 r165: [281..284]
 r166: [281..282]
 r167: [279..280]
 r168: [275..276]
 r169: [273..274]
 r170: [271..272]
 r171: [267..270]
 r172: [211..214]
 r173: [211..212]
 r174: [209..210]
 r175: [205..206]
 r176: [203..204]
 r177: [201..202]
 r178: [197..200]
 r179: [303..304]
 r180: [299..302]
 r181: [299..300]
 r182: [297..298]
 r183: [293..294]
 r184: [291..292]
 r185: [289..290]
 r186: [285..288]
 r187: [193..194]
 r188: [189..190]
 r189: [137..138]
 r190: [135..136]
 r191: [185..186]
 r192: [183..184]
 r193: [181..182]
 r194: [173..174]
 r195: [171..172]
 r196: [161..162]
 r197: [159..160]
 r198: [157..158]
 r199: [147..148]
 r200: [127..128]
 r201: [125..126]
 r202: [145..146]
 r203: [113..114]
 r204: [109..110]
 r205: [107..108]
 r206: [105..106]
 r207: [101..102]
 r208: [95..96]
 r209: [91..92]
 r210: [39..40]
 r211: [37..38]
 r212: [87..88]
 r213: [85..86]
 r214: [83..84]
 r215: [75..76]
 r216: [73..74]
 r217: [63..64]
 r218: [61..62]
 r219: [59..60]
 r220: [49..50]
 r221: [29..30]
 r222: [27..28]
 r223: [47..48]
 r224: [15..16]
 r225: [11..12]
 r226: [9..10]
 r227: [7..8]
 r228: [3..4]
 r229: [527..528]
 r230: [523..524]
 r231: [515..516]
 r232: [505..506]
 r233: [499..502]
 r234: [499..500]
 r235: [489..490]
 r236: [491..492]
 r237: [485..486]
 r238: [479..482]
 r239: [479..480]
 r240: [469..470]
 r241: [471..472]
 r242: [467..468]
 r243: [371..374]
 r244: [371..372]
 r245: [367..368]
 r246: [361..364]
 r247: [361..362]
 r248: [351..352]
 r249: [353..354]
 r250: [393..394]
 r251: [387..390]
 r252: [387..388]
 r253: [377..378]
 r254: [379..380]
 r255: [459..460]
 r256: [453..456]
 r257: [453..454]
 r258: [443..444]
 r259: [445..446]
 r260: [397..400]
 r261: [397..398]
 r262: [419..420]
 r263: [413..416]
 r264: [413..414]
 r265: [403..404]
 r266: [405..406]
 r267: [349..350]
 r268: [343..346]
 r269: [343..344]
 r270: [333..334]
 r271: [335..336]
 r272: [437..438]
 r273: [431..434]
 r274: [431..432]
 r275: [421..422]
 r276: [423..424]
 r277: [331..332]
 r278: [235..238]
 r279: [235..236]
 r280: [231..232]
 r281: [225..228]
 r282: [225..226]
 r283: [215..216]
 r284: [217..218]
 r285: [257..258]
 r286: [251..254]
 r287: [251..252]
 r288: [241..242]
 r289: [243..244]
 r290: [323..324]
 r291: [317..320]
 r292: [317..318]
 r293: [307..308]
 r294: [309..310]
 r295: [261..264]
 r296: [261..262]
 r297: [283..284]
 r298: [277..280]
 r299: [277..278]
 r300: [267..268]
 r301: [269..270]
 r302: [213..214]
 r303: [207..210]
 r304: [207..208]
 r305: [197..198]
 r306: [199..200]
 r307: [301..302]
 r308: [295..298]
 r309: [295..296]
 r310: [285..286]
 r311: [287..288]
 r312: [195..196]
 r313: [191..192]
 r314: [133..134]
 r315: [131..132]
 r318: [129..130]
 r319: [131..132]
 r320: [187..188]
 r321: [179..180]
 r322: [177..178]
 r325: [175..176]
 r326: [177..178]
 r327: [169..170]
 r328: [167..168]
 r331: [165..166]
 r332: [167..168]
 r333: [163..164]
 r334: [155..156]
 r335: [153..154]
 r338: [151..152]
 r339: [153..154]
 r340: [149..150]
 r341: [123..124]
 r342: [121..122]
 r345: [119..120]
 r346: [121..122]
 r347: [143..144]
 r348: [141..142]
 r351: [139..140]
 r352: [141..142]
 r353: [117..118]
 r354: [115..116]
 r355: [111..112]
 r356: [103..104]
 r357: [101..102]
 r358: [99..100]
 r359: [97..98]
 r360: [93..94]
 r361: [35..36]
 r362: [33..34]
 r365: [31..32]
 r366: [33..34]
 r367: [89..90]
 r368: [81..82]
 r369: [79..80]
 r372: [77..78]
 r373: [79..80]
 r374: [71..72]
 r375: [69..70]
 r378: [67..68]
 r379: [69..70]
 r380: [65..66]
 r381: [57..58]
 r382: [55..56]
 r385: [53..54]
 r386: [55..56]
 r387: [51..52]
 r388: [25..26]
 r389: [23..24]
 r392: [21..22]
 r393: [23..24]
 r394: [45..46]
 r395: [43..44]
 r398: [41..42]
 r399: [43..44]
 r400: [19..20]
 r401: [17..18]
 r402: [13..14]
 r403: [5..6]
 r404: [3..4]
 r405: [1..2]
 r406: [525..526]
 r407: [0..0]
 r408: [19..20]
	 Assigning to 408 (cl=GENERAL_REGS, orig=408, freq=2, tfirst=408, tfreq=2)...
	   Assign 2 to reload r408 (freq=2)
	 Assigning to 406 (cl=INDEX_REGS, orig=406, freq=1, tfirst=406, tfreq=1)...
	   Assign 0 to reload r406 (freq=1)
	 Assigning to 407 (cl=INDEX_REGS, orig=407, freq=1, tfirst=407, tfreq=1)...
	   Assign 0 to reload r407 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=144, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=128, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 56
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 67
changing reg in insn 70
changing reg in insn 79
changing reg in insn 80
changing reg in insn 87
changing reg in insn 90
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 95
changing reg in insn 97
changing reg in insn 98
changing reg in insn 101
changing reg in insn 114
changing reg in insn 115
changing reg in insn 118
changing reg in insn 119
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 134
changing reg in insn 137
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 142
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 164
changing reg in insn 167
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 172
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 190
changing reg in insn 191
changing reg in insn 198
changing reg in insn 201
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 212
changing reg in insn 224
changing reg in insn 225
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 231
changing reg in insn 232
changing reg in insn 233
changing reg in insn 240
changing reg in insn 243
changing reg in insn 242
changing reg in insn 243
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 247
changing reg in insn 248
changing reg in insn 250
changing reg in insn 251
changing reg in insn 254
changing reg in insn 270
changing reg in insn 273
changing reg in insn 272
changing reg in insn 273
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 278
changing reg in insn 280
changing reg in insn 281
changing reg in insn 284
changing reg in insn 296
changing reg in insn 297
changing reg in insn 304
changing reg in insn 307
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 309
changing reg in insn 310
changing reg in insn 311
changing reg in insn 311
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 318
changing reg in insn 331
changing reg in insn 332
changing reg in insn 335
changing reg in insn 336
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 342
changing reg in insn 343
changing reg in insn 344
changing reg in insn 351
changing reg in insn 354
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 356
changing reg in insn 357
changing reg in insn 358
changing reg in insn 358
changing reg in insn 359
changing reg in insn 361
changing reg in insn 362
changing reg in insn 365
changing reg in insn 381
changing reg in insn 384
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 386
changing reg in insn 387
changing reg in insn 388
changing reg in insn 388
changing reg in insn 389
changing reg in insn 391
changing reg in insn 392
changing reg in insn 395
changing reg in insn 407
changing reg in insn 408
changing reg in insn 415
changing reg in insn 418
changing reg in insn 417
changing reg in insn 418
changing reg in insn 418
changing reg in insn 420
changing reg in insn 421
changing reg in insn 422
changing reg in insn 422
changing reg in insn 423
changing reg in insn 425
changing reg in insn 426
changing reg in insn 429
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 448
changing reg in insn 449
changing reg in insn 450
changing reg in insn 457
changing reg in insn 460
changing reg in insn 459
changing reg in insn 460
changing reg in insn 460
changing reg in insn 462
changing reg in insn 463
changing reg in insn 464
changing reg in insn 464
changing reg in insn 465
changing reg in insn 467
changing reg in insn 468
changing reg in insn 471
changing reg in insn 487
changing reg in insn 490
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 495
changing reg in insn 497
changing reg in insn 498
changing reg in insn 501
changing reg in insn 513
changing reg in insn 514
changing reg in insn 521
changing reg in insn 524
changing reg in insn 523
changing reg in insn 524
changing reg in insn 524
changing reg in insn 526
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 529
changing reg in insn 531
changing reg in insn 532
changing reg in insn 535
changing reg in insn 555
changing reg in insn 556
changing reg in insn 563
changing reg in insn 564
changing reg in insn 567
changing reg in insn 568
changing reg in insn 568
changing reg in insn 569
changing reg in insn 585
changing reg in insn 586
changing reg in insn 589
changing reg in insn 590
changing reg in insn 590
changing reg in insn 591
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 605
changing reg in insn 623
changing reg in insn 624
changing reg in insn 627
changing reg in insn 628
changing reg in insn 628
changing reg in insn 629
changing reg in insn 645
changing reg in insn 646
changing reg in insn 649
changing reg in insn 650
changing reg in insn 650
changing reg in insn 651
changing reg in insn 663
changing reg in insn 664
changing reg in insn 679
changing reg in insn 680
changing reg in insn 684
changing reg in insn 686
changing reg in insn 688
changing reg in insn 689
changing reg in insn 691
changing reg in insn 692
changing reg in insn 696
changing reg in insn 699
changing reg in insn 723
changing reg in insn 724
changing reg in insn 731
changing reg in insn 732
changing reg in insn 735
changing reg in insn 736
changing reg in insn 736
changing reg in insn 737
changing reg in insn 753
changing reg in insn 754
changing reg in insn 757
changing reg in insn 758
changing reg in insn 758
changing reg in insn 759
changing reg in insn 771
changing reg in insn 772
changing reg in insn 772
changing reg in insn 773
changing reg in insn 791
changing reg in insn 792
changing reg in insn 795
changing reg in insn 796
changing reg in insn 796
changing reg in insn 797
changing reg in insn 813
changing reg in insn 814
changing reg in insn 817
changing reg in insn 818
changing reg in insn 818
changing reg in insn 819
changing reg in insn 831
changing reg in insn 832
changing reg in insn 849
changing reg in insn 850
changing reg in insn 854
changing reg in insn 856
changing reg in insn 858
changing reg in insn 859
changing reg in insn 861
changing reg in insn 862
changing reg in insn 866
changing reg in insn 869
changing reg in insn 3
changing reg in insn 34
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 57
changing reg in insn 58
changing reg in insn 60
changing reg in insn 62
changing reg in insn 61
changing reg in insn 62
changing reg in insn 69
changing reg in insn 70
changing reg in insn 68
changing reg in insn 69
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 100
changing reg in insn 101
changing reg in insn 99
changing reg in insn 100
changing reg in insn 110
changing reg in insn 112
changing reg in insn 124
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 135
changing reg in insn 136
changing reg in insn 138
changing reg in insn 140
changing reg in insn 139
changing reg in insn 140
changing reg in insn 147
changing reg in insn 148
changing reg in insn 146
changing reg in insn 147
changing reg in insn 165
changing reg in insn 166
changing reg in insn 168
changing reg in insn 170
changing reg in insn 169
changing reg in insn 170
changing reg in insn 177
changing reg in insn 178
changing reg in insn 176
changing reg in insn 177
changing reg in insn 199
changing reg in insn 200
changing reg in insn 202
changing reg in insn 204
changing reg in insn 203
changing reg in insn 204
changing reg in insn 211
changing reg in insn 212
changing reg in insn 210
changing reg in insn 211
changing reg in insn 230
changing reg in insn 232
changing reg in insn 231
changing reg in insn 232
changing reg in insn 241
changing reg in insn 242
changing reg in insn 244
changing reg in insn 246
changing reg in insn 245
changing reg in insn 246
changing reg in insn 253
changing reg in insn 254
changing reg in insn 252
changing reg in insn 253
changing reg in insn 271
changing reg in insn 272
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 276
changing reg in insn 283
changing reg in insn 284
changing reg in insn 282
changing reg in insn 283
changing reg in insn 305
changing reg in insn 306
changing reg in insn 308
changing reg in insn 310
changing reg in insn 309
changing reg in insn 310
changing reg in insn 317
changing reg in insn 318
changing reg in insn 316
changing reg in insn 317
changing reg in insn 327
changing reg in insn 329
changing reg in insn 341
changing reg in insn 343
changing reg in insn 342
changing reg in insn 343
changing reg in insn 352
changing reg in insn 353
changing reg in insn 355
changing reg in insn 357
changing reg in insn 356
changing reg in insn 357
changing reg in insn 364
changing reg in insn 365
changing reg in insn 363
changing reg in insn 364
changing reg in insn 382
changing reg in insn 383
changing reg in insn 385
changing reg in insn 387
changing reg in insn 386
changing reg in insn 387
changing reg in insn 394
changing reg in insn 395
changing reg in insn 393
changing reg in insn 394
changing reg in insn 416
changing reg in insn 417
changing reg in insn 419
changing reg in insn 421
changing reg in insn 420
changing reg in insn 421
changing reg in insn 428
changing reg in insn 429
changing reg in insn 427
changing reg in insn 428
changing reg in insn 447
changing reg in insn 449
changing reg in insn 448
changing reg in insn 449
changing reg in insn 458
changing reg in insn 459
changing reg in insn 461
changing reg in insn 463
changing reg in insn 462
changing reg in insn 463
changing reg in insn 470
changing reg in insn 471
changing reg in insn 469
changing reg in insn 470
changing reg in insn 488
changing reg in insn 489
changing reg in insn 491
changing reg in insn 493
changing reg in insn 492
changing reg in insn 493
changing reg in insn 500
changing reg in insn 501
changing reg in insn 499
changing reg in insn 500
changing reg in insn 522
changing reg in insn 523
changing reg in insn 525
changing reg in insn 527
changing reg in insn 526
changing reg in insn 527
changing reg in insn 534
changing reg in insn 535
changing reg in insn 533
changing reg in insn 534
changing reg in insn 551
changing reg in insn 553
changing reg in insn 559
changing reg in insn 561
changing reg in insn 569
changing reg in insn 570
changing reg in insn 570
changing reg in insn 575
changing reg in insn 575
changing reg in insn 576
changing reg in insn 574
changing reg in insn 581
changing reg in insn 583
changing reg in insn 591
changing reg in insn 592
changing reg in insn 592
changing reg in insn 597
changing reg in insn 597
changing reg in insn 598
changing reg in insn 596
changing reg in insn 605
changing reg in insn 606
changing reg in insn 606
changing reg in insn 611
changing reg in insn 611
changing reg in insn 612
changing reg in insn 610
changing reg in insn 619
changing reg in insn 621
changing reg in insn 629
changing reg in insn 630
changing reg in insn 630
changing reg in insn 635
changing reg in insn 635
changing reg in insn 636
changing reg in insn 634
changing reg in insn 641
changing reg in insn 643
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 657
changing reg in insn 657
changing reg in insn 658
changing reg in insn 656
changing reg in insn 664
changing reg in insn 665
changing reg in insn 665
changing reg in insn 670
changing reg in insn 670
changing reg in insn 671
changing reg in insn 669
changing reg in insn 674
changing reg in insn 677
changing reg in insn 676
changing reg in insn 675
changing reg in insn 678
changing reg in insn 679
changing reg in insn 683
changing reg in insn 684
changing reg in insn 695
changing reg in insn 696
changing reg in insn 697
changing reg in insn 698
changing reg in insn 706
changing reg in insn 707
changing reg in insn 719
changing reg in insn 721
changing reg in insn 727
changing reg in insn 729
changing reg in insn 737
changing reg in insn 738
changing reg in insn 738
changing reg in insn 743
changing reg in insn 743
changing reg in insn 744
changing reg in insn 742
changing reg in insn 749
changing reg in insn 751
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 765
changing reg in insn 765
changing reg in insn 766
changing reg in insn 764
changing reg in insn 773
changing reg in insn 774
changing reg in insn 774
changing reg in insn 779
changing reg in insn 779
changing reg in insn 780
changing reg in insn 778
changing reg in insn 787
changing reg in insn 789
changing reg in insn 797
changing reg in insn 798
changing reg in insn 798
changing reg in insn 803
changing reg in insn 803
changing reg in insn 804
changing reg in insn 802
changing reg in insn 809
changing reg in insn 811
changing reg in insn 819
changing reg in insn 820
changing reg in insn 820
changing reg in insn 825
changing reg in insn 825
changing reg in insn 826
changing reg in insn 824
changing reg in insn 832
changing reg in insn 833
changing reg in insn 833
changing reg in insn 838
changing reg in insn 838
changing reg in insn 839
changing reg in insn 837
changing reg in insn 842
changing reg in insn 844
changing reg in insn 843
changing reg in insn 848
changing reg in insn 849
changing reg in insn 853
changing reg in insn 854
changing reg in insn 865
changing reg in insn 866
changing reg in insn 867
changing reg in insn 868
changing reg in insn 876
changing reg in insn 877
changing reg in insn 7
changing reg in insn 882
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 173.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 279.
verify found no changes in insn with uid = 313.
verify found no changes in insn with uid = 330.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 390.
verify found no changes in insn with uid = 424.
verify found no changes in insn with uid = 466.
verify found no changes in insn with uid = 496.
verify found no changes in insn with uid = 530.
verify found no changes in insn with uid = 554.
verify found no changes in insn with uid = 562.
verify found no changes in insn with uid = 584.
verify found no changes in insn with uid = 622.
verify found no changes in insn with uid = 644.
verify found no changes in insn with uid = 687.
verify found no changes in insn with uid = 700.
verify found no changes in insn with uid = 708.
verify found no changes in insn with uid = 722.
verify found no changes in insn with uid = 730.
verify found no changes in insn with uid = 752.
verify found no changes in insn with uid = 790.
verify found no changes in insn with uid = 812.
verify found no changes in insn with uid = 857.
verify found no changes in insn with uid = 870.
verify found no changes in insn with uid = 878.
verify found no changes in insn with uid = 884.


void check_outfile(IOFiles*, bool, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={287d,282u} r1={110d,75u,12e} r2={37d,1u} r4={52d,17u} r5={70d,35u} r6={1d,358u} r7={1d,144u} r8={35d} r9={35d} r10={35d} r11={35d} r12={35d} r13={35d} r14={35d} r15={35d} r17={190d,54u} r18={35d} r19={35d} r20={1d,1u,34e} r21={36d} r22={36d} r23={36d} r24={36d} r25={36d} r26={36d} r27={36d} r28={36d} r29={35d} r30={35d} r31={35d} r32={35d} r33={35d} r34={35d} r35={35d} r36={35d} r37={36d} r38={36d} r39={35d} r40={35d} r45={35d} r46={35d} r47={35d} r48={35d} r49={35d} r50={35d} r51={35d} r52={35d} 
;;    total ref usage 3102{2089d,967u,46e} in 641{606 regular + 35 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 65 229 230 231
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
        (reg:DI 5 di [ io_filenames ])) sim2fitman_sup.cpp:482 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ io_filenames ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 0 ax [229])
        (reg:SI 4 si [ overwrite ])) sim2fitman_sup.cpp:482 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ overwrite ])
        (nil)))
(insn 5 3 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
        (reg:SI 1 dx [ s_u_out ])) sim2fitman_sup.cpp:482 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ s_u_out ])
        (nil)))
(insn 4 5 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A8])
        (reg:QI 0 ax [229])) sim2fitman_sup.cpp:482 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [229])
        (nil)))
(note 6 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.6447+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [406])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:482 968 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [406])
        (nil)))
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [0 found_extension+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:483 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 sup_ext+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 91 {*movqi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -63 [0xffffffffffffffc1])) [0 sup_ext+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 91 {*movqi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -62 [0xffffffffffffffc2])) [0 sup_ext+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 91 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -61 [0xffffffffffffffc3])) [0 sup_ext+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 91 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [0 sup_ext+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:486 91 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 91 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -47 [0xffffffffffffffd1])) [0 sup_suf+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 91 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -46 [0xffffffffffffffd2])) [0 sup_suf+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 91 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -45 [0xffffffffffffffd3])) [0 sup_suf+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 91 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [0 sup_suf+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:487 91 {*movqi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 uns_ext+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 91 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -31 [0xffffffffffffffe1])) [0 uns_ext+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 91 {*movqi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -30 [0xffffffffffffffe2])) [0 uns_ext+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 91 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -29 [0xffffffffffffffe3])) [0 uns_ext+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 91 {*movqi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 uns_ext+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:488 91 {*movqi_internal}
     (nil))
(insn 26 25 27 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf+0 S1 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 91 {*movqi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -15 [0xfffffffffffffff1])) [0 uns_suf+1 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 91 {*movqi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -14 [0xfffffffffffffff2])) [0 uns_suf+2 S1 A16])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 91 {*movqi_internal}
     (nil))
(insn 29 28 30 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -13 [0xfffffffffffffff3])) [0 uns_suf+3 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 91 {*movqi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 uns_suf+4 S1 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:489 91 {*movqi_internal}
     (nil))
(insn 31 30 32 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:491 89 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:491 89 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:494 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 0 ax [230])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:496 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:DI 0 ax [orig:59 D.6441 ] [59])
                (plus:DI (reg/f:DI 0 ax [230])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:496 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [230])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 512 [0x200]))
            (nil))))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.6441 ] [59])) sim2fitman_sup.cpp:496 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6441 ] [59])
        (nil)))
(call_insn/i 37 36 38 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f7e9f1b7000 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:496 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 2 (set (reg:DI 0 ax [orig:60 D.6442 ] [60])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:496 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 39 38 40 2 (set (reg:SI 0 ax [orig:61 D.6443 ] [61])
        (reg:SI 0 ax [orig:60 D.6442 ] [60])) sim2fitman_sup.cpp:496 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.6442 ] [60])
        (nil)))
(insn 40 39 41 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])
        (reg:SI 0 ax [orig:61 D.6443 ] [61])) sim2fitman_sup.cpp:496 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:61 D.6443 ] [61])
        (nil)))
(insn 41 40 42 2 (set (reg/f:DI 0 ax [231])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:497 87 {*movdi_internal_rex64}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 0 ax [orig:62 D.6441 ] [62])
                (plus:DI (reg/f:DI 0 ax [231])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:497 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [231])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 768 [0x300]))
            (nil))))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:62 D.6441 ] [62])) sim2fitman_sup.cpp:497 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6441 ] [62])
        (nil)))
(call_insn/i 44 43 45 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f7e9f1b7000 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:497 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 2 (set (reg:DI 0 ax [orig:63 D.6442 ] [63])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:497 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 46 45 47 2 (set (reg:SI 0 ax [orig:64 D.6443 ] [64])
        (reg:SI 0 ax [orig:63 D.6442 ] [63])) sim2fitman_sup.cpp:497 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6442 ] [63])
        (nil)))
(insn 47 46 48 2 (set (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])
        (reg:SI 0 ax [orig:64 D.6443 ] [64])) sim2fitman_sup.cpp:497 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6443 ] [64])
        (nil)))
(insn 48 47 49 2 (set (reg:SI 0 ax [orig:65 D.6443 ] [65])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:499 89 {*movsi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:65 D.6443 ] [65])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:499 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:65 D.6443 ] [65])
        (nil)))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) sim2fitman_sup.cpp:499 612 {*jcc_1}
     (nil)
 -> 77)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 890 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:500 89 {*movsi_internal}
     (nil))
(jump_insn 890 52 891 3 (set (pc)
        (label_ref 72)) sim2fitman_sup.cpp:500 650 {jump}
     (nil)
 -> 72)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 891 890 74)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67 68 69 70 71 72 232 233 234 235 236
(code_label 74 891 55 4 73 "" [1 uses])
(note 55 74 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 4 (set (reg:SI 0 ax [orig:66 D.6443 ] [66])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:501 89 {*movsi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:SI 1 dx [232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:501 89 {*movsi_internal}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg:SI 1 dx [orig:67 D.6443 ] [67])
                (plus:SI (reg:SI 1 dx [232])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:501 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [232])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 59 58 60 4 (parallel [
            (set (reg:SI 0 ax [orig:68 D.6443 ] [68])
                (plus:SI (reg:SI 0 ax [orig:66 D.6443 ] [66])
                    (reg:SI 1 dx [orig:67 D.6443 ] [67])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:501 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:67 D.6443 ] [67])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:66 D.6443 ] [66])
            (nil))))
(insn 60 59 61 4 (set (reg/f:DI 1 dx [233])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:501 87 {*movdi_internal_rex64}
     (nil))
(insn 61 60 62 4 (set (reg:DI 0 ax [234])
        (sign_extend:DI (reg:SI 0 ax [orig:68 D.6443 ] [68]))) sim2fitman_sup.cpp:501 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:68 D.6443 ] [68])
        (nil)))
(insn 62 61 63 4 (set (reg:QI 0 ax [orig:69 D.6444 ] [69])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [233])
                    (reg:DI 0 ax [234]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:501 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [234])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [233])
            (nil))))
(insn 63 62 64 4 (set (reg:SI 0 ax [orig:70 D.6443 ] [70])
        (sign_extend:SI (reg:QI 0 ax [orig:69 D.6444 ] [69]))) sim2fitman_sup.cpp:501 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:69 D.6444 ] [69])
        (nil)))
(insn 64 63 65 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:70 D.6443 ] [70])) sim2fitman_sup.cpp:501 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:70 D.6443 ] [70])
        (nil)))
(call_insn/i 65 64 66 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:501 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 66 65 67 4 (set (reg:SI 0 ax [orig:71 D.6443 ] [71])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:501 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 67 66 68 4 (set (reg:QI 1 dx [orig:72 D.6444 ] [72])
        (reg:QI 0 ax [orig:71 D.6443 ] [71])) sim2fitman_sup.cpp:501 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:71 D.6443 ] [71])
        (nil)))
(insn 68 67 69 4 (set (reg:SI 0 ax [236])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:501 89 {*movsi_internal}
     (nil))
(insn 69 68 70 4 (set (reg:DI 0 ax [235])
        (sign_extend:DI (reg:SI 0 ax [236]))) sim2fitman_sup.cpp:501 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [236])
        (nil)))
(insn 70 69 71 4 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [235]))
                (const_int -64 [0xffffffffffffffc0])) [0 sup_ext S1 A8])
        (reg:QI 1 dx [orig:72 D.6444 ] [72])) sim2fitman_sup.cpp:501 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [235])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:72 D.6444 ] [72])
            (nil))))
(insn 71 70 72 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:500 273 {*addsi_1}
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 72 71 73 5 72 "" [1 uses])
(note 73 72 75 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 75 73 76 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:500 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 77 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) sim2fitman_sup.cpp:500 612 {*jcc_1}
     (nil)
 -> 74)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 73
(code_label 77 76 78 6 71 "" [1 uses])
(note 78 77 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 6 (set (reg:SI 0 ax [orig:73 D.6443 ] [73])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:505 89 {*movsi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:73 D.6443 ] [73])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:505 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 D.6443 ] [73])
        (nil)))
(jump_insn 81 80 82 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) sim2fitman_sup.cpp:505 612 {*jcc_1}
     (nil)
 -> 108)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 82 81 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 892 7 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:506 89 {*movsi_internal}
     (nil))
(jump_insn 892 83 893 7 (set (pc)
        (label_ref 103)) sim2fitman_sup.cpp:506 650 {jump}
     (nil)
 -> 103)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 893 892 105)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 74 75 76 77 78 79 80 237 238 239 240 241
(code_label 105 893 86 8 76 "" [1 uses])
(note 86 105 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 8 (set (reg:SI 0 ax [orig:74 D.6443 ] [74])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:507 89 {*movsi_internal}
     (nil))
(insn 88 87 89 8 (set (reg:SI 1 dx [237])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:507 89 {*movsi_internal}
     (nil))
(insn 89 88 90 8 (parallel [
            (set (reg:SI 1 dx [orig:75 D.6443 ] [75])
                (plus:SI (reg:SI 1 dx [237])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:507 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [237])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 90 89 91 8 (parallel [
            (set (reg:SI 0 ax [orig:76 D.6443 ] [76])
                (plus:SI (reg:SI 0 ax [orig:74 D.6443 ] [74])
                    (reg:SI 1 dx [orig:75 D.6443 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:507 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:75 D.6443 ] [75])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:74 D.6443 ] [74])
            (nil))))
(insn 91 90 92 8 (set (reg/f:DI 1 dx [238])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:507 87 {*movdi_internal_rex64}
     (nil))
(insn 92 91 93 8 (set (reg:DI 0 ax [239])
        (sign_extend:DI (reg:SI 0 ax [orig:76 D.6443 ] [76]))) sim2fitman_sup.cpp:507 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:76 D.6443 ] [76])
        (nil)))
(insn 93 92 94 8 (set (reg:QI 0 ax [orig:77 D.6444 ] [77])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [238])
                    (reg:DI 0 ax [239]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:507 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [239])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [238])
            (nil))))
(insn 94 93 95 8 (set (reg:SI 0 ax [orig:78 D.6443 ] [78])
        (sign_extend:SI (reg:QI 0 ax [orig:77 D.6444 ] [77]))) sim2fitman_sup.cpp:507 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:77 D.6444 ] [77])
        (nil)))
(insn 95 94 96 8 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:78 D.6443 ] [78])) sim2fitman_sup.cpp:507 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 D.6443 ] [78])
        (nil)))
(call_insn/i 96 95 97 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:507 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 97 96 98 8 (set (reg:SI 0 ax [orig:79 D.6443 ] [79])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:507 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 98 97 99 8 (set (reg:QI 1 dx [orig:80 D.6444 ] [80])
        (reg:QI 0 ax [orig:79 D.6443 ] [79])) sim2fitman_sup.cpp:507 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:79 D.6443 ] [79])
        (nil)))
(insn 99 98 100 8 (set (reg:SI 0 ax [241])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:507 89 {*movsi_internal}
     (nil))
(insn 100 99 101 8 (set (reg:DI 0 ax [240])
        (sign_extend:DI (reg:SI 0 ax [241]))) sim2fitman_sup.cpp:507 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [241])
        (nil)))
(insn 101 100 102 8 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [240]))
                (const_int -32 [0xffffffffffffffe0])) [0 uns_ext S1 A8])
        (reg:QI 1 dx [orig:80 D.6444 ] [80])) sim2fitman_sup.cpp:507 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [240])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:80 D.6444 ] [80])
            (nil))))
(insn 102 101 103 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:506 273 {*addsi_1}
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 103 102 104 9 75 "" [1 uses])
(note 104 103 106 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 106 104 107 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:506 7 {*cmpsi_1}
     (nil))
(jump_insn 107 106 108 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) sim2fitman_sup.cpp:506 612 {*jcc_1}
     (nil)
 -> 105)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 81 242
(code_label 108 107 109 10 74 "" [1 uses])
(note 109 108 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 10 (parallel [
            (set (reg:DI 0 ax [242])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:512 274 {*adddi_1}
     (nil))
(insn 111 110 112 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f7e9ed152f8 *.LC52>)) sim2fitman_sup.cpp:512 87 {*movdi_internal_rex64}
     (nil))
(insn 112 111 113 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [242])) sim2fitman_sup.cpp:512 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [242])
        (nil)))
(call_insn/i 113 112 114 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:512 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 114 113 115 10 (set (reg:SI 0 ax [orig:81 D.6443 ] [81])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:512 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 115 114 116 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:81 D.6443 ] [81])
            (const_int 0 [0]))) sim2fitman_sup.cpp:512 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:81 D.6443 ] [81])
        (nil)))
(jump_insn 116 115 117 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) sim2fitman_sup.cpp:512 612 {*jcc_1}
     (nil)
 -> 222)
;;  succ:       11 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 82
(note 117 116 118 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 11 (set (reg:SI 0 ax [orig:82 D.6443 ] [82])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:513 89 {*movsi_internal}
     (nil))
(insn 119 118 120 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:82 D.6443 ] [82])
            (const_int 8 [0x8]))) sim2fitman_sup.cpp:513 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:82 D.6443 ] [82])
        (nil)))
(jump_insn 120 119 121 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) sim2fitman_sup.cpp:513 612 {*jcc_1}
     (nil)
 -> 188)
;;  succ:       12 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 243 244
(note 121 120 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 12 (set (reg:SI 0 ax [orig:83 D.6443 ] [83])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:514 89 {*movsi_internal}
     (nil))
(insn 123 122 124 12 (parallel [
            (set (reg:SI 0 ax [orig:84 D.6443 ] [84])
                (plus:SI (reg:SI 0 ax [orig:83 D.6443 ] [83])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:514 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:83 D.6443 ] [83])
        (nil)))
(insn 124 123 125 12 (set (reg/f:DI 1 dx [243])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:514 87 {*movdi_internal_rex64}
     (nil))
(insn 125 124 126 12 (set (reg:DI 0 ax [244])
        (sign_extend:DI (reg:SI 0 ax [orig:84 D.6443 ] [84]))) sim2fitman_sup.cpp:514 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:84 D.6443 ] [84])
        (nil)))
(insn 126 125 127 12 (set (reg:QI 0 ax [orig:85 D.6444 ] [85])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [243])
                    (reg:DI 0 ax [244]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:514 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [244])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [243])
            (nil))))
(insn 127 126 128 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:85 D.6444 ] [85])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:514 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:85 D.6444 ] [85])
        (nil)))
(jump_insn 128 127 129 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) sim2fitman_sup.cpp:514 612 {*jcc_1}
     (nil)
 -> 158)
;;  succ:       13 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 894 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:516 89 {*movsi_internal}
     (nil))
(jump_insn 894 130 895 13 (set (pc)
        (label_ref 150)) sim2fitman_sup.cpp:516 650 {jump}
     (nil)
 -> 150)
;;  succ:       15 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 895 894 152)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 86 87 88 89 90 91 92 245 246 247 248 249
(code_label 152 895 133 14 81 "" [1 uses])
(note 133 152 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 14 (set (reg:SI 0 ax [orig:86 D.6443 ] [86])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:517 89 {*movsi_internal}
     (nil))
(insn 135 134 136 14 (set (reg:SI 1 dx [245])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:517 89 {*movsi_internal}
     (nil))
(insn 136 135 137 14 (parallel [
            (set (reg:SI 1 dx [orig:87 D.6443 ] [87])
                (plus:SI (reg:SI 1 dx [245])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:517 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [245])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -6 [0xfffffffffffffffa]))
            (nil))))
(insn 137 136 138 14 (parallel [
            (set (reg:SI 0 ax [orig:88 D.6443 ] [88])
                (plus:SI (reg:SI 0 ax [orig:86 D.6443 ] [86])
                    (reg:SI 1 dx [orig:87 D.6443 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:517 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:87 D.6443 ] [87])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:86 D.6443 ] [86])
            (nil))))
(insn 138 137 139 14 (set (reg/f:DI 1 dx [246])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:517 87 {*movdi_internal_rex64}
     (nil))
(insn 139 138 140 14 (set (reg:DI 0 ax [247])
        (sign_extend:DI (reg:SI 0 ax [orig:88 D.6443 ] [88]))) sim2fitman_sup.cpp:517 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:88 D.6443 ] [88])
        (nil)))
(insn 140 139 141 14 (set (reg:QI 0 ax [orig:89 D.6444 ] [89])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [246])
                    (reg:DI 0 ax [247]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:517 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [247])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [246])
            (nil))))
(insn 141 140 142 14 (set (reg:SI 0 ax [orig:90 D.6443 ] [90])
        (sign_extend:SI (reg:QI 0 ax [orig:89 D.6444 ] [89]))) sim2fitman_sup.cpp:517 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:89 D.6444 ] [89])
        (nil)))
(insn 142 141 143 14 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:90 D.6443 ] [90])) sim2fitman_sup.cpp:517 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:90 D.6443 ] [90])
        (nil)))
(call_insn/i 143 142 144 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:517 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 144 143 145 14 (set (reg:SI 0 ax [orig:91 D.6443 ] [91])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:517 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 145 144 146 14 (set (reg:QI 1 dx [orig:92 D.6444 ] [92])
        (reg:QI 0 ax [orig:91 D.6443 ] [91])) sim2fitman_sup.cpp:517 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:91 D.6443 ] [91])
        (nil)))
(insn 146 145 147 14 (set (reg:SI 0 ax [249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:517 89 {*movsi_internal}
     (nil))
(insn 147 146 148 14 (set (reg:DI 0 ax [248])
        (sign_extend:DI (reg:SI 0 ax [249]))) sim2fitman_sup.cpp:517 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [249])
        (nil)))
(insn 148 147 149 14 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [248]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:92 D.6444 ] [92])) sim2fitman_sup.cpp:517 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [248])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:92 D.6444 ] [92])
            (nil))))
(insn 149 148 150 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:516 273 {*addsi_1}
     (nil))
;;  succ:       15 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU,DFS_BACK)
;;              13 [100.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 150 149 151 15 80 "" [1 uses])
(note 151 150 153 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 153 151 154 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:516 7 {*cmpsi_1}
     (nil))
(jump_insn 154 153 896 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) sim2fitman_sup.cpp:516 612 {*jcc_1}
     (nil)
 -> 152)
;;  succ:       14
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 896 154 897 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 897 896 898 16 (set (pc)
        (label_ref 325)) 650 {jump}
     (nil)
 -> 325)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 898 897 158)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 158 898 159 17 79 "" [1 uses])
(note 159 158 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 899 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:521 89 {*movsi_internal}
     (nil))
(jump_insn 899 160 900 17 (set (pc)
        (label_ref 180)) sim2fitman_sup.cpp:521 650 {jump}
     (nil)
 -> 180)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 900 899 182)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 93 94 95 96 97 98 99 250 251 252 253 254
(code_label 182 900 163 18 84 "" [1 uses])
(note 163 182 164 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 18 (set (reg:SI 0 ax [orig:93 D.6443 ] [93])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:522 89 {*movsi_internal}
     (nil))
(insn 165 164 166 18 (set (reg:SI 1 dx [250])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:522 89 {*movsi_internal}
     (nil))
(insn 166 165 167 18 (parallel [
            (set (reg:SI 1 dx [orig:94 D.6443 ] [94])
                (plus:SI (reg:SI 1 dx [250])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:522 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [250])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 167 166 168 18 (parallel [
            (set (reg:SI 0 ax [orig:95 D.6443 ] [95])
                (plus:SI (reg:SI 0 ax [orig:93 D.6443 ] [93])
                    (reg:SI 1 dx [orig:94 D.6443 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:522 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:94 D.6443 ] [94])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:93 D.6443 ] [93])
            (nil))))
(insn 168 167 169 18 (set (reg/f:DI 1 dx [251])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:522 87 {*movdi_internal_rex64}
     (nil))
(insn 169 168 170 18 (set (reg:DI 0 ax [252])
        (sign_extend:DI (reg:SI 0 ax [orig:95 D.6443 ] [95]))) sim2fitman_sup.cpp:522 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:95 D.6443 ] [95])
        (nil)))
(insn 170 169 171 18 (set (reg:QI 0 ax [orig:96 D.6444 ] [96])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [251])
                    (reg:DI 0 ax [252]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:522 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [252])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [251])
            (nil))))
(insn 171 170 172 18 (set (reg:SI 0 ax [orig:97 D.6443 ] [97])
        (sign_extend:SI (reg:QI 0 ax [orig:96 D.6444 ] [96]))) sim2fitman_sup.cpp:522 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:96 D.6444 ] [96])
        (nil)))
(insn 172 171 173 18 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:97 D.6443 ] [97])) sim2fitman_sup.cpp:522 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:97 D.6443 ] [97])
        (nil)))
(call_insn/i 173 172 174 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:522 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 174 173 175 18 (set (reg:SI 0 ax [orig:98 D.6443 ] [98])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:522 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 175 174 176 18 (set (reg:QI 1 dx [orig:99 D.6444 ] [99])
        (reg:QI 0 ax [orig:98 D.6443 ] [98])) sim2fitman_sup.cpp:522 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:98 D.6443 ] [98])
        (nil)))
(insn 176 175 177 18 (set (reg:SI 0 ax [254])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:522 89 {*movsi_internal}
     (nil))
(insn 177 176 178 18 (set (reg:DI 0 ax [253])
        (sign_extend:DI (reg:SI 0 ax [254]))) sim2fitman_sup.cpp:522 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [254])
        (nil)))
(insn 178 177 179 18 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [253]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:99 D.6444 ] [99])) sim2fitman_sup.cpp:522 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [253])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:99 D.6444 ] [99])
            (nil))))
(insn 179 178 180 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:521 273 {*addsi_1}
     (nil))
;;  succ:       19 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU,DFS_BACK)
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 180 179 181 19 83 "" [1 uses])
(note 181 180 183 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 183 181 184 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:521 7 {*cmpsi_1}
     (nil))
(jump_insn 184 183 901 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) sim2fitman_sup.cpp:521 612 {*jcc_1}
     (nil)
 -> 182)
;;  succ:       18
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 901 184 902 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 902 901 903 20 (set (pc)
        (label_ref 325)) 650 {jump}
     (nil)
 -> 325)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 903 902 188)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100
(code_label 188 903 189 21 78 "" [1 uses])
(note 189 188 190 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 21 (set (reg:SI 0 ax [orig:100 D.6443 ] [100])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:526 89 {*movsi_internal}
     (nil))
(insn 191 190 192 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:100 D.6443 ] [100])
            (const_int 6 [0x6]))) sim2fitman_sup.cpp:526 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:100 D.6443 ] [100])
        (nil)))
(jump_insn 192 191 193 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) sim2fitman_sup.cpp:526 612 {*jcc_1}
     (nil)
 -> 325)
;;  succ:       22 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 193 192 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 904 22 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:528 89 {*movsi_internal}
     (nil))
(jump_insn 904 194 905 22 (set (pc)
        (label_ref 214)) sim2fitman_sup.cpp:528 650 {jump}
     (nil)
 -> 214)
;;  succ:       24 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 905 904 216)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 101 102 103 104 105 106 107 255 256 257 258 259
(code_label 216 905 197 23 86 "" [1 uses])
(note 197 216 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 23 (set (reg:SI 0 ax [orig:101 D.6443 ] [101])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:529 89 {*movsi_internal}
     (nil))
(insn 199 198 200 23 (set (reg:SI 1 dx [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:529 89 {*movsi_internal}
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg:SI 1 dx [orig:102 D.6443 ] [102])
                (plus:SI (reg:SI 1 dx [255])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:529 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [255])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -6 [0xfffffffffffffffa]))
            (nil))))
(insn 201 200 202 23 (parallel [
            (set (reg:SI 0 ax [orig:103 D.6443 ] [103])
                (plus:SI (reg:SI 0 ax [orig:101 D.6443 ] [101])
                    (reg:SI 1 dx [orig:102 D.6443 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:529 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:102 D.6443 ] [102])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:101 D.6443 ] [101])
            (nil))))
(insn 202 201 203 23 (set (reg/f:DI 1 dx [256])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:529 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 23 (set (reg:DI 0 ax [257])
        (sign_extend:DI (reg:SI 0 ax [orig:103 D.6443 ] [103]))) sim2fitman_sup.cpp:529 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:103 D.6443 ] [103])
        (nil)))
(insn 204 203 205 23 (set (reg:QI 0 ax [orig:104 D.6444 ] [104])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [256])
                    (reg:DI 0 ax [257]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:529 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [257])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [256])
            (nil))))
(insn 205 204 206 23 (set (reg:SI 0 ax [orig:105 D.6443 ] [105])
        (sign_extend:SI (reg:QI 0 ax [orig:104 D.6444 ] [104]))) sim2fitman_sup.cpp:529 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:104 D.6444 ] [104])
        (nil)))
(insn 206 205 207 23 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:105 D.6443 ] [105])) sim2fitman_sup.cpp:529 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:105 D.6443 ] [105])
        (nil)))
(call_insn/i 207 206 208 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:529 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 208 207 209 23 (set (reg:SI 0 ax [orig:106 D.6443 ] [106])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:529 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 209 208 210 23 (set (reg:QI 1 dx [orig:107 D.6444 ] [107])
        (reg:QI 0 ax [orig:106 D.6443 ] [106])) sim2fitman_sup.cpp:529 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:106 D.6443 ] [106])
        (nil)))
(insn 210 209 211 23 (set (reg:SI 0 ax [259])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:529 89 {*movsi_internal}
     (nil))
(insn 211 210 212 23 (set (reg:DI 0 ax [258])
        (sign_extend:DI (reg:SI 0 ax [259]))) sim2fitman_sup.cpp:529 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [259])
        (nil)))
(insn 212 211 213 23 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [258]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:107 D.6444 ] [107])) sim2fitman_sup.cpp:529 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [258])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:107 D.6444 ] [107])
            (nil))))
(insn 213 212 214 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:528 273 {*addsi_1}
     (nil))
;;  succ:       24 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU,DFS_BACK)
;;              22 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 214 213 215 24 85 "" [1 uses])
(note 215 214 217 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 217 215 218 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:528 7 {*cmpsi_1}
     (nil))
(jump_insn 218 217 906 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) sim2fitman_sup.cpp:528 612 {*jcc_1}
     (nil)
 -> 216)
;;  succ:       23
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 906 218 907 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 907 906 908 25 (set (pc)
        (label_ref 325)) 650 {jump}
     (nil)
 -> 325)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 908 907 222)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108
(code_label 222 908 223 26 77 "" [1 uses])
(note 223 222 224 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 26 (set (reg:SI 0 ax [orig:108 D.6443 ] [108])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:533 89 {*movsi_internal}
     (nil))
(insn 225 224 226 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:108 D.6443 ] [108])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:533 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:108 D.6443 ] [108])
        (nil)))
(jump_insn 226 225 227 26 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) sim2fitman_sup.cpp:533 612 {*jcc_1}
     (nil)
 -> 294)
;;  succ:       27 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 110 111 260 261
(note 227 226 228 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 27 (set (reg:SI 0 ax [orig:109 D.6443 ] [109])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:534 89 {*movsi_internal}
     (nil))
(insn 229 228 230 27 (parallel [
            (set (reg:SI 0 ax [orig:110 D.6443 ] [110])
                (plus:SI (reg:SI 0 ax [orig:109 D.6443 ] [109])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:534 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:109 D.6443 ] [109])
        (nil)))
(insn 230 229 231 27 (set (reg/f:DI 1 dx [260])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:534 87 {*movdi_internal_rex64}
     (nil))
(insn 231 230 232 27 (set (reg:DI 0 ax [261])
        (sign_extend:DI (reg:SI 0 ax [orig:110 D.6443 ] [110]))) sim2fitman_sup.cpp:534 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:110 D.6443 ] [110])
        (nil)))
(insn 232 231 233 27 (set (reg:QI 0 ax [orig:111 D.6444 ] [111])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [260])
                    (reg:DI 0 ax [261]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:534 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [261])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [260])
            (nil))))
(insn 233 232 234 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:111 D.6444 ] [111])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:534 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:111 D.6444 ] [111])
        (nil)))
(jump_insn 234 233 235 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) sim2fitman_sup.cpp:534 612 {*jcc_1}
     (nil)
 -> 264)
;;  succ:       28 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 235 234 236 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 909 28 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:536 89 {*movsi_internal}
     (nil))
(jump_insn 909 236 910 28 (set (pc)
        (label_ref 256)) sim2fitman_sup.cpp:536 650 {jump}
     (nil)
 -> 256)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 910 909 258)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 112 113 114 115 116 117 118 262 263 264 265 266
(code_label 258 910 239 29 90 "" [1 uses])
(note 239 258 240 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 29 (set (reg:SI 0 ax [orig:112 D.6443 ] [112])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:537 89 {*movsi_internal}
     (nil))
(insn 241 240 242 29 (set (reg:SI 1 dx [262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:537 89 {*movsi_internal}
     (nil))
(insn 242 241 243 29 (parallel [
            (set (reg:SI 1 dx [orig:113 D.6443 ] [113])
                (plus:SI (reg:SI 1 dx [262])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:537 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [262])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -2 [0xfffffffffffffffe]))
            (nil))))
(insn 243 242 244 29 (parallel [
            (set (reg:SI 0 ax [orig:114 D.6443 ] [114])
                (plus:SI (reg:SI 0 ax [orig:112 D.6443 ] [112])
                    (reg:SI 1 dx [orig:113 D.6443 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:537 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:113 D.6443 ] [113])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:112 D.6443 ] [112])
            (nil))))
(insn 244 243 245 29 (set (reg/f:DI 1 dx [263])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:537 87 {*movdi_internal_rex64}
     (nil))
(insn 245 244 246 29 (set (reg:DI 0 ax [264])
        (sign_extend:DI (reg:SI 0 ax [orig:114 D.6443 ] [114]))) sim2fitman_sup.cpp:537 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:114 D.6443 ] [114])
        (nil)))
(insn 246 245 247 29 (set (reg:QI 0 ax [orig:115 D.6444 ] [115])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [263])
                    (reg:DI 0 ax [264]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:537 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [264])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [263])
            (nil))))
(insn 247 246 248 29 (set (reg:SI 0 ax [orig:116 D.6443 ] [116])
        (sign_extend:SI (reg:QI 0 ax [orig:115 D.6444 ] [115]))) sim2fitman_sup.cpp:537 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:115 D.6444 ] [115])
        (nil)))
(insn 248 247 249 29 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:116 D.6443 ] [116])) sim2fitman_sup.cpp:537 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:116 D.6443 ] [116])
        (nil)))
(call_insn/i 249 248 250 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:537 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 250 249 251 29 (set (reg:SI 0 ax [orig:117 D.6443 ] [117])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:537 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 251 250 252 29 (set (reg:QI 1 dx [orig:118 D.6444 ] [118])
        (reg:QI 0 ax [orig:117 D.6443 ] [117])) sim2fitman_sup.cpp:537 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:117 D.6443 ] [117])
        (nil)))
(insn 252 251 253 29 (set (reg:SI 0 ax [266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:537 89 {*movsi_internal}
     (nil))
(insn 253 252 254 29 (set (reg:DI 0 ax [265])
        (sign_extend:DI (reg:SI 0 ax [266]))) sim2fitman_sup.cpp:537 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [266])
        (nil)))
(insn 254 253 255 29 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [265]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:118 D.6444 ] [118])) sim2fitman_sup.cpp:537 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [265])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:118 D.6444 ] [118])
            (nil))))
(insn 255 254 256 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:536 273 {*addsi_1}
     (nil))
;;  succ:       30 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU,DFS_BACK)
;;              28 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 256 255 257 30 89 "" [1 uses])
(note 257 256 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 259 257 260 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:536 7 {*cmpsi_1}
     (nil))
(jump_insn 260 259 911 30 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) sim2fitman_sup.cpp:536 612 {*jcc_1}
     (nil)
 -> 258)
;;  succ:       29
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 911 260 912 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(jump_insn 912 911 913 31 (set (pc)
        (label_ref 325)) 650 {jump}
     (nil)
 -> 325)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 913 912 264)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 264 913 265 32 88 "" [1 uses])
(note 265 264 266 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 914 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:541 89 {*movsi_internal}
     (nil))
(jump_insn 914 266 915 32 (set (pc)
        (label_ref 286)) sim2fitman_sup.cpp:541 650 {jump}
     (nil)
 -> 286)
;;  succ:       34 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 915 914 288)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 119 120 121 122 123 124 125 267 268 269 270 271
(code_label 288 915 269 33 92 "" [1 uses])
(note 269 288 270 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 33 (set (reg:SI 0 ax [orig:119 D.6443 ] [119])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:542 89 {*movsi_internal}
     (nil))
(insn 271 270 272 33 (set (reg:SI 1 dx [267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:542 89 {*movsi_internal}
     (nil))
(insn 272 271 273 33 (parallel [
            (set (reg:SI 1 dx [orig:120 D.6443 ] [120])
                (plus:SI (reg:SI 1 dx [267])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:542 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [267])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 273 272 274 33 (parallel [
            (set (reg:SI 0 ax [orig:121 D.6443 ] [121])
                (plus:SI (reg:SI 0 ax [orig:119 D.6443 ] [119])
                    (reg:SI 1 dx [orig:120 D.6443 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:542 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:120 D.6443 ] [120])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:119 D.6443 ] [119])
            (nil))))
(insn 274 273 275 33 (set (reg/f:DI 1 dx [268])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:542 87 {*movdi_internal_rex64}
     (nil))
(insn 275 274 276 33 (set (reg:DI 0 ax [269])
        (sign_extend:DI (reg:SI 0 ax [orig:121 D.6443 ] [121]))) sim2fitman_sup.cpp:542 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:121 D.6443 ] [121])
        (nil)))
(insn 276 275 277 33 (set (reg:QI 0 ax [orig:122 D.6444 ] [122])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [268])
                    (reg:DI 0 ax [269]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:542 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [269])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [268])
            (nil))))
(insn 277 276 278 33 (set (reg:SI 0 ax [orig:123 D.6443 ] [123])
        (sign_extend:SI (reg:QI 0 ax [orig:122 D.6444 ] [122]))) sim2fitman_sup.cpp:542 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:122 D.6444 ] [122])
        (nil)))
(insn 278 277 279 33 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:123 D.6443 ] [123])) sim2fitman_sup.cpp:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:123 D.6443 ] [123])
        (nil)))
(call_insn/i 279 278 280 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:542 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 280 279 281 33 (set (reg:SI 0 ax [orig:124 D.6443 ] [124])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:542 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 281 280 282 33 (set (reg:QI 1 dx [orig:125 D.6444 ] [125])
        (reg:QI 0 ax [orig:124 D.6443 ] [124])) sim2fitman_sup.cpp:542 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:124 D.6443 ] [124])
        (nil)))
(insn 282 281 283 33 (set (reg:SI 0 ax [271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:542 89 {*movsi_internal}
     (nil))
(insn 283 282 284 33 (set (reg:DI 0 ax [270])
        (sign_extend:DI (reg:SI 0 ax [271]))) sim2fitman_sup.cpp:542 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [271])
        (nil)))
(insn 284 283 285 33 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [270]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:125 D.6444 ] [125])) sim2fitman_sup.cpp:542 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [270])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:125 D.6444 ] [125])
            (nil))))
(insn 285 284 286 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:541 273 {*addsi_1}
     (nil))
;;  succ:       34 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU,DFS_BACK)
;;              32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 286 285 287 34 91 "" [1 uses])
(note 287 286 289 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 289 287 290 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:541 7 {*cmpsi_1}
     (nil))
(jump_insn 290 289 916 34 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) sim2fitman_sup.cpp:541 612 {*jcc_1}
     (nil)
 -> 288)
;;  succ:       33
;;              35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 916 290 917 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 917 916 918 35 (set (pc)
        (label_ref 325)) 650 {jump}
     (nil)
 -> 325)
;;  succ:       40 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 918 917 294)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 126
(code_label 294 918 295 36 87 "" [1 uses])
(note 295 294 296 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 36 (set (reg:SI 0 ax [orig:126 D.6443 ] [126])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:546 89 {*movsi_internal}
     (nil))
(insn 297 296 298 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:126 D.6443 ] [126])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:546 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:126 D.6443 ] [126])
        (nil)))
(jump_insn 298 297 299 36 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) sim2fitman_sup.cpp:546 612 {*jcc_1}
     (nil)
 -> 325)
;;  succ:       37 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 299 298 300 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 919 37 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:547 89 {*movsi_internal}
     (nil))
(jump_insn 919 300 920 37 (set (pc)
        (label_ref 320)) sim2fitman_sup.cpp:547 650 {jump}
     (nil)
 -> 320)
;;  succ:       39 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 920 919 322)
;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 127 128 129 130 131 132 133 272 273 274 275 276
(code_label 322 920 303 38 94 "" [1 uses])
(note 303 322 304 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 38 (set (reg:SI 0 ax [orig:127 D.6443 ] [127])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:548 89 {*movsi_internal}
     (nil))
(insn 305 304 306 38 (set (reg:SI 1 dx [272])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:548 89 {*movsi_internal}
     (nil))
(insn 306 305 307 38 (parallel [
            (set (reg:SI 1 dx [orig:128 D.6443 ] [128])
                (plus:SI (reg:SI 1 dx [272])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:548 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [272])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -2 [0xfffffffffffffffe]))
            (nil))))
(insn 307 306 308 38 (parallel [
            (set (reg:SI 0 ax [orig:129 D.6443 ] [129])
                (plus:SI (reg:SI 0 ax [orig:127 D.6443 ] [127])
                    (reg:SI 1 dx [orig:128 D.6443 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:548 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:128 D.6443 ] [128])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:127 D.6443 ] [127])
            (nil))))
(insn 308 307 309 38 (set (reg/f:DI 1 dx [273])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:548 87 {*movdi_internal_rex64}
     (nil))
(insn 309 308 310 38 (set (reg:DI 0 ax [274])
        (sign_extend:DI (reg:SI 0 ax [orig:129 D.6443 ] [129]))) sim2fitman_sup.cpp:548 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:129 D.6443 ] [129])
        (nil)))
(insn 310 309 311 38 (set (reg:QI 0 ax [orig:130 D.6444 ] [130])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [273])
                    (reg:DI 0 ax [274]))
                (const_int 512 [0x200])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:548 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [274])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [273])
            (nil))))
(insn 311 310 312 38 (set (reg:SI 0 ax [orig:131 D.6443 ] [131])
        (sign_extend:SI (reg:QI 0 ax [orig:130 D.6444 ] [130]))) sim2fitman_sup.cpp:548 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:130 D.6444 ] [130])
        (nil)))
(insn 312 311 313 38 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:131 D.6443 ] [131])) sim2fitman_sup.cpp:548 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:131 D.6443 ] [131])
        (nil)))
(call_insn/i 313 312 314 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:548 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 314 313 315 38 (set (reg:SI 0 ax [orig:132 D.6443 ] [132])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:548 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 315 314 316 38 (set (reg:QI 1 dx [orig:133 D.6444 ] [133])
        (reg:QI 0 ax [orig:132 D.6443 ] [132])) sim2fitman_sup.cpp:548 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:132 D.6443 ] [132])
        (nil)))
(insn 316 315 317 38 (set (reg:SI 0 ax [276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:548 89 {*movsi_internal}
     (nil))
(insn 317 316 318 38 (set (reg:DI 0 ax [275])
        (sign_extend:DI (reg:SI 0 ax [276]))) sim2fitman_sup.cpp:548 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [276])
        (nil)))
(insn 318 317 319 38 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [275]))
                (const_int -48 [0xffffffffffffffd0])) [0 sup_suf S1 A8])
        (reg:QI 1 dx [orig:133 D.6444 ] [133])) sim2fitman_sup.cpp:548 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [275])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:133 D.6444 ] [133])
            (nil))))
(insn 319 318 320 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:547 273 {*addsi_1}
     (nil))
;;  succ:       39 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU,DFS_BACK)
;;              37 [100.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 320 319 321 39 93 "" [1 uses])
(note 321 320 323 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 323 321 324 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:547 7 {*cmpsi_1}
     (nil))
(jump_insn 324 323 325 39 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 322)
            (pc))) sim2fitman_sup.cpp:547 612 {*jcc_1}
     (nil)
 -> 322)
;;  succ:       38
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              25 [100.0%] 
;;              36
;;              39 (FALLTHRU)
;;              31 [100.0%] 
;;              20 [100.0%] 
;;              16 [100.0%] 
;;              35 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 134 277
(code_label 325 324 326 40 82 "" [7 uses])
(note 326 325 327 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 40 (parallel [
            (set (reg:DI 0 ax [277])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:554 274 {*adddi_1}
     (nil))
(insn 328 327 329 40 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f7e9ed152f8 *.LC52>)) sim2fitman_sup.cpp:554 87 {*movdi_internal_rex64}
     (nil))
(insn 329 328 330 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [277])) sim2fitman_sup.cpp:554 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [277])
        (nil)))
(call_insn/i 330 329 331 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:554 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 331 330 332 40 (set (reg:SI 0 ax [orig:134 D.6443 ] [134])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:554 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 332 331 333 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:134 D.6443 ] [134])
            (const_int 0 [0]))) sim2fitman_sup.cpp:554 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:134 D.6443 ] [134])
        (nil)))
(jump_insn 333 332 334 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) sim2fitman_sup.cpp:554 612 {*jcc_1}
     (nil)
 -> 439)
;;  succ:       41 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135
(note 334 333 335 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 41 (set (reg:SI 0 ax [orig:135 D.6443 ] [135])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:555 89 {*movsi_internal}
     (nil))
(insn 336 335 337 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:135 D.6443 ] [135])
            (const_int 8 [0x8]))) sim2fitman_sup.cpp:555 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 D.6443 ] [135])
        (nil)))
(jump_insn 337 336 338 41 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) sim2fitman_sup.cpp:555 612 {*jcc_1}
     (nil)
 -> 405)
;;  succ:       42 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 136 137 138 278 279
(note 338 337 339 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 42 (set (reg:SI 0 ax [orig:136 D.6443 ] [136])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:556 89 {*movsi_internal}
     (nil))
(insn 340 339 341 42 (parallel [
            (set (reg:SI 0 ax [orig:137 D.6443 ] [137])
                (plus:SI (reg:SI 0 ax [orig:136 D.6443 ] [136])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:556 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 D.6443 ] [136])
        (nil)))
(insn 341 340 342 42 (set (reg/f:DI 1 dx [278])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:556 87 {*movdi_internal_rex64}
     (nil))
(insn 342 341 343 42 (set (reg:DI 0 ax [279])
        (sign_extend:DI (reg:SI 0 ax [orig:137 D.6443 ] [137]))) sim2fitman_sup.cpp:556 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:137 D.6443 ] [137])
        (nil)))
(insn 343 342 344 42 (set (reg:QI 0 ax [orig:138 D.6444 ] [138])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [278])
                    (reg:DI 0 ax [279]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:556 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [279])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [278])
            (nil))))
(insn 344 343 345 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:138 D.6444 ] [138])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:556 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:138 D.6444 ] [138])
        (nil)))
(jump_insn 345 344 346 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) sim2fitman_sup.cpp:556 612 {*jcc_1}
     (nil)
 -> 375)
;;  succ:       43 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 346 345 347 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 921 43 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:558 89 {*movsi_internal}
     (nil))
(jump_insn 921 347 922 43 (set (pc)
        (label_ref 367)) sim2fitman_sup.cpp:558 650 {jump}
     (nil)
 -> 367)
;;  succ:       45 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 922 921 369)
;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 139 140 141 142 143 144 145 280 281 282 283 284
(code_label 369 922 350 44 99 "" [1 uses])
(note 350 369 351 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 44 (set (reg:SI 0 ax [orig:139 D.6443 ] [139])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:559 89 {*movsi_internal}
     (nil))
(insn 352 351 353 44 (set (reg:SI 1 dx [280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:559 89 {*movsi_internal}
     (nil))
(insn 353 352 354 44 (parallel [
            (set (reg:SI 1 dx [orig:140 D.6443 ] [140])
                (plus:SI (reg:SI 1 dx [280])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:559 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [280])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -6 [0xfffffffffffffffa]))
            (nil))))
(insn 354 353 355 44 (parallel [
            (set (reg:SI 0 ax [orig:141 D.6443 ] [141])
                (plus:SI (reg:SI 0 ax [orig:139 D.6443 ] [139])
                    (reg:SI 1 dx [orig:140 D.6443 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:559 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:140 D.6443 ] [140])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:139 D.6443 ] [139])
            (nil))))
(insn 355 354 356 44 (set (reg/f:DI 1 dx [281])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:559 87 {*movdi_internal_rex64}
     (nil))
(insn 356 355 357 44 (set (reg:DI 0 ax [282])
        (sign_extend:DI (reg:SI 0 ax [orig:141 D.6443 ] [141]))) sim2fitman_sup.cpp:559 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:141 D.6443 ] [141])
        (nil)))
(insn 357 356 358 44 (set (reg:QI 0 ax [orig:142 D.6444 ] [142])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [281])
                    (reg:DI 0 ax [282]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:559 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [282])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [281])
            (nil))))
(insn 358 357 359 44 (set (reg:SI 0 ax [orig:143 D.6443 ] [143])
        (sign_extend:SI (reg:QI 0 ax [orig:142 D.6444 ] [142]))) sim2fitman_sup.cpp:559 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:142 D.6444 ] [142])
        (nil)))
(insn 359 358 360 44 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:143 D.6443 ] [143])) sim2fitman_sup.cpp:559 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:143 D.6443 ] [143])
        (nil)))
(call_insn/i 360 359 361 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:559 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 361 360 362 44 (set (reg:SI 0 ax [orig:144 D.6443 ] [144])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:559 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 362 361 363 44 (set (reg:QI 1 dx [orig:145 D.6444 ] [145])
        (reg:QI 0 ax [orig:144 D.6443 ] [144])) sim2fitman_sup.cpp:559 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:144 D.6443 ] [144])
        (nil)))
(insn 363 362 364 44 (set (reg:SI 0 ax [284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:559 89 {*movsi_internal}
     (nil))
(insn 364 363 365 44 (set (reg:DI 0 ax [283])
        (sign_extend:DI (reg:SI 0 ax [284]))) sim2fitman_sup.cpp:559 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [284])
        (nil)))
(insn 365 364 366 44 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [283]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:145 D.6444 ] [145])) sim2fitman_sup.cpp:559 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [283])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:145 D.6444 ] [145])
            (nil))))
(insn 366 365 367 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:558 273 {*addsi_1}
     (nil))
;;  succ:       45 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU,DFS_BACK)
;;              43 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 367 366 368 45 98 "" [1 uses])
(note 368 367 370 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 370 368 371 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:558 7 {*cmpsi_1}
     (nil))
(jump_insn 371 370 923 45 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) sim2fitman_sup.cpp:558 612 {*jcc_1}
     (nil)
 -> 369)
;;  succ:       44
;;              46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 923 371 924 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 924 923 925 46 (set (pc)
        (label_ref 542)) 650 {jump}
     (nil)
 -> 542)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 925 924 375)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 375 925 376 47 97 "" [1 uses])
(note 376 375 377 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 926 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:563 89 {*movsi_internal}
     (nil))
(jump_insn 926 377 927 47 (set (pc)
        (label_ref 397)) sim2fitman_sup.cpp:563 650 {jump}
     (nil)
 -> 397)
;;  succ:       49 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 927 926 399)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 146 147 148 149 150 151 152 285 286 287 288 289
(code_label 399 927 380 48 102 "" [1 uses])
(note 380 399 381 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 48 (set (reg:SI 0 ax [orig:146 D.6443 ] [146])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:564 89 {*movsi_internal}
     (nil))
(insn 382 381 383 48 (set (reg:SI 1 dx [285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:564 89 {*movsi_internal}
     (nil))
(insn 383 382 384 48 (parallel [
            (set (reg:SI 1 dx [orig:147 D.6443 ] [147])
                (plus:SI (reg:SI 1 dx [285])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:564 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [285])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 384 383 385 48 (parallel [
            (set (reg:SI 0 ax [orig:148 D.6443 ] [148])
                (plus:SI (reg:SI 0 ax [orig:146 D.6443 ] [146])
                    (reg:SI 1 dx [orig:147 D.6443 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:564 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:147 D.6443 ] [147])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:146 D.6443 ] [146])
            (nil))))
(insn 385 384 386 48 (set (reg/f:DI 1 dx [286])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:564 87 {*movdi_internal_rex64}
     (nil))
(insn 386 385 387 48 (set (reg:DI 0 ax [287])
        (sign_extend:DI (reg:SI 0 ax [orig:148 D.6443 ] [148]))) sim2fitman_sup.cpp:564 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:148 D.6443 ] [148])
        (nil)))
(insn 387 386 388 48 (set (reg:QI 0 ax [orig:149 D.6444 ] [149])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [286])
                    (reg:DI 0 ax [287]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:564 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [287])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [286])
            (nil))))
(insn 388 387 389 48 (set (reg:SI 0 ax [orig:150 D.6443 ] [150])
        (sign_extend:SI (reg:QI 0 ax [orig:149 D.6444 ] [149]))) sim2fitman_sup.cpp:564 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:149 D.6444 ] [149])
        (nil)))
(insn 389 388 390 48 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:150 D.6443 ] [150])) sim2fitman_sup.cpp:564 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:150 D.6443 ] [150])
        (nil)))
(call_insn/i 390 389 391 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:564 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 391 390 392 48 (set (reg:SI 0 ax [orig:151 D.6443 ] [151])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:564 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 392 391 393 48 (set (reg:QI 1 dx [orig:152 D.6444 ] [152])
        (reg:QI 0 ax [orig:151 D.6443 ] [151])) sim2fitman_sup.cpp:564 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:151 D.6443 ] [151])
        (nil)))
(insn 393 392 394 48 (set (reg:SI 0 ax [289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:564 89 {*movsi_internal}
     (nil))
(insn 394 393 395 48 (set (reg:DI 0 ax [288])
        (sign_extend:DI (reg:SI 0 ax [289]))) sim2fitman_sup.cpp:564 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [289])
        (nil)))
(insn 395 394 396 48 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [288]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:152 D.6444 ] [152])) sim2fitman_sup.cpp:564 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [288])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:152 D.6444 ] [152])
            (nil))))
(insn 396 395 397 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:563 273 {*addsi_1}
     (nil))
;;  succ:       49 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU,DFS_BACK)
;;              47 [100.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 397 396 398 49 101 "" [1 uses])
(note 398 397 400 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 400 398 401 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:563 7 {*cmpsi_1}
     (nil))
(jump_insn 401 400 928 49 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) sim2fitman_sup.cpp:563 612 {*jcc_1}
     (nil)
 -> 399)
;;  succ:       48
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 928 401 929 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 929 928 930 50 (set (pc)
        (label_ref 542)) 650 {jump}
     (nil)
 -> 542)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 930 929 405)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153
(code_label 405 930 406 51 96 "" [1 uses])
(note 406 405 407 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 51 (set (reg:SI 0 ax [orig:153 D.6443 ] [153])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:568 89 {*movsi_internal}
     (nil))
(insn 408 407 409 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:153 D.6443 ] [153])
            (const_int 6 [0x6]))) sim2fitman_sup.cpp:568 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:153 D.6443 ] [153])
        (nil)))
(jump_insn 409 408 410 51 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 542)
            (pc))) sim2fitman_sup.cpp:568 612 {*jcc_1}
     (nil)
 -> 542)
;;  succ:       52 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 410 409 411 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 931 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:570 89 {*movsi_internal}
     (nil))
(jump_insn 931 411 932 52 (set (pc)
        (label_ref 431)) sim2fitman_sup.cpp:570 650 {jump}
     (nil)
 -> 431)
;;  succ:       54 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 932 931 433)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 154 155 156 157 158 159 160 290 291 292 293 294
(code_label 433 932 414 53 104 "" [1 uses])
(note 414 433 415 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 53 (set (reg:SI 0 ax [orig:154 D.6443 ] [154])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:571 89 {*movsi_internal}
     (nil))
(insn 416 415 417 53 (set (reg:SI 1 dx [290])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:571 89 {*movsi_internal}
     (nil))
(insn 417 416 418 53 (parallel [
            (set (reg:SI 1 dx [orig:155 D.6443 ] [155])
                (plus:SI (reg:SI 1 dx [290])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:571 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [290])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -6 [0xfffffffffffffffa]))
            (nil))))
(insn 418 417 419 53 (parallel [
            (set (reg:SI 0 ax [orig:156 D.6443 ] [156])
                (plus:SI (reg:SI 0 ax [orig:154 D.6443 ] [154])
                    (reg:SI 1 dx [orig:155 D.6443 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:571 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:155 D.6443 ] [155])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:154 D.6443 ] [154])
            (nil))))
(insn 419 418 420 53 (set (reg/f:DI 1 dx [291])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:571 87 {*movdi_internal_rex64}
     (nil))
(insn 420 419 421 53 (set (reg:DI 0 ax [292])
        (sign_extend:DI (reg:SI 0 ax [orig:156 D.6443 ] [156]))) sim2fitman_sup.cpp:571 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:156 D.6443 ] [156])
        (nil)))
(insn 421 420 422 53 (set (reg:QI 0 ax [orig:157 D.6444 ] [157])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [291])
                    (reg:DI 0 ax [292]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:571 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [292])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [291])
            (nil))))
(insn 422 421 423 53 (set (reg:SI 0 ax [orig:158 D.6443 ] [158])
        (sign_extend:SI (reg:QI 0 ax [orig:157 D.6444 ] [157]))) sim2fitman_sup.cpp:571 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:157 D.6444 ] [157])
        (nil)))
(insn 423 422 424 53 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:158 D.6443 ] [158])) sim2fitman_sup.cpp:571 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:158 D.6443 ] [158])
        (nil)))
(call_insn/i 424 423 425 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:571 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 425 424 426 53 (set (reg:SI 0 ax [orig:159 D.6443 ] [159])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:571 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 426 425 427 53 (set (reg:QI 1 dx [orig:160 D.6444 ] [160])
        (reg:QI 0 ax [orig:159 D.6443 ] [159])) sim2fitman_sup.cpp:571 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:159 D.6443 ] [159])
        (nil)))
(insn 427 426 428 53 (set (reg:SI 0 ax [294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:571 89 {*movsi_internal}
     (nil))
(insn 428 427 429 53 (set (reg:DI 0 ax [293])
        (sign_extend:DI (reg:SI 0 ax [294]))) sim2fitman_sup.cpp:571 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [294])
        (nil)))
(insn 429 428 430 53 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [293]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:160 D.6444 ] [160])) sim2fitman_sup.cpp:571 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [293])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:160 D.6444 ] [160])
            (nil))))
(insn 430 429 431 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:570 273 {*addsi_1}
     (nil))
;;  succ:       54 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU,DFS_BACK)
;;              52 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 431 430 432 54 103 "" [1 uses])
(note 432 431 434 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 434 432 435 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:570 7 {*cmpsi_1}
     (nil))
(jump_insn 435 434 933 54 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) sim2fitman_sup.cpp:570 612 {*jcc_1}
     (nil)
 -> 433)
;;  succ:       53
;;              55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 933 435 934 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 934 933 935 55 (set (pc)
        (label_ref 542)) 650 {jump}
     (nil)
 -> 542)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 935 934 439)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161
(code_label 439 935 440 56 95 "" [1 uses])
(note 440 439 441 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 56 (set (reg:SI 0 ax [orig:161 D.6443 ] [161])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:575 89 {*movsi_internal}
     (nil))
(insn 442 441 443 56 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:161 D.6443 ] [161])
            (const_int 4 [0x4]))) sim2fitman_sup.cpp:575 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:161 D.6443 ] [161])
        (nil)))
(jump_insn 443 442 444 56 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 511)
            (pc))) sim2fitman_sup.cpp:575 612 {*jcc_1}
     (nil)
 -> 511)
;;  succ:       57 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 163 164 295 296
(note 444 443 445 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 57 (set (reg:SI 0 ax [orig:162 D.6443 ] [162])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:576 89 {*movsi_internal}
     (nil))
(insn 446 445 447 57 (parallel [
            (set (reg:SI 0 ax [orig:163 D.6443 ] [163])
                (plus:SI (reg:SI 0 ax [orig:162 D.6443 ] [162])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:576 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:162 D.6443 ] [162])
        (nil)))
(insn 447 446 448 57 (set (reg/f:DI 1 dx [295])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:576 87 {*movdi_internal_rex64}
     (nil))
(insn 448 447 449 57 (set (reg:DI 0 ax [296])
        (sign_extend:DI (reg:SI 0 ax [orig:163 D.6443 ] [163]))) sim2fitman_sup.cpp:576 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:163 D.6443 ] [163])
        (nil)))
(insn 449 448 450 57 (set (reg:QI 0 ax [orig:164 D.6444 ] [164])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [295])
                    (reg:DI 0 ax [296]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:576 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [296])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [295])
            (nil))))
(insn 450 449 451 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:164 D.6444 ] [164])
            (const_int 95 [0x5f]))) sim2fitman_sup.cpp:576 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:164 D.6444 ] [164])
        (nil)))
(jump_insn 451 450 452 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 481)
            (pc))) sim2fitman_sup.cpp:576 612 {*jcc_1}
     (nil)
 -> 481)
;;  succ:       58 (FALLTHRU)
;;              62
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 452 451 453 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 936 58 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:578 89 {*movsi_internal}
     (nil))
(jump_insn 936 453 937 58 (set (pc)
        (label_ref 473)) sim2fitman_sup.cpp:578 650 {jump}
     (nil)
 -> 473)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 937 936 475)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 165 166 167 168 169 170 171 297 298 299 300 301
(code_label 475 937 456 59 108 "" [1 uses])
(note 456 475 457 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 59 (set (reg:SI 0 ax [orig:165 D.6443 ] [165])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:579 89 {*movsi_internal}
     (nil))
(insn 458 457 459 59 (set (reg:SI 1 dx [297])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:579 89 {*movsi_internal}
     (nil))
(insn 459 458 460 59 (parallel [
            (set (reg:SI 1 dx [orig:166 D.6443 ] [166])
                (plus:SI (reg:SI 1 dx [297])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:579 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [297])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -2 [0xfffffffffffffffe]))
            (nil))))
(insn 460 459 461 59 (parallel [
            (set (reg:SI 0 ax [orig:167 D.6443 ] [167])
                (plus:SI (reg:SI 0 ax [orig:165 D.6443 ] [165])
                    (reg:SI 1 dx [orig:166 D.6443 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:579 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:166 D.6443 ] [166])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:165 D.6443 ] [165])
            (nil))))
(insn 461 460 462 59 (set (reg/f:DI 1 dx [298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:579 87 {*movdi_internal_rex64}
     (nil))
(insn 462 461 463 59 (set (reg:DI 0 ax [299])
        (sign_extend:DI (reg:SI 0 ax [orig:167 D.6443 ] [167]))) sim2fitman_sup.cpp:579 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:167 D.6443 ] [167])
        (nil)))
(insn 463 462 464 59 (set (reg:QI 0 ax [orig:168 D.6444 ] [168])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [298])
                    (reg:DI 0 ax [299]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:579 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [299])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [298])
            (nil))))
(insn 464 463 465 59 (set (reg:SI 0 ax [orig:169 D.6443 ] [169])
        (sign_extend:SI (reg:QI 0 ax [orig:168 D.6444 ] [168]))) sim2fitman_sup.cpp:579 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:168 D.6444 ] [168])
        (nil)))
(insn 465 464 466 59 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:169 D.6443 ] [169])) sim2fitman_sup.cpp:579 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:169 D.6443 ] [169])
        (nil)))
(call_insn/i 466 465 467 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:579 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 467 466 468 59 (set (reg:SI 0 ax [orig:170 D.6443 ] [170])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:579 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 468 467 469 59 (set (reg:QI 1 dx [orig:171 D.6444 ] [171])
        (reg:QI 0 ax [orig:170 D.6443 ] [170])) sim2fitman_sup.cpp:579 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:170 D.6443 ] [170])
        (nil)))
(insn 469 468 470 59 (set (reg:SI 0 ax [301])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:579 89 {*movsi_internal}
     (nil))
(insn 470 469 471 59 (set (reg:DI 0 ax [300])
        (sign_extend:DI (reg:SI 0 ax [301]))) sim2fitman_sup.cpp:579 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [301])
        (nil)))
(insn 471 470 472 59 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [300]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:171 D.6444 ] [171])) sim2fitman_sup.cpp:579 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [300])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:171 D.6444 ] [171])
            (nil))))
(insn 472 471 473 59 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:578 273 {*addsi_1}
     (nil))
;;  succ:       60 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU,DFS_BACK)
;;              58 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 473 472 474 60 107 "" [1 uses])
(note 474 473 476 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 476 474 477 60 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:578 7 {*cmpsi_1}
     (nil))
(jump_insn 477 476 938 60 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) sim2fitman_sup.cpp:578 612 {*jcc_1}
     (nil)
 -> 475)
;;  succ:       59
;;              61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 938 477 939 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(jump_insn 939 938 940 61 (set (pc)
        (label_ref 542)) 650 {jump}
     (nil)
 -> 542)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 940 939 481)
;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 481 940 482 62 106 "" [1 uses])
(note 482 481 483 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 941 62 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:583 89 {*movsi_internal}
     (nil))
(jump_insn 941 483 942 62 (set (pc)
        (label_ref 503)) sim2fitman_sup.cpp:583 650 {jump}
     (nil)
 -> 503)
;;  succ:       64 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 942 941 505)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 172 173 174 175 176 177 178 302 303 304 305 306
(code_label 505 942 486 63 110 "" [1 uses])
(note 486 505 487 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 63 (set (reg:SI 0 ax [orig:172 D.6443 ] [172])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:584 89 {*movsi_internal}
     (nil))
(insn 488 487 489 63 (set (reg:SI 1 dx [302])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:584 89 {*movsi_internal}
     (nil))
(insn 489 488 490 63 (parallel [
            (set (reg:SI 1 dx [orig:173 D.6443 ] [173])
                (plus:SI (reg:SI 1 dx [302])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:584 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [302])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))
(insn 490 489 491 63 (parallel [
            (set (reg:SI 0 ax [orig:174 D.6443 ] [174])
                (plus:SI (reg:SI 0 ax [orig:172 D.6443 ] [172])
                    (reg:SI 1 dx [orig:173 D.6443 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:584 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:173 D.6443 ] [173])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:172 D.6443 ] [172])
            (nil))))
(insn 491 490 492 63 (set (reg/f:DI 1 dx [303])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:584 87 {*movdi_internal_rex64}
     (nil))
(insn 492 491 493 63 (set (reg:DI 0 ax [304])
        (sign_extend:DI (reg:SI 0 ax [orig:174 D.6443 ] [174]))) sim2fitman_sup.cpp:584 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:174 D.6443 ] [174])
        (nil)))
(insn 493 492 494 63 (set (reg:QI 0 ax [orig:175 D.6444 ] [175])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [303])
                    (reg:DI 0 ax [304]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:584 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [304])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [303])
            (nil))))
(insn 494 493 495 63 (set (reg:SI 0 ax [orig:176 D.6443 ] [176])
        (sign_extend:SI (reg:QI 0 ax [orig:175 D.6444 ] [175]))) sim2fitman_sup.cpp:584 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:175 D.6444 ] [175])
        (nil)))
(insn 495 494 496 63 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:176 D.6443 ] [176])) sim2fitman_sup.cpp:584 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:176 D.6443 ] [176])
        (nil)))
(call_insn/i 496 495 497 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:584 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 497 496 498 63 (set (reg:SI 0 ax [orig:177 D.6443 ] [177])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:584 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 498 497 499 63 (set (reg:QI 1 dx [orig:178 D.6444 ] [178])
        (reg:QI 0 ax [orig:177 D.6443 ] [177])) sim2fitman_sup.cpp:584 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:177 D.6443 ] [177])
        (nil)))
(insn 499 498 500 63 (set (reg:SI 0 ax [306])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:584 89 {*movsi_internal}
     (nil))
(insn 500 499 501 63 (set (reg:DI 0 ax [305])
        (sign_extend:DI (reg:SI 0 ax [306]))) sim2fitman_sup.cpp:584 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [306])
        (nil)))
(insn 501 500 502 63 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [305]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:178 D.6444 ] [178])) sim2fitman_sup.cpp:584 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [305])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:178 D.6444 ] [178])
            (nil))))
(insn 502 501 503 63 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:583 273 {*addsi_1}
     (nil))
;;  succ:       64 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU,DFS_BACK)
;;              62 [100.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 503 502 504 64 109 "" [1 uses])
(note 504 503 506 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 506 504 507 64 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 3 [0x3]))) sim2fitman_sup.cpp:583 7 {*cmpsi_1}
     (nil))
(jump_insn 507 506 943 64 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 505)
            (pc))) sim2fitman_sup.cpp:583 612 {*jcc_1}
     (nil)
 -> 505)
;;  succ:       63
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 943 507 944 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 944 943 945 65 (set (pc)
        (label_ref 542)) 650 {jump}
     (nil)
 -> 542)
;;  succ:       70 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 945 944 511)
;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 179
(code_label 511 945 512 66 105 "" [1 uses])
(note 512 511 513 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 66 (set (reg:SI 0 ax [orig:179 D.6443 ] [179])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:588 89 {*movsi_internal}
     (nil))
(insn 514 513 515 66 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:179 D.6443 ] [179])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:588 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:179 D.6443 ] [179])
        (nil)))
(jump_insn 515 514 516 66 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 542)
            (pc))) sim2fitman_sup.cpp:588 612 {*jcc_1}
     (nil)
 -> 542)
;;  succ:       67 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 516 515 517 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 946 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:589 89 {*movsi_internal}
     (nil))
(jump_insn 946 517 947 67 (set (pc)
        (label_ref 537)) sim2fitman_sup.cpp:589 650 {jump}
     (nil)
 -> 537)
;;  succ:       69 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 947 946 539)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 180 181 182 183 184 185 186 307 308 309 310 311
(code_label 539 947 520 68 112 "" [1 uses])
(note 520 539 521 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 68 (set (reg:SI 0 ax [orig:180 D.6443 ] [180])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:590 89 {*movsi_internal}
     (nil))
(insn 522 521 523 68 (set (reg:SI 1 dx [307])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:590 89 {*movsi_internal}
     (nil))
(insn 523 522 524 68 (parallel [
            (set (reg:SI 1 dx [orig:181 D.6443 ] [181])
                (plus:SI (reg:SI 1 dx [307])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:590 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [307])
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (const_int -2 [0xfffffffffffffffe]))
            (nil))))
(insn 524 523 525 68 (parallel [
            (set (reg:SI 0 ax [orig:182 D.6443 ] [182])
                (plus:SI (reg:SI 0 ax [orig:180 D.6443 ] [180])
                    (reg:SI 1 dx [orig:181 D.6443 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:590 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:181 D.6443 ] [181])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:180 D.6443 ] [180])
            (nil))))
(insn 525 524 526 68 (set (reg/f:DI 1 dx [308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:590 87 {*movdi_internal_rex64}
     (nil))
(insn 526 525 527 68 (set (reg:DI 0 ax [309])
        (sign_extend:DI (reg:SI 0 ax [orig:182 D.6443 ] [182]))) sim2fitman_sup.cpp:590 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:182 D.6443 ] [182])
        (nil)))
(insn 527 526 528 68 (set (reg:QI 0 ax [orig:183 D.6444 ] [183])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 1 dx [308])
                    (reg:DI 0 ax [309]))
                (const_int 768 [0x300])) [0 io_filenames_24(D)->out S1 A8])) sim2fitman_sup.cpp:590 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [309])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [308])
            (nil))))
(insn 528 527 529 68 (set (reg:SI 0 ax [orig:184 D.6443 ] [184])
        (sign_extend:SI (reg:QI 0 ax [orig:183 D.6444 ] [183]))) sim2fitman_sup.cpp:590 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:183 D.6444 ] [183])
        (nil)))
(insn 529 528 530 68 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:184 D.6443 ] [184])) sim2fitman_sup.cpp:590 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:184 D.6443 ] [184])
        (nil)))
(call_insn/i 530 529 531 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("tolower") [flags 0x41]  <function_decl 0x7f7e9f1ce900 tolower>) [0 __builtin_tolower S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:590 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 531 530 532 68 (set (reg:SI 0 ax [orig:185 D.6443 ] [185])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:590 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 532 531 533 68 (set (reg:QI 1 dx [orig:186 D.6444 ] [186])
        (reg:QI 0 ax [orig:185 D.6443 ] [185])) sim2fitman_sup.cpp:590 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:185 D.6443 ] [185])
        (nil)))
(insn 533 532 534 68 (set (reg:SI 0 ax [311])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:590 89 {*movsi_internal}
     (nil))
(insn 534 533 535 68 (set (reg:DI 0 ax [310])
        (sign_extend:DI (reg:SI 0 ax [311]))) sim2fitman_sup.cpp:590 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [311])
        (nil)))
(insn 535 534 536 68 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 6 bp)
                    (reg:DI 0 ax [310]))
                (const_int -16 [0xfffffffffffffff0])) [0 uns_suf S1 A8])
        (reg:QI 1 dx [orig:186 D.6444 ] [186])) sim2fitman_sup.cpp:590 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [310])
        (expr_list:REG_DEAD (reg:QI 1 dx [orig:186 D.6444 ] [186])
            (nil))))
(insn 536 535 537 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:589 273 {*addsi_1}
     (nil))
;;  succ:       69 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU,DFS_BACK)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 537 536 538 69 111 "" [1 uses])
(note 538 537 540 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 540 538 541 69 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:589 7 {*cmpsi_1}
     (nil))
(jump_insn 541 540 542 69 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) sim2fitman_sup.cpp:589 612 {*jcc_1}
     (nil)
 -> 539)
;;  succ:       68
;;              70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51
;;              55 [100.0%] 
;;              66
;;              69 (FALLTHRU)
;;              61 [100.0%] 
;;              50 [100.0%] 
;;              46 [100.0%] 
;;              65 [100.0%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 542 541 543 70 100 "" [7 uses])
(note 543 542 544 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:595 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 545 544 546 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 549)
            (pc))) sim2fitman_sup.cpp:595 612 {*jcc_1}
     (nil)
 -> 549)
;;  succ:       72
;;              71 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 546 545 547 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:595 7 {*cmpsi_1}
     (nil))
(jump_insn 548 547 549 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) sim2fitman_sup.cpp:595 612 {*jcc_1}
     (nil)
 -> 709)
;;  succ:       72 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70
;;              71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 187 312
(code_label 549 548 550 72 113 "" [1 uses])
(note 550 549 551 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 72 (parallel [
            (set (reg:DI 0 ax [312])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:598 274 {*adddi_1}
     (nil))
(insn 552 551 553 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f7e9ed152f8 *.LC52>)) sim2fitman_sup.cpp:598 87 {*movdi_internal_rex64}
     (nil))
(insn 553 552 554 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [312])) sim2fitman_sup.cpp:598 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [312])
        (nil)))
(call_insn/i 554 553 555 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:598 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 555 554 556 72 (set (reg:SI 0 ax [orig:187 D.6443 ] [187])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:598 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 556 555 557 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:187 D.6443 ] [187])
            (const_int 0 [0]))) sim2fitman_sup.cpp:598 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:187 D.6443 ] [187])
        (nil)))
(jump_insn 557 556 558 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) sim2fitman_sup.cpp:598 612 {*jcc_1}
     (nil)
 -> 617)
;;  succ:       73 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 188 313
(note 558 557 559 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 559 558 560 73 (parallel [
            (set (reg:DI 0 ax [313])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:599 274 {*adddi_1}
     (nil))
(insn 560 559 561 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f7e9ed15390 *.LC53>)) sim2fitman_sup.cpp:599 87 {*movdi_internal_rex64}
     (nil))
(insn 561 560 562 73 (set (reg:DI 5 di)
        (reg:DI 0 ax [313])) sim2fitman_sup.cpp:599 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [313])
        (nil)))
(call_insn/i 562 561 563 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:599 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 563 562 564 73 (set (reg:SI 0 ax [orig:188 D.6443 ] [188])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:599 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 564 563 565 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:188 D.6443 ] [188])
            (const_int 0 [0]))) sim2fitman_sup.cpp:599 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:188 D.6443 ] [188])
        (nil)))
(jump_insn 565 564 566 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 579)
            (pc))) sim2fitman_sup.cpp:599 612 {*jcc_1}
     (nil)
 -> 579)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 189 190 314 315 318 319
(note 566 565 567 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 74 (set (reg:SI 0 ax [orig:189 D.6443 ] [189])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:600 89 {*movsi_internal}
     (nil))
(insn 568 567 569 74 (parallel [
            (set (reg:SI 0 ax [orig:190 D.6443 ] [190])
                (plus:SI (reg:SI 0 ax [orig:189 D.6443 ] [189])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:189 D.6443 ] [189])
        (nil)))
(insn 569 568 570 74 (set (reg:DI 0 ax [314])
        (sign_extend:DI (reg:SI 0 ax [orig:190 D.6443 ] [190]))) sim2fitman_sup.cpp:600 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:190 D.6443 ] [190])
        (nil)))
(insn 570 569 574 74 (parallel [
            (set (reg:DI 1 dx [315])
                (plus:DI (reg:DI 0 ax [314])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [314])
        (nil)))
(insn 574 570 575 74 (set (reg/f:DI 0 ax [319])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:600 87 {*movdi_internal_rex64}
     (nil))
(insn 575 574 576 74 (parallel [
            (set (reg:DI 0 ax [318])
                (plus:DI (reg/f:DI 0 ax [319])
                    (reg:DI 1 dx [315])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:600 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [319])
        (expr_list:REG_DEAD (reg:DI 1 dx [315])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [315]))
                (nil)))))
(insn 576 575 948 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [318])) sim2fitman_sup.cpp:600 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [318])
        (nil)))
(jump_insn 948 576 949 74 (set (pc)
        (label_ref 672)) 650 {jump}
     (nil)
 -> 672)
;;  succ:       83 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 949 948 579)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 191 320
(code_label 579 949 580 75 116 "" [1 uses])
(note 580 579 581 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 582 75 (parallel [
            (set (reg:DI 0 ax [320])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:601 274 {*adddi_1}
     (nil))
(insn 582 581 583 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f7e9ed15428 *.LC54>)) sim2fitman_sup.cpp:601 87 {*movdi_internal_rex64}
     (nil))
(insn 583 582 584 75 (set (reg:DI 5 di)
        (reg:DI 0 ax [320])) sim2fitman_sup.cpp:601 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [320])
        (nil)))
(call_insn/i 584 583 585 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:601 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 585 584 586 75 (set (reg:SI 0 ax [orig:191 D.6443 ] [191])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:601 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 586 585 587 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:191 D.6443 ] [191])
            (const_int 0 [0]))) sim2fitman_sup.cpp:601 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:191 D.6443 ] [191])
        (nil)))
(jump_insn 587 586 588 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 601)
            (pc))) sim2fitman_sup.cpp:601 612 {*jcc_1}
     (nil)
 -> 601)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 192 193 321 322 325 326
(note 588 587 589 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 76 (set (reg:SI 0 ax [orig:192 D.6443 ] [192])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:602 89 {*movsi_internal}
     (nil))
(insn 590 589 591 76 (parallel [
            (set (reg:SI 0 ax [orig:193 D.6443 ] [193])
                (plus:SI (reg:SI 0 ax [orig:192 D.6443 ] [192])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:192 D.6443 ] [192])
        (nil)))
(insn 591 590 592 76 (set (reg:DI 0 ax [321])
        (sign_extend:DI (reg:SI 0 ax [orig:193 D.6443 ] [193]))) sim2fitman_sup.cpp:602 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:193 D.6443 ] [193])
        (nil)))
(insn 592 591 596 76 (parallel [
            (set (reg:DI 1 dx [322])
                (plus:DI (reg:DI 0 ax [321])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [321])
        (nil)))
(insn 596 592 597 76 (set (reg/f:DI 0 ax [326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:602 87 {*movdi_internal_rex64}
     (nil))
(insn 597 596 598 76 (parallel [
            (set (reg:DI 0 ax [325])
                (plus:DI (reg/f:DI 0 ax [326])
                    (reg:DI 1 dx [322])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:602 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [326])
        (expr_list:REG_DEAD (reg:DI 1 dx [322])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [322]))
                (nil)))))
(insn 598 597 950 76 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [325])) sim2fitman_sup.cpp:602 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [325])
        (nil)))
(jump_insn 950 598 951 76 (set (pc)
        (label_ref 672)) 650 {jump}
     (nil)
 -> 672)
;;  succ:       83 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 951 950 601)
;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 194 195 327 328 331 332
(code_label 601 951 602 77 118 "" [1 uses])
(note 602 601 603 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 77 (set (reg:SI 0 ax [orig:194 D.6443 ] [194])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:604 89 {*movsi_internal}
     (nil))
(insn 604 603 605 77 (parallel [
            (set (reg:SI 0 ax [orig:195 D.6443 ] [195])
                (plus:SI (reg:SI 0 ax [orig:194 D.6443 ] [194])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:194 D.6443 ] [194])
        (nil)))
(insn 605 604 606 77 (set (reg:DI 0 ax [327])
        (sign_extend:DI (reg:SI 0 ax [orig:195 D.6443 ] [195]))) sim2fitman_sup.cpp:604 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:195 D.6443 ] [195])
        (nil)))
(insn 606 605 610 77 (parallel [
            (set (reg:DI 1 dx [328])
                (plus:DI (reg:DI 0 ax [327])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [327])
        (nil)))
(insn 610 606 611 77 (set (reg/f:DI 0 ax [332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:604 87 {*movdi_internal_rex64}
     (nil))
(insn 611 610 612 77 (parallel [
            (set (reg:DI 0 ax [331])
                (plus:DI (reg/f:DI 0 ax [332])
                    (reg:DI 1 dx [328])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:604 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [332])
        (expr_list:REG_DEAD (reg:DI 1 dx [328])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [328]))
                (nil)))))
(insn 612 611 952 77 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [331])) sim2fitman_sup.cpp:604 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [331])
        (nil)))
(jump_insn 952 612 953 77 (set (pc)
        (label_ref 672)) 650 {jump}
     (nil)
 -> 672)
;;  succ:       83 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 953 952 617)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 196 333
(code_label 617 953 618 78 115 "" [1 uses])
(note 618 617 619 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 78 (parallel [
            (set (reg:DI 0 ax [333])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:607 274 {*adddi_1}
     (nil))
(insn 620 619 621 78 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f7e9ed15390 *.LC53>)) sim2fitman_sup.cpp:607 87 {*movdi_internal_rex64}
     (nil))
(insn 621 620 622 78 (set (reg:DI 5 di)
        (reg:DI 0 ax [333])) sim2fitman_sup.cpp:607 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [333])
        (nil)))
(call_insn/i 622 621 623 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:607 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 623 622 624 78 (set (reg:SI 0 ax [orig:196 D.6443 ] [196])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:607 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 624 623 625 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:196 D.6443 ] [196])
            (const_int 0 [0]))) sim2fitman_sup.cpp:607 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:196 D.6443 ] [196])
        (nil)))
(jump_insn 625 624 626 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 639)
            (pc))) sim2fitman_sup.cpp:607 612 {*jcc_1}
     (nil)
 -> 639)
;;  succ:       79 (FALLTHRU)
;;              80
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 197 198 334 335 338 339
(note 626 625 627 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 79 (set (reg:SI 0 ax [orig:197 D.6443 ] [197])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:608 89 {*movsi_internal}
     (nil))
(insn 628 627 629 79 (parallel [
            (set (reg:SI 0 ax [orig:198 D.6443 ] [198])
                (plus:SI (reg:SI 0 ax [orig:197 D.6443 ] [197])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:197 D.6443 ] [197])
        (nil)))
(insn 629 628 630 79 (set (reg:DI 0 ax [334])
        (sign_extend:DI (reg:SI 0 ax [orig:198 D.6443 ] [198]))) sim2fitman_sup.cpp:608 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:198 D.6443 ] [198])
        (nil)))
(insn 630 629 634 79 (parallel [
            (set (reg:DI 1 dx [335])
                (plus:DI (reg:DI 0 ax [334])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [334])
        (nil)))
(insn 634 630 635 79 (set (reg/f:DI 0 ax [339])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:608 87 {*movdi_internal_rex64}
     (nil))
(insn 635 634 636 79 (parallel [
            (set (reg:DI 0 ax [338])
                (plus:DI (reg/f:DI 0 ax [339])
                    (reg:DI 1 dx [335])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:608 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [339])
        (expr_list:REG_DEAD (reg:DI 1 dx [335])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [335]))
                (nil)))))
(insn 636 635 954 79 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [338])) sim2fitman_sup.cpp:608 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [338])
        (nil)))
(jump_insn 954 636 955 79 (set (pc)
        (label_ref 672)) 650 {jump}
     (nil)
 -> 672)
;;  succ:       83 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 955 954 639)
;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 199 340
(code_label 639 955 640 80 120 "" [1 uses])
(note 640 639 641 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 80 (parallel [
            (set (reg:DI 0 ax [340])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:609 274 {*adddi_1}
     (nil))
(insn 642 641 643 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f7e9ed15428 *.LC54>)) sim2fitman_sup.cpp:609 87 {*movdi_internal_rex64}
     (nil))
(insn 643 642 644 80 (set (reg:DI 5 di)
        (reg:DI 0 ax [340])) sim2fitman_sup.cpp:609 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [340])
        (nil)))
(call_insn/i 644 643 645 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:609 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 645 644 646 80 (set (reg:SI 0 ax [orig:199 D.6443 ] [199])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:609 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 646 645 647 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:199 D.6443 ] [199])
            (const_int 0 [0]))) sim2fitman_sup.cpp:609 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:199 D.6443 ] [199])
        (nil)))
(jump_insn 647 646 648 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 661)
            (pc))) sim2fitman_sup.cpp:609 612 {*jcc_1}
     (nil)
 -> 661)
;;  succ:       81 (FALLTHRU)
;;              82
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 200 201 341 342 345 346
(note 648 647 649 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 81 (set (reg:SI 0 ax [orig:200 D.6443 ] [200])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:610 89 {*movsi_internal}
     (nil))
(insn 650 649 651 81 (parallel [
            (set (reg:SI 0 ax [orig:201 D.6443 ] [201])
                (plus:SI (reg:SI 0 ax [orig:200 D.6443 ] [200])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:200 D.6443 ] [200])
        (nil)))
(insn 651 650 652 81 (set (reg:DI 0 ax [341])
        (sign_extend:DI (reg:SI 0 ax [orig:201 D.6443 ] [201]))) sim2fitman_sup.cpp:610 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:201 D.6443 ] [201])
        (nil)))
(insn 652 651 656 81 (parallel [
            (set (reg:DI 1 dx [342])
                (plus:DI (reg:DI 0 ax [341])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [341])
        (nil)))
(insn 656 652 657 81 (set (reg/f:DI 0 ax [346])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:610 87 {*movdi_internal_rex64}
     (nil))
(insn 657 656 658 81 (parallel [
            (set (reg:DI 0 ax [345])
                (plus:DI (reg/f:DI 0 ax [346])
                    (reg:DI 1 dx [342])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:610 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [346])
        (expr_list:REG_DEAD (reg:DI 1 dx [342])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [342]))
                (nil)))))
(insn 658 657 956 81 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [345])) sim2fitman_sup.cpp:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [345])
        (nil)))
(jump_insn 956 658 957 81 (set (pc)
        (label_ref 672)) 650 {jump}
     (nil)
 -> 672)
;;  succ:       83 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 957 956 661)
;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 202 347 348 351 352
(code_label 661 957 662 82 121 "" [1 uses])
(note 662 661 663 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 82 (set (reg:SI 0 ax [orig:202 D.6443 ] [202])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 filename_length+0 S4 A64])) sim2fitman_sup.cpp:612 89 {*movsi_internal}
     (nil))
(insn 664 663 665 82 (set (reg:DI 0 ax [347])
        (sign_extend:DI (reg:SI 0 ax [orig:202 D.6443 ] [202]))) sim2fitman_sup.cpp:612 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:202 D.6443 ] [202])
        (nil)))
(insn 665 664 669 82 (parallel [
            (set (reg:DI 1 dx [348])
                (plus:DI (reg:DI 0 ax [347])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:612 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [347])
        (nil)))
(insn 669 665 670 82 (set (reg/f:DI 0 ax [352])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:612 87 {*movdi_internal_rex64}
     (nil))
(insn 670 669 671 82 (parallel [
            (set (reg:DI 0 ax [351])
                (plus:DI (reg/f:DI 0 ax [352])
                    (reg:DI 1 dx [348])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:612 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [352])
        (expr_list:REG_DEAD (reg:DI 1 dx [348])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [348]))
                (nil)))))
(insn 671 670 672 82 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [351])) sim2fitman_sup.cpp:612 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [351])
        (nil)))
;;  succ:       83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 [100.0%] 
;;              77 [100.0%] 
;;              79 [100.0%] 
;;              82 (FALLTHRU)
;;              74 [100.0%] 
;;              81 [100.0%] 
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 203 353 354
(code_label 672 671 673 83 119 "" [5 uses])
(note 673 672 674 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 83 (set (reg/f:DI 0 ax [353])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])) sim2fitman_sup.cpp:616 87 {*movdi_internal_rex64}
     (nil))
(insn 675 674 676 83 (set (mem:SI (reg/f:DI 0 ax [353]) [0 MEM[(void *)fname_suffix_2]+0 S4 A8])
        (const_int 1680765791 [0x642e735f])) sim2fitman_sup.cpp:616 89 {*movsi_internal}
     (nil))
(insn 676 675 677 83 (set (mem:HI (plus:DI (reg/f:DI 0 ax [353])
                (const_int 4 [0x4])) [0 MEM[(void *)fname_suffix_2]+4 S2 A8])
        (const_int 29793 [0x7461])) sim2fitman_sup.cpp:616 90 {*movhi_internal}
     (nil))
(insn 677 676 678 83 (set (mem:QI (plus:DI (reg/f:DI 0 ax [353])
                (const_int 6 [0x6])) [0 MEM[(void *)fname_suffix_2]+6 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:616 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [353])
        (nil)))
(insn 678 677 679 83 (set (reg:QI 0 ax [354])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A8])) sim2fitman_sup.cpp:618 91 {*movqi_internal}
     (nil))
(insn 679 678 680 83 (parallel [
            (set (reg:QI 0 ax [orig:203 D.6445 ] [203])
                (xor:QI (reg:QI 0 ax [354])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:618 417 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [354])
        (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                        (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A8])
                (const_int 1 [0x1]))
            (nil))))
(insn 680 679 681 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:203 D.6445 ] [203])
            (const_int 0 [0]))) sim2fitman_sup.cpp:618 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:203 D.6445 ] [203])
        (nil)))
(jump_insn 681 680 682 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 701)
            (pc))) sim2fitman_sup.cpp:618 612 {*jcc_1}
     (nil)
 -> 701)
;;  succ:       84 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 204 205 206 355
(note 682 681 683 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 683 682 684 84 (set (reg/f:DI 0 ax [355])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:620 87 {*movdi_internal_rex64}
     (nil))
(insn 684 683 685 84 (parallel [
            (set (reg/f:DI 0 ax [orig:204 D.6441 ] [204])
                (plus:DI (reg/f:DI 0 ax [355])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:620 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [355])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 512 [0x200]))
            (nil))))
(insn 685 684 686 84 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f7e9ed154c0 *.LC55>)) sim2fitman_sup.cpp:620 87 {*movdi_internal_rex64}
     (nil))
(insn 686 685 687 84 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:204 D.6441 ] [204])) sim2fitman_sup.cpp:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:204 D.6441 ] [204])
        (nil)))
(call_insn 687 686 688 84 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7e9ef73700 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 688 687 689 84 (set (reg/f:DI 0 ax [orig:205 D.6446 ] [205])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 689 688 690 84 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:205 D.6446 ] [205])) sim2fitman_sup.cpp:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:205 D.6446 ] [205])
        (nil)))
(insn 690 689 691 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 4 {*cmpdi_ccno_1}
     (nil))
(insn 691 690 692 84 (set (reg:QI 0 ax [orig:206 retval.6 ] [206])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 608 {*setcc_qi}
     (nil))
(insn 692 691 693 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:206 retval.6 ] [206])
            (const_int 0 [0]))) sim2fitman_sup.cpp:620 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:206 retval.6 ] [206])
        (nil)))
(jump_insn 693 692 694 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 701)
            (pc))) sim2fitman_sup.cpp:620 612 {*jcc_1}
     (nil)
 -> 701)
;;  succ:       85 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 207 356 357
(note 694 693 695 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 695 694 696 85 (set (reg/f:DI 0 ax [356])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:624 87 {*movdi_internal_rex64}
     (nil))
(insn 696 695 697 85 (parallel [
            (set (reg/f:DI 1 dx [orig:207 D.6441 ] [207])
                (plus:DI (reg/f:DI 0 ax [356])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:624 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [356])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 512 [0x200]))
            (nil))))
(insn 697 696 698 85 (set (reg:SI 0 ax [357])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])) sim2fitman_sup.cpp:624 89 {*movsi_internal}
     (nil))
(insn 698 697 699 85 (set (reg:SI 4 si)
        (reg:SI 0 ax [357])) sim2fitman_sup.cpp:624 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [357])
        (nil)))
(insn 699 698 700 85 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:207 D.6441 ] [207])) sim2fitman_sup.cpp:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:207 D.6441 ] [207])
        (nil)))
(call_insn 700 699 701 85 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_03Pci") [flags 0x41]  <function_decl 0x7f7e9f0c2c00 cond_exit_03>) [0 cond_exit_03 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:624 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
;;  succ:       86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83
;;              85 (FALLTHRU)
;;              84
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 701 700 702 86 122 "" [2 uses])
(note 702 701 703 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:628 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 704 703 705 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 709)
            (pc))) sim2fitman_sup.cpp:628 612 {*jcc_1}
     (nil)
 -> 709)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 358
(note 705 704 706 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 706 705 707 87 (set (reg:DI 0 ax [358])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])) sim2fitman_sup.cpp:629 87 {*movdi_internal_rex64}
     (nil))
(insn 707 706 708 87 (set (reg:DI 5 di)
        (reg:DI 0 ax [358])) sim2fitman_sup.cpp:629 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [358])
        (nil)))
(call_insn 708 707 709 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7e9ef73300 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:629 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       88 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71
;;              86
;;              87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 709 708 710 88 114 "" [2 uses])
(note 710 709 711 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 0 [0]))) sim2fitman_sup.cpp:633 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 712 711 713 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 716)
            (pc))) sim2fitman_sup.cpp:633 612 {*jcc_1}
     (nil)
 -> 716)
;;  succ:       90
;;              89 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 713 712 714 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:633 7 {*cmpsi_1}
     (nil))
(jump_insn 715 714 716 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 881)
            (pc))) sim2fitman_sup.cpp:633 612 {*jcc_1}
     (nil)
 -> 881)
;;  succ:       90 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88
;;              89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 208 359
(code_label 716 715 717 90 123 "" [1 uses])
(note 717 716 718 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 90 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:635 87 {*movdi_internal_rex64}
     (nil))
(insn 719 718 720 90 (parallel [
            (set (reg:DI 0 ax [359])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:637 274 {*adddi_1}
     (nil))
(insn 720 719 721 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC52") [flags 0x2]  <var_decl 0x7f7e9ed152f8 *.LC52>)) sim2fitman_sup.cpp:637 87 {*movdi_internal_rex64}
     (nil))
(insn 721 720 722 90 (set (reg:DI 5 di)
        (reg:DI 0 ax [359])) sim2fitman_sup.cpp:637 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [359])
        (nil)))
(call_insn/i 722 721 723 90 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:637 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 723 722 724 90 (set (reg:SI 0 ax [orig:208 D.6443 ] [208])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:637 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 724 723 725 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:208 D.6443 ] [208])
            (const_int 0 [0]))) sim2fitman_sup.cpp:637 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:208 D.6443 ] [208])
        (nil)))
(jump_insn 725 724 726 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) sim2fitman_sup.cpp:637 612 {*jcc_1}
     (nil)
 -> 785)
;;  succ:       91 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 209 360
(note 726 725 727 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 727 726 728 91 (parallel [
            (set (reg:DI 0 ax [360])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:638 274 {*adddi_1}
     (nil))
(insn 728 727 729 91 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f7e9ed15390 *.LC53>)) sim2fitman_sup.cpp:638 87 {*movdi_internal_rex64}
     (nil))
(insn 729 728 730 91 (set (reg:DI 5 di)
        (reg:DI 0 ax [360])) sim2fitman_sup.cpp:638 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [360])
        (nil)))
(call_insn/i 730 729 731 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:638 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 731 730 732 91 (set (reg:SI 0 ax [orig:209 D.6443 ] [209])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:638 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 732 731 733 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:209 D.6443 ] [209])
            (const_int 0 [0]))) sim2fitman_sup.cpp:638 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:209 D.6443 ] [209])
        (nil)))
(jump_insn 733 732 734 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 747)
            (pc))) sim2fitman_sup.cpp:638 612 {*jcc_1}
     (nil)
 -> 747)
;;  succ:       92 (FALLTHRU)
;;              93
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 210 211 361 362 365 366
(note 734 733 735 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 736 92 (set (reg:SI 0 ax [orig:210 D.6443 ] [210])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:639 89 {*movsi_internal}
     (nil))
(insn 736 735 737 92 (parallel [
            (set (reg:SI 0 ax [orig:211 D.6443 ] [211])
                (plus:SI (reg:SI 0 ax [orig:210 D.6443 ] [210])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:210 D.6443 ] [210])
        (nil)))
(insn 737 736 738 92 (set (reg:DI 0 ax [361])
        (sign_extend:DI (reg:SI 0 ax [orig:211 D.6443 ] [211]))) sim2fitman_sup.cpp:639 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:211 D.6443 ] [211])
        (nil)))
(insn 738 737 742 92 (parallel [
            (set (reg:DI 1 dx [362])
                (plus:DI (reg:DI 0 ax [361])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [361])
        (nil)))
(insn 742 738 743 92 (set (reg/f:DI 0 ax [366])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:639 87 {*movdi_internal_rex64}
     (nil))
(insn 743 742 744 92 (parallel [
            (set (reg:DI 0 ax [365])
                (plus:DI (reg/f:DI 0 ax [366])
                    (reg:DI 1 dx [362])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:639 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [366])
        (expr_list:REG_DEAD (reg:DI 1 dx [362])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [362]))
                (nil)))))
(insn 744 743 958 92 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [365])) sim2fitman_sup.cpp:639 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [365])
        (nil)))
(jump_insn 958 744 959 92 (set (pc)
        (label_ref 840)) 650 {jump}
     (nil)
 -> 840)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 959 958 747)
;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 212 367
(code_label 747 959 748 93 126 "" [1 uses])
(note 748 747 749 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 749 748 750 93 (parallel [
            (set (reg:DI 0 ax [367])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:640 274 {*adddi_1}
     (nil))
(insn 750 749 751 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f7e9ed15428 *.LC54>)) sim2fitman_sup.cpp:640 87 {*movdi_internal_rex64}
     (nil))
(insn 751 750 752 93 (set (reg:DI 5 di)
        (reg:DI 0 ax [367])) sim2fitman_sup.cpp:640 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [367])
        (nil)))
(call_insn/i 752 751 753 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:640 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 753 752 754 93 (set (reg:SI 0 ax [orig:212 D.6443 ] [212])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:640 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 754 753 755 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:212 D.6443 ] [212])
            (const_int 0 [0]))) sim2fitman_sup.cpp:640 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:212 D.6443 ] [212])
        (nil)))
(jump_insn 755 754 756 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 769)
            (pc))) sim2fitman_sup.cpp:640 612 {*jcc_1}
     (nil)
 -> 769)
;;  succ:       94 (FALLTHRU)
;;              95
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 213 214 368 369 372 373
(note 756 755 757 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 94 (set (reg:SI 0 ax [orig:213 D.6443 ] [213])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:641 89 {*movsi_internal}
     (nil))
(insn 758 757 759 94 (parallel [
            (set (reg:SI 0 ax [orig:214 D.6443 ] [214])
                (plus:SI (reg:SI 0 ax [orig:213 D.6443 ] [213])
                    (const_int -6 [0xfffffffffffffffa])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:213 D.6443 ] [213])
        (nil)))
(insn 759 758 760 94 (set (reg:DI 0 ax [368])
        (sign_extend:DI (reg:SI 0 ax [orig:214 D.6443 ] [214]))) sim2fitman_sup.cpp:641 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:214 D.6443 ] [214])
        (nil)))
(insn 760 759 764 94 (parallel [
            (set (reg:DI 1 dx [369])
                (plus:DI (reg:DI 0 ax [368])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [368])
        (nil)))
(insn 764 760 765 94 (set (reg/f:DI 0 ax [373])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:641 87 {*movdi_internal_rex64}
     (nil))
(insn 765 764 766 94 (parallel [
            (set (reg:DI 0 ax [372])
                (plus:DI (reg/f:DI 0 ax [373])
                    (reg:DI 1 dx [369])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:641 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [373])
        (expr_list:REG_DEAD (reg:DI 1 dx [369])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [369]))
                (nil)))))
(insn 766 765 960 94 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [372])) sim2fitman_sup.cpp:641 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [372])
        (nil)))
(jump_insn 960 766 961 94 (set (pc)
        (label_ref 840)) 650 {jump}
     (nil)
 -> 840)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 961 960 769)
;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 215 216 374 375 378 379
(code_label 769 961 770 95 128 "" [1 uses])
(note 770 769 771 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 95 (set (reg:SI 0 ax [orig:215 D.6443 ] [215])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:643 89 {*movsi_internal}
     (nil))
(insn 772 771 773 95 (parallel [
            (set (reg:SI 0 ax [orig:216 D.6443 ] [216])
                (plus:SI (reg:SI 0 ax [orig:215 D.6443 ] [215])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:215 D.6443 ] [215])
        (nil)))
(insn 773 772 774 95 (set (reg:DI 0 ax [374])
        (sign_extend:DI (reg:SI 0 ax [orig:216 D.6443 ] [216]))) sim2fitman_sup.cpp:643 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:216 D.6443 ] [216])
        (nil)))
(insn 774 773 778 95 (parallel [
            (set (reg:DI 1 dx [375])
                (plus:DI (reg:DI 0 ax [374])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [374])
        (nil)))
(insn 778 774 779 95 (set (reg/f:DI 0 ax [379])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:643 87 {*movdi_internal_rex64}
     (nil))
(insn 779 778 780 95 (parallel [
            (set (reg:DI 0 ax [378])
                (plus:DI (reg/f:DI 0 ax [379])
                    (reg:DI 1 dx [375])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:643 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [379])
        (expr_list:REG_DEAD (reg:DI 1 dx [375])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [375]))
                (nil)))))
(insn 780 779 962 95 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [378])) sim2fitman_sup.cpp:643 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [378])
        (nil)))
(jump_insn 962 780 963 95 (set (pc)
        (label_ref 840)) 650 {jump}
     (nil)
 -> 840)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 963 962 785)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 217 380
(code_label 785 963 786 96 125 "" [1 uses])
(note 786 785 787 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 788 96 (parallel [
            (set (reg:DI 0 ax [380])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:646 274 {*adddi_1}
     (nil))
(insn 788 787 789 96 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC53") [flags 0x2]  <var_decl 0x7f7e9ed15390 *.LC53>)) sim2fitman_sup.cpp:646 87 {*movdi_internal_rex64}
     (nil))
(insn 789 788 790 96 (set (reg:DI 5 di)
        (reg:DI 0 ax [380])) sim2fitman_sup.cpp:646 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [380])
        (nil)))
(call_insn/i 790 789 791 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:646 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 791 790 792 96 (set (reg:SI 0 ax [orig:217 D.6443 ] [217])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:646 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 792 791 793 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:217 D.6443 ] [217])
            (const_int 0 [0]))) sim2fitman_sup.cpp:646 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:217 D.6443 ] [217])
        (nil)))
(jump_insn 793 792 794 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 807)
            (pc))) sim2fitman_sup.cpp:646 612 {*jcc_1}
     (nil)
 -> 807)
;;  succ:       97 (FALLTHRU)
;;              98
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 218 219 381 382 385 386
(note 794 793 795 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 795 794 796 97 (set (reg:SI 0 ax [orig:218 D.6443 ] [218])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:647 89 {*movsi_internal}
     (nil))
(insn 796 795 797 97 (parallel [
            (set (reg:SI 0 ax [orig:219 D.6443 ] [219])
                (plus:SI (reg:SI 0 ax [orig:218 D.6443 ] [218])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:218 D.6443 ] [218])
        (nil)))
(insn 797 796 798 97 (set (reg:DI 0 ax [381])
        (sign_extend:DI (reg:SI 0 ax [orig:219 D.6443 ] [219]))) sim2fitman_sup.cpp:647 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:219 D.6443 ] [219])
        (nil)))
(insn 798 797 802 97 (parallel [
            (set (reg:DI 1 dx [382])
                (plus:DI (reg:DI 0 ax [381])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [381])
        (nil)))
(insn 802 798 803 97 (set (reg/f:DI 0 ax [386])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:647 87 {*movdi_internal_rex64}
     (nil))
(insn 803 802 804 97 (parallel [
            (set (reg:DI 0 ax [385])
                (plus:DI (reg/f:DI 0 ax [386])
                    (reg:DI 1 dx [382])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:647 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [386])
        (expr_list:REG_DEAD (reg:DI 1 dx [382])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [382]))
                (nil)))))
(insn 804 803 964 97 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [385])) sim2fitman_sup.cpp:647 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [385])
        (nil)))
(jump_insn 964 804 965 97 (set (pc)
        (label_ref 840)) 650 {jump}
     (nil)
 -> 840)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 965 964 807)
;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 220 387
(code_label 807 965 808 98 130 "" [1 uses])
(note 808 807 809 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 98 (parallel [
            (set (reg:DI 0 ax [387])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:648 274 {*adddi_1}
     (nil))
(insn 810 809 811 98 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f7e9ed15428 *.LC54>)) sim2fitman_sup.cpp:648 87 {*movdi_internal_rex64}
     (nil))
(insn 811 810 812 98 (set (reg:DI 5 di)
        (reg:DI 0 ax [387])) sim2fitman_sup.cpp:648 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [387])
        (nil)))
(call_insn/i 812 811 813 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f7e9f1b5100 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:648 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 813 812 814 98 (set (reg:SI 0 ax [orig:220 D.6443 ] [220])
        (reg:SI 0 ax)) sim2fitman_sup.cpp:648 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 814 813 815 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:220 D.6443 ] [220])
            (const_int 0 [0]))) sim2fitman_sup.cpp:648 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:220 D.6443 ] [220])
        (nil)))
(jump_insn 815 814 816 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 829)
            (pc))) sim2fitman_sup.cpp:648 612 {*jcc_1}
     (nil)
 -> 829)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 221 222 388 389 392 393
(note 816 815 817 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 99 (set (reg:SI 0 ax [orig:221 D.6443 ] [221])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:649 89 {*movsi_internal}
     (nil))
(insn 818 817 819 99 (parallel [
            (set (reg:SI 0 ax [orig:222 D.6443 ] [222])
                (plus:SI (reg:SI 0 ax [orig:221 D.6443 ] [221])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:221 D.6443 ] [221])
        (nil)))
(insn 819 818 820 99 (set (reg:DI 0 ax [388])
        (sign_extend:DI (reg:SI 0 ax [orig:222 D.6443 ] [222]))) sim2fitman_sup.cpp:649 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:222 D.6443 ] [222])
        (nil)))
(insn 820 819 824 99 (parallel [
            (set (reg:DI 1 dx [389])
                (plus:DI (reg:DI 0 ax [388])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [388])
        (nil)))
(insn 824 820 825 99 (set (reg/f:DI 0 ax [393])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:649 87 {*movdi_internal_rex64}
     (nil))
(insn 825 824 826 99 (parallel [
            (set (reg:DI 0 ax [392])
                (plus:DI (reg/f:DI 0 ax [393])
                    (reg:DI 1 dx [389])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:649 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [393])
        (expr_list:REG_DEAD (reg:DI 1 dx [389])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [389]))
                (nil)))))
(insn 826 825 966 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [392])) sim2fitman_sup.cpp:649 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [392])
        (nil)))
(jump_insn 966 826 967 99 (set (pc)
        (label_ref 840)) 650 {jump}
     (nil)
 -> 840)
;;  succ:       101 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 967 966 829)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 223 394 395 398 399
(code_label 829 967 830 100 131 "" [1 uses])
(note 830 829 831 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 100 (set (reg:SI 0 ax [orig:223 D.6443 ] [223])
        (mem/j/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [0 filename_length+4 S4 A32])) sim2fitman_sup.cpp:651 89 {*movsi_internal}
     (nil))
(insn 832 831 833 100 (set (reg:DI 0 ax [394])
        (sign_extend:DI (reg:SI 0 ax [orig:223 D.6443 ] [223]))) sim2fitman_sup.cpp:651 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:223 D.6443 ] [223])
        (nil)))
(insn 833 832 837 100 (parallel [
            (set (reg:DI 1 dx [395])
                (plus:DI (reg:DI 0 ax [394])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:651 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [394])
        (nil)))
(insn 837 833 838 100 (set (reg/f:DI 0 ax [399])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:651 87 {*movdi_internal_rex64}
     (nil))
(insn 838 837 839 100 (parallel [
            (set (reg:DI 0 ax [398])
                (plus:DI (reg/f:DI 0 ax [399])
                    (reg:DI 1 dx [395])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:651 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [399])
        (expr_list:REG_DEAD (reg:DI 1 dx [395])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                    (reg:DI 1 dx [395]))
                (nil)))))
(insn 839 838 840 100 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])
        (reg:DI 0 ax [398])) sim2fitman_sup.cpp:651 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [398])
        (nil)))
;;  succ:       101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 [100.0%] 
;;              95 [100.0%] 
;;              97 [100.0%] 
;;              100 (FALLTHRU)
;;              92 [100.0%] 
;;              99 [100.0%] 
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 400
(code_label 840 839 841 101 129 "" [5 uses])
(note 841 840 842 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 842 841 843 101 (set (reg/f:DI 0 ax [400])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 fname_suffix+0 S8 A64])) sim2fitman_sup.cpp:655 87 {*movdi_internal_rex64}
     (nil))
(insn 843 842 968 101 (set (reg:DI 2 cx [408])
        (const_int 8386094131808466271 [0x7461642e736e755f])) sim2fitman_sup.cpp:655 87 {*movdi_internal_rex64}
     (nil))
(insn 968 843 844 101 (set (mem:DI (reg/f:DI 0 ax [400]) [0 MEM[(void *)fname_suffix_4]+0 S8 A8])
        (reg:DI 2 cx [408])) sim2fitman_sup.cpp:655 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [408])
        (nil)))
(insn 844 968 845 101 (set (mem:QI (plus:DI (reg/f:DI 0 ax [400])
                (const_int 8 [0x8])) [0 MEM[(void *)fname_suffix_4]+8 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:655 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [400])
        (nil)))
(insn 845 844 846 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) sim2fitman_sup.cpp:657 7 {*cmpsi_1}
     (nil))
(jump_insn 846 845 847 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 881)
            (pc))) sim2fitman_sup.cpp:657 612 {*jcc_1}
     (nil)
 -> 881)
;;  succ:       102 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 224 401
(note 847 846 848 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 848 847 849 102 (set (reg:QI 0 ax [401])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A8])) sim2fitman_sup.cpp:659 91 {*movqi_internal}
     (nil))
(insn 849 848 850 102 (parallel [
            (set (reg:QI 0 ax [orig:224 D.6445 ] [224])
                (xor:QI (reg:QI 0 ax [401])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:659 417 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [401])
        (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                        (const_int -124 [0xffffffffffffff84])) [0 overwrite+0 S1 A8])
                (const_int 1 [0x1]))
            (nil))))
(insn 850 849 851 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:224 D.6445 ] [224])
            (const_int 0 [0]))) sim2fitman_sup.cpp:659 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:224 D.6445 ] [224])
        (nil)))
(jump_insn 851 850 852 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 871)
            (pc))) sim2fitman_sup.cpp:659 612 {*jcc_1}
     (nil)
 -> 871)
;;  succ:       103 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 225 226 227 402
(note 852 851 853 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 853 852 854 103 (set (reg/f:DI 0 ax [402])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:661 87 {*movdi_internal_rex64}
     (nil))
(insn 854 853 855 103 (parallel [
            (set (reg/f:DI 0 ax [orig:225 D.6441 ] [225])
                (plus:DI (reg/f:DI 0 ax [402])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:661 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [402])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 768 [0x300]))
            (nil))))
(insn 855 854 856 103 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f7e9ed154c0 *.LC55>)) sim2fitman_sup.cpp:661 87 {*movdi_internal_rex64}
     (nil))
(insn 856 855 857 103 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:225 D.6441 ] [225])) sim2fitman_sup.cpp:661 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:225 D.6441 ] [225])
        (nil)))
(call_insn 857 856 858 103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7e9ef73700 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 858 857 859 103 (set (reg/f:DI 0 ax [orig:226 D.6446 ] [226])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:661 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 859 858 860 103 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
        (reg/f:DI 0 ax [orig:226 D.6446 ] [226])) sim2fitman_sup.cpp:661 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:226 D.6446 ] [226])
        (nil)))
(insn 860 859 861 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 4 {*cmpdi_ccno_1}
     (nil))
(insn 861 860 862 103 (set (reg:QI 0 ax [orig:227 retval.7 ] [227])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 608 {*setcc_qi}
     (nil))
(insn 862 861 863 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:227 retval.7 ] [227])
            (const_int 0 [0]))) sim2fitman_sup.cpp:661 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:227 retval.7 ] [227])
        (nil)))
(jump_insn 863 862 864 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 871)
            (pc))) sim2fitman_sup.cpp:661 612 {*jcc_1}
     (nil)
 -> 871)
;;  succ:       104 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 228 403 404
(note 864 863 865 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 104 (set (reg/f:DI 0 ax [403])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])) sim2fitman_sup.cpp:665 87 {*movdi_internal_rex64}
     (nil))
(insn 866 865 867 104 (parallel [
            (set (reg/f:DI 1 dx [orig:228 D.6441 ] [228])
                (plus:DI (reg/f:DI 0 ax [403])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:665 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [403])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 io_filenames+0 S8 A64])
                (const_int 768 [0x300]))
            (nil))))
(insn 867 866 868 104 (set (reg:SI 0 ax [404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 s_u_out+0 S4 A32])) sim2fitman_sup.cpp:665 89 {*movsi_internal}
     (nil))
(insn 868 867 869 104 (set (reg:SI 4 si)
        (reg:SI 0 ax [404])) sim2fitman_sup.cpp:665 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [404])
        (nil)))
(insn 869 868 870 104 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:228 D.6441 ] [228])) sim2fitman_sup.cpp:665 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:228 D.6441 ] [228])
        (nil)))
(call_insn 870 869 871 104 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_03Pci") [flags 0x41]  <function_decl 0x7f7e9f0c2c00 cond_exit_03>) [0 cond_exit_03 S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:665 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
;;  succ:       105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              104 (FALLTHRU)
;;              103
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 871 870 872 105 132 "" [2 uses])
(note 872 871 873 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:670 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 874 873 875 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 881)
            (pc))) sim2fitman_sup.cpp:670 612 {*jcc_1}
     (nil)
 -> 881)
;;  succ:       106 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 405
(note 875 874 876 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 876 875 877 106 (set (reg:DI 0 ax [405])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 check_file+0 S8 A64])) sim2fitman_sup.cpp:671 87 {*movdi_internal_rex64}
     (nil))
(insn 877 876 878 106 (set (reg:DI 5 di)
        (reg:DI 0 ax [405])) sim2fitman_sup.cpp:671 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [405])
        (nil)))
(call_insn 878 877 881 106 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7e9ef73300 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:671 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;;              89
;;              101
;;              105
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 881 878 887 107 70 "" [3 uses])
(note 887 881 882 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 882 887 883 107 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [0 D.6447+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 0 ax [407]))
        ]) sim2fitman_sup.cpp:675 972 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [407])
        (nil)))
(jump_insn 883 882 888 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) sim2fitman_sup.cpp:675 612 {*jcc_1}
     (nil)
 -> 886)
;;  succ:       109
;;              108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 888 883 884 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(call_insn 884 888 885 108 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7e9ec94c00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:675 656 {*call}
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 885 884 886)
;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 886 885 889 109 133 "" [1 uses])
(note 889 886 0 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void infile_stats(Procpar_info*, InFile_struct*, Data_file_header*) (_Z12infile_statsP12Procpar_infoP13InFile_structP16Data_file_header, funcdef_no=13, decl_uid=5395, cgraph_uid=13)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 12:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 16:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 53:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 72:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=105 from oldreg=91, assigning class GENERAL_REGS to r105
   72: {r105:DI=r105:DI 0>>0x3f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  130: r105:DI=r65:DI
    Inserting insn reload after:
  131: r91:DI=r105:DI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 73
	 Choosing alt 0 in insn 73:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =rm  (1) 0  (2) cJ {*ashrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 78:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 82:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=106 from oldreg=95, assigning class GENERAL_REGS to r106
   82: {r106:DI=r106:DI 0>>0x3f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  132: r106:DI=r67:DI
    Inserting insn reload after:
  133: r95:DI=r106:DI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 83
	 Choosing alt 0 in insn 83:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =rm  (1) 0  (2) cJ {*ashrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 93:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 95
	 Choosing alt 2 in insn 95:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 104:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 110:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=107 from oldreg=76, assigning class GENERAL_REGS to r107
  110: {r107:SI=r107:SI-r75:SI;clobber flags:CC;}
      REG_DEAD r75:SI
      REG_DEAD r74:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  134: r107:SI=r74:SI
    Inserting insn reload after:
  135: r76:SI=r107:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 123:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 125: point = 0
   Insn 124: point = 0
   Insn 123: point = 1
   Insn 122: point = 2
   Insn 121: point = 2
   Insn 120: point = 2
   Insn 119: point = 2
   Insn 118: point = 2
   Insn 117: point = 2
   Insn 116: point = 3
   Insn 115: point = 5
   Insn 114: point = 6
   Insn 113: point = 6
   Insn 112: point = 6
   Insn 111: point = 6
   Insn 135: point = 7
	Hard reg 0 is preferable by r107 with profit 1
   Insn 110: point = 9
   Insn 134: point = 10
	Hard reg 0 is preferable by r107 with profit 1
	Hard reg 1 is preferable by r107 with profit 1
   Insn 109: point = 12
   Insn 108: point = 14
   Insn 107: point = 15
   Insn 106: point = 17
   Insn 105: point = 18
   Insn 104: point = 18
   Insn 103: point = 18
   Insn 102: point = 18
   Insn 101: point = 19
   Insn 100: point = 21
   Insn 99: point = 22
   Insn 98: point = 22
   Insn 97: point = 22
   Insn 96: point = 22
   Insn 95: point = 23
   Insn 94: point = 25
   Insn 93: point = 27
   Insn 92: point = 28
   Insn 91: point = 30
   Insn 90: point = 32
   Insn 89: point = 33
   Insn 88: point = 33
   Insn 87: point = 33
   Insn 86: point = 33
   Insn 85: point = 34
   Insn 84: point = 36
   Insn 83: point = 38
   Insn 133: point = 40
	Hard reg 1 is preferable by r106 with profit 1
   Insn 82: point = 42
   Insn 132: point = 42
   Insn 81: point = 43
   Insn 80: point = 45
   Insn 79: point = 46
   Insn 78: point = 46
   Insn 77: point = 46
   Insn 76: point = 46
   Insn 75: point = 47
   Insn 74: point = 49
   Insn 73: point = 51
   Insn 131: point = 53
	Hard reg 1 is preferable by r105 with profit 1
   Insn 72: point = 55
   Insn 130: point = 55
   Insn 71: point = 56
   Insn 70: point = 58
   Insn 69: point = 59
   Insn 68: point = 59
   Insn 67: point = 59
   Insn 66: point = 59
   Insn 65: point = 60
   Insn 64: point = 62
   Insn 63: point = 63
   Insn 62: point = 63
   Insn 61: point = 63
   Insn 60: point = 63
   Insn 59: point = 64
   Insn 58: point = 66
   Insn 57: point = 67
   Insn 56: point = 67
   Insn 55: point = 67
   Insn 54: point = 67
   Insn 53: point = 68
   Insn 52: point = 69
   Insn 51: point = 69
  BB 4
   Insn 49: point = 69
   Insn 48: point = 69
  BB 2
   Insn 128: point = 69
   Insn 34: point = 69
   Insn 33: point = 70
   Insn 32: point = 71
   Insn 31: point = 71
   Insn 30: point = 72
   Insn 29: point = 72
   Insn 28: point = 73
   Insn 27: point = 73
   Insn 26: point = 74
   Insn 25: point = 75
   Insn 24: point = 76
   Insn 23: point = 78
   Insn 22: point = 79
   Insn 21: point = 80
   Insn 20: point = 81
   Insn 19: point = 82
   Insn 18: point = 83
   Insn 17: point = 83
   Insn 16: point = 84
   Insn 15: point = 86
   Insn 14: point = 87
   Insn 13: point = 87
   Insn 12: point = 88
   Insn 11: point = 90
   Insn 10: point = 91
   Insn 9: point = 91
   Insn 8: point = 91
   Insn 4: point = 91
   Insn 3: point = 91
   Insn 2: point = 91
  BB 3
   Insn 44: point = 91
   Insn 43: point = 92
   Insn 42: point = 93
   Insn 41: point = 93
   Insn 40: point = 93
   Insn 39: point = 93
   Insn 38: point = 94
 r59: [87..88]
 r60: [85..86]
 r61: [83..84]
 r62: [74..76]
 r63: [63..64]
 r64: [59..60]
 r65: [52..56]
 r66: [46..47]
 r67: [39..43]
 r68: [33..34]
 r69: [29..30]
 r70: [24..28]
 r71: [24..25]
 r72: [22..23]
 r73: [18..19]
 r74: [11..15]
 r75: [9..12]
 r76: [6..7]
 r77: [2..3]
 r78: [89..90]
 r79: [81..82]
 r80: [79..80]
 r81: [77..78]
 r82: [73..75]
 r83: [71..72]
 r84: [69..70]
 r85: [93..94]
 r86: [91..92]
 r87: [67..68]
 r88: [65..66]
 r89: [61..62]
 r90: [57..58]
 r91: [52..53]
 r92: [50..51]
 r93: [48..49]
 r94: [44..45]
 r95: [39..40]
 r96: [37..38]
 r97: [35..36]
 r98: [31..32]
 r99: [26..27]
 r100: [20..21]
 r101: [16..17]
 r102: [13..14]
 r103: [4..5]
 r104: [0..1]
 r105: [54..55]
 r106: [41..42]
 r107: [8..10]
Compressing live ranges: from 95 to 88 - 92%
Ranges after the compression:
 r59: [80..81]
 r60: [78..79]
 r61: [76..77]
 r62: [68..69]
 r63: [58..59]
 r64: [54..55]
 r65: [48..51]
 r66: [42..43]
 r67: [36..39]
 r68: [30..31]
 r69: [26..27]
 r70: [22..25]
 r71: [22..23]
 r72: [20..21]
 r73: [16..17]
 r74: [10..13]
 r75: [8..11]
 r76: [6..7]
 r77: [2..3]
 r78: [82..83]
 r79: [74..75]
 r80: [72..73]
 r81: [70..71]
 r82: [68..69]
 r83: [66..67]
 r84: [64..65]
 r85: [86..87]
 r86: [84..85]
 r87: [62..63]
 r88: [60..61]
 r89: [56..57]
 r90: [52..53]
 r91: [48..49]
 r92: [46..47]
 r93: [44..45]
 r94: [40..41]
 r95: [36..37]
 r96: [34..35]
 r97: [32..33]
 r98: [28..29]
 r99: [24..25]
 r100: [18..19]
 r101: [14..15]
 r102: [12..13]
 r103: [4..5]
 r104: [0..1]
 r105: [50..51]
 r106: [38..39]
 r107: [8..9]
	 Assigning to 105 (cl=GENERAL_REGS, orig=91, freq=3, tfirst=105, tfreq=3)...
	   Assign 1 to reload r105 (freq=3)
	 Assigning to 106 (cl=GENERAL_REGS, orig=95, freq=3, tfirst=106, tfreq=3)...
	   Assign 1 to reload r106 (freq=3)
	 Assigning to 107 (cl=GENERAL_REGS, orig=76, freq=3, tfirst=107, tfreq=3)...
	   Assign 1 to reload r107 (freq=3)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=64, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 24
changing reg in insn 26
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 66
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 81
changing reg in insn 85
changing reg in insn 86
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 101
changing reg in insn 102
changing reg in insn 107
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 116
changing reg in insn 117
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 38
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 64
changing reg in insn 65
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 75
changing reg in insn 80
changing reg in insn 81
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 100
changing reg in insn 101
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 115
changing reg in insn 116
changing reg in insn 123
changing reg in insn 124
starting the processing of deferred insns
ending the processing of deferred insns


void infile_stats(Procpar_info*, InFile_struct*, Data_file_header*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={68d,56u} r1={29d,12u} r2={18d} r4={30d,13u} r5={35d,18u} r6={1d,35u} r7={1d,22u} r8={17d} r9={17d} r10={17d} r11={17d} r12={17d} r13={17d} r14={17d} r15={17d} r17={29d,1u} r18={17d} r19={17d} r20={1d,1u,2e} r21={18d} r22={18d} r23={18d} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={18d} r38={18d} r39={17d} r40={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} 
;;    total ref usage 1028{868d,158u,2e} in 121{104 regular + 17 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 78 79 80 81 82 83 84
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) sim2fitman_sup.cpp:681 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ procpar_info ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])
        (reg:DI 4 si [ infile_struct ])) sim2fitman_sup.cpp:681 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ infile_struct ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])
        (reg:DI 1 dx [ main_header ])) sim2fitman_sup.cpp:681 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ main_header ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:683 87 {*movdi_internal_rex64}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:684 87 {*movdi_internal_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])
        (const_int 0 [0])) sim2fitman_sup.cpp:685 87 {*movdi_internal_rex64}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [78])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 0 ax [orig:59 D.6452 ] [59])
                (plus:DI (reg/f:DI 0 ax [78])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:688 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [78])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                (const_int 60 [0x3c]))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.6452 ] [59])) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.6452 ] [59])
        (nil)))
(call_insn/i 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f7e9f1b7000 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:688 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 0 ax [orig:60 D.6453 ] [60])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 0 ax [orig:61 D.6453 ] [61])
                (plus:DI (reg:DI 0 ax [orig:60 D.6453 ] [60])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:688 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.6453 ] [60])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:61 D.6453 ] [61])) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.6453 ] [61])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7e9f1eb000 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:688 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [79])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [79])
            (nil))))
(insn 20 19 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg/f:DI 0 ax [79])) sim2fitman_sup.cpp:688 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [79])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [80])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:689 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])
        (reg/f:DI 0 ax [80])) sim2fitman_sup.cpp:689 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [80])
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [81])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:692 87 {*movdi_internal_rex64}
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 1 dx [orig:62 D.6452 ] [62])
                (plus:DI (reg/f:DI 0 ax [81])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:692 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [81])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
                (const_int 60 [0x3c]))
            (nil))))
(insn 25 24 26 2 (set (reg:DI 0 ax [82])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:692 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:62 D.6452 ] [62])) sim2fitman_sup.cpp:692 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:62 D.6452 ] [62])
        (nil)))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [82])) sim2fitman_sup.cpp:692 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [82])
        (nil)))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f7e9f1b5400 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:692 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 29 28 30 2 (set (reg:DI 0 ax [83])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:693 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7f7e9ed555f0 *.LC56>)) sim2fitman_sup.cpp:693 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [83])) sim2fitman_sup.cpp:693 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(call_insn 32 31 33 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7e9efe6c00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:693 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 2 (set (reg:DI 0 ax [84])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:693 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 34 33 128 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg:DI 0 ax [84])) sim2fitman_sup.cpp:693 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [84])
        (nil)))
(jump_insn 128 34 129 2 (set (pc)
        (label_ref 45)) sim2fitman_sup.cpp:694 650 {jump}
     (nil)
 -> 45)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 129 128 47)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 85 86
(code_label 47 129 37 3 136 "" [1 uses])
(note 37 47 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 3 (set (reg/f:DI 0 ax [85])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])) sim2fitman_sup.cpp:695 87 {*movdi_internal_rex64}
     (nil))
(insn 39 38 40 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])
        (reg/f:DI 0 ax [85])) sim2fitman_sup.cpp:695 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [85])
        (nil)))
(insn 40 39 41 3 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7f7e9ed555f0 *.LC56>)) sim2fitman_sup.cpp:696 87 {*movdi_internal_rex64}
     (nil))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (const_int 0 [0])) sim2fitman_sup.cpp:696 87 {*movdi_internal_rex64}
     (nil))
(call_insn 42 41 43 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtok") [flags 0x41]  <function_decl 0x7f7e9efe6c00 strtok>) [0 strtok S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:696 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 43 42 44 3 (set (reg:DI 0 ax [86])
        (reg:DI 0 ax)) sim2fitman_sup.cpp:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 44 43 45 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
        (reg:DI 0 ax [86])) sim2fitman_sup.cpp:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [86])
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 45 44 46 4 135 "" [1 uses])
(note 46 45 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 48 46 49 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [0 token+0 S8 A64])
            (const_int 0 [0]))) sim2fitman_sup.cpp:694 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) sim2fitman_sup.cpp:694 612 {*jcc_1}
     (nil)
 -> 47)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7f7e9ed55688 *.LC57>)) sim2fitman_sup.cpp:699 87 {*movdi_internal_rex64}
     (nil))
(call_insn 52 51 53 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:699 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 5 (set (reg:DI 0 ax [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 filename_pointer+0 S8 A64])) sim2fitman_sup.cpp:700 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [87])) sim2fitman_sup.cpp:700 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [87])
        (nil)))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7f7e9ed55720 *.LC58>)) sim2fitman_sup.cpp:700 87 {*movdi_internal_rex64}
     (nil))
(insn 56 55 57 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:700 91 {*movqi_internal}
     (nil))
(call_insn 57 56 58 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:700 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 58 57 59 5 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:702 87 {*movdi_internal_rex64}
     (nil))
(insn 59 58 60 5 (set (reg:SI 0 ax [orig:63 D.6454 ] [63])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [88])
                (const_int 8 [0x8])) [0 infile_struct_16(D)->file_size+0 S4 A64])) sim2fitman_sup.cpp:702 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
        (nil)))
(insn 60 59 61 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:63 D.6454 ] [63])) sim2fitman_sup.cpp:702 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.6454 ] [63])
        (nil)))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7f7e9ed557b8 *.LC59>)) sim2fitman_sup.cpp:702 87 {*movdi_internal_rex64}
     (nil))
(insn 62 61 63 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:702 91 {*movqi_internal}
     (nil))
(call_insn 63 62 64 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:702 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 64 63 65 5 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:703 87 {*movdi_internal_rex64}
     (nil))
(insn 65 64 66 5 (set (reg:SI 0 ax [orig:64 D.6454 ] [64])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [89])
                (const_int 328 [0x148])) [0 procpar_info_6(D)->num_points+0 S4 A64])) sim2fitman_sup.cpp:703 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (nil)))
(insn 66 65 67 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:64 D.6454 ] [64])) sim2fitman_sup.cpp:703 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:64 D.6454 ] [64])
        (nil)))
(insn 67 66 68 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7f7e9ed55850 *.LC60>)) sim2fitman_sup.cpp:703 87 {*movdi_internal_rex64}
     (nil))
(insn 68 67 69 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:703 91 {*movqi_internal}
     (nil))
(call_insn 69 68 70 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:703 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 70 69 71 5 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (nil))
(insn 71 70 130 5 (set (reg:DI 0 ax [orig:65 D.6455 ] [65])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 24 [0x18])) [0 main_header_19(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [90])
        (nil)))
(insn 130 71 72 5 (set (reg:DI 1 dx [91])
        (reg:DI 0 ax [orig:65 D.6455 ] [65])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (nil))
(insn 72 130 131 5 (parallel [
            (set (reg:DI 1 dx [91])
                (lshiftrt:DI (reg:DI 1 dx [91])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 547 {*lshrdi3_1}
     (nil))
(insn 131 72 73 5 (set (reg:DI 1 dx [91])
        (reg:DI 1 dx [91])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [91])
        (nil)))
(insn 73 131 74 5 (parallel [
            (set (reg:DI 0 ax [92])
                (plus:DI (reg:DI 0 ax [orig:65 D.6455 ] [65])
                    (reg:DI 1 dx [91])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [91])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.6455 ] [65])
            (nil))))
(insn 74 73 75 5 (parallel [
            (set (reg:DI 0 ax [93])
                (ashiftrt:DI (reg:DI 0 ax [92])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:704 548 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(insn 75 74 76 5 (set (reg:DI 0 ax [orig:66 D.6455 ] [66])
        (reg:DI 0 ax [93])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [93])
        (nil)))
(insn 76 75 77 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [orig:66 D.6455 ] [66])) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:66 D.6455 ] [66])
        (nil)))
(insn 77 76 78 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7f7e9ed558e8 *.LC61>)) sim2fitman_sup.cpp:704 87 {*movdi_internal_rex64}
     (nil))
(insn 78 77 79 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:704 91 {*movqi_internal}
     (nil))
(call_insn 79 78 80 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:704 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 80 79 81 5 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (nil))
(insn 81 80 132 5 (set (reg:DI 0 ax [orig:67 D.6455 ] [67])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 24 [0x18])) [0 main_header_19(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [94])
        (nil)))
(insn 132 81 82 5 (set (reg:DI 1 dx [95])
        (reg:DI 0 ax [orig:67 D.6455 ] [67])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (nil))
(insn 82 132 133 5 (parallel [
            (set (reg:DI 1 dx [95])
                (lshiftrt:DI (reg:DI 1 dx [95])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 547 {*lshrdi3_1}
     (nil))
(insn 133 82 83 5 (set (reg:DI 1 dx [95])
        (reg:DI 1 dx [95])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [95])
        (nil)))
(insn 83 133 84 5 (parallel [
            (set (reg:DI 0 ax [96])
                (plus:DI (reg:DI 0 ax [orig:67 D.6455 ] [67])
                    (reg:DI 1 dx [95])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [95])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:67 D.6455 ] [67])
            (nil))))
(insn 84 83 85 5 (parallel [
            (set (reg:DI 0 ax [97])
                (ashiftrt:DI (reg:DI 0 ax [96])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:705 548 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [96])
        (nil)))
(insn 85 84 86 5 (set (reg:DI 0 ax [orig:68 D.6455 ] [68])
        (reg:DI 0 ax [97])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [97])
        (nil)))
(insn 86 85 87 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [orig:68 D.6455 ] [68])) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:68 D.6455 ] [68])
        (nil)))
(insn 87 86 88 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC62") [flags 0x2]  <var_decl 0x7f7e9ed55980 *.LC62>)) sim2fitman_sup.cpp:705 87 {*movdi_internal_rex64}
     (nil))
(insn 88 87 89 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:705 91 {*movqi_internal}
     (nil))
(call_insn 89 88 90 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:705 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 90 89 91 5 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) sim2fitman_sup.cpp:707 87 {*movdi_internal_rex64}
     (nil))
(insn 91 90 92 5 (set (reg:SI 0 ax [orig:69 D.6454 ] [69])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 328 [0x148])) [0 procpar_info_6(D)->num_points+0 S4 A64])) sim2fitman_sup.cpp:707 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [98])
        (nil)))
(insn 92 91 93 5 (set (reg:DI 1 dx [orig:70 D.6455 ] [70])
        (sign_extend:DI (reg:SI 0 ax [orig:69 D.6454 ] [69]))) sim2fitman_sup.cpp:707 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:69 D.6454 ] [69])
        (nil)))
(insn 93 92 94 5 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 main_header+0 S8 A64])) sim2fitman_sup.cpp:707 87 {*movdi_internal_rex64}
     (nil))
(insn 94 93 95 5 (set (reg:DI 0 ax [orig:71 D.6455 ] [71])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [99])
                (const_int 24 [0x18])) [0 main_header_19(D)->ebytes.number+0 S8 A64])) sim2fitman_sup.cpp:707 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [99])
        (nil)))
(insn 95 94 96 5 (parallel [
            (set (reg:DI 0 ax [orig:72 D.6455 ] [72])
                (mult:DI (reg:DI 0 ax [orig:71 D.6455 ] [71])
                    (reg:DI 1 dx [orig:70 D.6455 ] [70])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:707 345 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:71 D.6455 ] [71])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:70 D.6455 ] [70])
            (nil))))
(insn 96 95 97 5 (set (reg:DI 4 si)
        (reg:DI 0 ax [orig:72 D.6455 ] [72])) sim2fitman_sup.cpp:707 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:72 D.6455 ] [72])
        (nil)))
(insn 97 96 98 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC63") [flags 0x2]  <var_decl 0x7f7e9ed55a18 *.LC63>)) sim2fitman_sup.cpp:707 87 {*movdi_internal_rex64}
     (nil))
(insn 98 97 99 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:707 91 {*movqi_internal}
     (nil))
(call_insn 99 98 100 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:707 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 100 99 101 5 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:708 87 {*movdi_internal_rex64}
     (nil))
(insn 101 100 102 5 (set (reg:SI 0 ax [orig:73 D.6454 ] [73])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [100])
                (const_int 4 [0x4])) [0 infile_struct_16(D)->num_unsup_sets+0 S4 A32])) sim2fitman_sup.cpp:708 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [100])
        (nil)))
(insn 102 101 103 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:73 D.6454 ] [73])) sim2fitman_sup.cpp:708 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:73 D.6454 ] [73])
        (nil)))
(insn 103 102 104 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC64") [flags 0x2]  <var_decl 0x7f7e9ed55ab0 *.LC64>)) sim2fitman_sup.cpp:708 87 {*movdi_internal_rex64}
     (nil))
(insn 104 103 105 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:708 91 {*movqi_internal}
     (nil))
(call_insn 105 104 106 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:708 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 106 105 107 5 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:710 87 {*movdi_internal_rex64}
     (nil))
(insn 107 106 108 5 (set (reg:SI 1 dx [orig:74 D.6454 ] [74])
        (mem/j:SI (reg/f:DI 0 ax [101]) [0 infile_struct_16(D)->num_datasets+0 S4 A64])) sim2fitman_sup.cpp:710 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [101])
        (nil)))
(insn 108 107 109 5 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:710 87 {*movdi_internal_rex64}
     (nil))
(insn 109 108 134 5 (set (reg:SI 0 ax [orig:75 D.6454 ] [75])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [102])
                (const_int 4 [0x4])) [0 infile_struct_16(D)->num_unsup_sets+0 S4 A32])) sim2fitman_sup.cpp:710 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [102])
        (nil)))
(insn 134 109 110 5 (set (reg:SI 1 dx [orig:76 D.6454 ] [76])
        (reg:SI 1 dx [orig:74 D.6454 ] [74])) sim2fitman_sup.cpp:710 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:74 D.6454 ] [74])
        (nil)))
(insn 110 134 135 5 (parallel [
            (set (reg:SI 1 dx [orig:76 D.6454 ] [76])
                (minus:SI (reg:SI 1 dx [orig:76 D.6454 ] [76])
                    (reg:SI 0 ax [orig:75 D.6454 ] [75])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:710 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:75 D.6454 ] [75])
        (nil)))
(insn 135 110 111 5 (set (reg:SI 0 ax [orig:76 D.6454 ] [76])
        (reg:SI 1 dx [orig:76 D.6454 ] [76])) sim2fitman_sup.cpp:710 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:76 D.6454 ] [76])
        (nil)))
(insn 111 135 112 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:76 D.6454 ] [76])) sim2fitman_sup.cpp:710 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:76 D.6454 ] [76])
        (nil)))
(insn 112 111 113 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC65") [flags 0x2]  <var_decl 0x7f7e9ed55b48 *.LC65>)) sim2fitman_sup.cpp:710 87 {*movdi_internal_rex64}
     (nil))
(insn 113 112 114 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:710 91 {*movqi_internal}
     (nil))
(call_insn 114 113 115 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:710 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 115 114 116 5 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 infile_struct+0 S8 A64])) sim2fitman_sup.cpp:711 87 {*movdi_internal_rex64}
     (nil))
(insn 116 115 117 5 (set (reg:SI 0 ax [orig:77 D.6454 ] [77])
        (mem/j:SI (reg/f:DI 0 ax [103]) [0 infile_struct_16(D)->num_datasets+0 S4 A64])) sim2fitman_sup.cpp:711 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [103])
        (nil)))
(insn 117 116 118 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:77 D.6454 ] [77])) sim2fitman_sup.cpp:711 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:77 D.6454 ] [77])
        (nil)))
(insn 118 117 119 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC66") [flags 0x2]  <var_decl 0x7f7e9ed55be0 *.LC66>)) sim2fitman_sup.cpp:711 87 {*movdi_internal_rex64}
     (nil))
(insn 119 118 120 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:711 91 {*movqi_internal}
     (nil))
(call_insn 120 119 121 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:711 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_BR_PRED (use (reg:SI 4 si))
                (nil)))))
(insn 121 120 122 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC57") [flags 0x2]  <var_decl 0x7f7e9ed55688 *.LC57>)) sim2fitman_sup.cpp:712 87 {*movdi_internal_rex64}
     (nil))
(call_insn 122 121 123 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:712 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 123 122 124 5 (set (reg:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 malloc_to_free+0 S8 A64])) sim2fitman_sup.cpp:714 87 {*movdi_internal_rex64}
     (nil))
(insn 124 123 125 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [104])) sim2fitman_sup.cpp:714 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [104])
        (nil)))
(call_insn 125 124 0 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f7e9f1dee00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) sim2fitman_sup.cpp:714 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void print_version() (_Z13print_versionv, funcdef_no=14, decl_uid=5396, cgraph_uid=14)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void print_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={5d,1u} r1={4d} r2={4d} r4={5d,1u} r5={7d,3u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={3d} r18={3d} r19={3d} r20={1d,1u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 168{155d,13u,0e} in 8{5 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC67") [flags 0x2]  <var_decl 0x7f7e9ed61260 *.LC67>)) sim2fitman_sup.cpp:722 87 {*movdi_internal_rex64}
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC68") [flags 0x2]  <var_decl 0x7f7e9ed612f8 *.LC68>)) sim2fitman_sup.cpp:722 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:722 91 {*movqi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:722 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC69") [flags 0x2]  <var_decl 0x7f7e9ed61390 *.LC69>)) sim2fitman_sup.cpp:723 87 {*movdi_internal_rex64}
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:723 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC70") [flags 0x2]  <var_decl 0x7f7e9ed61428 *.LC70>)) sim2fitman_sup.cpp:724 87 {*movdi_internal_rex64}
     (nil))
(call_insn 12 11 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f7e9f1c2700 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:724 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void close_infiles(FILE**) (_Z13close_infilesPP8_IO_FILE, funcdef_no=15, decl_uid=5398, cgraph_uid=15)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 14
	 Choosing alt 0 in insn 14:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 23
	 Choosing alt 0 in insn 23:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 29:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rm  (1) re {*cmpsi_1}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
  BB 6
   Insn 34: point = 0
   Insn 33: point = 0
  BB 2
   Insn 38: point = 0
   Insn 6: point = 0
   Insn 2: point = 0
  BB 5
   Insn 29: point = 0
  BB 4
   Insn 26: point = 0
   Insn 25: point = 0
   Insn 24: point = 1
   Insn 23: point = 3
   Insn 22: point = 5
   Insn 21: point = 6
   Insn 20: point = 8
   Insn 19: point = 10
  BB 3
   Insn 17: point = 11
   Insn 16: point = 11
   Insn 15: point = 12
   Insn 14: point = 14
   Insn 13: point = 16
   Insn 12: point = 17
   Insn 11: point = 19
   Insn 10: point = 21
 r59: [18..19]
 r60: [15..17]
 r61: [13..14]
 r62: [11..12]
 r63: [7..8]
 r64: [4..6]
 r65: [2..3]
 r66: [0..1]
 r67: [20..21]
 r68: [15..16]
 r69: [9..10]
 r70: [4..5]
Compressing live ranges: from 22 to 20 - 90%
Ranges after the compression:
 r59: [16..17]
 r60: [14..15]
 r61: [12..13]
 r62: [10..11]
 r63: [6..7]
 r64: [4..5]
 r65: [2..3]
 r66: [0..1]
 r67: [18..19]
 r68: [14..15]
 r69: [8..9]
 r70: [4..5]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 23
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 10
changing reg in insn 11
changing reg in insn 13
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.


void close_infiles(FILE**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,10u} r1={4d,2u,2e} r2={2d} r4={2d} r5={3d,2u} r6={1d,16u} r7={1d,8u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={8d,2u} r18={1d} r19={1d} r20={1d,1u,2e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 127{82d,41u,4e} in 22{21 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) sim2fitman_sup.cpp:731 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ in_file ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 38 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:734 89 {*movsi_internal}
     (nil))
(jump_insn 38 6 39 2 (set (pc)
        (label_ref 30)) sim2fitman_sup.cpp:734 650 {jump}
     (nil)
 -> 30)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 39 38 32)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 67 68
(code_label 32 39 9 3 141 "" [1 uses])
(note 9 32 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:SI 0 ax [67])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:735 89 {*movsi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 0 ax [orig:59 D.6471 ] [59])
        (sign_extend:DI (reg:SI 0 ax [67]))) sim2fitman_sup.cpp:735 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [67])
        (nil)))
(insn 12 11 13 3 (parallel [
            (set (reg:DI 1 dx [orig:60 D.6471 ] [60])
                (ashift:DI (reg:DI 0 ax [orig:59 D.6471 ] [59])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:735 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.6471 ] [59])
        (nil)))
(insn 13 12 14 3 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])) sim2fitman_sup.cpp:735 87 {*movdi_internal_rex64}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.6472 ] [61])
                (plus:DI (reg/f:DI 0 ax [68])
                    (reg:DI 1 dx [orig:60 D.6471 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:735 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.6471 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.6471 ] [60]))
                (nil)))))
(insn 15 14 16 3 (set (reg/f:DI 0 ax [orig:62 D.6473 ] [62])
        (mem/f:DI (reg/f:DI 0 ax [orig:61 D.6472 ] [61]) [0 *_6+0 S8 A64])) sim2fitman_sup.cpp:735 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.6472 ] [61])
        (nil)))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:62 D.6473 ] [62])
            (const_int 0 [0]))) sim2fitman_sup.cpp:735 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 D.6473 ] [62])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) sim2fitman_sup.cpp:735 612 {*jcc_1}
     (nil)
 -> 27)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 65 66 69 70
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 0 ax [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:736 89 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 0 ax [orig:63 D.6471 ] [63])
        (sign_extend:DI (reg:SI 0 ax [69]))) sim2fitman_sup.cpp:736 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [69])
        (nil)))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 1 dx [orig:64 D.6471 ] [64])
                (ashift:DI (reg:DI 0 ax [orig:63 D.6471 ] [63])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:736 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:63 D.6471 ] [63])
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])) sim2fitman_sup.cpp:736 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 0 ax [orig:65 D.6472 ] [65])
                (plus:DI (reg/f:DI 0 ax [70])
                    (reg:DI 1 dx [orig:64 D.6471 ] [64])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:736 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:64 D.6471 ] [64])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 in_file+0 S8 A64])
                    (reg:DI 1 dx [orig:64 D.6471 ] [64]))
                (nil)))))
(insn 24 23 25 4 (set (reg/f:DI 0 ax [orig:66 D.6473 ] [66])
        (mem/f:DI (reg/f:DI 0 ax [orig:65 D.6472 ] [65]) [0 *_10+0 S8 A64])) sim2fitman_sup.cpp:736 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:65 D.6472 ] [65])
        (nil)))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:66 D.6473 ] [66])) sim2fitman_sup.cpp:736 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.6473 ] [66])
        (nil)))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7e9ef73300 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:736 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 27 26 28 5 140 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:734 273 {*addsi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 30 29 31 6 139 "" [1 uses])
(note 31 30 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) sim2fitman_sup.cpp:734 7 {*cmpsi_1}
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) sim2fitman_sup.cpp:734 612 {*jcc_1}
     (nil)
 -> 32)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 35 34 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void printHex(char*, int) (_Z8printHexPci, funcdef_no=16, decl_uid=5401, cgraph_uid=16)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 16
	 Choosing alt 0 in insn 16:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) qm {extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 28:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rzw {*call_value}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 37: point = 0
   Insn 36: point = 0
  BB 4
   Insn 34: point = 0
   Insn 33: point = 0
   Insn 32: point = 1
  BB 2
   Insn 40: point = 2
   Insn 9: point = 2
   Insn 8: point = 2
   Insn 7: point = 3
   Insn 3: point = 4
   Insn 2: point = 4
  BB 3
   Insn 28: point = 4
   Insn 27: point = 4
   Insn 26: point = 4
   Insn 25: point = 4
   Insn 24: point = 4
   Insn 23: point = 5
   Insn 22: point = 6
   Insn 21: point = 8
   Insn 20: point = 9
   Insn 19: point = 11
   Insn 18: point = 12
   Insn 17: point = 14
   Insn 16: point = 16
   Insn 15: point = 18
   Insn 14: point = 19
   Insn 13: point = 21
 r59: [17..19]
 r60: [15..16]
 r61: [13..14]
 r62: [5..12]
 r63: [7..9]
 r64: [4..6]
 r65: [2..3]
 r66: [20..21]
 r67: [17..18]
 r68: [10..11]
 r69: [7..8]
 r70: [0..1]
Compressing live ranges: from 22 to 18 - 81%
Ranges after the compression:
 r59: [14..15]
 r60: [12..13]
 r61: [10..11]
 r62: [4..9]
 r63: [6..7]
 r64: [4..5]
 r65: [2..3]
 r66: [16..17]
 r67: [14..15]
 r68: [8..9]
 r69: [6..7]
 r70: [0..1]

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 23
changing reg in insn 20
changing reg in insn 22
changing reg in insn 22
changing reg in insn 22
changing reg in insn 24
changing reg in insn 7
changing reg in insn 8
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 32
changing reg in insn 33
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 37.


void printHex(char*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,8u} r1={7d,4u,1e} r2={5d,2u,1e} r4={4d,2u} r5={5d,3u} r6={1d,18u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={6d,1u} r18={2d} r19={2d} r20={1d,1u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 177{127d,46u,4e} in 27{25 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 65
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])
        (reg:DI 5 di [ theThing ])) sim2fitman_sup.cpp:744 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ theThing ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) sim2fitman_sup.cpp:744 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [65])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])) sim2fitman_sup.cpp:747 87 {*movdi_internal_rex64}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])
        (reg/f:DI 0 ax [65])) sim2fitman_sup.cpp:747 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [65])
        (nil)))
(insn 9 8 40 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) sim2fitman_sup.cpp:748 89 {*movsi_internal}
     (nil))
(jump_insn 40 9 41 2 (set (pc)
        (label_ref 29)) sim2fitman_sup.cpp:748 650 {jump}
     (nil)
 -> 29)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 41 40 31)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64 66 67 68 69
(code_label 31 41 12 3 144 "" [1 uses])
(note 12 31 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 0 ax [66])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:749 89 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx [orig:59 D.6474 ] [59])
        (sign_extend:DI (reg:SI 0 ax [66]))) sim2fitman_sup.cpp:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [66])
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 0 ax [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])) sim2fitman_sup.cpp:749 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:DI 0 ax [orig:60 D.6475 ] [60])
                (plus:DI (reg/f:DI 0 ax [67])
                    (reg:DI 1 dx [orig:59 D.6474 ] [59])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:749 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [67])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:59 D.6474 ] [59])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 theThing+0 S8 A64])
                    (reg:DI 1 dx [orig:59 D.6474 ] [59]))
                (nil)))))
(insn 17 16 18 3 (set (reg:QI 0 ax [orig:61 D.6476 ] [61])
        (mem:QI (reg/f:DI 0 ax [orig:60 D.6475 ] [60]) [0 *_7+0 S1 A8])) sim2fitman_sup.cpp:749 91 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 D.6475 ] [60])
        (nil)))
(insn 18 17 19 3 (set (reg:SI 0 ax [orig:62 D.6477 ] [62])
        (sign_extend:SI (reg:QI 0 ax [orig:61 D.6476 ] [61]))) sim2fitman_sup.cpp:749 155 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:61 D.6476 ] [61])
        (nil)))
(insn 19 18 20 3 (set (reg:SI 1 dx [68])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:749 89 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 2 cx [orig:63 D.6474 ] [63])
        (sign_extend:DI (reg:SI 1 dx [68]))) sim2fitman_sup.cpp:749 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 1 dx [68])
        (nil)))
(insn 21 20 22 3 (set (reg/f:DI 1 dx [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])) sim2fitman_sup.cpp:749 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 2 cx [orig:64 D.6475 ] [64])
                (plus:DI (reg:DI 2 cx [orig:63 D.6474 ] [63])
                    (reg/f:DI 1 dx [69])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:749 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [69])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:63 D.6474 ] [63])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 addr+0 S8 A64])
                    (reg:DI 2 cx [orig:63 D.6474 ] [63]))
                (nil)))))
(insn 23 22 24 3 (set (reg:SI 1 dx)
        (reg:SI 0 ax [orig:62 D.6477 ] [62])) sim2fitman_sup.cpp:749 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:62 D.6477 ] [62])
        (nil)))
(insn 24 23 25 3 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:64 D.6475 ] [64])) sim2fitman_sup.cpp:749 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:64 D.6475 ] [64])
        (nil)))
(insn 25 24 26 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC71") [flags 0x2]  <var_decl 0x7f7e9ed6c390 *.LC71>)) sim2fitman_sup.cpp:749 87 {*movdi_internal_rex64}
     (nil))
(insn 26 25 27 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) sim2fitman_sup.cpp:749 91 {*movqi_internal}
     (nil))
(call_insn 27 26 28 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f7e9f1c0c00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:749 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                    (nil))))))
(insn 28 27 29 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) sim2fitman_sup.cpp:748 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 70
(code_label 29 28 30 4 143 "" [1 uses])
(note 30 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 30 33 4 (set (reg:SI 0 ax [70])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) sim2fitman_sup.cpp:748 89 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [70])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32]))) sim2fitman_sup.cpp:748 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [70])
        (nil)))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) sim2fitman_sup.cpp:748 612 {*jcc_1}
     (nil)
 -> 31)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:SI 5 di)
        (const_int 10 [0xa])) sim2fitman_sup.cpp:752 89 {*movsi_internal}
     (nil))
(call_insn 37 36 0 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7f7e9f1c2100 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) sim2fitman_sup.cpp:752 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

