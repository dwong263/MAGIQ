
;; Function int command_line(Preprocess*, IOFiles*, Procpar_info*, int, char**, int*, int*, int*, bool*, bool*) (_Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_, funcdef_no=1020, decl_uid=23930, symbol_order=227)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=896, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=864, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 12:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 16:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 19:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 23:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal}
      Creating newreg=820, assigning class GENERAL_REGS to r820
   24: r820:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1938: [r493:DI]=r820:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1938:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
      Creating newreg=821, assigning class GENERAL_REGS to r821
   25: r821:DI=0x6961764120656d61
    Inserting insn reload after:
 1939: [r493:DI+0x8]=r821:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1939:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) m  (1) rn {*movhi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 30:  (0) r  (1) i {*movdi_internal}
      Creating newreg=822, assigning class GENERAL_REGS to r822
   30: r822:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1940: [r495:DI]=r822:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1940:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 31:  (0) r  (1) i {*movdi_internal}
      Creating newreg=823, assigning class GENERAL_REGS to r823
   31: r823:DI=0x6961764120656d61
    Inserting insn reload after:
 1941: [r495:DI+0x8]=r823:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1941:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) m  (1) rn {*movhi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 34:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 35:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 36:  (0) r  (1) i {*movdi_internal}
      Creating newreg=824, assigning class GENERAL_REGS to r824
   36: r824:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1942: [r497:DI]=r824:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1942:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 37:  (0) r  (1) i {*movdi_internal}
      Creating newreg=825, assigning class GENERAL_REGS to r825
   37: r825:DI=0x6961764120656d61
    Inserting insn reload after:
 1943: [r497:DI+0x8]=r825:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1943:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 38:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 55
	 Choosing alt 0 in insn 55:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 68
	 Choosing alt 0 in insn 68:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 80:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 83:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 95
	 Choosing alt 0 in insn 95:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 107:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 108
	 Choosing alt 0 in insn 108:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 121
	 Choosing alt 0 in insn 121:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 122:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 133:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 134
	 Choosing alt 0 in insn 134:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 146:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 149:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 160:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 161
	 Choosing alt 0 in insn 161:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 162:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 173:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 174
	 Choosing alt 0 in insn 174:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 177:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 186:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 187
	 Choosing alt 0 in insn 187:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 199:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 0 in insn 200:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 212:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 214:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 215:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 226:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 227
	 Choosing alt 0 in insn 227:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 239:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 240
	 Choosing alt 0 in insn 240:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 243:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 252:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 253
	 Choosing alt 0 in insn 253:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 254:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 256:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 265:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 266
	 Choosing alt 0 in insn 266:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 267:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 278:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 279
	 Choosing alt 0 in insn 279:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 280:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 282:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 291:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 292
	 Choosing alt 0 in insn 292:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 293:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 294:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 302:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 309:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 310:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 311
	 Choosing alt 0 in insn 311:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 312:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 313:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 328:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 329
	 Choosing alt 0 in insn 329:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 330:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 331:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 333:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 339:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 346:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 348
	 Choosing alt 0 in insn 348:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 349:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 350:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 360:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 361
	 Choosing alt 0 in insn 361:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 362:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 363:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 373:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 374
	 Choosing alt 0 in insn 374:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 375:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 376:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 380:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 385:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 394:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 395:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 398:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 399:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 400
	 Choosing alt 0 in insn 400:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 401:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 402:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 409:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 420:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 421
	 Choosing alt 0 in insn 421:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 422:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 423:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 424:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 425:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 436:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 437
	 Choosing alt 0 in insn 437:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 438:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 443:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 444:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 445
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 446:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 447:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 449:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 454:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 456:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 465:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 466
	 Choosing alt 0 in insn 466:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 467:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 468:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 472:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 473
	 Choosing alt 0 in insn 473:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 474:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 481:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 485:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 486:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 493:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 496:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 497:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 498
	 Choosing alt 0 in insn 498:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 499:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (1) rzw {*call_value}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 503:  (0) =x  (1) xm {*truncdfsf_fast_sse}
      Creating newreg=826 from oldreg=370, assigning class SSE_REGS to r826
  503: r826:SF=float_trunc(r369:DF)
      REG_DEAD r369:DF
    Inserting insn reload after:
 1944: r370:SF=r826:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1944:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 504:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 505:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 506:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 507:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 509:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 518:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 519:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 522:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 523:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 524
	 Choosing alt 0 in insn 524:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 525:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (1) rzw {*call_value}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 529:  (0) =x  (1) xm {*truncdfsf_fast_sse}
      Creating newreg=827 from oldreg=380, assigning class SSE_REGS to r827
  529: r827:SF=float_trunc(r379:DF)
      REG_DEAD r379:DF
    Inserting insn reload after:
 1945: r380:SF=r827:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1945:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 530:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 531:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 537:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 542:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 543
	 Choosing alt 0 in insn 543:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 544:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 556:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 557:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 558
	 Choosing alt 0 in insn 558:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 559:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 560:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 567:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 569:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 574:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 578:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 579
	 Choosing alt 0 in insn 579:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 580:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 581:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 584:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 585:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 586
	 Choosing alt 0 in insn 586:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 587:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 594:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 596:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 605:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 606:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 608:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 609:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 610:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 0 in insn 611:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 612:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 617:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 627:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 630:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 631:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 632
	 Choosing alt 0 in insn 632:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 633:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 635:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 640:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 642:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 651:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 652:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 655:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 656:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 657
	 Choosing alt 0 in insn 657:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 658:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (1) rzw {*call_value}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 662:  (0) =x  (1) xm {*truncdfsf_fast_sse}
      Creating newreg=828 from oldreg=423, assigning class SSE_REGS to r828
  662: r828:SF=float_trunc(r422:DF)
      REG_DEAD r422:DF
    Inserting insn reload after:
 1946: r423:SF=r828:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1946:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 663:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 664:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 665:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 666:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 667:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 668:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 677:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 679:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 681:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 682:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 684:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 688:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 693:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 694:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 697:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 698:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 699
	 Choosing alt 0 in insn 699:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 700:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (1) rzw {*call_value}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 704:  (0) =x  (1) xm {*truncdfsf_fast_sse}
      Creating newreg=829 from oldreg=438, assigning class SSE_REGS to r829
  704: r829:SF=float_trunc(r437:DF)
      REG_DEAD r437:DF
    Inserting insn reload after:
 1947: r438:SF=r829:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 1947:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 705:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 706:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 707:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 708:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 712:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 717:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 718
	 Choosing alt 0 in insn 718:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 734:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 735:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 736:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 737
	 Choosing alt 0 in insn 737:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 738:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 739:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 746:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 753:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 754:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 756:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 757
	 Choosing alt 0 in insn 757:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 758:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 759:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 767:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 775:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 776:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 777
	 Choosing alt 0 in insn 777:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 778:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 779:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 783:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 786:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 787:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 792:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 793:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 794:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 795:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 796:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 808:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 809:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 810
	 Choosing alt 0 in insn 810:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 811:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 812:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 816:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 819:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 820:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 821:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 826:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 827:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 828:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 829:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 830:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 831:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 832:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 833:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 843:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 844:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 845:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 846:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 847
	 Choosing alt 0 in insn 847:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 848:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 849:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 851:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 853:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 856:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 857:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 862:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 863:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 864:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 866:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 867:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 868:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 869
	 Choosing alt 0 in insn 869:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 870:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 877:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 878:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 879:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 881:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 882:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 883
	 Choosing alt 0 in insn 883:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 884:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 886:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 888:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 889:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 894:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 899:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 906:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 908
	 Choosing alt 0 in insn 908:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 909:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 910:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 917:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 919:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 920:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 921:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 924:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 925:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 926:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 927:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 928:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 929:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 930:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 931:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 932:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 933
	 Choosing alt 0 in insn 933:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 934:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 936:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 938:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 941:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 942:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 943:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 944:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 945:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 946:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 947:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 948
	 Choosing alt 0 in insn 948:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 949:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 951:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 953:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 954:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 964:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 970:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 971:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 972:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 973
	 Choosing alt 0 in insn 973:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 974:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 975:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 977:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 979:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 982:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 983:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 985:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 986:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 987
	 Choosing alt 0 in insn 987:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 988:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 990:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 992:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 995:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 996:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 997:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 998:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 999:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1000:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1001
	 Choosing alt 0 in insn 1001:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1002:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1004:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1006:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1007:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1012:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1017:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1019:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1020:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1021
	 Choosing alt 0 in insn 1021:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1022:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1023:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1027:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1030:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1031:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1032:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1033:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1039:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1040:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1041:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1042
	 Choosing alt 0 in insn 1042:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1043:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1044:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1046:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1048:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1051:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1052:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1053:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1058:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1059:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1060:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1061:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1062
	 Choosing alt 0 in insn 1062:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1063:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1064:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1066:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1068:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1071:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1072:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1073:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1074:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1075:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1080:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1081:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1082:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1083:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1084
	 Choosing alt 0 in insn 1084:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1085:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1086:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1088:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1090:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1093:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1094:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1095:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1100:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1101:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1102:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1103:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1104
	 Choosing alt 0 in insn 1104:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1105:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1106:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1108:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1110:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1113:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1114:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1115:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1116:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1117:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1123:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1124:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1125:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1126
	 Choosing alt 0 in insn 1126:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1127:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1128:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1130:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1132:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1135:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1138:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1147:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1148:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1149:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1151:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1153:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1156:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1161:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1162:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1165:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1168:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1172:  (0) rzw {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1175:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1176:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1177:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1178:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1179:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1180:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1181:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1182:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1183:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1184:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1185:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1186:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1187:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1188:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1189:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1190:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1191:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1192:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1193:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1194:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1195:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1196:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1197:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1198:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1199:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1200:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1201:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1202:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1203:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1204:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1209:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1211:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1212:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1213
	 Choosing alt 0 in insn 1213:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1214:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1215:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1217:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1222:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1225:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1234:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1235:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1236:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1238:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1240:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1243:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1248:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1253:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1254:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1255:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1256:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1257
	 Choosing alt 0 in insn 1257:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1258:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1259:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1263:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1266:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1267:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1268:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1269:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1272:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1277:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1278:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1284:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1285:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1286:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1287
	 Choosing alt 0 in insn 1287:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1288:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1289:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1291:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1293:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1296:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1297:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1298:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1299:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1300:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1308:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1309:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1310:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1316:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1317:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1318:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1319
	 Choosing alt 0 in insn 1319:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1320:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1321:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1323:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1325:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1328:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1329:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1330:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1331:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1334:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1339:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1340:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1345:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1346:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1347:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1348:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1349
	 Choosing alt 0 in insn 1349:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1350:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1351:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1353:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1355:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1358:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1359:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1360:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1361:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1362:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1365:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1370:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1371:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1372:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1377:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1378:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1379:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1380:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1381
	 Choosing alt 0 in insn 1381:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1382:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1383:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1385:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1387:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1390:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1391:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1396:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1397:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1398:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1399:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1400
	 Choosing alt 0 in insn 1400:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1401:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1402:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1404:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1409:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1410:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1415:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1416:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1417:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1418:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1419
	 Choosing alt 0 in insn 1419:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1420:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1421:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1423:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1425:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1428:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1429:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1430:  (0) rzw {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1434:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1435:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1436:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1437:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1442:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1446:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1447:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1450:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1453:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1456:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1460:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1465:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1466:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1467:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1470:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1471:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1472:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1475:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1476:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1477:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1478:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1481:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1486:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1489:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1490:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1494:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1495:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1496:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1499:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1500:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1501:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1502:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1505:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1506:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1507:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1508:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1509:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1512:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1515:  (0) m  (1) qn {*movqi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1516:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1517:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1522:  (0) ?mq {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1525:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1526:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1530:  (0) m  (1) qn {*movqi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1531:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1532:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1537:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1539:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1540:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1543:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1548:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1551:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1558:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1559:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1560:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1563:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1564:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1565:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1568:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1569:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1570:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1573:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1578:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1581:  (0) ?mq {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1585:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1586:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1587:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1588:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1591:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1600:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1603:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1604:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1605:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1608:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1609:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1610:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1613:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1614:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1615:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1618:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1623:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1626:  (0) ?mq {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1630:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1631:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1632:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1633:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1636:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1641:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1646:  (0) ?mr {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1649:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1650:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1653:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1654:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1655:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1656:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1659:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1660:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1661:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1662:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1665:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1666:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1667:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1670:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1673:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1676:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1677:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1678:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1681:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1682:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1683:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1684:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1685:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1688:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1689:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1690:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1691:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1692:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1693:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1696:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1697:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1698:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1699:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1700:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1703:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1704:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1705:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1706:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1707:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1710:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1715:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1716:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1717:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1718:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1721:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1722:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1723:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1724:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1725:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1728:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1729:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1730:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1731:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1732:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1733:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1736:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1737:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1738:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1739:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1740:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1743:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1744:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1745:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1746:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1747:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1750:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1755:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1756:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1758:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1760:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1763:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1768:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1769:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1770:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1772:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1774:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1777:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1782:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1785:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1790:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1793:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1798:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166

********** Pseudo live ranges #1: **********

  BB 30
   Insn 749: point = 0
   Insn 748: point = 0
   Insn 747: point = 0
   Insn 746: point = 0
  BB 32
   Insn 769: point = 0
   Insn 768: point = 0
   Insn 767: point = 0
   Insn 766: point = 0
  BB 106
   Insn 1430: point = 0
   Insn 1429: point = 0
   Insn 1428: point = 0
  BB 166
   Insn 1808: point = 0
   Insn 1807: point = 0
   Insn 1803: point = 1
  BB 164
   Insn 1935: point = 4
   Insn 1793: point = 4
  BB 160
   Insn 1931: point = 5
   Insn 1777: point = 5
  BB 158
   Insn 1929: point = 6
   Insn 1763: point = 6
  BB 150
   Insn 1925: point = 7
   Insn 1641: point = 7
  BB 149
   Insn 1923: point = 8
   Insn 1636: point = 8
  BB 148
   Insn 1634: point = 9
   Insn 1633: point = 9
   Insn 1632: point = 10
   Insn 1631: point = 12
   Insn 1630: point = 14
  BB 147
   Insn 1627: point = 15
   Insn 1626: point = 15
  BB 146
   Insn 1624: point = 15
   Insn 1623: point = 15
  BB 145
   Insn 1921: point = 15
   Insn 1618: point = 15
  BB 144
   Insn 1616: point = 16
   Insn 1615: point = 16
   Insn 1614: point = 17
   Insn 1613: point = 19
  BB 143
   Insn 1611: point = 20
   Insn 1610: point = 20
   Insn 1609: point = 21
   Insn 1608: point = 23
  BB 142
   Insn 1606: point = 24
   Insn 1605: point = 24
   Insn 1604: point = 25
   Insn 1603: point = 27
  BB 140
   Insn 1919: point = 28
   Insn 1591: point = 28
  BB 136
   Insn 1917: point = 29
   Insn 1573: point = 29
  BB 117
   Insn 1907: point = 30
   Insn 1481: point = 30
  BB 113
   Insn 1905: point = 31
   Insn 1460: point = 31
  BB 107
   Insn 1903: point = 32
   Insn 1437: point = 32
   Insn 1436: point = 33
   Insn 1435: point = 34
   Insn 1434: point = 35
  BB 105
   Insn 1426: point = 36
   Insn 1425: point = 36
   Insn 1424: point = 37
   Insn 1423: point = 38
   Insn 1422: point = 38
   Insn 1421: point = 39
   Insn 1420: point = 39
   Insn 1419: point = 41
   Insn 1418: point = 43
   Insn 1417: point = 44
   Insn 1416: point = 46
   Insn 1415: point = 48
  BB 99
   Insn 1895: point = 49
   Insn 1365: point = 49
  BB 95
   Insn 1891: point = 50
   Insn 1334: point = 50
  BB 91
   Insn 1887: point = 51
   Insn 1303: point = 51
  BB 87
   Insn 1883: point = 52
   Insn 1272: point = 52
  BB 83
   Insn 1879: point = 53
   Insn 1243: point = 53
  BB 81
   Insn 1877: point = 54
   Insn 1229: point = 54
  BB 72
   Insn 1873: point = 55
   Insn 1156: point = 55
  BB 70
   Insn 1871: point = 56
   Insn 1142: point = 56
  BB 56
   Insn 1859: point = 57
   Insn 1012: point = 57
  BB 52
   Insn 1855: point = 58
   Insn 964: point = 58
  BB 51
   Insn 1853: point = 59
   Insn 959: point = 59
  BB 46
   Insn 1849: point = 60
   Insn 899: point = 60
  BB 45
   Insn 1847: point = 61
   Insn 894: point = 61
  BB 40
   Insn 1843: point = 62
   Insn 838: point = 62
  BB 36
   Insn 1839: point = 63
   Insn 801: point = 63
  BB 27
   Insn 1833: point = 64
   Insn 724: point = 64
  BB 25
   Insn 1829: point = 65
   Insn 622: point = 65
  BB 20
   Insn 1823: point = 66
   Insn 549: point = 66
  BB 14
   Insn 1819: point = 67
   Insn 389: point = 67
  BB 8
   Insn 1815: point = 68
   Insn 320: point = 68
  BB 162
   Insn 1933: point = 69
   Insn 1785: point = 69
  BB 165
   Insn 1798: point = 70
  BB 163
   Insn 1791: point = 71
   Insn 1790: point = 71
  BB 161
   Insn 1783: point = 71
   Insn 1782: point = 71
  BB 159
   Insn 1775: point = 71
   Insn 1774: point = 71
   Insn 1773: point = 72
   Insn 1772: point = 73
   Insn 1771: point = 73
   Insn 1770: point = 74
   Insn 1769: point = 74
   Insn 1768: point = 76
  BB 157
   Insn 1761: point = 77
   Insn 1760: point = 77
   Insn 1759: point = 78
   Insn 1758: point = 79
   Insn 1757: point = 79
   Insn 1756: point = 80
   Insn 1755: point = 80
  BB 155
   Insn 1927: point = 81
   Insn 1710: point = 81
   Insn 1709: point = 81
   Insn 1708: point = 82
   Insn 1707: point = 83
   Insn 1706: point = 85
   Insn 1705: point = 86
   Insn 1704: point = 88
   Insn 1703: point = 89
   Insn 1702: point = 89
   Insn 1701: point = 90
   Insn 1700: point = 91
   Insn 1699: point = 93
   Insn 1698: point = 94
   Insn 1697: point = 96
   Insn 1696: point = 97
   Insn 1695: point = 97
   Insn 1694: point = 98
   Insn 1693: point = 99
   Insn 1692: point = 101
   Insn 1691: point = 103
   Insn 1690: point = 104
   Insn 1689: point = 106
   Insn 1688: point = 107
   Insn 1687: point = 107
   Insn 1686: point = 108
   Insn 1685: point = 109
   Insn 1684: point = 111
   Insn 1683: point = 112
   Insn 1682: point = 114
   Insn 1681: point = 115
   Insn 1680: point = 115
   Insn 1679: point = 116
   Insn 1678: point = 117
   Insn 1677: point = 119
   Insn 1676: point = 120
  BB 156
   Insn 1750: point = 121
   Insn 1749: point = 121
   Insn 1748: point = 122
   Insn 1747: point = 123
   Insn 1746: point = 125
   Insn 1745: point = 126
   Insn 1744: point = 128
   Insn 1743: point = 129
   Insn 1742: point = 129
   Insn 1741: point = 130
   Insn 1740: point = 131
   Insn 1739: point = 133
   Insn 1738: point = 134
   Insn 1737: point = 136
   Insn 1736: point = 137
   Insn 1735: point = 137
   Insn 1734: point = 138
   Insn 1733: point = 139
   Insn 1732: point = 141
   Insn 1731: point = 142
   Insn 1730: point = 144
   Insn 1729: point = 146
   Insn 1728: point = 147
   Insn 1727: point = 147
   Insn 1726: point = 148
   Insn 1725: point = 149
   Insn 1724: point = 151
   Insn 1723: point = 152
   Insn 1722: point = 154
   Insn 1721: point = 155
   Insn 1720: point = 155
   Insn 1719: point = 156
   Insn 1718: point = 157
   Insn 1717: point = 159
   Insn 1716: point = 160
   Insn 1715: point = 162
  BB 154
   Insn 1674: point = 163
   Insn 1673: point = 163
  BB 153
   Insn 1670: point = 163
   Insn 1669: point = 163
   Insn 1668: point = 164
   Insn 1667: point = 165
   Insn 1666: point = 166
   Insn 1665: point = 168
  BB 152
   Insn 1663: point = 169
   Insn 1662: point = 169
   Insn 1661: point = 170
   Insn 1660: point = 172
   Insn 1659: point = 173
   Insn 1658: point = 173
   Insn 1657: point = 174
   Insn 1656: point = 175
   Insn 1655: point = 176
   Insn 1654: point = 178
   Insn 1653: point = 179
   Insn 1652: point = 179
   Insn 1651: point = 180
   Insn 1650: point = 181
   Insn 1649: point = 182
  BB 151
   Insn 1647: point = 183
   Insn 1646: point = 183
  BB 132
   Insn 1915: point = 183
   Insn 1810: point = 183
  BB 129
   Insn 1913: point = 183
   Insn 1543: point = 183
  BB 127
   Insn 1911: point = 183
   Insn 1532: point = 183
   Insn 1531: point = 183
   Insn 1530: point = 183
  BB 124
   Insn 1909: point = 183
   Insn 1517: point = 183
   Insn 1516: point = 183
   Insn 1515: point = 183
  BB 131
   Insn 1551: point = 183
  BB 130
   Insn 1549: point = 183
   Insn 1548: point = 183
  BB 128
   Insn 1541: point = 183
   Insn 1540: point = 183
   Insn 1539: point = 183
   Insn 1538: point = 184
   Insn 1537: point = 185
  BB 126
   Insn 1528: point = 185
   Insn 1527: point = 185
   Insn 1526: point = 186
   Insn 1525: point = 188
  BB 125
   Insn 1523: point = 189
   Insn 1522: point = 189
  BB 123
   Insn 1513: point = 189
   Insn 1512: point = 189
  BB 122
   Insn 1510: point = 189
   Insn 1509: point = 189
   Insn 1508: point = 190
   Insn 1507: point = 192
   Insn 1506: point = 193
   Insn 1505: point = 194
  BB 116
   Insn 1479: point = 195
   Insn 1478: point = 195
   Insn 1477: point = 196
   Insn 1476: point = 198
   Insn 1475: point = 200
  BB 141
   Insn 1601: point = 201
   Insn 1600: point = 201
  BB 139
   Insn 1589: point = 201
   Insn 1588: point = 201
   Insn 1587: point = 202
   Insn 1586: point = 204
   Insn 1585: point = 206
  BB 138
   Insn 1582: point = 207
   Insn 1581: point = 207
  BB 137
   Insn 1579: point = 207
   Insn 1578: point = 207
  BB 135
   Insn 1571: point = 207
   Insn 1570: point = 207
   Insn 1569: point = 208
   Insn 1568: point = 210
  BB 134
   Insn 1566: point = 211
   Insn 1565: point = 211
   Insn 1564: point = 212
   Insn 1563: point = 214
  BB 133
   Insn 1561: point = 215
   Insn 1560: point = 215
   Insn 1559: point = 216
   Insn 1558: point = 218
  BB 121
   Insn 1503: point = 219
   Insn 1502: point = 219
   Insn 1501: point = 220
   Insn 1500: point = 222
   Insn 1499: point = 224
  BB 120
   Insn 1497: point = 225
   Insn 1496: point = 225
   Insn 1495: point = 226
   Insn 1494: point = 228
  BB 119
   Insn 1492: point = 229
   Insn 1491: point = 229
   Insn 1490: point = 230
   Insn 1489: point = 232
  BB 118
   Insn 1487: point = 233
   Insn 1486: point = 233
  BB 115
   Insn 1473: point = 233
   Insn 1472: point = 233
   Insn 1471: point = 234
   Insn 1470: point = 236
  BB 114
   Insn 1468: point = 237
   Insn 1467: point = 237
   Insn 1466: point = 238
   Insn 1465: point = 240
  BB 112
   Insn 1457: point = 241
   Insn 1456: point = 241
  BB 111
   Insn 1454: point = 241
   Insn 1453: point = 241
  BB 110
   Insn 1451: point = 241
   Insn 1450: point = 241
  BB 109
   Insn 1448: point = 241
   Insn 1447: point = 241
   Insn 1446: point = 242
  BB 5
   Insn 1813: point = 243
   Insn 303: point = 243
   Insn 302: point = 244
   Insn 301: point = 245
  BB 4
   Insn 299: point = 245
   Insn 298: point = 245
  BB 2
   Insn 1811: point = 245
   Insn 40: point = 245
   Insn 39: point = 245
   Insn 38: point = 246
   Insn 1943: point = 246
   Insn 37: point = 247
   Insn 1942: point = 248
   Insn 36: point = 249
   Insn 35: point = 250
   Insn 34: point = 252
   Insn 33: point = 253
   Insn 32: point = 254
   Insn 1941: point = 254
   Insn 31: point = 255
   Insn 1940: point = 256
   Insn 30: point = 257
   Insn 29: point = 258
   Insn 28: point = 260
   Insn 27: point = 261
   Insn 26: point = 262
   Insn 1939: point = 262
   Insn 25: point = 263
   Insn 1938: point = 264
   Insn 24: point = 265
   Insn 23: point = 266
   Insn 22: point = 267
   Insn 21: point = 267
   Insn 20: point = 267
   Insn 19: point = 267
   Insn 18: point = 267
   Insn 17: point = 267
   Insn 16: point = 267
   Insn 15: point = 267
   Insn 14: point = 267
   Insn 13: point = 267
   Insn 12: point = 267
   Insn 11: point = 267
   Insn 7: point = 267
   Insn 6: point = 267
   Insn 5: point = 267
   Insn 4: point = 267
   Insn 3: point = 267
   Insn 2: point = 267
  BB 3
   Insn 294: point = 267
   Insn 293: point = 267
   Insn 292: point = 268
   Insn 291: point = 270
   Insn 290: point = 271
   Insn 289: point = 273
   Insn 288: point = 275
   Insn 287: point = 277
   Insn 286: point = 278
   Insn 285: point = 278
   Insn 284: point = 278
   Insn 283: point = 278
   Insn 282: point = 279
   Insn 281: point = 281
   Insn 280: point = 282
   Insn 279: point = 283
   Insn 278: point = 285
   Insn 277: point = 286
   Insn 276: point = 288
   Insn 275: point = 290
   Insn 274: point = 292
   Insn 273: point = 293
   Insn 272: point = 293
   Insn 271: point = 293
   Insn 270: point = 293
   Insn 269: point = 294
   Insn 268: point = 296
   Insn 267: point = 297
   Insn 266: point = 298
   Insn 265: point = 300
   Insn 264: point = 301
   Insn 263: point = 303
   Insn 262: point = 305
   Insn 261: point = 307
   Insn 260: point = 308
   Insn 259: point = 308
   Insn 258: point = 308
   Insn 257: point = 308
   Insn 256: point = 309
   Insn 255: point = 311
   Insn 254: point = 312
   Insn 253: point = 313
   Insn 252: point = 315
   Insn 251: point = 316
   Insn 250: point = 318
   Insn 249: point = 320
   Insn 248: point = 322
   Insn 247: point = 323
   Insn 246: point = 323
   Insn 245: point = 323
   Insn 244: point = 323
   Insn 243: point = 324
   Insn 242: point = 326
   Insn 241: point = 327
   Insn 240: point = 328
   Insn 239: point = 330
   Insn 238: point = 331
   Insn 237: point = 333
   Insn 236: point = 335
   Insn 235: point = 337
   Insn 234: point = 338
   Insn 233: point = 338
   Insn 232: point = 338
   Insn 231: point = 338
   Insn 230: point = 339
   Insn 229: point = 341
   Insn 228: point = 342
   Insn 227: point = 343
   Insn 226: point = 345
   Insn 225: point = 346
   Insn 224: point = 348
   Insn 223: point = 350
   Insn 222: point = 352
   Insn 221: point = 353
   Insn 220: point = 353
   Insn 219: point = 353
   Insn 218: point = 353
   Insn 217: point = 354
   Insn 216: point = 356
   Insn 215: point = 357
   Insn 214: point = 358
   Insn 213: point = 359
   Insn 212: point = 361
   Insn 211: point = 362
   Insn 210: point = 364
   Insn 209: point = 366
   Insn 208: point = 368
   Insn 207: point = 369
   Insn 206: point = 369
   Insn 205: point = 369
   Insn 204: point = 369
   Insn 203: point = 370
   Insn 202: point = 372
   Insn 201: point = 373
   Insn 200: point = 374
   Insn 199: point = 376
   Insn 198: point = 377
   Insn 197: point = 379
   Insn 196: point = 381
   Insn 195: point = 383
   Insn 194: point = 384
   Insn 193: point = 384
   Insn 192: point = 384
   Insn 191: point = 384
   Insn 190: point = 385
   Insn 189: point = 387
   Insn 188: point = 388
   Insn 187: point = 389
   Insn 186: point = 391
   Insn 185: point = 392
   Insn 184: point = 394
   Insn 183: point = 396
   Insn 182: point = 398
   Insn 181: point = 399
   Insn 180: point = 399
   Insn 179: point = 399
   Insn 178: point = 399
   Insn 177: point = 400
   Insn 176: point = 402
   Insn 175: point = 403
   Insn 174: point = 404
   Insn 173: point = 406
   Insn 172: point = 407
   Insn 171: point = 409
   Insn 170: point = 411
   Insn 169: point = 413
   Insn 168: point = 414
   Insn 167: point = 414
   Insn 166: point = 414
   Insn 165: point = 414
   Insn 164: point = 415
   Insn 163: point = 417
   Insn 162: point = 418
   Insn 161: point = 419
   Insn 160: point = 421
   Insn 159: point = 422
   Insn 158: point = 424
   Insn 157: point = 426
   Insn 156: point = 428
   Insn 155: point = 429
   Insn 154: point = 429
   Insn 153: point = 429
   Insn 152: point = 429
   Insn 151: point = 430
   Insn 150: point = 432
   Insn 149: point = 433
   Insn 148: point = 434
   Insn 147: point = 435
   Insn 146: point = 437
   Insn 145: point = 438
   Insn 144: point = 440
   Insn 143: point = 442
   Insn 142: point = 444
   Insn 141: point = 445
   Insn 140: point = 445
   Insn 139: point = 445
   Insn 138: point = 445
   Insn 137: point = 446
   Insn 136: point = 448
   Insn 135: point = 449
   Insn 134: point = 450
   Insn 133: point = 452
   Insn 132: point = 453
   Insn 131: point = 455
   Insn 130: point = 457
   Insn 129: point = 459
   Insn 128: point = 460
   Insn 127: point = 460
   Insn 126: point = 460
   Insn 125: point = 460
   Insn 124: point = 461
   Insn 123: point = 463
   Insn 122: point = 464
   Insn 121: point = 465
   Insn 120: point = 467
   Insn 119: point = 468
   Insn 118: point = 470
   Insn 117: point = 472
   Insn 116: point = 474
   Insn 115: point = 475
   Insn 114: point = 475
   Insn 113: point = 475
   Insn 112: point = 475
   Insn 111: point = 476
   Insn 110: point = 478
   Insn 109: point = 479
   Insn 108: point = 480
   Insn 107: point = 482
   Insn 106: point = 483
   Insn 105: point = 485
   Insn 104: point = 487
   Insn 103: point = 489
   Insn 102: point = 490
   Insn 101: point = 490
   Insn 100: point = 490
   Insn 99: point = 490
   Insn 98: point = 491
   Insn 97: point = 493
   Insn 96: point = 494
   Insn 95: point = 495
   Insn 94: point = 497
   Insn 93: point = 498
   Insn 92: point = 500
   Insn 91: point = 502
   Insn 90: point = 504
   Insn 89: point = 505
   Insn 88: point = 505
   Insn 87: point = 505
   Insn 86: point = 505
   Insn 85: point = 506
   Insn 84: point = 508
   Insn 83: point = 509
   Insn 82: point = 510
   Insn 81: point = 511
   Insn 80: point = 513
   Insn 79: point = 514
   Insn 78: point = 516
   Insn 77: point = 518
   Insn 76: point = 520
   Insn 75: point = 521
   Insn 74: point = 521
   Insn 73: point = 521
   Insn 72: point = 521
   Insn 71: point = 522
   Insn 70: point = 524
   Insn 69: point = 525
   Insn 68: point = 526
   Insn 67: point = 528
   Insn 66: point = 529
   Insn 65: point = 531
   Insn 64: point = 533
   Insn 63: point = 535
   Insn 62: point = 536
   Insn 61: point = 536
   Insn 60: point = 536
   Insn 59: point = 536
   Insn 58: point = 537
   Insn 57: point = 539
   Insn 56: point = 540
   Insn 55: point = 541
   Insn 54: point = 543
   Insn 53: point = 544
   Insn 52: point = 546
   Insn 51: point = 548
   Insn 50: point = 550
   Insn 49: point = 551
   Insn 48: point = 551
   Insn 47: point = 551
   Insn 46: point = 551
   Insn 45: point = 552
   Insn 44: point = 554
  BB 108
   Insn 1442: point = 555
  BB 104
   Insn 1901: point = 555
   Insn 1410: point = 555
   Insn 1409: point = 556
  BB 103
   Insn 1407: point = 557
   Insn 1406: point = 557
   Insn 1405: point = 558
   Insn 1404: point = 559
   Insn 1403: point = 559
   Insn 1402: point = 560
   Insn 1401: point = 560
   Insn 1400: point = 562
   Insn 1399: point = 564
   Insn 1398: point = 565
   Insn 1397: point = 567
   Insn 1396: point = 569
  BB 100
   Insn 1897: point = 570
   Insn 1372: point = 570
   Insn 1371: point = 571
   Insn 1370: point = 573
  BB 98
   Insn 1363: point = 574
   Insn 1362: point = 574
   Insn 1361: point = 575
   Insn 1360: point = 577
   Insn 1359: point = 579
   Insn 1358: point = 580
  BB 96
   Insn 1893: point = 580
   Insn 1340: point = 580
   Insn 1339: point = 581
  BB 94
   Insn 1332: point = 582
   Insn 1331: point = 582
   Insn 1330: point = 583
   Insn 1329: point = 585
   Insn 1328: point = 586
  BB 92
   Insn 1889: point = 586
   Insn 1310: point = 586
   Insn 1309: point = 587
   Insn 1308: point = 589
  BB 90
   Insn 1301: point = 590
   Insn 1300: point = 590
   Insn 1299: point = 591
   Insn 1298: point = 593
   Insn 1297: point = 595
   Insn 1296: point = 596
  BB 88
   Insn 1885: point = 596
   Insn 1278: point = 596
   Insn 1277: point = 597
  BB 86
   Insn 1270: point = 598
   Insn 1269: point = 598
   Insn 1268: point = 599
   Insn 1267: point = 601
   Insn 1266: point = 602
  BB 84
   Insn 1881: point = 602
   Insn 1248: point = 602
  BB 82
   Insn 1241: point = 602
   Insn 1240: point = 602
   Insn 1239: point = 603
   Insn 1238: point = 604
   Insn 1237: point = 604
   Insn 1236: point = 605
   Insn 1235: point = 605
   Insn 1234: point = 607
  BB 80
   Insn 1226: point = 608
   Insn 1225: point = 608
  BB 79
   Insn 1223: point = 608
   Insn 1222: point = 608
  BB 77
   Insn 1875: point = 608
   Insn 1204: point = 608
   Insn 1203: point = 609
   Insn 1202: point = 611
   Insn 1201: point = 612
   Insn 1200: point = 614
   Insn 1199: point = 615
   Insn 1198: point = 616
   Insn 1197: point = 618
   Insn 1196: point = 619
   Insn 1195: point = 621
   Insn 1194: point = 622
   Insn 1193: point = 623
   Insn 1192: point = 625
   Insn 1191: point = 626
   Insn 1190: point = 628
   Insn 1189: point = 629
   Insn 1188: point = 630
   Insn 1187: point = 632
   Insn 1186: point = 633
   Insn 1185: point = 635
   Insn 1184: point = 636
   Insn 1183: point = 637
   Insn 1182: point = 639
   Insn 1181: point = 640
   Insn 1180: point = 642
   Insn 1179: point = 643
   Insn 1178: point = 644
   Insn 1177: point = 646
   Insn 1176: point = 647
   Insn 1175: point = 649
  BB 76
   Insn 1172: point = 650
  BB 75
   Insn 1169: point = 650
   Insn 1168: point = 650
  BB 74
   Insn 1166: point = 650
   Insn 1165: point = 650
  BB 73
   Insn 1163: point = 650
   Insn 1162: point = 650
   Insn 1161: point = 650
  BB 71
   Insn 1154: point = 650
   Insn 1153: point = 650
   Insn 1152: point = 651
   Insn 1151: point = 652
   Insn 1150: point = 652
   Insn 1149: point = 653
   Insn 1148: point = 653
   Insn 1147: point = 655
  BB 69
   Insn 1139: point = 656
   Insn 1138: point = 656
  BB 68
   Insn 1136: point = 656
   Insn 1135: point = 656
  BB 66
   Insn 1869: point = 656
   Insn 1117: point = 656
   Insn 1116: point = 657
   Insn 1115: point = 659
   Insn 1114: point = 660
   Insn 1113: point = 660
  BB 64
   Insn 1867: point = 660
   Insn 1095: point = 660
   Insn 1094: point = 661
   Insn 1093: point = 662
  BB 62
   Insn 1865: point = 662
   Insn 1075: point = 662
   Insn 1074: point = 663
   Insn 1073: point = 665
   Insn 1072: point = 666
   Insn 1071: point = 666
  BB 60
   Insn 1863: point = 666
   Insn 1053: point = 666
   Insn 1052: point = 667
   Insn 1051: point = 668
  BB 58
   Insn 1861: point = 668
   Insn 1033: point = 668
   Insn 1032: point = 669
   Insn 1031: point = 671
   Insn 1030: point = 672
  BB 55
   Insn 1857: point = 672
   Insn 1007: point = 672
   Insn 1006: point = 672
   Insn 1005: point = 672
   Insn 1004: point = 673
   Insn 1003: point = 673
   Insn 1002: point = 674
   Insn 1001: point = 676
   Insn 1000: point = 678
   Insn 999: point = 679
   Insn 998: point = 681
   Insn 997: point = 683
   Insn 996: point = 684
   Insn 995: point = 686
  BB 54
   Insn 993: point = 687
   Insn 992: point = 687
   Insn 991: point = 688
   Insn 990: point = 689
   Insn 989: point = 689
   Insn 988: point = 690
   Insn 987: point = 692
   Insn 986: point = 694
   Insn 985: point = 695
   Insn 984: point = 697
   Insn 983: point = 699
   Insn 982: point = 700
  BB 50
   Insn 1851: point = 700
   Insn 954: point = 700
   Insn 953: point = 700
   Insn 952: point = 700
   Insn 951: point = 701
   Insn 950: point = 701
   Insn 949: point = 702
   Insn 948: point = 704
   Insn 947: point = 706
   Insn 946: point = 707
   Insn 945: point = 709
   Insn 944: point = 711
   Insn 943: point = 712
   Insn 942: point = 714
   Insn 941: point = 716
  BB 49
   Insn 939: point = 717
   Insn 938: point = 717
   Insn 937: point = 718
   Insn 936: point = 719
   Insn 935: point = 719
   Insn 934: point = 720
   Insn 933: point = 722
   Insn 932: point = 724
   Insn 931: point = 725
   Insn 930: point = 727
   Insn 929: point = 729
   Insn 928: point = 730
   Insn 927: point = 730
   Insn 926: point = 731
   Insn 925: point = 733
   Insn 924: point = 734
  BB 48
   Insn 922: point = 734
   Insn 921: point = 734
   Insn 920: point = 735
   Insn 919: point = 737
   Insn 918: point = 739
   Insn 917: point = 740
  BB 44
   Insn 1845: point = 740
   Insn 889: point = 740
   Insn 888: point = 740
   Insn 887: point = 740
   Insn 886: point = 741
   Insn 885: point = 741
   Insn 884: point = 742
   Insn 883: point = 744
   Insn 882: point = 746
   Insn 881: point = 747
   Insn 880: point = 749
   Insn 879: point = 751
   Insn 878: point = 752
   Insn 877: point = 754
  BB 43
   Insn 875: point = 755
   Insn 874: point = 755
   Insn 873: point = 756
   Insn 872: point = 757
   Insn 871: point = 757
   Insn 870: point = 758
   Insn 869: point = 760
   Insn 868: point = 762
   Insn 867: point = 763
   Insn 866: point = 765
   Insn 865: point = 767
   Insn 864: point = 768
   Insn 863: point = 768
   Insn 862: point = 769
  BB 42
   Insn 860: point = 770
   Insn 859: point = 770
   Insn 858: point = 771
   Insn 857: point = 773
   Insn 856: point = 774
  BB 39
   Insn 1841: point = 774
   Insn 833: point = 774
   Insn 832: point = 775
   Insn 831: point = 776
   Insn 830: point = 778
   Insn 829: point = 779
   Insn 828: point = 780
   Insn 827: point = 782
   Insn 826: point = 783
  BB 38
   Insn 824: point = 783
   Insn 823: point = 783
   Insn 822: point = 784
   Insn 821: point = 786
   Insn 820: point = 788
   Insn 819: point = 789
  BB 35
   Insn 1837: point = 789
   Insn 796: point = 789
   Insn 795: point = 790
   Insn 794: point = 791
   Insn 793: point = 792
   Insn 792: point = 793
  BB 34
   Insn 790: point = 794
   Insn 789: point = 794
   Insn 788: point = 795
   Insn 787: point = 797
   Insn 786: point = 798
  BB 28
   Insn 1835: point = 798
  BB 26
   Insn 1831: point = 798
   Insn 719: point = 798
   Insn 718: point = 799
   Insn 717: point = 801
   Insn 716: point = 802
   Insn 715: point = 804
   Insn 714: point = 806
   Insn 713: point = 808
   Insn 712: point = 809
   Insn 711: point = 809
   Insn 710: point = 809
   Insn 709: point = 809
   Insn 708: point = 810
   Insn 707: point = 812
   Insn 706: point = 814
   Insn 705: point = 815
   Insn 1947: point = 816
	Hard reg 0 is preferable by r829 with profit 1
   Insn 704: point = 818
   Insn 703: point = 820
   Insn 702: point = 821
   Insn 701: point = 821
   Insn 700: point = 822
   Insn 699: point = 824
   Insn 698: point = 826
   Insn 697: point = 827
   Insn 696: point = 829
   Insn 695: point = 831
   Insn 694: point = 832
   Insn 693: point = 834
   Insn 692: point = 835
   Insn 691: point = 837
   Insn 690: point = 839
   Insn 689: point = 841
   Insn 688: point = 842
   Insn 687: point = 842
   Insn 686: point = 842
   Insn 685: point = 842
   Insn 684: point = 843
   Insn 683: point = 845
   Insn 682: point = 847
   Insn 681: point = 848
   Insn 680: point = 849
   Insn 679: point = 851
   Insn 678: point = 852
   Insn 677: point = 854
   Insn 676: point = 855
   Insn 675: point = 857
   Insn 674: point = 859
   Insn 673: point = 861
   Insn 672: point = 862
   Insn 671: point = 862
   Insn 670: point = 862
   Insn 669: point = 862
   Insn 668: point = 863
   Insn 667: point = 865
   Insn 666: point = 867
   Insn 665: point = 868
   Insn 664: point = 869
   Insn 663: point = 870
   Insn 1946: point = 871
	Hard reg 0 is preferable by r828 with profit 1
   Insn 662: point = 873
   Insn 661: point = 875
   Insn 660: point = 876
   Insn 659: point = 876
   Insn 658: point = 877
   Insn 657: point = 879
   Insn 656: point = 881
   Insn 655: point = 882
   Insn 654: point = 884
   Insn 653: point = 886
   Insn 652: point = 887
   Insn 651: point = 889
   Insn 650: point = 890
   Insn 649: point = 892
   Insn 648: point = 894
   Insn 647: point = 896
   Insn 646: point = 897
   Insn 645: point = 897
   Insn 644: point = 897
   Insn 643: point = 897
   Insn 642: point = 898
   Insn 641: point = 900
   Insn 640: point = 902
  BB 24
   Insn 1827: point = 903
  BB 23
   Insn 638: point = 903
   Insn 637: point = 903
   Insn 636: point = 904
   Insn 635: point = 905
   Insn 634: point = 905
   Insn 633: point = 906
   Insn 632: point = 908
   Insn 631: point = 910
   Insn 630: point = 911
   Insn 629: point = 913
   Insn 628: point = 915
   Insn 627: point = 916
   Insn 617: point = 916
   Insn 616: point = 917
   Insn 615: point = 919
   Insn 614: point = 920
   Insn 613: point = 920
   Insn 612: point = 921
   Insn 611: point = 923
   Insn 610: point = 925
   Insn 609: point = 926
   Insn 608: point = 928
   Insn 607: point = 930
   Insn 606: point = 931
   Insn 605: point = 933
   Insn 604: point = 934
   Insn 603: point = 936
   Insn 602: point = 938
   Insn 601: point = 940
   Insn 600: point = 941
   Insn 599: point = 941
   Insn 598: point = 941
   Insn 597: point = 941
   Insn 596: point = 942
   Insn 595: point = 944
   Insn 594: point = 946
  BB 22
   Insn 592: point = 947
   Insn 591: point = 947
   Insn 590: point = 948
   Insn 589: point = 949
   Insn 588: point = 949
   Insn 587: point = 950
   Insn 586: point = 952
   Insn 585: point = 954
   Insn 584: point = 955
   Insn 583: point = 957
   Insn 582: point = 959
   Insn 581: point = 960
   Insn 580: point = 960
   Insn 579: point = 961
   Insn 578: point = 963
   Insn 577: point = 964
   Insn 576: point = 966
   Insn 575: point = 968
   Insn 574: point = 970
   Insn 573: point = 971
   Insn 572: point = 971
   Insn 571: point = 971
   Insn 570: point = 971
   Insn 569: point = 972
   Insn 568: point = 974
   Insn 567: point = 976
  BB 21
   Insn 565: point = 977
   Insn 564: point = 977
   Insn 563: point = 978
   Insn 562: point = 979
   Insn 561: point = 979
   Insn 560: point = 980
   Insn 559: point = 980
   Insn 558: point = 982
   Insn 557: point = 984
   Insn 556: point = 985
   Insn 555: point = 987
   Insn 554: point = 989
  BB 19
   Insn 1821: point = 990
   Insn 544: point = 990
   Insn 543: point = 991
   Insn 542: point = 993
   Insn 541: point = 994
   Insn 540: point = 996
   Insn 539: point = 998
   Insn 538: point = 1000
   Insn 537: point = 1001
   Insn 536: point = 1001
   Insn 535: point = 1001
   Insn 534: point = 1001
   Insn 533: point = 1002
   Insn 532: point = 1004
   Insn 531: point = 1006
   Insn 530: point = 1007
   Insn 1945: point = 1008
	Hard reg 0 is preferable by r827 with profit 1
   Insn 529: point = 1010
   Insn 528: point = 1012
   Insn 527: point = 1013
   Insn 526: point = 1013
   Insn 525: point = 1014
   Insn 524: point = 1016
   Insn 523: point = 1018
   Insn 522: point = 1019
   Insn 521: point = 1021
   Insn 520: point = 1023
   Insn 519: point = 1024
   Insn 518: point = 1026
   Insn 517: point = 1027
   Insn 516: point = 1029
   Insn 515: point = 1031
   Insn 514: point = 1033
   Insn 513: point = 1034
   Insn 512: point = 1034
   Insn 511: point = 1034
   Insn 510: point = 1034
   Insn 509: point = 1035
   Insn 508: point = 1037
   Insn 507: point = 1039
   Insn 506: point = 1040
   Insn 505: point = 1041
   Insn 504: point = 1042
   Insn 1944: point = 1043
	Hard reg 0 is preferable by r826 with profit 1
   Insn 503: point = 1045
   Insn 502: point = 1047
   Insn 501: point = 1048
   Insn 500: point = 1048
   Insn 499: point = 1049
   Insn 498: point = 1051
   Insn 497: point = 1053
   Insn 496: point = 1054
   Insn 495: point = 1056
   Insn 494: point = 1058
   Insn 493: point = 1059
   Insn 492: point = 1061
   Insn 491: point = 1062
   Insn 490: point = 1064
   Insn 489: point = 1066
   Insn 488: point = 1068
   Insn 487: point = 1069
   Insn 486: point = 1069
   Insn 485: point = 1069
   Insn 484: point = 1069
   Insn 483: point = 1070
   Insn 482: point = 1072
   Insn 481: point = 1074
  BB 18
   Insn 479: point = 1075
   Insn 478: point = 1075
   Insn 477: point = 1076
   Insn 476: point = 1077
   Insn 475: point = 1077
   Insn 474: point = 1078
   Insn 473: point = 1080
   Insn 472: point = 1082
   Insn 471: point = 1083
   Insn 470: point = 1085
   Insn 469: point = 1087
   Insn 468: point = 1088
   Insn 467: point = 1088
   Insn 466: point = 1089
   Insn 465: point = 1091
   Insn 464: point = 1092
   Insn 463: point = 1094
   Insn 462: point = 1096
   Insn 461: point = 1098
   Insn 460: point = 1099
   Insn 459: point = 1099
   Insn 458: point = 1099
   Insn 457: point = 1099
   Insn 456: point = 1100
   Insn 455: point = 1102
   Insn 454: point = 1104
  BB 17
   Insn 452: point = 1105
   Insn 451: point = 1105
   Insn 450: point = 1106
   Insn 449: point = 1107
   Insn 448: point = 1107
   Insn 447: point = 1108
   Insn 446: point = 1108
   Insn 445: point = 1110
   Insn 444: point = 1112
   Insn 443: point = 1113
   Insn 442: point = 1115
   Insn 441: point = 1117
  BB 16
   Insn 438: point = 1118
   Insn 437: point = 1119
   Insn 436: point = 1121
   Insn 435: point = 1122
   Insn 434: point = 1124
   Insn 433: point = 1126
   Insn 432: point = 1128
   Insn 431: point = 1129
   Insn 430: point = 1129
   Insn 429: point = 1129
   Insn 428: point = 1129
   Insn 427: point = 1130
   Insn 426: point = 1132
   Insn 425: point = 1134
   Insn 424: point = 1135
   Insn 423: point = 1136
   Insn 422: point = 1137
   Insn 421: point = 1138
   Insn 420: point = 1140
   Insn 419: point = 1141
   Insn 418: point = 1143
   Insn 417: point = 1145
   Insn 416: point = 1147
   Insn 415: point = 1148
   Insn 414: point = 1148
   Insn 413: point = 1148
   Insn 412: point = 1148
   Insn 411: point = 1149
   Insn 410: point = 1151
   Insn 409: point = 1153
  BB 15
   Insn 407: point = 1154
   Insn 406: point = 1154
   Insn 405: point = 1155
   Insn 404: point = 1156
   Insn 403: point = 1156
   Insn 402: point = 1157
   Insn 401: point = 1157
   Insn 400: point = 1159
   Insn 399: point = 1161
   Insn 398: point = 1162
   Insn 397: point = 1164
   Insn 396: point = 1166
   Insn 395: point = 1167
   Insn 394: point = 1168
  BB 13
   Insn 387: point = 1169
   Insn 386: point = 1169
   Insn 385: point = 1170
   Insn 384: point = 1172
  BB 9
   Insn 1817: point = 1173
   Insn 339: point = 1173
   Insn 338: point = 1173
   Insn 337: point = 1173
   Insn 336: point = 1174
   Insn 335: point = 1175
   Insn 334: point = 1177
   Insn 333: point = 1179
   Insn 332: point = 1181
   Insn 331: point = 1182
   Insn 330: point = 1183
   Insn 329: point = 1185
   Insn 328: point = 1187
   Insn 327: point = 1188
   Insn 326: point = 1190
   Insn 325: point = 1192
  BB 7
   Insn 318: point = 1193
   Insn 317: point = 1193
  BB 102
   Insn 1899: point = 1193
   Insn 1391: point = 1193
   Insn 1390: point = 1194
  BB 101
   Insn 1388: point = 1195
   Insn 1387: point = 1195
   Insn 1386: point = 1196
   Insn 1385: point = 1197
   Insn 1384: point = 1197
   Insn 1383: point = 1198
   Insn 1382: point = 1198
   Insn 1381: point = 1200
   Insn 1380: point = 1202
   Insn 1379: point = 1203
   Insn 1378: point = 1205
   Insn 1377: point = 1207
  BB 97
   Insn 1356: point = 1208
   Insn 1355: point = 1208
   Insn 1354: point = 1209
   Insn 1353: point = 1210
   Insn 1352: point = 1210
   Insn 1351: point = 1211
   Insn 1350: point = 1211
   Insn 1349: point = 1213
   Insn 1348: point = 1215
   Insn 1347: point = 1216
   Insn 1346: point = 1218
   Insn 1345: point = 1220
  BB 93
   Insn 1326: point = 1221
   Insn 1325: point = 1221
   Insn 1324: point = 1222
   Insn 1323: point = 1223
   Insn 1322: point = 1223
   Insn 1321: point = 1224
   Insn 1320: point = 1224
   Insn 1319: point = 1226
   Insn 1318: point = 1228
   Insn 1317: point = 1229
   Insn 1316: point = 1231
   Insn 1315: point = 1233
  BB 89
   Insn 1294: point = 1234
   Insn 1293: point = 1234
   Insn 1292: point = 1235
   Insn 1291: point = 1236
   Insn 1290: point = 1236
   Insn 1289: point = 1237
   Insn 1288: point = 1237
   Insn 1287: point = 1239
   Insn 1286: point = 1241
   Insn 1285: point = 1242
   Insn 1284: point = 1244
   Insn 1283: point = 1246
  BB 85
   Insn 1264: point = 1247
   Insn 1263: point = 1247
   Insn 1262: point = 1248
   Insn 1261: point = 1249
   Insn 1260: point = 1249
   Insn 1259: point = 1250
   Insn 1258: point = 1250
   Insn 1257: point = 1252
   Insn 1256: point = 1254
   Insn 1255: point = 1255
   Insn 1254: point = 1257
   Insn 1253: point = 1259
  BB 78
   Insn 1220: point = 1260
   Insn 1219: point = 1260
   Insn 1218: point = 1261
   Insn 1217: point = 1262
   Insn 1216: point = 1262
   Insn 1215: point = 1263
   Insn 1214: point = 1263
   Insn 1213: point = 1265
   Insn 1212: point = 1267
   Insn 1211: point = 1268
   Insn 1210: point = 1270
   Insn 1209: point = 1272
  BB 67
   Insn 1133: point = 1273
   Insn 1132: point = 1273
   Insn 1131: point = 1274
   Insn 1130: point = 1275
   Insn 1129: point = 1275
   Insn 1128: point = 1276
   Insn 1127: point = 1276
   Insn 1126: point = 1278
   Insn 1125: point = 1280
   Insn 1124: point = 1281
   Insn 1123: point = 1283
   Insn 1122: point = 1285
  BB 65
   Insn 1111: point = 1286
   Insn 1110: point = 1286
   Insn 1109: point = 1287
   Insn 1108: point = 1288
   Insn 1107: point = 1288
   Insn 1106: point = 1289
   Insn 1105: point = 1289
   Insn 1104: point = 1291
   Insn 1103: point = 1293
   Insn 1102: point = 1294
   Insn 1101: point = 1296
   Insn 1100: point = 1298
  BB 63
   Insn 1091: point = 1299
   Insn 1090: point = 1299
   Insn 1089: point = 1300
   Insn 1088: point = 1301
   Insn 1087: point = 1301
   Insn 1086: point = 1302
   Insn 1085: point = 1302
   Insn 1084: point = 1304
   Insn 1083: point = 1306
   Insn 1082: point = 1307
   Insn 1081: point = 1309
   Insn 1080: point = 1311
  BB 61
   Insn 1069: point = 1312
   Insn 1068: point = 1312
   Insn 1067: point = 1313
   Insn 1066: point = 1314
   Insn 1065: point = 1314
   Insn 1064: point = 1315
   Insn 1063: point = 1315
   Insn 1062: point = 1317
   Insn 1061: point = 1319
   Insn 1060: point = 1320
   Insn 1059: point = 1322
   Insn 1058: point = 1324
  BB 59
   Insn 1049: point = 1325
   Insn 1048: point = 1325
   Insn 1047: point = 1326
   Insn 1046: point = 1327
   Insn 1045: point = 1327
   Insn 1044: point = 1328
   Insn 1043: point = 1328
   Insn 1042: point = 1330
   Insn 1041: point = 1332
   Insn 1040: point = 1333
   Insn 1039: point = 1335
   Insn 1038: point = 1337
  BB 57
   Insn 1028: point = 1338
   Insn 1027: point = 1338
   Insn 1026: point = 1339
   Insn 1025: point = 1340
   Insn 1024: point = 1340
   Insn 1023: point = 1341
   Insn 1022: point = 1341
   Insn 1021: point = 1343
   Insn 1020: point = 1345
   Insn 1019: point = 1346
   Insn 1018: point = 1348
   Insn 1017: point = 1350
  BB 53
   Insn 980: point = 1351
   Insn 979: point = 1351
   Insn 978: point = 1352
   Insn 977: point = 1353
   Insn 976: point = 1353
   Insn 975: point = 1354
   Insn 974: point = 1354
   Insn 973: point = 1356
   Insn 972: point = 1358
   Insn 971: point = 1359
   Insn 970: point = 1361
   Insn 969: point = 1363
  BB 47
   Insn 915: point = 1364
   Insn 914: point = 1364
   Insn 913: point = 1365
   Insn 912: point = 1366
   Insn 911: point = 1366
   Insn 910: point = 1367
   Insn 909: point = 1367
   Insn 908: point = 1369
   Insn 907: point = 1371
   Insn 906: point = 1372
   Insn 905: point = 1374
   Insn 904: point = 1376
  BB 41
   Insn 854: point = 1377
   Insn 853: point = 1377
   Insn 852: point = 1378
   Insn 851: point = 1379
   Insn 850: point = 1379
   Insn 849: point = 1380
   Insn 848: point = 1380
   Insn 847: point = 1382
   Insn 846: point = 1384
   Insn 845: point = 1385
   Insn 844: point = 1387
   Insn 843: point = 1389
  BB 37
   Insn 817: point = 1390
   Insn 816: point = 1390
   Insn 815: point = 1391
   Insn 814: point = 1392
   Insn 813: point = 1392
   Insn 812: point = 1393
   Insn 811: point = 1393
   Insn 810: point = 1395
   Insn 809: point = 1397
   Insn 808: point = 1398
   Insn 807: point = 1400
   Insn 806: point = 1402
  BB 33
   Insn 784: point = 1403
   Insn 783: point = 1403
   Insn 782: point = 1404
   Insn 781: point = 1405
   Insn 780: point = 1405
   Insn 779: point = 1406
   Insn 778: point = 1406
   Insn 777: point = 1408
   Insn 776: point = 1410
   Insn 775: point = 1411
   Insn 774: point = 1413
   Insn 773: point = 1415
  BB 31
   Insn 764: point = 1416
   Insn 763: point = 1416
   Insn 762: point = 1417
   Insn 761: point = 1418
   Insn 760: point = 1418
   Insn 759: point = 1419
   Insn 758: point = 1419
   Insn 757: point = 1421
   Insn 756: point = 1423
   Insn 755: point = 1424
   Insn 754: point = 1426
   Insn 753: point = 1428
  BB 29
   Insn 744: point = 1429
   Insn 743: point = 1429
   Insn 742: point = 1430
   Insn 741: point = 1431
   Insn 740: point = 1431
   Insn 739: point = 1432
   Insn 738: point = 1432
   Insn 737: point = 1434
   Insn 736: point = 1436
   Insn 735: point = 1437
   Insn 734: point = 1439
   Insn 733: point = 1441
  BB 12
   Insn 381: point = 1442
   Insn 380: point = 1442
   Insn 379: point = 1443
   Insn 378: point = 1444
   Insn 377: point = 1444
   Insn 376: point = 1445
   Insn 375: point = 1445
   Insn 374: point = 1447
   Insn 373: point = 1449
   Insn 372: point = 1450
   Insn 371: point = 1452
   Insn 370: point = 1454
  BB 11
   Insn 368: point = 1455
   Insn 367: point = 1455
   Insn 366: point = 1456
   Insn 365: point = 1457
   Insn 364: point = 1457
   Insn 363: point = 1458
   Insn 362: point = 1458
   Insn 361: point = 1460
   Insn 360: point = 1462
   Insn 359: point = 1463
   Insn 358: point = 1465
   Insn 357: point = 1467
  BB 10
   Insn 355: point = 1468
   Insn 354: point = 1468
   Insn 353: point = 1469
   Insn 352: point = 1470
   Insn 351: point = 1470
   Insn 350: point = 1471
   Insn 349: point = 1471
   Insn 348: point = 1473
   Insn 347: point = 1475
   Insn 346: point = 1476
   Insn 345: point = 1478
   Insn 344: point = 1480
  BB 6
   Insn 315: point = 1481
   Insn 314: point = 1481
   Insn 313: point = 1482
   Insn 312: point = 1484
   Insn 311: point = 1486
   Insn 310: point = 1488
   Insn 309: point = 1489
   Insn 308: point = 1491
   Insn 307: point = 1493
 r83: [49..70] [28..32] [15..15] [2..8]
 r84: [550..552]
 r85: [542..544]
 r86: [540..541]
 r87: [535..537]
 r88: [527..529]
 r89: [525..526]
 r90: [520..522]
 r91: [512..514]
 r92: [509..511]
 r93: [504..506]
 r94: [496..498]
 r95: [494..495]
 r96: [489..491]
 r97: [481..483]
 r98: [479..480]
 r99: [474..476]
 r100: [466..468]
 r101: [464..465]
 r102: [459..461]
 r103: [451..453]
 r104: [449..450]
 r105: [444..446]
 r106: [436..438]
 r107: [433..435]
 r108: [428..430]
 r109: [420..422]
 r110: [418..419]
 r111: [413..415]
 r112: [405..407]
 r113: [403..404]
 r114: [398..400]
 r115: [390..392]
 r116: [388..389]
 r117: [383..385]
 r118: [375..377]
 r119: [373..374]
 r120: [368..370]
 r121: [360..362]
 r122: [357..359]
 r123: [352..354]
 r124: [344..346]
 r125: [342..343]
 r126: [337..339]
 r127: [329..331]
 r128: [327..328]
 r129: [322..324]
 r130: [314..316]
 r131: [312..313]
 r132: [307..309]
 r133: [299..301]
 r134: [297..298]
 r135: [292..294]
 r136: [284..286]
 r137: [282..283]
 r138: [277..279]
 r139: [269..271]
 r140: [267..268]
 r141: [1490..1491]
 r142: [1487..1489]
 r143: [1485..1486]
 r144: [1483..1484]
 r145: [1481..1482]
 r146: [1477..1478]
 r147: [1474..1476]
 r148: [1472..1473]
 r149: [1470..1471]
 r150: [1468..1469]
 r151: [1464..1465]
 r152: [1461..1463]
 r153: [1459..1460]
 r154: [1457..1458]
 r155: [1455..1456]
 r156: [1451..1452]
 r157: [1448..1450]
 r158: [1446..1447]
 r159: [1444..1445]
 r160: [1442..1443]
 r161: [1438..1439]
 r162: [1435..1437]
 r163: [1433..1434]
 r164: [1431..1432]
 r165: [1429..1430]
 r166: [1425..1426]
 r167: [1422..1424]
 r168: [1420..1421]
 r169: [1418..1419]
 r170: [1416..1417]
 r171: [1412..1413]
 r172: [1409..1411]
 r173: [1407..1408]
 r174: [1405..1406]
 r175: [1403..1404]
 r176: [794..795]
 r177: [1399..1400]
 r178: [1396..1398]
 r179: [1394..1395]
 r180: [1392..1393]
 r181: [1390..1391]
 r182: [785..786]
 r183: [783..784]
 r184: [779..780]
 r185: [774..776]
 r186: [1386..1387]
 r187: [1383..1385]
 r188: [1381..1382]
 r189: [1379..1380]
 r190: [1377..1378]
 r191: [770..771]
 r192: [764..765]
 r193: [761..763]
 r194: [759..760]
 r195: [757..758]
 r196: [755..756]
 r197: [741..752]
 r198: [748..749]
 r199: [745..747]
 r200: [743..744]
 r201: [740..742]
 r202: [1373..1374]
 r203: [1370..1372]
 r204: [1368..1369]
 r205: [1366..1367]
 r206: [1364..1365]
 r207: [736..737]
 r208: [734..735]
 r209: [730..731]
 r210: [726..727]
 r211: [723..725]
 r212: [721..722]
 r213: [719..720]
 r214: [717..718]
 r215: [713..714]
 r216: [701..712]
 r217: [708..709]
 r218: [705..707]
 r219: [703..704]
 r220: [700..702]
 r221: [1360..1361]
 r222: [1357..1359]
 r223: [1355..1356]
 r224: [1353..1354]
 r225: [1351..1352]
 r226: [696..697]
 r227: [693..695]
 r228: [691..692]
 r229: [689..690]
 r230: [687..688]
 r231: [673..684]
 r232: [680..681]
 r233: [677..679]
 r234: [675..676]
 r235: [672..674]
 r236: [1347..1348]
 r237: [1344..1346]
 r238: [1342..1343]
 r239: [1340..1341]
 r240: [1338..1339]
 r241: [668..669]
 r242: [1334..1335]
 r243: [1331..1333]
 r244: [1329..1330]
 r245: [1327..1328]
 r246: [1325..1326]
 r247: [1321..1322]
 r248: [1318..1320]
 r249: [1316..1317]
 r250: [1314..1315]
 r251: [1312..1313]
 r252: [662..663]
 r253: [1308..1309]
 r254: [1305..1307]
 r255: [1303..1304]
 r256: [1301..1302]
 r257: [1299..1300]
 r258: [1295..1296]
 r259: [1292..1294]
 r260: [1290..1291]
 r261: [1288..1289]
 r262: [1286..1287]
 r263: [656..657]
 r264: [1282..1283]
 r265: [1279..1281]
 r266: [1277..1278]
 r267: [1275..1276]
 r268: [1273..1274]
 r269: [652..653]
 r270: [650..651]
 r271: [643..647]
 r272: [643..644]
 r273: [636..640]
 r274: [636..637]
 r275: [629..633]
 r276: [629..630]
 r277: [622..626]
 r278: [622..623]
 r279: [615..619]
 r280: [615..616]
 r281: [608..612]
 r282: [608..609]
 r283: [1269..1270]
 r284: [1266..1268]
 r285: [1264..1265]
 r286: [1262..1263]
 r287: [1260..1261]
 r288: [604..605]
 r289: [602..603]
 r290: [1256..1257]
 r291: [1253..1255]
 r292: [1251..1252]
 r293: [1249..1250]
 r294: [1247..1248]
 r295: [598..599]
 r296: [1243..1244]
 r297: [1240..1242]
 r298: [1238..1239]
 r299: [1236..1237]
 r300: [1234..1235]
 r301: [592..593]
 r302: [590..591]
 r303: [586..587]
 r304: [1230..1231]
 r305: [1227..1229]
 r306: [1225..1226]
 r307: [1223..1224]
 r308: [1221..1222]
 r309: [582..583]
 r310: [1217..1218]
 r311: [1214..1216]
 r312: [1212..1213]
 r313: [1210..1211]
 r314: [1208..1209]
 r315: [576..577]
 r316: [574..575]
 r317: [570..571]
 r318: [1204..1205]
 r319: [1201..1203]
 r320: [1199..1200]
 r321: [1197..1198]
 r322: [1195..1196]
 r323: [566..567]
 r324: [563..565]
 r325: [561..562]
 r326: [559..560]
 r327: [557..558]
 r328: [45..46]
 r329: [42..44]
 r330: [40..41]
 r331: [38..39]
 r332: [36..37]
 r333: [1169..1170]
 r334: [1163..1164]
 r335: [1160..1162]
 r336: [1158..1159]
 r337: [1156..1157]
 r338: [1154..1155]
 r339: [1150..1151]
 r340: [1147..1149]
 r341: [1139..1141]
 r342: [1137..1138]
 r343: [1131..1132]
 r344: [1128..1130]
 r345: [1120..1122]
 r346: [1118..1119]
 r347: [1114..1115]
 r348: [1111..1113]
 r349: [1109..1110]
 r350: [1107..1108]
 r351: [1105..1106]
 r352: [1101..1102]
 r353: [1098..1100]
 r354: [1090..1092]
 r355: [1088..1089]
 r356: [1084..1085]
 r357: [1081..1083]
 r358: [1079..1080]
 r359: [1077..1078]
 r360: [1075..1076]
 r361: [1071..1072]
 r362: [1068..1070]
 r363: [1060..1062]
 r364: [1042..1059]
 r365: [1055..1056]
 r366: [1052..1054]
 r367: [1050..1051]
 r368: [1048..1049]
 r369: [1046..1047]
 r370: [1042..1043]
 r371: [1036..1037]
 r372: [1033..1035]
 r373: [1025..1027]
 r374: [1007..1024]
 r375: [1020..1021]
 r376: [1017..1019]
 r377: [1015..1016]
 r378: [1013..1014]
 r379: [1011..1012]
 r380: [1007..1008]
 r381: [1003..1004]
 r382: [1000..1002]
 r383: [992..994]
 r384: [990..991]
 r385: [986..987]
 r386: [983..985]
 r387: [981..982]
 r388: [979..980]
 r389: [977..978]
 r390: [973..974]
 r391: [970..972]
 r392: [962..964]
 r393: [960..961]
 r394: [956..957]
 r395: [953..955]
 r396: [951..952]
 r397: [949..950]
 r398: [947..948]
 r399: [943..944]
 r400: [940..942]
 r401: [932..934]
 r402: [916..931]
 r403: [927..928]
 r404: [924..926]
 r405: [922..923]
 r406: [920..921]
 r407: [918..919]
 r408: [916..917]
 r409: [912..913]
 r410: [909..911]
 r411: [907..908]
 r412: [905..906]
 r413: [903..904]
 r414: [899..900]
 r415: [896..898]
 r416: [888..890]
 r417: [870..887]
 r418: [883..884]
 r419: [880..882]
 r420: [878..879]
 r421: [876..877]
 r422: [874..875]
 r423: [870..871]
 r424: [864..865]
 r425: [861..863]
 r426: [853..855]
 r427: [848..852]
 r428: [848..849]
 r429: [844..845]
 r430: [841..843]
 r431: [833..835]
 r432: [815..832]
 r433: [828..829]
 r434: [825..827]
 r435: [823..824]
 r436: [821..822]
 r437: [819..820]
 r438: [815..816]
 r439: [811..812]
 r440: [808..810]
 r441: [800..802]
 r442: [798..799]
 r443: [1189..1190]
 r444: [1186..1188]
 r445: [1184..1185]
 r446: [1174..1183]
 r447: [1173..1175]
 r448: [237..238]
 r449: [233..234]
 r450: [197..198]
 r451: [195..196]
 r452: [229..230]
 r453: [225..226]
 r454: [221..222]
 r455: [219..220]
 r456: [189..190]
 r457: [185..186]
 r458: [183..184]
 r459: [215..216]
 r460: [211..212]
 r461: [207..208]
 r462: [203..204]
 r463: [201..202]
 r464: [24..25]
 r465: [20..21]
 r466: [16..17]
 r467: [11..12]
 r468: [9..10]
 r469: [179..182]
 r470: [173..176]
 r471: [169..170]
 r472: [163..166]
 r473: [116..120]
 r474: [115..117]
 r475: [108..112]
 r476: [107..109]
 r477: [98..104]
 r478: [100..101]
 r479: [97..99]
 r480: [89..94]
 r481: [81..86]
 r482: [155..160]
 r483: [147..152]
 r484: [143..144]
 r485: [137..142]
 r486: [129..134]
 r487: [121..126]
 r488: [79..80]
 r489: [77..78]
 r490: [73..74]
 r491: [71..72]
 r492: [0..1]
 r493: [261..266]
 r494: [259..260]
 r495: [253..258]
 r496: [251..252]
 r497: [245..250]
 r498: [553..554]
 r499: [549..551] [545..546]
 r500: [547..548]
 r501: [542..543]
 r502: [538..539]
 r503: [534..536] [530..531]
 r504: [532..533]
 r505: [527..528]
 r506: [523..524]
 r507: [519..521] [515..516]
 r508: [517..518]
 r509: [512..513]
 r510: [509..510]
 r511: [507..508]
 r512: [503..505] [499..500]
 r513: [501..502]
 r514: [496..497]
 r515: [492..493]
 r516: [488..490] [484..485]
 r517: [486..487]
 r518: [481..482]
 r519: [477..478]
 r520: [473..475] [469..470]
 r521: [471..472]
 r522: [466..467]
 r523: [462..463]
 r524: [458..460] [454..455]
 r525: [456..457]
 r526: [451..452]
 r527: [447..448]
 r528: [443..445] [439..440]
 r529: [441..442]
 r530: [436..437]
 r531: [433..434]
 r532: [431..432]
 r533: [427..429] [423..424]
 r534: [425..426]
 r535: [420..421]
 r536: [416..417]
 r537: [412..414] [408..409]
 r538: [410..411]
 r539: [405..406]
 r540: [401..402]
 r541: [397..399] [393..394]
 r542: [395..396]
 r543: [390..391]
 r544: [386..387]
 r545: [382..384] [378..379]
 r546: [380..381]
 r547: [375..376]
 r548: [371..372]
 r549: [367..369] [363..364]
 r550: [365..366]
 r551: [360..361]
 r552: [357..358]
 r553: [355..356]
 r554: [351..353] [347..348]
 r555: [349..350]
 r556: [344..345]
 r557: [340..341]
 r558: [336..338] [332..333]
 r559: [334..335]
 r560: [329..330]
 r561: [325..326]
 r562: [321..323] [317..318]
 r563: [319..320]
 r564: [314..315]
 r565: [310..311]
 r566: [306..308] [302..303]
 r567: [304..305]
 r568: [299..300]
 r569: [295..296]
 r570: [291..293] [287..288]
 r571: [289..290]
 r572: [284..285]
 r573: [280..281]
 r574: [276..278] [272..273]
 r575: [274..275]
 r576: [269..270]
 r577: [243..244]
 r578: [1492..1493]
 r579: [1487..1488]
 r580: [1191..1192]
 r581: [1186..1187]
 r582: [1176..1182]
 r583: [1178..1179]
 r584: [1180..1181]
 r585: [1176..1177]
 r586: [1479..1480]
 r587: [1474..1475]
 r588: [1466..1467]
 r589: [1461..1462]
 r590: [1453..1454]
 r591: [1448..1449]
 r592: [1171..1172]
 r593: [1167..1168]
 r594: [1165..1166]
 r595: [1160..1161]
 r596: [1152..1153]
 r597: [1146..1148] [1142..1143]
 r598: [1144..1145]
 r599: [1139..1140]
 r600: [1135..1136]
 r601: [1133..1134]
 r602: [1127..1129] [1123..1124]
 r603: [1125..1126]
 r604: [1120..1121]
 r605: [1116..1117]
 r606: [1111..1112]
 r607: [1103..1104]
 r608: [1097..1099] [1093..1094]
 r609: [1095..1096]
 r610: [1090..1091]
 r611: [1086..1087]
 r612: [1081..1082]
 r613: [1073..1074]
 r614: [1067..1069] [1063..1064]
 r615: [1065..1066]
 r616: [1060..1061]
 r617: [1057..1058]
 r618: [1052..1053]
 r619: [1040..1041]
 r620: [1038..1039]
 r621: [1032..1034] [1028..1029]
 r622: [1030..1031]
 r623: [1025..1026]
 r624: [1022..1023]
 r625: [1017..1018]
 r626: [1005..1006]
 r627: [999..1001] [995..996]
 r628: [997..998]
 r629: [992..993]
 r630: [988..989]
 r631: [983..984]
 r632: [975..976]
 r633: [969..971] [965..966]
 r634: [967..968]
 r635: [962..963]
 r636: [958..959]
 r637: [953..954]
 r638: [945..946]
 r639: [939..941] [935..936]
 r640: [937..938]
 r641: [932..933]
 r642: [929..930]
 r643: [924..925]
 r644: [914..915]
 r645: [909..910]
 r646: [901..902]
 r647: [895..897] [891..892]
 r648: [893..894]
 r649: [888..889]
 r650: [885..886]
 r651: [880..881]
 r652: [868..869]
 r653: [866..867]
 r654: [860..862] [856..857]
 r655: [858..859]
 r656: [853..854]
 r657: [850..851]
 r658: [846..847]
 r659: [840..842] [836..837]
 r660: [838..839]
 r661: [833..834]
 r662: [830..831]
 r663: [825..826]
 r664: [813..814]
 r665: [807..809] [803..804]
 r666: [805..806]
 r667: [800..801]
 r668: [1440..1441]
 r669: [1435..1436]
 r670: [1427..1428]
 r671: [1422..1423]
 r672: [1414..1415]
 r673: [1409..1410]
 r674: [796..797]
 r675: [792..793]
 r676: [789..791]
 r677: [789..790]
 r678: [1401..1402]
 r679: [1396..1397]
 r680: [787..788]
 r681: [781..782]
 r682: [777..778]
 r683: [774..775]
 r684: [1388..1389]
 r685: [1383..1384]
 r686: [772..773]
 r687: [768..769]
 r688: [766..767]
 r689: [761..762]
 r690: [753..754]
 r691: [750..751]
 r692: [745..746]
 r693: [1375..1376]
 r694: [1370..1371]
 r695: [738..739]
 r696: [732..733]
 r697: [728..729]
 r698: [723..724]
 r699: [715..716]
 r700: [710..711]
 r701: [705..706]
 r702: [1362..1363]
 r703: [1357..1358]
 r704: [698..699]
 r705: [693..694]
 r706: [685..686]
 r707: [682..683]
 r708: [677..678]
 r709: [1349..1350]
 r710: [1344..1345]
 r711: [670..671]
 r712: [1336..1337]
 r713: [1331..1332]
 r714: [666..667]
 r715: [1323..1324]
 r716: [1318..1319]
 r717: [664..665]
 r718: [1310..1311]
 r719: [1305..1306]
 r720: [660..661]
 r721: [1297..1298]
 r722: [1292..1293]
 r723: [658..659]
 r724: [1284..1285]
 r725: [1279..1280]
 r726: [654..655]
 r727: [648..649]
 r728: [645..646]
 r729: [641..642]
 r730: [638..639]
 r731: [634..635]
 r732: [631..632]
 r733: [627..628]
 r734: [624..625]
 r735: [620..621]
 r736: [617..618]
 r737: [613..614]
 r738: [610..611]
 r739: [1271..1272]
 r740: [1266..1267]
 r741: [606..607]
 r742: [1258..1259]
 r743: [1253..1254]
 r744: [600..601]
 r745: [596..597]
 r746: [1245..1246]
 r747: [1240..1241]
 r748: [594..595]
 r749: [588..589]
 r750: [1232..1233]
 r751: [1227..1228]
 r752: [584..585]
 r753: [580..581]
 r754: [1219..1220]
 r755: [1214..1215]
 r756: [578..579]
 r757: [572..573]
 r758: [1206..1207]
 r759: [1201..1202]
 r760: [1193..1194]
 r761: [568..569]
 r762: [563..564]
 r763: [555..556]
 r764: [47..48]
 r765: [42..43]
 r766: [33..35]
 r767: [33..34]
 r768: [241..242]
 r769: [239..240]
 r770: [235..236]
 r771: [199..200]
 r772: [231..232]
 r773: [227..228]
 r774: [223..224]
 r775: [193..194]
 r776: [191..192]
 r777: [187..188]
 r778: [217..218]
 r779: [213..214]
 r780: [209..210]
 r781: [205..206]
 r782: [26..27]
 r783: [22..23]
 r784: [18..19]
 r785: [13..14]
 r786: [180..181]
 r787: [177..178]
 r788: [174..175]
 r789: [171..172]
 r790: [167..168]
 r791: [164..165]
 r792: [118..119]
 r793: [113..114]
 r794: [110..111]
 r795: [105..106]
 r796: [102..103]
 r797: [95..96]
 r798: [92..93]
 r799: [90..91]
 r800: [87..88]
 r801: [84..85]
 r802: [82..83]
 r803: [161..162]
 r804: [158..159]
 r805: [156..157]
 r806: [153..154]
 r807: [150..151]
 r808: [148..149]
 r809: [145..146]
 r810: [140..141]
 r811: [138..139]
 r812: [135..136]
 r813: [132..133]
 r814: [130..131]
 r815: [127..128]
 r816: [124..125]
 r817: [122..123]
 r818: [75..76]
 r820: [264..265]
 r821: [262..263]
 r822: [256..257]
 r823: [254..255]
 r824: [248..249]
 r825: [246..247]
 r826: [1044..1045]
 r827: [1009..1010]
 r828: [872..873]
 r829: [817..818]
Compressing live ranges: from 1494 to 1271 - 85%
Ranges after the compression:
 r83: [39..40] [23..24] [10..10] [2..3]
 r84: [429..430]
 r85: [423..424]
 r86: [421..422]
 r87: [417..418]
 r88: [411..412]
 r89: [409..410]
 r90: [405..406]
 r91: [399..400]
 r92: [397..398]
 r93: [393..394]
 r94: [387..388]
 r95: [385..386]
 r96: [381..382]
 r97: [375..376]
 r98: [373..374]
 r99: [369..370]
 r100: [363..364]
 r101: [361..362]
 r102: [357..358]
 r103: [351..352]
 r104: [349..350]
 r105: [345..346]
 r106: [339..340]
 r107: [337..338]
 r108: [333..334]
 r109: [327..328]
 r110: [325..326]
 r111: [321..322]
 r112: [315..316]
 r113: [313..314]
 r114: [309..310]
 r115: [303..304]
 r116: [301..302]
 r117: [297..298]
 r118: [291..292]
 r119: [289..290]
 r120: [285..286]
 r121: [279..280]
 r122: [277..278]
 r123: [273..274]
 r124: [267..268]
 r125: [265..266]
 r126: [261..262]
 r127: [255..256]
 r128: [253..254]
 r129: [249..250]
 r130: [243..244]
 r131: [241..242]
 r132: [237..238]
 r133: [231..232]
 r134: [229..230]
 r135: [225..226]
 r136: [219..220]
 r137: [217..218]
 r138: [213..214]
 r139: [207..208]
 r140: [205..206]
 r141: [1267..1268]
 r142: [1265..1266]
 r143: [1263..1264]
 r144: [1261..1262]
 r145: [1259..1260]
 r146: [1255..1256]
 r147: [1253..1254]
 r148: [1251..1252]
 r149: [1249..1250]
 r150: [1247..1248]
 r151: [1243..1244]
 r152: [1241..1242]
 r153: [1239..1240]
 r154: [1237..1238]
 r155: [1235..1236]
 r156: [1231..1232]
 r157: [1229..1230]
 r158: [1227..1228]
 r159: [1225..1226]
 r160: [1223..1224]
 r161: [1219..1220]
 r162: [1217..1218]
 r163: [1215..1216]
 r164: [1213..1214]
 r165: [1211..1212]
 r166: [1207..1208]
 r167: [1205..1206]
 r168: [1203..1204]
 r169: [1201..1202]
 r170: [1199..1200]
 r171: [1195..1196]
 r172: [1193..1194]
 r173: [1191..1192]
 r174: [1189..1190]
 r175: [1187..1188]
 r176: [651..652]
 r177: [1183..1184]
 r178: [1181..1182]
 r179: [1179..1180]
 r180: [1177..1178]
 r181: [1175..1176]
 r182: [643..644]
 r183: [641..642]
 r184: [637..638]
 r185: [633..634]
 r186: [1171..1172]
 r187: [1169..1170]
 r188: [1167..1168]
 r189: [1165..1166]
 r190: [1163..1164]
 r191: [629..630]
 r192: [623..624]
 r193: [621..622]
 r194: [619..620]
 r195: [617..618]
 r196: [615..616]
 r197: [603..612]
 r198: [609..610]
 r199: [607..608]
 r200: [605..606]
 r201: [603..604]
 r202: [1159..1160]
 r203: [1157..1158]
 r204: [1155..1156]
 r205: [1153..1154]
 r206: [1151..1152]
 r207: [599..600]
 r208: [597..598]
 r209: [593..594]
 r210: [589..590]
 r211: [587..588]
 r212: [585..586]
 r213: [583..584]
 r214: [581..582]
 r215: [577..578]
 r216: [567..576]
 r217: [573..574]
 r218: [571..572]
 r219: [569..570]
 r220: [567..568]
 r221: [1147..1148]
 r222: [1145..1146]
 r223: [1143..1144]
 r224: [1141..1142]
 r225: [1139..1140]
 r226: [563..564]
 r227: [561..562]
 r228: [559..560]
 r229: [557..558]
 r230: [555..556]
 r231: [543..552]
 r232: [549..550]
 r233: [547..548]
 r234: [545..546]
 r235: [543..544]
 r236: [1135..1136]
 r237: [1133..1134]
 r238: [1131..1132]
 r239: [1129..1130]
 r240: [1127..1128]
 r241: [539..540]
 r242: [1123..1124]
 r243: [1121..1122]
 r244: [1119..1120]
 r245: [1117..1118]
 r246: [1115..1116]
 r247: [1111..1112]
 r248: [1109..1110]
 r249: [1107..1108]
 r250: [1105..1106]
 r251: [1103..1104]
 r252: [533..534]
 r253: [1099..1100]
 r254: [1097..1098]
 r255: [1095..1096]
 r256: [1093..1094]
 r257: [1091..1092]
 r258: [1087..1088]
 r259: [1085..1086]
 r260: [1083..1084]
 r261: [1081..1082]
 r262: [1079..1080]
 r263: [527..528]
 r264: [1075..1076]
 r265: [1073..1074]
 r266: [1071..1072]
 r267: [1069..1070]
 r268: [1067..1068]
 r269: [523..524]
 r270: [521..522]
 r271: [515..518]
 r272: [515..516]
 r273: [509..512]
 r274: [509..510]
 r275: [503..506]
 r276: [503..504]
 r277: [497..500]
 r278: [497..498]
 r279: [491..494]
 r280: [491..492]
 r281: [485..488]
 r282: [485..486]
 r283: [1063..1064]
 r284: [1061..1062]
 r285: [1059..1060]
 r286: [1057..1058]
 r287: [1055..1056]
 r288: [481..482]
 r289: [479..480]
 r290: [1051..1052]
 r291: [1049..1050]
 r292: [1047..1048]
 r293: [1045..1046]
 r294: [1043..1044]
 r295: [475..476]
 r296: [1039..1040]
 r297: [1037..1038]
 r298: [1035..1036]
 r299: [1033..1034]
 r300: [1031..1032]
 r301: [469..470]
 r302: [467..468]
 r303: [463..464]
 r304: [1027..1028]
 r305: [1025..1026]
 r306: [1023..1024]
 r307: [1021..1022]
 r308: [1019..1020]
 r309: [459..460]
 r310: [1015..1016]
 r311: [1013..1014]
 r312: [1011..1012]
 r313: [1009..1010]
 r314: [1007..1008]
 r315: [453..454]
 r316: [451..452]
 r317: [447..448]
 r318: [1003..1004]
 r319: [1001..1002]
 r320: [999..1000]
 r321: [997..998]
 r322: [995..996]
 r323: [443..444]
 r324: [441..442]
 r325: [439..440]
 r326: [437..438]
 r327: [435..436]
 r328: [35..36]
 r329: [33..34]
 r330: [31..32]
 r331: [29..30]
 r332: [27..28]
 r333: [973..974]
 r334: [967..968]
 r335: [965..966]
 r336: [963..964]
 r337: [961..962]
 r338: [959..960]
 r339: [955..956]
 r340: [953..954]
 r341: [947..948]
 r342: [945..946]
 r343: [939..940]
 r344: [937..938]
 r345: [931..932]
 r346: [929..930]
 r347: [925..926]
 r348: [923..924]
 r349: [921..922]
 r350: [919..920]
 r351: [917..918]
 r352: [913..914]
 r353: [911..912]
 r354: [905..906]
 r355: [903..904]
 r356: [899..900]
 r357: [897..898]
 r358: [895..896]
 r359: [893..894]
 r360: [891..892]
 r361: [887..888]
 r362: [885..886]
 r363: [879..880]
 r364: [863..878]
 r365: [875..876]
 r366: [873..874]
 r367: [871..872]
 r368: [869..870]
 r369: [867..868]
 r370: [863..864]
 r371: [857..858]
 r372: [855..856]
 r373: [849..850]
 r374: [833..848]
 r375: [845..846]
 r376: [843..844]
 r377: [841..842]
 r378: [839..840]
 r379: [837..838]
 r380: [833..834]
 r381: [829..830]
 r382: [827..828]
 r383: [821..822]
 r384: [819..820]
 r385: [815..816]
 r386: [813..814]
 r387: [811..812]
 r388: [809..810]
 r389: [807..808]
 r390: [803..804]
 r391: [801..802]
 r392: [795..796]
 r393: [793..794]
 r394: [789..790]
 r395: [787..788]
 r396: [785..786]
 r397: [783..784]
 r398: [781..782]
 r399: [777..778]
 r400: [775..776]
 r401: [769..770]
 r402: [755..768]
 r403: [765..766]
 r404: [763..764]
 r405: [761..762]
 r406: [759..760]
 r407: [757..758]
 r408: [755..756]
 r409: [751..752]
 r410: [749..750]
 r411: [747..748]
 r412: [745..746]
 r413: [743..744]
 r414: [739..740]
 r415: [737..738]
 r416: [731..732]
 r417: [715..730]
 r418: [727..728]
 r419: [725..726]
 r420: [723..724]
 r421: [721..722]
 r422: [719..720]
 r423: [715..716]
 r424: [709..710]
 r425: [707..708]
 r426: [701..702]
 r427: [697..700]
 r428: [697..698]
 r429: [693..694]
 r430: [691..692]
 r431: [685..686]
 r432: [669..684]
 r433: [681..682]
 r434: [679..680]
 r435: [677..678]
 r436: [675..676]
 r437: [673..674]
 r438: [669..670]
 r439: [665..666]
 r440: [663..664]
 r441: [657..658]
 r442: [655..656]
 r443: [989..990]
 r444: [987..988]
 r445: [985..986]
 r446: [977..984]
 r447: [977..978]
 r448: [181..182]
 r449: [177..178]
 r450: [141..142]
 r451: [139..140]
 r452: [173..174]
 r453: [169..170]
 r454: [165..166]
 r455: [163..164]
 r456: [133..134]
 r457: [129..130]
 r458: [127..128]
 r459: [159..160]
 r460: [155..156]
 r461: [151..152]
 r462: [147..148]
 r463: [145..146]
 r464: [19..20]
 r465: [15..16]
 r466: [11..12]
 r467: [6..7]
 r468: [4..5]
 r469: [125..126]
 r470: [121..122]
 r471: [117..118]
 r472: [113..114]
 r473: [77..80]
 r474: [77..78]
 r475: [71..74]
 r476: [71..72]
 r477: [63..68]
 r478: [65..66]
 r479: [63..64]
 r480: [57..60]
 r481: [51..54]
 r482: [107..110]
 r483: [101..104]
 r484: [97..98]
 r485: [93..96]
 r486: [87..90]
 r487: [81..84]
 r488: [49..50]
 r489: [47..48]
 r490: [43..44]
 r491: [41..42]
 r492: [0..1]
 r493: [201..204]
 r494: [199..200]
 r495: [195..198]
 r496: [193..194]
 r497: [189..192]
 r498: [431..432]
 r499: [429..430] [425..426]
 r500: [427..428]
 r501: [423..424]
 r502: [419..420]
 r503: [417..418] [413..414]
 r504: [415..416]
 r505: [411..412]
 r506: [407..408]
 r507: [405..406] [401..402]
 r508: [403..404]
 r509: [399..400]
 r510: [397..398]
 r511: [395..396]
 r512: [393..394] [389..390]
 r513: [391..392]
 r514: [387..388]
 r515: [383..384]
 r516: [381..382] [377..378]
 r517: [379..380]
 r518: [375..376]
 r519: [371..372]
 r520: [369..370] [365..366]
 r521: [367..368]
 r522: [363..364]
 r523: [359..360]
 r524: [357..358] [353..354]
 r525: [355..356]
 r526: [351..352]
 r527: [347..348]
 r528: [345..346] [341..342]
 r529: [343..344]
 r530: [339..340]
 r531: [337..338]
 r532: [335..336]
 r533: [333..334] [329..330]
 r534: [331..332]
 r535: [327..328]
 r536: [323..324]
 r537: [321..322] [317..318]
 r538: [319..320]
 r539: [315..316]
 r540: [311..312]
 r541: [309..310] [305..306]
 r542: [307..308]
 r543: [303..304]
 r544: [299..300]
 r545: [297..298] [293..294]
 r546: [295..296]
 r547: [291..292]
 r548: [287..288]
 r549: [285..286] [281..282]
 r550: [283..284]
 r551: [279..280]
 r552: [277..278]
 r553: [275..276]
 r554: [273..274] [269..270]
 r555: [271..272]
 r556: [267..268]
 r557: [263..264]
 r558: [261..262] [257..258]
 r559: [259..260]
 r560: [255..256]
 r561: [251..252]
 r562: [249..250] [245..246]
 r563: [247..248]
 r564: [243..244]
 r565: [239..240]
 r566: [237..238] [233..234]
 r567: [235..236]
 r568: [231..232]
 r569: [227..228]
 r570: [225..226] [221..222]
 r571: [223..224]
 r572: [219..220]
 r573: [215..216]
 r574: [213..214] [209..210]
 r575: [211..212]
 r576: [207..208]
 r577: [187..188]
 r578: [1269..1270]
 r579: [1265..1266]
 r580: [991..992]
 r581: [987..988]
 r582: [979..984]
 r583: [981..982]
 r584: [983..984]
 r585: [979..980]
 r586: [1257..1258]
 r587: [1253..1254]
 r588: [1245..1246]
 r589: [1241..1242]
 r590: [1233..1234]
 r591: [1229..1230]
 r592: [975..976]
 r593: [971..972]
 r594: [969..970]
 r595: [965..966]
 r596: [957..958]
 r597: [953..954] [949..950]
 r598: [951..952]
 r599: [947..948]
 r600: [943..944]
 r601: [941..942]
 r602: [937..938] [933..934]
 r603: [935..936]
 r604: [931..932]
 r605: [927..928]
 r606: [923..924]
 r607: [915..916]
 r608: [911..912] [907..908]
 r609: [909..910]
 r610: [905..906]
 r611: [901..902]
 r612: [897..898]
 r613: [889..890]
 r614: [885..886] [881..882]
 r615: [883..884]
 r616: [879..880]
 r617: [877..878]
 r618: [873..874]
 r619: [861..862]
 r620: [859..860]
 r621: [855..856] [851..852]
 r622: [853..854]
 r623: [849..850]
 r624: [847..848]
 r625: [843..844]
 r626: [831..832]
 r627: [827..828] [823..824]
 r628: [825..826]
 r629: [821..822]
 r630: [817..818]
 r631: [813..814]
 r632: [805..806]
 r633: [801..802] [797..798]
 r634: [799..800]
 r635: [795..796]
 r636: [791..792]
 r637: [787..788]
 r638: [779..780]
 r639: [775..776] [771..772]
 r640: [773..774]
 r641: [769..770]
 r642: [767..768]
 r643: [763..764]
 r644: [753..754]
 r645: [749..750]
 r646: [741..742]
 r647: [737..738] [733..734]
 r648: [735..736]
 r649: [731..732]
 r650: [729..730]
 r651: [725..726]
 r652: [713..714]
 r653: [711..712]
 r654: [707..708] [703..704]
 r655: [705..706]
 r656: [701..702]
 r657: [699..700]
 r658: [695..696]
 r659: [691..692] [687..688]
 r660: [689..690]
 r661: [685..686]
 r662: [683..684]
 r663: [679..680]
 r664: [667..668]
 r665: [663..664] [659..660]
 r666: [661..662]
 r667: [657..658]
 r668: [1221..1222]
 r669: [1217..1218]
 r670: [1209..1210]
 r671: [1205..1206]
 r672: [1197..1198]
 r673: [1193..1194]
 r674: [653..654]
 r675: [649..650]
 r676: [647..648]
 r677: [647..648]
 r678: [1185..1186]
 r679: [1181..1182]
 r680: [645..646]
 r681: [639..640]
 r682: [635..636]
 r683: [633..634]
 r684: [1173..1174]
 r685: [1169..1170]
 r686: [631..632]
 r687: [627..628]
 r688: [625..626]
 r689: [621..622]
 r690: [613..614]
 r691: [611..612]
 r692: [607..608]
 r693: [1161..1162]
 r694: [1157..1158]
 r695: [601..602]
 r696: [595..596]
 r697: [591..592]
 r698: [587..588]
 r699: [579..580]
 r700: [575..576]
 r701: [571..572]
 r702: [1149..1150]
 r703: [1145..1146]
 r704: [565..566]
 r705: [561..562]
 r706: [553..554]
 r707: [551..552]
 r708: [547..548]
 r709: [1137..1138]
 r710: [1133..1134]
 r711: [541..542]
 r712: [1125..1126]
 r713: [1121..1122]
 r714: [537..538]
 r715: [1113..1114]
 r716: [1109..1110]
 r717: [535..536]
 r718: [1101..1102]
 r719: [1097..1098]
 r720: [531..532]
 r721: [1089..1090]
 r722: [1085..1086]
 r723: [529..530]
 r724: [1077..1078]
 r725: [1073..1074]
 r726: [525..526]
 r727: [519..520]
 r728: [517..518]
 r729: [513..514]
 r730: [511..512]
 r731: [507..508]
 r732: [505..506]
 r733: [501..502]
 r734: [499..500]
 r735: [495..496]
 r736: [493..494]
 r737: [489..490]
 r738: [487..488]
 r739: [1065..1066]
 r740: [1061..1062]
 r741: [483..484]
 r742: [1053..1054]
 r743: [1049..1050]
 r744: [477..478]
 r745: [473..474]
 r746: [1041..1042]
 r747: [1037..1038]
 r748: [471..472]
 r749: [465..466]
 r750: [1029..1030]
 r751: [1025..1026]
 r752: [461..462]
 r753: [457..458]
 r754: [1017..1018]
 r755: [1013..1014]
 r756: [455..456]
 r757: [449..450]
 r758: [1005..1006]
 r759: [1001..1002]
 r760: [993..994]
 r761: [445..446]
 r762: [441..442]
 r763: [433..434]
 r764: [37..38]
 r765: [33..34]
 r766: [25..26]
 r767: [25..26]
 r768: [185..186]
 r769: [183..184]
 r770: [179..180]
 r771: [143..144]
 r772: [175..176]
 r773: [171..172]
 r774: [167..168]
 r775: [137..138]
 r776: [135..136]
 r777: [131..132]
 r778: [161..162]
 r779: [157..158]
 r780: [153..154]
 r781: [149..150]
 r782: [21..22]
 r783: [17..18]
 r784: [13..14]
 r785: [8..9]
 r786: [125..126]
 r787: [123..124]
 r788: [121..122]
 r789: [119..120]
 r790: [115..116]
 r791: [113..114]
 r792: [79..80]
 r793: [75..76]
 r794: [73..74]
 r795: [69..70]
 r796: [67..68]
 r797: [61..62]
 r798: [59..60]
 r799: [57..58]
 r800: [55..56]
 r801: [53..54]
 r802: [51..52]
 r803: [111..112]
 r804: [109..110]
 r805: [107..108]
 r806: [105..106]
 r807: [103..104]
 r808: [101..102]
 r809: [99..100]
 r810: [95..96]
 r811: [93..94]
 r812: [91..92]
 r813: [89..90]
 r814: [87..88]
 r815: [85..86]
 r816: [83..84]
 r817: [81..82]
 r818: [45..46]
 r820: [203..204]
 r821: [201..202]
 r822: [197..198]
 r823: [195..196]
 r824: [191..192]
 r825: [189..190]
 r826: [865..866]
 r827: [835..836]
 r828: [717..718]
 r829: [671..672]

********** Assignment #1: **********

	 Assigning to 820 (cl=GENERAL_REGS, orig=820, freq=2, tfirst=820, tfreq=2)...
	   Assign 3 to reload r820 (freq=2)
	 Assigning to 821 (cl=GENERAL_REGS, orig=821, freq=2, tfirst=821, tfreq=2)...
	   Assign 3 to reload r821 (freq=2)
	 Assigning to 822 (cl=GENERAL_REGS, orig=822, freq=2, tfirst=822, tfreq=2)...
	   Assign 2 to reload r822 (freq=2)
	 Assigning to 823 (cl=GENERAL_REGS, orig=823, freq=2, tfirst=823, tfreq=2)...
	   Assign 3 to reload r823 (freq=2)
	 Assigning to 824 (cl=GENERAL_REGS, orig=824, freq=2, tfirst=824, tfreq=2)...
	   Assign 2 to reload r824 (freq=2)
	 Assigning to 825 (cl=GENERAL_REGS, orig=825, freq=2, tfirst=825, tfreq=2)...
	   Assign 3 to reload r825 (freq=2)
	 Assigning to 826 (cl=SSE_REGS, orig=370, freq=2, tfirst=826, tfreq=2)...
	   Assign 22 to reload r826 (freq=2)
	 Assigning to 827 (cl=SSE_REGS, orig=380, freq=2, tfirst=827, tfreq=2)...
	   Assign 23 to reload r827 (freq=2)
	 Assigning to 828 (cl=SSE_REGS, orig=423, freq=2, tfirst=828, tfreq=2)...
	   Assign 24 to reload r828 (freq=2)
	 Assigning to 829 (cl=SSE_REGS, orig=438, freq=2, tfirst=829, tfreq=2)...
	   Assign 25 to reload r829 (freq=2)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=896, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=864, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 1798
changing reg in insn 1793
changing reg in insn 1785
changing reg in insn 1777
changing reg in insn 1763
changing reg in insn 1641
changing reg in insn 1636
changing reg in insn 1618
changing reg in insn 1591
changing reg in insn 1573
changing reg in insn 1481
changing reg in insn 1460
changing reg in insn 1437
changing reg in insn 1365
changing reg in insn 1334
changing reg in insn 1303
changing reg in insn 1272
changing reg in insn 1243
changing reg in insn 1229
changing reg in insn 1156
changing reg in insn 1142
changing reg in insn 1012
changing reg in insn 964
changing reg in insn 959
changing reg in insn 899
changing reg in insn 894
changing reg in insn 838
changing reg in insn 801
changing reg in insn 724
changing reg in insn 622
changing reg in insn 549
changing reg in insn 389
changing reg in insn 320
changing reg in insn 1803
changing reg in insn 45
changing reg in insn 50
changing reg in insn 48
changing reg in insn 46
changing reg in insn 50
changing reg in insn 48
changing reg in insn 53
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 58
changing reg in insn 63
changing reg in insn 61
changing reg in insn 59
changing reg in insn 63
changing reg in insn 61
changing reg in insn 66
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 71
changing reg in insn 76
changing reg in insn 74
changing reg in insn 72
changing reg in insn 76
changing reg in insn 74
changing reg in insn 79
changing reg in insn 81
changing reg in insn 81
changing reg in insn 81
changing reg in insn 83
changing reg in insn 85
changing reg in insn 90
changing reg in insn 88
changing reg in insn 86
changing reg in insn 90
changing reg in insn 88
changing reg in insn 93
changing reg in insn 95
changing reg in insn 95
changing reg in insn 96
changing reg in insn 98
changing reg in insn 103
changing reg in insn 101
changing reg in insn 99
changing reg in insn 103
changing reg in insn 101
changing reg in insn 106
changing reg in insn 108
changing reg in insn 108
changing reg in insn 109
changing reg in insn 111
changing reg in insn 116
changing reg in insn 114
changing reg in insn 112
changing reg in insn 116
changing reg in insn 114
changing reg in insn 119
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 124
changing reg in insn 129
changing reg in insn 127
changing reg in insn 125
changing reg in insn 129
changing reg in insn 127
changing reg in insn 132
changing reg in insn 134
changing reg in insn 134
changing reg in insn 135
changing reg in insn 137
changing reg in insn 142
changing reg in insn 140
changing reg in insn 138
changing reg in insn 142
changing reg in insn 140
changing reg in insn 145
changing reg in insn 147
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 151
changing reg in insn 156
changing reg in insn 154
changing reg in insn 152
changing reg in insn 156
changing reg in insn 154
changing reg in insn 159
changing reg in insn 161
changing reg in insn 161
changing reg in insn 162
changing reg in insn 164
changing reg in insn 169
changing reg in insn 167
changing reg in insn 165
changing reg in insn 169
changing reg in insn 167
changing reg in insn 172
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
changing reg in insn 177
changing reg in insn 182
changing reg in insn 180
changing reg in insn 178
changing reg in insn 182
changing reg in insn 180
changing reg in insn 185
changing reg in insn 187
changing reg in insn 187
changing reg in insn 188
changing reg in insn 190
changing reg in insn 195
changing reg in insn 193
changing reg in insn 191
changing reg in insn 195
changing reg in insn 193
changing reg in insn 198
changing reg in insn 200
changing reg in insn 200
changing reg in insn 201
changing reg in insn 203
changing reg in insn 208
changing reg in insn 206
changing reg in insn 204
changing reg in insn 208
changing reg in insn 206
changing reg in insn 211
changing reg in insn 213
changing reg in insn 213
changing reg in insn 213
changing reg in insn 215
changing reg in insn 217
changing reg in insn 222
changing reg in insn 220
changing reg in insn 218
changing reg in insn 222
changing reg in insn 220
changing reg in insn 225
changing reg in insn 227
changing reg in insn 227
changing reg in insn 228
changing reg in insn 230
changing reg in insn 235
changing reg in insn 233
changing reg in insn 231
changing reg in insn 235
changing reg in insn 233
changing reg in insn 238
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 243
changing reg in insn 248
changing reg in insn 246
changing reg in insn 244
changing reg in insn 248
changing reg in insn 246
changing reg in insn 251
changing reg in insn 253
changing reg in insn 253
changing reg in insn 254
changing reg in insn 256
changing reg in insn 261
changing reg in insn 259
changing reg in insn 257
changing reg in insn 261
changing reg in insn 259
changing reg in insn 264
changing reg in insn 266
changing reg in insn 266
changing reg in insn 267
changing reg in insn 269
changing reg in insn 274
changing reg in insn 272
changing reg in insn 270
changing reg in insn 274
changing reg in insn 272
changing reg in insn 277
changing reg in insn 279
changing reg in insn 279
changing reg in insn 280
changing reg in insn 282
changing reg in insn 287
changing reg in insn 285
changing reg in insn 283
changing reg in insn 287
changing reg in insn 285
changing reg in insn 290
changing reg in insn 292
changing reg in insn 292
changing reg in insn 293
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 311
changing reg in insn 311
changing reg in insn 312
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 314
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 348
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 351
changing reg in insn 353
changing reg in insn 354
changing reg in insn 358
changing reg in insn 359
changing reg in insn 359
changing reg in insn 361
changing reg in insn 361
changing reg in insn 362
changing reg in insn 362
changing reg in insn 364
changing reg in insn 366
changing reg in insn 367
changing reg in insn 371
changing reg in insn 372
changing reg in insn 372
changing reg in insn 374
changing reg in insn 374
changing reg in insn 375
changing reg in insn 375
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 734
changing reg in insn 735
changing reg in insn 735
changing reg in insn 737
changing reg in insn 737
changing reg in insn 738
changing reg in insn 738
changing reg in insn 740
changing reg in insn 742
changing reg in insn 743
changing reg in insn 754
changing reg in insn 755
changing reg in insn 755
changing reg in insn 757
changing reg in insn 757
changing reg in insn 758
changing reg in insn 758
changing reg in insn 760
changing reg in insn 762
changing reg in insn 763
changing reg in insn 774
changing reg in insn 775
changing reg in insn 775
changing reg in insn 777
changing reg in insn 777
changing reg in insn 778
changing reg in insn 778
changing reg in insn 780
changing reg in insn 782
changing reg in insn 783
changing reg in insn 788
changing reg in insn 789
changing reg in insn 807
changing reg in insn 808
changing reg in insn 808
changing reg in insn 810
changing reg in insn 810
changing reg in insn 811
changing reg in insn 811
changing reg in insn 813
changing reg in insn 815
changing reg in insn 816
changing reg in insn 821
changing reg in insn 822
changing reg in insn 822
changing reg in insn 823
changing reg in insn 828
changing reg in insn 829
changing reg in insn 831
changing reg in insn 833
changing reg in insn 844
changing reg in insn 845
changing reg in insn 845
changing reg in insn 847
changing reg in insn 847
changing reg in insn 848
changing reg in insn 848
changing reg in insn 850
changing reg in insn 852
changing reg in insn 853
changing reg in insn 858
changing reg in insn 859
changing reg in insn 866
changing reg in insn 867
changing reg in insn 867
changing reg in insn 869
changing reg in insn 869
changing reg in insn 870
changing reg in insn 870
changing reg in insn 871
changing reg in insn 873
changing reg in insn 874
changing reg in insn 878
changing reg in insn 885
changing reg in insn 880
changing reg in insn 881
changing reg in insn 881
changing reg in insn 883
changing reg in insn 883
changing reg in insn 884
changing reg in insn 884
changing reg in insn 887
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 908
changing reg in insn 908
changing reg in insn 909
changing reg in insn 909
changing reg in insn 911
changing reg in insn 913
changing reg in insn 914
changing reg in insn 919
changing reg in insn 920
changing reg in insn 920
changing reg in insn 921
changing reg in insn 926
changing reg in insn 927
changing reg in insn 930
changing reg in insn 931
changing reg in insn 931
changing reg in insn 933
changing reg in insn 933
changing reg in insn 934
changing reg in insn 934
changing reg in insn 935
changing reg in insn 937
changing reg in insn 938
changing reg in insn 942
changing reg in insn 943
changing reg in insn 943
changing reg in insn 950
changing reg in insn 945
changing reg in insn 946
changing reg in insn 946
changing reg in insn 948
changing reg in insn 948
changing reg in insn 949
changing reg in insn 949
changing reg in insn 952
changing reg in insn 970
changing reg in insn 971
changing reg in insn 971
changing reg in insn 973
changing reg in insn 973
changing reg in insn 974
changing reg in insn 974
changing reg in insn 976
changing reg in insn 978
changing reg in insn 979
changing reg in insn 984
changing reg in insn 985
changing reg in insn 985
changing reg in insn 987
changing reg in insn 987
changing reg in insn 988
changing reg in insn 988
changing reg in insn 989
changing reg in insn 991
changing reg in insn 992
changing reg in insn 996
changing reg in insn 1003
changing reg in insn 998
changing reg in insn 999
changing reg in insn 999
changing reg in insn 1001
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1002
changing reg in insn 1005
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1019
changing reg in insn 1021
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1022
changing reg in insn 1024
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1039
changing reg in insn 1040
changing reg in insn 1040
changing reg in insn 1042
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1043
changing reg in insn 1045
changing reg in insn 1047
changing reg in insn 1048
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1060
changing reg in insn 1062
changing reg in insn 1062
changing reg in insn 1063
changing reg in insn 1063
changing reg in insn 1065
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1074
changing reg in insn 1075
changing reg in insn 1081
changing reg in insn 1082
changing reg in insn 1082
changing reg in insn 1084
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1085
changing reg in insn 1087
changing reg in insn 1089
changing reg in insn 1090
changing reg in insn 1101
changing reg in insn 1102
changing reg in insn 1102
changing reg in insn 1104
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1105
changing reg in insn 1107
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1116
changing reg in insn 1117
changing reg in insn 1123
changing reg in insn 1124
changing reg in insn 1124
changing reg in insn 1126
changing reg in insn 1126
changing reg in insn 1127
changing reg in insn 1127
changing reg in insn 1129
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1148
changing reg in insn 1150
changing reg in insn 1152
changing reg in insn 1153
changing reg in insn 1176
changing reg in insn 1179
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1181
changing reg in insn 1184
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1186
changing reg in insn 1189
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1194
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1199
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1201
changing reg in insn 1204
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1210
changing reg in insn 1211
changing reg in insn 1211
changing reg in insn 1213
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1214
changing reg in insn 1216
changing reg in insn 1218
changing reg in insn 1219
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1254
changing reg in insn 1255
changing reg in insn 1255
changing reg in insn 1257
changing reg in insn 1257
changing reg in insn 1258
changing reg in insn 1258
changing reg in insn 1260
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1284
changing reg in insn 1285
changing reg in insn 1285
changing reg in insn 1287
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1288
changing reg in insn 1290
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1309
changing reg in insn 1310
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1317
changing reg in insn 1319
changing reg in insn 1319
changing reg in insn 1320
changing reg in insn 1320
changing reg in insn 1322
changing reg in insn 1324
changing reg in insn 1325
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1346
changing reg in insn 1347
changing reg in insn 1347
changing reg in insn 1349
changing reg in insn 1349
changing reg in insn 1350
changing reg in insn 1350
changing reg in insn 1352
changing reg in insn 1354
changing reg in insn 1355
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1361
changing reg in insn 1362
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1378
changing reg in insn 1379
changing reg in insn 1379
changing reg in insn 1381
changing reg in insn 1381
changing reg in insn 1382
changing reg in insn 1382
changing reg in insn 1384
changing reg in insn 1386
changing reg in insn 1387
changing reg in insn 1397
changing reg in insn 1398
changing reg in insn 1398
changing reg in insn 1400
changing reg in insn 1400
changing reg in insn 1401
changing reg in insn 1401
changing reg in insn 1403
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1416
changing reg in insn 1417
changing reg in insn 1417
changing reg in insn 1419
changing reg in insn 1419
changing reg in insn 1420
changing reg in insn 1420
changing reg in insn 1422
changing reg in insn 1424
changing reg in insn 1425
changing reg in insn 385
changing reg in insn 386
changing reg in insn 397
changing reg in insn 398
changing reg in insn 398
changing reg in insn 400
changing reg in insn 400
changing reg in insn 401
changing reg in insn 401
changing reg in insn 403
changing reg in insn 405
changing reg in insn 406
changing reg in insn 410
changing reg in insn 411
changing reg in insn 411
changing reg in insn 416
changing reg in insn 414
changing reg in insn 412
changing reg in insn 416
changing reg in insn 414
changing reg in insn 419
changing reg in insn 421
changing reg in insn 421
changing reg in insn 422
changing reg in insn 426
changing reg in insn 427
changing reg in insn 427
changing reg in insn 432
changing reg in insn 430
changing reg in insn 428
changing reg in insn 432
changing reg in insn 430
changing reg in insn 435
changing reg in insn 437
changing reg in insn 437
changing reg in insn 438
changing reg in insn 442
changing reg in insn 443
changing reg in insn 443
changing reg in insn 445
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 448
changing reg in insn 450
changing reg in insn 451
changing reg in insn 455
changing reg in insn 456
changing reg in insn 456
changing reg in insn 461
changing reg in insn 459
changing reg in insn 457
changing reg in insn 461
changing reg in insn 459
changing reg in insn 464
changing reg in insn 466
changing reg in insn 466
changing reg in insn 467
changing reg in insn 470
changing reg in insn 471
changing reg in insn 471
changing reg in insn 473
changing reg in insn 473
changing reg in insn 474
changing reg in insn 474
changing reg in insn 475
changing reg in insn 477
changing reg in insn 478
changing reg in insn 482
changing reg in insn 483
changing reg in insn 483
changing reg in insn 488
changing reg in insn 486
changing reg in insn 484
changing reg in insn 488
changing reg in insn 486
changing reg in insn 491
changing reg in insn 493
changing reg in insn 493
changing reg in insn 493
changing reg in insn 504
changing reg in insn 495
changing reg in insn 496
changing reg in insn 496
changing reg in insn 498
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 500
changing reg in insn 502
changing reg in insn 503
changing reg in insn 504
changing reg in insn 508
changing reg in insn 509
changing reg in insn 509
changing reg in insn 514
changing reg in insn 512
changing reg in insn 510
changing reg in insn 514
changing reg in insn 512
changing reg in insn 517
changing reg in insn 519
changing reg in insn 519
changing reg in insn 519
changing reg in insn 530
changing reg in insn 521
changing reg in insn 522
changing reg in insn 522
changing reg in insn 524
changing reg in insn 524
changing reg in insn 525
changing reg in insn 525
changing reg in insn 526
changing reg in insn 528
changing reg in insn 529
changing reg in insn 530
changing reg in insn 532
changing reg in insn 533
changing reg in insn 533
changing reg in insn 538
changing reg in insn 536
changing reg in insn 534
changing reg in insn 538
changing reg in insn 536
changing reg in insn 541
changing reg in insn 543
changing reg in insn 543
changing reg in insn 544
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 558
changing reg in insn 558
changing reg in insn 559
changing reg in insn 559
changing reg in insn 561
changing reg in insn 563
changing reg in insn 564
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 574
changing reg in insn 572
changing reg in insn 570
changing reg in insn 574
changing reg in insn 572
changing reg in insn 577
changing reg in insn 579
changing reg in insn 579
changing reg in insn 580
changing reg in insn 583
changing reg in insn 584
changing reg in insn 584
changing reg in insn 586
changing reg in insn 586
changing reg in insn 587
changing reg in insn 587
changing reg in insn 588
changing reg in insn 590
changing reg in insn 591
changing reg in insn 595
changing reg in insn 596
changing reg in insn 596
changing reg in insn 601
changing reg in insn 599
changing reg in insn 597
changing reg in insn 601
changing reg in insn 599
changing reg in insn 604
changing reg in insn 606
changing reg in insn 606
changing reg in insn 606
changing reg in insn 617
changing reg in insn 608
changing reg in insn 609
changing reg in insn 609
changing reg in insn 611
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 613
changing reg in insn 615
changing reg in insn 616
changing reg in insn 616
changing reg in insn 617
changing reg in insn 629
changing reg in insn 630
changing reg in insn 630
changing reg in insn 632
changing reg in insn 632
changing reg in insn 633
changing reg in insn 633
changing reg in insn 634
changing reg in insn 636
changing reg in insn 637
changing reg in insn 641
changing reg in insn 642
changing reg in insn 642
changing reg in insn 647
changing reg in insn 645
changing reg in insn 643
changing reg in insn 647
changing reg in insn 645
changing reg in insn 650
changing reg in insn 652
changing reg in insn 652
changing reg in insn 652
changing reg in insn 663
changing reg in insn 654
changing reg in insn 655
changing reg in insn 655
changing reg in insn 657
changing reg in insn 657
changing reg in insn 658
changing reg in insn 658
changing reg in insn 659
changing reg in insn 661
changing reg in insn 662
changing reg in insn 663
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 673
changing reg in insn 671
changing reg in insn 669
changing reg in insn 673
changing reg in insn 671
changing reg in insn 676
changing reg in insn 678
changing reg in insn 678
changing reg in insn 678
changing reg in insn 681
changing reg in insn 680
changing reg in insn 681
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 689
changing reg in insn 687
changing reg in insn 685
changing reg in insn 689
changing reg in insn 687
changing reg in insn 692
changing reg in insn 694
changing reg in insn 694
changing reg in insn 694
changing reg in insn 705
changing reg in insn 696
changing reg in insn 697
changing reg in insn 697
changing reg in insn 699
changing reg in insn 699
changing reg in insn 700
changing reg in insn 700
changing reg in insn 701
changing reg in insn 703
changing reg in insn 704
changing reg in insn 705
changing reg in insn 707
changing reg in insn 708
changing reg in insn 708
changing reg in insn 713
changing reg in insn 711
changing reg in insn 709
changing reg in insn 713
changing reg in insn 711
changing reg in insn 716
changing reg in insn 718
changing reg in insn 718
changing reg in insn 719
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 329
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 336
changing reg in insn 335
changing reg in insn 337
changing reg in insn 1466
changing reg in insn 1467
changing reg in insn 1471
changing reg in insn 1472
changing reg in insn 1476
changing reg in insn 1477
changing reg in insn 1477
changing reg in insn 1478
changing reg in insn 1490
changing reg in insn 1491
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1500
changing reg in insn 1501
changing reg in insn 1501
changing reg in insn 1502
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1526
changing reg in insn 1527
changing reg in insn 1538
changing reg in insn 1539
changing reg in insn 1559
changing reg in insn 1560
changing reg in insn 1564
changing reg in insn 1565
changing reg in insn 1569
changing reg in insn 1570
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1587
changing reg in insn 1588
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1609
changing reg in insn 1610
changing reg in insn 1614
changing reg in insn 1615
changing reg in insn 1631
changing reg in insn 1632
changing reg in insn 1632
changing reg in insn 1633
changing reg in insn 1649
changing reg in insn 1652
changing reg in insn 1655
changing reg in insn 1658
changing reg in insn 1661
changing reg in insn 1662
changing reg in insn 1666
changing reg in insn 1669
changing reg in insn 1676
changing reg in insn 1679
changing reg in insn 1678
changing reg in insn 1680
changing reg in insn 1683
changing reg in insn 1686
changing reg in insn 1685
changing reg in insn 1687
changing reg in insn 1690
changing reg in insn 1694
changing reg in insn 1692
changing reg in insn 1693
changing reg in insn 1693
changing reg in insn 1695
changing reg in insn 1698
changing reg in insn 1702
changing reg in insn 1705
changing reg in insn 1709
changing reg in insn 1716
changing reg in insn 1720
changing reg in insn 1723
changing reg in insn 1727
changing reg in insn 1730
changing reg in insn 1731
changing reg in insn 1731
changing reg in insn 1735
changing reg in insn 1738
changing reg in insn 1742
changing reg in insn 1745
changing reg in insn 1749
changing reg in insn 1755
changing reg in insn 1757
changing reg in insn 1759
changing reg in insn 1760
changing reg in insn 1769
changing reg in insn 1771
changing reg in insn 1773
changing reg in insn 1774
changing reg in insn 1803
changing reg in insn 1807
changing reg in insn 23
changing reg in insn 27
changing reg in insn 26
changing reg in insn 25
changing reg in insn 24
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 33
changing reg in insn 32
changing reg in insn 31
changing reg in insn 30
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 39
changing reg in insn 38
changing reg in insn 37
changing reg in insn 36
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 50
changing reg in insn 49
changing reg in insn 48
changing reg in insn 47
changing reg in insn 46
changing reg in insn 53
changing reg in insn 51
changing reg in insn 50
changing reg in insn 49
changing reg in insn 48
changing reg in insn 47
changing reg in insn 51
changing reg in insn 52
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
changing reg in insn 65
changing reg in insn 63
changing reg in insn 62
changing reg in insn 61
changing reg in insn 60
changing reg in insn 59
changing reg in insn 66
changing reg in insn 64
changing reg in insn 63
changing reg in insn 62
changing reg in insn 61
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 67
changing reg in insn 70
changing reg in insn 71
changing reg in insn 78
changing reg in insn 76
changing reg in insn 75
changing reg in insn 74
changing reg in insn 73
changing reg in insn 72
changing reg in insn 79
changing reg in insn 77
changing reg in insn 76
changing reg in insn 75
changing reg in insn 74
changing reg in insn 73
changing reg in insn 77
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 90
changing reg in insn 89
changing reg in insn 88
changing reg in insn 87
changing reg in insn 86
changing reg in insn 93
changing reg in insn 91
changing reg in insn 90
changing reg in insn 89
changing reg in insn 88
changing reg in insn 87
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 97
changing reg in insn 98
changing reg in insn 105
changing reg in insn 103
changing reg in insn 102
changing reg in insn 101
changing reg in insn 100
changing reg in insn 99
changing reg in insn 106
changing reg in insn 104
changing reg in insn 103
changing reg in insn 102
changing reg in insn 101
changing reg in insn 100
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 118
changing reg in insn 116
changing reg in insn 115
changing reg in insn 114
changing reg in insn 113
changing reg in insn 112
changing reg in insn 119
changing reg in insn 117
changing reg in insn 116
changing reg in insn 115
changing reg in insn 114
changing reg in insn 113
changing reg in insn 117
changing reg in insn 118
changing reg in insn 120
changing reg in insn 123
changing reg in insn 124
changing reg in insn 131
changing reg in insn 129
changing reg in insn 128
changing reg in insn 127
changing reg in insn 126
changing reg in insn 125
changing reg in insn 132
changing reg in insn 130
changing reg in insn 129
changing reg in insn 128
changing reg in insn 127
changing reg in insn 126
changing reg in insn 130
changing reg in insn 131
changing reg in insn 133
changing reg in insn 136
changing reg in insn 137
changing reg in insn 144
changing reg in insn 142
changing reg in insn 141
changing reg in insn 140
changing reg in insn 139
changing reg in insn 138
changing reg in insn 145
changing reg in insn 143
changing reg in insn 142
changing reg in insn 141
changing reg in insn 140
changing reg in insn 139
changing reg in insn 143
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 151
changing reg in insn 158
changing reg in insn 156
changing reg in insn 155
changing reg in insn 154
changing reg in insn 153
changing reg in insn 152
changing reg in insn 159
changing reg in insn 157
changing reg in insn 156
changing reg in insn 155
changing reg in insn 154
changing reg in insn 153
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 163
changing reg in insn 164
changing reg in insn 171
changing reg in insn 169
changing reg in insn 168
changing reg in insn 167
changing reg in insn 166
changing reg in insn 165
changing reg in insn 172
changing reg in insn 170
changing reg in insn 169
changing reg in insn 168
changing reg in insn 167
changing reg in insn 166
changing reg in insn 170
changing reg in insn 171
changing reg in insn 173
changing reg in insn 176
changing reg in insn 177
changing reg in insn 184
changing reg in insn 182
changing reg in insn 181
changing reg in insn 180
changing reg in insn 179
changing reg in insn 178
changing reg in insn 185
changing reg in insn 183
changing reg in insn 182
changing reg in insn 181
changing reg in insn 180
changing reg in insn 179
changing reg in insn 183
changing reg in insn 184
changing reg in insn 186
changing reg in insn 189
changing reg in insn 190
changing reg in insn 197
changing reg in insn 195
changing reg in insn 194
changing reg in insn 193
changing reg in insn 192
changing reg in insn 191
changing reg in insn 198
changing reg in insn 196
changing reg in insn 195
changing reg in insn 194
changing reg in insn 193
changing reg in insn 192
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 202
changing reg in insn 203
changing reg in insn 210
changing reg in insn 208
changing reg in insn 207
changing reg in insn 206
changing reg in insn 205
changing reg in insn 204
changing reg in insn 211
changing reg in insn 209
changing reg in insn 208
changing reg in insn 207
changing reg in insn 206
changing reg in insn 205
changing reg in insn 209
changing reg in insn 210
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 216
changing reg in insn 217
changing reg in insn 224
changing reg in insn 222
changing reg in insn 221
changing reg in insn 220
changing reg in insn 219
changing reg in insn 218
changing reg in insn 225
changing reg in insn 223
changing reg in insn 222
changing reg in insn 221
changing reg in insn 220
changing reg in insn 219
changing reg in insn 223
changing reg in insn 224
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 237
changing reg in insn 235
changing reg in insn 234
changing reg in insn 233
changing reg in insn 232
changing reg in insn 231
changing reg in insn 238
changing reg in insn 236
changing reg in insn 235
changing reg in insn 234
changing reg in insn 233
changing reg in insn 232
changing reg in insn 236
changing reg in insn 237
changing reg in insn 239
changing reg in insn 242
changing reg in insn 243
changing reg in insn 250
changing reg in insn 248
changing reg in insn 247
changing reg in insn 246
changing reg in insn 245
changing reg in insn 244
changing reg in insn 251
changing reg in insn 249
changing reg in insn 248
changing reg in insn 247
changing reg in insn 246
changing reg in insn 245
changing reg in insn 249
changing reg in insn 250
changing reg in insn 252
changing reg in insn 255
changing reg in insn 256
changing reg in insn 263
changing reg in insn 261
changing reg in insn 260
changing reg in insn 259
changing reg in insn 258
changing reg in insn 257
changing reg in insn 264
changing reg in insn 262
changing reg in insn 261
changing reg in insn 260
changing reg in insn 259
changing reg in insn 258
changing reg in insn 262
changing reg in insn 263
changing reg in insn 265
changing reg in insn 268
changing reg in insn 269
changing reg in insn 276
changing reg in insn 274
changing reg in insn 273
changing reg in insn 272
changing reg in insn 271
changing reg in insn 270
changing reg in insn 277
changing reg in insn 275
changing reg in insn 274
changing reg in insn 273
changing reg in insn 272
changing reg in insn 271
changing reg in insn 275
changing reg in insn 276
changing reg in insn 278
changing reg in insn 281
changing reg in insn 282
changing reg in insn 289
changing reg in insn 287
changing reg in insn 286
changing reg in insn 285
changing reg in insn 284
changing reg in insn 283
changing reg in insn 290
changing reg in insn 288
changing reg in insn 287
changing reg in insn 286
changing reg in insn 285
changing reg in insn 284
changing reg in insn 288
changing reg in insn 289
changing reg in insn 291
changing reg in insn 302
changing reg in insn 303
changing reg in insn 307
changing reg in insn 308
changing reg in insn 310
changing reg in insn 325
changing reg in insn 326
changing reg in insn 328
changing reg in insn 331
changing reg in insn 335
changing reg in insn 333
changing reg in insn 334
changing reg in insn 332
changing reg in insn 333
changing reg in insn 334
changing reg in insn 335
changing reg in insn 344
changing reg in insn 345
changing reg in insn 347
changing reg in insn 357
changing reg in insn 358
changing reg in insn 360
changing reg in insn 370
changing reg in insn 371
changing reg in insn 373
changing reg in insn 384
changing reg in insn 385
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 397
changing reg in insn 399
changing reg in insn 409
changing reg in insn 410
changing reg in insn 418
changing reg in insn 416
changing reg in insn 415
changing reg in insn 414
changing reg in insn 413
changing reg in insn 412
changing reg in insn 419
changing reg in insn 417
changing reg in insn 416
changing reg in insn 415
changing reg in insn 414
changing reg in insn 413
changing reg in insn 417
changing reg in insn 418
changing reg in insn 420
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 426
changing reg in insn 434
changing reg in insn 432
changing reg in insn 431
changing reg in insn 430
changing reg in insn 429
changing reg in insn 428
changing reg in insn 435
changing reg in insn 433
changing reg in insn 432
changing reg in insn 431
changing reg in insn 430
changing reg in insn 429
changing reg in insn 433
changing reg in insn 434
changing reg in insn 436
changing reg in insn 441
changing reg in insn 442
changing reg in insn 444
changing reg in insn 454
changing reg in insn 455
changing reg in insn 463
changing reg in insn 461
changing reg in insn 460
changing reg in insn 459
changing reg in insn 458
changing reg in insn 457
changing reg in insn 464
changing reg in insn 462
changing reg in insn 461
changing reg in insn 460
changing reg in insn 459
changing reg in insn 458
changing reg in insn 462
changing reg in insn 463
changing reg in insn 465
changing reg in insn 469
changing reg in insn 470
changing reg in insn 472
changing reg in insn 481
changing reg in insn 482
changing reg in insn 490
changing reg in insn 488
changing reg in insn 487
changing reg in insn 486
changing reg in insn 485
changing reg in insn 484
changing reg in insn 491
changing reg in insn 489
changing reg in insn 488
changing reg in insn 487
changing reg in insn 486
changing reg in insn 485
changing reg in insn 489
changing reg in insn 490
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 495
changing reg in insn 497
changing reg in insn 505
changing reg in insn 506
changing reg in insn 507
changing reg in insn 508
changing reg in insn 516
changing reg in insn 514
changing reg in insn 513
changing reg in insn 512
changing reg in insn 511
changing reg in insn 510
changing reg in insn 517
changing reg in insn 515
changing reg in insn 514
changing reg in insn 513
changing reg in insn 512
changing reg in insn 511
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 520
changing reg in insn 521
changing reg in insn 523
changing reg in insn 531
changing reg in insn 532
changing reg in insn 540
changing reg in insn 538
changing reg in insn 537
changing reg in insn 536
changing reg in insn 535
changing reg in insn 534
changing reg in insn 541
changing reg in insn 539
changing reg in insn 538
changing reg in insn 537
changing reg in insn 536
changing reg in insn 535
changing reg in insn 539
changing reg in insn 540
changing reg in insn 542
changing reg in insn 554
changing reg in insn 555
changing reg in insn 557
changing reg in insn 567
changing reg in insn 568
changing reg in insn 576
changing reg in insn 574
changing reg in insn 573
changing reg in insn 572
changing reg in insn 571
changing reg in insn 570
changing reg in insn 577
changing reg in insn 575
changing reg in insn 574
changing reg in insn 573
changing reg in insn 572
changing reg in insn 571
changing reg in insn 575
changing reg in insn 576
changing reg in insn 578
changing reg in insn 582
changing reg in insn 583
changing reg in insn 585
changing reg in insn 594
changing reg in insn 595
changing reg in insn 603
changing reg in insn 601
changing reg in insn 600
changing reg in insn 599
changing reg in insn 598
changing reg in insn 597
changing reg in insn 604
changing reg in insn 602
changing reg in insn 601
changing reg in insn 600
changing reg in insn 599
changing reg in insn 598
changing reg in insn 602
changing reg in insn 603
changing reg in insn 605
changing reg in insn 606
changing reg in insn 607
changing reg in insn 608
changing reg in insn 610
changing reg in insn 628
changing reg in insn 629
changing reg in insn 631
changing reg in insn 640
changing reg in insn 641
changing reg in insn 649
changing reg in insn 647
changing reg in insn 646
changing reg in insn 645
changing reg in insn 644
changing reg in insn 643
changing reg in insn 650
changing reg in insn 648
changing reg in insn 647
changing reg in insn 646
changing reg in insn 645
changing reg in insn 644
changing reg in insn 648
changing reg in insn 649
changing reg in insn 651
changing reg in insn 652
changing reg in insn 653
changing reg in insn 654
changing reg in insn 656
changing reg in insn 664
changing reg in insn 665
changing reg in insn 666
changing reg in insn 667
changing reg in insn 675
changing reg in insn 673
changing reg in insn 672
changing reg in insn 671
changing reg in insn 670
changing reg in insn 669
changing reg in insn 676
changing reg in insn 674
changing reg in insn 673
changing reg in insn 672
changing reg in insn 671
changing reg in insn 670
changing reg in insn 674
changing reg in insn 675
changing reg in insn 677
changing reg in insn 678
changing reg in insn 679
changing reg in insn 680
changing reg in insn 682
changing reg in insn 683
changing reg in insn 691
changing reg in insn 689
changing reg in insn 688
changing reg in insn 687
changing reg in insn 686
changing reg in insn 685
changing reg in insn 692
changing reg in insn 690
changing reg in insn 689
changing reg in insn 688
changing reg in insn 687
changing reg in insn 686
changing reg in insn 690
changing reg in insn 691
changing reg in insn 693
changing reg in insn 694
changing reg in insn 695
changing reg in insn 696
changing reg in insn 698
changing reg in insn 706
changing reg in insn 707
changing reg in insn 715
changing reg in insn 713
changing reg in insn 712
changing reg in insn 711
changing reg in insn 710
changing reg in insn 709
changing reg in insn 716
changing reg in insn 714
changing reg in insn 713
changing reg in insn 712
changing reg in insn 711
changing reg in insn 710
changing reg in insn 714
changing reg in insn 715
changing reg in insn 717
changing reg in insn 733
changing reg in insn 734
changing reg in insn 736
changing reg in insn 753
changing reg in insn 754
changing reg in insn 756
changing reg in insn 773
changing reg in insn 774
changing reg in insn 776
changing reg in insn 787
changing reg in insn 788
changing reg in insn 792
changing reg in insn 793
changing reg in insn 794
changing reg in insn 796
changing reg in insn 795
changing reg in insn 796
changing reg in insn 806
changing reg in insn 807
changing reg in insn 809
changing reg in insn 820
changing reg in insn 821
changing reg in insn 827
changing reg in insn 828
changing reg in insn 830
changing reg in insn 831
changing reg in insn 832
changing reg in insn 833
changing reg in insn 843
changing reg in insn 844
changing reg in insn 846
changing reg in insn 857
changing reg in insn 858
changing reg in insn 862
changing reg in insn 863
changing reg in insn 865
changing reg in insn 866
changing reg in insn 868
changing reg in insn 877
changing reg in insn 878
changing reg in insn 879
changing reg in insn 880
changing reg in insn 882
changing reg in insn 904
changing reg in insn 905
changing reg in insn 907
changing reg in insn 918
changing reg in insn 919
changing reg in insn 925
changing reg in insn 926
changing reg in insn 929
changing reg in insn 930
changing reg in insn 932
changing reg in insn 941
changing reg in insn 942
changing reg in insn 944
changing reg in insn 945
changing reg in insn 947
changing reg in insn 969
changing reg in insn 970
changing reg in insn 972
changing reg in insn 983
changing reg in insn 984
changing reg in insn 986
changing reg in insn 995
changing reg in insn 996
changing reg in insn 997
changing reg in insn 998
changing reg in insn 1000
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1020
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1041
changing reg in insn 1052
changing reg in insn 1053
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1061
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1080
changing reg in insn 1081
changing reg in insn 1083
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1103
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1125
changing reg in insn 1147
changing reg in insn 1148
changing reg in insn 1175
changing reg in insn 1176
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1180
changing reg in insn 1181
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1195
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1209
changing reg in insn 1210
changing reg in insn 1212
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1253
changing reg in insn 1254
changing reg in insn 1256
changing reg in insn 1267
changing reg in insn 1268
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1283
changing reg in insn 1284
changing reg in insn 1286
changing reg in insn 1297
changing reg in insn 1298
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1318
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1339
changing reg in insn 1340
changing reg in insn 1345
changing reg in insn 1346
changing reg in insn 1348
changing reg in insn 1359
changing reg in insn 1360
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1377
changing reg in insn 1378
changing reg in insn 1380
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1396
changing reg in insn 1397
changing reg in insn 1399
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1418
changing reg in insn 1434
changing reg in insn 1436
changing reg in insn 1435
changing reg in insn 1436
changing reg in insn 1446
changing reg in insn 1447
changing reg in insn 1465
changing reg in insn 1466
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1494
changing reg in insn 1495
changing reg in insn 1499
changing reg in insn 1500
changing reg in insn 1505
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1558
changing reg in insn 1559
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1568
changing reg in insn 1569
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1603
changing reg in insn 1604
changing reg in insn 1608
changing reg in insn 1609
changing reg in insn 1613
changing reg in insn 1614
changing reg in insn 1630
changing reg in insn 1631
changing reg in insn 1650
changing reg in insn 1651
changing reg in insn 1654
changing reg in insn 1655
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1660
changing reg in insn 1661
changing reg in insn 1665
changing reg in insn 1666
changing reg in insn 1667
changing reg in insn 1668
changing reg in insn 1677
changing reg in insn 1678
changing reg in insn 1682
changing reg in insn 1683
changing reg in insn 1684
changing reg in insn 1685
changing reg in insn 1689
changing reg in insn 1690
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1697
changing reg in insn 1698
changing reg in insn 1699
changing reg in insn 1700
changing reg in insn 1700
changing reg in insn 1701
changing reg in insn 1704
changing reg in insn 1705
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1715
changing reg in insn 1716
changing reg in insn 1717
changing reg in insn 1718
changing reg in insn 1718
changing reg in insn 1719
changing reg in insn 1722
changing reg in insn 1723
changing reg in insn 1724
changing reg in insn 1725
changing reg in insn 1725
changing reg in insn 1726
changing reg in insn 1729
changing reg in insn 1730
changing reg in insn 1732
changing reg in insn 1733
changing reg in insn 1733
changing reg in insn 1734
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1739
changing reg in insn 1740
changing reg in insn 1740
changing reg in insn 1741
changing reg in insn 1744
changing reg in insn 1745
changing reg in insn 1746
changing reg in insn 1747
changing reg in insn 1747
changing reg in insn 1748
changing reg in insn 1768
changing reg in insn 1769
deleting insn with uid = 502.
deleting insn with uid = 528.
deleting insn with uid = 661.
deleting insn with uid = 703.
deleting insn with uid = 885.
deleting insn with uid = 950.
deleting insn with uid = 1003.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 338.
verify found no changes in insn with uid = 352.
verify found no changes in insn with uid = 365.
verify found no changes in insn with uid = 378.
verify found no changes in insn with uid = 404.
verify found no changes in insn with uid = 449.
verify found no changes in insn with uid = 476.
verify found no changes in insn with uid = 501.
verify found no changes in insn with uid = 527.
verify found no changes in insn with uid = 562.
verify found no changes in insn with uid = 589.
verify found no changes in insn with uid = 614.
verify found no changes in insn with uid = 635.
verify found no changes in insn with uid = 660.
verify found no changes in insn with uid = 702.
verify found no changes in insn with uid = 741.
verify found no changes in insn with uid = 747.
verify found no changes in insn with uid = 749.
verify found no changes in insn with uid = 761.
verify found no changes in insn with uid = 767.
verify found no changes in insn with uid = 769.
verify found no changes in insn with uid = 781.
verify found no changes in insn with uid = 814.
verify found no changes in insn with uid = 851.
verify found no changes in insn with uid = 872.
verify found no changes in insn with uid = 889.
verify found no changes in insn with uid = 912.
verify found no changes in insn with uid = 936.
verify found no changes in insn with uid = 954.
verify found no changes in insn with uid = 977.
verify found no changes in insn with uid = 990.
verify found no changes in insn with uid = 1007.
verify found no changes in insn with uid = 1025.
verify found no changes in insn with uid = 1046.
verify found no changes in insn with uid = 1066.
verify found no changes in insn with uid = 1088.
verify found no changes in insn with uid = 1108.
verify found no changes in insn with uid = 1130.
verify found no changes in insn with uid = 1151.
verify found no changes in insn with uid = 1172.
verify found no changes in insn with uid = 1217.
verify found no changes in insn with uid = 1238.
verify found no changes in insn with uid = 1261.
verify found no changes in insn with uid = 1291.
verify found no changes in insn with uid = 1323.
verify found no changes in insn with uid = 1353.
verify found no changes in insn with uid = 1385.
verify found no changes in insn with uid = 1404.
verify found no changes in insn with uid = 1423.
verify found no changes in insn with uid = 1428.
verify found no changes in insn with uid = 1430.
verify found no changes in insn with uid = 1517.
verify found no changes in insn with uid = 1532.
verify found no changes in insn with uid = 1537.
verify found no changes in insn with uid = 1653.
verify found no changes in insn with uid = 1659.
verify found no changes in insn with uid = 1670.
verify found no changes in insn with uid = 1681.
verify found no changes in insn with uid = 1688.
verify found no changes in insn with uid = 1696.
verify found no changes in insn with uid = 1703.
verify found no changes in insn with uid = 1710.
verify found no changes in insn with uid = 1721.
verify found no changes in insn with uid = 1728.
verify found no changes in insn with uid = 1736.
verify found no changes in insn with uid = 1743.
verify found no changes in insn with uid = 1750.
verify found no changes in insn with uid = 1758.
verify found no changes in insn with uid = 1772.


int command_line(Preprocess*, IOFiles*, Procpar_info*, int, char**, int*, int*, int*, bool*, bool*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 37[r8] 38[r9]
;;  ref usage 	r0={841d,788u} r1={211d,204u,133e} r2={78d,9u,3e} r3={9d,9u} r4={118d,49u} r5={136d,67u} r6={1d,506u} r7={1d,235u} r8={69d} r9={69d} r10={69d} r11={69d} r12={69d} r13={69d} r14={69d} r15={69d} r16={4e} r17={522d,91u} r18={69d} r19={69d} r20={1d,1u,118e} r21={70d,4u} r22={71d,1u} r23={71d,1u} r24={71d,1u} r25={71d,1u} r26={70d} r27={70d} r28={70d} r29={69d} r30={69d} r31={69d} r32={69d} r33={69d} r34={69d} r35={69d} r36={69d} r37={70d,1u} r38={70d,1u} r39={69d} r40={69d} r45={69d} r46={69d} r47={69d} r48={69d} r49={69d} r50={69d} r51={69d} r52={69d} r53={69d} r54={69d} r55={69d} r56={69d} r57={69d} r58={69d} r59={69d} r60={69d} r61={69d} r62={69d} r63={69d} r64={69d} r65={69d} r66={69d} r67={69d} r68={69d} r69={69d} r70={69d} r71={69d} r72={69d} r73={69d} r74={69d} r75={69d} r76={69d} 
;;    total ref usage 8437{6210d,1969u,258e} in 1488{1419 regular + 69 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 493 494 495 496 497
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
        (reg:DI 5 di [ preprocess ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
        (reg:DI 4 si [ io_filenames ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -860 [0xfffffffffffffca4])) [0 argc+0 S4 A32])
        (reg:SI 2 cx [ argc ])) ge2fitman_com_line.cpp:48 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
        (reg:DI 37 r8 [ argv ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])
        (reg:DI 38 r9 [ fid ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:52 93 {*movqi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:53 93 {*movqi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:54 93 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -814 [0xfffffffffffffcd2])) [0 rscale_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:56 93 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -813 [0xfffffffffffffcd3])) [0 rbc_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:57 93 {*movqi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [0 rif_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:58 93 {*movqi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:59 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -810 [0xfffffffffffffcd6])) [0 only_suppressed+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:61 93 {*movqi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -809 [0xfffffffffffffcd7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:62 93 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -792 [0xfffffffffffffce8])) [0 temp_long+0 S8 A64])
        (const_int 0 [0])) ge2fitman_com_line.cpp:64 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:65 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [0 s_u_out+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:66 90 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 0 ax [493])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:69 221 {*adddi_1}
     (nil))
(insn 24 23 1938 2 (set (reg:DI 3 bx [820])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 1938 24 25 2 (set (mem/c:DI (reg:DI 0 ax [493]) [0 MEM[(void *)&filename]+0 S8 A64])
        (reg:DI 3 bx [820])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 25 1938 1939 2 (set (reg:DI 3 bx [821])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 1939 25 26 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [493])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename]+8 S8 A64])
        (reg:DI 3 bx [821])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 26 1939 27 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [493])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:69 90 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [493])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:69 92 {*movhi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 0 ax [494])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:70 221 {*adddi_1}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 0 ax [495])
                (plus:DI (reg:DI 0 ax [494])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:70 221 {*adddi_1}
     (nil))
(insn 30 29 1940 2 (set (reg:DI 2 cx [822])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 1940 30 31 2 (set (mem/c:DI (reg:DI 0 ax [495]) [0 MEM[(void *)&filename + 256B]+0 S8 A64])
        (reg:DI 2 cx [822])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 31 1940 1941 2 (set (reg:DI 3 bx [823])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 1941 31 32 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [495])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename + 256B]+8 S8 A64])
        (reg:DI 3 bx [823])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 32 1941 33 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [495])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename + 256B]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:70 90 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [495])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename + 256B]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:70 92 {*movhi_internal}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 0 ax [496])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:71 221 {*adddi_1}
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 0 ax [497])
                (plus:DI (reg:DI 0 ax [496])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:71 221 {*adddi_1}
     (nil))
(insn 36 35 1942 2 (set (reg:DI 2 cx [824])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 1942 36 37 2 (set (mem/c:DI (reg:DI 0 ax [497]) [0 MEM[(void *)&filename + 512B]+0 S8 A64])
        (reg:DI 2 cx [824])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 37 1942 1943 2 (set (reg:DI 3 bx [825])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 1943 37 38 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [497])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename + 512B]+8 S8 A64])
        (reg:DI 3 bx [825])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 38 1943 39 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [497])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename + 512B]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:71 90 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [497])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename + 512B]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:71 92 {*movhi_internal}
     (nil))
(insn 40 39 1811 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:74 90 {*movsi_internal}
     (nil))
(jump_insn 1811 40 1812 2 (set (pc)
        (label_ref 295)) ge2fitman_com_line.cpp:74 636 {jump}
     (nil)
 -> 295)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1812 1811 297)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576
(code_label 297 1812 43 3 3 "" [1 uses])
(note 43 297 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg:SI 0 ax [498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:75 90 {*movsi_internal}
     (nil))
(insn 45 44 46 3 (set (reg:DI 1 dx [orig:84 D.24838 ] [84])
        (sign_extend:DI (reg:SI 0 ax [498]))) ge2fitman_com_line.cpp:75 142 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 3 (set (reg:DI 0 ax [499])
        (reg:DI 1 dx [orig:84 D.24838 ] [84])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 0 ax [499])
                (ashift:DI (reg:DI 0 ax [499])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 497 {*ashldi3_1}
     (nil))
(insn 48 47 49 3 (parallel [
            (set (reg:DI 0 ax [499])
                (plus:DI (reg:DI 0 ax [499])
                    (reg:DI 1 dx [orig:84 D.24838 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:84 D.24838 ] [84])
            (const_int 9 [0x9]))
        (nil)))
(insn 49 48 50 3 (parallel [
            (set (reg:DI 0 ax [499])
                (ashift:DI (reg:DI 0 ax [499])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 497 {*ashldi3_1}
     (nil))
(insn 50 49 51 3 (parallel [
            (set (reg:DI 0 ax [499])
                (plus:DI (reg:DI 0 ax [499])
                    (reg:DI 1 dx [orig:84 D.24838 ] [84])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:84 D.24838 ] [84])
            (const_int 19 [0x13]))
        (nil)))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 0 ax [500])
                (ashift:DI (reg:DI 0 ax [499])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 497 {*ashldi3_1}
     (nil))
(insn 52 51 53 3 (set (reg:DI 0 ax [499])
        (reg:DI 0 ax [500])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 53 52 54 3 (set (reg:DI 1 dx [orig:85 D.24838 ] [85])
        (reg:DI 0 ax [499])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 54 53 55 3 (set (reg/f:DI 0 ax [501])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 55 54 56 3 (parallel [
            (set (reg/f:DI 0 ax [orig:86 D.24839 ] [86])
                (plus:DI (reg/f:DI 0 ax [501])
                    (reg:DI 1 dx [orig:85 D.24838 ] [85])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:85 D.24838 ] [85]))
        (nil)))
(insn 56 55 57 3 (set (mem/j:SI (reg/f:DI 0 ax [orig:86 D.24839 ] [86]) [0 _45->fid_scale+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:75 90 {*movsi_internal}
     (nil))
(insn 57 56 58 3 (set (reg:SI 0 ax [502])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:76 90 {*movsi_internal}
     (nil))
(insn 58 57 59 3 (set (reg:DI 1 dx [orig:87 D.24838 ] [87])
        (sign_extend:DI (reg:SI 0 ax [502]))) ge2fitman_com_line.cpp:76 142 {*extendsidi2_rex64}
     (nil))
(insn 59 58 60 3 (set (reg:DI 0 ax [503])
        (reg:DI 1 dx [orig:87 D.24838 ] [87])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 60 59 61 3 (parallel [
            (set (reg:DI 0 ax [503])
                (ashift:DI (reg:DI 0 ax [503])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 497 {*ashldi3_1}
     (nil))
(insn 61 60 62 3 (parallel [
            (set (reg:DI 0 ax [503])
                (plus:DI (reg:DI 0 ax [503])
                    (reg:DI 1 dx [orig:87 D.24838 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:87 D.24838 ] [87])
            (const_int 9 [0x9]))
        (nil)))
(insn 62 61 63 3 (parallel [
            (set (reg:DI 0 ax [503])
                (ashift:DI (reg:DI 0 ax [503])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 497 {*ashldi3_1}
     (nil))
(insn 63 62 64 3 (parallel [
            (set (reg:DI 0 ax [503])
                (plus:DI (reg:DI 0 ax [503])
                    (reg:DI 1 dx [orig:87 D.24838 ] [87])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:87 D.24838 ] [87])
            (const_int 19 [0x13]))
        (nil)))
(insn 64 63 65 3 (parallel [
            (set (reg:DI 0 ax [504])
                (ashift:DI (reg:DI 0 ax [503])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 497 {*ashldi3_1}
     (nil))
(insn 65 64 66 3 (set (reg:DI 0 ax [503])
        (reg:DI 0 ax [504])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 66 65 67 3 (set (reg:DI 1 dx [orig:88 D.24838 ] [88])
        (reg:DI 0 ax [503])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 67 66 68 3 (set (reg/f:DI 0 ax [505])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 68 67 69 3 (parallel [
            (set (reg/f:DI 0 ax [orig:89 D.24839 ] [89])
                (plus:DI (reg/f:DI 0 ax [505])
                    (reg:DI 1 dx [orig:88 D.24838 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:88 D.24838 ] [88]))
        (nil)))
(insn 69 68 70 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:89 D.24839 ] [89])
                (const_int 8 [0x8])) [0 _48->scaleby+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:76 90 {*movsi_internal}
     (nil))
(insn 70 69 71 3 (set (reg:SI 0 ax [506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:77 90 {*movsi_internal}
     (nil))
(insn 71 70 72 3 (set (reg:DI 1 dx [orig:90 D.24838 ] [90])
        (sign_extend:DI (reg:SI 0 ax [506]))) ge2fitman_com_line.cpp:77 142 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 3 (set (reg:DI 0 ax [507])
        (reg:DI 1 dx [orig:90 D.24838 ] [90])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 73 72 74 3 (parallel [
            (set (reg:DI 0 ax [507])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 497 {*ashldi3_1}
     (nil))
(insn 74 73 75 3 (parallel [
            (set (reg:DI 0 ax [507])
                (plus:DI (reg:DI 0 ax [507])
                    (reg:DI 1 dx [orig:90 D.24838 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:90 D.24838 ] [90])
            (const_int 9 [0x9]))
        (nil)))
(insn 75 74 76 3 (parallel [
            (set (reg:DI 0 ax [507])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 497 {*ashldi3_1}
     (nil))
(insn 76 75 77 3 (parallel [
            (set (reg:DI 0 ax [507])
                (plus:DI (reg:DI 0 ax [507])
                    (reg:DI 1 dx [orig:90 D.24838 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:90 D.24838 ] [90])
            (const_int 19 [0x13]))
        (nil)))
(insn 77 76 78 3 (parallel [
            (set (reg:DI 0 ax [508])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 497 {*ashldi3_1}
     (nil))
(insn 78 77 79 3 (set (reg:DI 0 ax [507])
        (reg:DI 0 ax [508])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 79 78 80 3 (set (reg:DI 1 dx [orig:91 D.24838 ] [91])
        (reg:DI 0 ax [507])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 80 79 81 3 (set (reg/f:DI 0 ax [509])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 81 80 82 3 (parallel [
            (set (reg/f:DI 1 dx [orig:92 D.24839 ] [92])
                (plus:DI (reg:DI 1 dx [orig:91 D.24838 ] [91])
                    (reg/f:DI 0 ax [509])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:91 D.24838 ] [91]))
        (nil)))
(insn 82 81 83 3 (set (reg:SF 0 ax [510])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:77 129 {*movsf_internal}
     (nil))
(insn 83 82 84 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:92 D.24839 ] [92])
                (const_int 4 [0x4])) [0 _51->scale_factor+0 S4 A32])
        (reg:SF 0 ax [510])) ge2fitman_com_line.cpp:77 129 {*movsf_internal}
     (nil))
(insn 84 83 85 3 (set (reg:SI 0 ax [511])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:78 90 {*movsi_internal}
     (nil))
(insn 85 84 86 3 (set (reg:DI 1 dx [orig:93 D.24838 ] [93])
        (sign_extend:DI (reg:SI 0 ax [511]))) ge2fitman_com_line.cpp:78 142 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 3 (set (reg:DI 0 ax [512])
        (reg:DI 1 dx [orig:93 D.24838 ] [93])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 87 86 88 3 (parallel [
            (set (reg:DI 0 ax [512])
                (ashift:DI (reg:DI 0 ax [512])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 497 {*ashldi3_1}
     (nil))
(insn 88 87 89 3 (parallel [
            (set (reg:DI 0 ax [512])
                (plus:DI (reg:DI 0 ax [512])
                    (reg:DI 1 dx [orig:93 D.24838 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:93 D.24838 ] [93])
            (const_int 9 [0x9]))
        (nil)))
(insn 89 88 90 3 (parallel [
            (set (reg:DI 0 ax [512])
                (ashift:DI (reg:DI 0 ax [512])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 497 {*ashldi3_1}
     (nil))
(insn 90 89 91 3 (parallel [
            (set (reg:DI 0 ax [512])
                (plus:DI (reg:DI 0 ax [512])
                    (reg:DI 1 dx [orig:93 D.24838 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:93 D.24838 ] [93])
            (const_int 19 [0x13]))
        (nil)))
(insn 91 90 92 3 (parallel [
            (set (reg:DI 0 ax [513])
                (ashift:DI (reg:DI 0 ax [512])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 497 {*ashldi3_1}
     (nil))
(insn 92 91 93 3 (set (reg:DI 0 ax [512])
        (reg:DI 0 ax [513])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 93 92 94 3 (set (reg:DI 1 dx [orig:94 D.24838 ] [94])
        (reg:DI 0 ax [512])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 94 93 95 3 (set (reg/f:DI 0 ax [514])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 95 94 96 3 (parallel [
            (set (reg/f:DI 0 ax [orig:95 D.24839 ] [95])
                (plus:DI (reg/f:DI 0 ax [514])
                    (reg:DI 1 dx [orig:94 D.24838 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:94 D.24838 ] [94]))
        (nil)))
(insn 96 95 97 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:95 D.24839 ] [95])
                (const_int 12 [0xc])) [0 _54->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:78 90 {*movsi_internal}
     (nil))
(insn 97 96 98 3 (set (reg:SI 0 ax [515])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:79 90 {*movsi_internal}
     (nil))
(insn 98 97 99 3 (set (reg:DI 1 dx [orig:96 D.24838 ] [96])
        (sign_extend:DI (reg:SI 0 ax [515]))) ge2fitman_com_line.cpp:79 142 {*extendsidi2_rex64}
     (nil))
(insn 99 98 100 3 (set (reg:DI 0 ax [516])
        (reg:DI 1 dx [orig:96 D.24838 ] [96])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 100 99 101 3 (parallel [
            (set (reg:DI 0 ax [516])
                (ashift:DI (reg:DI 0 ax [516])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 497 {*ashldi3_1}
     (nil))
(insn 101 100 102 3 (parallel [
            (set (reg:DI 0 ax [516])
                (plus:DI (reg:DI 0 ax [516])
                    (reg:DI 1 dx [orig:96 D.24838 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:96 D.24838 ] [96])
            (const_int 9 [0x9]))
        (nil)))
(insn 102 101 103 3 (parallel [
            (set (reg:DI 0 ax [516])
                (ashift:DI (reg:DI 0 ax [516])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 497 {*ashldi3_1}
     (nil))
(insn 103 102 104 3 (parallel [
            (set (reg:DI 0 ax [516])
                (plus:DI (reg:DI 0 ax [516])
                    (reg:DI 1 dx [orig:96 D.24838 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:96 D.24838 ] [96])
            (const_int 19 [0x13]))
        (nil)))
(insn 104 103 105 3 (parallel [
            (set (reg:DI 0 ax [517])
                (ashift:DI (reg:DI 0 ax [516])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 497 {*ashldi3_1}
     (nil))
(insn 105 104 106 3 (set (reg:DI 0 ax [516])
        (reg:DI 0 ax [517])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 106 105 107 3 (set (reg:DI 1 dx [orig:97 D.24838 ] [97])
        (reg:DI 0 ax [516])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 107 106 108 3 (set (reg/f:DI 0 ax [518])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 108 107 109 3 (parallel [
            (set (reg/f:DI 0 ax [orig:98 D.24839 ] [98])
                (plus:DI (reg/f:DI 0 ax [518])
                    (reg:DI 1 dx [orig:97 D.24838 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:97 D.24838 ] [97]))
        (nil)))
(insn 109 108 110 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:98 D.24839 ] [98])
                (const_int 16 [0x10])) [0 _57->bc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:79 90 {*movsi_internal}
     (nil))
(insn 110 109 111 3 (set (reg:SI 0 ax [519])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:80 90 {*movsi_internal}
     (nil))
(insn 111 110 112 3 (set (reg:DI 1 dx [orig:99 D.24838 ] [99])
        (sign_extend:DI (reg:SI 0 ax [519]))) ge2fitman_com_line.cpp:80 142 {*extendsidi2_rex64}
     (nil))
(insn 112 111 113 3 (set (reg:DI 0 ax [520])
        (reg:DI 1 dx [orig:99 D.24838 ] [99])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 113 112 114 3 (parallel [
            (set (reg:DI 0 ax [520])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 497 {*ashldi3_1}
     (nil))
(insn 114 113 115 3 (parallel [
            (set (reg:DI 0 ax [520])
                (plus:DI (reg:DI 0 ax [520])
                    (reg:DI 1 dx [orig:99 D.24838 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:99 D.24838 ] [99])
            (const_int 9 [0x9]))
        (nil)))
(insn 115 114 116 3 (parallel [
            (set (reg:DI 0 ax [520])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 497 {*ashldi3_1}
     (nil))
(insn 116 115 117 3 (parallel [
            (set (reg:DI 0 ax [520])
                (plus:DI (reg:DI 0 ax [520])
                    (reg:DI 1 dx [orig:99 D.24838 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:99 D.24838 ] [99])
            (const_int 19 [0x13]))
        (nil)))
(insn 117 116 118 3 (parallel [
            (set (reg:DI 0 ax [521])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 497 {*ashldi3_1}
     (nil))
(insn 118 117 119 3 (set (reg:DI 0 ax [520])
        (reg:DI 0 ax [521])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 119 118 120 3 (set (reg:DI 1 dx [orig:100 D.24838 ] [100])
        (reg:DI 0 ax [520])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 120 119 121 3 (set (reg/f:DI 0 ax [522])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 121 120 122 3 (parallel [
            (set (reg/f:DI 0 ax [orig:101 D.24839 ] [101])
                (plus:DI (reg/f:DI 0 ax [522])
                    (reg:DI 1 dx [orig:100 D.24838 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:100 D.24838 ] [100]))
        (nil)))
(insn 122 121 123 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:101 D.24839 ] [101])
                (const_int 20 [0x14])) [0 _60->file_type+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:80 90 {*movsi_internal}
     (nil))
(insn 123 122 124 3 (set (reg:SI 0 ax [523])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:81 90 {*movsi_internal}
     (nil))
(insn 124 123 125 3 (set (reg:DI 1 dx [orig:102 D.24838 ] [102])
        (sign_extend:DI (reg:SI 0 ax [523]))) ge2fitman_com_line.cpp:81 142 {*extendsidi2_rex64}
     (nil))
(insn 125 124 126 3 (set (reg:DI 0 ax [524])
        (reg:DI 1 dx [orig:102 D.24838 ] [102])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 126 125 127 3 (parallel [
            (set (reg:DI 0 ax [524])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 497 {*ashldi3_1}
     (nil))
(insn 127 126 128 3 (parallel [
            (set (reg:DI 0 ax [524])
                (plus:DI (reg:DI 0 ax [524])
                    (reg:DI 1 dx [orig:102 D.24838 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:102 D.24838 ] [102])
            (const_int 9 [0x9]))
        (nil)))
(insn 128 127 129 3 (parallel [
            (set (reg:DI 0 ax [524])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 497 {*ashldi3_1}
     (nil))
(insn 129 128 130 3 (parallel [
            (set (reg:DI 0 ax [524])
                (plus:DI (reg:DI 0 ax [524])
                    (reg:DI 1 dx [orig:102 D.24838 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:102 D.24838 ] [102])
            (const_int 19 [0x13]))
        (nil)))
(insn 130 129 131 3 (parallel [
            (set (reg:DI 0 ax [525])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 497 {*ashldi3_1}
     (nil))
(insn 131 130 132 3 (set (reg:DI 0 ax [524])
        (reg:DI 0 ax [525])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 132 131 133 3 (set (reg:DI 1 dx [orig:103 D.24838 ] [103])
        (reg:DI 0 ax [524])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 133 132 134 3 (set (reg/f:DI 0 ax [526])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 134 133 135 3 (parallel [
            (set (reg/f:DI 0 ax [orig:104 D.24839 ] [104])
                (plus:DI (reg/f:DI 0 ax [526])
                    (reg:DI 1 dx [orig:103 D.24838 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:103 D.24838 ] [103]))
        (nil)))
(insn 135 134 136 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:104 D.24839 ] [104])
                (const_int 24 [0x18])) [0 _63->data_zero_fill+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:81 90 {*movsi_internal}
     (nil))
(insn 136 135 137 3 (set (reg:SI 0 ax [527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:82 90 {*movsi_internal}
     (nil))
(insn 137 136 138 3 (set (reg:DI 1 dx [orig:105 D.24838 ] [105])
        (sign_extend:DI (reg:SI 0 ax [527]))) ge2fitman_com_line.cpp:82 142 {*extendsidi2_rex64}
     (nil))
(insn 138 137 139 3 (set (reg:DI 0 ax [528])
        (reg:DI 1 dx [orig:105 D.24838 ] [105])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 139 138 140 3 (parallel [
            (set (reg:DI 0 ax [528])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 497 {*ashldi3_1}
     (nil))
(insn 140 139 141 3 (parallel [
            (set (reg:DI 0 ax [528])
                (plus:DI (reg:DI 0 ax [528])
                    (reg:DI 1 dx [orig:105 D.24838 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:105 D.24838 ] [105])
            (const_int 9 [0x9]))
        (nil)))
(insn 141 140 142 3 (parallel [
            (set (reg:DI 0 ax [528])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 497 {*ashldi3_1}
     (nil))
(insn 142 141 143 3 (parallel [
            (set (reg:DI 0 ax [528])
                (plus:DI (reg:DI 0 ax [528])
                    (reg:DI 1 dx [orig:105 D.24838 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:105 D.24838 ] [105])
            (const_int 19 [0x13]))
        (nil)))
(insn 143 142 144 3 (parallel [
            (set (reg:DI 0 ax [529])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 497 {*ashldi3_1}
     (nil))
(insn 144 143 145 3 (set (reg:DI 0 ax [528])
        (reg:DI 0 ax [529])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 145 144 146 3 (set (reg:DI 1 dx [orig:106 D.24838 ] [106])
        (reg:DI 0 ax [528])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 146 145 147 3 (set (reg/f:DI 0 ax [530])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 147 146 148 3 (parallel [
            (set (reg/f:DI 1 dx [orig:107 D.24839 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 D.24838 ] [106])
                    (reg/f:DI 0 ax [530])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:106 D.24838 ] [106]))
        (nil)))
(insn 148 147 149 3 (set (reg:SF 0 ax [531])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:82 129 {*movsf_internal}
     (nil))
(insn 149 148 150 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:107 D.24839 ] [107])
                (const_int 28 [0x1c])) [0 _66->comp_filter+0 S4 A32])
        (reg:SF 0 ax [531])) ge2fitman_com_line.cpp:82 129 {*movsf_internal}
     (nil))
(insn 150 149 151 3 (set (reg:SI 0 ax [532])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:83 90 {*movsi_internal}
     (nil))
(insn 151 150 152 3 (set (reg:DI 1 dx [orig:108 D.24838 ] [108])
        (sign_extend:DI (reg:SI 0 ax [532]))) ge2fitman_com_line.cpp:83 142 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 3 (set (reg:DI 0 ax [533])
        (reg:DI 1 dx [orig:108 D.24838 ] [108])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 153 152 154 3 (parallel [
            (set (reg:DI 0 ax [533])
                (ashift:DI (reg:DI 0 ax [533])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 497 {*ashldi3_1}
     (nil))
(insn 154 153 155 3 (parallel [
            (set (reg:DI 0 ax [533])
                (plus:DI (reg:DI 0 ax [533])
                    (reg:DI 1 dx [orig:108 D.24838 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:108 D.24838 ] [108])
            (const_int 9 [0x9]))
        (nil)))
(insn 155 154 156 3 (parallel [
            (set (reg:DI 0 ax [533])
                (ashift:DI (reg:DI 0 ax [533])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 497 {*ashldi3_1}
     (nil))
(insn 156 155 157 3 (parallel [
            (set (reg:DI 0 ax [533])
                (plus:DI (reg:DI 0 ax [533])
                    (reg:DI 1 dx [orig:108 D.24838 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:108 D.24838 ] [108])
            (const_int 19 [0x13]))
        (nil)))
(insn 157 156 158 3 (parallel [
            (set (reg:DI 0 ax [534])
                (ashift:DI (reg:DI 0 ax [533])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 497 {*ashldi3_1}
     (nil))
(insn 158 157 159 3 (set (reg:DI 0 ax [533])
        (reg:DI 0 ax [534])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 159 158 160 3 (set (reg:DI 1 dx [orig:109 D.24838 ] [109])
        (reg:DI 0 ax [533])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 160 159 161 3 (set (reg/f:DI 0 ax [535])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 161 160 162 3 (parallel [
            (set (reg/f:DI 0 ax [orig:110 D.24839 ] [110])
                (plus:DI (reg/f:DI 0 ax [535])
                    (reg:DI 1 dx [orig:109 D.24838 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:109 D.24838 ] [109]))
        (nil)))
(insn 162 161 163 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:110 D.24839 ] [110])
                (const_int 32 [0x20])) [0 _69->max_normalize+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:83 90 {*movsi_internal}
     (nil))
(insn 163 162 164 3 (set (reg:SI 0 ax [536])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:84 90 {*movsi_internal}
     (nil))
(insn 164 163 165 3 (set (reg:DI 1 dx [orig:111 D.24838 ] [111])
        (sign_extend:DI (reg:SI 0 ax [536]))) ge2fitman_com_line.cpp:84 142 {*extendsidi2_rex64}
     (nil))
(insn 165 164 166 3 (set (reg:DI 0 ax [537])
        (reg:DI 1 dx [orig:111 D.24838 ] [111])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 166 165 167 3 (parallel [
            (set (reg:DI 0 ax [537])
                (ashift:DI (reg:DI 0 ax [537])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 497 {*ashldi3_1}
     (nil))
(insn 167 166 168 3 (parallel [
            (set (reg:DI 0 ax [537])
                (plus:DI (reg:DI 0 ax [537])
                    (reg:DI 1 dx [orig:111 D.24838 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:111 D.24838 ] [111])
            (const_int 9 [0x9]))
        (nil)))
(insn 168 167 169 3 (parallel [
            (set (reg:DI 0 ax [537])
                (ashift:DI (reg:DI 0 ax [537])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 497 {*ashldi3_1}
     (nil))
(insn 169 168 170 3 (parallel [
            (set (reg:DI 0 ax [537])
                (plus:DI (reg:DI 0 ax [537])
                    (reg:DI 1 dx [orig:111 D.24838 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:111 D.24838 ] [111])
            (const_int 19 [0x13]))
        (nil)))
(insn 170 169 171 3 (parallel [
            (set (reg:DI 0 ax [538])
                (ashift:DI (reg:DI 0 ax [537])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 497 {*ashldi3_1}
     (nil))
(insn 171 170 172 3 (set (reg:DI 0 ax [537])
        (reg:DI 0 ax [538])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 172 171 173 3 (set (reg:DI 1 dx [orig:112 D.24838 ] [112])
        (reg:DI 0 ax [537])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 173 172 174 3 (set (reg/f:DI 0 ax [539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 174 173 175 3 (parallel [
            (set (reg/f:DI 0 ax [orig:113 D.24839 ] [113])
                (plus:DI (reg/f:DI 0 ax [539])
                    (reg:DI 1 dx [orig:112 D.24838 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:112 D.24838 ] [112]))
        (nil)))
(insn 175 174 176 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:113 D.24839 ] [113])
                (const_int 36 [0x24])) [0 _72->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:84 90 {*movsi_internal}
     (nil))
(insn 176 175 177 3 (set (reg:SI 0 ax [540])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:85 90 {*movsi_internal}
     (nil))
(insn 177 176 178 3 (set (reg:DI 1 dx [orig:114 D.24838 ] [114])
        (sign_extend:DI (reg:SI 0 ax [540]))) ge2fitman_com_line.cpp:85 142 {*extendsidi2_rex64}
     (nil))
(insn 178 177 179 3 (set (reg:DI 0 ax [541])
        (reg:DI 1 dx [orig:114 D.24838 ] [114])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 179 178 180 3 (parallel [
            (set (reg:DI 0 ax [541])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 497 {*ashldi3_1}
     (nil))
(insn 180 179 181 3 (parallel [
            (set (reg:DI 0 ax [541])
                (plus:DI (reg:DI 0 ax [541])
                    (reg:DI 1 dx [orig:114 D.24838 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:114 D.24838 ] [114])
            (const_int 9 [0x9]))
        (nil)))
(insn 181 180 182 3 (parallel [
            (set (reg:DI 0 ax [541])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 497 {*ashldi3_1}
     (nil))
(insn 182 181 183 3 (parallel [
            (set (reg:DI 0 ax [541])
                (plus:DI (reg:DI 0 ax [541])
                    (reg:DI 1 dx [orig:114 D.24838 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:114 D.24838 ] [114])
            (const_int 19 [0x13]))
        (nil)))
(insn 183 182 184 3 (parallel [
            (set (reg:DI 0 ax [542])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 497 {*ashldi3_1}
     (nil))
(insn 184 183 185 3 (set (reg:DI 0 ax [541])
        (reg:DI 0 ax [542])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 185 184 186 3 (set (reg:DI 1 dx [orig:115 D.24838 ] [115])
        (reg:DI 0 ax [541])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 186 185 187 3 (set (reg/f:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 187 186 188 3 (parallel [
            (set (reg/f:DI 0 ax [orig:116 D.24839 ] [116])
                (plus:DI (reg/f:DI 0 ax [543])
                    (reg:DI 1 dx [orig:115 D.24838 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:115 D.24838 ] [115]))
        (nil)))
(insn 188 187 189 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:116 D.24839 ] [116])
                (const_int 40 [0x28])) [0 _75->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:85 90 {*movsi_internal}
     (nil))
(insn 189 188 190 3 (set (reg:SI 0 ax [544])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:86 90 {*movsi_internal}
     (nil))
(insn 190 189 191 3 (set (reg:DI 1 dx [orig:117 D.24838 ] [117])
        (sign_extend:DI (reg:SI 0 ax [544]))) ge2fitman_com_line.cpp:86 142 {*extendsidi2_rex64}
     (nil))
(insn 191 190 192 3 (set (reg:DI 0 ax [545])
        (reg:DI 1 dx [orig:117 D.24838 ] [117])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 192 191 193 3 (parallel [
            (set (reg:DI 0 ax [545])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 497 {*ashldi3_1}
     (nil))
(insn 193 192 194 3 (parallel [
            (set (reg:DI 0 ax [545])
                (plus:DI (reg:DI 0 ax [545])
                    (reg:DI 1 dx [orig:117 D.24838 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:117 D.24838 ] [117])
            (const_int 9 [0x9]))
        (nil)))
(insn 194 193 195 3 (parallel [
            (set (reg:DI 0 ax [545])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 497 {*ashldi3_1}
     (nil))
(insn 195 194 196 3 (parallel [
            (set (reg:DI 0 ax [545])
                (plus:DI (reg:DI 0 ax [545])
                    (reg:DI 1 dx [orig:117 D.24838 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:117 D.24838 ] [117])
            (const_int 19 [0x13]))
        (nil)))
(insn 196 195 197 3 (parallel [
            (set (reg:DI 0 ax [546])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 497 {*ashldi3_1}
     (nil))
(insn 197 196 198 3 (set (reg:DI 0 ax [545])
        (reg:DI 0 ax [546])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 198 197 199 3 (set (reg:DI 1 dx [orig:118 D.24838 ] [118])
        (reg:DI 0 ax [545])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 199 198 200 3 (set (reg/f:DI 0 ax [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 200 199 201 3 (parallel [
            (set (reg/f:DI 0 ax [orig:119 D.24839 ] [119])
                (plus:DI (reg/f:DI 0 ax [547])
                    (reg:DI 1 dx [orig:118 D.24838 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:118 D.24838 ] [118]))
        (nil)))
(insn 201 200 202 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:119 D.24839 ] [119])
                (const_int 44 [0x2c])) [0 _78->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:86 90 {*movsi_internal}
     (nil))
(insn 202 201 203 3 (set (reg:SI 0 ax [548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:87 90 {*movsi_internal}
     (nil))
(insn 203 202 204 3 (set (reg:DI 1 dx [orig:120 D.24838 ] [120])
        (sign_extend:DI (reg:SI 0 ax [548]))) ge2fitman_com_line.cpp:87 142 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 3 (set (reg:DI 0 ax [549])
        (reg:DI 1 dx [orig:120 D.24838 ] [120])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 205 204 206 3 (parallel [
            (set (reg:DI 0 ax [549])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 497 {*ashldi3_1}
     (nil))
(insn 206 205 207 3 (parallel [
            (set (reg:DI 0 ax [549])
                (plus:DI (reg:DI 0 ax [549])
                    (reg:DI 1 dx [orig:120 D.24838 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:120 D.24838 ] [120])
            (const_int 9 [0x9]))
        (nil)))
(insn 207 206 208 3 (parallel [
            (set (reg:DI 0 ax [549])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 497 {*ashldi3_1}
     (nil))
(insn 208 207 209 3 (parallel [
            (set (reg:DI 0 ax [549])
                (plus:DI (reg:DI 0 ax [549])
                    (reg:DI 1 dx [orig:120 D.24838 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:120 D.24838 ] [120])
            (const_int 19 [0x13]))
        (nil)))
(insn 209 208 210 3 (parallel [
            (set (reg:DI 0 ax [550])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 497 {*ashldi3_1}
     (nil))
(insn 210 209 211 3 (set (reg:DI 0 ax [549])
        (reg:DI 0 ax [550])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 211 210 212 3 (set (reg:DI 1 dx [orig:121 D.24838 ] [121])
        (reg:DI 0 ax [549])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 212 211 213 3 (set (reg/f:DI 0 ax [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 213 212 214 3 (parallel [
            (set (reg/f:DI 1 dx [orig:122 D.24839 ] [122])
                (plus:DI (reg:DI 1 dx [orig:121 D.24838 ] [121])
                    (reg/f:DI 0 ax [551])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:121 D.24838 ] [121]))
        (nil)))
(insn 214 213 215 3 (set (reg:SF 0 ax [552])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:87 129 {*movsf_internal}
     (nil))
(insn 215 214 216 3 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:122 D.24839 ] [122])
                (const_int 48 [0x30])) [0 _81->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [552])) ge2fitman_com_line.cpp:87 129 {*movsf_internal}
     (nil))
(insn 216 215 217 3 (set (reg:SI 0 ax [553])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:88 90 {*movsi_internal}
     (nil))
(insn 217 216 218 3 (set (reg:DI 1 dx [orig:123 D.24838 ] [123])
        (sign_extend:DI (reg:SI 0 ax [553]))) ge2fitman_com_line.cpp:88 142 {*extendsidi2_rex64}
     (nil))
(insn 218 217 219 3 (set (reg:DI 0 ax [554])
        (reg:DI 1 dx [orig:123 D.24838 ] [123])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 219 218 220 3 (parallel [
            (set (reg:DI 0 ax [554])
                (ashift:DI (reg:DI 0 ax [554])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 497 {*ashldi3_1}
     (nil))
(insn 220 219 221 3 (parallel [
            (set (reg:DI 0 ax [554])
                (plus:DI (reg:DI 0 ax [554])
                    (reg:DI 1 dx [orig:123 D.24838 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:123 D.24838 ] [123])
            (const_int 9 [0x9]))
        (nil)))
(insn 221 220 222 3 (parallel [
            (set (reg:DI 0 ax [554])
                (ashift:DI (reg:DI 0 ax [554])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 497 {*ashldi3_1}
     (nil))
(insn 222 221 223 3 (parallel [
            (set (reg:DI 0 ax [554])
                (plus:DI (reg:DI 0 ax [554])
                    (reg:DI 1 dx [orig:123 D.24838 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:123 D.24838 ] [123])
            (const_int 19 [0x13]))
        (nil)))
(insn 223 222 224 3 (parallel [
            (set (reg:DI 0 ax [555])
                (ashift:DI (reg:DI 0 ax [554])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 497 {*ashldi3_1}
     (nil))
(insn 224 223 225 3 (set (reg:DI 0 ax [554])
        (reg:DI 0 ax [555])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 225 224 226 3 (set (reg:DI 1 dx [orig:124 D.24838 ] [124])
        (reg:DI 0 ax [554])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 226 225 227 3 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 227 226 228 3 (parallel [
            (set (reg/f:DI 0 ax [orig:125 D.24839 ] [125])
                (plus:DI (reg/f:DI 0 ax [556])
                    (reg:DI 1 dx [orig:124 D.24838 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:124 D.24838 ] [124]))
        (nil)))
(insn 228 227 229 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:125 D.24839 ] [125])
                (const_int 52 [0x34])) [0 _84->pre_quecc_if+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:88 90 {*movsi_internal}
     (nil))
(insn 229 228 230 3 (set (reg:SI 0 ax [557])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:89 90 {*movsi_internal}
     (nil))
(insn 230 229 231 3 (set (reg:DI 1 dx [orig:126 D.24838 ] [126])
        (sign_extend:DI (reg:SI 0 ax [557]))) ge2fitman_com_line.cpp:89 142 {*extendsidi2_rex64}
     (nil))
(insn 231 230 232 3 (set (reg:DI 0 ax [558])
        (reg:DI 1 dx [orig:126 D.24838 ] [126])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 232 231 233 3 (parallel [
            (set (reg:DI 0 ax [558])
                (ashift:DI (reg:DI 0 ax [558])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 497 {*ashldi3_1}
     (nil))
(insn 233 232 234 3 (parallel [
            (set (reg:DI 0 ax [558])
                (plus:DI (reg:DI 0 ax [558])
                    (reg:DI 1 dx [orig:126 D.24838 ] [126])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:126 D.24838 ] [126])
            (const_int 9 [0x9]))
        (nil)))
(insn 234 233 235 3 (parallel [
            (set (reg:DI 0 ax [558])
                (ashift:DI (reg:DI 0 ax [558])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 497 {*ashldi3_1}
     (nil))
(insn 235 234 236 3 (parallel [
            (set (reg:DI 0 ax [558])
                (plus:DI (reg:DI 0 ax [558])
                    (reg:DI 1 dx [orig:126 D.24838 ] [126])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:126 D.24838 ] [126])
            (const_int 19 [0x13]))
        (nil)))
(insn 236 235 237 3 (parallel [
            (set (reg:DI 0 ax [559])
                (ashift:DI (reg:DI 0 ax [558])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 497 {*ashldi3_1}
     (nil))
(insn 237 236 238 3 (set (reg:DI 0 ax [558])
        (reg:DI 0 ax [559])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 238 237 239 3 (set (reg:DI 1 dx [orig:127 D.24838 ] [127])
        (reg:DI 0 ax [558])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 239 238 240 3 (set (reg/f:DI 0 ax [560])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 240 239 241 3 (parallel [
            (set (reg/f:DI 0 ax [orig:128 D.24839 ] [128])
                (plus:DI (reg/f:DI 0 ax [560])
                    (reg:DI 1 dx [orig:127 D.24838 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:127 D.24838 ] [127]))
        (nil)))
(insn 241 240 242 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:128 D.24839 ] [128])
                (const_int 56 [0x38])) [0 _87->input_file_type+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:89 90 {*movsi_internal}
     (nil))
(insn 242 241 243 3 (set (reg:SI 0 ax [561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:90 90 {*movsi_internal}
     (nil))
(insn 243 242 244 3 (set (reg:DI 1 dx [orig:129 D.24838 ] [129])
        (sign_extend:DI (reg:SI 0 ax [561]))) ge2fitman_com_line.cpp:90 142 {*extendsidi2_rex64}
     (nil))
(insn 244 243 245 3 (set (reg:DI 0 ax [562])
        (reg:DI 1 dx [orig:129 D.24838 ] [129])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 245 244 246 3 (parallel [
            (set (reg:DI 0 ax [562])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 497 {*ashldi3_1}
     (nil))
(insn 246 245 247 3 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [562])
                    (reg:DI 1 dx [orig:129 D.24838 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:129 D.24838 ] [129])
            (const_int 9 [0x9]))
        (nil)))
(insn 247 246 248 3 (parallel [
            (set (reg:DI 0 ax [562])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 497 {*ashldi3_1}
     (nil))
(insn 248 247 249 3 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [562])
                    (reg:DI 1 dx [orig:129 D.24838 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:129 D.24838 ] [129])
            (const_int 19 [0x13]))
        (nil)))
(insn 249 248 250 3 (parallel [
            (set (reg:DI 0 ax [563])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 497 {*ashldi3_1}
     (nil))
(insn 250 249 251 3 (set (reg:DI 0 ax [562])
        (reg:DI 0 ax [563])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 251 250 252 3 (set (reg:DI 1 dx [orig:130 D.24838 ] [130])
        (reg:DI 0 ax [562])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 252 251 253 3 (set (reg/f:DI 0 ax [564])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 253 252 254 3 (parallel [
            (set (reg/f:DI 0 ax [orig:131 D.24839 ] [131])
                (plus:DI (reg/f:DI 0 ax [564])
                    (reg:DI 1 dx [orig:130 D.24838 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:130 D.24838 ] [130]))
        (nil)))
(insn 254 253 255 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:131 D.24839 ] [131])
                (const_int 60 [0x3c])) [0 _90->ref_file_argument+0 S4 A32])
        (const_int 5 [0x5])) ge2fitman_com_line.cpp:90 90 {*movsi_internal}
     (nil))
(insn 255 254 256 3 (set (reg:SI 0 ax [565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:91 90 {*movsi_internal}
     (nil))
(insn 256 255 257 3 (set (reg:DI 1 dx [orig:132 D.24838 ] [132])
        (sign_extend:DI (reg:SI 0 ax [565]))) ge2fitman_com_line.cpp:91 142 {*extendsidi2_rex64}
     (nil))
(insn 257 256 258 3 (set (reg:DI 0 ax [566])
        (reg:DI 1 dx [orig:132 D.24838 ] [132])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 258 257 259 3 (parallel [
            (set (reg:DI 0 ax [566])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 497 {*ashldi3_1}
     (nil))
(insn 259 258 260 3 (parallel [
            (set (reg:DI 0 ax [566])
                (plus:DI (reg:DI 0 ax [566])
                    (reg:DI 1 dx [orig:132 D.24838 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:132 D.24838 ] [132])
            (const_int 9 [0x9]))
        (nil)))
(insn 260 259 261 3 (parallel [
            (set (reg:DI 0 ax [566])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 497 {*ashldi3_1}
     (nil))
(insn 261 260 262 3 (parallel [
            (set (reg:DI 0 ax [566])
                (plus:DI (reg:DI 0 ax [566])
                    (reg:DI 1 dx [orig:132 D.24838 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:132 D.24838 ] [132])
            (const_int 19 [0x13]))
        (nil)))
(insn 262 261 263 3 (parallel [
            (set (reg:DI 0 ax [567])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 497 {*ashldi3_1}
     (nil))
(insn 263 262 264 3 (set (reg:DI 0 ax [566])
        (reg:DI 0 ax [567])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 264 263 265 3 (set (reg:DI 1 dx [orig:133 D.24838 ] [133])
        (reg:DI 0 ax [566])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 265 264 266 3 (set (reg/f:DI 0 ax [568])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 266 265 267 3 (parallel [
            (set (reg/f:DI 0 ax [orig:134 D.24839 ] [134])
                (plus:DI (reg/f:DI 0 ax [568])
                    (reg:DI 1 dx [orig:133 D.24838 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:133 D.24838 ] [133]))
        (nil)))
(insn 267 266 268 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:134 D.24839 ] [134])
                (const_int 64 [0x40])) [0 _93->csi_reorder+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:91 90 {*movsi_internal}
     (nil))
(insn 268 267 269 3 (set (reg:SI 0 ax [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:92 90 {*movsi_internal}
     (nil))
(insn 269 268 270 3 (set (reg:DI 1 dx [orig:135 D.24838 ] [135])
        (sign_extend:DI (reg:SI 0 ax [569]))) ge2fitman_com_line.cpp:92 142 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 3 (set (reg:DI 0 ax [570])
        (reg:DI 1 dx [orig:135 D.24838 ] [135])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 271 270 272 3 (parallel [
            (set (reg:DI 0 ax [570])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 497 {*ashldi3_1}
     (nil))
(insn 272 271 273 3 (parallel [
            (set (reg:DI 0 ax [570])
                (plus:DI (reg:DI 0 ax [570])
                    (reg:DI 1 dx [orig:135 D.24838 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:135 D.24838 ] [135])
            (const_int 9 [0x9]))
        (nil)))
(insn 273 272 274 3 (parallel [
            (set (reg:DI 0 ax [570])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 497 {*ashldi3_1}
     (nil))
(insn 274 273 275 3 (parallel [
            (set (reg:DI 0 ax [570])
                (plus:DI (reg:DI 0 ax [570])
                    (reg:DI 1 dx [orig:135 D.24838 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:135 D.24838 ] [135])
            (const_int 19 [0x13]))
        (nil)))
(insn 275 274 276 3 (parallel [
            (set (reg:DI 0 ax [571])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 497 {*ashldi3_1}
     (nil))
(insn 276 275 277 3 (set (reg:DI 0 ax [570])
        (reg:DI 0 ax [571])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 277 276 278 3 (set (reg:DI 1 dx [orig:136 D.24838 ] [136])
        (reg:DI 0 ax [570])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 278 277 279 3 (set (reg/f:DI 0 ax [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 279 278 280 3 (parallel [
            (set (reg/f:DI 0 ax [orig:137 D.24839 ] [137])
                (plus:DI (reg/f:DI 0 ax [572])
                    (reg:DI 1 dx [orig:136 D.24838 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:136 D.24838 ] [136]))
        (nil)))
(insn 280 279 281 3 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:137 D.24839 ] [137])
                (const_int 68 [0x44])) [0 _96->tilt+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:92 90 {*movsi_internal}
     (nil))
(insn 281 280 282 3 (set (reg:SI 0 ax [573])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:93 90 {*movsi_internal}
     (nil))
(insn 282 281 283 3 (set (reg:DI 1 dx [orig:138 D.24838 ] [138])
        (sign_extend:DI (reg:SI 0 ax [573]))) ge2fitman_com_line.cpp:93 142 {*extendsidi2_rex64}
     (nil))
(insn 283 282 284 3 (set (reg:DI 0 ax [574])
        (reg:DI 1 dx [orig:138 D.24838 ] [138])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 284 283 285 3 (parallel [
            (set (reg:DI 0 ax [574])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 497 {*ashldi3_1}
     (nil))
(insn 285 284 286 3 (parallel [
            (set (reg:DI 0 ax [574])
                (plus:DI (reg:DI 0 ax [574])
                    (reg:DI 1 dx [orig:138 D.24838 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:138 D.24838 ] [138])
            (const_int 9 [0x9]))
        (nil)))
(insn 286 285 287 3 (parallel [
            (set (reg:DI 0 ax [574])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 497 {*ashldi3_1}
     (nil))
(insn 287 286 288 3 (parallel [
            (set (reg:DI 0 ax [574])
                (plus:DI (reg:DI 0 ax [574])
                    (reg:DI 1 dx [orig:138 D.24838 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:138 D.24838 ] [138])
            (const_int 19 [0x13]))
        (nil)))
(insn 288 287 289 3 (parallel [
            (set (reg:DI 0 ax [575])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 497 {*ashldi3_1}
     (nil))
(insn 289 288 290 3 (set (reg:DI 0 ax [574])
        (reg:DI 0 ax [575])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 290 289 291 3 (set (reg:DI 1 dx [orig:139 D.24838 ] [139])
        (reg:DI 0 ax [574])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 291 290 292 3 (set (reg/f:DI 0 ax [576])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 292 291 293 3 (parallel [
            (set (reg/f:DI 0 ax [orig:140 D.24839 ] [140])
                (plus:DI (reg/f:DI 0 ax [576])
                    (reg:DI 1 dx [orig:139 D.24838 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:139 D.24838 ] [139]))
        (nil)))
(insn 293 292 294 3 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [orig:140 D.24839 ] [140])
                (const_int 72 [0x48])) [0 _99->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:93 93 {*movqi_internal}
     (nil))
(insn 294 293 295 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:74 220 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 295 294 296 4 2 "" [1 uses])
(note 296 295 298 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 298 296 299 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -808 [0xfffffffffffffcd8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:74 7 {*cmpsi_1}
     (nil))
(jump_insn 299 298 300 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) ge2fitman_com_line.cpp:74 596 {*jcc_1}
     (nil)
 -> 297)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 577
(note 300 299 301 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:97 90 {*movsi_internal}
     (nil))
(insn 302 301 303 5 (set (reg/f:DI 0 ax [577])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:98 89 {*movdi_internal}
     (nil))
(insn 303 302 1813 5 (set (mem:SI (reg/f:DI 0 ax [577]) [0 *fid_102(D)+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:98 90 {*movsi_internal}
     (nil))
(jump_insn 1813 303 1814 5 (set (pc)
        (label_ref 1443)) ge2fitman_com_line.cpp:100 636 {jump}
     (nil)
 -> 1443)
;;  succ:       109 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1814 1813 1445)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 142 143 144 145 578 579
(code_label 1445 1814 306 6 59 "" [1 uses])
(note 306 1445 307 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 6 (set (reg:SI 0 ax [578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:101 90 {*movsi_internal}
     (nil))
(insn 308 307 309 6 (set (reg:DI 0 ax [orig:141 D.24838 ] [141])
        (sign_extend:DI (reg:SI 0 ax [578]))) ge2fitman_com_line.cpp:101 142 {*extendsidi2_rex64}
     (nil))
(insn 309 308 310 6 (parallel [
            (set (reg:DI 1 dx [orig:142 D.24838 ] [142])
                (ashift:DI (reg:DI 0 ax [orig:141 D.24838 ] [141])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:101 497 {*ashldi3_1}
     (nil))
(insn 310 309 311 6 (set (reg/f:DI 0 ax [579])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:101 89 {*movdi_internal}
     (nil))
(insn 311 310 312 6 (parallel [
            (set (reg/f:DI 0 ax [orig:143 D.24840 ] [143])
                (plus:DI (reg/f:DI 0 ax [579])
                    (reg:DI 1 dx [orig:142 D.24838 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:101 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:142 D.24838 ] [142]))
        (nil)))
(insn 312 311 313 6 (set (reg/f:DI 0 ax [orig:144 D.24841 ] [144])
        (mem/f:DI (reg/f:DI 0 ax [orig:143 D.24840 ] [143]) [0 *_107+0 S8 A64])) ge2fitman_com_line.cpp:101 89 {*movdi_internal}
     (nil))
(insn 313 312 314 6 (set (reg:QI 0 ax [orig:145 D.24842 ] [145])
        (mem:QI (reg/f:DI 0 ax [orig:144 D.24841 ] [144]) [0 *_108+0 S1 A8])) ge2fitman_com_line.cpp:101 93 {*movqi_internal}
     (nil))
(insn 314 313 315 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:145 D.24842 ] [145])
            (const_int 45 [0x2d]))) ge2fitman_com_line.cpp:101 5 {*cmpqi_1}
     (nil))
(jump_insn 315 314 316 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 342)
            (pc))) ge2fitman_com_line.cpp:101 596 {*jcc_1}
     (nil)
 -> 342)
;;  succ:       7 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 316 315 317 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:104 7 {*cmpsi_1}
     (nil))
(jump_insn 318 317 319 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) ge2fitman_com_line.cpp:104 596 {*jcc_1}
     (nil)
 -> 323)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 319 318 320 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 1815 8 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -5 [0xfffffffffffffffb])) ge2fitman_com_line.cpp:106 90 {*movsi_internal}
     (nil))
(jump_insn 1815 320 1816 8 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:106 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1816 1815 323)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 443 444 445 446 447 580 581 582 583 584 585
(code_label 323 1816 324 9 6 "" [1 uses])
(note 324 323 325 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 9 (set (reg:SI 0 ax [580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:109 90 {*movsi_internal}
     (nil))
(insn 326 325 327 9 (set (reg:DI 0 ax [orig:443 D.24838 ] [443])
        (sign_extend:DI (reg:SI 0 ax [580]))) ge2fitman_com_line.cpp:109 142 {*extendsidi2_rex64}
     (nil))
(insn 327 326 328 9 (parallel [
            (set (reg:DI 1 dx [orig:444 D.24838 ] [444])
                (ashift:DI (reg:DI 0 ax [orig:443 D.24838 ] [443])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 497 {*ashldi3_1}
     (nil))
(insn 328 327 329 9 (set (reg/f:DI 0 ax [581])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 329 328 330 9 (parallel [
            (set (reg/f:DI 0 ax [orig:445 D.24840 ] [445])
                (plus:DI (reg/f:DI 0 ax [581])
                    (reg:DI 1 dx [orig:444 D.24838 ] [444])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:444 D.24838 ] [444]))
        (nil)))
(insn 330 329 331 9 (set (reg/f:DI 0 ax [orig:446 D.24841 ] [446])
        (mem/f:DI (reg/f:DI 0 ax [orig:445 D.24840 ] [445]) [0 *_466+0 S8 A64])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 331 330 332 9 (parallel [
            (set (reg:DI 1 dx [582])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 221 {*adddi_1}
     (nil))
(insn 332 331 333 9 (set (reg:SI 2 cx [584])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])) ge2fitman_com_line.cpp:109 90 {*movsi_internal}
     (nil))
(insn 333 332 334 9 (set (reg:DI 2 cx [583])
        (sign_extend:DI (reg:SI 2 cx [584]))) ge2fitman_com_line.cpp:109 142 {*extendsidi2_rex64}
     (nil))
(insn 334 333 335 9 (parallel [
            (set (reg:DI 2 cx [585])
                (ashift:DI (reg:DI 2 cx [583])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 497 {*ashldi3_1}
     (nil))
(insn 335 334 336 9 (parallel [
            (set (reg/f:DI 1 dx [orig:447 D.24845 ] [447])
                (plus:DI (reg:DI 1 dx [582])
                    (reg:DI 2 cx [585])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 221 {*adddi_1}
     (nil))
(insn 336 335 337 9 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:446 D.24841 ] [446])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 337 336 338 9 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:447 D.24845 ] [447])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(call_insn 338 337 339 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:109 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 339 338 1817 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:110 220 {*addsi_1}
     (nil))
(jump_insn 1817 339 1818 9 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1818 1817 342)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 146 147 148 149 150 586 587
(code_label 342 1818 343 10 5 "" [1 uses])
(note 343 342 344 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 10 (set (reg:SI 0 ax [586])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:115 90 {*movsi_internal}
     (nil))
(insn 345 344 346 10 (set (reg:DI 0 ax [orig:146 D.24838 ] [146])
        (sign_extend:DI (reg:SI 0 ax [586]))) ge2fitman_com_line.cpp:115 142 {*extendsidi2_rex64}
     (nil))
(insn 346 345 347 10 (parallel [
            (set (reg:DI 1 dx [orig:147 D.24838 ] [147])
                (ashift:DI (reg:DI 0 ax [orig:146 D.24838 ] [146])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:115 497 {*ashldi3_1}
     (nil))
(insn 347 346 348 10 (set (reg/f:DI 0 ax [587])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 348 347 349 10 (parallel [
            (set (reg/f:DI 0 ax [orig:148 D.24840 ] [148])
                (plus:DI (reg/f:DI 0 ax [587])
                    (reg:DI 1 dx [orig:147 D.24838 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:115 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:147 D.24838 ] [147]))
        (nil)))
(insn 349 348 350 10 (set (reg/f:DI 0 ax [orig:149 D.24841 ] [149])
        (mem/f:DI (reg/f:DI 0 ax [orig:148 D.24840 ] [148]) [0 *_112+0 S8 A64])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 350 349 351 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b86fe29fbe0 *.LC2>)) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 351 350 352 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:149 D.24841 ] [149])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn/i 352 351 353 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 353 352 354 10 (set (reg:SI 0 ax [orig:150 D.24837 ] [150])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:115 90 {*movsi_internal}
     (nil))
(insn 354 353 355 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:150 D.24837 ] [150])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 355 354 356 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) ge2fitman_com_line.cpp:115 596 {*jcc_1}
     (nil)
 -> 382)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 152 153 154 155 588 589
(note 356 355 357 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 11 (set (reg:SI 0 ax [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:116 90 {*movsi_internal}
     (nil))
(insn 358 357 359 11 (set (reg:DI 0 ax [orig:151 D.24838 ] [151])
        (sign_extend:DI (reg:SI 0 ax [588]))) ge2fitman_com_line.cpp:116 142 {*extendsidi2_rex64}
     (nil))
(insn 359 358 360 11 (parallel [
            (set (reg:DI 1 dx [orig:152 D.24838 ] [152])
                (ashift:DI (reg:DI 0 ax [orig:151 D.24838 ] [151])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:116 497 {*ashldi3_1}
     (nil))
(insn 360 359 361 11 (set (reg/f:DI 0 ax [589])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 361 360 362 11 (parallel [
            (set (reg/f:DI 0 ax [orig:153 D.24840 ] [153])
                (plus:DI (reg/f:DI 0 ax [589])
                    (reg:DI 1 dx [orig:152 D.24838 ] [152])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:116 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:152 D.24838 ] [152]))
        (nil)))
(insn 362 361 363 11 (set (reg/f:DI 0 ax [orig:154 D.24841 ] [154])
        (mem/f:DI (reg/f:DI 0 ax [orig:153 D.24840 ] [153]) [0 *_117+0 S8 A64])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 363 362 364 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b86fe29fc78 *.LC3>)) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 364 363 365 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:154 D.24841 ] [154])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(call_insn/i 365 364 366 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:116 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 366 365 367 11 (set (reg:SI 0 ax [orig:155 D.24837 ] [155])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:116 90 {*movsi_internal}
     (nil))
(insn 367 366 368 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:155 D.24837 ] [155])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 368 367 369 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) ge2fitman_com_line.cpp:115 596 {*jcc_1}
     (nil)
 -> 382)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 156 157 158 159 160 590 591
(note 369 368 370 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 12 (set (reg:SI 0 ax [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:117 90 {*movsi_internal}
     (nil))
(insn 371 370 372 12 (set (reg:DI 0 ax [orig:156 D.24838 ] [156])
        (sign_extend:DI (reg:SI 0 ax [590]))) ge2fitman_com_line.cpp:117 142 {*extendsidi2_rex64}
     (nil))
(insn 372 371 373 12 (parallel [
            (set (reg:DI 1 dx [orig:157 D.24838 ] [157])
                (ashift:DI (reg:DI 0 ax [orig:156 D.24838 ] [156])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:117 497 {*ashldi3_1}
     (nil))
(insn 373 372 374 12 (set (reg/f:DI 0 ax [591])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 374 373 375 12 (parallel [
            (set (reg/f:DI 0 ax [orig:158 D.24840 ] [158])
                (plus:DI (reg/f:DI 0 ax [591])
                    (reg:DI 1 dx [orig:157 D.24838 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:117 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:157 D.24838 ] [157]))
        (nil)))
(insn 375 374 376 12 (set (reg/f:DI 0 ax [orig:159 D.24841 ] [159])
        (mem/f:DI (reg/f:DI 0 ax [orig:158 D.24840 ] [158]) [0 *_122+0 S8 A64])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 376 375 377 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b86fe29fd10 *.LC4>)) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 377 376 378 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:159 D.24841 ] [159])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(call_insn/i 378 377 379 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:117 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 379 378 380 12 (set (reg:SI 0 ax [orig:160 D.24837 ] [160])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:117 90 {*movsi_internal}
     (nil))
(insn 380 379 381 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:160 D.24837 ] [160])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:116 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 381 380 382 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 731)
            (pc))) ge2fitman_com_line.cpp:116 596 {*jcc_1}
     (nil)
 -> 731)
;;  succ:       13 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 333 592
(code_label 382 381 383 13 9 "" [2 uses])
(note 383 382 384 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 13 (set (reg/f:DI 0 ax [592])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:119 89 {*movdi_internal}
     (nil))
(insn 385 384 386 13 (set (reg:QI 0 ax [orig:333 D.24843 ] [333])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [592])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:119 93 {*movqi_internal}
     (nil))
(insn 386 385 387 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:333 D.24843 ] [333])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:119 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 387 386 388 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 392)
            (pc))) ge2fitman_com_line.cpp:119 596 {*jcc_1}
     (nil)
 -> 392)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 388 387 389 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 1819 14 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -7 [0xfffffffffffffff9])) ge2fitman_com_line.cpp:121 90 {*movsi_internal}
     (nil))
(jump_insn 1819 389 1820 14 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:121 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1820 1819 392)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 334 335 336 337 338 593 594 595
(code_label 392 1820 393 15 11 "" [1 uses])
(note 393 392 394 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 15 (set (reg/f:DI 0 ax [593])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:124 89 {*movdi_internal}
     (nil))
(insn 395 394 396 15 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [593])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:124 93 {*movqi_internal}
     (nil))
(insn 396 395 397 15 (set (reg:SI 0 ax [594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:126 90 {*movsi_internal}
     (nil))
(insn 397 396 398 15 (set (reg:DI 0 ax [orig:334 D.24838 ] [334])
        (sign_extend:DI (reg:SI 0 ax [594]))) ge2fitman_com_line.cpp:126 142 {*extendsidi2_rex64}
     (nil))
(insn 398 397 399 15 (parallel [
            (set (reg:DI 1 dx [orig:335 D.24838 ] [335])
                (ashift:DI (reg:DI 0 ax [orig:334 D.24838 ] [334])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:126 497 {*ashldi3_1}
     (nil))
(insn 399 398 400 15 (set (reg/f:DI 0 ax [595])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 400 399 401 15 (parallel [
            (set (reg/f:DI 0 ax [orig:336 D.24840 ] [336])
                (plus:DI (reg/f:DI 0 ax [595])
                    (reg:DI 1 dx [orig:335 D.24838 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:126 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:335 D.24838 ] [335]))
        (nil)))
(insn 401 400 402 15 (set (reg/f:DI 0 ax [orig:337 D.24841 ] [337])
        (mem/f:DI (reg/f:DI 0 ax [orig:336 D.24840 ] [336]) [0 *_346+0 S8 A64])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 402 401 403 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b86fe29fbe0 *.LC2>)) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 403 402 404 15 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:337 D.24841 ] [337])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(call_insn/i 404 403 405 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:126 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 405 404 406 15 (set (reg:SI 0 ax [orig:338 D.24837 ] [338])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:126 90 {*movsi_internal}
     (nil))
(insn 406 405 407 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:338 D.24837 ] [338])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:126 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 407 406 408 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) ge2fitman_com_line.cpp:126 596 {*jcc_1}
     (nil)
 -> 439)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 339 340 341 342 343 344 345 346 596 597 598 599 600 601 602 603 604
(note 408 407 409 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 16 (set (reg/f:DI 0 ax [596])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 410 409 411 16 (set (reg:SI 0 ax [orig:339 D.24837 ] [339])
        (mem:SI (reg/f:DI 0 ax [596]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:127 90 {*movsi_internal}
     (nil))
(insn 411 410 412 16 (set (reg:DI 1 dx [orig:340 D.24838 ] [340])
        (sign_extend:DI (reg:SI 0 ax [orig:339 D.24837 ] [339]))) ge2fitman_com_line.cpp:127 142 {*extendsidi2_rex64}
     (nil))
(insn 412 411 413 16 (set (reg:DI 0 ax [597])
        (reg:DI 1 dx [orig:340 D.24838 ] [340])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 413 412 414 16 (parallel [
            (set (reg:DI 0 ax [597])
                (ashift:DI (reg:DI 0 ax [597])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 497 {*ashldi3_1}
     (nil))
(insn 414 413 415 16 (parallel [
            (set (reg:DI 0 ax [597])
                (plus:DI (reg:DI 0 ax [597])
                    (reg:DI 1 dx [orig:340 D.24838 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:340 D.24838 ] [340])
            (const_int 9 [0x9]))
        (nil)))
(insn 415 414 416 16 (parallel [
            (set (reg:DI 0 ax [597])
                (ashift:DI (reg:DI 0 ax [597])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 497 {*ashldi3_1}
     (nil))
(insn 416 415 417 16 (parallel [
            (set (reg:DI 0 ax [597])
                (plus:DI (reg:DI 0 ax [597])
                    (reg:DI 1 dx [orig:340 D.24838 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:340 D.24838 ] [340])
            (const_int 19 [0x13]))
        (nil)))
(insn 417 416 418 16 (parallel [
            (set (reg:DI 0 ax [598])
                (ashift:DI (reg:DI 0 ax [597])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 497 {*ashldi3_1}
     (nil))
(insn 418 417 419 16 (set (reg:DI 0 ax [597])
        (reg:DI 0 ax [598])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 419 418 420 16 (set (reg:DI 1 dx [orig:341 D.24838 ] [341])
        (reg:DI 0 ax [597])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 420 419 421 16 (set (reg/f:DI 0 ax [599])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 421 420 422 16 (parallel [
            (set (reg/f:DI 0 ax [orig:342 D.24839 ] [342])
                (plus:DI (reg/f:DI 0 ax [599])
                    (reg:DI 1 dx [orig:341 D.24838 ] [341])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:341 D.24838 ] [341]))
        (nil)))
(insn 422 421 423 16 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:342 D.24839 ] [342])
                (const_int 12 [0xc])) [0 _352->pre_ecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:127 90 {*movsi_internal}
     (nil))
(insn 423 422 424 16 (set (reg/f:DI 0 ax [600])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:128 89 {*movdi_internal}
     (nil))
(insn 424 423 425 16 (set (mem:SI (reg/f:DI 0 ax [600]) [0 *fid_102(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:128 90 {*movsi_internal}
     (nil))
(insn 425 424 426 16 (set (reg/f:DI 0 ax [601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 426 425 427 16 (set (reg:SI 0 ax [orig:343 D.24837 ] [343])
        (mem:SI (reg/f:DI 0 ax [601]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:129 90 {*movsi_internal}
     (nil))
(insn 427 426 428 16 (set (reg:DI 1 dx [orig:344 D.24838 ] [344])
        (sign_extend:DI (reg:SI 0 ax [orig:343 D.24837 ] [343]))) ge2fitman_com_line.cpp:129 142 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 16 (set (reg:DI 0 ax [602])
        (reg:DI 1 dx [orig:344 D.24838 ] [344])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 429 428 430 16 (parallel [
            (set (reg:DI 0 ax [602])
                (ashift:DI (reg:DI 0 ax [602])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 497 {*ashldi3_1}
     (nil))
(insn 430 429 431 16 (parallel [
            (set (reg:DI 0 ax [602])
                (plus:DI (reg:DI 0 ax [602])
                    (reg:DI 1 dx [orig:344 D.24838 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:344 D.24838 ] [344])
            (const_int 9 [0x9]))
        (nil)))
(insn 431 430 432 16 (parallel [
            (set (reg:DI 0 ax [602])
                (ashift:DI (reg:DI 0 ax [602])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 497 {*ashldi3_1}
     (nil))
(insn 432 431 433 16 (parallel [
            (set (reg:DI 0 ax [602])
                (plus:DI (reg:DI 0 ax [602])
                    (reg:DI 1 dx [orig:344 D.24838 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:344 D.24838 ] [344])
            (const_int 19 [0x13]))
        (nil)))
(insn 433 432 434 16 (parallel [
            (set (reg:DI 0 ax [603])
                (ashift:DI (reg:DI 0 ax [602])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 497 {*ashldi3_1}
     (nil))
(insn 434 433 435 16 (set (reg:DI 0 ax [602])
        (reg:DI 0 ax [603])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 435 434 436 16 (set (reg:DI 1 dx [orig:345 D.24838 ] [345])
        (reg:DI 0 ax [602])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 436 435 437 16 (set (reg/f:DI 0 ax [604])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 437 436 438 16 (parallel [
            (set (reg/f:DI 0 ax [orig:346 D.24839 ] [346])
                (plus:DI (reg/f:DI 0 ax [604])
                    (reg:DI 1 dx [orig:345 D.24838 ] [345])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:345 D.24838 ] [345]))
        (nil)))
(insn 438 437 439 16 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:346 D.24839 ] [346])
                (const_int 12 [0xc])) [0 _356->pre_ecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:129 90 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 347 348 349 350 351 605 606
(code_label 439 438 440 17 12 "" [1 uses])
(note 440 439 441 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 17 (set (reg:SI 0 ax [605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:132 90 {*movsi_internal}
     (nil))
(insn 442 441 443 17 (set (reg:DI 0 ax [orig:347 D.24838 ] [347])
        (sign_extend:DI (reg:SI 0 ax [605]))) ge2fitman_com_line.cpp:132 142 {*extendsidi2_rex64}
     (nil))
(insn 443 442 444 17 (parallel [
            (set (reg:DI 1 dx [orig:348 D.24838 ] [348])
                (ashift:DI (reg:DI 0 ax [orig:347 D.24838 ] [347])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:132 497 {*ashldi3_1}
     (nil))
(insn 444 443 445 17 (set (reg/f:DI 0 ax [606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 445 444 446 17 (parallel [
            (set (reg/f:DI 0 ax [orig:349 D.24840 ] [349])
                (plus:DI (reg/f:DI 0 ax [606])
                    (reg:DI 1 dx [orig:348 D.24838 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:132 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:348 D.24838 ] [348]))
        (nil)))
(insn 446 445 447 17 (set (reg/f:DI 0 ax [orig:350 D.24841 ] [350])
        (mem/f:DI (reg/f:DI 0 ax [orig:349 D.24840 ] [349]) [0 *_359+0 S8 A64])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 447 446 448 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b86fe29fc78 *.LC3>)) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 448 447 449 17 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:350 D.24841 ] [350])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn/i 449 448 450 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:132 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 450 449 451 17 (set (reg:SI 0 ax [orig:351 D.24837 ] [351])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:132 90 {*movsi_internal}
     (nil))
(insn 451 450 452 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:351 D.24837 ] [351])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:132 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 452 451 453 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) ge2fitman_com_line.cpp:132 596 {*jcc_1}
     (nil)
 -> 552)
;;  succ:       18 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 352 353 354 355 356 357 358 359 360 607 608 609 610 611 612
(note 453 452 454 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 18 (set (reg/f:DI 0 ax [607])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 455 454 456 18 (set (reg:SI 0 ax [orig:352 D.24837 ] [352])
        (mem:SI (reg/f:DI 0 ax [607]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:133 90 {*movsi_internal}
     (nil))
(insn 456 455 457 18 (set (reg:DI 1 dx [orig:353 D.24838 ] [353])
        (sign_extend:DI (reg:SI 0 ax [orig:352 D.24837 ] [352]))) ge2fitman_com_line.cpp:133 142 {*extendsidi2_rex64}
     (nil))
(insn 457 456 458 18 (set (reg:DI 0 ax [608])
        (reg:DI 1 dx [orig:353 D.24838 ] [353])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 458 457 459 18 (parallel [
            (set (reg:DI 0 ax [608])
                (ashift:DI (reg:DI 0 ax [608])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 497 {*ashldi3_1}
     (nil))
(insn 459 458 460 18 (parallel [
            (set (reg:DI 0 ax [608])
                (plus:DI (reg:DI 0 ax [608])
                    (reg:DI 1 dx [orig:353 D.24838 ] [353])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:353 D.24838 ] [353])
            (const_int 9 [0x9]))
        (nil)))
(insn 460 459 461 18 (parallel [
            (set (reg:DI 0 ax [608])
                (ashift:DI (reg:DI 0 ax [608])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 497 {*ashldi3_1}
     (nil))
(insn 461 460 462 18 (parallel [
            (set (reg:DI 0 ax [608])
                (plus:DI (reg:DI 0 ax [608])
                    (reg:DI 1 dx [orig:353 D.24838 ] [353])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:353 D.24838 ] [353])
            (const_int 19 [0x13]))
        (nil)))
(insn 462 461 463 18 (parallel [
            (set (reg:DI 0 ax [609])
                (ashift:DI (reg:DI 0 ax [608])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 497 {*ashldi3_1}
     (nil))
(insn 463 462 464 18 (set (reg:DI 0 ax [608])
        (reg:DI 0 ax [609])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 464 463 465 18 (set (reg:DI 1 dx [orig:354 D.24838 ] [354])
        (reg:DI 0 ax [608])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 465 464 466 18 (set (reg/f:DI 0 ax [610])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 466 465 467 18 (parallel [
            (set (reg/f:DI 0 ax [orig:355 D.24839 ] [355])
                (plus:DI (reg/f:DI 0 ax [610])
                    (reg:DI 1 dx [orig:354 D.24838 ] [354])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:354 D.24838 ] [354]))
        (nil)))
(insn 467 466 468 18 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:355 D.24839 ] [355])
                (const_int 36 [0x24])) [0 _365->pre_quality+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:133 90 {*movsi_internal}
     (nil))
(insn 468 467 469 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:134 220 {*addsi_1}
     (nil))
(insn 469 468 470 18 (set (reg:SI 0 ax [611])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:135 90 {*movsi_internal}
     (nil))
(insn 470 469 471 18 (set (reg:DI 0 ax [orig:356 D.24838 ] [356])
        (sign_extend:DI (reg:SI 0 ax [611]))) ge2fitman_com_line.cpp:135 142 {*extendsidi2_rex64}
     (nil))
(insn 471 470 472 18 (parallel [
            (set (reg:DI 1 dx [orig:357 D.24838 ] [357])
                (ashift:DI (reg:DI 0 ax [orig:356 D.24838 ] [356])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:135 497 {*ashldi3_1}
     (nil))
(insn 472 471 473 18 (set (reg/f:DI 0 ax [612])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(insn 473 472 474 18 (parallel [
            (set (reg/f:DI 0 ax [orig:358 D.24840 ] [358])
                (plus:DI (reg/f:DI 0 ax [612])
                    (reg:DI 1 dx [orig:357 D.24838 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:135 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:357 D.24838 ] [357]))
        (nil)))
(insn 474 473 475 18 (set (reg/f:DI 0 ax [orig:359 D.24841 ] [359])
        (mem/f:DI (reg/f:DI 0 ax [orig:358 D.24840 ] [358]) [0 *_369+0 S8 A64])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(insn 475 474 476 18 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:359 D.24841 ] [359])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(call_insn 476 475 477 18 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:135 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 477 476 478 18 (set (reg:QI 0 ax [orig:360 D.24843 ] [360])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:135 93 {*movqi_internal}
     (nil))
(insn 478 477 479 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:360 D.24843 ] [360])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:135 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 479 478 480 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 547)
            (pc))) ge2fitman_com_line.cpp:135 596 {*jcc_1}
     (nil)
 -> 547)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629
(note 480 479 481 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 19 (set (reg/f:DI 0 ax [613])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 482 481 483 19 (set (reg:SI 0 ax [orig:361 D.24837 ] [361])
        (mem:SI (reg/f:DI 0 ax [613]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:136 90 {*movsi_internal}
     (nil))
(insn 483 482 484 19 (set (reg:DI 1 dx [orig:362 D.24838 ] [362])
        (sign_extend:DI (reg:SI 0 ax [orig:361 D.24837 ] [361]))) ge2fitman_com_line.cpp:136 142 {*extendsidi2_rex64}
     (nil))
(insn 484 483 485 19 (set (reg:DI 0 ax [614])
        (reg:DI 1 dx [orig:362 D.24838 ] [362])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 485 484 486 19 (parallel [
            (set (reg:DI 0 ax [614])
                (ashift:DI (reg:DI 0 ax [614])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 497 {*ashldi3_1}
     (nil))
(insn 486 485 487 19 (parallel [
            (set (reg:DI 0 ax [614])
                (plus:DI (reg:DI 0 ax [614])
                    (reg:DI 1 dx [orig:362 D.24838 ] [362])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:362 D.24838 ] [362])
            (const_int 9 [0x9]))
        (nil)))
(insn 487 486 488 19 (parallel [
            (set (reg:DI 0 ax [614])
                (ashift:DI (reg:DI 0 ax [614])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 497 {*ashldi3_1}
     (nil))
(insn 488 487 489 19 (parallel [
            (set (reg:DI 0 ax [614])
                (plus:DI (reg:DI 0 ax [614])
                    (reg:DI 1 dx [orig:362 D.24838 ] [362])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:362 D.24838 ] [362])
            (const_int 19 [0x13]))
        (nil)))
(insn 489 488 490 19 (parallel [
            (set (reg:DI 0 ax [615])
                (ashift:DI (reg:DI 0 ax [614])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 497 {*ashldi3_1}
     (nil))
(insn 490 489 491 19 (set (reg:DI 0 ax [614])
        (reg:DI 0 ax [615])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 491 490 492 19 (set (reg:DI 1 dx [orig:363 D.24838 ] [363])
        (reg:DI 0 ax [614])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 492 491 493 19 (set (reg/f:DI 0 ax [616])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 493 492 494 19 (parallel [
            (set (reg/f:DI 3 bx [orig:364 D.24839 ] [364])
                (plus:DI (reg:DI 1 dx [orig:363 D.24838 ] [363])
                    (reg/f:DI 0 ax [616])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:363 D.24838 ] [363]))
        (nil)))
(insn 494 493 495 19 (set (reg:SI 0 ax [617])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:136 90 {*movsi_internal}
     (nil))
(insn 495 494 496 19 (set (reg:DI 0 ax [orig:365 D.24838 ] [365])
        (sign_extend:DI (reg:SI 0 ax [617]))) ge2fitman_com_line.cpp:136 142 {*extendsidi2_rex64}
     (nil))
(insn 496 495 497 19 (parallel [
            (set (reg:DI 1 dx [orig:366 D.24838 ] [366])
                (ashift:DI (reg:DI 0 ax [orig:365 D.24838 ] [365])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 497 {*ashldi3_1}
     (nil))
(insn 497 496 498 19 (set (reg/f:DI 0 ax [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 498 497 499 19 (parallel [
            (set (reg/f:DI 0 ax [orig:367 D.24840 ] [367])
                (plus:DI (reg/f:DI 0 ax [618])
                    (reg:DI 1 dx [orig:366 D.24838 ] [366])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:366 D.24838 ] [366]))
        (nil)))
(insn 499 498 500 19 (set (reg/f:DI 0 ax [orig:368 D.24841 ] [368])
        (mem/f:DI (reg/f:DI 0 ax [orig:367 D.24840 ] [367]) [0 *_379+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 500 499 501 19 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:368 D.24841 ] [368])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(call_insn/i 501 500 503 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x2b86fcf3ae00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:136 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 503 501 1944 19 (set (reg:SF 22 xmm1 [orig:370 D.24846 ] [370])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:369 D.24848 ] [369]))) ge2fitman_com_line.cpp:136 157 {*truncdfsf_fast_sse}
     (nil))
(insn 1944 503 504 19 (set (reg:SF 0 ax [orig:370 D.24846 ] [370])
        (reg:SF 22 xmm1 [orig:370 D.24846 ] [370])) ge2fitman_com_line.cpp:136 129 {*movsf_internal}
     (nil))
(insn 504 1944 505 19 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:364 D.24839 ] [364])
                (const_int 48 [0x30])) [0 _376->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [orig:370 D.24846 ] [370])) ge2fitman_com_line.cpp:136 129 {*movsf_internal}
     (nil))
(insn 505 504 506 19 (set (reg/f:DI 0 ax [619])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:137 89 {*movdi_internal}
     (nil))
(insn 506 505 507 19 (set (mem:SI (reg/f:DI 0 ax [619]) [0 *fid_102(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:137 90 {*movsi_internal}
     (nil))
(insn 507 506 508 19 (set (reg/f:DI 0 ax [620])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 508 507 509 19 (set (reg:SI 0 ax [orig:371 D.24837 ] [371])
        (mem:SI (reg/f:DI 0 ax [620]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:138 90 {*movsi_internal}
     (nil))
(insn 509 508 510 19 (set (reg:DI 1 dx [orig:372 D.24838 ] [372])
        (sign_extend:DI (reg:SI 0 ax [orig:371 D.24837 ] [371]))) ge2fitman_com_line.cpp:138 142 {*extendsidi2_rex64}
     (nil))
(insn 510 509 511 19 (set (reg:DI 0 ax [621])
        (reg:DI 1 dx [orig:372 D.24838 ] [372])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 511 510 512 19 (parallel [
            (set (reg:DI 0 ax [621])
                (ashift:DI (reg:DI 0 ax [621])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 497 {*ashldi3_1}
     (nil))
(insn 512 511 513 19 (parallel [
            (set (reg:DI 0 ax [621])
                (plus:DI (reg:DI 0 ax [621])
                    (reg:DI 1 dx [orig:372 D.24838 ] [372])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:372 D.24838 ] [372])
            (const_int 9 [0x9]))
        (nil)))
(insn 513 512 514 19 (parallel [
            (set (reg:DI 0 ax [621])
                (ashift:DI (reg:DI 0 ax [621])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 497 {*ashldi3_1}
     (nil))
(insn 514 513 515 19 (parallel [
            (set (reg:DI 0 ax [621])
                (plus:DI (reg:DI 0 ax [621])
                    (reg:DI 1 dx [orig:372 D.24838 ] [372])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:372 D.24838 ] [372])
            (const_int 19 [0x13]))
        (nil)))
(insn 515 514 516 19 (parallel [
            (set (reg:DI 0 ax [622])
                (ashift:DI (reg:DI 0 ax [621])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 497 {*ashldi3_1}
     (nil))
(insn 516 515 517 19 (set (reg:DI 0 ax [621])
        (reg:DI 0 ax [622])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 517 516 518 19 (set (reg:DI 1 dx [orig:373 D.24838 ] [373])
        (reg:DI 0 ax [621])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 518 517 519 19 (set (reg/f:DI 0 ax [623])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 519 518 520 19 (parallel [
            (set (reg/f:DI 3 bx [orig:374 D.24839 ] [374])
                (plus:DI (reg:DI 1 dx [orig:373 D.24838 ] [373])
                    (reg/f:DI 0 ax [623])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:373 D.24838 ] [373]))
        (nil)))
(insn 520 519 521 19 (set (reg:SI 0 ax [624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:138 90 {*movsi_internal}
     (nil))
(insn 521 520 522 19 (set (reg:DI 0 ax [orig:375 D.24838 ] [375])
        (sign_extend:DI (reg:SI 0 ax [624]))) ge2fitman_com_line.cpp:138 142 {*extendsidi2_rex64}
     (nil))
(insn 522 521 523 19 (parallel [
            (set (reg:DI 1 dx [orig:376 D.24838 ] [376])
                (ashift:DI (reg:DI 0 ax [orig:375 D.24838 ] [375])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 497 {*ashldi3_1}
     (nil))
(insn 523 522 524 19 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 524 523 525 19 (parallel [
            (set (reg/f:DI 0 ax [orig:377 D.24840 ] [377])
                (plus:DI (reg/f:DI 0 ax [625])
                    (reg:DI 1 dx [orig:376 D.24838 ] [376])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:376 D.24838 ] [376]))
        (nil)))
(insn 525 524 526 19 (set (reg/f:DI 0 ax [orig:378 D.24841 ] [378])
        (mem/f:DI (reg/f:DI 0 ax [orig:377 D.24840 ] [377]) [0 *_389+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 526 525 527 19 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:378 D.24841 ] [378])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(call_insn/i 527 526 529 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x2b86fcf3ae00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:138 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 529 527 1945 19 (set (reg:SF 23 xmm2 [orig:380 D.24846 ] [380])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:379 D.24848 ] [379]))) ge2fitman_com_line.cpp:138 157 {*truncdfsf_fast_sse}
     (nil))
(insn 1945 529 530 19 (set (reg:SF 0 ax [orig:380 D.24846 ] [380])
        (reg:SF 23 xmm2 [orig:380 D.24846 ] [380])) ge2fitman_com_line.cpp:138 129 {*movsf_internal}
     (nil))
(insn 530 1945 531 19 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:374 D.24839 ] [374])
                (const_int 48 [0x30])) [0 _386->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [orig:380 D.24846 ] [380])) ge2fitman_com_line.cpp:138 129 {*movsf_internal}
     (nil))
(insn 531 530 532 19 (set (reg/f:DI 0 ax [626])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 532 531 533 19 (set (reg:SI 0 ax [orig:381 D.24837 ] [381])
        (mem:SI (reg/f:DI 0 ax [626]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:139 90 {*movsi_internal}
     (nil))
(insn 533 532 534 19 (set (reg:DI 1 dx [orig:382 D.24838 ] [382])
        (sign_extend:DI (reg:SI 0 ax [orig:381 D.24837 ] [381]))) ge2fitman_com_line.cpp:139 142 {*extendsidi2_rex64}
     (nil))
(insn 534 533 535 19 (set (reg:DI 0 ax [627])
        (reg:DI 1 dx [orig:382 D.24838 ] [382])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 535 534 536 19 (parallel [
            (set (reg:DI 0 ax [627])
                (ashift:DI (reg:DI 0 ax [627])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 497 {*ashldi3_1}
     (nil))
(insn 536 535 537 19 (parallel [
            (set (reg:DI 0 ax [627])
                (plus:DI (reg:DI 0 ax [627])
                    (reg:DI 1 dx [orig:382 D.24838 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:382 D.24838 ] [382])
            (const_int 9 [0x9]))
        (nil)))
(insn 537 536 538 19 (parallel [
            (set (reg:DI 0 ax [627])
                (ashift:DI (reg:DI 0 ax [627])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 497 {*ashldi3_1}
     (nil))
(insn 538 537 539 19 (parallel [
            (set (reg:DI 0 ax [627])
                (plus:DI (reg:DI 0 ax [627])
                    (reg:DI 1 dx [orig:382 D.24838 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:382 D.24838 ] [382])
            (const_int 19 [0x13]))
        (nil)))
(insn 539 538 540 19 (parallel [
            (set (reg:DI 0 ax [628])
                (ashift:DI (reg:DI 0 ax [627])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 497 {*ashldi3_1}
     (nil))
(insn 540 539 541 19 (set (reg:DI 0 ax [627])
        (reg:DI 0 ax [628])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 541 540 542 19 (set (reg:DI 1 dx [orig:383 D.24838 ] [383])
        (reg:DI 0 ax [627])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 542 541 543 19 (set (reg/f:DI 0 ax [629])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 543 542 544 19 (parallel [
            (set (reg/f:DI 0 ax [orig:384 D.24839 ] [384])
                (plus:DI (reg/f:DI 0 ax [629])
                    (reg:DI 1 dx [orig:383 D.24838 ] [383])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:383 D.24838 ] [383]))
        (nil)))
(insn 544 543 1821 19 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:384 D.24839 ] [384])
                (const_int 36 [0x24])) [0 _396->pre_quality+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:139 90 {*movsi_internal}
     (nil))
(jump_insn 1821 544 1822 19 (set (pc)
        (label_ref 552)) 636 {jump}
     (nil)
 -> 552)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1822 1821 547)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 547 1822 548 20 14 "" [1 uses])
(note 548 547 549 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 1823 20 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:141 90 {*movsi_internal}
     (nil))
(jump_insn 1823 549 1824 20 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:141 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1824 1823 552)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 385 386 387 388 389 630 631
(code_label 552 1824 553 21 13 "" [2 uses])
(note 553 552 554 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 21 (set (reg:SI 0 ax [630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:146 90 {*movsi_internal}
     (nil))
(insn 555 554 556 21 (set (reg:DI 0 ax [orig:385 D.24838 ] [385])
        (sign_extend:DI (reg:SI 0 ax [630]))) ge2fitman_com_line.cpp:146 142 {*extendsidi2_rex64}
     (nil))
(insn 556 555 557 21 (parallel [
            (set (reg:DI 1 dx [orig:386 D.24838 ] [386])
                (ashift:DI (reg:DI 0 ax [orig:385 D.24838 ] [385])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:146 497 {*ashldi3_1}
     (nil))
(insn 557 556 558 21 (set (reg/f:DI 0 ax [631])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 558 557 559 21 (parallel [
            (set (reg/f:DI 0 ax [orig:387 D.24840 ] [387])
                (plus:DI (reg/f:DI 0 ax [631])
                    (reg:DI 1 dx [orig:386 D.24838 ] [386])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:146 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:386 D.24838 ] [386]))
        (nil)))
(insn 559 558 560 21 (set (reg/f:DI 0 ax [orig:388 D.24841 ] [388])
        (mem/f:DI (reg/f:DI 0 ax [orig:387 D.24840 ] [387]) [0 *_400+0 S8 A64])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 560 559 561 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b86fe29fd10 *.LC4>)) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 561 560 562 21 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:388 D.24841 ] [388])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn/i 562 561 563 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:146 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 563 562 564 21 (set (reg:SI 0 ax [orig:389 D.24837 ] [389])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:146 90 {*movsi_internal}
     (nil))
(insn 564 563 565 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:389 D.24837 ] [389])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:146 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 565 564 566 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 727)
            (pc))) ge2fitman_com_line.cpp:146 596 {*jcc_1}
     (nil)
 -> 727)
;;  succ:       22 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 390 391 392 393 394 395 396 397 398 632 633 634 635 636 637
(note 566 565 567 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 22 (set (reg/f:DI 0 ax [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 568 567 569 22 (set (reg:SI 0 ax [orig:390 D.24837 ] [390])
        (mem:SI (reg/f:DI 0 ax [632]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:147 90 {*movsi_internal}
     (nil))
(insn 569 568 570 22 (set (reg:DI 1 dx [orig:391 D.24838 ] [391])
        (sign_extend:DI (reg:SI 0 ax [orig:390 D.24837 ] [390]))) ge2fitman_com_line.cpp:147 142 {*extendsidi2_rex64}
     (nil))
(insn 570 569 571 22 (set (reg:DI 0 ax [633])
        (reg:DI 1 dx [orig:391 D.24838 ] [391])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 571 570 572 22 (parallel [
            (set (reg:DI 0 ax [633])
                (ashift:DI (reg:DI 0 ax [633])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 497 {*ashldi3_1}
     (nil))
(insn 572 571 573 22 (parallel [
            (set (reg:DI 0 ax [633])
                (plus:DI (reg:DI 0 ax [633])
                    (reg:DI 1 dx [orig:391 D.24838 ] [391])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:391 D.24838 ] [391])
            (const_int 9 [0x9]))
        (nil)))
(insn 573 572 574 22 (parallel [
            (set (reg:DI 0 ax [633])
                (ashift:DI (reg:DI 0 ax [633])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 497 {*ashldi3_1}
     (nil))
(insn 574 573 575 22 (parallel [
            (set (reg:DI 0 ax [633])
                (plus:DI (reg:DI 0 ax [633])
                    (reg:DI 1 dx [orig:391 D.24838 ] [391])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:391 D.24838 ] [391])
            (const_int 19 [0x13]))
        (nil)))
(insn 575 574 576 22 (parallel [
            (set (reg:DI 0 ax [634])
                (ashift:DI (reg:DI 0 ax [633])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 497 {*ashldi3_1}
     (nil))
(insn 576 575 577 22 (set (reg:DI 0 ax [633])
        (reg:DI 0 ax [634])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 577 576 578 22 (set (reg:DI 1 dx [orig:392 D.24838 ] [392])
        (reg:DI 0 ax [633])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 578 577 579 22 (set (reg/f:DI 0 ax [635])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 579 578 580 22 (parallel [
            (set (reg/f:DI 0 ax [orig:393 D.24839 ] [393])
                (plus:DI (reg/f:DI 0 ax [635])
                    (reg:DI 1 dx [orig:392 D.24838 ] [392])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:392 D.24838 ] [392]))
        (nil)))
(insn 580 579 581 22 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:393 D.24839 ] [393])
                (const_int 40 [0x28])) [0 _406->pre_quecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:147 90 {*movsi_internal}
     (nil))
(insn 581 580 582 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:148 220 {*addsi_1}
     (nil))
(insn 582 581 583 22 (set (reg:SI 0 ax [636])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:149 90 {*movsi_internal}
     (nil))
(insn 583 582 584 22 (set (reg:DI 0 ax [orig:394 D.24838 ] [394])
        (sign_extend:DI (reg:SI 0 ax [636]))) ge2fitman_com_line.cpp:149 142 {*extendsidi2_rex64}
     (nil))
(insn 584 583 585 22 (parallel [
            (set (reg:DI 1 dx [orig:395 D.24838 ] [395])
                (ashift:DI (reg:DI 0 ax [orig:394 D.24838 ] [394])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:149 497 {*ashldi3_1}
     (nil))
(insn 585 584 586 22 (set (reg/f:DI 0 ax [637])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(insn 586 585 587 22 (parallel [
            (set (reg/f:DI 0 ax [orig:396 D.24840 ] [396])
                (plus:DI (reg/f:DI 0 ax [637])
                    (reg:DI 1 dx [orig:395 D.24838 ] [395])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:149 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:395 D.24838 ] [395]))
        (nil)))
(insn 587 586 588 22 (set (reg/f:DI 0 ax [orig:397 D.24841 ] [397])
        (mem/f:DI (reg/f:DI 0 ax [orig:396 D.24840 ] [396]) [0 *_410+0 S8 A64])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(insn 588 587 589 22 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:397 D.24841 ] [397])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn 589 588 590 22 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:149 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 590 589 591 22 (set (reg:QI 0 ax [orig:398 D.24843 ] [398])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:149 93 {*movqi_internal}
     (nil))
(insn 591 590 592 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:398 D.24843 ] [398])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:149 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 592 591 593 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 620)
            (pc))) ge2fitman_com_line.cpp:149 596 {*jcc_1}
     (nil)
 -> 620)
;;  succ:       23 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 638 639 640 641 642 643 644 645
(note 593 592 594 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 23 (set (reg/f:DI 0 ax [638])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 595 594 596 23 (set (reg:SI 0 ax [orig:399 D.24837 ] [399])
        (mem:SI (reg/f:DI 0 ax [638]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 596 595 597 23 (set (reg:DI 1 dx [orig:400 D.24838 ] [400])
        (sign_extend:DI (reg:SI 0 ax [orig:399 D.24837 ] [399]))) ge2fitman_com_line.cpp:150 142 {*extendsidi2_rex64}
     (nil))
(insn 597 596 598 23 (set (reg:DI 0 ax [639])
        (reg:DI 1 dx [orig:400 D.24838 ] [400])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 598 597 599 23 (parallel [
            (set (reg:DI 0 ax [639])
                (ashift:DI (reg:DI 0 ax [639])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 497 {*ashldi3_1}
     (nil))
(insn 599 598 600 23 (parallel [
            (set (reg:DI 0 ax [639])
                (plus:DI (reg:DI 0 ax [639])
                    (reg:DI 1 dx [orig:400 D.24838 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:400 D.24838 ] [400])
            (const_int 9 [0x9]))
        (nil)))
(insn 600 599 601 23 (parallel [
            (set (reg:DI 0 ax [639])
                (ashift:DI (reg:DI 0 ax [639])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 497 {*ashldi3_1}
     (nil))
(insn 601 600 602 23 (parallel [
            (set (reg:DI 0 ax [639])
                (plus:DI (reg:DI 0 ax [639])
                    (reg:DI 1 dx [orig:400 D.24838 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:400 D.24838 ] [400])
            (const_int 19 [0x13]))
        (nil)))
(insn 602 601 603 23 (parallel [
            (set (reg:DI 0 ax [640])
                (ashift:DI (reg:DI 0 ax [639])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 497 {*ashldi3_1}
     (nil))
(insn 603 602 604 23 (set (reg:DI 0 ax [639])
        (reg:DI 0 ax [640])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 604 603 605 23 (set (reg:DI 1 dx [orig:401 D.24838 ] [401])
        (reg:DI 0 ax [639])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 605 604 606 23 (set (reg/f:DI 0 ax [641])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 606 605 607 23 (parallel [
            (set (reg/f:DI 3 bx [orig:402 D.24839 ] [402])
                (plus:DI (reg:DI 1 dx [orig:401 D.24838 ] [401])
                    (reg/f:DI 0 ax [641])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:401 D.24838 ] [401]))
        (nil)))
(insn 607 606 608 23 (set (reg:SI 0 ax [642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 608 607 609 23 (set (reg:DI 0 ax [orig:403 D.24838 ] [403])
        (sign_extend:DI (reg:SI 0 ax [642]))) ge2fitman_com_line.cpp:150 142 {*extendsidi2_rex64}
     (nil))
(insn 609 608 610 23 (parallel [
            (set (reg:DI 1 dx [orig:404 D.24838 ] [404])
                (ashift:DI (reg:DI 0 ax [orig:403 D.24838 ] [403])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 497 {*ashldi3_1}
     (nil))
(insn 610 609 611 23 (set (reg/f:DI 0 ax [643])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 611 610 612 23 (parallel [
            (set (reg/f:DI 0 ax [orig:405 D.24840 ] [405])
                (plus:DI (reg/f:DI 0 ax [643])
                    (reg:DI 1 dx [orig:404 D.24838 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:404 D.24838 ] [404]))
        (nil)))
(insn 612 611 613 23 (set (reg/f:DI 0 ax [orig:406 D.24841 ] [406])
        (mem/f:DI (reg/f:DI 0 ax [orig:405 D.24840 ] [405]) [0 *_420+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 613 612 614 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:406 D.24841 ] [406])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(call_insn/i 614 613 615 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x2b86fcf3af00 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:150 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 615 614 616 23 (set (reg:SI 0 ax [orig:407 D.24837 ] [407])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 616 615 617 23 (parallel [
            (set (reg:SI 0 ax [orig:408 D.24837 ] [408])
                (ashift:SI (reg:SI 0 ax [orig:407 D.24837 ] [407])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 496 {*ashlsi3_1}
     (nil))
(insn 617 616 627 23 (set (mem/j:SI (plus:DI (reg/f:DI 3 bx [orig:402 D.24839 ] [402])
                (const_int 44 [0x2c])) [0 _417->pre_quecc_points+0 S4 A32])
        (reg:SI 0 ax [orig:408 D.24837 ] [408])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 627 617 628 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:154 220 {*addsi_1}
     (nil))
(insn 628 627 629 23 (set (reg:SI 0 ax [644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:155 90 {*movsi_internal}
     (nil))
(insn 629 628 630 23 (set (reg:DI 0 ax [orig:409 D.24838 ] [409])
        (sign_extend:DI (reg:SI 0 ax [644]))) ge2fitman_com_line.cpp:155 142 {*extendsidi2_rex64}
     (nil))
(insn 630 629 631 23 (parallel [
            (set (reg:DI 1 dx [orig:410 D.24838 ] [410])
                (ashift:DI (reg:DI 0 ax [orig:409 D.24838 ] [409])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:155 497 {*ashldi3_1}
     (nil))
(insn 631 630 632 23 (set (reg/f:DI 0 ax [645])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(insn 632 631 633 23 (parallel [
            (set (reg/f:DI 0 ax [orig:411 D.24840 ] [411])
                (plus:DI (reg/f:DI 0 ax [645])
                    (reg:DI 1 dx [orig:410 D.24838 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:155 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:410 D.24838 ] [410]))
        (nil)))
(insn 633 632 634 23 (set (reg/f:DI 0 ax [orig:412 D.24841 ] [412])
        (mem/f:DI (reg/f:DI 0 ax [orig:411 D.24840 ] [411]) [0 *_427+0 S8 A64])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(insn 634 633 635 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:412 D.24841 ] [412])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(call_insn 635 634 636 23 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:155 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 636 635 637 23 (set (reg:QI 0 ax [orig:413 D.24843 ] [413])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:155 93 {*movqi_internal}
     (nil))
(insn 637 636 638 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:413 D.24843 ] [413])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:155 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 638 637 1825 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 722)
            (pc))) ge2fitman_com_line.cpp:155 596 {*jcc_1}
     (nil)
 -> 722)
;;  succ:       24 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1825 638 1827 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1827 1825 1828 24 (set (pc)
        (label_ref 1826)) 636 {jump}
     (nil)
 -> 1826)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1828 1827 620)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 620 1828 621 25 16 "" [1 uses])
(note 621 620 622 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 622 621 1829 25 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:152 90 {*movsi_internal}
     (nil))
(jump_insn 1829 622 1830 25 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:152 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1830 1829 1826)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667
(code_label 1826 1830 639 26 85 "" [1 uses])
(note 639 1826 640 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 640 639 641 26 (set (reg/f:DI 0 ax [646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 641 640 642 26 (set (reg:SI 0 ax [orig:414 D.24837 ] [414])
        (mem:SI (reg/f:DI 0 ax [646]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:156 90 {*movsi_internal}
     (nil))
(insn 642 641 643 26 (set (reg:DI 1 dx [orig:415 D.24838 ] [415])
        (sign_extend:DI (reg:SI 0 ax [orig:414 D.24837 ] [414]))) ge2fitman_com_line.cpp:156 142 {*extendsidi2_rex64}
     (nil))
(insn 643 642 644 26 (set (reg:DI 0 ax [647])
        (reg:DI 1 dx [orig:415 D.24838 ] [415])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 644 643 645 26 (parallel [
            (set (reg:DI 0 ax [647])
                (ashift:DI (reg:DI 0 ax [647])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 497 {*ashldi3_1}
     (nil))
(insn 645 644 646 26 (parallel [
            (set (reg:DI 0 ax [647])
                (plus:DI (reg:DI 0 ax [647])
                    (reg:DI 1 dx [orig:415 D.24838 ] [415])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:415 D.24838 ] [415])
            (const_int 9 [0x9]))
        (nil)))
(insn 646 645 647 26 (parallel [
            (set (reg:DI 0 ax [647])
                (ashift:DI (reg:DI 0 ax [647])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 497 {*ashldi3_1}
     (nil))
(insn 647 646 648 26 (parallel [
            (set (reg:DI 0 ax [647])
                (plus:DI (reg:DI 0 ax [647])
                    (reg:DI 1 dx [orig:415 D.24838 ] [415])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:415 D.24838 ] [415])
            (const_int 19 [0x13]))
        (nil)))
(insn 648 647 649 26 (parallel [
            (set (reg:DI 0 ax [648])
                (ashift:DI (reg:DI 0 ax [647])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 497 {*ashldi3_1}
     (nil))
(insn 649 648 650 26 (set (reg:DI 0 ax [647])
        (reg:DI 0 ax [648])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 650 649 651 26 (set (reg:DI 1 dx [orig:416 D.24838 ] [416])
        (reg:DI 0 ax [647])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 651 650 652 26 (set (reg/f:DI 0 ax [649])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 652 651 653 26 (parallel [
            (set (reg/f:DI 3 bx [orig:417 D.24839 ] [417])
                (plus:DI (reg:DI 1 dx [orig:416 D.24838 ] [416])
                    (reg/f:DI 0 ax [649])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:416 D.24838 ] [416]))
        (nil)))
(insn 653 652 654 26 (set (reg:SI 0 ax [650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:156 90 {*movsi_internal}
     (nil))
(insn 654 653 655 26 (set (reg:DI 0 ax [orig:418 D.24838 ] [418])
        (sign_extend:DI (reg:SI 0 ax [650]))) ge2fitman_com_line.cpp:156 142 {*extendsidi2_rex64}
     (nil))
(insn 655 654 656 26 (parallel [
            (set (reg:DI 1 dx [orig:419 D.24838 ] [419])
                (ashift:DI (reg:DI 0 ax [orig:418 D.24838 ] [418])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 497 {*ashldi3_1}
     (nil))
(insn 656 655 657 26 (set (reg/f:DI 0 ax [651])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 657 656 658 26 (parallel [
            (set (reg/f:DI 0 ax [orig:420 D.24840 ] [420])
                (plus:DI (reg/f:DI 0 ax [651])
                    (reg:DI 1 dx [orig:419 D.24838 ] [419])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:419 D.24838 ] [419]))
        (nil)))
(insn 658 657 659 26 (set (reg/f:DI 0 ax [orig:421 D.24841 ] [421])
        (mem/f:DI (reg/f:DI 0 ax [orig:420 D.24840 ] [420]) [0 *_437+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 659 658 660 26 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:421 D.24841 ] [421])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(call_insn/i 660 659 662 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x2b86fcf3ae00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:156 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 662 660 1946 26 (set (reg:SF 24 xmm3 [orig:423 D.24846 ] [423])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:422 D.24848 ] [422]))) ge2fitman_com_line.cpp:156 157 {*truncdfsf_fast_sse}
     (nil))
(insn 1946 662 663 26 (set (reg:SF 0 ax [orig:423 D.24846 ] [423])
        (reg:SF 24 xmm3 [orig:423 D.24846 ] [423])) ge2fitman_com_line.cpp:156 129 {*movsf_internal}
     (nil))
(insn 663 1946 664 26 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:417 D.24839 ] [417])
                (const_int 48 [0x30])) [0 _434->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [orig:423 D.24846 ] [423])) ge2fitman_com_line.cpp:156 129 {*movsf_internal}
     (nil))
(insn 664 663 665 26 (set (reg/f:DI 0 ax [652])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:157 89 {*movdi_internal}
     (nil))
(insn 665 664 666 26 (set (mem:SI (reg/f:DI 0 ax [652]) [0 *fid_102(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:157 90 {*movsi_internal}
     (nil))
(insn 666 665 667 26 (set (reg/f:DI 0 ax [653])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 667 666 668 26 (set (reg:SI 0 ax [orig:424 D.24837 ] [424])
        (mem:SI (reg/f:DI 0 ax [653]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 668 667 669 26 (set (reg:DI 1 dx [orig:425 D.24838 ] [425])
        (sign_extend:DI (reg:SI 0 ax [orig:424 D.24837 ] [424]))) ge2fitman_com_line.cpp:158 142 {*extendsidi2_rex64}
     (nil))
(insn 669 668 670 26 (set (reg:DI 0 ax [654])
        (reg:DI 1 dx [orig:425 D.24838 ] [425])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 670 669 671 26 (parallel [
            (set (reg:DI 0 ax [654])
                (ashift:DI (reg:DI 0 ax [654])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 497 {*ashldi3_1}
     (nil))
(insn 671 670 672 26 (parallel [
            (set (reg:DI 0 ax [654])
                (plus:DI (reg:DI 0 ax [654])
                    (reg:DI 1 dx [orig:425 D.24838 ] [425])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:425 D.24838 ] [425])
            (const_int 9 [0x9]))
        (nil)))
(insn 672 671 673 26 (parallel [
            (set (reg:DI 0 ax [654])
                (ashift:DI (reg:DI 0 ax [654])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 497 {*ashldi3_1}
     (nil))
(insn 673 672 674 26 (parallel [
            (set (reg:DI 0 ax [654])
                (plus:DI (reg:DI 0 ax [654])
                    (reg:DI 1 dx [orig:425 D.24838 ] [425])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:425 D.24838 ] [425])
            (const_int 19 [0x13]))
        (nil)))
(insn 674 673 675 26 (parallel [
            (set (reg:DI 0 ax [655])
                (ashift:DI (reg:DI 0 ax [654])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 497 {*ashldi3_1}
     (nil))
(insn 675 674 676 26 (set (reg:DI 0 ax [654])
        (reg:DI 0 ax [655])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 676 675 677 26 (set (reg:DI 1 dx [orig:426 D.24838 ] [426])
        (reg:DI 0 ax [654])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 677 676 678 26 (set (reg/f:DI 0 ax [656])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 678 677 679 26 (parallel [
            (set (reg/f:DI 1 dx [orig:427 D.24839 ] [427])
                (plus:DI (reg:DI 1 dx [orig:426 D.24838 ] [426])
                    (reg/f:DI 0 ax [656])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:426 D.24838 ] [426]))
        (nil)))
(insn 679 678 680 26 (set (reg/f:DI 0 ax [657])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 680 679 681 26 (set (reg:SI 0 ax [orig:428 D.24837 ] [428])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [657])
                (const_int 44 [0x2c])) [0 preprocess_44(D)->pre_quecc_points+0 S4 A32])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 681 680 682 26 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:427 D.24839 ] [427])
                (const_int 44 [0x2c])) [0 _444->pre_quecc_points+0 S4 A32])
        (reg:SI 0 ax [orig:428 D.24837 ] [428])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 682 681 683 26 (set (reg/f:DI 0 ax [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 683 682 684 26 (set (reg:SI 0 ax [orig:429 D.24837 ] [429])
        (mem:SI (reg/f:DI 0 ax [658]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:159 90 {*movsi_internal}
     (nil))
(insn 684 683 685 26 (set (reg:DI 1 dx [orig:430 D.24838 ] [430])
        (sign_extend:DI (reg:SI 0 ax [orig:429 D.24837 ] [429]))) ge2fitman_com_line.cpp:159 142 {*extendsidi2_rex64}
     (nil))
(insn 685 684 686 26 (set (reg:DI 0 ax [659])
        (reg:DI 1 dx [orig:430 D.24838 ] [430])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 686 685 687 26 (parallel [
            (set (reg:DI 0 ax [659])
                (ashift:DI (reg:DI 0 ax [659])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 497 {*ashldi3_1}
     (nil))
(insn 687 686 688 26 (parallel [
            (set (reg:DI 0 ax [659])
                (plus:DI (reg:DI 0 ax [659])
                    (reg:DI 1 dx [orig:430 D.24838 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:430 D.24838 ] [430])
            (const_int 9 [0x9]))
        (nil)))
(insn 688 687 689 26 (parallel [
            (set (reg:DI 0 ax [659])
                (ashift:DI (reg:DI 0 ax [659])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 497 {*ashldi3_1}
     (nil))
(insn 689 688 690 26 (parallel [
            (set (reg:DI 0 ax [659])
                (plus:DI (reg:DI 0 ax [659])
                    (reg:DI 1 dx [orig:430 D.24838 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:430 D.24838 ] [430])
            (const_int 19 [0x13]))
        (nil)))
(insn 690 689 691 26 (parallel [
            (set (reg:DI 0 ax [660])
                (ashift:DI (reg:DI 0 ax [659])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 497 {*ashldi3_1}
     (nil))
(insn 691 690 692 26 (set (reg:DI 0 ax [659])
        (reg:DI 0 ax [660])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 692 691 693 26 (set (reg:DI 1 dx [orig:431 D.24838 ] [431])
        (reg:DI 0 ax [659])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 693 692 694 26 (set (reg/f:DI 0 ax [661])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 694 693 695 26 (parallel [
            (set (reg/f:DI 3 bx [orig:432 D.24839 ] [432])
                (plus:DI (reg:DI 1 dx [orig:431 D.24838 ] [431])
                    (reg/f:DI 0 ax [661])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:431 D.24838 ] [431]))
        (nil)))
(insn 695 694 696 26 (set (reg:SI 0 ax [662])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:159 90 {*movsi_internal}
     (nil))
(insn 696 695 697 26 (set (reg:DI 0 ax [orig:433 D.24838 ] [433])
        (sign_extend:DI (reg:SI 0 ax [662]))) ge2fitman_com_line.cpp:159 142 {*extendsidi2_rex64}
     (nil))
(insn 697 696 698 26 (parallel [
            (set (reg:DI 1 dx [orig:434 D.24838 ] [434])
                (ashift:DI (reg:DI 0 ax [orig:433 D.24838 ] [433])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 497 {*ashldi3_1}
     (nil))
(insn 698 697 699 26 (set (reg/f:DI 0 ax [663])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 699 698 700 26 (parallel [
            (set (reg/f:DI 0 ax [orig:435 D.24840 ] [435])
                (plus:DI (reg/f:DI 0 ax [663])
                    (reg:DI 1 dx [orig:434 D.24838 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:434 D.24838 ] [434]))
        (nil)))
(insn 700 699 701 26 (set (reg/f:DI 0 ax [orig:436 D.24841 ] [436])
        (mem/f:DI (reg/f:DI 0 ax [orig:435 D.24840 ] [435]) [0 *_452+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 701 700 702 26 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:436 D.24841 ] [436])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(call_insn/i 702 701 704 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x2b86fcf3ae00 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:159 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 704 702 1947 26 (set (reg:SF 25 xmm4 [orig:438 D.24846 ] [438])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:437 D.24848 ] [437]))) ge2fitman_com_line.cpp:159 157 {*truncdfsf_fast_sse}
     (nil))
(insn 1947 704 705 26 (set (reg:SF 0 ax [orig:438 D.24846 ] [438])
        (reg:SF 25 xmm4 [orig:438 D.24846 ] [438])) ge2fitman_com_line.cpp:159 129 {*movsf_internal}
     (nil))
(insn 705 1947 706 26 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:432 D.24839 ] [432])
                (const_int 48 [0x30])) [0 _449->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [orig:438 D.24846 ] [438])) ge2fitman_com_line.cpp:159 129 {*movsf_internal}
     (nil))
(insn 706 705 707 26 (set (reg/f:DI 0 ax [664])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 707 706 708 26 (set (reg:SI 0 ax [orig:439 D.24837 ] [439])
        (mem:SI (reg/f:DI 0 ax [664]) [0 *fid_102(D)+0 S4 A32])) ge2fitman_com_line.cpp:160 90 {*movsi_internal}
     (nil))
(insn 708 707 709 26 (set (reg:DI 1 dx [orig:440 D.24838 ] [440])
        (sign_extend:DI (reg:SI 0 ax [orig:439 D.24837 ] [439]))) ge2fitman_com_line.cpp:160 142 {*extendsidi2_rex64}
     (nil))
(insn 709 708 710 26 (set (reg:DI 0 ax [665])
        (reg:DI 1 dx [orig:440 D.24838 ] [440])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 710 709 711 26 (parallel [
            (set (reg:DI 0 ax [665])
                (ashift:DI (reg:DI 0 ax [665])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 497 {*ashldi3_1}
     (nil))
(insn 711 710 712 26 (parallel [
            (set (reg:DI 0 ax [665])
                (plus:DI (reg:DI 0 ax [665])
                    (reg:DI 1 dx [orig:440 D.24838 ] [440])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:440 D.24838 ] [440])
            (const_int 9 [0x9]))
        (nil)))
(insn 712 711 713 26 (parallel [
            (set (reg:DI 0 ax [665])
                (ashift:DI (reg:DI 0 ax [665])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 497 {*ashldi3_1}
     (nil))
(insn 713 712 714 26 (parallel [
            (set (reg:DI 0 ax [665])
                (plus:DI (reg:DI 0 ax [665])
                    (reg:DI 1 dx [orig:440 D.24838 ] [440])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 221 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:440 D.24838 ] [440])
            (const_int 19 [0x13]))
        (nil)))
(insn 714 713 715 26 (parallel [
            (set (reg:DI 0 ax [666])
                (ashift:DI (reg:DI 0 ax [665])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 497 {*ashldi3_1}
     (nil))
(insn 715 714 716 26 (set (reg:DI 0 ax [665])
        (reg:DI 0 ax [666])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 716 715 717 26 (set (reg:DI 1 dx [orig:441 D.24838 ] [441])
        (reg:DI 0 ax [665])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 717 716 718 26 (set (reg/f:DI 0 ax [667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 718 717 719 26 (parallel [
            (set (reg/f:DI 0 ax [orig:442 D.24839 ] [442])
                (plus:DI (reg/f:DI 0 ax [667])
                    (reg:DI 1 dx [orig:441 D.24838 ] [441])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:441 D.24838 ] [441]))
        (nil)))
(insn 719 718 1831 26 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:442 D.24839 ] [442])
                (const_int 40 [0x28])) [0 _459->pre_quecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:160 90 {*movsi_internal}
     (nil))
(jump_insn 1831 719 1832 26 (set (pc)
        (label_ref 727)) 636 {jump}
     (nil)
 -> 727)
;;  succ:       28 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1832 1831 722)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 722 1832 723 27 18 "" [1 uses])
(note 723 722 724 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 1833 27 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:162 90 {*movsi_internal}
     (nil))
(jump_insn 1833 724 1834 27 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:162 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1834 1833 727)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 727 1834 728 28 15 "" [2 uses])
(note 728 727 1835 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1835 728 1836 28 (set (pc)
        (label_ref 1440)) ge2fitman_com_line.cpp:146 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1836 1835 731)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 161 162 163 164 165 668 669
(code_label 731 1836 732 29 10 "" [1 uses])
(note 732 731 733 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 29 (set (reg:SI 0 ax [668])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:170 90 {*movsi_internal}
     (nil))
(insn 734 733 735 29 (set (reg:DI 0 ax [orig:161 D.24838 ] [161])
        (sign_extend:DI (reg:SI 0 ax [668]))) ge2fitman_com_line.cpp:170 142 {*extendsidi2_rex64}
     (nil))
(insn 735 734 736 29 (parallel [
            (set (reg:DI 1 dx [orig:162 D.24838 ] [162])
                (ashift:DI (reg:DI 0 ax [orig:161 D.24838 ] [161])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:170 497 {*ashldi3_1}
     (nil))
(insn 736 735 737 29 (set (reg/f:DI 0 ax [669])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 737 736 738 29 (parallel [
            (set (reg/f:DI 0 ax [orig:163 D.24840 ] [163])
                (plus:DI (reg/f:DI 0 ax [669])
                    (reg:DI 1 dx [orig:162 D.24838 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:170 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:162 D.24838 ] [162]))
        (nil)))
(insn 738 737 739 29 (set (reg/f:DI 0 ax [orig:164 D.24841 ] [164])
        (mem/f:DI (reg/f:DI 0 ax [orig:163 D.24840 ] [163]) [0 *_127+0 S8 A64])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 739 738 740 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b86fe29fda8 *.LC5>)) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 740 739 741 29 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:164 D.24841 ] [164])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(call_insn/i 741 740 742 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:170 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 742 741 743 29 (set (reg:SI 0 ax [orig:165 D.24837 ] [165])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:170 90 {*movsi_internal}
     (nil))
(insn 743 742 744 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:165 D.24837 ] [165])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:170 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 744 743 745 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) ge2fitman_com_line.cpp:170 596 {*jcc_1}
     (nil)
 -> 751)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 745 744 746 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 30 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:171 90 {*movsi_internal}
     (nil))
(call_insn 747 746 748 30 (call (mem:QI (symbol_ref:DI ("_Z9disp_helpi") [flags 0x41]  <function_decl 0x2b86fe217c00 disp_help>) [0 disp_help S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:171 642 {*call}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 748 747 749 30 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:172 90 {*movsi_internal}
     (nil))
(call_insn 749 748 750 30 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b86fcc71900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:172 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 750 749 751)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 166 167 168 169 170 670 671
(code_label 751 750 752 31 19 "" [1 uses])
(note 752 751 753 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 753 752 754 31 (set (reg:SI 0 ax [670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:175 90 {*movsi_internal}
     (nil))
(insn 754 753 755 31 (set (reg:DI 0 ax [orig:166 D.24838 ] [166])
        (sign_extend:DI (reg:SI 0 ax [670]))) ge2fitman_com_line.cpp:175 142 {*extendsidi2_rex64}
     (nil))
(insn 755 754 756 31 (parallel [
            (set (reg:DI 1 dx [orig:167 D.24838 ] [167])
                (ashift:DI (reg:DI 0 ax [orig:166 D.24838 ] [166])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:175 497 {*ashldi3_1}
     (nil))
(insn 756 755 757 31 (set (reg/f:DI 0 ax [671])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 757 756 758 31 (parallel [
            (set (reg/f:DI 0 ax [orig:168 D.24840 ] [168])
                (plus:DI (reg/f:DI 0 ax [671])
                    (reg:DI 1 dx [orig:167 D.24838 ] [167])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:175 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:167 D.24838 ] [167]))
        (nil)))
(insn 758 757 759 31 (set (reg/f:DI 0 ax [orig:169 D.24841 ] [169])
        (mem/f:DI (reg/f:DI 0 ax [orig:168 D.24840 ] [168]) [0 *_132+0 S8 A64])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 759 758 760 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b86fe29fe40 *.LC6>)) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 760 759 761 31 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:169 D.24841 ] [169])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn/i 761 760 762 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:175 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 762 761 763 31 (set (reg:SI 0 ax [orig:170 D.24837 ] [170])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:175 90 {*movsi_internal}
     (nil))
(insn 763 762 764 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:170 D.24837 ] [170])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:175 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 764 763 765 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 771)
            (pc))) ge2fitman_com_line.cpp:175 596 {*jcc_1}
     (nil)
 -> 771)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 765 764 766 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 767 32 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:176 90 {*movsi_internal}
     (nil))
(call_insn 767 766 768 32 (call (mem:QI (symbol_ref:DI ("_Z9disp_helpi") [flags 0x41]  <function_decl 0x2b86fe217c00 disp_help>) [0 disp_help S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:176 642 {*call}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 768 767 769 32 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:177 90 {*movsi_internal}
     (nil))
(call_insn 769 768 770 32 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b86fcc71900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:177 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 770 769 771)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 171 172 173 174 175 672 673
(code_label 771 770 772 33 20 "" [1 uses])
(note 772 771 773 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 774 33 (set (reg:SI 0 ax [672])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:180 90 {*movsi_internal}
     (nil))
(insn 774 773 775 33 (set (reg:DI 0 ax [orig:171 D.24838 ] [171])
        (sign_extend:DI (reg:SI 0 ax [672]))) ge2fitman_com_line.cpp:180 142 {*extendsidi2_rex64}
     (nil))
(insn 775 774 776 33 (parallel [
            (set (reg:DI 1 dx [orig:172 D.24838 ] [172])
                (ashift:DI (reg:DI 0 ax [orig:171 D.24838 ] [171])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:180 497 {*ashldi3_1}
     (nil))
(insn 776 775 777 33 (set (reg/f:DI 0 ax [673])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 777 776 778 33 (parallel [
            (set (reg/f:DI 0 ax [orig:173 D.24840 ] [173])
                (plus:DI (reg/f:DI 0 ax [673])
                    (reg:DI 1 dx [orig:172 D.24838 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:180 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:172 D.24838 ] [172]))
        (nil)))
(insn 778 777 779 33 (set (reg/f:DI 0 ax [orig:174 D.24841 ] [174])
        (mem/f:DI (reg/f:DI 0 ax [orig:173 D.24840 ] [173]) [0 *_137+0 S8 A64])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 779 778 780 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b86fe29fed8 *.LC7>)) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 780 779 781 33 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:174 D.24841 ] [174])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(call_insn/i 781 780 782 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:180 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 782 781 783 33 (set (reg:SI 0 ax [orig:175 D.24837 ] [175])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:180 90 {*movsi_internal}
     (nil))
(insn 783 782 784 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:175 D.24837 ] [175])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:180 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 784 783 785 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 804)
            (pc))) ge2fitman_com_line.cpp:180 596 {*jcc_1}
     (nil)
 -> 804)
;;  succ:       34 (FALLTHRU)
;;              37
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 176 674
(note 785 784 786 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 34 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:182 93 {*movqi_internal}
     (nil))
(insn 787 786 788 34 (set (reg/f:DI 0 ax [674])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:183 89 {*movdi_internal}
     (nil))
(insn 788 787 789 34 (set (reg:SI 0 ax [orig:176 D.24837 ] [176])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [674])
                (const_int 8 [0x8])) [0 preprocess_44(D)->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:183 90 {*movsi_internal}
     (nil))
(insn 789 788 790 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:176 D.24837 ] [176])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:183 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 790 789 791 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 799)
            (pc))) ge2fitman_com_line.cpp:183 596 {*jcc_1}
     (nil)
 -> 799)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 675 676 677
(note 791 790 792 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 792 791 793 35 (set (reg/f:DI 0 ax [675])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:184 89 {*movdi_internal}
     (nil))
(insn 793 792 794 35 (set (mem/j:SI (reg/f:DI 0 ax [675]) [0 preprocess_44(D)->fid_scale+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:184 90 {*movsi_internal}
     (nil))
(insn 794 793 795 35 (set (reg/f:DI 1 dx [676])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:185 89 {*movdi_internal}
     (nil))
(insn 795 794 796 35 (set (reg:SF 0 ax [677])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:185 129 {*movsf_internal}
     (nil))
(insn 796 795 1837 35 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [676])
                (const_int 4 [0x4])) [0 preprocess_44(D)->scale_factor+0 S4 A32])
        (reg:SF 0 ax [677])) ge2fitman_com_line.cpp:185 129 {*movsf_internal}
     (nil))
(jump_insn 1837 796 1838 35 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1838 1837 799)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 799 1838 800 36 22 "" [1 uses])
(note 800 799 801 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 801 800 1839 36 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:188 90 {*movsi_internal}
     (nil))
(jump_insn 1839 801 1840 36 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:188 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1840 1839 804)
;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 177 178 179 180 181 678 679
(code_label 804 1840 805 37 21 "" [1 uses])
(note 805 804 806 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 806 805 807 37 (set (reg:SI 0 ax [678])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:192 90 {*movsi_internal}
     (nil))
(insn 807 806 808 37 (set (reg:DI 0 ax [orig:177 D.24838 ] [177])
        (sign_extend:DI (reg:SI 0 ax [678]))) ge2fitman_com_line.cpp:192 142 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 37 (parallel [
            (set (reg:DI 1 dx [orig:178 D.24838 ] [178])
                (ashift:DI (reg:DI 0 ax [orig:177 D.24838 ] [177])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:192 497 {*ashldi3_1}
     (nil))
(insn 809 808 810 37 (set (reg/f:DI 0 ax [679])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 810 809 811 37 (parallel [
            (set (reg/f:DI 0 ax [orig:179 D.24840 ] [179])
                (plus:DI (reg/f:DI 0 ax [679])
                    (reg:DI 1 dx [orig:178 D.24838 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:192 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:178 D.24838 ] [178]))
        (nil)))
(insn 811 810 812 37 (set (reg/f:DI 0 ax [orig:180 D.24841 ] [180])
        (mem/f:DI (reg/f:DI 0 ax [orig:179 D.24840 ] [179]) [0 *_145+0 S8 A64])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 812 811 813 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b86fe2db000 *.LC8>)) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 813 812 814 37 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:180 D.24841 ] [180])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(call_insn/i 814 813 815 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:192 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 815 814 816 37 (set (reg:SI 0 ax [orig:181 D.24837 ] [181])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:192 90 {*movsi_internal}
     (nil))
(insn 816 815 817 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:181 D.24837 ] [181])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:192 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 817 816 818 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 841)
            (pc))) ge2fitman_com_line.cpp:192 596 {*jcc_1}
     (nil)
 -> 841)
;;  succ:       38 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 182 183 680
(note 818 817 819 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 820 38 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:194 93 {*movqi_internal}
     (nil))
(insn 820 819 821 38 (set (reg/f:DI 0 ax [680])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:195 89 {*movdi_internal}
     (nil))
(insn 821 820 822 38 (parallel [
            (set (reg/f:DI 0 ax [orig:182 D.24839 ] [182])
                (plus:DI (reg/f:DI 0 ax [680])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:195 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 822 821 823 38 (set (reg:SI 0 ax [orig:183 D.24837 ] [183])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:182 D.24839 ] [182])
                (const_int 8 [0x8])) [0 _149->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:195 90 {*movsi_internal}
     (nil))
(insn 823 822 824 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:183 D.24837 ] [183])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:195 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 824 823 825 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 836)
            (pc))) ge2fitman_com_line.cpp:195 596 {*jcc_1}
     (nil)
 -> 836)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 184 185 681 682 683
(note 825 824 826 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 826 825 827 39 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -814 [0xfffffffffffffcd2])) [0 rscale_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:196 93 {*movqi_internal}
     (nil))
(insn 827 826 828 39 (set (reg/f:DI 0 ax [681])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:197 89 {*movdi_internal}
     (nil))
(insn 828 827 829 39 (parallel [
            (set (reg/f:DI 0 ax [orig:184 D.24839 ] [184])
                (plus:DI (reg/f:DI 0 ax [681])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:197 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 829 828 830 39 (set (mem/j:SI (reg/f:DI 0 ax [orig:184 D.24839 ] [184]) [0 _152->fid_scale+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:197 90 {*movsi_internal}
     (nil))
(insn 830 829 831 39 (set (reg/f:DI 0 ax [682])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:198 89 {*movdi_internal}
     (nil))
(insn 831 830 832 39 (parallel [
            (set (reg/f:DI 1 dx [orig:185 D.24839 ] [185])
                (plus:DI (reg/f:DI 0 ax [682])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:198 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 832 831 833 39 (set (reg:SF 0 ax [683])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:198 129 {*movsf_internal}
     (nil))
(insn 833 832 1841 39 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:185 D.24839 ] [185])
                (const_int 4 [0x4])) [0 _153->scale_factor+0 S4 A32])
        (reg:SF 0 ax [683])) ge2fitman_com_line.cpp:198 129 {*movsf_internal}
     (nil))
(jump_insn 1841 833 1842 39 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1842 1841 836)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 836 1842 837 40 24 "" [1 uses])
(note 837 836 838 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 838 837 1843 40 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:201 90 {*movsi_internal}
     (nil))
(jump_insn 1843 838 1844 40 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:201 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1844 1843 841)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 186 187 188 189 190 684 685
(code_label 841 1844 842 41 23 "" [1 uses])
(note 842 841 843 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 41 (set (reg:SI 0 ax [684])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:205 90 {*movsi_internal}
     (nil))
(insn 844 843 845 41 (set (reg:DI 0 ax [orig:186 D.24838 ] [186])
        (sign_extend:DI (reg:SI 0 ax [684]))) ge2fitman_com_line.cpp:205 142 {*extendsidi2_rex64}
     (nil))
(insn 845 844 846 41 (parallel [
            (set (reg:DI 1 dx [orig:187 D.24838 ] [187])
                (ashift:DI (reg:DI 0 ax [orig:186 D.24838 ] [186])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:205 497 {*ashldi3_1}
     (nil))
(insn 846 845 847 41 (set (reg/f:DI 0 ax [685])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 847 846 848 41 (parallel [
            (set (reg/f:DI 0 ax [orig:188 D.24840 ] [188])
                (plus:DI (reg/f:DI 0 ax [685])
                    (reg:DI 1 dx [orig:187 D.24838 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:205 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:187 D.24838 ] [187]))
        (nil)))
(insn 848 847 849 41 (set (reg/f:DI 0 ax [orig:189 D.24841 ] [189])
        (mem/f:DI (reg/f:DI 0 ax [orig:188 D.24840 ] [188]) [0 *_157+0 S8 A64])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 849 848 850 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b86fe2db098 *.LC9>)) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 850 849 851 41 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:189 D.24841 ] [189])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(call_insn/i 851 850 852 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:205 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 852 851 853 41 (set (reg:SI 0 ax [orig:190 D.24837 ] [190])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:205 90 {*movsi_internal}
     (nil))
(insn 853 852 854 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:190 D.24837 ] [190])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:205 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 854 853 855 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 902)
            (pc))) ge2fitman_com_line.cpp:205 596 {*jcc_1}
     (nil)
 -> 902)
;;  succ:       42 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 191 686
(note 855 854 856 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 856 855 857 42 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:207 93 {*movqi_internal}
     (nil))
(insn 857 856 858 42 (set (reg/f:DI 0 ax [686])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:208 89 {*movdi_internal}
     (nil))
(insn 858 857 859 42 (set (reg:SI 0 ax [orig:191 D.24837 ] [191])
        (mem/j:SI (reg/f:DI 0 ax [686]) [0 preprocess_44(D)->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:208 90 {*movsi_internal}
     (nil))
(insn 859 858 860 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:191 D.24837 ] [191])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:208 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 860 859 861 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 897)
            (pc))) ge2fitman_com_line.cpp:208 596 {*jcc_1}
     (nil)
 -> 897)
;;  succ:       43 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 192 193 194 195 196 687 688 689
(note 861 860 862 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 862 861 863 43 (set (reg/f:DI 0 ax [687])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:209 89 {*movdi_internal}
     (nil))
(insn 863 862 864 43 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [687])
                (const_int 8 [0x8])) [0 preprocess_44(D)->scaleby+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:209 90 {*movsi_internal}
     (nil))
(insn 864 863 865 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:210 220 {*addsi_1}
     (nil))
(insn 865 864 866 43 (set (reg:SI 0 ax [688])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:211 90 {*movsi_internal}
     (nil))
(insn 866 865 867 43 (set (reg:DI 0 ax [orig:192 D.24838 ] [192])
        (sign_extend:DI (reg:SI 0 ax [688]))) ge2fitman_com_line.cpp:211 142 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 43 (parallel [
            (set (reg:DI 1 dx [orig:193 D.24838 ] [193])
                (ashift:DI (reg:DI 0 ax [orig:192 D.24838 ] [192])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:211 497 {*ashldi3_1}
     (nil))
(insn 868 867 869 43 (set (reg/f:DI 0 ax [689])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(insn 869 868 870 43 (parallel [
            (set (reg/f:DI 0 ax [orig:194 D.24840 ] [194])
                (plus:DI (reg/f:DI 0 ax [689])
                    (reg:DI 1 dx [orig:193 D.24838 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:211 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:193 D.24838 ] [193]))
        (nil)))
(insn 870 869 871 43 (set (reg/f:DI 0 ax [orig:195 D.24841 ] [195])
        (mem/f:DI (reg/f:DI 0 ax [orig:194 D.24840 ] [194]) [0 *_165+0 S8 A64])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(insn 871 870 872 43 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:195 D.24841 ] [195])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 872 871 873 43 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:211 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 873 872 874 43 (set (reg:QI 0 ax [orig:196 D.24843 ] [196])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:211 93 {*movqi_internal}
     (nil))
(insn 874 873 875 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:196 D.24843 ] [196])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:211 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 875 874 876 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 892)
            (pc))) ge2fitman_com_line.cpp:211 596 {*jcc_1}
     (nil)
 -> 892)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 197 198 199 200 201 690 691 692
(note 876 875 877 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 44 (set (reg/f:DI 0 ax [690])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 878 877 879 44 (parallel [
            (set (reg/f:DI 1 dx [orig:197 D.24844 ] [197])
                (plus:DI (reg/f:DI 0 ax [690])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 879 878 880 44 (set (reg:SI 0 ax [691])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:212 90 {*movsi_internal}
     (nil))
(insn 880 879 881 44 (set (reg:DI 0 ax [orig:198 D.24838 ] [198])
        (sign_extend:DI (reg:SI 0 ax [691]))) ge2fitman_com_line.cpp:212 142 {*extendsidi2_rex64}
     (nil))
(insn 881 880 882 44 (parallel [
            (set (reg:DI 2 cx [orig:199 D.24838 ] [199])
                (ashift:DI (reg:DI 0 ax [orig:198 D.24838 ] [198])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 497 {*ashldi3_1}
     (nil))
(insn 882 881 883 44 (set (reg/f:DI 0 ax [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 883 882 884 44 (parallel [
            (set (reg/f:DI 0 ax [orig:200 D.24840 ] [200])
                (plus:DI (reg/f:DI 0 ax [692])
                    (reg:DI 2 cx [orig:199 D.24838 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:199 D.24838 ] [199]))
        (nil)))
(insn 884 883 886 44 (set (reg/f:DI 0 ax [orig:201 D.24841 ] [201])
        (mem/f:DI (reg/f:DI 0 ax [orig:200 D.24840 ] [200]) [0 *_172+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 886 884 887 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b86fe2db130 *.LC10>)) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 887 886 888 44 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:201 D.24841 ] [201])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 888 887 889 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:212 93 {*movqi_internal}
     (nil))
(call_insn 889 888 1845 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x2b86fcc58900 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:212 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1845 889 1846 44 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1846 1845 892)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 892 1846 893 45 27 "" [1 uses])
(note 893 892 894 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 894 893 1847 45 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -14 [0xfffffffffffffff2])) ge2fitman_com_line.cpp:214 90 {*movsi_internal}
     (nil))
(jump_insn 1847 894 1848 45 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:214 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1848 1847 897)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 897 1848 898 46 26 "" [1 uses])
(note 898 897 899 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 1849 46 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:218 90 {*movsi_internal}
     (nil))
(jump_insn 1849 899 1850 46 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:218 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1850 1849 902)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 202 203 204 205 206 693 694
(code_label 902 1850 903 47 25 "" [1 uses])
(note 903 902 904 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 904 903 905 47 (set (reg:SI 0 ax [693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:222 90 {*movsi_internal}
     (nil))
(insn 905 904 906 47 (set (reg:DI 0 ax [orig:202 D.24838 ] [202])
        (sign_extend:DI (reg:SI 0 ax [693]))) ge2fitman_com_line.cpp:222 142 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 47 (parallel [
            (set (reg:DI 1 dx [orig:203 D.24838 ] [203])
                (ashift:DI (reg:DI 0 ax [orig:202 D.24838 ] [202])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:222 497 {*ashldi3_1}
     (nil))
(insn 907 906 908 47 (set (reg/f:DI 0 ax [694])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 908 907 909 47 (parallel [
            (set (reg/f:DI 0 ax [orig:204 D.24840 ] [204])
                (plus:DI (reg/f:DI 0 ax [694])
                    (reg:DI 1 dx [orig:203 D.24838 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:222 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:203 D.24838 ] [203]))
        (nil)))
(insn 909 908 910 47 (set (reg/f:DI 0 ax [orig:205 D.24841 ] [205])
        (mem/f:DI (reg/f:DI 0 ax [orig:204 D.24840 ] [204]) [0 *_178+0 S8 A64])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 910 909 911 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b86fe2db1c8 *.LC11>)) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 911 910 912 47 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:205 D.24841 ] [205])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(call_insn/i 912 911 913 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:222 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 913 912 914 47 (set (reg:SI 0 ax [orig:206 D.24837 ] [206])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:222 90 {*movsi_internal}
     (nil))
(insn 914 913 915 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:206 D.24837 ] [206])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:222 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 915 914 916 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 967)
            (pc))) ge2fitman_com_line.cpp:222 596 {*jcc_1}
     (nil)
 -> 967)
;;  succ:       48 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207 208 695
(note 916 915 917 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 917 916 918 48 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:224 93 {*movqi_internal}
     (nil))
(insn 918 917 919 48 (set (reg/f:DI 0 ax [695])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:225 89 {*movdi_internal}
     (nil))
(insn 919 918 920 48 (parallel [
            (set (reg/f:DI 0 ax [orig:207 D.24839 ] [207])
                (plus:DI (reg/f:DI 0 ax [695])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:225 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 920 919 921 48 (set (reg:SI 0 ax [orig:208 D.24837 ] [208])
        (mem/j:SI (reg/f:DI 0 ax [orig:207 D.24839 ] [207]) [0 _182->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:225 90 {*movsi_internal}
     (nil))
(insn 921 920 922 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:208 D.24837 ] [208])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:225 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 922 921 923 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) ge2fitman_com_line.cpp:225 596 {*jcc_1}
     (nil)
 -> 962)
;;  succ:       49 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 209 210 211 212 213 214 696 697 698
(note 923 922 924 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 924 923 925 49 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -814 [0xfffffffffffffcd2])) [0 rscale_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:226 93 {*movqi_internal}
     (nil))
(insn 925 924 926 49 (set (reg/f:DI 0 ax [696])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:227 89 {*movdi_internal}
     (nil))
(insn 926 925 927 49 (parallel [
            (set (reg/f:DI 0 ax [orig:209 D.24839 ] [209])
                (plus:DI (reg/f:DI 0 ax [696])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:227 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 927 926 928 49 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:209 D.24839 ] [209])
                (const_int 8 [0x8])) [0 _185->scaleby+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:227 90 {*movsi_internal}
     (nil))
(insn 928 927 929 49 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:228 220 {*addsi_1}
     (nil))
(insn 929 928 930 49 (set (reg:SI 0 ax [697])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:229 90 {*movsi_internal}
     (nil))
(insn 930 929 931 49 (set (reg:DI 0 ax [orig:210 D.24838 ] [210])
        (sign_extend:DI (reg:SI 0 ax [697]))) ge2fitman_com_line.cpp:229 142 {*extendsidi2_rex64}
     (nil))
(insn 931 930 932 49 (parallel [
            (set (reg:DI 1 dx [orig:211 D.24838 ] [211])
                (ashift:DI (reg:DI 0 ax [orig:210 D.24838 ] [210])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:229 497 {*ashldi3_1}
     (nil))
(insn 932 931 933 49 (set (reg/f:DI 0 ax [698])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(insn 933 932 934 49 (parallel [
            (set (reg/f:DI 0 ax [orig:212 D.24840 ] [212])
                (plus:DI (reg/f:DI 0 ax [698])
                    (reg:DI 1 dx [orig:211 D.24838 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:229 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:211 D.24838 ] [211]))
        (nil)))
(insn 934 933 935 49 (set (reg/f:DI 0 ax [orig:213 D.24841 ] [213])
        (mem/f:DI (reg/f:DI 0 ax [orig:212 D.24840 ] [212]) [0 *_189+0 S8 A64])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(insn 935 934 936 49 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:213 D.24841 ] [213])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(call_insn 936 935 937 49 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:229 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 937 936 938 49 (set (reg:QI 0 ax [orig:214 D.24843 ] [214])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:229 93 {*movqi_internal}
     (nil))
(insn 938 937 939 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:214 D.24843 ] [214])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:229 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 939 938 940 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 957)
            (pc))) ge2fitman_com_line.cpp:229 596 {*jcc_1}
     (nil)
 -> 957)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 215 216 217 218 219 220 699 700 701
(note 940 939 941 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 941 940 942 50 (set (reg/f:DI 0 ax [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 942 941 943 50 (parallel [
            (set (reg/f:DI 0 ax [orig:215 D.24839 ] [215])
                (plus:DI (reg/f:DI 0 ax [699])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 943 942 944 50 (parallel [
            (set (reg/f:DI 1 dx [orig:216 D.24844 ] [216])
                (plus:DI (reg/f:DI 0 ax [orig:215 D.24839 ] [215])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 221 {*adddi_1}
     (nil))
(insn 944 943 945 50 (set (reg:SI 0 ax [700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:230 90 {*movsi_internal}
     (nil))
(insn 945 944 946 50 (set (reg:DI 0 ax [orig:217 D.24838 ] [217])
        (sign_extend:DI (reg:SI 0 ax [700]))) ge2fitman_com_line.cpp:230 142 {*extendsidi2_rex64}
     (nil))
(insn 946 945 947 50 (parallel [
            (set (reg:DI 2 cx [orig:218 D.24838 ] [218])
                (ashift:DI (reg:DI 0 ax [orig:217 D.24838 ] [217])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 497 {*ashldi3_1}
     (nil))
(insn 947 946 948 50 (set (reg/f:DI 0 ax [701])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 948 947 949 50 (parallel [
            (set (reg/f:DI 0 ax [orig:219 D.24840 ] [219])
                (plus:DI (reg/f:DI 0 ax [701])
                    (reg:DI 2 cx [orig:218 D.24838 ] [218])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:218 D.24838 ] [218]))
        (nil)))
(insn 949 948 951 50 (set (reg/f:DI 0 ax [orig:220 D.24841 ] [220])
        (mem/f:DI (reg/f:DI 0 ax [orig:219 D.24840 ] [219]) [0 *_197+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 951 949 952 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b86fe2db130 *.LC10>)) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 952 951 953 50 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:220 D.24841 ] [220])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 953 952 954 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:230 93 {*movqi_internal}
     (nil))
(call_insn 954 953 1851 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x2b86fcc58900 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:230 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1851 954 1852 50 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1852 1851 957)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 957 1852 958 51 30 "" [1 uses])
(note 958 957 959 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 959 958 1853 51 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -15 [0xfffffffffffffff1])) ge2fitman_com_line.cpp:232 90 {*movsi_internal}
     (nil))
(jump_insn 1853 959 1854 51 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:232 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1854 1853 962)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 962 1854 963 52 29 "" [1 uses])
(note 963 962 964 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 1855 52 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:236 90 {*movsi_internal}
     (nil))
(jump_insn 1855 964 1856 52 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:236 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1856 1855 967)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 221 222 223 224 225 702 703
(code_label 967 1856 968 53 28 "" [1 uses])
(note 968 967 969 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 970 53 (set (reg:SI 0 ax [702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:240 90 {*movsi_internal}
     (nil))
(insn 970 969 971 53 (set (reg:DI 0 ax [orig:221 D.24838 ] [221])
        (sign_extend:DI (reg:SI 0 ax [702]))) ge2fitman_com_line.cpp:240 142 {*extendsidi2_rex64}
     (nil))
(insn 971 970 972 53 (parallel [
            (set (reg:DI 1 dx [orig:222 D.24838 ] [222])
                (ashift:DI (reg:DI 0 ax [orig:221 D.24838 ] [221])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:240 497 {*ashldi3_1}
     (nil))
(insn 972 971 973 53 (set (reg/f:DI 0 ax [703])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 973 972 974 53 (parallel [
            (set (reg/f:DI 0 ax [orig:223 D.24840 ] [223])
                (plus:DI (reg/f:DI 0 ax [703])
                    (reg:DI 1 dx [orig:222 D.24838 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:240 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:222 D.24838 ] [222]))
        (nil)))
(insn 974 973 975 53 (set (reg/f:DI 0 ax [orig:224 D.24841 ] [224])
        (mem/f:DI (reg/f:DI 0 ax [orig:223 D.24840 ] [223]) [0 *_203+0 S8 A64])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 975 974 976 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b86fe2db260 *.LC12>)) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 976 975 977 53 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:224 D.24841 ] [224])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(call_insn/i 977 976 978 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:240 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 978 977 979 53 (set (reg:SI 0 ax [orig:225 D.24837 ] [225])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:240 90 {*movsi_internal}
     (nil))
(insn 979 978 980 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:225 D.24837 ] [225])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:240 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 980 979 981 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1015)
            (pc))) ge2fitman_com_line.cpp:240 596 {*jcc_1}
     (nil)
 -> 1015)
;;  succ:       54 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 226 227 228 229 230 704 705
(note 981 980 982 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 982 981 983 54 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:241 220 {*addsi_1}
     (nil))
(insn 983 982 984 54 (set (reg:SI 0 ax [704])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:242 90 {*movsi_internal}
     (nil))
(insn 984 983 985 54 (set (reg:DI 0 ax [orig:226 D.24838 ] [226])
        (sign_extend:DI (reg:SI 0 ax [704]))) ge2fitman_com_line.cpp:242 142 {*extendsidi2_rex64}
     (nil))
(insn 985 984 986 54 (parallel [
            (set (reg:DI 1 dx [orig:227 D.24838 ] [227])
                (ashift:DI (reg:DI 0 ax [orig:226 D.24838 ] [226])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:242 497 {*ashldi3_1}
     (nil))
(insn 986 985 987 54 (set (reg/f:DI 0 ax [705])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(insn 987 986 988 54 (parallel [
            (set (reg/f:DI 0 ax [orig:228 D.24840 ] [228])
                (plus:DI (reg/f:DI 0 ax [705])
                    (reg:DI 1 dx [orig:227 D.24838 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:242 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:227 D.24838 ] [227]))
        (nil)))
(insn 988 987 989 54 (set (reg/f:DI 0 ax [orig:229 D.24841 ] [229])
        (mem/f:DI (reg/f:DI 0 ax [orig:228 D.24840 ] [228]) [0 *_209+0 S8 A64])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(insn 989 988 990 54 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:229 D.24841 ] [229])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn 990 989 991 54 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x2b86fe217400 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:242 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 991 990 992 54 (set (reg:QI 0 ax [orig:230 D.24843 ] [230])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:242 93 {*movqi_internal}
     (nil))
(insn 992 991 993 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:230 D.24843 ] [230])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:242 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 993 992 994 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1010)
            (pc))) ge2fitman_com_line.cpp:242 596 {*jcc_1}
     (nil)
 -> 1010)
;;  succ:       55 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 231 232 233 234 235 706 707 708
(note 994 993 995 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 995 994 996 55 (set (reg/f:DI 0 ax [706])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 996 995 997 55 (parallel [
            (set (reg/f:DI 1 dx [orig:231 D.24844 ] [231])
                (plus:DI (reg/f:DI 0 ax [706])
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 997 996 998 55 (set (reg:SI 0 ax [707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:243 90 {*movsi_internal}
     (nil))
(insn 998 997 999 55 (set (reg:DI 0 ax [orig:232 D.24838 ] [232])
        (sign_extend:DI (reg:SI 0 ax [707]))) ge2fitman_com_line.cpp:243 142 {*extendsidi2_rex64}
     (nil))
(insn 999 998 1000 55 (parallel [
            (set (reg:DI 2 cx [orig:233 D.24838 ] [233])
                (ashift:DI (reg:DI 0 ax [orig:232 D.24838 ] [232])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 497 {*ashldi3_1}
     (nil))
(insn 1000 999 1001 55 (set (reg/f:DI 0 ax [708])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1001 1000 1002 55 (parallel [
            (set (reg/f:DI 0 ax [orig:234 D.24840 ] [234])
                (plus:DI (reg/f:DI 0 ax [708])
                    (reg:DI 2 cx [orig:233 D.24838 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:233 D.24838 ] [233]))
        (nil)))
(insn 1002 1001 1004 55 (set (reg/f:DI 0 ax [orig:235 D.24841 ] [235])
        (mem/f:DI (reg/f:DI 0 ax [orig:234 D.24840 ] [234]) [0 *_216+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1004 1002 1005 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b86fe2db130 *.LC10>)) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1005 1004 1006 55 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:235 D.24841 ] [235])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 55 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:243 93 {*movqi_internal}
     (nil))
(call_insn 1007 1006 1857 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x2b86fcc58900 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:243 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1857 1007 1858 55 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1858 1857 1010)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1010 1858 1011 56 32 "" [1 uses])
(note 1011 1010 1012 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1012 1011 1859 56 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -16 [0xfffffffffffffff0])) ge2fitman_com_line.cpp:245 90 {*movsi_internal}
     (nil))
(jump_insn 1859 1012 1860 56 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:245 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1860 1859 1015)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 236 237 238 239 240 709 710
(code_label 1015 1860 1016 57 31 "" [1 uses])
(note 1016 1015 1017 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1017 1016 1018 57 (set (reg:SI 0 ax [709])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:249 90 {*movsi_internal}
     (nil))
(insn 1018 1017 1019 57 (set (reg:DI 0 ax [orig:236 D.24838 ] [236])
        (sign_extend:DI (reg:SI 0 ax [709]))) ge2fitman_com_line.cpp:249 142 {*extendsidi2_rex64}
     (nil))
(insn 1019 1018 1020 57 (parallel [
            (set (reg:DI 1 dx [orig:237 D.24838 ] [237])
                (ashift:DI (reg:DI 0 ax [orig:236 D.24838 ] [236])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:249 497 {*ashldi3_1}
     (nil))
(insn 1020 1019 1021 57 (set (reg/f:DI 0 ax [710])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1021 1020 1022 57 (parallel [
            (set (reg/f:DI 0 ax [orig:238 D.24840 ] [238])
                (plus:DI (reg/f:DI 0 ax [710])
                    (reg:DI 1 dx [orig:237 D.24838 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:249 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:237 D.24838 ] [237]))
        (nil)))
(insn 1022 1021 1023 57 (set (reg/f:DI 0 ax [orig:239 D.24841 ] [239])
        (mem/f:DI (reg/f:DI 0 ax [orig:238 D.24840 ] [238]) [0 *_221+0 S8 A64])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1023 1022 1024 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b86fe2db2f8 *.LC13>)) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1024 1023 1025 57 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:239 D.24841 ] [239])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(call_insn/i 1025 1024 1026 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:249 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1026 1025 1027 57 (set (reg:SI 0 ax [orig:240 D.24837 ] [240])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:249 90 {*movsi_internal}
     (nil))
(insn 1027 1026 1028 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:240 D.24837 ] [240])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:249 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1028 1027 1029 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1036)
            (pc))) ge2fitman_com_line.cpp:249 596 {*jcc_1}
     (nil)
 -> 1036)
;;  succ:       58 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 241 711
(note 1029 1028 1030 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1030 1029 1031 58 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:250 93 {*movqi_internal}
     (nil))
(insn 1031 1030 1032 58 (set (reg/f:DI 0 ax [711])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:251 89 {*movdi_internal}
     (nil))
(insn 1032 1031 1033 58 (parallel [
            (set (reg/f:DI 0 ax [orig:241 D.24839 ] [241])
                (plus:DI (reg/f:DI 0 ax [711])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:251 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1033 1032 1861 58 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:241 D.24839 ] [241])
                (const_int 32 [0x20])) [0 _225->max_normalize+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:251 90 {*movsi_internal}
     (nil))
(jump_insn 1861 1033 1862 58 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1862 1861 1036)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 242 243 244 245 246 712 713
(code_label 1036 1862 1037 59 33 "" [1 uses])
(note 1037 1036 1038 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1038 1037 1039 59 (set (reg:SI 0 ax [712])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:254 90 {*movsi_internal}
     (nil))
(insn 1039 1038 1040 59 (set (reg:DI 0 ax [orig:242 D.24838 ] [242])
        (sign_extend:DI (reg:SI 0 ax [712]))) ge2fitman_com_line.cpp:254 142 {*extendsidi2_rex64}
     (nil))
(insn 1040 1039 1041 59 (parallel [
            (set (reg:DI 1 dx [orig:243 D.24838 ] [243])
                (ashift:DI (reg:DI 0 ax [orig:242 D.24838 ] [242])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:254 497 {*ashldi3_1}
     (nil))
(insn 1041 1040 1042 59 (set (reg/f:DI 0 ax [713])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 59 (parallel [
            (set (reg/f:DI 0 ax [orig:244 D.24840 ] [244])
                (plus:DI (reg/f:DI 0 ax [713])
                    (reg:DI 1 dx [orig:243 D.24838 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:254 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:243 D.24838 ] [243]))
        (nil)))
(insn 1043 1042 1044 59 (set (reg/f:DI 0 ax [orig:245 D.24841 ] [245])
        (mem/f:DI (reg/f:DI 0 ax [orig:244 D.24840 ] [244]) [0 *_228+0 S8 A64])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1044 1043 1045 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b86fe2db390 *.LC14>)) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1045 1044 1046 59 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:245 D.24841 ] [245])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(call_insn/i 1046 1045 1047 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:254 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1047 1046 1048 59 (set (reg:SI 0 ax [orig:246 D.24837 ] [246])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:254 90 {*movsi_internal}
     (nil))
(insn 1048 1047 1049 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:246 D.24837 ] [246])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:254 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1049 1048 1050 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1056)
            (pc))) ge2fitman_com_line.cpp:254 596 {*jcc_1}
     (nil)
 -> 1056)
;;  succ:       60 (FALLTHRU)
;;              61
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 714
(note 1050 1049 1051 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1051 1050 1052 60 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:256 93 {*movqi_internal}
     (nil))
(insn 1052 1051 1053 60 (set (reg/f:DI 0 ax [714])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:257 89 {*movdi_internal}
     (nil))
(insn 1053 1052 1863 60 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [714])
                (const_int 52 [0x34])) [0 preprocess_44(D)->pre_quecc_if+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:257 90 {*movsi_internal}
     (nil))
(jump_insn 1863 1053 1864 60 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1864 1863 1056)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 247 248 249 250 251 715 716
(code_label 1056 1864 1057 61 34 "" [1 uses])
(note 1057 1056 1058 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 61 (set (reg:SI 0 ax [715])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:260 90 {*movsi_internal}
     (nil))
(insn 1059 1058 1060 61 (set (reg:DI 0 ax [orig:247 D.24838 ] [247])
        (sign_extend:DI (reg:SI 0 ax [715]))) ge2fitman_com_line.cpp:260 142 {*extendsidi2_rex64}
     (nil))
(insn 1060 1059 1061 61 (parallel [
            (set (reg:DI 1 dx [orig:248 D.24838 ] [248])
                (ashift:DI (reg:DI 0 ax [orig:247 D.24838 ] [247])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:260 497 {*ashldi3_1}
     (nil))
(insn 1061 1060 1062 61 (set (reg/f:DI 0 ax [716])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1062 1061 1063 61 (parallel [
            (set (reg/f:DI 0 ax [orig:249 D.24840 ] [249])
                (plus:DI (reg/f:DI 0 ax [716])
                    (reg:DI 1 dx [orig:248 D.24838 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:260 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:248 D.24838 ] [248]))
        (nil)))
(insn 1063 1062 1064 61 (set (reg/f:DI 0 ax [orig:250 D.24841 ] [250])
        (mem/f:DI (reg/f:DI 0 ax [orig:249 D.24840 ] [249]) [0 *_234+0 S8 A64])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1064 1063 1065 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b86fe2db428 *.LC15>)) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1065 1064 1066 61 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:250 D.24841 ] [250])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(call_insn/i 1066 1065 1067 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:260 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1067 1066 1068 61 (set (reg:SI 0 ax [orig:251 D.24837 ] [251])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:260 90 {*movsi_internal}
     (nil))
(insn 1068 1067 1069 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:251 D.24837 ] [251])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1069 1068 1070 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1078)
            (pc))) ge2fitman_com_line.cpp:260 596 {*jcc_1}
     (nil)
 -> 1078)
;;  succ:       62 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 717
(note 1070 1069 1071 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1071 1070 1072 62 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:262 93 {*movqi_internal}
     (nil))
(insn 1072 1071 1073 62 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [0 rif_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:263 93 {*movqi_internal}
     (nil))
(insn 1073 1072 1074 62 (set (reg/f:DI 0 ax [717])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1074 1073 1075 62 (parallel [
            (set (reg/f:DI 0 ax [orig:252 D.24839 ] [252])
                (plus:DI (reg/f:DI 0 ax [717])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:264 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1075 1074 1865 62 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:252 D.24839 ] [252])
                (const_int 52 [0x34])) [0 _239->pre_quecc_if+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:264 90 {*movsi_internal}
     (nil))
(jump_insn 1865 1075 1866 62 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1866 1865 1078)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 253 254 255 256 257 718 719
(code_label 1078 1866 1079 63 35 "" [1 uses])
(note 1079 1078 1080 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1079 1081 63 (set (reg:SI 0 ax [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:267 90 {*movsi_internal}
     (nil))
(insn 1081 1080 1082 63 (set (reg:DI 0 ax [orig:253 D.24838 ] [253])
        (sign_extend:DI (reg:SI 0 ax [718]))) ge2fitman_com_line.cpp:267 142 {*extendsidi2_rex64}
     (nil))
(insn 1082 1081 1083 63 (parallel [
            (set (reg:DI 1 dx [orig:254 D.24838 ] [254])
                (ashift:DI (reg:DI 0 ax [orig:253 D.24838 ] [253])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:267 497 {*ashldi3_1}
     (nil))
(insn 1083 1082 1084 63 (set (reg/f:DI 0 ax [719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1084 1083 1085 63 (parallel [
            (set (reg/f:DI 0 ax [orig:255 D.24840 ] [255])
                (plus:DI (reg/f:DI 0 ax [719])
                    (reg:DI 1 dx [orig:254 D.24838 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:267 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:254 D.24838 ] [254]))
        (nil)))
(insn 1085 1084 1086 63 (set (reg/f:DI 0 ax [orig:256 D.24841 ] [256])
        (mem/f:DI (reg/f:DI 0 ax [orig:255 D.24840 ] [255]) [0 *_242+0 S8 A64])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1086 1085 1087 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b86fe2db4c0 *.LC16>)) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1087 1086 1088 63 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:256 D.24841 ] [256])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(call_insn/i 1088 1087 1089 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:267 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1089 1088 1090 63 (set (reg:SI 0 ax [orig:257 D.24837 ] [257])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:267 90 {*movsi_internal}
     (nil))
(insn 1090 1089 1091 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:257 D.24837 ] [257])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:267 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1091 1090 1092 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1098)
            (pc))) ge2fitman_com_line.cpp:267 596 {*jcc_1}
     (nil)
 -> 1098)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 720
(note 1092 1091 1093 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1093 1092 1094 64 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:269 93 {*movqi_internal}
     (nil))
(insn 1094 1093 1095 64 (set (reg/f:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:270 89 {*movdi_internal}
     (nil))
(insn 1095 1094 1867 64 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [720])
                (const_int 16 [0x10])) [0 preprocess_44(D)->bc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:270 90 {*movsi_internal}
     (nil))
(jump_insn 1867 1095 1868 64 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1868 1867 1098)
;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 258 259 260 261 262 721 722
(code_label 1098 1868 1099 65 36 "" [1 uses])
(note 1099 1098 1100 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1100 1099 1101 65 (set (reg:SI 0 ax [721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:273 90 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 65 (set (reg:DI 0 ax [orig:258 D.24838 ] [258])
        (sign_extend:DI (reg:SI 0 ax [721]))) ge2fitman_com_line.cpp:273 142 {*extendsidi2_rex64}
     (nil))
(insn 1102 1101 1103 65 (parallel [
            (set (reg:DI 1 dx [orig:259 D.24838 ] [259])
                (ashift:DI (reg:DI 0 ax [orig:258 D.24838 ] [258])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:273 497 {*ashldi3_1}
     (nil))
(insn 1103 1102 1104 65 (set (reg/f:DI 0 ax [722])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1104 1103 1105 65 (parallel [
            (set (reg/f:DI 0 ax [orig:260 D.24840 ] [260])
                (plus:DI (reg/f:DI 0 ax [722])
                    (reg:DI 1 dx [orig:259 D.24838 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:273 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:259 D.24838 ] [259]))
        (nil)))
(insn 1105 1104 1106 65 (set (reg/f:DI 0 ax [orig:261 D.24841 ] [261])
        (mem/f:DI (reg/f:DI 0 ax [orig:260 D.24840 ] [260]) [0 *_248+0 S8 A64])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1106 1105 1107 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b86fe2db558 *.LC17>)) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1107 1106 1108 65 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:261 D.24841 ] [261])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(call_insn/i 1108 1107 1109 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:273 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1109 1108 1110 65 (set (reg:SI 0 ax [orig:262 D.24837 ] [262])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:273 90 {*movsi_internal}
     (nil))
(insn 1110 1109 1111 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:262 D.24837 ] [262])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:273 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1111 1110 1112 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1120)
            (pc))) ge2fitman_com_line.cpp:273 596 {*jcc_1}
     (nil)
 -> 1120)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 263 723
(note 1112 1111 1113 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1113 1112 1114 66 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:275 93 {*movqi_internal}
     (nil))
(insn 1114 1113 1115 66 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -813 [0xfffffffffffffcd3])) [0 rbc_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:276 93 {*movqi_internal}
     (nil))
(insn 1115 1114 1116 66 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:277 89 {*movdi_internal}
     (nil))
(insn 1116 1115 1117 66 (parallel [
            (set (reg/f:DI 0 ax [orig:263 D.24839 ] [263])
                (plus:DI (reg/f:DI 0 ax [723])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:277 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1117 1116 1869 66 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:263 D.24839 ] [263])
                (const_int 16 [0x10])) [0 _253->bc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:277 90 {*movsi_internal}
     (nil))
(jump_insn 1869 1117 1870 66 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1870 1869 1120)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 264 265 266 267 268 724 725
(code_label 1120 1870 1121 67 37 "" [1 uses])
(note 1121 1120 1122 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1122 1121 1123 67 (set (reg:SI 0 ax [724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:279 90 {*movsi_internal}
     (nil))
(insn 1123 1122 1124 67 (set (reg:DI 0 ax [orig:264 D.24838 ] [264])
        (sign_extend:DI (reg:SI 0 ax [724]))) ge2fitman_com_line.cpp:279 142 {*extendsidi2_rex64}
     (nil))
(insn 1124 1123 1125 67 (parallel [
            (set (reg:DI 1 dx [orig:265 D.24838 ] [265])
                (ashift:DI (reg:DI 0 ax [orig:264 D.24838 ] [264])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:279 497 {*ashldi3_1}
     (nil))
(insn 1125 1124 1126 67 (set (reg/f:DI 0 ax [725])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1126 1125 1127 67 (parallel [
            (set (reg/f:DI 0 ax [orig:266 D.24840 ] [266])
                (plus:DI (reg/f:DI 0 ax [725])
                    (reg:DI 1 dx [orig:265 D.24838 ] [265])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:279 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:265 D.24838 ] [265]))
        (nil)))
(insn 1127 1126 1128 67 (set (reg/f:DI 0 ax [orig:267 D.24841 ] [267])
        (mem/f:DI (reg/f:DI 0 ax [orig:266 D.24840 ] [266]) [0 *_256+0 S8 A64])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1128 1127 1129 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b86fe2db5f0 *.LC18>)) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1129 1128 1130 67 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:267 D.24841 ] [267])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(call_insn/i 1130 1129 1131 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:279 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1131 1130 1132 67 (set (reg:SI 0 ax [orig:268 D.24837 ] [268])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:279 90 {*movsi_internal}
     (nil))
(insn 1132 1131 1133 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:268 D.24837 ] [268])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:279 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1133 1132 1134 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1207)
            (pc))) ge2fitman_com_line.cpp:279 596 {*jcc_1}
     (nil)
 -> 1207)
;;  succ:       68 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1134 1133 1135 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1135 1134 1136 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:281 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1136 1135 1137 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1140)
            (pc))) ge2fitman_com_line.cpp:281 596 {*jcc_1}
     (nil)
 -> 1140)
;;  succ:       70
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1137 1136 1138 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1138 1137 1139 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:281 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1139 1138 1140 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1145)
            (pc))) ge2fitman_com_line.cpp:281 596 {*jcc_1}
     (nil)
 -> 1145)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;;              69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1140 1139 1141 70 39 "" [1 uses])
(note 1141 1140 1142 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1871 70 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -9 [0xfffffffffffffff7])) ge2fitman_com_line.cpp:283 90 {*movsi_internal}
     (nil))
(jump_insn 1871 1142 1872 70 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:283 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1872 1871 1145)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 269 270 726
(code_label 1145 1872 1146 71 40 "" [1 uses])
(note 1146 1145 1147 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1147 1146 1148 71 (set (reg/f:DI 0 ax [726])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(insn 1148 1147 1149 71 (parallel [
            (set (reg/f:DI 0 ax [orig:269 D.24845 ] [269])
                (plus:DI (reg/f:DI 0 ax [726])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:284 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1149 1148 1150 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b86fe2db688 *.LC19>)) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(insn 1150 1149 1151 71 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:269 D.24845 ] [269])) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(call_insn/i 1151 1150 1152 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:284 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1152 1151 1153 71 (set (reg:SI 0 ax [orig:270 D.24837 ] [270])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:284 90 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:270 D.24837 ] [270])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1154 1153 1155 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1159)
            (pc))) ge2fitman_com_line.cpp:284 596 {*jcc_1}
     (nil)
 -> 1159)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1155 1154 1156 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1873 72 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:286 90 {*movsi_internal}
     (nil))
(jump_insn 1873 1156 1874 72 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:286 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1874 1873 1159)
;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1159 1874 1160 73 41 "" [1 uses])
(note 1160 1159 1161 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1161 1160 1162 73 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:288 93 {*movqi_internal}
     (nil))
(insn 1162 1161 1163 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -814 [0xfffffffffffffcd2])) [0 rscale_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1163 1162 1164 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1170)
            (pc))) ge2fitman_com_line.cpp:289 596 {*jcc_1}
     (nil)
 -> 1170)
;;  succ:       76
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1164 1163 1165 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1165 1164 1166 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -813 [0xfffffffffffffcd3])) [0 rbc_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1166 1165 1167 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1170)
            (pc))) ge2fitman_com_line.cpp:289 596 {*jcc_1}
     (nil)
 -> 1170)
;;  succ:       76
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1167 1166 1168 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1168 1167 1169 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -812 [0xfffffffffffffcd4])) [0 rif_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1169 1168 1170 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1173)
            (pc))) ge2fitman_com_line.cpp:289 596 {*jcc_1}
     (nil)
 -> 1173)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              74
;;              75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(code_label 1170 1169 1171 76 42 "" [2 uses])
(note 1171 1170 1172 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(call_insn 1172 1171 1173 76 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_21v") [flags 0x41]  <function_decl 0x2b86fe21f800 cond_exit_21>) [0 cond_exit_21 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:291 642 {*call}
     (nil)
    (nil))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 271 272 273 274 275 276 277 278 279 280 281 282 727 728 729 730 731 732 733 734 735 736 737 738
(code_label 1173 1172 1174 77 43 "" [1 uses])
(note 1174 1173 1175 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1175 1174 1176 77 (set (reg/f:DI 0 ax [727])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:293 89 {*movdi_internal}
     (nil))
(insn 1176 1175 1177 77 (parallel [
            (set (reg/f:DI 1 dx [orig:271 D.24839 ] [271])
                (plus:DI (reg/f:DI 0 ax [727])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:293 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1177 1176 1178 77 (set (reg/f:DI 0 ax [728])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:293 89 {*movdi_internal}
     (nil))
(insn 1178 1177 1179 77 (set (reg:SI 0 ax [orig:272 D.24837 ] [272])
        (mem/j:SI (reg/f:DI 0 ax [728]) [0 preprocess_44(D)->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:293 90 {*movsi_internal}
     (nil))
(insn 1179 1178 1180 77 (set (mem/j:SI (reg/f:DI 1 dx [orig:271 D.24839 ] [271]) [0 _263->fid_scale+0 S4 A32])
        (reg:SI 0 ax [orig:272 D.24837 ] [272])) ge2fitman_com_line.cpp:293 90 {*movsi_internal}
     (nil))
(insn 1180 1179 1181 77 (set (reg/f:DI 0 ax [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:294 89 {*movdi_internal}
     (nil))
(insn 1181 1180 1182 77 (parallel [
            (set (reg/f:DI 1 dx [orig:273 D.24839 ] [273])
                (plus:DI (reg/f:DI 0 ax [729])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:294 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1182 1181 1183 77 (set (reg/f:DI 0 ax [730])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:294 89 {*movdi_internal}
     (nil))
(insn 1183 1182 1184 77 (set (reg:SF 0 ax [orig:274 D.24846 ] [274])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [730])
                (const_int 4 [0x4])) [0 preprocess_44(D)->scale_factor+0 S4 A32])) ge2fitman_com_line.cpp:294 129 {*movsf_internal}
     (nil))
(insn 1184 1183 1185 77 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:273 D.24839 ] [273])
                (const_int 4 [0x4])) [0 _265->scale_factor+0 S4 A32])
        (reg:SF 0 ax [orig:274 D.24846 ] [274])) ge2fitman_com_line.cpp:294 129 {*movsf_internal}
     (nil))
(insn 1185 1184 1186 77 (set (reg/f:DI 0 ax [731])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:295 89 {*movdi_internal}
     (nil))
(insn 1186 1185 1187 77 (parallel [
            (set (reg/f:DI 1 dx [orig:275 D.24839 ] [275])
                (plus:DI (reg/f:DI 0 ax [731])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:295 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1187 1186 1188 77 (set (reg/f:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:295 89 {*movdi_internal}
     (nil))
(insn 1188 1187 1189 77 (set (reg:SI 0 ax [orig:276 D.24837 ] [276])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [732])
                (const_int 8 [0x8])) [0 preprocess_44(D)->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:295 90 {*movsi_internal}
     (nil))
(insn 1189 1188 1190 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:275 D.24839 ] [275])
                (const_int 8 [0x8])) [0 _267->scaleby+0 S4 A32])
        (reg:SI 0 ax [orig:276 D.24837 ] [276])) ge2fitman_com_line.cpp:295 90 {*movsi_internal}
     (nil))
(insn 1190 1189 1191 77 (set (reg/f:DI 0 ax [733])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:296 89 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 77 (parallel [
            (set (reg/f:DI 1 dx [orig:277 D.24839 ] [277])
                (plus:DI (reg/f:DI 0 ax [733])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:296 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1192 1191 1193 77 (set (reg/f:DI 0 ax [734])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:296 89 {*movdi_internal}
     (nil))
(insn 1193 1192 1194 77 (set (reg:SI 0 ax [orig:278 D.24837 ] [278])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [734])
                (const_int 16 [0x10])) [0 preprocess_44(D)->bc+0 S4 A32])) ge2fitman_com_line.cpp:296 90 {*movsi_internal}
     (nil))
(insn 1194 1193 1195 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:277 D.24839 ] [277])
                (const_int 16 [0x10])) [0 _269->bc+0 S4 A32])
        (reg:SI 0 ax [orig:278 D.24837 ] [278])) ge2fitman_com_line.cpp:296 90 {*movsi_internal}
     (nil))
(insn 1195 1194 1196 77 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:297 89 {*movdi_internal}
     (nil))
(insn 1196 1195 1197 77 (parallel [
            (set (reg/f:DI 1 dx [orig:279 D.24839 ] [279])
                (plus:DI (reg/f:DI 0 ax [735])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:297 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1197 1196 1198 77 (set (reg/f:DI 0 ax [736])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:297 89 {*movdi_internal}
     (nil))
(insn 1198 1197 1199 77 (set (reg:SI 0 ax [orig:280 D.24837 ] [280])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [736])
                (const_int 52 [0x34])) [0 preprocess_44(D)->pre_quecc_if+0 S4 A32])) ge2fitman_com_line.cpp:297 90 {*movsi_internal}
     (nil))
(insn 1199 1198 1200 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:279 D.24839 ] [279])
                (const_int 52 [0x34])) [0 _271->pre_quecc_if+0 S4 A32])
        (reg:SI 0 ax [orig:280 D.24837 ] [280])) ge2fitman_com_line.cpp:297 90 {*movsi_internal}
     (nil))
(insn 1200 1199 1201 77 (set (reg/f:DI 0 ax [737])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:298 89 {*movdi_internal}
     (nil))
(insn 1201 1200 1202 77 (parallel [
            (set (reg/f:DI 1 dx [orig:281 D.24839 ] [281])
                (plus:DI (reg/f:DI 0 ax [737])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:298 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -824 [0xfffffffffffffcc8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1202 1201 1203 77 (set (reg/f:DI 0 ax [738])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:298 89 {*movdi_internal}
     (nil))
(insn 1203 1202 1204 77 (set (reg:SF 0 ax [orig:282 D.24846 ] [282])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [738])
                (const_int 28 [0x1c])) [0 preprocess_44(D)->comp_filter+0 S4 A32])) ge2fitman_com_line.cpp:298 129 {*movsf_internal}
     (nil))
(insn 1204 1203 1875 77 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:281 D.24839 ] [281])
                (const_int 28 [0x1c])) [0 _273->comp_filter+0 S4 A32])
        (reg:SF 0 ax [orig:282 D.24846 ] [282])) ge2fitman_com_line.cpp:298 129 {*movsf_internal}
     (nil))
(jump_insn 1875 1204 1876 77 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1876 1875 1207)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 283 284 285 286 287 739 740
(code_label 1207 1876 1208 78 38 "" [1 uses])
(note 1208 1207 1209 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1209 1208 1210 78 (set (reg:SI 0 ax [739])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:301 90 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 78 (set (reg:DI 0 ax [orig:283 D.24838 ] [283])
        (sign_extend:DI (reg:SI 0 ax [739]))) ge2fitman_com_line.cpp:301 142 {*extendsidi2_rex64}
     (nil))
(insn 1211 1210 1212 78 (parallel [
            (set (reg:DI 1 dx [orig:284 D.24838 ] [284])
                (ashift:DI (reg:DI 0 ax [orig:283 D.24838 ] [283])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:301 497 {*ashldi3_1}
     (nil))
(insn 1212 1211 1213 78 (set (reg/f:DI 0 ax [740])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1213 1212 1214 78 (parallel [
            (set (reg/f:DI 0 ax [orig:285 D.24840 ] [285])
                (plus:DI (reg/f:DI 0 ax [740])
                    (reg:DI 1 dx [orig:284 D.24838 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:301 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:284 D.24838 ] [284]))
        (nil)))
(insn 1214 1213 1215 78 (set (reg/f:DI 0 ax [orig:286 D.24841 ] [286])
        (mem/f:DI (reg/f:DI 0 ax [orig:285 D.24840 ] [285]) [0 *_279+0 S8 A64])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1215 1214 1216 78 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b86fe2db720 *.LC20>)) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1216 1215 1217 78 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:286 D.24841 ] [286])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(call_insn/i 1217 1216 1218 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:301 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1218 1217 1219 78 (set (reg:SI 0 ax [orig:287 D.24837 ] [287])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:301 90 {*movsi_internal}
     (nil))
(insn 1219 1218 1220 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:287 D.24837 ] [287])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:301 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1220 1219 1221 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) ge2fitman_com_line.cpp:301 596 {*jcc_1}
     (nil)
 -> 1251)
;;  succ:       79 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1221 1220 1222 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:303 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1223 1222 1224 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1227)
            (pc))) ge2fitman_com_line.cpp:303 596 {*jcc_1}
     (nil)
 -> 1227)
;;  succ:       81
;;              80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1224 1223 1225 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1225 1224 1226 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:303 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1226 1225 1227 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1232)
            (pc))) ge2fitman_com_line.cpp:303 596 {*jcc_1}
     (nil)
 -> 1232)
;;  succ:       81 (FALLTHRU)
;;              82
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1227 1226 1228 81 45 "" [1 uses])
(note 1228 1227 1229 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1229 1228 1877 81 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -9 [0xfffffffffffffff7])) ge2fitman_com_line.cpp:305 90 {*movsi_internal}
     (nil))
(jump_insn 1877 1229 1878 81 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:305 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1878 1877 1232)
;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 288 289 741
(code_label 1232 1878 1233 82 46 "" [1 uses])
(note 1233 1232 1234 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1234 1233 1235 82 (set (reg/f:DI 0 ax [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(insn 1235 1234 1236 82 (parallel [
            (set (reg/f:DI 0 ax [orig:288 D.24845 ] [288])
                (plus:DI (reg/f:DI 0 ax [741])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:306 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1236 1235 1237 82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b86fe2db688 *.LC19>)) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(insn 1237 1236 1238 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:288 D.24845 ] [288])) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(call_insn/i 1238 1237 1239 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:306 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1239 1238 1240 82 (set (reg:SI 0 ax [orig:289 D.24837 ] [289])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:306 90 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:289 D.24837 ] [289])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:306 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1241 1240 1242 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1246)
            (pc))) ge2fitman_com_line.cpp:306 596 {*jcc_1}
     (nil)
 -> 1246)
;;  succ:       83 (FALLTHRU)
;;              84
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1242 1241 1243 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1243 1242 1879 83 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:308 90 {*movsi_internal}
     (nil))
(jump_insn 1879 1243 1880 83 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:308 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1880 1879 1246)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1246 1880 1247 84 47 "" [1 uses])
(note 1247 1246 1248 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1248 1247 1881 84 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:310 93 {*movqi_internal}
     (nil))
(jump_insn 1881 1248 1882 84 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1882 1881 1251)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 290 291 292 293 294 742 743
(code_label 1251 1882 1252 85 44 "" [1 uses])
(note 1252 1251 1253 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1253 1252 1254 85 (set (reg:SI 0 ax [742])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:314 90 {*movsi_internal}
     (nil))
(insn 1254 1253 1255 85 (set (reg:DI 0 ax [orig:290 D.24838 ] [290])
        (sign_extend:DI (reg:SI 0 ax [742]))) ge2fitman_com_line.cpp:314 142 {*extendsidi2_rex64}
     (nil))
(insn 1255 1254 1256 85 (parallel [
            (set (reg:DI 1 dx [orig:291 D.24838 ] [291])
                (ashift:DI (reg:DI 0 ax [orig:290 D.24838 ] [290])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:314 497 {*ashldi3_1}
     (nil))
(insn 1256 1255 1257 85 (set (reg/f:DI 0 ax [743])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1257 1256 1258 85 (parallel [
            (set (reg/f:DI 0 ax [orig:292 D.24840 ] [292])
                (plus:DI (reg/f:DI 0 ax [743])
                    (reg:DI 1 dx [orig:291 D.24838 ] [291])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:314 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:291 D.24838 ] [291]))
        (nil)))
(insn 1258 1257 1259 85 (set (reg/f:DI 0 ax [orig:293 D.24841 ] [293])
        (mem/f:DI (reg/f:DI 0 ax [orig:292 D.24840 ] [292]) [0 *_289+0 S8 A64])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1259 1258 1260 85 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b86fe2db7b8 *.LC21>)) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1260 1259 1261 85 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:293 D.24841 ] [293])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(call_insn/i 1261 1260 1262 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:314 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1262 1261 1263 85 (set (reg:SI 0 ax [orig:294 D.24837 ] [294])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:314 90 {*movsi_internal}
     (nil))
(insn 1263 1262 1264 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:294 D.24837 ] [294])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:314 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1264 1263 1265 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1281)
            (pc))) ge2fitman_com_line.cpp:314 596 {*jcc_1}
     (nil)
 -> 1281)
;;  succ:       86 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 295 744
(note 1265 1264 1266 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1266 1265 1267 86 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:316 93 {*movqi_internal}
     (nil))
(insn 1267 1266 1268 86 (set (reg/f:DI 0 ax [744])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:317 89 {*movdi_internal}
     (nil))
(insn 1268 1267 1269 86 (set (reg:SI 0 ax [orig:295 D.24837 ] [295])
        (mem:SI (reg/f:DI 0 ax [744]) [0 *forced_swap_293(D)+0 S4 A32])) ge2fitman_com_line.cpp:317 90 {*movsi_internal}
     (nil))
(insn 1269 1268 1270 86 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:295 D.24837 ] [295])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:317 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1270 1269 1271 86 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1275)
            (pc))) ge2fitman_com_line.cpp:317 596 {*jcc_1}
     (nil)
 -> 1275)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1271 1270 1272 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1272 1271 1883 87 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:319 90 {*movsi_internal}
     (nil))
(jump_insn 1883 1272 1884 87 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:319 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1884 1883 1275)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 745
(code_label 1275 1884 1276 88 49 "" [1 uses])
(note 1276 1275 1277 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1277 1276 1278 88 (set (reg/f:DI 0 ax [745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:321 89 {*movdi_internal}
     (nil))
(insn 1278 1277 1885 88 (set (mem:SI (reg/f:DI 0 ax [745]) [0 *forced_swap_293(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:321 90 {*movsi_internal}
     (nil))
(jump_insn 1885 1278 1886 88 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1886 1885 1281)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 296 297 298 299 300 746 747
(code_label 1281 1886 1282 89 48 "" [1 uses])
(note 1282 1281 1283 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1283 1282 1284 89 (set (reg:SI 0 ax [746])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:325 90 {*movsi_internal}
     (nil))
(insn 1284 1283 1285 89 (set (reg:DI 0 ax [orig:296 D.24838 ] [296])
        (sign_extend:DI (reg:SI 0 ax [746]))) ge2fitman_com_line.cpp:325 142 {*extendsidi2_rex64}
     (nil))
(insn 1285 1284 1286 89 (parallel [
            (set (reg:DI 1 dx [orig:297 D.24838 ] [297])
                (ashift:DI (reg:DI 0 ax [orig:296 D.24838 ] [296])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:325 497 {*ashldi3_1}
     (nil))
(insn 1286 1285 1287 89 (set (reg/f:DI 0 ax [747])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1287 1286 1288 89 (parallel [
            (set (reg/f:DI 0 ax [orig:298 D.24840 ] [298])
                (plus:DI (reg/f:DI 0 ax [747])
                    (reg:DI 1 dx [orig:297 D.24838 ] [297])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:325 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:297 D.24838 ] [297]))
        (nil)))
(insn 1288 1287 1289 89 (set (reg/f:DI 0 ax [orig:299 D.24841 ] [299])
        (mem/f:DI (reg/f:DI 0 ax [orig:298 D.24840 ] [298]) [0 *_298+0 S8 A64])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1289 1288 1290 89 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b86fe2db850 *.LC22>)) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1290 1289 1291 89 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:299 D.24841 ] [299])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(call_insn/i 1291 1290 1292 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:325 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1292 1291 1293 89 (set (reg:SI 0 ax [orig:300 D.24837 ] [300])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:325 90 {*movsi_internal}
     (nil))
(insn 1293 1292 1294 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:300 D.24837 ] [300])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:325 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1294 1293 1295 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1313)
            (pc))) ge2fitman_com_line.cpp:325 596 {*jcc_1}
     (nil)
 -> 1313)
;;  succ:       90 (FALLTHRU)
;;              93
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 301 302 748
(note 1295 1294 1296 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1296 1295 1297 90 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:327 93 {*movqi_internal}
     (nil))
(insn 1297 1296 1298 90 (set (reg/f:DI 0 ax [748])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:328 89 {*movdi_internal}
     (nil))
(insn 1298 1297 1299 90 (parallel [
            (set (reg/f:DI 0 ax [orig:301 D.24847 ] [301])
                (plus:DI (reg/f:DI 0 ax [748])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:328 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1299 1298 1300 90 (set (reg:SI 0 ax [orig:302 D.24837 ] [302])
        (mem:SI (reg/f:DI 0 ax [orig:301 D.24847 ] [301]) [0 *_302+0 S4 A32])) ge2fitman_com_line.cpp:328 90 {*movsi_internal}
     (nil))
(insn 1300 1299 1301 90 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:302 D.24837 ] [302])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:328 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1301 1300 1302 90 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1306)
            (pc))) ge2fitman_com_line.cpp:328 596 {*jcc_1}
     (nil)
 -> 1306)
;;  succ:       91 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1302 1301 1303 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1303 1302 1887 91 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:330 90 {*movsi_internal}
     (nil))
(jump_insn 1887 1303 1888 91 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:330 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1888 1887 1306)
;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 303 749
(code_label 1306 1888 1307 92 51 "" [1 uses])
(note 1307 1306 1308 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1308 1307 1309 92 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:332 89 {*movdi_internal}
     (nil))
(insn 1309 1308 1310 92 (parallel [
            (set (reg/f:DI 0 ax [orig:303 D.24847 ] [303])
                (plus:DI (reg/f:DI 0 ax [749])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:332 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1310 1309 1889 92 (set (mem:SI (reg/f:DI 0 ax [orig:303 D.24847 ] [303]) [0 *_304+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:332 90 {*movsi_internal}
     (nil))
(jump_insn 1889 1310 1890 92 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1890 1889 1313)
;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 304 305 306 307 308 750 751
(code_label 1313 1890 1314 93 50 "" [1 uses])
(note 1314 1313 1315 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1315 1314 1316 93 (set (reg:SI 0 ax [750])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:336 90 {*movsi_internal}
     (nil))
(insn 1316 1315 1317 93 (set (reg:DI 0 ax [orig:304 D.24838 ] [304])
        (sign_extend:DI (reg:SI 0 ax [750]))) ge2fitman_com_line.cpp:336 142 {*extendsidi2_rex64}
     (nil))
(insn 1317 1316 1318 93 (parallel [
            (set (reg:DI 1 dx [orig:305 D.24838 ] [305])
                (ashift:DI (reg:DI 0 ax [orig:304 D.24838 ] [304])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:336 497 {*ashldi3_1}
     (nil))
(insn 1318 1317 1319 93 (set (reg/f:DI 0 ax [751])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1319 1318 1320 93 (parallel [
            (set (reg/f:DI 0 ax [orig:306 D.24840 ] [306])
                (plus:DI (reg/f:DI 0 ax [751])
                    (reg:DI 1 dx [orig:305 D.24838 ] [305])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:336 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:305 D.24838 ] [305]))
        (nil)))
(insn 1320 1319 1321 93 (set (reg/f:DI 0 ax [orig:307 D.24841 ] [307])
        (mem/f:DI (reg/f:DI 0 ax [orig:306 D.24840 ] [306]) [0 *_308+0 S8 A64])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1321 1320 1322 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b86fe2db8e8 *.LC23>)) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1322 1321 1323 93 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:307 D.24841 ] [307])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(call_insn/i 1323 1322 1324 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:336 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1324 1323 1325 93 (set (reg:SI 0 ax [orig:308 D.24837 ] [308])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:336 90 {*movsi_internal}
     (nil))
(insn 1325 1324 1326 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:308 D.24837 ] [308])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:336 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1326 1325 1327 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1343)
            (pc))) ge2fitman_com_line.cpp:336 596 {*jcc_1}
     (nil)
 -> 1343)
;;  succ:       94 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 309 752
(note 1327 1326 1328 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1328 1327 1329 94 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:338 93 {*movqi_internal}
     (nil))
(insn 1329 1328 1330 94 (set (reg/f:DI 0 ax [752])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:339 89 {*movdi_internal}
     (nil))
(insn 1330 1329 1331 94 (set (reg:SI 0 ax [orig:309 D.24837 ] [309])
        (mem:SI (reg/f:DI 0 ax [752]) [0 *forced_swap_293(D)+0 S4 A32])) ge2fitman_com_line.cpp:339 90 {*movsi_internal}
     (nil))
(insn 1331 1330 1332 94 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:309 D.24837 ] [309])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:339 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1332 1331 1333 94 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) ge2fitman_com_line.cpp:339 596 {*jcc_1}
     (nil)
 -> 1337)
;;  succ:       95 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1333 1332 1334 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1334 1333 1891 95 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:341 90 {*movsi_internal}
     (nil))
(jump_insn 1891 1334 1892 95 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:341 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1892 1891 1337)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 753
(code_label 1337 1892 1338 96 53 "" [1 uses])
(note 1338 1337 1339 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 96 (set (reg/f:DI 0 ax [753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:343 89 {*movdi_internal}
     (nil))
(insn 1340 1339 1893 96 (set (mem:SI (reg/f:DI 0 ax [753]) [0 *forced_swap_293(D)+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:343 90 {*movsi_internal}
     (nil))
(jump_insn 1893 1340 1894 96 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1894 1893 1343)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 310 311 312 313 314 754 755
(code_label 1343 1894 1344 97 52 "" [1 uses])
(note 1344 1343 1345 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 1346 97 (set (reg:SI 0 ax [754])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:347 90 {*movsi_internal}
     (nil))
(insn 1346 1345 1347 97 (set (reg:DI 0 ax [orig:310 D.24838 ] [310])
        (sign_extend:DI (reg:SI 0 ax [754]))) ge2fitman_com_line.cpp:347 142 {*extendsidi2_rex64}
     (nil))
(insn 1347 1346 1348 97 (parallel [
            (set (reg:DI 1 dx [orig:311 D.24838 ] [311])
                (ashift:DI (reg:DI 0 ax [orig:310 D.24838 ] [310])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:347 497 {*ashldi3_1}
     (nil))
(insn 1348 1347 1349 97 (set (reg/f:DI 0 ax [755])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1349 1348 1350 97 (parallel [
            (set (reg/f:DI 0 ax [orig:312 D.24840 ] [312])
                (plus:DI (reg/f:DI 0 ax [755])
                    (reg:DI 1 dx [orig:311 D.24838 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:347 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:311 D.24838 ] [311]))
        (nil)))
(insn 1350 1349 1351 97 (set (reg/f:DI 0 ax [orig:313 D.24841 ] [313])
        (mem/f:DI (reg/f:DI 0 ax [orig:312 D.24840 ] [312]) [0 *_316+0 S8 A64])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1351 1350 1352 97 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b86fe2db980 *.LC24>)) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1352 1351 1353 97 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:313 D.24841 ] [313])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(call_insn/i 1353 1352 1354 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:347 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1354 1353 1355 97 (set (reg:SI 0 ax [orig:314 D.24837 ] [314])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:347 90 {*movsi_internal}
     (nil))
(insn 1355 1354 1356 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:314 D.24837 ] [314])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:347 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1356 1355 1357 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1375)
            (pc))) ge2fitman_com_line.cpp:347 596 {*jcc_1}
     (nil)
 -> 1375)
;;  succ:       98 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 315 316 756
(note 1357 1356 1358 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1358 1357 1359 98 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:349 93 {*movqi_internal}
     (nil))
(insn 1359 1358 1360 98 (set (reg/f:DI 0 ax [756])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:350 89 {*movdi_internal}
     (nil))
(insn 1360 1359 1361 98 (parallel [
            (set (reg/f:DI 0 ax [orig:315 D.24847 ] [315])
                (plus:DI (reg/f:DI 0 ax [756])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:350 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1361 1360 1362 98 (set (reg:SI 0 ax [orig:316 D.24837 ] [316])
        (mem:SI (reg/f:DI 0 ax [orig:315 D.24847 ] [315]) [0 *_320+0 S4 A32])) ge2fitman_com_line.cpp:350 90 {*movsi_internal}
     (nil))
(insn 1362 1361 1363 98 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:316 D.24837 ] [316])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:350 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1363 1362 1364 98 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1368)
            (pc))) ge2fitman_com_line.cpp:350 596 {*jcc_1}
     (nil)
 -> 1368)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1364 1363 1365 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1364 1895 99 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:352 90 {*movsi_internal}
     (nil))
(jump_insn 1895 1365 1896 99 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:352 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1896 1895 1368)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 317 757
(code_label 1368 1896 1369 100 55 "" [1 uses])
(note 1369 1368 1370 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1370 1369 1371 100 (set (reg/f:DI 0 ax [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:354 89 {*movdi_internal}
     (nil))
(insn 1371 1370 1372 100 (parallel [
            (set (reg/f:DI 0 ax [orig:317 D.24847 ] [317])
                (plus:DI (reg/f:DI 0 ax [757])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:354 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1372 1371 1897 100 (set (mem:SI (reg/f:DI 0 ax [orig:317 D.24847 ] [317]) [0 *_322+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:354 90 {*movsi_internal}
     (nil))
(jump_insn 1897 1372 1898 100 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1898 1897 1375)
;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 318 319 320 321 322 758 759
(code_label 1375 1898 1376 101 54 "" [1 uses])
(note 1376 1375 1377 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1377 1376 1378 101 (set (reg:SI 0 ax [758])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:358 90 {*movsi_internal}
     (nil))
(insn 1378 1377 1379 101 (set (reg:DI 0 ax [orig:318 D.24838 ] [318])
        (sign_extend:DI (reg:SI 0 ax [758]))) ge2fitman_com_line.cpp:358 142 {*extendsidi2_rex64}
     (nil))
(insn 1379 1378 1380 101 (parallel [
            (set (reg:DI 1 dx [orig:319 D.24838 ] [319])
                (ashift:DI (reg:DI 0 ax [orig:318 D.24838 ] [318])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:358 497 {*ashldi3_1}
     (nil))
(insn 1380 1379 1381 101 (set (reg/f:DI 0 ax [759])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1381 1380 1382 101 (parallel [
            (set (reg/f:DI 0 ax [orig:320 D.24840 ] [320])
                (plus:DI (reg/f:DI 0 ax [759])
                    (reg:DI 1 dx [orig:319 D.24838 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:358 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:319 D.24838 ] [319]))
        (nil)))
(insn 1382 1381 1383 101 (set (reg/f:DI 0 ax [orig:321 D.24841 ] [321])
        (mem/f:DI (reg/f:DI 0 ax [orig:320 D.24840 ] [320]) [0 *_326+0 S8 A64])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1383 1382 1384 101 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2b86fe2dba18 *.LC25>)) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1384 1383 1385 101 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:321 D.24841 ] [321])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(call_insn/i 1385 1384 1386 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:358 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1386 1385 1387 101 (set (reg:SI 0 ax [orig:322 D.24837 ] [322])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:358 90 {*movsi_internal}
     (nil))
(insn 1387 1386 1388 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:322 D.24837 ] [322])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:358 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1388 1387 1389 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1394)
            (pc))) ge2fitman_com_line.cpp:358 596 {*jcc_1}
     (nil)
 -> 1394)
;;  succ:       102 (FALLTHRU)
;;              103
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 760
(note 1389 1388 1390 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1390 1389 1391 102 (set (reg/f:DI 0 ax [760])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [0 overwrite+0 S8 A64])) ge2fitman_com_line.cpp:359 89 {*movdi_internal}
     (nil))
(insn 1391 1390 1899 102 (set (mem:QI (reg/f:DI 0 ax [760]) [0 *overwrite_329(D)+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:359 93 {*movqi_internal}
     (nil))
(jump_insn 1899 1391 1900 102 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1900 1899 1394)
;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 323 324 325 326 327 761 762
(code_label 1394 1900 1395 103 56 "" [1 uses])
(note 1395 1394 1396 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1396 1395 1397 103 (set (reg:SI 0 ax [761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:362 90 {*movsi_internal}
     (nil))
(insn 1397 1396 1398 103 (set (reg:DI 0 ax [orig:323 D.24838 ] [323])
        (sign_extend:DI (reg:SI 0 ax [761]))) ge2fitman_com_line.cpp:362 142 {*extendsidi2_rex64}
     (nil))
(insn 1398 1397 1399 103 (parallel [
            (set (reg:DI 1 dx [orig:324 D.24838 ] [324])
                (ashift:DI (reg:DI 0 ax [orig:323 D.24838 ] [323])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:362 497 {*ashldi3_1}
     (nil))
(insn 1399 1398 1400 103 (set (reg/f:DI 0 ax [762])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1400 1399 1401 103 (parallel [
            (set (reg/f:DI 0 ax [orig:325 D.24840 ] [325])
                (plus:DI (reg/f:DI 0 ax [762])
                    (reg:DI 1 dx [orig:324 D.24838 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:362 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:324 D.24838 ] [324]))
        (nil)))
(insn 1401 1400 1402 103 (set (reg/f:DI 0 ax [orig:326 D.24841 ] [326])
        (mem/f:DI (reg/f:DI 0 ax [orig:325 D.24840 ] [325]) [0 *_332+0 S8 A64])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1402 1401 1403 103 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2b86fe2dbab0 *.LC26>)) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1403 1402 1404 103 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:326 D.24841 ] [326])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(call_insn/i 1404 1403 1405 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:362 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1405 1404 1406 103 (set (reg:SI 0 ax [orig:327 D.24837 ] [327])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:362 90 {*movsi_internal}
     (nil))
(insn 1406 1405 1407 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:327 D.24837 ] [327])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:362 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1407 1406 1408 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1413)
            (pc))) ge2fitman_com_line.cpp:362 596 {*jcc_1}
     (nil)
 -> 1413)
;;  succ:       104 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 763
(note 1408 1407 1409 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1409 1408 1410 104 (set (reg/f:DI 0 ax [763])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [0 verbose+0 S8 A64])) ge2fitman_com_line.cpp:363 89 {*movdi_internal}
     (nil))
(insn 1410 1409 1901 104 (set (mem:QI (reg/f:DI 0 ax [763]) [0 *verbose_335(D)+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:363 93 {*movqi_internal}
     (nil))
(jump_insn 1901 1410 1902 104 (set (pc)
        (label_ref 1440)) 636 {jump}
     (nil)
 -> 1440)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1902 1901 1413)
;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 328 329 330 331 332 764 765
(code_label 1413 1902 1414 105 57 "" [1 uses])
(note 1414 1413 1415 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1415 1414 1416 105 (set (reg:SI 0 ax [764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:366 90 {*movsi_internal}
     (nil))
(insn 1416 1415 1417 105 (set (reg:DI 0 ax [orig:328 D.24838 ] [328])
        (sign_extend:DI (reg:SI 0 ax [764]))) ge2fitman_com_line.cpp:366 142 {*extendsidi2_rex64}
     (nil))
(insn 1417 1416 1418 105 (parallel [
            (set (reg:DI 1 dx [orig:329 D.24838 ] [329])
                (ashift:DI (reg:DI 0 ax [orig:328 D.24838 ] [328])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:366 497 {*ashldi3_1}
     (nil))
(insn 1418 1417 1419 105 (set (reg/f:DI 0 ax [765])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1419 1418 1420 105 (parallel [
            (set (reg/f:DI 0 ax [orig:330 D.24840 ] [330])
                (plus:DI (reg/f:DI 0 ax [765])
                    (reg:DI 1 dx [orig:329 D.24838 ] [329])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:366 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:329 D.24838 ] [329]))
        (nil)))
(insn 1420 1419 1421 105 (set (reg/f:DI 0 ax [orig:331 D.24841 ] [331])
        (mem/f:DI (reg/f:DI 0 ax [orig:330 D.24840 ] [330]) [0 *_338+0 S8 A64])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1421 1420 1422 105 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2b86fe2dbb48 *.LC27>)) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 105 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:331 D.24841 ] [331])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(call_insn/i 1423 1422 1424 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:366 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1424 1423 1425 105 (set (reg:SI 0 ax [orig:332 D.24837 ] [332])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:366 90 {*movsi_internal}
     (nil))
(insn 1425 1424 1426 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:332 D.24837 ] [332])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:366 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1426 1425 1427 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1432)
            (pc))) ge2fitman_com_line.cpp:366 596 {*jcc_1}
     (nil)
 -> 1432)
;;  succ:       106 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1427 1426 1428 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(call_insn 1428 1427 1429 106 (call (mem:QI (symbol_ref:DI ("_Z13print_versionv") [flags 0x41]  <function_decl 0x2b86fe21a000 print_version>) [0 print_version S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:367 642 {*call}
     (nil)
    (nil))
(insn 1429 1428 1430 106 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:368 90 {*movsi_internal}
     (nil))
(call_insn 1430 1429 1431 106 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2b86fcc71900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:368 642 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1431 1430 1432)
;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83 766 767
(code_label 1432 1431 1433 107 58 "" [1 uses])
(note 1433 1432 1434 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1434 1433 1435 107 (set (reg/f:DI 0 ax [766])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 arg_read+0 S8 A64])) ge2fitman_com_line.cpp:372 89 {*movdi_internal}
     (nil))
(insn 1435 1434 1436 107 (set (reg:SI 1 dx [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:372 90 {*movsi_internal}
     (nil))
(insn 1436 1435 1437 107 (set (mem:SI (reg/f:DI 0 ax [766]) [0 *arg_read_341(D)+0 S4 A32])
        (reg:SI 1 dx [767])) ge2fitman_com_line.cpp:372 90 {*movsi_internal}
     (nil))
(insn 1437 1436 1903 107 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -2 [0xfffffffffffffffe])) ge2fitman_com_line.cpp:373 90 {*movsi_internal}
     (nil))
(jump_insn 1903 1437 1904 107 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:373 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1904 1903 1440)
;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 [100.0%] 
;;              9 [100.0%] 
;;              28 [100.0%] 
;;              35 [100.0%] 
;;              39 [100.0%] 
;;              44 [100.0%] 
;;              50 [100.0%] 
;;              55 [100.0%] 
;;              58 [100.0%] 
;;              60 [100.0%] 
;;              62 [100.0%] 
;;              64 [100.0%] 
;;              66 [100.0%] 
;;              77 [100.0%] 
;;              84 [100.0%] 
;;              88 [100.0%] 
;;              92 [100.0%] 
;;              96 [100.0%] 
;;              100 [100.0%] 
;;              104 [100.0%] 
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1440 1904 1441 108 8 "" [20 uses])
(note 1441 1440 1442 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 1443 108 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:377 220 {*addsi_1}
     (nil))
;;  succ:       109 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU,DFS_BACK)
;;              5 [100.0%] 
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 768
(code_label 1443 1442 1444 109 4 "" [1 uses])
(note 1444 1443 1446 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1446 1444 1447 109 (set (reg:SI 0 ax [768])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -804 [0xfffffffffffffcdc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:100 90 {*movsi_internal}
     (nil))
(insn 1447 1446 1448 109 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [768])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -860 [0xfffffffffffffca4])) [0 argc+0 S4 A32]))) ge2fitman_com_line.cpp:100 7 {*cmpsi_1}
     (nil))
(jump_insn 1448 1447 1449 109 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1445)
            (pc))) ge2fitman_com_line.cpp:100 596 {*jcc_1}
     (nil)
 -> 1445)
;;  succ:       6
;;              110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1449 1448 1450 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1450 1449 1451 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 3 [0x3]))) ge2fitman_com_line.cpp:384 7 {*cmpsi_1}
     (nil))
(jump_insn 1451 1450 1452 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1484)
            (pc))) ge2fitman_com_line.cpp:384 596 {*jcc_1}
     (nil)
 -> 1484)
;;  succ:       111 (FALLTHRU)
;;              118
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1452 1451 1453 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1453 1452 1454 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:386 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1454 1453 1455 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1458)
            (pc))) ge2fitman_com_line.cpp:386 596 {*jcc_1}
     (nil)
 -> 1458)
;;  succ:       113
;;              112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1455 1454 1456 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1457 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:386 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1457 1456 1458 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1463)
            (pc))) ge2fitman_com_line.cpp:386 596 {*jcc_1}
     (nil)
 -> 1463)
;;  succ:       113 (FALLTHRU)
;;              114
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;;              112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1458 1457 1459 113 61 "" [1 uses])
(note 1459 1458 1460 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1460 1459 1905 113 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:388 90 {*movsi_internal}
     (nil))
(jump_insn 1905 1460 1906 113 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:388 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1906 1905 1463)
;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       112
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 448 769
(code_label 1463 1906 1464 114 62 "" [1 uses])
(note 1464 1463 1465 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1465 1464 1466 114 (set (reg:QI 0 ax [769])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1466 1465 1467 114 (parallel [
            (set (reg:QI 0 ax [orig:448 D.24843 ] [448])
                (xor:QI (reg:QI 0 ax [769])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -801 [0xfffffffffffffcdf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1467 1466 1468 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:448 D.24843 ] [448])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1468 1467 1469 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1644)
            (pc))) ge2fitman_com_line.cpp:389 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       115 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 449 770
(note 1469 1468 1470 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1470 1469 1471 115 (set (reg:QI 0 ax [770])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1471 1470 1472 115 (parallel [
            (set (reg:QI 0 ax [orig:449 D.24843 ] [449])
                (xor:QI (reg:QI 0 ax [770])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -800 [0xfffffffffffffce0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1472 1471 1473 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:449 D.24843 ] [449])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1473 1472 1474 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1644)
            (pc))) ge2fitman_com_line.cpp:389 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       116 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 450 451 771
(note 1474 1473 1475 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1475 1474 1476 116 (set (reg/f:DI 0 ax [771])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:389 89 {*movdi_internal}
     (nil))
(insn 1476 1475 1477 116 (set (reg:QI 0 ax [orig:450 D.24843 ] [450])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [771])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1477 1476 1478 116 (parallel [
            (set (reg:QI 0 ax [orig:451 D.24843 ] [451])
                (xor:QI (reg:QI 0 ax [orig:450 D.24843 ] [450])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 395 {*xorqi_1}
     (nil))
(insn 1478 1477 1479 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:451 D.24843 ] [451])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1479 1478 1480 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1644)
            (pc))) ge2fitman_com_line.cpp:389 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       117 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1480 1479 1481 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1481 1480 1907 117 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:391 90 {*movsi_internal}
     (nil))
(jump_insn 1907 1481 1908 117 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:391 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1908 1907 1484)
;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1484 1908 1485 118 60 "" [1 uses])
(note 1485 1484 1486 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1486 1485 1487 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:397 7 {*cmpsi_1}
     (nil))
(jump_insn 1487 1486 1488 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1598)
            (pc))) ge2fitman_com_line.cpp:397 596 {*jcc_1}
     (nil)
 -> 1598)
;;  succ:       119 (FALLTHRU)
;;              141
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 452 772
(note 1488 1487 1489 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1489 1488 1490 119 (set (reg:QI 0 ax [772])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1490 1489 1491 119 (parallel [
            (set (reg:QI 0 ax [orig:452 D.24843 ] [452])
                (xor:QI (reg:QI 0 ax [772])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -801 [0xfffffffffffffcdf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1491 1490 1492 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:452 D.24843 ] [452])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1492 1491 1493 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1556)
            (pc))) ge2fitman_com_line.cpp:399 596 {*jcc_1}
     (nil)
 -> 1556)
;;  succ:       120 (FALLTHRU)
;;              133
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 453 773
(note 1493 1492 1494 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1494 1493 1495 120 (set (reg:QI 0 ax [773])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1495 1494 1496 120 (parallel [
            (set (reg:QI 0 ax [orig:453 D.24843 ] [453])
                (xor:QI (reg:QI 0 ax [773])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -800 [0xfffffffffffffce0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1496 1495 1497 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:453 D.24843 ] [453])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1497 1496 1498 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1556)
            (pc))) ge2fitman_com_line.cpp:399 596 {*jcc_1}
     (nil)
 -> 1556)
;;  succ:       121 (FALLTHRU)
;;              133
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 454 455 774
(note 1498 1497 1499 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1499 1498 1500 121 (set (reg/f:DI 0 ax [774])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:399 89 {*movdi_internal}
     (nil))
(insn 1500 1499 1501 121 (set (reg:QI 0 ax [orig:454 D.24843 ] [454])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [774])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1501 1500 1502 121 (parallel [
            (set (reg:QI 0 ax [orig:455 D.24843 ] [455])
                (xor:QI (reg:QI 0 ax [orig:454 D.24843 ] [454])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 395 {*xorqi_1}
     (nil))
(insn 1502 1501 1503 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:455 D.24843 ] [455])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1503 1502 1504 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1556)
            (pc))) ge2fitman_com_line.cpp:399 596 {*jcc_1}
     (nil)
 -> 1556)
;;  succ:       122 (FALLTHRU)
;;              133
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 456 775 776
(note 1504 1503 1505 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1505 1504 1506 122 (set (reg/f:DI 0 ax [775])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -880 [0xfffffffffffffc90])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:401 89 {*movdi_internal}
     (nil))
(insn 1506 1505 1507 122 (set (mem:SI (reg/f:DI 0 ax [775]) [0 *fid_102(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:401 90 {*movsi_internal}
     (nil))
(insn 1507 1506 1508 122 (set (reg:QI 0 ax [776])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])) ge2fitman_com_line.cpp:402 93 {*movqi_internal}
     (nil))
(insn 1508 1507 1509 122 (parallel [
            (set (reg:QI 0 ax [orig:456 D.24843 ] [456])
                (xor:QI (reg:QI 0 ax [776])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:402 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -799 [0xfffffffffffffce1])) [0 ioption_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1509 1508 1510 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:456 D.24843 ] [456])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:402 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1510 1509 1511 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1520)
            (pc))) ge2fitman_com_line.cpp:402 596 {*jcc_1}
     (nil)
 -> 1520)
;;  succ:       123 (FALLTHRU)
;;              125
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1511 1510 1512 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1512 1511 1513 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:402 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1513 1512 1514 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1520)
            (pc))) ge2fitman_com_line.cpp:402 596 {*jcc_1}
     (nil)
 -> 1520)
;;  succ:       124 (FALLTHRU)
;;              125
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1514 1513 1515 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1515 1514 1516 124 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -809 [0xfffffffffffffcd7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:404 93 {*movqi_internal}
     (nil))
(insn 1516 1515 1517 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x2b86fe2dbbe0 *.LC28>)) ge2fitman_com_line.cpp:405 89 {*movdi_internal}
     (nil))
(call_insn 1517 1516 1909 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b86fcc56900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:405 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1909 1517 1910 124 (set (pc)
        (label_ref 1552)) ge2fitman_com_line.cpp:405 636 {jump}
     (nil)
 -> 1552)
;;  succ:       132 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1910 1909 1520)
;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122
;;              123
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1520 1910 1521 125 66 "" [2 uses])
(note 1521 1520 1522 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1522 1521 1523 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:406 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1523 1522 1524 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1535)
            (pc))) ge2fitman_com_line.cpp:406 596 {*jcc_1}
     (nil)
 -> 1535)
;;  succ:       126 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 457 777
(note 1524 1523 1525 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1525 1524 1526 126 (set (reg:QI 0 ax [777])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])) ge2fitman_com_line.cpp:406 93 {*movqi_internal}
     (nil))
(insn 1526 1525 1527 126 (parallel [
            (set (reg:QI 0 ax [orig:457 D.24843 ] [457])
                (xor:QI (reg:QI 0 ax [777])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:406 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -795 [0xfffffffffffffce5])) [0 roption_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1527 1526 1528 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:457 D.24843 ] [457])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:406 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1528 1527 1529 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1535)
            (pc))) ge2fitman_com_line.cpp:406 596 {*jcc_1}
     (nil)
 -> 1535)
;;  succ:       127 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 1529 1528 1530 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1530 1529 1531 127 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -810 [0xfffffffffffffcd6])) [0 only_suppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:408 93 {*movqi_internal}
     (nil))
(insn 1531 1530 1532 127 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2b86fe2dbc78 *.LC29>)) ge2fitman_com_line.cpp:409 89 {*movdi_internal}
     (nil))
(call_insn 1532 1531 1911 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b86fcc56900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:409 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1911 1532 1912 127 (set (pc)
        (label_ref 1552)) ge2fitman_com_line.cpp:409 636 {jump}
     (nil)
 -> 1552)
;;  succ:       132 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1912 1911 1535)
;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125
;;              126
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 458
(code_label 1535 1912 1536 128 68 "" [2 uses])
(note 1536 1535 1537 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(call_insn 1537 1536 1538 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_23v") [flags 0x41]  <function_decl 0x2b86fe21fa00 cond_exit_23>) [0 cond_exit_23 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:412 649 {*call_value}
     (nil)
    (nil))
(insn 1538 1537 1539 128 (set (reg:SI 0 ax [orig:458 D.24837 ] [458])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:412 90 {*movsi_internal}
     (nil))
(insn 1539 1538 1540 128 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -796 [0xfffffffffffffce4])) [0 s_u_out+0 S4 A32])
        (reg:SI 0 ax [orig:458 D.24837 ] [458])) ge2fitman_com_line.cpp:412 90 {*movsi_internal}
     (nil))
(insn 1540 1539 1541 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -796 [0xfffffffffffffce4])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:413 7 {*cmpsi_1}
     (nil))
(jump_insn 1541 1540 1542 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1546)
            (pc))) ge2fitman_com_line.cpp:413 596 {*jcc_1}
     (nil)
 -> 1546)
;;  succ:       129 (FALLTHRU)
;;              130
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1542 1541 1543 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1543 1542 1913 129 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -810 [0xfffffffffffffcd6])) [0 only_suppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:414 93 {*movqi_internal}
     (nil))
(jump_insn 1913 1543 1914 129 (set (pc)
        (label_ref 1552)) 636 {jump}
     (nil)
 -> 1552)
;;  succ:       132 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1914 1913 1546)
;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1546 1914 1547 130 69 "" [1 uses])
(note 1547 1546 1548 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1548 1547 1549 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -796 [0xfffffffffffffce4])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:415 7 {*cmpsi_1}
     (nil))
(jump_insn 1549 1548 1550 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1552)
            (pc))) ge2fitman_com_line.cpp:415 596 {*jcc_1}
     (nil)
 -> 1552)
;;  succ:       131 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1550 1549 1551 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1551 1550 1552 131 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -809 [0xfffffffffffffcd7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:416 93 {*movqi_internal}
     (nil))
;;  succ:       132 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;;              124 [100.0%] 
;;              127 [100.0%] 
;;              130
;;              129 [100.0%] 
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1552 1551 1553 132 67 "" [4 uses])
(note 1553 1552 1810 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1810 1553 1915 132 (const_int 0 [0]) ge2fitman_com_line.cpp:402 662 {nop}
     (nil))
(jump_insn 1915 1810 1916 132 (set (pc)
        (label_ref 1644)) ge2fitman_com_line.cpp:402 636 {jump}
     (nil)
 -> 1644)
;;  succ:       151 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1916 1915 1556)
;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119
;;              120
;;              121
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 459 778
(code_label 1556 1916 1557 133 65 "" [3 uses])
(note 1557 1556 1558 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1558 1557 1559 133 (set (reg:QI 0 ax [778])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1559 1558 1560 133 (parallel [
            (set (reg:QI 0 ax [orig:459 D.24843 ] [459])
                (xor:QI (reg:QI 0 ax [778])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:422 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -801 [0xfffffffffffffcdf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1560 1559 1561 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:459 D.24843 ] [459])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1561 1560 1562 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1576)
            (pc))) ge2fitman_com_line.cpp:422 596 {*jcc_1}
     (nil)
 -> 1576)
;;  succ:       134 (FALLTHRU)
;;              137
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 460 779
(note 1562 1561 1563 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1563 1562 1564 134 (set (reg:QI 0 ax [779])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1564 1563 1565 134 (parallel [
            (set (reg:QI 0 ax [orig:460 D.24843 ] [460])
                (xor:QI (reg:QI 0 ax [779])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:422 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -800 [0xfffffffffffffce0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1565 1564 1566 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:460 D.24843 ] [460])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1566 1565 1567 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1576)
            (pc))) ge2fitman_com_line.cpp:422 596 {*jcc_1}
     (nil)
 -> 1576)
;;  succ:       135 (FALLTHRU)
;;              137
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 461 780
(note 1567 1566 1568 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1568 1567 1569 135 (set (reg/f:DI 0 ax [780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:422 89 {*movdi_internal}
     (nil))
(insn 1569 1568 1570 135 (set (reg:QI 0 ax [orig:461 D.24843 ] [461])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [780])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1570 1569 1571 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:461 D.24843 ] [461])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1571 1570 1572 135 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1576)
            (pc))) ge2fitman_com_line.cpp:422 596 {*jcc_1}
     (nil)
 -> 1576)
;;  succ:       136 (FALLTHRU)
;;              137
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1572 1571 1573 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1573 1572 1917 136 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:424 90 {*movsi_internal}
     (nil))
(jump_insn 1917 1573 1918 136 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:424 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1918 1917 1576)
;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       133
;;              134
;;              135
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1576 1918 1577 137 71 "" [3 uses])
(note 1577 1576 1578 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1578 1577 1579 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1579 1578 1580 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1583)
            (pc))) ge2fitman_com_line.cpp:425 596 {*jcc_1}
     (nil)
 -> 1583)
;;  succ:       139
;;              138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1580 1579 1581 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1581 1580 1582 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1582 1581 1583 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1644)
            (pc))) ge2fitman_com_line.cpp:425 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       139 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       137
;;              138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 462 463 781
(code_label 1583 1582 1584 139 72 "" [1 uses])
(note 1584 1583 1585 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1585 1584 1586 139 (set (reg/f:DI 0 ax [781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:425 89 {*movdi_internal}
     (nil))
(insn 1586 1585 1587 139 (set (reg:QI 0 ax [orig:462 D.24843 ] [462])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [781])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:425 93 {*movqi_internal}
     (nil))
(insn 1587 1586 1588 139 (parallel [
            (set (reg:QI 0 ax [orig:463 D.24843 ] [463])
                (xor:QI (reg:QI 0 ax [orig:462 D.24843 ] [462])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:425 395 {*xorqi_1}
     (nil))
(insn 1588 1587 1589 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:463 D.24843 ] [463])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1589 1588 1590 139 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1644)
            (pc))) ge2fitman_com_line.cpp:425 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       140 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       139 (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1590 1589 1591 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1591 1590 1919 140 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:427 90 {*movsi_internal}
     (nil))
(jump_insn 1919 1591 1920 140 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:427 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1920 1919 1598)
;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1598 1920 1599 141 64 "" [1 uses])
(note 1599 1598 1600 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1600 1599 1601 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:432 7 {*cmpsi_1}
     (nil))
(jump_insn 1601 1600 1602 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1644)
            (pc))) ge2fitman_com_line.cpp:432 596 {*jcc_1}
     (nil)
 -> 1644)
;;  succ:       142 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 464 782
(note 1602 1601 1603 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1603 1602 1604 142 (set (reg:QI 0 ax [782])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1604 1603 1605 142 (parallel [
            (set (reg:QI 0 ax [orig:464 D.24843 ] [464])
                (xor:QI (reg:QI 0 ax [782])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:434 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -801 [0xfffffffffffffcdf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1605 1604 1606 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:464 D.24843 ] [464])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1606 1605 1607 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1621)
            (pc))) ge2fitman_com_line.cpp:434 596 {*jcc_1}
     (nil)
 -> 1621)
;;  succ:       143 (FALLTHRU)
;;              146
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 465 783
(note 1607 1606 1608 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1608 1607 1609 143 (set (reg:QI 0 ax [783])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1609 1608 1610 143 (parallel [
            (set (reg:QI 0 ax [orig:465 D.24843 ] [465])
                (xor:QI (reg:QI 0 ax [783])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:434 395 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -800 [0xfffffffffffffce0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1610 1609 1611 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:465 D.24843 ] [465])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1611 1610 1612 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1621)
            (pc))) ge2fitman_com_line.cpp:434 596 {*jcc_1}
     (nil)
 -> 1621)
;;  succ:       144 (FALLTHRU)
;;              146
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 466 784
(note 1612 1611 1613 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1613 1612 1614 144 (set (reg/f:DI 0 ax [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:434 89 {*movdi_internal}
     (nil))
(insn 1614 1613 1615 144 (set (reg:QI 0 ax [orig:466 D.24843 ] [466])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [784])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1615 1614 1616 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:466 D.24843 ] [466])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1616 1615 1617 144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1621)
            (pc))) ge2fitman_com_line.cpp:434 596 {*jcc_1}
     (nil)
 -> 1621)
;;  succ:       145 (FALLTHRU)
;;              146
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1617 1616 1618 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1618 1617 1921 145 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -13 [0xfffffffffffffff3])) ge2fitman_com_line.cpp:436 90 {*movsi_internal}
     (nil))
(jump_insn 1921 1618 1922 145 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:436 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1922 1921 1621)
;; basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142
;;              143
;;              144
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1621 1922 1622 146 73 "" [3 uses])
(note 1622 1621 1623 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1623 1622 1624 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1624 1623 1625 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1628)
            (pc))) ge2fitman_com_line.cpp:437 596 {*jcc_1}
     (nil)
 -> 1628)
;;  succ:       148
;;              147 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1625 1624 1626 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1626 1625 1627 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1627 1626 1628 147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1639)
            (pc))) ge2fitman_com_line.cpp:437 596 {*jcc_1}
     (nil)
 -> 1639)
;;  succ:       148 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146
;;              147 (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 467 468 785
(code_label 1628 1627 1629 148 74 "" [1 uses])
(note 1629 1628 1630 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1630 1629 1631 148 (set (reg/f:DI 0 ax [785])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:437 89 {*movdi_internal}
     (nil))
(insn 1631 1630 1632 148 (set (reg:QI 0 ax [orig:467 D.24843 ] [467])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [785])
                (const_int 72 [0x48])) [0 preprocess_44(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:437 93 {*movqi_internal}
     (nil))
(insn 1632 1631 1633 148 (parallel [
            (set (reg:QI 0 ax [orig:468 D.24843 ] [468])
                (xor:QI (reg:QI 0 ax [orig:467 D.24843 ] [467])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:437 395 {*xorqi_1}
     (nil))
(insn 1633 1632 1634 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:468 D.24843 ] [468])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1634 1633 1635 148 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1639)
            (pc))) ge2fitman_com_line.cpp:437 596 {*jcc_1}
     (nil)
 -> 1639)
;;  succ:       149 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148 (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1635 1634 1636 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1636 1635 1923 149 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:439 90 {*movsi_internal}
     (nil))
(jump_insn 1923 1636 1924 149 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:439 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1924 1923 1639)
;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       147
;;              148
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1639 1924 1640 150 75 "" [2 uses])
(note 1640 1639 1641 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1641 1640 1925 150 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:442 90 {*movsi_internal}
     (nil))
(jump_insn 1925 1641 1926 150 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:442 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1926 1925 1644)
;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       115
;;              139
;;              141
;;              114
;;              116
;;              138
;;              132 [100.0%] 
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1644 1926 1645 151 63 "" [7 uses])
(note 1645 1644 1646 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1646 1645 1647 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:446 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1647 1646 1648 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1753)
            (pc))) ge2fitman_com_line.cpp:446 596 {*jcc_1}
     (nil)
 -> 1753)
;;  succ:       152 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 469 470 471 786 787 788 789
(note 1648 1647 1649 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1649 1648 1650 152 (set (reg/f:DI 0 ax [orig:469 D.24845 ] [469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1650 1649 1651 152 (parallel [
            (set (reg:DI 1 dx [786])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:449 221 {*adddi_1}
     (nil))
(insn 1651 1650 1652 152 (set (reg:DI 4 si)
        (reg:DI 1 dx [786])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1652 1651 1653 152 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:469 D.24845 ] [469])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(call_insn 1653 1652 1654 152 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:449 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1654 1653 1655 152 (set (reg/f:DI 0 ax [787])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(insn 1655 1654 1656 152 (parallel [
            (set (reg/f:DI 1 dx [orig:470 D.24849 ] [470])
                (plus:DI (reg/f:DI 0 ax [787])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:451 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 procpar_info+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 1656 1655 1657 152 (parallel [
            (set (reg:DI 0 ax [788])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:451 221 {*adddi_1}
     (nil))
(insn 1657 1656 1658 152 (set (reg:DI 4 si)
        (reg:DI 0 ax [788])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(insn 1658 1657 1659 152 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:470 D.24849 ] [470])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(call_insn 1659 1658 1660 152 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:451 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1660 1659 1661 152 (set (reg/f:DI 0 ax [789])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:453 89 {*movdi_internal}
     (nil))
(insn 1661 1660 1662 152 (set (reg:SI 0 ax [orig:471 D.24837 ] [471])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [789])
                (const_int 56 [0x38])) [0 preprocess_44(D)->input_file_type+0 S4 A32])) ge2fitman_com_line.cpp:453 90 {*movsi_internal}
     (nil))
(insn 1662 1661 1663 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:471 D.24837 ] [471])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:453 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1663 1662 1664 152 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1671)
            (pc))) ge2fitman_com_line.cpp:453 596 {*jcc_1}
     (nil)
 -> 1671)
;;  succ:       153 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 472 790 791
(note 1664 1663 1665 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1665 1664 1666 153 (set (reg/f:DI 0 ax [790])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(insn 1666 1665 1667 153 (parallel [
            (set (reg/f:DI 1 dx [orig:472 D.24845 ] [472])
                (plus:DI (reg/f:DI 0 ax [790])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:454 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 1024 [0x400]))
        (nil)))
(insn 1667 1666 1668 153 (parallel [
            (set (reg:DI 0 ax [791])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:454 221 {*adddi_1}
     (nil))
(insn 1668 1667 1669 153 (set (reg:DI 4 si)
        (reg:DI 0 ax [791])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(insn 1669 1668 1670 153 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:472 D.24845 ] [472])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(call_insn 1670 1669 1671 153 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:454 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       154 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       152
;;              153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1671 1670 1672 154 77 "" [1 uses])
(note 1672 1671 1673 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1673 1672 1674 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:457 7 {*cmpsi_1}
     (nil))
(jump_insn 1674 1673 1675 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1713)
            (pc))) ge2fitman_com_line.cpp:457 596 {*jcc_1}
     (nil)
 -> 1713)
;;  succ:       155 (FALLTHRU)
;;              156
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 473 474 475 476 477 478 479 480 481 792 793 794 795 796 797 798 799 800 801 802
(note 1675 1674 1676 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1676 1675 1677 155 (set (reg/f:DI 0 ax [orig:473 D.24845 ] [473])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1677 1676 1678 155 (set (reg/f:DI 1 dx [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1678 1677 1679 155 (parallel [
            (set (reg/f:DI 1 dx [orig:474 D.24845 ] [474])
                (plus:DI (reg/f:DI 1 dx [792])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:461 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1679 1678 1680 155 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:473 D.24845 ] [473])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1680 1679 1681 155 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:474 D.24845 ] [474])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(call_insn 1681 1680 1682 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:461 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1682 1681 1683 155 (set (reg/f:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1683 1682 1684 155 (parallel [
            (set (reg/f:DI 1 dx [orig:475 D.24845 ] [475])
                (plus:DI (reg/f:DI 0 ax [793])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:463 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 1024 [0x400]))
        (nil)))
(insn 1684 1683 1685 155 (set (reg/f:DI 0 ax [794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1685 1684 1686 155 (parallel [
            (set (reg/f:DI 0 ax [orig:476 D.24845 ] [476])
                (plus:DI (reg/f:DI 0 ax [794])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:463 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 1280 [0x500]))
        (nil)))
(insn 1686 1685 1687 155 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:475 D.24845 ] [475])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1687 1686 1688 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:476 D.24845 ] [476])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(call_insn 1688 1687 1689 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:463 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1689 1688 1690 155 (set (reg/f:DI 0 ax [795])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1690 1689 1691 155 (parallel [
            (set (reg/f:DI 1 dx [orig:477 D.24849 ] [477])
                (plus:DI (reg/f:DI 0 ax [795])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 procpar_info+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 1691 1690 1692 155 (set (reg/f:DI 0 ax [796])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1692 1691 1693 155 (parallel [
            (set (reg/f:DI 0 ax [orig:478 D.24850 ] [478])
                (plus:DI (reg/f:DI 0 ax [796])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 procpar_info+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1693 1692 1694 155 (parallel [
            (set (reg/f:DI 0 ax [orig:479 D.24849 ] [479])
                (plus:DI (reg/f:DI 0 ax [orig:478 D.24850 ] [478])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 221 {*adddi_1}
     (nil))
(insn 1694 1693 1695 155 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:477 D.24849 ] [477])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1695 1694 1696 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:479 D.24849 ] [479])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(call_insn 1696 1695 1697 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:465 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1697 1696 1698 155 (set (reg/f:DI 0 ax [797])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(insn 1698 1697 1699 155 (parallel [
            (set (reg/f:DI 0 ax [orig:480 D.24845 ] [480])
                (plus:DI (reg/f:DI 0 ax [797])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1699 1698 1700 155 (parallel [
            (set (reg:DI 1 dx [798])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 221 {*adddi_1}
     (nil))
(insn 1700 1699 1701 155 (parallel [
            (set (reg:DI 1 dx [799])
                (plus:DI (reg:DI 1 dx [798])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 221 {*adddi_1}
     (nil))
(insn 1701 1700 1702 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [799])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(insn 1702 1701 1703 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:480 D.24845 ] [480])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(call_insn 1703 1702 1704 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:467 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1704 1703 1705 155 (set (reg/f:DI 0 ax [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(insn 1705 1704 1706 155 (parallel [
            (set (reg/f:DI 0 ax [orig:481 D.24845 ] [481])
                (plus:DI (reg/f:DI 0 ax [800])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 768 [0x300]))
        (nil)))
(insn 1706 1705 1707 155 (parallel [
            (set (reg:DI 1 dx [801])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 221 {*adddi_1}
     (nil))
(insn 1707 1706 1708 155 (parallel [
            (set (reg:DI 1 dx [802])
                (plus:DI (reg:DI 1 dx [801])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 221 {*adddi_1}
     (nil))
(insn 1708 1707 1709 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [802])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(insn 1709 1708 1710 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:481 D.24845 ] [481])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(call_insn 1710 1709 1927 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:468 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 1927 1710 1928 155 (set (pc)
        (label_ref 1753)) 636 {jump}
     (nil)
 -> 1753)
;;  succ:       157 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1928 1927 1713)
;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 482 483 484 485 486 487 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817
(code_label 1713 1928 1714 156 78 "" [1 uses])
(note 1714 1713 1715 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1715 1714 1716 156 (set (reg/f:DI 0 ax [803])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(insn 1716 1715 1717 156 (parallel [
            (set (reg/f:DI 0 ax [orig:482 D.24845 ] [482])
                (plus:DI (reg/f:DI 0 ax [803])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1717 1716 1718 156 (parallel [
            (set (reg:DI 1 dx [804])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 221 {*adddi_1}
     (nil))
(insn 1718 1717 1719 156 (parallel [
            (set (reg:DI 1 dx [805])
                (plus:DI (reg:DI 1 dx [804])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 221 {*adddi_1}
     (nil))
(insn 1719 1718 1720 156 (set (reg:DI 4 si)
        (reg:DI 1 dx [805])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(insn 1720 1719 1721 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:482 D.24845 ] [482])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(call_insn 1721 1720 1722 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:472 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1722 1721 1723 156 (set (reg/f:DI 0 ax [806])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(insn 1723 1722 1724 156 (parallel [
            (set (reg/f:DI 0 ax [orig:483 D.24845 ] [483])
                (plus:DI (reg/f:DI 0 ax [806])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 1280 [0x500]))
        (nil)))
(insn 1724 1723 1725 156 (parallel [
            (set (reg:DI 1 dx [807])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 221 {*adddi_1}
     (nil))
(insn 1725 1724 1726 156 (parallel [
            (set (reg:DI 1 dx [808])
                (plus:DI (reg:DI 1 dx [807])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 221 {*adddi_1}
     (nil))
(insn 1726 1725 1727 156 (set (reg:DI 4 si)
        (reg:DI 1 dx [808])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(insn 1727 1726 1728 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:483 D.24845 ] [483])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(call_insn 1728 1727 1729 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:474 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1729 1728 1730 156 (set (reg/f:DI 0 ax [809])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(insn 1730 1729 1731 156 (parallel [
            (set (reg/f:DI 0 ax [orig:484 D.24850 ] [484])
                (plus:DI (reg/f:DI 0 ax [809])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 procpar_info+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1731 1730 1732 156 (parallel [
            (set (reg/f:DI 0 ax [orig:485 D.24849 ] [485])
                (plus:DI (reg/f:DI 0 ax [orig:484 D.24850 ] [484])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 221 {*adddi_1}
     (nil))
(insn 1732 1731 1733 156 (parallel [
            (set (reg:DI 1 dx [810])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 221 {*adddi_1}
     (nil))
(insn 1733 1732 1734 156 (parallel [
            (set (reg:DI 1 dx [811])
                (plus:DI (reg:DI 1 dx [810])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 221 {*adddi_1}
     (nil))
(insn 1734 1733 1735 156 (set (reg:DI 4 si)
        (reg:DI 1 dx [811])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(insn 1735 1734 1736 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:485 D.24849 ] [485])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(call_insn 1736 1735 1737 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:476 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1737 1736 1738 156 (set (reg/f:DI 0 ax [812])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(insn 1738 1737 1739 156 (parallel [
            (set (reg/f:DI 0 ax [orig:486 D.24845 ] [486])
                (plus:DI (reg/f:DI 0 ax [812])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1739 1738 1740 156 (parallel [
            (set (reg:DI 1 dx [813])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 221 {*adddi_1}
     (nil))
(insn 1740 1739 1741 156 (parallel [
            (set (reg:DI 1 dx [814])
                (plus:DI (reg:DI 1 dx [813])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 221 {*adddi_1}
     (nil))
(insn 1741 1740 1742 156 (set (reg:DI 4 si)
        (reg:DI 1 dx [814])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(insn 1742 1741 1743 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:486 D.24845 ] [486])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(call_insn 1743 1742 1744 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:478 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1744 1743 1745 156 (set (reg/f:DI 0 ax [815])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(insn 1745 1744 1746 156 (parallel [
            (set (reg/f:DI 0 ax [orig:487 D.24845 ] [487])
                (plus:DI (reg/f:DI 0 ax [815])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 768 [0x300]))
        (nil)))
(insn 1746 1745 1747 156 (parallel [
            (set (reg:DI 1 dx [816])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -784 [0xfffffffffffffcf0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 221 {*adddi_1}
     (nil))
(insn 1747 1746 1748 156 (parallel [
            (set (reg:DI 1 dx [817])
                (plus:DI (reg:DI 1 dx [816])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 221 {*adddi_1}
     (nil))
(insn 1748 1747 1749 156 (set (reg:DI 4 si)
        (reg:DI 1 dx [817])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(insn 1749 1748 1750 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:487 D.24845 ] [487])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(call_insn 1750 1749 1753 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b86fcc49600 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:479 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       157 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151
;;              156 (FALLTHRU)
;;              155 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 488 489
(code_label 1753 1750 1754 157 76 "" [2 uses])
(note 1754 1753 1755 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1755 1754 1756 157 (set (reg/f:DI 0 ax [orig:488 D.24845 ] [488])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(insn 1756 1755 1757 157 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b86fe2db688 *.LC19>)) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(insn 1757 1756 1758 157 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:488 D.24845 ] [488])) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(call_insn/i 1758 1757 1759 157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:484 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1759 1758 1760 157 (set (reg:SI 0 ax [orig:489 D.24837 ] [489])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:484 90 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:489 D.24837 ] [489])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:484 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1761 1760 1762 157 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1766)
            (pc))) ge2fitman_com_line.cpp:484 596 {*jcc_1}
     (nil)
 -> 1766)
;;  succ:       158 (FALLTHRU)
;;              159
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1762 1761 1763 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1763 1762 1929 158 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -3 [0xfffffffffffffffd])) ge2fitman_com_line.cpp:485 90 {*movsi_internal}
     (nil))
(jump_insn 1929 1763 1930 158 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:485 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1930 1929 1766)
;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 490 491 818
(code_label 1766 1930 1767 159 80 "" [1 uses])
(note 1767 1766 1768 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1768 1767 1769 159 (set (reg/f:DI 0 ax [818])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(insn 1769 1768 1770 159 (parallel [
            (set (reg/f:DI 0 ax [orig:490 D.24845 ] [490])
                (plus:DI (reg/f:DI 0 ax [818])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:489 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -832 [0xfffffffffffffcc0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1770 1769 1771 159 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b86fe2db688 *.LC19>)) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(insn 1771 1770 1772 159 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:490 D.24845 ] [490])) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(call_insn/i 1772 1771 1773 159 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b86fcc49300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:489 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1773 1772 1774 159 (set (reg:SI 0 ax [orig:491 D.24837 ] [491])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:489 90 {*movsi_internal}
     (nil))
(insn 1774 1773 1775 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:491 D.24837 ] [491])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:489 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1775 1774 1776 159 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1780)
            (pc))) ge2fitman_com_line.cpp:489 596 {*jcc_1}
     (nil)
 -> 1780)
;;  succ:       160 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1776 1775 1777 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1777 1776 1931 160 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:490 90 {*movsi_internal}
     (nil))
(jump_insn 1931 1777 1932 160 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:490 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1932 1931 1780)
;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       159
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1780 1932 1781 161 81 "" [1 uses])
(note 1781 1780 1782 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1782 1781 1783 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -810 [0xfffffffffffffcd6])) [0 only_suppressed+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:493 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1783 1782 1784 161 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1788)
            (pc))) ge2fitman_com_line.cpp:493 596 {*jcc_1}
     (nil)
 -> 1788)
;;  succ:       162 (FALLTHRU)
;;              163
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1784 1783 1785 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1785 1784 1933 162 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:495 90 {*movsi_internal}
     (nil))
(jump_insn 1933 1785 1934 162 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:495 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1934 1933 1788)
;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1788 1934 1789 163 82 "" [1 uses])
(note 1789 1788 1790 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1790 1789 1791 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -809 [0xfffffffffffffcd7])) [0 only_unsuppressed+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:496 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1791 1790 1792 163 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1796)
            (pc))) ge2fitman_com_line.cpp:496 596 {*jcc_1}
     (nil)
 -> 1796)
;;  succ:       164 (FALLTHRU)
;;              165
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1792 1791 1793 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1793 1792 1935 164 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:498 90 {*movsi_internal}
     (nil))
(jump_insn 1935 1793 1936 164 (set (pc)
        (label_ref 1801)) ge2fitman_com_line.cpp:498 636 {jump}
     (nil)
 -> 1801)
;;  succ:       166 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 1936 1935 1796)
;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       163
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 1796 1936 1797 165 83 "" [1 uses])
(note 1797 1796 1798 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1798 1797 1801 165 (set (reg:SI 0 ax [orig:83 D.24837 ] [83])
        (const_int 0 [0])) ge2fitman_com_line.cpp:501 90 {*movsi_internal}
     (nil))
;;  succ:       166 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;;              162 [100.0%] 
;;              8 [100.0%] 
;;              14 [100.0%] 
;;              20 [100.0%] 
;;              25 [100.0%] 
;;              27 [100.0%] 
;;              36 [100.0%] 
;;              40 [100.0%] 
;;              45 [100.0%] 
;;              46 [100.0%] 
;;              51 [100.0%] 
;;              52 [100.0%] 
;;              56 [100.0%] 
;;              70 [100.0%] 
;;              72 [100.0%] 
;;              81 [100.0%] 
;;              83 [100.0%] 
;;              87 [100.0%] 
;;              91 [100.0%] 
;;              95 [100.0%] 
;;              99 [100.0%] 
;;              107 [100.0%] 
;;              113 [100.0%] 
;;              117 [100.0%] 
;;              136 [100.0%] 
;;              140 [100.0%] 
;;              145 [100.0%] 
;;              149 [100.0%] 
;;              150 [100.0%] 
;;              158 [100.0%] 
;;              160 [100.0%] 
;;              164 [100.0%] 
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 492
(code_label 1801 1798 1802 166 84 "" [32 uses])
(note 1802 1801 1803 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1803 1802 1807 166 (set (reg:SI 0 ax [orig:492 <retval> ] [492])
        (reg:SI 0 ax [orig:83 D.24837 ] [83])) 90 {*movsi_internal}
     (nil))
(insn 1807 1803 1808 166 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:492 <retval> ] [492])) ge2fitman_com_line.cpp:503 90 {*movsi_internal}
     (nil))
(insn 1808 1807 1937 166 (use (reg/i:SI 0 ax)) ge2fitman_com_line.cpp:503 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1937 1808 0 NOTE_INSN_DELETED)

;; Function void undo_ecc(Preprocess*, int*) (_Z8undo_eccP10PreprocessPi, funcdef_no=1021, decl_uid=23933, symbol_order=228)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 31:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 35:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 33
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
starting the processing of deferred insns
ending the processing of deferred insns


void undo_ecc(Preprocess*, int*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={20d,19u} r1={3d,2u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,17u} r7={1d,2u} r17={6d} r20={1d,1u,6e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 94{45d,43u,6e} in 36{36 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
        (reg:DI 5 di [ preprocess ])) ge2fitman_com_line.cpp:507 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 fid+0 S8 A64])
        (reg:DI 4 si [ fid ])) ge2fitman_com_line.cpp:507 89 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:509 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:DI 0 ax [89]) [0 *fid_1(D)+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:509 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [90])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:510 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [90])
                (const_int 72 [0x48])) [0 preprocess_2(D)->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:510 93 {*movqi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:511 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 0 ax [orig:83 D.24879 ] [83])
                (plus:DI (reg/f:DI 0 ax [91])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:511 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 13 12 14 2 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [orig:83 D.24879 ] [83])
                (const_int 72 [0x48])) [0 _3->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:511 93 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [92])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:512 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [92])
                (const_int 12 [0xc])) [0 preprocess_2(D)->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:512 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:513 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 0 ax [orig:84 D.24879 ] [84])
                (plus:DI (reg/f:DI 0 ax [93])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:513 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 18 17 19 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:84 D.24879 ] [84])
                (const_int 12 [0xc])) [0 _4->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:513 90 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:514 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 36 [0x24])) [0 preprocess_2(D)->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:514 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:515 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 0 ax [orig:85 D.24879 ] [85])
                (plus:DI (reg/f:DI 0 ax [95])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:515 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 23 22 24 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:85 D.24879 ] [85])
                (const_int 36 [0x24])) [0 _5->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:515 90 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:516 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 40 [0x28])) [0 preprocess_2(D)->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:516 90 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:517 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 0 ax [orig:86 D.24879 ] [86])
                (plus:DI (reg/f:DI 0 ax [97])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:517 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 28 27 29 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:86 D.24879 ] [86])
                (const_int 40 [0x28])) [0 _6->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:517 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 1 dx [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:518 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SF 0 ax [99])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:518 129 {*movsf_internal}
     (nil))
(insn 31 30 32 2 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [98])
                (const_int 48 [0x30])) [0 preprocess_2(D)->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [99])) ge2fitman_com_line.cpp:518 129 {*movsf_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:519 89 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 1 dx [orig:87 D.24879 ] [87])
                (plus:DI (reg/f:DI 0 ax [100])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:519 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 34 33 35 2 (set (reg:SF 0 ax [101])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:519 129 {*movsf_internal}
     (nil))
(insn 35 34 36 2 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:87 D.24879 ] [87])
                (const_int 48 [0x30])) [0 _7->pre_delay_time+0 S4 A32])
        (reg:SF 0 ax [101])) ge2fitman_com_line.cpp:519 129 {*movsf_internal}
     (nil))
(insn 36 35 37 2 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:520 89 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [102])
                (const_int 44 [0x2c])) [0 preprocess_2(D)->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:520 90 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:DI 0 ax [103])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:521 89 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg/f:DI 0 ax [orig:88 D.24879 ] [88])
                (plus:DI (reg/f:DI 0 ax [103])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:521 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 40 39 43 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:88 D.24879 ] [88])
                (const_int 44 [0x2c])) [0 _8->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:521 90 {*movsi_internal}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 43 40 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1022, decl_uid=24191, symbol_order=252)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rzw {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,9u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 185{160d,25u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:523 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) ge2fitman_com_line.cpp:523 596 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_com_line.cpp:523 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) ge2fitman_com_line.cpp:523 596 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b86fe1ef000 __ioinit>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b86fdd4a500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.9/iostream:74 642 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b86fe210e40 __dso_handle>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b86fe1ef000 __ioinit>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b86fdd4a700 __comp_dtor >)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b86fe223900 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.9/iostream:74 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 18 22 5 87 "" [2 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 23 22 0 NOTE_INSN_DELETED)

;; Function (static initializers for ge2fitman_com_line.cpp) (_GLOBAL__sub_I__Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_, funcdef_no=1023, decl_uid=24197, symbol_order=361)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rzw {*call}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for ge2fitman_com_line.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 96{88d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x2b86fe223800 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:523 642 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 10 7 0 NOTE_INSN_DELETED)
