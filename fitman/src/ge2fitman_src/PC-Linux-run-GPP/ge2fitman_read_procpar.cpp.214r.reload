
;; Function int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*) (_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header, funcdef_no=1020, decl_uid=23940, symbol_order=227)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=192, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 28:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 32:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 43:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 46:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 54:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 64:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 66:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 80:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 81:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 83:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 88:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 99:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 100:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 105:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 114:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 117:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 122:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 129:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 130:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 131:  (0) r  (1) i {*movdi_internal}
      Creating newreg=821, assigning class GENERAL_REGS to r821
  131: r821:DI=0x30303630302e3032
    Inserting insn reload after:
 2123: [r103:DI]=r821:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2123:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 132:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 138:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 145:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 146:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 153:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 156:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 157:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 159:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 160:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
	 Choosing alt 4 in insn 161:  (0) r  (1) i {*movdi_internal}
      Creating newreg=822, assigning class GENERAL_REGS to r822
  161: r822:DI=0x30303630302e3032
    Inserting insn reload after:
 2124: [r101:DI]=r822:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2124:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 162:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 168:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 169:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 170:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 171:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 178:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 179:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 186:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 196:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 197:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 200:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 201:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 202:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 207:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 209:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 216:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 217:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 226:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 227:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 228:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 229:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 230:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 231:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 232:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 237:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 238:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 239:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 246:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 247:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 248:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 249:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 250:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 251:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 252:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 259:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 266:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 267:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 268:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 269:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 270:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 271:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 272:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 277:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 278:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 279:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 286:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 287:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 289:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 292:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 293:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 294:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 295:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 296:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 297:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 302:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 303:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 304:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 311:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 312:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 313:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 314:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 315:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 316:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 317:  (0) m  (1) re {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 318:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 322:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 324:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 325:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 332:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 333:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 337:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 338:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 341:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 357:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 358:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 359:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 366:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 367:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 371:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 372:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 375:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 391:  (0) r  (1) rm {*movhi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) r  (1) rm {extendhisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 393:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 394:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 395:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 396:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 397:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 398:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 399:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 406:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 407:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 411:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 412:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 415:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 431:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 433:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 440:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 441:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 445:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 446:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 449:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 465:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=12,losers=2,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
          alt=1,overall=9,losers=1,rld_nregs=0
	 Choosing alt 1 in insn 466:  (0) r  (1) m {fix_truncsfsi_sse}
      Creating newreg=823 from oldreg=159, assigning class NO_REGS to r823
  466: r160:SI=fix(r823:SF)
      REG_DEAD r159:SF
    Inserting insn reload before:
 2125: r823:SF=r159:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=1213,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
          alt=4,overall=7,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2125:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 467:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 469:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 470:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 471:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 472:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 479:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 480:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 484:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 488:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 494:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 504:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 505:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 506:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 513:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 514:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 518:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 519:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 522:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 538:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =r  (1) rm {extendhidi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 540:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 541:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 542:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 543:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 544:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 545:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 546:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 553:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 554:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 558:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 559:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 562:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 569:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 578:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 579:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 580:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 587:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 588:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 590:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 592:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 593:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 596:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 612:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 614:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 616:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 617:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 618:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 619:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 623:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 626:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 627:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 631:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 632:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 635:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 651:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 653:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 660:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 661:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 665:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 666:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 669:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 685:  (0) r  (1) rm {*movhi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 686:  (0) r  (1) rm {extendhisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 687:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 689:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =r  (1) rm {extendhidi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 691:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 692:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 693:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 696:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 697:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 699
	 Choosing alt 2 in insn 699:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 700:  (0) m  (1) re {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 701:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 702:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (1) rzw {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 704:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 706:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 707:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 713:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 714:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 715:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 724:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 725:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 726:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 735:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 736:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 737:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 740:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 742:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 744:  (0) =r  (1) %0  (2) rme {*addsi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 745:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 746:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=824 from oldreg=612, assigning class DREG to r824
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 748:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 750:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 753:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 754:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 755:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 757:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 758:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 761:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 762:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 764:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 767:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 768:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 770:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 771:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 773:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 774:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 775:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 776:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 778:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 780:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 781:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 783:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 786:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 787:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 788:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 789:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 790:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 791:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 792:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 794:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 795:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 796:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 798:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 799:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 802:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 806:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 807
	 Choosing alt 0 in insn 807:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 808:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 809:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 810:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 811:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 812:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 813:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 815:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 820:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 821:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 824:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 825:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 826:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 829:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 833:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 835:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 836:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 840:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 845:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 846:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 847:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 849:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 851:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 854:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 855:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 859:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 860:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 863:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 867:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 871:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 879:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 880:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 881:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 883:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 890:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 891:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 892:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=825 from oldreg=266, assigning class SSE_REGS to r825
  892: r825:SF=r825:SF/r265:SF
      REG_DEAD r643:SF
      REG_DEAD r265:SF
    Inserting insn reload before:
 2126: r825:SF=r643:SF
    Inserting insn reload after:
 2127: r266:SF=r825:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2127:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 893:  (0) ?m  (1) rF {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 898:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 899:  (1) rzw {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 900:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 901:  (1) rzw {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 902:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 904:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 905:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 906:  (1) rzw {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 907:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 908:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 909:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=826 from oldreg=268, assigning class SSE_REGS to r826
  909: r826:SF=r826:SF/r267:SF
      REG_DEAD r645:SF
      REG_DEAD r267:SF
    Inserting insn reload before:
 2128: r826:SF=r645:SF
    Inserting insn reload after:
 2129: r268:SF=r826:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2129:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 910:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 913:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 915:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 916:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 917:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=827 from oldreg=272, assigning class SSE_REGS to r827
  917: r827:SF=r827:SF*r271:SF
      REG_DEAD r271:SF
      REG_DEAD r270:SF
    Inserting insn reload before:
 2130: r827:SF=r270:SF
    Inserting insn reload after:
 2131: r272:SF=r827:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2131:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 919:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 920:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 921:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 922:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 923:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 925:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 927:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 930:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 931:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 932:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 935:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 936:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 939:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 945:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 946:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 950:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 955:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 956:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 957:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 961:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 964:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 965:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 968:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 969:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 970:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 973:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 977:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 979:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 989:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            alt=2,overall=16,losers=2 -- refuse
	 Choosing alt 1 in insn 990:  (0) x  (1) r {*floatsidf2_sse}
      Creating newreg=828 from oldreg=290, assigning class SSE_REGS to r828
  990: r828:DF=float(r289:SI)
      REG_DEAD r289:SI
    Inserting insn reload after:
 2132: r290:DF=r828:DF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=5,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=6,overall=1222,losers=2,rld_nregs=1
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=8: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            alt=9: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=10,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=11,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=12,overall=11,losers=1,rld_nregs=0
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=13: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
          alt=14,overall=610,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=15,overall=14,losers=2 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            1 Non pseudo costly reload: reject++
            alt=16,overall=12,losers=1 -- refuse
            1 Non pseudo reload: reject++
          alt=17,overall=1,losers=0,rld_nregs=0
	 Choosing alt 17 in insn 2132:  (0) r  (1) Yj {*movdf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 991:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=6,overall=6,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 992:  (0) ?m  (1) rC {*movdf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 993:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=5,overall=6,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 994:  (0) ?r  (1) rm {*movdf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=6,overall=6,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 995:  (0) ?m  (1) rC {*movdf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 996:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 997:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 998:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 999:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1000:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1007:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1008:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1011:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1012:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1013:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1016:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1020:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1022:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1024:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1027:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1032:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1033:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1034:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1041:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1042:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1043:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1044:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1045:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1046:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1047:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1050:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1054:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1056:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1057:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1058:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1061:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1066:  (0) ?r  (1) rmF {*movsf_internal}
          alt=0,overall=12,losers=2,rld_nregs=1
            1 Spill pseudo into memory: reject+=3
          alt=1,overall=9,losers=1,rld_nregs=0
	 Choosing alt 1 in insn 1067:  (0) r  (1) m {fix_truncsfsi_sse}
      Creating newreg=829 from oldreg=307, assigning class NO_REGS to r829
 1067: r308:SI=fix(r829:SF)
      REG_DEAD r307:SF
    Inserting insn reload before:
 2133: r829:SF=r307:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=3,overall=1213,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
          alt=4,overall=7,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2133:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1068:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1069:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1070:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1071:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1072:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1073:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1074:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1075:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1076:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1081:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1083:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1084:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1085:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1088:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1093:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1094:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1095:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1096:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1097:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1098:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1099:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1104:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1106:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1107:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1108:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1117:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1118:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1119:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1120:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1121:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1127:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1129:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1130:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1134:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1139:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1140:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1141:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1145:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1146:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1147:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1154:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1156:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1157:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1158:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1161:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1166:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1168:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1171:  (1) rzw {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1173:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1174:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1176:  (1) rzw {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1178:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1179:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1183:  (1) rzw {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1184:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1186:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1189:  (1) rzw {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1191:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1192:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1193:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1194:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1195:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1196:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1197:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1198:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1199:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1200:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1201:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1202:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1203:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1204:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1205:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1206:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1207:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1208:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1212:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1215:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1216:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1217:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1218:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1220:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1221:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1222:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1225:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1231:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1234:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1235:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1236:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1238:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1240:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1243:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1246:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1251:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1252:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1253:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1255:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1257:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1260:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1261:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1262:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1263:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1264:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1265:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1266:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1267:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1270:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1274:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1276:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1278:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1281:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1286:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1287:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1288:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1289:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1290:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1291:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1292:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1296:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1299:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1300:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1301:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1302:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1304:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1305:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1306:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1309:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1313:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1316:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1317:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1320:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1325:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1327:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1329:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1331:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1334:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1335:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1336:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1337:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1338:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1339:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1340:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1341:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1344:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1348:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1350:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1351:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1352:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1355:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1360:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1361:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1362:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1363:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1364:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1365:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1366:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1368:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1370:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1373:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1374:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1375:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1376:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1377:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1378:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1379:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1380:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1383:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1387:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1389:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1390:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1391:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1394:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1399:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1400:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1401:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1403:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1405:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1408:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1409:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1410:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1411:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1412:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1413:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1414:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1415:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1418:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1422:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1424:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1425:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1426:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1429:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1434:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1435:  (0) ?r  (1) rmF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1436:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1437:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1438:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1439:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1440:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1441:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1442:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1443:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1444:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1445:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1446:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1447:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1448:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1451:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1455:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1457:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1458:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1462:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1467:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1468:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1469:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 1470:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=830 from oldreg=401, assigning class SSE_REGS to r830
 1470: r830:SF=r830:SF/r743:SF
      REG_DEAD r743:SF
      REG_DEAD r400:SF
    Inserting insn reload before:
 2134: r830:SF=r400:SF
    Inserting insn reload after:
 2135: r401:SF=r830:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2135:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1471:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1472:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1473:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1474:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1475:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1476:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1477:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1478:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1479:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1480:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1483:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1487:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1489:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1490:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1494:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1499:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1500:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1501:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 1502:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=831 from oldreg=410, assigning class SSE_REGS to r831
 1502: r831:SF=r831:SF/r749:SF
      REG_DEAD r749:SF
      REG_DEAD r409:SF
    Inserting insn reload before:
 2136: r831:SF=r409:SF
    Inserting insn reload after:
 2137: r410:SF=r831:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2137:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1503:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1504:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1505:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1506:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1507:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1508:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1509:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1510:  (0) ?m  (1) rF {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1511:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1512:  (0) ?r  (1) rmF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1513:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1514:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1515:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1516:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1517:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1519:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1521:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1524:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1525:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1528:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1529:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1530:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1531:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1534:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1538:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1540:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1543:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1544:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1545:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1547:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1549:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1552:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1555:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1560:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1561:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1562:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1564:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1566:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1569:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1570:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1571:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1572:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1573:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1574:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1575:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1576:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1579:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1583:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1585:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1586:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1587:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1590:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1595:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1596:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1597:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1599:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1601:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1604:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1605:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1606:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1607:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1608:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1609:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1610:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1611:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1614:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1618:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1620:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1621:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1622:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1625:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1630:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1631:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1632:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1634:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1636:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1639:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1640:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1641:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1642:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1643:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1644:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1645:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1646:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1649:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1653:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1655:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1656:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1657:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1660:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1665:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1666:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1667:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1668:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1670:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1672:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1675:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1676:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1677:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1678:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1679:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1680:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1681:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1682:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1685:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1689:  (1) rzw {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1691:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1694:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1695:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1696:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1698:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1700:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1703:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1706:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1711:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1712:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1713:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1715:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1717:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1720:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1721:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1722:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1723:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1724:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1725:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1726:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1727:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1730:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1734:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1736:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1737:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1738:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1741:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1746:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1747:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1748:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1750:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1752:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1755:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1756:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1757:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1758:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1759:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1760:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1761:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1762:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1765:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1769:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1771:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1772:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1773:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1776:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1781:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1782:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1783:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1785:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1787:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1790:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1791:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1792:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1793:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1794:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1795:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1796:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1797:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1800:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1804:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1806:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1808:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1811:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1816:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1817:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1818:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1819:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1821:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1823:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1826:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1827:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1828:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1829:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1830:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1831:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1832:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1835:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1839:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1841:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1842:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1843:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1846:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1851:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            alt=2,overall=16,losers=2 -- refuse
	 Choosing alt 1 in insn 1852:  (0) x  (1) r {*floatsisf2_sse}
      Creating newreg=832 from oldreg=494, assigning class SSE_REGS to r832
 1852: r832:SF=float(r493:SI)
      REG_DEAD r493:SI
    Inserting insn reload after:
 2138: r494:SF=r832:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2138:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1853:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1854:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1855:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1856:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1858:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1860:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1862:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1865:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1866:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1867:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1868:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1869:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1870:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1871:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1874:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1878:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1880:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1881:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1882:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1885:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1890:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            alt=2,overall=16,losers=2 -- refuse
	 Choosing alt 1 in insn 1891:  (0) x  (1) r {*floatsisf2_sse}
      Creating newreg=833 from oldreg=504, assigning class SSE_REGS to r833
 1891: r833:SF=float(r503:SI)
      REG_DEAD r503:SI
    Inserting insn reload after:
 2139: r504:SF=r833:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2139:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1892:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1893:  (0) ?m  (1) rF {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1894:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1895:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1896:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1897:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1899:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1901:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1904:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1905:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1906:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1907:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1908:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1909:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1910:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1913:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1917:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1919:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1920:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1921:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1924:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1929:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1930:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1931:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1933:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1935:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1938:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1939:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1940:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1941:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1942:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1943:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1944:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1947:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1951:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1953:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1954:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1955:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1958:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1963:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=1,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            alt=2,overall=16,losers=2 -- refuse
	 Choosing alt 1 in insn 1964:  (0) x  (1) r {*floatsisf2_sse}
      Creating newreg=834 from oldreg=522, assigning class SSE_REGS to r834
 1964: r834:SF=float(r521:SI)
      REG_DEAD r521:SI
    Inserting insn reload after:
 2140: r522:SF=r834:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1227,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=623,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=3,overall=1212,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=1222,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=7,overall=613,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=11,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
            1 Non pseudo reload: reject++
          alt=9,overall=7,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 2140:  (0) ?r  (1) Yj {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1965:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1966:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1967:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166
EBB 167

********** Pseudo live ranges #1: **********

  BB 167
   Insn 1977: point = 0
   Insn 1976: point = 0
   Insn 1972: point = 1
  BB 165
   Insn 2120: point = 4
   Insn 1958: point = 4
  BB 159
   Insn 2116: point = 5
   Insn 1885: point = 5
  BB 156
   Insn 2114: point = 6
   Insn 1846: point = 6
  BB 153
   Insn 2112: point = 7
   Insn 1811: point = 7
  BB 150
   Insn 2110: point = 8
   Insn 1776: point = 8
  BB 147
   Insn 2108: point = 9
   Insn 1741: point = 9
  BB 144
   Insn 2106: point = 10
   Insn 1706: point = 10
  BB 139
   Insn 2104: point = 11
   Insn 1660: point = 11
  BB 136
   Insn 2102: point = 12
   Insn 1625: point = 12
  BB 133
   Insn 2100: point = 13
   Insn 1590: point = 13
  BB 130
   Insn 2098: point = 14
   Insn 1555: point = 14
  BB 125
   Insn 2096: point = 15
   Insn 1494: point = 15
  BB 123
   Insn 2094: point = 16
   Insn 1462: point = 16
  BB 121
   Insn 2092: point = 17
   Insn 1429: point = 17
  BB 118
   Insn 2090: point = 18
   Insn 1394: point = 18
  BB 115
   Insn 2088: point = 19
   Insn 1355: point = 19
  BB 112
   Insn 2086: point = 20
   Insn 1320: point = 20
  BB 109
   Insn 2084: point = 21
   Insn 1281: point = 21
  BB 106
   Insn 2082: point = 22
   Insn 1246: point = 22
  BB 101
   Insn 2080: point = 23
   Insn 1161: point = 23
  BB 99
   Insn 2078: point = 24
   Insn 1134: point = 24
  BB 97
   Insn 2076: point = 25
   Insn 1111: point = 25
  BB 95
   Insn 2074: point = 26
   Insn 1088: point = 26
  BB 93
   Insn 2072: point = 27
   Insn 1061: point = 27
  BB 90
   Insn 2070: point = 28
   Insn 1027: point = 28
  BB 87
   Insn 2068: point = 29
   Insn 984: point = 29
  BB 84
   Insn 2066: point = 30
   Insn 950: point = 30
  BB 77
   Insn 2061: point = 31
   Insn 874: point = 31
  BB 74
   Insn 2059: point = 32
   Insn 840: point = 32
  BB 65
   Insn 2053: point = 33
   Insn 680: point = 33
  BB 62
   Insn 2051: point = 34
   Insn 646: point = 34
  BB 59
   Insn 2049: point = 35
   Insn 607: point = 35
  BB 56
   Insn 2047: point = 36
   Insn 573: point = 36
  BB 53
   Insn 2045: point = 37
   Insn 533: point = 37
  BB 50
   Insn 2043: point = 38
   Insn 499: point = 38
  BB 47
   Insn 2041: point = 39
   Insn 460: point = 39
  BB 44
   Insn 2039: point = 40
   Insn 426: point = 40
  BB 41
   Insn 2037: point = 41
   Insn 386: point = 41
  BB 38
   Insn 2035: point = 42
   Insn 352: point = 42
  BB 21
   Insn 2023: point = 43
   Insn 172: point = 43
   Insn 171: point = 44
   Insn 170: point = 45
   Insn 169: point = 45
   Insn 168: point = 47
  BB 3
   Insn 2008: point = 48
   Insn 49: point = 48
   Insn 48: point = 49
   Insn 47: point = 49
   Insn 46: point = 49
   Insn 45: point = 49
   Insn 44: point = 50
   Insn 43: point = 52
  BB 162
   Insn 2118: point = 53
   Insn 1924: point = 53
  BB 166
   Insn 1967: point = 54
   Insn 1966: point = 55
   Insn 1965: point = 56
   Insn 2140: point = 57
	Hard reg 0 is preferable by r834 with profit 1
   Insn 1964: point = 59
   Insn 1963: point = 61
  BB 164
   Insn 1956: point = 62
   Insn 1955: point = 62
   Insn 1954: point = 63
   Insn 1953: point = 65
   Insn 1952: point = 67
   Insn 1951: point = 68
   Insn 1950: point = 68
   Insn 1949: point = 69
   Insn 1948: point = 70
   Insn 1947: point = 71
   Insn 1946: point = 71
   Insn 1945: point = 72
   Insn 1944: point = 73
   Insn 1943: point = 74
   Insn 1942: point = 75
   Insn 1941: point = 76
   Insn 1940: point = 77
   Insn 1939: point = 79
   Insn 1938: point = 81
  BB 163
   Insn 1936: point = 82
   Insn 1935: point = 82
   Insn 1934: point = 83
   Insn 1933: point = 84
   Insn 1932: point = 84
   Insn 1931: point = 85
   Insn 1930: point = 85
   Insn 1929: point = 87
  BB 161
   Insn 1922: point = 88
   Insn 1921: point = 88
   Insn 1920: point = 89
   Insn 1919: point = 91
   Insn 1918: point = 93
   Insn 1917: point = 94
   Insn 1916: point = 94
   Insn 1915: point = 95
   Insn 1914: point = 96
   Insn 1913: point = 97
   Insn 1912: point = 97
   Insn 1911: point = 98
   Insn 1910: point = 99
   Insn 1909: point = 100
   Insn 1908: point = 101
   Insn 1907: point = 102
   Insn 1906: point = 103
   Insn 1905: point = 105
   Insn 1904: point = 107
  BB 160
   Insn 1902: point = 108
   Insn 1901: point = 108
   Insn 1900: point = 109
   Insn 1899: point = 110
   Insn 1898: point = 110
   Insn 1897: point = 111
   Insn 1896: point = 111
   Insn 1895: point = 113
   Insn 1894: point = 114
   Insn 1893: point = 114
   Insn 1892: point = 115
   Insn 2139: point = 116
	Hard reg 0 is preferable by r833 with profit 1
   Insn 1891: point = 118
   Insn 1890: point = 120
  BB 158
   Insn 1883: point = 121
   Insn 1882: point = 121
   Insn 1881: point = 122
   Insn 1880: point = 124
   Insn 1879: point = 126
   Insn 1878: point = 127
   Insn 1877: point = 127
   Insn 1876: point = 128
   Insn 1875: point = 129
   Insn 1874: point = 130
   Insn 1873: point = 130
   Insn 1872: point = 131
   Insn 1871: point = 132
   Insn 1870: point = 133
   Insn 1869: point = 134
   Insn 1868: point = 135
   Insn 1867: point = 136
   Insn 1866: point = 138
   Insn 1865: point = 140
  BB 157
   Insn 1863: point = 141
   Insn 1862: point = 141
   Insn 1861: point = 142
   Insn 1860: point = 143
   Insn 1859: point = 143
   Insn 1858: point = 144
   Insn 1857: point = 144
   Insn 1856: point = 146
   Insn 1855: point = 147
   Insn 1854: point = 147
   Insn 1853: point = 148
   Insn 2138: point = 149
	Hard reg 0 is preferable by r832 with profit 1
   Insn 1852: point = 151
   Insn 1851: point = 153
  BB 155
   Insn 1844: point = 154
   Insn 1843: point = 154
   Insn 1842: point = 155
   Insn 1841: point = 157
   Insn 1840: point = 159
   Insn 1839: point = 160
   Insn 1838: point = 160
   Insn 1837: point = 161
   Insn 1836: point = 162
   Insn 1835: point = 163
   Insn 1834: point = 163
   Insn 1833: point = 164
   Insn 1832: point = 165
   Insn 1831: point = 166
   Insn 1830: point = 167
   Insn 1829: point = 168
   Insn 1828: point = 169
   Insn 1827: point = 171
   Insn 1826: point = 173
  BB 154
   Insn 1824: point = 174
   Insn 1823: point = 174
   Insn 1822: point = 175
   Insn 1821: point = 176
   Insn 1820: point = 176
   Insn 1819: point = 177
   Insn 1818: point = 177
   Insn 1817: point = 179
   Insn 1816: point = 180
  BB 152
   Insn 1809: point = 180
   Insn 1808: point = 180
   Insn 1807: point = 181
   Insn 1806: point = 183
   Insn 1805: point = 185
   Insn 1804: point = 186
   Insn 1803: point = 186
   Insn 1802: point = 187
   Insn 1801: point = 188
   Insn 1800: point = 189
   Insn 1799: point = 189
   Insn 1798: point = 190
   Insn 1797: point = 191
   Insn 1796: point = 192
   Insn 1795: point = 194
   Insn 1794: point = 195
   Insn 1793: point = 196
   Insn 1792: point = 197
   Insn 1791: point = 199
   Insn 1790: point = 201
  BB 151
   Insn 1788: point = 202
   Insn 1787: point = 202
   Insn 1786: point = 203
   Insn 1785: point = 204
   Insn 1784: point = 204
   Insn 1783: point = 205
   Insn 1782: point = 205
   Insn 1781: point = 207
  BB 149
   Insn 1774: point = 208
   Insn 1773: point = 208
   Insn 1772: point = 209
   Insn 1771: point = 211
   Insn 1770: point = 213
   Insn 1769: point = 214
   Insn 1768: point = 214
   Insn 1767: point = 215
   Insn 1766: point = 216
   Insn 1765: point = 217
   Insn 1764: point = 217
   Insn 1763: point = 218
   Insn 1762: point = 219
   Insn 1761: point = 220
   Insn 1760: point = 222
   Insn 1759: point = 223
   Insn 1758: point = 224
   Insn 1757: point = 225
   Insn 1756: point = 227
   Insn 1755: point = 229
  BB 148
   Insn 1753: point = 230
   Insn 1752: point = 230
   Insn 1751: point = 231
   Insn 1750: point = 232
   Insn 1749: point = 232
   Insn 1748: point = 233
   Insn 1747: point = 233
   Insn 1746: point = 235
  BB 146
   Insn 1739: point = 236
   Insn 1738: point = 236
   Insn 1737: point = 237
   Insn 1736: point = 239
   Insn 1735: point = 241
   Insn 1734: point = 242
   Insn 1733: point = 242
   Insn 1732: point = 243
   Insn 1731: point = 244
   Insn 1730: point = 245
   Insn 1729: point = 245
   Insn 1728: point = 246
   Insn 1727: point = 247
   Insn 1726: point = 248
   Insn 1725: point = 250
   Insn 1724: point = 251
   Insn 1723: point = 252
   Insn 1722: point = 253
   Insn 1721: point = 255
   Insn 1720: point = 257
  BB 145
   Insn 1718: point = 258
   Insn 1717: point = 258
   Insn 1716: point = 259
   Insn 1715: point = 260
   Insn 1714: point = 260
   Insn 1713: point = 261
   Insn 1712: point = 261
   Insn 1711: point = 263
  BB 143
   Insn 1704: point = 264
   Insn 1703: point = 264
  BB 142
   Insn 1701: point = 264
   Insn 1700: point = 264
   Insn 1699: point = 265
   Insn 1698: point = 266
   Insn 1697: point = 266
   Insn 1696: point = 267
   Insn 1695: point = 267
   Insn 1694: point = 269
  BB 141
   Insn 1691: point = 270
   Insn 1690: point = 271
   Insn 1689: point = 272
   Insn 1688: point = 272
   Insn 1687: point = 273
   Insn 1686: point = 274
   Insn 1685: point = 275
   Insn 1684: point = 275
   Insn 1683: point = 276
   Insn 1682: point = 277
   Insn 1681: point = 278
   Insn 1680: point = 280
   Insn 1679: point = 281
   Insn 1678: point = 282
   Insn 1677: point = 283
   Insn 1676: point = 285
   Insn 1675: point = 287
  BB 140
   Insn 1673: point = 288
   Insn 1672: point = 288
   Insn 1671: point = 289
   Insn 1670: point = 290
   Insn 1669: point = 290
   Insn 1668: point = 291
   Insn 1667: point = 291
   Insn 1666: point = 293
   Insn 1665: point = 294
  BB 138
   Insn 1658: point = 294
   Insn 1657: point = 294
   Insn 1656: point = 295
   Insn 1655: point = 297
   Insn 1654: point = 299
   Insn 1653: point = 300
   Insn 1652: point = 300
   Insn 1651: point = 301
   Insn 1650: point = 302
   Insn 1649: point = 303
   Insn 1648: point = 303
   Insn 1647: point = 304
   Insn 1646: point = 305
   Insn 1645: point = 306
   Insn 1644: point = 308
   Insn 1643: point = 309
   Insn 1642: point = 310
   Insn 1641: point = 311
   Insn 1640: point = 313
   Insn 1639: point = 315
  BB 137
   Insn 1637: point = 316
   Insn 1636: point = 316
   Insn 1635: point = 317
   Insn 1634: point = 318
   Insn 1633: point = 318
   Insn 1632: point = 319
   Insn 1631: point = 319
   Insn 1630: point = 321
  BB 135
   Insn 1623: point = 322
   Insn 1622: point = 322
   Insn 1621: point = 323
   Insn 1620: point = 325
   Insn 1619: point = 327
   Insn 1618: point = 328
   Insn 1617: point = 328
   Insn 1616: point = 329
   Insn 1615: point = 330
   Insn 1614: point = 331
   Insn 1613: point = 331
   Insn 1612: point = 332
   Insn 1611: point = 333
   Insn 1610: point = 334
   Insn 1609: point = 336
   Insn 1608: point = 337
   Insn 1607: point = 338
   Insn 1606: point = 339
   Insn 1605: point = 341
   Insn 1604: point = 343
  BB 134
   Insn 1602: point = 344
   Insn 1601: point = 344
   Insn 1600: point = 345
   Insn 1599: point = 346
   Insn 1598: point = 346
   Insn 1597: point = 347
   Insn 1596: point = 347
   Insn 1595: point = 349
  BB 132
   Insn 1588: point = 350
   Insn 1587: point = 350
   Insn 1586: point = 351
   Insn 1585: point = 353
   Insn 1584: point = 355
   Insn 1583: point = 356
   Insn 1582: point = 356
   Insn 1581: point = 357
   Insn 1580: point = 358
   Insn 1579: point = 359
   Insn 1578: point = 359
   Insn 1577: point = 360
   Insn 1576: point = 361
   Insn 1575: point = 362
   Insn 1574: point = 364
   Insn 1573: point = 365
   Insn 1572: point = 366
   Insn 1571: point = 367
   Insn 1570: point = 369
   Insn 1569: point = 371
  BB 131
   Insn 1567: point = 372
   Insn 1566: point = 372
   Insn 1565: point = 373
   Insn 1564: point = 374
   Insn 1563: point = 374
   Insn 1562: point = 375
   Insn 1561: point = 375
   Insn 1560: point = 377
  BB 129
   Insn 1553: point = 378
   Insn 1552: point = 378
  BB 128
   Insn 1550: point = 378
   Insn 1549: point = 378
   Insn 1548: point = 379
   Insn 1547: point = 380
   Insn 1546: point = 380
   Insn 1545: point = 381
   Insn 1544: point = 381
   Insn 1543: point = 383
  BB 127
   Insn 1540: point = 384
   Insn 1539: point = 385
   Insn 1538: point = 386
   Insn 1537: point = 386
   Insn 1536: point = 387
   Insn 1535: point = 388
   Insn 1534: point = 389
   Insn 1533: point = 389
   Insn 1532: point = 390
   Insn 1531: point = 391
   Insn 1530: point = 392
   Insn 1529: point = 394
   Insn 1528: point = 395
   Insn 1527: point = 396
   Insn 1526: point = 397
   Insn 1525: point = 399
   Insn 1524: point = 401
  BB 126
   Insn 1522: point = 402
   Insn 1521: point = 402
   Insn 1520: point = 403
   Insn 1519: point = 404
   Insn 1518: point = 404
   Insn 1517: point = 405
   Insn 1516: point = 405
   Insn 1515: point = 407
   Insn 1514: point = 408
   Insn 1513: point = 408
   Insn 1512: point = 409
   Insn 1511: point = 410
   Insn 1510: point = 411
   Insn 1509: point = 412
   Insn 1508: point = 413
   Insn 1507: point = 414
   Insn 1506: point = 415
   Insn 1505: point = 416
   Insn 1504: point = 417
   Insn 1503: point = 418
   Insn 2137: point = 419
	Hard reg 0 is preferable by r831 with profit 1
   Insn 1502: point = 421
   Insn 2136: point = 422
	Hard reg 0 is preferable by r831 with profit 1
	Hard reg 21 is preferable by r831 with profit 1
   Insn 1501: point = 424
   Insn 1500: point = 425
   Insn 1499: point = 427
  BB 124
   Insn 1492: point = 428
   Insn 1491: point = 428
   Insn 1490: point = 429
   Insn 1489: point = 431
   Insn 1488: point = 433
   Insn 1487: point = 434
   Insn 1486: point = 434
   Insn 1485: point = 435
   Insn 1484: point = 436
   Insn 1483: point = 437
   Insn 1482: point = 437
   Insn 1481: point = 438
   Insn 1480: point = 439
   Insn 1479: point = 440
   Insn 1478: point = 441
   Insn 1477: point = 442
   Insn 1476: point = 443
   Insn 1475: point = 445
   Insn 1474: point = 447
   Insn 1473: point = 448
   Insn 1472: point = 448
   Insn 1471: point = 449
   Insn 2135: point = 450
	Hard reg 0 is preferable by r830 with profit 1
   Insn 1470: point = 452
   Insn 2134: point = 453
	Hard reg 0 is preferable by r830 with profit 1
	Hard reg 21 is preferable by r830 with profit 1
   Insn 1469: point = 455
   Insn 1468: point = 456
   Insn 1467: point = 458
  BB 122
   Insn 1460: point = 459
   Insn 1459: point = 459
   Insn 1458: point = 460
   Insn 1457: point = 462
   Insn 1456: point = 464
   Insn 1455: point = 465
   Insn 1454: point = 465
   Insn 1453: point = 466
   Insn 1452: point = 467
   Insn 1451: point = 468
   Insn 1450: point = 468
   Insn 1449: point = 469
   Insn 1448: point = 470
   Insn 1447: point = 471
   Insn 1446: point = 472
   Insn 1445: point = 473
   Insn 1444: point = 474
   Insn 1443: point = 476
   Insn 1442: point = 478
   Insn 1441: point = 479
   Insn 1440: point = 479
   Insn 1439: point = 480
   Insn 1438: point = 481
   Insn 1437: point = 482
   Insn 1436: point = 483
   Insn 1435: point = 484
   Insn 1434: point = 486
  BB 120
   Insn 1427: point = 487
   Insn 1426: point = 487
   Insn 1425: point = 488
   Insn 1424: point = 490
   Insn 1423: point = 492
   Insn 1422: point = 493
   Insn 1421: point = 493
   Insn 1420: point = 494
   Insn 1419: point = 495
   Insn 1418: point = 496
   Insn 1417: point = 496
   Insn 1416: point = 497
   Insn 1415: point = 498
   Insn 1414: point = 499
   Insn 1413: point = 501
   Insn 1412: point = 502
   Insn 1411: point = 503
   Insn 1410: point = 504
   Insn 1409: point = 506
   Insn 1408: point = 508
  BB 119
   Insn 1406: point = 509
   Insn 1405: point = 509
   Insn 1404: point = 510
   Insn 1403: point = 511
   Insn 1402: point = 511
   Insn 1401: point = 512
   Insn 1400: point = 512
   Insn 1399: point = 514
  BB 117
   Insn 1392: point = 515
   Insn 1391: point = 515
   Insn 1390: point = 516
   Insn 1389: point = 518
   Insn 1388: point = 520
   Insn 1387: point = 521
   Insn 1386: point = 521
   Insn 1385: point = 522
   Insn 1384: point = 523
   Insn 1383: point = 524
   Insn 1382: point = 524
   Insn 1381: point = 525
   Insn 1380: point = 526
   Insn 1379: point = 527
   Insn 1378: point = 529
   Insn 1377: point = 530
   Insn 1376: point = 531
   Insn 1375: point = 532
   Insn 1374: point = 534
   Insn 1373: point = 536
  BB 116
   Insn 1371: point = 537
   Insn 1370: point = 537
   Insn 1369: point = 538
   Insn 1368: point = 539
   Insn 1367: point = 539
   Insn 1366: point = 540
   Insn 1365: point = 540
   Insn 1364: point = 542
   Insn 1363: point = 543
   Insn 1362: point = 544
   Insn 1361: point = 545
   Insn 1360: point = 547
  BB 114
   Insn 1353: point = 548
   Insn 1352: point = 548
   Insn 1351: point = 549
   Insn 1350: point = 551
   Insn 1349: point = 553
   Insn 1348: point = 554
   Insn 1347: point = 554
   Insn 1346: point = 555
   Insn 1345: point = 556
   Insn 1344: point = 557
   Insn 1343: point = 557
   Insn 1342: point = 558
   Insn 1341: point = 559
   Insn 1340: point = 560
   Insn 1339: point = 562
   Insn 1338: point = 563
   Insn 1337: point = 564
   Insn 1336: point = 565
   Insn 1335: point = 567
   Insn 1334: point = 569
  BB 113
   Insn 1332: point = 570
   Insn 1331: point = 570
   Insn 1330: point = 571
   Insn 1329: point = 572
   Insn 1328: point = 572
   Insn 1327: point = 573
   Insn 1326: point = 573
   Insn 1325: point = 575
  BB 111
   Insn 1318: point = 576
   Insn 1317: point = 576
   Insn 1316: point = 577
   Insn 1315: point = 579
   Insn 1314: point = 581
   Insn 1313: point = 582
   Insn 1312: point = 582
   Insn 1311: point = 583
   Insn 1310: point = 584
   Insn 1309: point = 585
   Insn 1308: point = 585
   Insn 1307: point = 586
   Insn 1306: point = 587
   Insn 1305: point = 588
   Insn 1304: point = 590
   Insn 1303: point = 591
   Insn 1302: point = 592
   Insn 1301: point = 593
   Insn 1300: point = 595
   Insn 1299: point = 597
  BB 110
   Insn 1297: point = 598
   Insn 1296: point = 598
   Insn 1295: point = 599
   Insn 1294: point = 600
   Insn 1293: point = 600
   Insn 1292: point = 601
   Insn 1291: point = 601
   Insn 1290: point = 603
   Insn 1289: point = 604
   Insn 1288: point = 605
   Insn 1287: point = 606
   Insn 1286: point = 608
  BB 108
   Insn 1279: point = 609
   Insn 1278: point = 609
   Insn 1277: point = 610
   Insn 1276: point = 612
   Insn 1275: point = 614
   Insn 1274: point = 615
   Insn 1273: point = 615
   Insn 1272: point = 616
   Insn 1271: point = 617
   Insn 1270: point = 618
   Insn 1269: point = 618
   Insn 1268: point = 619
   Insn 1267: point = 620
   Insn 1266: point = 621
   Insn 1265: point = 623
   Insn 1264: point = 624
   Insn 1263: point = 625
   Insn 1262: point = 626
   Insn 1261: point = 628
   Insn 1260: point = 630
  BB 107
   Insn 1258: point = 631
   Insn 1257: point = 631
   Insn 1256: point = 632
   Insn 1255: point = 633
   Insn 1254: point = 633
   Insn 1253: point = 634
   Insn 1252: point = 634
   Insn 1251: point = 636
  BB 105
   Insn 1244: point = 637
   Insn 1243: point = 637
  BB 104
   Insn 1241: point = 637
   Insn 1240: point = 637
   Insn 1239: point = 638
   Insn 1238: point = 639
   Insn 1237: point = 639
   Insn 1236: point = 640
   Insn 1235: point = 640
   Insn 1234: point = 642
  BB 103
   Insn 1231: point = 643
   Insn 1230: point = 644
   Insn 1229: point = 645
   Insn 1228: point = 645
   Insn 1227: point = 646
   Insn 1226: point = 647
   Insn 1225: point = 648
   Insn 1224: point = 648
   Insn 1223: point = 649
   Insn 1222: point = 650
   Insn 1221: point = 651
   Insn 1220: point = 653
   Insn 1219: point = 654
   Insn 1218: point = 655
   Insn 1217: point = 656
   Insn 1216: point = 658
   Insn 1215: point = 660
  BB 102
   Insn 1213: point = 661
   Insn 1212: point = 661
   Insn 1211: point = 662
   Insn 1210: point = 663
   Insn 1209: point = 663
   Insn 1208: point = 664
   Insn 1207: point = 664
   Insn 1206: point = 666
   Insn 1205: point = 667
   Insn 1204: point = 667
   Insn 1203: point = 667
   Insn 1202: point = 667
   Insn 1201: point = 668
   Insn 1200: point = 669
   Insn 1199: point = 670
   Insn 1198: point = 671
   Insn 1197: point = 672
   Insn 1196: point = 673
   Insn 1195: point = 674
   Insn 1194: point = 675
   Insn 1193: point = 676
   Insn 1192: point = 677
   Insn 1191: point = 678
   Insn 1190: point = 680
   Insn 1189: point = 681
   Insn 1188: point = 681
   Insn 1187: point = 682
   Insn 1186: point = 683
   Insn 1185: point = 683
   Insn 1184: point = 684
   Insn 1183: point = 685
   Insn 1182: point = 685
   Insn 1181: point = 686
   Insn 1180: point = 687
   Insn 1179: point = 688
   Insn 1178: point = 690
   Insn 1177: point = 691
   Insn 1176: point = 692
   Insn 1175: point = 692
   Insn 1174: point = 693
   Insn 1173: point = 694
   Insn 1172: point = 696
   Insn 1171: point = 697
   Insn 1170: point = 697
   Insn 1169: point = 698
   Insn 1168: point = 699
   Insn 1167: point = 699
   Insn 1166: point = 700
  BB 100
   Insn 1159: point = 701
   Insn 1158: point = 701
   Insn 1157: point = 702
   Insn 1156: point = 704
   Insn 1155: point = 706
   Insn 1154: point = 707
   Insn 1153: point = 707
   Insn 1152: point = 708
   Insn 1151: point = 709
   Insn 1150: point = 710
   Insn 1149: point = 711
   Insn 1148: point = 712
   Insn 1147: point = 713
   Insn 1146: point = 714
   Insn 1145: point = 715
   Insn 1144: point = 716
   Insn 1143: point = 717
   Insn 1142: point = 718
   Insn 1141: point = 720
   Insn 1140: point = 722
   Insn 1139: point = 723
  BB 98
   Insn 1132: point = 723
   Insn 1131: point = 723
   Insn 1130: point = 724
   Insn 1129: point = 726
   Insn 1128: point = 728
   Insn 1127: point = 729
   Insn 1126: point = 729
   Insn 1125: point = 730
   Insn 1124: point = 731
   Insn 1123: point = 732
   Insn 1122: point = 733
   Insn 1121: point = 733
   Insn 1120: point = 733
   Insn 1119: point = 734
   Insn 1118: point = 735
   Insn 1117: point = 737
   Insn 1116: point = 738
  BB 96
   Insn 1109: point = 739
   Insn 1108: point = 739
   Insn 1107: point = 740
   Insn 1106: point = 742
   Insn 1105: point = 744
   Insn 1104: point = 745
   Insn 1103: point = 745
   Insn 1102: point = 746
   Insn 1101: point = 747
   Insn 1100: point = 748
   Insn 1099: point = 749
   Insn 1098: point = 749
   Insn 1097: point = 749
   Insn 1096: point = 750
   Insn 1095: point = 751
   Insn 1094: point = 753
   Insn 1093: point = 754
  BB 94
   Insn 1086: point = 755
   Insn 1085: point = 755
   Insn 1084: point = 756
   Insn 1083: point = 758
   Insn 1082: point = 760
   Insn 1081: point = 761
   Insn 1080: point = 761
   Insn 1079: point = 762
   Insn 1078: point = 763
   Insn 1077: point = 764
   Insn 1076: point = 765
   Insn 1075: point = 765
   Insn 1074: point = 765
   Insn 1073: point = 766
   Insn 1072: point = 767
   Insn 1071: point = 769
   Insn 1070: point = 770
   Insn 1069: point = 771
   Insn 1068: point = 772
   Insn 1067: point = 773
   Insn 2133: point = 775
	Hard reg 0 is preferable by r829 with profit 1
   Insn 1066: point = 777
  BB 92
   Insn 1059: point = 778
   Insn 1058: point = 778
   Insn 1057: point = 779
   Insn 1056: point = 781
   Insn 1055: point = 783
   Insn 1054: point = 784
   Insn 1053: point = 784
   Insn 1052: point = 785
   Insn 1051: point = 786
   Insn 1050: point = 787
   Insn 1049: point = 787
   Insn 1048: point = 788
   Insn 1047: point = 789
   Insn 1046: point = 790
   Insn 1045: point = 791
   Insn 1044: point = 792
   Insn 1043: point = 793
   Insn 1042: point = 795
   Insn 1041: point = 797
  BB 91
   Insn 1039: point = 798
   Insn 1038: point = 798
   Insn 1037: point = 799
   Insn 1036: point = 800
   Insn 1035: point = 800
   Insn 1034: point = 801
   Insn 1033: point = 801
   Insn 1032: point = 803
  BB 89
   Insn 1025: point = 804
   Insn 1024: point = 804
   Insn 1023: point = 805
   Insn 1022: point = 807
   Insn 1021: point = 809
   Insn 1020: point = 810
   Insn 1019: point = 810
   Insn 1018: point = 811
   Insn 1017: point = 812
   Insn 1016: point = 813
   Insn 1015: point = 813
   Insn 1014: point = 814
   Insn 1013: point = 815
   Insn 1012: point = 816
   Insn 1011: point = 817
   Insn 1010: point = 818
   Insn 1009: point = 819
   Insn 1008: point = 821
   Insn 1007: point = 823
  BB 88
   Insn 1005: point = 824
   Insn 1004: point = 824
   Insn 1003: point = 825
   Insn 1002: point = 826
   Insn 1001: point = 826
   Insn 1000: point = 827
   Insn 999: point = 827
   Insn 998: point = 829
   Insn 997: point = 830
   Insn 996: point = 831
   Insn 995: point = 832
   Insn 994: point = 833
   Insn 993: point = 834
   Insn 992: point = 835
   Insn 991: point = 836
   Insn 2132: point = 837
	Hard reg 0 is preferable by r828 with profit 1
   Insn 990: point = 839
   Insn 989: point = 841
  BB 86
   Insn 982: point = 842
   Insn 981: point = 842
   Insn 980: point = 843
   Insn 979: point = 845
   Insn 978: point = 847
   Insn 977: point = 848
   Insn 976: point = 848
   Insn 975: point = 849
   Insn 974: point = 850
   Insn 973: point = 851
   Insn 972: point = 851
   Insn 971: point = 852
   Insn 970: point = 853
   Insn 969: point = 854
   Insn 968: point = 855
   Insn 967: point = 856
   Insn 966: point = 857
   Insn 965: point = 859
   Insn 964: point = 861
  BB 85
   Insn 962: point = 862
   Insn 961: point = 862
   Insn 960: point = 863
   Insn 959: point = 864
   Insn 958: point = 864
   Insn 957: point = 865
   Insn 956: point = 865
   Insn 955: point = 867
  BB 83
   Insn 948: point = 868
   Insn 947: point = 868
   Insn 946: point = 869
   Insn 945: point = 871
   Insn 944: point = 873
   Insn 943: point = 874
   Insn 942: point = 874
   Insn 941: point = 875
   Insn 940: point = 876
   Insn 939: point = 877
   Insn 938: point = 877
   Insn 937: point = 878
   Insn 936: point = 879
   Insn 935: point = 880
   Insn 934: point = 881
   Insn 933: point = 882
   Insn 932: point = 883
   Insn 931: point = 885
   Insn 930: point = 887
  BB 82
   Insn 928: point = 888
   Insn 927: point = 888
   Insn 926: point = 889
   Insn 925: point = 890
   Insn 924: point = 890
   Insn 923: point = 891
   Insn 922: point = 891
   Insn 921: point = 893
   Insn 920: point = 894
   Insn 919: point = 894
   Insn 918: point = 895
   Insn 2131: point = 896
	Hard reg 0 is preferable by r827 with profit 1
   Insn 917: point = 898
   Insn 2130: point = 899
	Hard reg 0 is preferable by r827 with profit 1
	Hard reg 21 is preferable by r827 with profit 1
   Insn 916: point = 901
   Insn 915: point = 902
   Insn 914: point = 904
   Insn 913: point = 906
  BB 80
   Insn 2064: point = 907
   Insn 893: point = 907
   Insn 2127: point = 908
	Hard reg 0 is preferable by r825 with profit 1
   Insn 892: point = 910
   Insn 2126: point = 911
	Hard reg 0 is preferable by r825 with profit 1
	Hard reg 21 is preferable by r825 with profit 1
   Insn 891: point = 913
   Insn 890: point = 914
  BB 81
   Insn 910: point = 915
   Insn 2129: point = 916
	Hard reg 0 is preferable by r826 with profit 1
   Insn 909: point = 918
   Insn 2128: point = 919
	Hard reg 0 is preferable by r826 with profit 1
	Hard reg 21 is preferable by r826 with profit 1
   Insn 908: point = 921
   Insn 907: point = 922
   Insn 906: point = 923
   Insn 905: point = 923
   Insn 904: point = 923
   Insn 903: point = 923
   Insn 902: point = 924
   Insn 901: point = 925
   Insn 900: point = 925
   Insn 899: point = 925
   Insn 898: point = 925
  BB 79
   Insn 885: point = 925
   Insn 884: point = 925
   Insn 883: point = 926
  BB 78
   Insn 882: point = 928
   Insn 881: point = 928
   Insn 880: point = 929
   Insn 879: point = 930
  BB 76
   Insn 872: point = 931
   Insn 871: point = 931
   Insn 870: point = 932
   Insn 869: point = 934
   Insn 868: point = 936
   Insn 867: point = 937
   Insn 866: point = 937
   Insn 865: point = 938
   Insn 864: point = 939
   Insn 863: point = 940
   Insn 862: point = 940
   Insn 861: point = 941
   Insn 860: point = 942
   Insn 859: point = 943
   Insn 858: point = 944
   Insn 857: point = 945
   Insn 856: point = 946
   Insn 855: point = 948
   Insn 854: point = 950
  BB 75
   Insn 852: point = 951
   Insn 851: point = 951
   Insn 850: point = 952
   Insn 849: point = 953
   Insn 848: point = 953
   Insn 847: point = 954
   Insn 846: point = 954
   Insn 845: point = 956
  BB 73
   Insn 838: point = 957
   Insn 837: point = 957
   Insn 836: point = 958
   Insn 835: point = 960
   Insn 834: point = 962
   Insn 833: point = 963
   Insn 832: point = 963
   Insn 831: point = 964
   Insn 830: point = 965
   Insn 829: point = 966
   Insn 828: point = 966
   Insn 827: point = 967
   Insn 826: point = 968
   Insn 825: point = 969
   Insn 824: point = 970
   Insn 823: point = 971
   Insn 822: point = 972
   Insn 821: point = 974
   Insn 820: point = 976
  BB 72
   Insn 818: point = 977
   Insn 817: point = 977
   Insn 816: point = 978
   Insn 815: point = 979
   Insn 814: point = 979
   Insn 813: point = 980
   Insn 812: point = 980
   Insn 811: point = 982
   Insn 810: point = 983
   Insn 809: point = 984
   Insn 808: point = 985
   Insn 807: point = 986
   Insn 806: point = 988
   Insn 802: point = 989
   Insn 801: point = 991
   Insn 800: point = 993
   Insn 799: point = 995
   Insn 798: point = 996
   Insn 797: point = 998
   Insn 796: point = 1000
   Insn 795: point = 1002
   Insn 794: point = 1003
   Insn 793: point = 1005
   Insn 792: point = 1007
   Insn 791: point = 1009
   Insn 790: point = 1010
   Insn 789: point = 1012
   Insn 788: point = 1014
   Insn 787: point = 1015
   Insn 786: point = 1016
   Insn 785: point = 1017
   Insn 784: point = 1019
   Insn 783: point = 1020
   Insn 782: point = 1020
   Insn 781: point = 1021
   Insn 780: point = 1022
   Insn 779: point = 1022
   Insn 778: point = 1023
   Insn 777: point = 1023
   Insn 776: point = 1023
   Insn 775: point = 1024
   Insn 774: point = 1024
   Insn 773: point = 1024
   Insn 772: point = 1024
   Insn 771: point = 1025
   Insn 770: point = 1027
   Insn 769: point = 1028
   Insn 768: point = 1028
   Insn 767: point = 1028
   Insn 766: point = 1028
   Insn 765: point = 1029
   Insn 764: point = 1031
   Insn 763: point = 1032
   Insn 762: point = 1032
   Insn 761: point = 1032
   Insn 760: point = 1032
   Insn 759: point = 1033
   Insn 758: point = 1034
   Insn 757: point = 1035
   Insn 756: point = 1036
   Insn 755: point = 1037
   Insn 754: point = 1037
   Insn 753: point = 1037
   Insn 752: point = 1037
   Insn 751: point = 1038
   Insn 750: point = 1040
   Insn 749: point = 1041
   Insn 748: point = 1042
   Insn 747: point = 1043
   Insn 746: point = 1045
   Insn 745: point = 1047
   Insn 744: point = 1049
   Insn 743: point = 1051
   Insn 742: point = 1053
   Insn 741: point = 1054
   Insn 740: point = 1056
  BB 69
   Insn 2057: point = 1057
   Insn 726: point = 1057
   Insn 725: point = 1057
   Insn 724: point = 1058
  BB 67
   Insn 2055: point = 1059
   Insn 715: point = 1059
   Insn 714: point = 1059
   Insn 713: point = 1060
  BB 71
   Insn 737: point = 1061
   Insn 736: point = 1061
   Insn 735: point = 1062
  BB 70
   Insn 733: point = 1063
   Insn 732: point = 1063
   Insn 731: point = 1064
  BB 68
   Insn 722: point = 1065
   Insn 721: point = 1065
   Insn 720: point = 1066
  BB 66
   Insn 711: point = 1067
   Insn 710: point = 1067
   Insn 709: point = 1068
   Insn 708: point = 1069
   Insn 707: point = 1069
   Insn 706: point = 1069
   Insn 705: point = 1069
   Insn 704: point = 1070
   Insn 703: point = 1071
   Insn 702: point = 1071
   Insn 701: point = 1071
   Insn 700: point = 1071
   Insn 699: point = 1072
   Insn 698: point = 1074
   Insn 697: point = 1076
   Insn 696: point = 1078
   Insn 695: point = 1079
   Insn 694: point = 1081
   Insn 693: point = 1083
   Insn 692: point = 1084
   Insn 691: point = 1085
   Insn 690: point = 1086
   Insn 689: point = 1088
   Insn 688: point = 1089
   Insn 687: point = 1090
   Insn 686: point = 1091
   Insn 685: point = 1093
  BB 64
   Insn 678: point = 1094
   Insn 677: point = 1094
   Insn 676: point = 1095
   Insn 675: point = 1097
   Insn 674: point = 1099
   Insn 673: point = 1100
   Insn 672: point = 1100
   Insn 671: point = 1101
   Insn 670: point = 1102
   Insn 669: point = 1103
   Insn 668: point = 1103
   Insn 667: point = 1104
   Insn 666: point = 1105
   Insn 665: point = 1106
   Insn 664: point = 1107
   Insn 663: point = 1108
   Insn 662: point = 1109
   Insn 661: point = 1111
   Insn 660: point = 1113
  BB 63
   Insn 658: point = 1114
   Insn 657: point = 1114
   Insn 656: point = 1115
   Insn 655: point = 1116
   Insn 654: point = 1116
   Insn 653: point = 1117
   Insn 652: point = 1117
   Insn 651: point = 1119
  BB 61
   Insn 644: point = 1120
   Insn 643: point = 1120
   Insn 642: point = 1121
   Insn 641: point = 1123
   Insn 640: point = 1125
   Insn 639: point = 1126
   Insn 638: point = 1126
   Insn 637: point = 1127
   Insn 636: point = 1128
   Insn 635: point = 1129
   Insn 634: point = 1129
   Insn 633: point = 1130
   Insn 632: point = 1131
   Insn 631: point = 1132
   Insn 630: point = 1133
   Insn 629: point = 1134
   Insn 628: point = 1135
   Insn 627: point = 1137
   Insn 626: point = 1139
  BB 60
   Insn 624: point = 1140
   Insn 623: point = 1140
   Insn 622: point = 1141
   Insn 621: point = 1142
   Insn 620: point = 1142
   Insn 619: point = 1143
   Insn 618: point = 1143
   Insn 617: point = 1145
   Insn 616: point = 1146
   Insn 615: point = 1146
   Insn 614: point = 1147
   Insn 613: point = 1148
   Insn 612: point = 1150
  BB 58
   Insn 605: point = 1151
   Insn 604: point = 1151
   Insn 603: point = 1152
   Insn 602: point = 1154
   Insn 601: point = 1156
   Insn 600: point = 1157
   Insn 599: point = 1157
   Insn 598: point = 1158
   Insn 597: point = 1159
   Insn 596: point = 1160
   Insn 595: point = 1160
   Insn 594: point = 1161
   Insn 593: point = 1162
   Insn 592: point = 1163
   Insn 591: point = 1164
   Insn 590: point = 1165
   Insn 589: point = 1166
   Insn 588: point = 1168
   Insn 587: point = 1170
  BB 57
   Insn 585: point = 1171
   Insn 584: point = 1171
   Insn 583: point = 1172
   Insn 582: point = 1173
   Insn 581: point = 1173
   Insn 580: point = 1174
   Insn 579: point = 1174
   Insn 578: point = 1176
  BB 55
   Insn 571: point = 1177
   Insn 570: point = 1177
   Insn 569: point = 1178
   Insn 568: point = 1180
   Insn 567: point = 1182
   Insn 566: point = 1183
   Insn 565: point = 1183
   Insn 564: point = 1184
   Insn 563: point = 1185
   Insn 562: point = 1186
   Insn 561: point = 1186
   Insn 560: point = 1187
   Insn 559: point = 1188
   Insn 558: point = 1189
   Insn 557: point = 1190
   Insn 556: point = 1191
   Insn 555: point = 1192
   Insn 554: point = 1194
   Insn 553: point = 1196
  BB 54
   Insn 551: point = 1197
   Insn 550: point = 1197
   Insn 549: point = 1198
   Insn 548: point = 1199
   Insn 547: point = 1199
   Insn 546: point = 1200
   Insn 545: point = 1200
   Insn 544: point = 1202
   Insn 543: point = 1203
   Insn 542: point = 1203
   Insn 541: point = 1204
   Insn 540: point = 1205
   Insn 539: point = 1207
   Insn 538: point = 1209
  BB 52
   Insn 531: point = 1210
   Insn 530: point = 1210
   Insn 529: point = 1211
   Insn 528: point = 1213
   Insn 527: point = 1215
   Insn 526: point = 1216
   Insn 525: point = 1216
   Insn 524: point = 1217
   Insn 523: point = 1218
   Insn 522: point = 1219
   Insn 521: point = 1219
   Insn 520: point = 1220
   Insn 519: point = 1221
   Insn 518: point = 1222
   Insn 517: point = 1223
   Insn 516: point = 1224
   Insn 515: point = 1225
   Insn 514: point = 1227
   Insn 513: point = 1229
  BB 51
   Insn 511: point = 1230
   Insn 510: point = 1230
   Insn 509: point = 1231
   Insn 508: point = 1232
   Insn 507: point = 1232
   Insn 506: point = 1233
   Insn 505: point = 1233
   Insn 504: point = 1235
  BB 49
   Insn 497: point = 1236
   Insn 496: point = 1236
   Insn 495: point = 1237
   Insn 494: point = 1239
   Insn 493: point = 1241
   Insn 492: point = 1242
   Insn 491: point = 1242
   Insn 490: point = 1243
   Insn 489: point = 1244
   Insn 488: point = 1245
   Insn 487: point = 1245
   Insn 486: point = 1246
   Insn 485: point = 1247
   Insn 484: point = 1248
   Insn 483: point = 1249
   Insn 482: point = 1250
   Insn 481: point = 1251
   Insn 480: point = 1253
   Insn 479: point = 1255
  BB 48
   Insn 477: point = 1256
   Insn 476: point = 1256
   Insn 475: point = 1257
   Insn 474: point = 1258
   Insn 473: point = 1258
   Insn 472: point = 1259
   Insn 471: point = 1259
   Insn 470: point = 1261
   Insn 469: point = 1262
   Insn 468: point = 1262
   Insn 467: point = 1263
   Insn 466: point = 1264
   Insn 2125: point = 1266
	Hard reg 0 is preferable by r823 with profit 1
   Insn 465: point = 1268
  BB 46
   Insn 458: point = 1269
   Insn 457: point = 1269
   Insn 456: point = 1270
   Insn 455: point = 1272
   Insn 454: point = 1274
   Insn 453: point = 1275
   Insn 452: point = 1275
   Insn 451: point = 1276
   Insn 450: point = 1277
   Insn 449: point = 1278
   Insn 448: point = 1278
   Insn 447: point = 1279
   Insn 446: point = 1280
   Insn 445: point = 1281
   Insn 444: point = 1282
   Insn 443: point = 1283
   Insn 442: point = 1284
   Insn 441: point = 1286
   Insn 440: point = 1288
  BB 45
   Insn 438: point = 1289
   Insn 437: point = 1289
   Insn 436: point = 1290
   Insn 435: point = 1291
   Insn 434: point = 1291
   Insn 433: point = 1292
   Insn 432: point = 1292
   Insn 431: point = 1294
  BB 43
   Insn 424: point = 1295
   Insn 423: point = 1295
   Insn 422: point = 1296
   Insn 421: point = 1298
   Insn 420: point = 1300
   Insn 419: point = 1301
   Insn 418: point = 1301
   Insn 417: point = 1302
   Insn 416: point = 1303
   Insn 415: point = 1304
   Insn 414: point = 1304
   Insn 413: point = 1305
   Insn 412: point = 1306
   Insn 411: point = 1307
   Insn 410: point = 1308
   Insn 409: point = 1309
   Insn 408: point = 1310
   Insn 407: point = 1312
   Insn 406: point = 1314
  BB 42
   Insn 404: point = 1315
   Insn 403: point = 1315
   Insn 402: point = 1316
   Insn 401: point = 1317
   Insn 400: point = 1317
   Insn 399: point = 1318
   Insn 398: point = 1318
   Insn 397: point = 1320
   Insn 396: point = 1321
   Insn 395: point = 1322
   Insn 394: point = 1323
   Insn 393: point = 1324
   Insn 392: point = 1325
   Insn 391: point = 1327
  BB 40
   Insn 384: point = 1328
   Insn 383: point = 1328
   Insn 382: point = 1329
   Insn 381: point = 1331
   Insn 380: point = 1333
   Insn 379: point = 1334
   Insn 378: point = 1334
   Insn 377: point = 1335
   Insn 376: point = 1336
   Insn 375: point = 1337
   Insn 374: point = 1337
   Insn 373: point = 1338
   Insn 372: point = 1339
   Insn 371: point = 1340
   Insn 370: point = 1341
   Insn 369: point = 1342
   Insn 368: point = 1343
   Insn 367: point = 1345
   Insn 366: point = 1347
  BB 39
   Insn 364: point = 1348
   Insn 363: point = 1348
   Insn 362: point = 1349
   Insn 361: point = 1350
   Insn 360: point = 1350
   Insn 359: point = 1351
   Insn 358: point = 1351
   Insn 357: point = 1353
  BB 37
   Insn 350: point = 1354
   Insn 349: point = 1354
   Insn 348: point = 1355
   Insn 347: point = 1357
   Insn 346: point = 1359
   Insn 345: point = 1360
   Insn 344: point = 1360
   Insn 343: point = 1361
   Insn 342: point = 1362
   Insn 341: point = 1363
   Insn 340: point = 1363
   Insn 339: point = 1364
   Insn 338: point = 1365
   Insn 337: point = 1366
   Insn 336: point = 1367
   Insn 335: point = 1368
   Insn 334: point = 1369
   Insn 333: point = 1371
   Insn 332: point = 1373
  BB 36
   Insn 330: point = 1374
   Insn 329: point = 1374
   Insn 328: point = 1375
   Insn 327: point = 1376
   Insn 326: point = 1376
   Insn 325: point = 1377
   Insn 324: point = 1377
   Insn 323: point = 1379
   Insn 322: point = 1380
  BB 33
   Insn 2033: point = 1380
   Insn 297: point = 1380
   Insn 296: point = 1380
   Insn 295: point = 1380
   Insn 294: point = 1380
   Insn 293: point = 1380
   Insn 292: point = 1380
   Insn 291: point = 1380
   Insn 290: point = 1380
   Insn 289: point = 1380
   Insn 288: point = 1380
   Insn 287: point = 1381
   Insn 286: point = 1383
  BB 31
   Insn 2031: point = 1384
   Insn 272: point = 1384
   Insn 271: point = 1384
   Insn 270: point = 1384
   Insn 269: point = 1384
   Insn 268: point = 1384
   Insn 267: point = 1384
   Insn 266: point = 1384
  BB 29
   Insn 2029: point = 1384
   Insn 252: point = 1384
   Insn 251: point = 1384
   Insn 250: point = 1384
   Insn 249: point = 1384
   Insn 248: point = 1384
   Insn 247: point = 1384
   Insn 246: point = 1384
  BB 27
   Insn 2027: point = 1384
   Insn 232: point = 1384
   Insn 231: point = 1384
   Insn 230: point = 1384
   Insn 229: point = 1384
   Insn 228: point = 1384
   Insn 227: point = 1384
   Insn 226: point = 1384
  BB 24
   Insn 2025: point = 1384
   Insn 202: point = 1384
   Insn 201: point = 1384
   Insn 200: point = 1384
   Insn 199: point = 1384
   Insn 198: point = 1384
   Insn 197: point = 1384
   Insn 196: point = 1384
  BB 35
   Insn 319: point = 1384
   Insn 318: point = 1384
   Insn 317: point = 1384
   Insn 316: point = 1384
   Insn 315: point = 1384
   Insn 314: point = 1384
   Insn 313: point = 1384
   Insn 312: point = 1384
   Insn 311: point = 1384
  BB 34
   Insn 309: point = 1384
   Insn 308: point = 1384
   Insn 307: point = 1385
   Insn 306: point = 1386
   Insn 305: point = 1386
   Insn 304: point = 1387
   Insn 303: point = 1387
   Insn 302: point = 1389
  BB 32
   Insn 284: point = 1390
   Insn 283: point = 1390
   Insn 282: point = 1391
   Insn 281: point = 1392
   Insn 280: point = 1392
   Insn 279: point = 1393
   Insn 278: point = 1393
   Insn 277: point = 1395
  BB 30
   Insn 264: point = 1396
   Insn 263: point = 1396
   Insn 262: point = 1397
   Insn 261: point = 1398
   Insn 260: point = 1398
   Insn 259: point = 1399
   Insn 258: point = 1399
   Insn 257: point = 1401
  BB 28
   Insn 244: point = 1402
   Insn 243: point = 1402
   Insn 242: point = 1403
   Insn 241: point = 1404
   Insn 240: point = 1404
   Insn 239: point = 1405
   Insn 238: point = 1405
   Insn 237: point = 1407
  BB 26
   Insn 223: point = 1408
   Insn 222: point = 1408
   Insn 221: point = 1409
   Insn 220: point = 1410
   Insn 219: point = 1410
   Insn 218: point = 1411
   Insn 217: point = 1411
   Insn 216: point = 1413
  BB 25
   Insn 214: point = 1414
   Insn 213: point = 1414
   Insn 212: point = 1415
   Insn 211: point = 1416
   Insn 210: point = 1416
   Insn 209: point = 1417
   Insn 208: point = 1417
   Insn 207: point = 1419
  BB 23
   Insn 193: point = 1420
   Insn 192: point = 1420
   Insn 191: point = 1421
   Insn 190: point = 1422
   Insn 189: point = 1422
   Insn 188: point = 1423
   Insn 187: point = 1423
   Insn 186: point = 1425
  BB 22
   Insn 184: point = 1426
   Insn 183: point = 1426
   Insn 182: point = 1427
   Insn 181: point = 1428
   Insn 180: point = 1428
   Insn 179: point = 1429
   Insn 178: point = 1429
   Insn 177: point = 1431
  BB 20
   Insn 2021: point = 1432
   Insn 163: point = 1432
   Insn 162: point = 1432
   Insn 2124: point = 1433
   Insn 161: point = 1434
   Insn 160: point = 1435
   Insn 159: point = 1437
   Insn 158: point = 1438
   Insn 157: point = 1438
   Insn 156: point = 1438
   Insn 155: point = 1438
   Insn 154: point = 1439
   Insn 153: point = 1441
  BB 19
   Insn 148: point = 1442
   Insn 147: point = 1442
   Insn 146: point = 1443
   Insn 145: point = 1444
  BB 18
   Insn 140: point = 1445
   Insn 139: point = 1445
   Insn 138: point = 1446
  BB 15
   Insn 2016: point = 1447
   Insn 117: point = 1447
   Insn 116: point = 1448
   Insn 115: point = 1448
   Insn 114: point = 1450
  BB 12
   Insn 2014: point = 1451
   Insn 100: point = 1451
   Insn 99: point = 1452
   Insn 98: point = 1452
   Insn 97: point = 1454
  BB 9
   Insn 2012: point = 1455
   Insn 83: point = 1455
   Insn 82: point = 1456
   Insn 81: point = 1456
   Insn 80: point = 1458
  BB 6
   Insn 2010: point = 1459
   Insn 66: point = 1459
   Insn 65: point = 1460
   Insn 64: point = 1460
   Insn 63: point = 1462
  BB 17
   Insn 2019: point = 1463
   Insn 133: point = 1463
   Insn 132: point = 1463
   Insn 2123: point = 1464
   Insn 131: point = 1465
   Insn 130: point = 1466
   Insn 129: point = 1468
  BB 16
   Insn 124: point = 1469
   Insn 123: point = 1469
   Insn 122: point = 1470
  BB 14
   Insn 109: point = 1471
   Insn 108: point = 1471
  BB 13
   Insn 107: point = 1473
   Insn 106: point = 1473
   Insn 105: point = 1473
  BB 11
   Insn 92: point = 1474
   Insn 91: point = 1474
  BB 10
   Insn 90: point = 1476
   Insn 89: point = 1476
   Insn 88: point = 1476
  BB 8
   Insn 75: point = 1477
   Insn 74: point = 1477
  BB 7
   Insn 73: point = 1479
   Insn 72: point = 1479
   Insn 71: point = 1479
  BB 5
   Insn 58: point = 1480
   Insn 57: point = 1480
  BB 4
   Insn 56: point = 1482
   Insn 55: point = 1482
   Insn 54: point = 1482
  BB 2
   Insn 41: point = 1483
   Insn 40: point = 1483
   Insn 39: point = 1484
   Insn 38: point = 1486
   Insn 37: point = 1488
   Insn 36: point = 1489
   Insn 35: point = 1489
   Insn 34: point = 1490
   Insn 33: point = 1491
   Insn 32: point = 1492
   Insn 31: point = 1492
   Insn 30: point = 1493
   Insn 29: point = 1494
   Insn 28: point = 1495
   Insn 27: point = 1496
   Insn 26: point = 1497
   Insn 25: point = 1498
   Insn 24: point = 1500
   Insn 23: point = 1502
   Insn 22: point = 1503
   Insn 21: point = 1503
   Insn 20: point = 1503
   Insn 19: point = 1503
   Insn 18: point = 1503
   Insn 17: point = 1503
   Insn 16: point = 1503
   Insn 15: point = 1503
   Insn 14: point = 1503
   Insn 13: point = 1503
   Insn 12: point = 1504
   Insn 11: point = 1505
   Insn 7: point = 1505
   Insn 6: point = 1505
   Insn 5: point = 1505
   Insn 4: point = 1505
   Insn 3: point = 1505
   Insn 2: point = 1505
 r83: [53..54] [48..48] [2..43]
 r84: [1499..1500]
 r85: [1493..1498]
 r86: [1492..1497]
 r87: [1491..1496]
 r88: [1487..1488]
 r89: [1483..1484]
 r90: [51..52]
 r91: [49..50]
 r92: [1480..1482]
 r93: [1477..1479]
 r94: [1474..1476]
 r95: [1471..1473]
 r96: [1469..1470]
 r97: [1445..1446]
 r98: [1442..1444]
 r99: [1440..1441]
 r100: [1438..1439]
 r101: [1432..1435]
 r102: [44..45]
 r103: [1463..1466]
 r104: [1447..1448]
 r105: [1451..1452]
 r106: [1455..1456]
 r107: [1459..1460]
 r108: [1428..1429]
 r109: [1426..1427]
 r110: [1422..1423]
 r111: [1420..1421]
 r112: [1416..1417]
 r113: [1414..1415]
 r114: [1410..1411]
 r115: [1408..1409]
 r116: [1404..1405]
 r117: [1402..1403]
 r118: [1398..1399]
 r119: [1396..1397]
 r120: [1392..1393]
 r121: [1390..1391]
 r122: [1380..1381]
 r123: [1386..1387]
 r124: [1384..1385]
 r125: [1376..1377]
 r126: [1374..1375]
 r127: [1370..1371]
 r128: [1364..1369]
 r129: [1363..1368]
 r130: [1362..1367]
 r131: [1358..1359]
 r132: [1354..1355]
 r133: [1350..1351]
 r134: [1348..1349]
 r135: [1344..1345]
 r136: [1338..1343]
 r137: [1337..1342]
 r138: [1336..1341]
 r139: [1332..1333]
 r140: [1328..1329]
 r141: [1326..1327]
 r142: [1323..1325]
 r143: [1317..1318]
 r144: [1315..1316]
 r145: [1311..1312]
 r146: [1305..1310]
 r147: [1304..1309]
 r148: [1303..1308]
 r149: [1299..1300]
 r150: [1295..1296]
 r151: [1291..1292]
 r152: [1289..1290]
 r153: [1285..1286]
 r154: [1279..1284]
 r155: [1278..1283]
 r156: [1277..1282]
 r157: [1273..1274]
 r158: [1269..1270]
 r159: [1267..1268]
 r160: [1262..1264]
 r161: [1258..1259]
 r162: [1256..1257]
 r163: [1252..1253]
 r164: [1246..1251]
 r165: [1245..1250]
 r166: [1244..1249]
 r167: [1240..1241]
 r168: [1236..1237]
 r169: [1232..1233]
 r170: [1230..1231]
 r171: [1226..1227]
 r172: [1220..1225]
 r173: [1219..1224]
 r174: [1218..1223]
 r175: [1214..1215]
 r176: [1210..1211]
 r177: [1208..1209]
 r178: [1206..1207]
 r179: [1203..1205]
 r180: [1199..1200]
 r181: [1197..1198]
 r182: [1193..1194]
 r183: [1187..1192]
 r184: [1186..1191]
 r185: [1185..1190]
 r186: [1181..1182]
 r187: [1177..1178]
 r188: [1173..1174]
 r189: [1171..1172]
 r190: [1167..1168]
 r191: [1161..1166]
 r192: [1160..1165]
 r193: [1159..1164]
 r194: [1155..1156]
 r195: [1151..1152]
 r196: [1149..1150]
 r197: [1146..1148]
 r198: [1142..1143]
 r199: [1140..1141]
 r200: [1136..1137]
 r201: [1130..1135]
 r202: [1129..1134]
 r203: [1128..1133]
 r204: [1124..1125]
 r205: [1120..1121]
 r206: [1116..1117]
 r207: [1114..1115]
 r208: [1110..1111]
 r209: [1104..1109]
 r210: [1103..1108]
 r211: [1102..1107]
 r212: [1098..1099]
 r213: [1094..1095]
 r214: [1092..1093]
 r215: [1089..1091]
 r216: [1087..1088]
 r217: [1084..1086]
 r218: [1080..1081]
 r219: [1073..1079]
 r220: [1075..1076]
 r221: [1073..1074]
 r222: [1071..1072]
 r223: [1067..1068]
 r224: [1065..1066]
 r225: [1063..1064]
 r226: [1046..1054]
 r227: [1050..1051]
 r228: [1048..1049]
 r229: [1046..1047]
 r230: [1041..1043]
 r231: [1037..1038]
 r232: [1034..1036]
 r233: [1028..1029]
 r234: [1024..1025]
 r235: [1018..1019]
 r236: [1015..1017]
 r237: [1011..1012]
 r238: [1004..1010]
 r239: [1006..1007]
 r240: [1004..1005]
 r241: [997..1003]
 r242: [999..1000]
 r243: [997..998]
 r244: [990..996]
 r245: [992..993]
 r246: [990..991]
 r247: [987..989]
 r248: [979..980]
 r249: [977..978]
 r250: [973..974]
 r251: [967..972]
 r252: [966..971]
 r253: [965..970]
 r254: [961..962]
 r255: [957..958]
 r256: [953..954]
 r257: [951..952]
 r258: [947..948]
 r259: [941..946]
 r260: [940..945]
 r261: [939..944]
 r262: [935..936]
 r263: [931..932]
 r264: [925..930]
 r265: [910..914]
 r266: [907..908]
 r267: [918..922]
 r268: [915..916]
 r269: [903..904]
 r270: [900..902]
 r271: [898..901]
 r272: [894..896]
 r273: [890..891]
 r274: [888..889]
 r275: [884..885]
 r276: [878..883]
 r277: [877..882]
 r278: [876..881]
 r279: [872..873]
 r280: [868..869]
 r281: [864..865]
 r282: [862..863]
 r283: [858..859]
 r284: [852..857]
 r285: [851..856]
 r286: [850..855]
 r287: [846..847]
 r288: [842..843]
 r289: [840..841]
 r290: [835..837]
 r291: [826..827]
 r292: [824..825]
 r293: [820..821]
 r294: [814..819]
 r295: [813..818]
 r296: [812..817]
 r297: [808..809]
 r298: [804..805]
 r299: [800..801]
 r300: [798..799]
 r301: [794..795]
 r302: [788..793]
 r303: [787..792]
 r304: [786..791]
 r305: [782..783]
 r306: [778..779]
 r307: [776..777]
 r308: [771..773]
 r309: [763..770]
 r310: [762..767]
 r311: [759..760]
 r312: [755..756]
 r313: [747..754]
 r314: [746..751]
 r315: [743..744]
 r316: [739..740]
 r317: [731..738]
 r318: [730..735]
 r319: [727..728]
 r320: [723..724]
 r321: [719..720]
 r322: [712..718]
 r323: [711..717]
 r324: [709..716]
 r325: [705..706]
 r326: [701..702]
 r327: [697..698]
 r328: [695..696]
 r329: [687..694]
 r330: [686..691]
 r331: [685..688]
 r332: [681..682]
 r333: [679..680]
 r334: [676..678]
 r335: [663..664]
 r336: [661..662]
 r337: [657..658]
 r338: [649..656]
 r339: [648..655]
 r340: [647..654]
 r341: [646..651]
 r342: [643..644]
 r343: [639..640]
 r344: [637..638]
 r345: [633..634]
 r346: [631..632]
 r347: [627..628]
 r348: [619..626]
 r349: [618..625]
 r350: [617..624]
 r351: [616..621]
 r352: [613..614]
 r353: [609..610]
 r354: [604..606]
 r355: [600..601]
 r356: [598..599]
 r357: [594..595]
 r358: [586..593]
 r359: [585..592]
 r360: [584..591]
 r361: [583..588]
 r362: [580..581]
 r363: [576..577]
 r364: [572..573]
 r365: [570..571]
 r366: [566..567]
 r367: [558..565]
 r368: [557..564]
 r369: [556..563]
 r370: [555..560]
 r371: [552..553]
 r372: [548..549]
 r373: [543..545]
 r374: [539..540]
 r375: [537..538]
 r376: [533..534]
 r377: [525..532]
 r378: [524..531]
 r379: [523..530]
 r380: [522..527]
 r381: [519..520]
 r382: [515..516]
 r383: [511..512]
 r384: [509..510]
 r385: [505..506]
 r386: [497..504]
 r387: [496..503]
 r388: [495..502]
 r389: [494..499]
 r390: [491..492]
 r391: [487..488]
 r392: [482..484]
 r393: [475..476]
 r394: [469..474]
 r395: [468..473]
 r396: [467..472]
 r397: [463..464]
 r398: [459..460]
 r399: [457..458]
 r400: [454..456]
 r401: [448..450]
 r402: [444..445]
 r403: [438..443]
 r404: [437..442]
 r405: [436..441]
 r406: [432..433]
 r407: [428..429]
 r408: [426..427]
 r409: [423..425]
 r410: [417..419]
 r411: [404..405]
 r412: [402..403]
 r413: [398..399]
 r414: [390..397]
 r415: [389..396]
 r416: [388..395]
 r417: [387..392]
 r418: [384..385]
 r419: [380..381]
 r420: [378..379]
 r421: [374..375]
 r422: [372..373]
 r423: [368..369]
 r424: [360..367]
 r425: [359..366]
 r426: [358..365]
 r427: [357..362]
 r428: [354..355]
 r429: [350..351]
 r430: [346..347]
 r431: [344..345]
 r432: [340..341]
 r433: [332..339]
 r434: [331..338]
 r435: [330..337]
 r436: [329..334]
 r437: [326..327]
 r438: [322..323]
 r439: [318..319]
 r440: [316..317]
 r441: [312..313]
 r442: [304..311]
 r443: [303..310]
 r444: [302..309]
 r445: [301..306]
 r446: [298..299]
 r447: [294..295]
 r448: [290..291]
 r449: [288..289]
 r450: [284..285]
 r451: [276..283]
 r452: [275..282]
 r453: [274..281]
 r454: [273..278]
 r455: [270..271]
 r456: [266..267]
 r457: [264..265]
 r458: [260..261]
 r459: [258..259]
 r460: [254..255]
 r461: [246..253]
 r462: [245..252]
 r463: [244..251]
 r464: [243..248]
 r465: [240..241]
 r466: [236..237]
 r467: [232..233]
 r468: [230..231]
 r469: [226..227]
 r470: [218..225]
 r471: [217..224]
 r472: [216..223]
 r473: [215..220]
 r474: [212..213]
 r475: [208..209]
 r476: [204..205]
 r477: [202..203]
 r478: [198..199]
 r479: [190..197]
 r480: [189..196]
 r481: [188..195]
 r482: [187..192]
 r483: [184..185]
 r484: [180..181]
 r485: [176..177]
 r486: [174..175]
 r487: [170..171]
 r488: [164..169]
 r489: [163..168]
 r490: [162..167]
 r491: [158..159]
 r492: [154..155]
 r493: [152..153]
 r494: [147..149]
 r495: [143..144]
 r496: [141..142]
 r497: [137..138]
 r498: [131..136]
 r499: [130..135]
 r500: [129..134]
 r501: [125..126]
 r502: [121..122]
 r503: [119..120]
 r504: [114..116]
 r505: [110..111]
 r506: [108..109]
 r507: [104..105]
 r508: [98..103]
 r509: [97..102]
 r510: [96..101]
 r511: [92..93]
 r512: [88..89]
 r513: [84..85]
 r514: [82..83]
 r515: [78..79]
 r516: [72..77]
 r517: [71..76]
 r518: [70..75]
 r519: [66..67]
 r520: [62..63]
 r521: [60..61]
 r522: [55..57]
 r523: [0..1]
 r524: [1503..1504]
 r525: [1501..1502]
 r526: [1490..1495]
 r527: [1489..1494]
 r528: [1485..1486]
 r529: [1461..1462]
 r530: [1457..1458]
 r531: [1453..1454]
 r532: [1449..1450]
 r533: [1467..1468]
 r534: [1442..1443]
 r535: [1436..1437]
 r536: [46..47]
 r537: [1430..1431]
 r538: [1424..1425]
 r539: [1418..1419]
 r540: [1412..1413]
 r541: [1406..1407]
 r542: [1400..1401]
 r543: [1394..1395]
 r544: [1382..1383]
 r545: [1388..1389]
 r546: [1378..1379]
 r547: [1372..1373]
 r548: [1361..1366]
 r549: [1360..1365]
 r550: [1356..1357]
 r551: [1352..1353]
 r552: [1346..1347]
 r553: [1335..1340]
 r554: [1334..1339]
 r555: [1330..1331]
 r556: [1323..1324]
 r557: [1321..1322]
 r558: [1319..1320]
 r559: [1313..1314]
 r560: [1302..1307]
 r561: [1301..1306]
 r562: [1297..1298]
 r563: [1293..1294]
 r564: [1287..1288]
 r565: [1276..1281]
 r566: [1275..1280]
 r567: [1271..1272]
 r568: [1262..1263]
 r569: [1260..1261]
 r570: [1254..1255]
 r571: [1243..1248]
 r572: [1242..1247]
 r573: [1238..1239]
 r574: [1234..1235]
 r575: [1228..1229]
 r576: [1217..1222]
 r577: [1216..1221]
 r578: [1212..1213]
 r579: [1203..1204]
 r580: [1201..1202]
 r581: [1195..1196]
 r582: [1184..1189]
 r583: [1183..1188]
 r584: [1179..1180]
 r585: [1175..1176]
 r586: [1169..1170]
 r587: [1158..1163]
 r588: [1157..1162]
 r589: [1153..1154]
 r590: [1146..1147]
 r591: [1144..1145]
 r592: [1138..1139]
 r593: [1127..1132]
 r594: [1126..1131]
 r595: [1122..1123]
 r596: [1118..1119]
 r597: [1112..1113]
 r598: [1101..1106]
 r599: [1100..1105]
 r600: [1096..1097]
 r601: [1089..1090]
 r602: [1084..1085]
 r603: [1082..1083]
 r604: [1077..1078]
 r605: [1069..1070]
 r606: [1059..1060]
 r607: [1057..1058]
 r608: [1061..1062]
 r609: [1055..1056]
 r610: [1052..1053]
 r611: [1044..1045]
 r613: [1041..1042]
 r614: [1039..1040]
 r615: [1034..1035]
 r616: [1032..1033]
 r617: [1030..1031]
 r618: [1026..1027]
 r619: [1022..1023]
 r620: [1020..1021]
 r621: [1015..1016]
 r622: [1013..1014]
 r623: [1008..1009]
 r624: [1001..1002]
 r625: [994..995]
 r628: [985..986]
 r629: [987..988]
 r630: [983..984]
 r631: [981..982]
 r632: [975..976]
 r633: [964..969]
 r634: [963..968]
 r635: [959..960]
 r636: [955..956]
 r637: [949..950]
 r638: [938..943]
 r639: [937..942]
 r640: [933..934]
 r641: [928..929]
 r642: [925..926]
 r643: [912..913]
 r644: [923..924]
 r645: [920..921]
 r646: [905..906]
 r647: [894..895]
 r648: [892..893]
 r649: [886..887]
 r650: [875..880]
 r651: [874..879]
 r652: [870..871]
 r653: [866..867]
 r654: [860..861]
 r655: [849..854]
 r656: [848..853]
 r657: [844..845]
 r658: [835..836]
 r659: [832..834]
 r660: [832..833]
 r661: [830..831]
 r662: [828..829]
 r663: [822..823]
 r664: [811..816]
 r665: [810..815]
 r666: [806..807]
 r667: [802..803]
 r668: [796..797]
 r669: [785..790]
 r670: [784..789]
 r671: [780..781]
 r672: [771..772]
 r673: [768..769]
 r674: [764..766]
 r675: [761..765]
 r676: [757..758]
 r677: [752..753]
 r678: [748..750]
 r679: [745..749]
 r680: [741..742]
 r681: [736..737]
 r682: [732..734]
 r683: [729..733]
 r684: [725..726]
 r685: [721..722]
 r686: [710..715]
 r687: [708..714]
 r688: [707..713]
 r689: [703..704]
 r690: [699..700]
 r691: [692..693]
 r692: [689..690]
 r693: [683..684]
 r694: [676..677]
 r695: [673..675]
 r696: [673..674]
 r697: [670..672]
 r698: [670..671]
 r699: [667..669]
 r700: [667..668]
 r701: [665..666]
 r702: [659..660]
 r703: [652..653]
 r704: [645..650]
 r705: [641..642]
 r706: [635..636]
 r707: [629..630]
 r708: [622..623]
 r709: [615..620]
 r710: [611..612]
 r711: [607..608]
 r712: [604..605]
 r713: [602..603]
 r714: [596..597]
 r715: [589..590]
 r716: [582..587]
 r717: [578..579]
 r718: [574..575]
 r719: [568..569]
 r720: [561..562]
 r721: [554..559]
 r722: [550..551]
 r723: [546..547]
 r724: [543..544]
 r725: [541..542]
 r726: [535..536]
 r727: [528..529]
 r728: [521..526]
 r729: [517..518]
 r730: [513..514]
 r731: [507..508]
 r732: [500..501]
 r733: [493..498]
 r734: [489..490]
 r735: [485..486]
 r736: [482..483]
 r737: [479..481]
 r738: [479..480]
 r739: [477..478]
 r740: [466..471]
 r741: [465..470]
 r742: [461..462]
 r743: [452..455]
 r744: [448..449]
 r745: [446..447]
 r746: [435..440]
 r747: [434..439]
 r748: [430..431]
 r749: [421..424]
 r750: [417..418]
 r751: [414..416]
 r752: [414..415]
 r753: [411..413]
 r754: [411..412]
 r755: [408..410]
 r756: [408..409]
 r757: [406..407]
 r758: [400..401]
 r759: [393..394]
 r760: [386..391]
 r761: [382..383]
 r762: [376..377]
 r763: [370..371]
 r764: [363..364]
 r765: [356..361]
 r766: [352..353]
 r767: [348..349]
 r768: [342..343]
 r769: [335..336]
 r770: [328..333]
 r771: [324..325]
 r772: [320..321]
 r773: [314..315]
 r774: [307..308]
 r775: [300..305]
 r776: [296..297]
 r777: [292..293]
 r778: [286..287]
 r779: [279..280]
 r780: [272..277]
 r781: [268..269]
 r782: [262..263]
 r783: [256..257]
 r784: [249..250]
 r785: [242..247]
 r786: [238..239]
 r787: [234..235]
 r788: [228..229]
 r789: [221..222]
 r790: [214..219]
 r791: [210..211]
 r792: [206..207]
 r793: [200..201]
 r794: [193..194]
 r795: [186..191]
 r796: [182..183]
 r797: [178..179]
 r798: [172..173]
 r799: [161..166]
 r800: [160..165]
 r801: [156..157]
 r802: [147..148]
 r803: [145..146]
 r804: [139..140]
 r805: [128..133]
 r806: [127..132]
 r807: [123..124]
 r808: [114..115]
 r809: [112..113]
 r810: [106..107]
 r811: [95..100]
 r812: [94..99]
 r813: [90..91]
 r814: [86..87]
 r815: [80..81]
 r816: [69..74]
 r817: [68..73]
 r818: [64..65]
 r819: [55..56]
 r821: [1464..1465]
 r822: [1433..1434]
 r823: [1265..1266]
 r824: [1045..1046]
 r825: [909..911]
 r826: [917..919]
 r827: [897..899]
 r828: [838..839]
 r829: [774..775]
 r830: [451..453]
 r831: [420..422]
 r832: [150..151]
 r833: [117..118]
 r834: [58..59]
Compressing live ranges: from 1505 to 1081 - 71%
Ranges after the compression:
 r83: [13..14] [8..8] [2..3]
 r84: [1075..1076]
 r85: [1073..1074]
 r86: [1073..1074]
 r87: [1073..1074]
 r88: [1071..1072]
 r89: [1067..1068]
 r90: [11..12]
 r91: [9..10]
 r92: [1065..1066]
 r93: [1063..1064]
 r94: [1061..1062]
 r95: [1059..1060]
 r96: [1057..1058]
 r97: [1035..1036]
 r98: [1033..1034]
 r99: [1031..1032]
 r100: [1029..1030]
 r101: [1025..1026]
 r102: [4..5]
 r103: [1053..1054]
 r104: [1037..1038]
 r105: [1041..1042]
 r106: [1045..1046]
 r107: [1049..1050]
 r108: [1021..1022]
 r109: [1019..1020]
 r110: [1015..1016]
 r111: [1013..1014]
 r112: [1009..1010]
 r113: [1007..1008]
 r114: [1003..1004]
 r115: [1001..1002]
 r116: [997..998]
 r117: [995..996]
 r118: [991..992]
 r119: [989..990]
 r120: [985..986]
 r121: [983..984]
 r122: [973..974]
 r123: [979..980]
 r124: [977..978]
 r125: [969..970]
 r126: [967..968]
 r127: [963..964]
 r128: [961..962]
 r129: [961..962]
 r130: [961..962]
 r131: [959..960]
 r132: [955..956]
 r133: [951..952]
 r134: [949..950]
 r135: [945..946]
 r136: [943..944]
 r137: [943..944]
 r138: [943..944]
 r139: [941..942]
 r140: [937..938]
 r141: [935..936]
 r142: [933..934]
 r143: [927..928]
 r144: [925..926]
 r145: [921..922]
 r146: [919..920]
 r147: [919..920]
 r148: [919..920]
 r149: [917..918]
 r150: [913..914]
 r151: [909..910]
 r152: [907..908]
 r153: [903..904]
 r154: [901..902]
 r155: [901..902]
 r156: [901..902]
 r157: [899..900]
 r158: [895..896]
 r159: [893..894]
 r160: [889..890]
 r161: [885..886]
 r162: [883..884]
 r163: [879..880]
 r164: [877..878]
 r165: [877..878]
 r166: [877..878]
 r167: [875..876]
 r168: [871..872]
 r169: [867..868]
 r170: [865..866]
 r171: [861..862]
 r172: [859..860]
 r173: [859..860]
 r174: [859..860]
 r175: [857..858]
 r176: [853..854]
 r177: [851..852]
 r178: [849..850]
 r179: [847..848]
 r180: [843..844]
 r181: [841..842]
 r182: [837..838]
 r183: [835..836]
 r184: [835..836]
 r185: [835..836]
 r186: [833..834]
 r187: [829..830]
 r188: [825..826]
 r189: [823..824]
 r190: [819..820]
 r191: [817..818]
 r192: [817..818]
 r193: [817..818]
 r194: [815..816]
 r195: [811..812]
 r196: [809..810]
 r197: [807..808]
 r198: [803..804]
 r199: [801..802]
 r200: [797..798]
 r201: [795..796]
 r202: [795..796]
 r203: [795..796]
 r204: [793..794]
 r205: [789..790]
 r206: [785..786]
 r207: [783..784]
 r208: [779..780]
 r209: [777..778]
 r210: [777..778]
 r211: [777..778]
 r212: [775..776]
 r213: [771..772]
 r214: [769..770]
 r215: [767..768]
 r216: [765..766]
 r217: [763..764]
 r218: [759..760]
 r219: [753..758]
 r220: [755..756]
 r221: [753..754]
 r222: [751..752]
 r223: [747..748]
 r224: [745..746]
 r225: [743..744]
 r226: [727..734]
 r227: [731..732]
 r228: [729..730]
 r229: [727..728]
 r230: [723..724]
 r231: [719..720]
 r232: [717..718]
 r233: [711..712]
 r234: [707..708]
 r235: [701..702]
 r236: [699..700]
 r237: [695..696]
 r238: [689..694]
 r239: [691..692]
 r240: [689..690]
 r241: [683..688]
 r242: [685..686]
 r243: [683..684]
 r244: [677..682]
 r245: [679..680]
 r246: [677..678]
 r247: [675..676]
 r248: [667..668]
 r249: [665..666]
 r250: [661..662]
 r251: [659..660]
 r252: [659..660]
 r253: [659..660]
 r254: [657..658]
 r255: [653..654]
 r256: [649..650]
 r257: [647..648]
 r258: [643..644]
 r259: [641..642]
 r260: [641..642]
 r261: [641..642]
 r262: [639..640]
 r263: [635..636]
 r264: [631..634]
 r265: [619..622]
 r266: [617..618]
 r267: [625..628]
 r268: [623..624]
 r269: [613..614]
 r270: [611..612]
 r271: [609..612]
 r272: [607..608]
 r273: [603..604]
 r274: [601..602]
 r275: [597..598]
 r276: [595..596]
 r277: [595..596]
 r278: [595..596]
 r279: [593..594]
 r280: [589..590]
 r281: [585..586]
 r282: [583..584]
 r283: [579..580]
 r284: [577..578]
 r285: [577..578]
 r286: [577..578]
 r287: [575..576]
 r288: [571..572]
 r289: [569..570]
 r290: [565..566]
 r291: [557..558]
 r292: [555..556]
 r293: [551..552]
 r294: [549..550]
 r295: [549..550]
 r296: [549..550]
 r297: [547..548]
 r298: [543..544]
 r299: [539..540]
 r300: [537..538]
 r301: [533..534]
 r302: [531..532]
 r303: [531..532]
 r304: [531..532]
 r305: [529..530]
 r306: [525..526]
 r307: [523..524]
 r308: [519..520]
 r309: [515..518]
 r310: [515..516]
 r311: [513..514]
 r312: [509..510]
 r313: [505..508]
 r314: [505..506]
 r315: [503..504]
 r316: [499..500]
 r317: [495..498]
 r318: [495..496]
 r319: [493..494]
 r320: [489..490]
 r321: [485..486]
 r322: [483..484]
 r323: [483..484]
 r324: [483..484]
 r325: [481..482]
 r326: [477..478]
 r327: [473..474]
 r328: [471..472]
 r329: [465..470]
 r330: [465..468]
 r331: [465..466]
 r332: [461..462]
 r333: [459..460]
 r334: [457..458]
 r335: [447..448]
 r336: [445..446]
 r337: [441..442]
 r338: [437..440]
 r339: [437..440]
 r340: [437..440]
 r341: [437..438]
 r342: [435..436]
 r343: [431..432]
 r344: [429..430]
 r345: [425..426]
 r346: [423..424]
 r347: [419..420]
 r348: [415..418]
 r349: [415..418]
 r350: [415..418]
 r351: [415..416]
 r352: [413..414]
 r353: [409..410]
 r354: [405..406]
 r355: [401..402]
 r356: [399..400]
 r357: [395..396]
 r358: [391..394]
 r359: [391..394]
 r360: [391..394]
 r361: [391..392]
 r362: [389..390]
 r363: [385..386]
 r364: [381..382]
 r365: [379..380]
 r366: [375..376]
 r367: [371..374]
 r368: [371..374]
 r369: [371..374]
 r370: [371..372]
 r371: [369..370]
 r372: [365..366]
 r373: [361..362]
 r374: [357..358]
 r375: [355..356]
 r376: [351..352]
 r377: [347..350]
 r378: [347..350]
 r379: [347..350]
 r380: [347..348]
 r381: [345..346]
 r382: [341..342]
 r383: [337..338]
 r384: [335..336]
 r385: [331..332]
 r386: [327..330]
 r387: [327..330]
 r388: [327..330]
 r389: [327..328]
 r390: [325..326]
 r391: [321..322]
 r392: [317..318]
 r393: [311..312]
 r394: [309..310]
 r395: [309..310]
 r396: [309..310]
 r397: [307..308]
 r398: [303..304]
 r399: [301..302]
 r400: [299..300]
 r401: [295..296]
 r402: [291..292]
 r403: [289..290]
 r404: [289..290]
 r405: [289..290]
 r406: [287..288]
 r407: [283..284]
 r408: [281..282]
 r409: [279..280]
 r410: [275..276]
 r411: [265..266]
 r412: [263..264]
 r413: [259..260]
 r414: [255..258]
 r415: [255..258]
 r416: [255..258]
 r417: [255..256]
 r418: [253..254]
 r419: [249..250]
 r420: [247..248]
 r421: [243..244]
 r422: [241..242]
 r423: [237..238]
 r424: [233..236]
 r425: [233..236]
 r426: [233..236]
 r427: [233..234]
 r428: [231..232]
 r429: [227..228]
 r430: [223..224]
 r431: [221..222]
 r432: [217..218]
 r433: [213..216]
 r434: [213..216]
 r435: [213..216]
 r436: [213..214]
 r437: [211..212]
 r438: [207..208]
 r439: [203..204]
 r440: [201..202]
 r441: [197..198]
 r442: [193..196]
 r443: [193..196]
 r444: [193..196]
 r445: [193..194]
 r446: [191..192]
 r447: [187..188]
 r448: [183..184]
 r449: [181..182]
 r450: [177..178]
 r451: [173..176]
 r452: [173..176]
 r453: [173..176]
 r454: [173..174]
 r455: [171..172]
 r456: [167..168]
 r457: [165..166]
 r458: [161..162]
 r459: [159..160]
 r460: [155..156]
 r461: [151..154]
 r462: [151..154]
 r463: [151..154]
 r464: [151..152]
 r465: [149..150]
 r466: [145..146]
 r467: [141..142]
 r468: [139..140]
 r469: [135..136]
 r470: [131..134]
 r471: [131..134]
 r472: [131..134]
 r473: [131..132]
 r474: [129..130]
 r475: [125..126]
 r476: [121..122]
 r477: [119..120]
 r478: [115..116]
 r479: [111..114]
 r480: [111..114]
 r481: [111..114]
 r482: [111..112]
 r483: [109..110]
 r484: [105..106]
 r485: [101..102]
 r486: [99..100]
 r487: [95..96]
 r488: [93..94]
 r489: [93..94]
 r490: [93..94]
 r491: [91..92]
 r492: [87..88]
 r493: [85..86]
 r494: [81..82]
 r495: [77..78]
 r496: [75..76]
 r497: [71..72]
 r498: [69..70]
 r499: [69..70]
 r500: [69..70]
 r501: [67..68]
 r502: [63..64]
 r503: [61..62]
 r504: [57..58]
 r505: [53..54]
 r506: [51..52]
 r507: [47..48]
 r508: [45..46]
 r509: [45..46]
 r510: [45..46]
 r511: [43..44]
 r512: [39..40]
 r513: [35..36]
 r514: [33..34]
 r515: [29..30]
 r516: [27..28]
 r517: [27..28]
 r518: [27..28]
 r519: [25..26]
 r520: [21..22]
 r521: [19..20]
 r522: [15..16]
 r523: [0..1]
 r524: [1079..1080]
 r525: [1077..1078]
 r526: [1073..1074]
 r527: [1073..1074]
 r528: [1069..1070]
 r529: [1051..1052]
 r530: [1047..1048]
 r531: [1043..1044]
 r532: [1039..1040]
 r533: [1055..1056]
 r534: [1033..1034]
 r535: [1027..1028]
 r536: [6..7]
 r537: [1023..1024]
 r538: [1017..1018]
 r539: [1011..1012]
 r540: [1005..1006]
 r541: [999..1000]
 r542: [993..994]
 r543: [987..988]
 r544: [975..976]
 r545: [981..982]
 r546: [971..972]
 r547: [965..966]
 r548: [961..962]
 r549: [961..962]
 r550: [957..958]
 r551: [953..954]
 r552: [947..948]
 r553: [943..944]
 r554: [943..944]
 r555: [939..940]
 r556: [933..934]
 r557: [931..932]
 r558: [929..930]
 r559: [923..924]
 r560: [919..920]
 r561: [919..920]
 r562: [915..916]
 r563: [911..912]
 r564: [905..906]
 r565: [901..902]
 r566: [901..902]
 r567: [897..898]
 r568: [889..890]
 r569: [887..888]
 r570: [881..882]
 r571: [877..878]
 r572: [877..878]
 r573: [873..874]
 r574: [869..870]
 r575: [863..864]
 r576: [859..860]
 r577: [859..860]
 r578: [855..856]
 r579: [847..848]
 r580: [845..846]
 r581: [839..840]
 r582: [835..836]
 r583: [835..836]
 r584: [831..832]
 r585: [827..828]
 r586: [821..822]
 r587: [817..818]
 r588: [817..818]
 r589: [813..814]
 r590: [807..808]
 r591: [805..806]
 r592: [799..800]
 r593: [795..796]
 r594: [795..796]
 r595: [791..792]
 r596: [787..788]
 r597: [781..782]
 r598: [777..778]
 r599: [777..778]
 r600: [773..774]
 r601: [767..768]
 r602: [763..764]
 r603: [761..762]
 r604: [757..758]
 r605: [749..750]
 r606: [739..740]
 r607: [737..738]
 r608: [741..742]
 r609: [735..736]
 r610: [733..734]
 r611: [725..726]
 r613: [723..724]
 r614: [721..722]
 r615: [717..718]
 r616: [715..716]
 r617: [713..714]
 r618: [709..710]
 r619: [705..706]
 r620: [703..704]
 r621: [699..700]
 r622: [697..698]
 r623: [693..694]
 r624: [687..688]
 r625: [681..682]
 r628: [673..674]
 r629: [675..676]
 r630: [671..672]
 r631: [669..670]
 r632: [663..664]
 r633: [659..660]
 r634: [659..660]
 r635: [655..656]
 r636: [651..652]
 r637: [645..646]
 r638: [641..642]
 r639: [641..642]
 r640: [637..638]
 r641: [633..634]
 r642: [631..632]
 r643: [621..622]
 r644: [629..630]
 r645: [627..628]
 r646: [615..616]
 r647: [607..608]
 r648: [605..606]
 r649: [599..600]
 r650: [595..596]
 r651: [595..596]
 r652: [591..592]
 r653: [587..588]
 r654: [581..582]
 r655: [577..578]
 r656: [577..578]
 r657: [573..574]
 r658: [565..566]
 r659: [563..564]
 r660: [563..564]
 r661: [561..562]
 r662: [559..560]
 r663: [553..554]
 r664: [549..550]
 r665: [549..550]
 r666: [545..546]
 r667: [541..542]
 r668: [535..536]
 r669: [531..532]
 r670: [531..532]
 r671: [527..528]
 r672: [519..520]
 r673: [517..518]
 r674: [515..516]
 r675: [515..516]
 r676: [511..512]
 r677: [507..508]
 r678: [505..506]
 r679: [505..506]
 r680: [501..502]
 r681: [497..498]
 r682: [495..496]
 r683: [495..496]
 r684: [491..492]
 r685: [487..488]
 r686: [483..484]
 r687: [483..484]
 r688: [483..484]
 r689: [479..480]
 r690: [475..476]
 r691: [469..470]
 r692: [467..468]
 r693: [463..464]
 r694: [457..458]
 r695: [455..456]
 r696: [455..456]
 r697: [453..454]
 r698: [453..454]
 r699: [451..452]
 r700: [451..452]
 r701: [449..450]
 r702: [443..444]
 r703: [439..440]
 r704: [437..438]
 r705: [433..434]
 r706: [427..428]
 r707: [421..422]
 r708: [417..418]
 r709: [415..416]
 r710: [411..412]
 r711: [407..408]
 r712: [405..406]
 r713: [403..404]
 r714: [397..398]
 r715: [393..394]
 r716: [391..392]
 r717: [387..388]
 r718: [383..384]
 r719: [377..378]
 r720: [373..374]
 r721: [371..372]
 r722: [367..368]
 r723: [363..364]
 r724: [361..362]
 r725: [359..360]
 r726: [353..354]
 r727: [349..350]
 r728: [347..348]
 r729: [343..344]
 r730: [339..340]
 r731: [333..334]
 r732: [329..330]
 r733: [327..328]
 r734: [323..324]
 r735: [319..320]
 r736: [317..318]
 r737: [315..316]
 r738: [315..316]
 r739: [313..314]
 r740: [309..310]
 r741: [309..310]
 r742: [305..306]
 r743: [297..300]
 r744: [295..296]
 r745: [293..294]
 r746: [289..290]
 r747: [289..290]
 r748: [285..286]
 r749: [277..280]
 r750: [275..276]
 r751: [273..274]
 r752: [273..274]
 r753: [271..272]
 r754: [271..272]
 r755: [269..270]
 r756: [269..270]
 r757: [267..268]
 r758: [261..262]
 r759: [257..258]
 r760: [255..256]
 r761: [251..252]
 r762: [245..246]
 r763: [239..240]
 r764: [235..236]
 r765: [233..234]
 r766: [229..230]
 r767: [225..226]
 r768: [219..220]
 r769: [215..216]
 r770: [213..214]
 r771: [209..210]
 r772: [205..206]
 r773: [199..200]
 r774: [195..196]
 r775: [193..194]
 r776: [189..190]
 r777: [185..186]
 r778: [179..180]
 r779: [175..176]
 r780: [173..174]
 r781: [169..170]
 r782: [163..164]
 r783: [157..158]
 r784: [153..154]
 r785: [151..152]
 r786: [147..148]
 r787: [143..144]
 r788: [137..138]
 r789: [133..134]
 r790: [131..132]
 r791: [127..128]
 r792: [123..124]
 r793: [117..118]
 r794: [113..114]
 r795: [111..112]
 r796: [107..108]
 r797: [103..104]
 r798: [97..98]
 r799: [93..94]
 r800: [93..94]
 r801: [89..90]
 r802: [81..82]
 r803: [79..80]
 r804: [73..74]
 r805: [69..70]
 r806: [69..70]
 r807: [65..66]
 r808: [57..58]
 r809: [55..56]
 r810: [49..50]
 r811: [45..46]
 r812: [45..46]
 r813: [41..42]
 r814: [37..38]
 r815: [31..32]
 r816: [27..28]
 r817: [27..28]
 r818: [23..24]
 r819: [15..16]
 r821: [1053..1054]
 r822: [1025..1026]
 r823: [891..892]
 r824: [726..727]
 r825: [619..620]
 r826: [625..626]
 r827: [609..610]
 r828: [567..568]
 r829: [521..522]
 r830: [297..298]
 r831: [277..278]
 r832: [83..84]
 r833: [59..60]
 r834: [17..18]

********** Assignment #1: **********

	 Assigning to 824 (cl=DREG, orig=612, freq=1, tfirst=824, tfreq=1)...
	 Trying 1: spill 229(freq=2)	 Now best 1(cost=1, bad_spills=0, insn_pseudos=1)

      Spill r229(hr=1, freq=2) for r824
	   Assign 1 to reload r824 (freq=1)
	 Assigning to 821 (cl=GENERAL_REGS, orig=821, freq=2, tfirst=821, tfreq=2)...
	   Assign 3 to reload r821 (freq=2)
	 Assigning to 822 (cl=GENERAL_REGS, orig=822, freq=2, tfirst=822, tfreq=2)...
	   Assign 3 to reload r822 (freq=2)
	 Assigning to 825 (cl=SSE_REGS, orig=266, freq=3, tfirst=825, tfreq=3)...
	   Assign 21 to reload r825 (freq=3)
	 Assigning to 826 (cl=SSE_REGS, orig=268, freq=3, tfirst=826, tfreq=3)...
	   Assign 21 to reload r826 (freq=3)
	 Assigning to 827 (cl=SSE_REGS, orig=272, freq=3, tfirst=827, tfreq=3)...
	   Assign 21 to reload r827 (freq=3)
	 Assigning to 830 (cl=SSE_REGS, orig=401, freq=3, tfirst=830, tfreq=3)...
	   Assign 21 to reload r830 (freq=3)
	 Assigning to 831 (cl=SSE_REGS, orig=410, freq=3, tfirst=831, tfreq=3)...
	   Assign 21 to reload r831 (freq=3)
	 Assigning to 828 (cl=SSE_REGS, orig=290, freq=2, tfirst=828, tfreq=2)...
	   Assign 23 to reload r828 (freq=2)
	 Assigning to 832 (cl=SSE_REGS, orig=494, freq=2, tfirst=832, tfreq=2)...
	   Assign 24 to reload r832 (freq=2)
	 Assigning to 833 (cl=SSE_REGS, orig=504, freq=2, tfirst=833, tfreq=2)...
	   Assign 25 to reload r833 (freq=2)
	 Assigning to 834 (cl=SSE_REGS, orig=522, freq=2, tfirst=834, tfreq=2)...
	   Assign 26 to reload r834 (freq=2)
  Reassigning non-reload pseudos
	   Assign 3 to r229 (freq=2)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 746:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 745:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=835 from oldreg=229, assigning class GENERAL_REGS to r835
  745: {r835:SI=r835:SI*[frame:DI-0x6c];clobber flags:CC;}
      REG_DEAD r228:SI
    Inserting insn reload before:
 2141: r835:SI=r228:SI
    Inserting insn reload after:
 2142: r229:SI=r835:SI

	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166
EBB 167

********** Pseudo live ranges #2: **********

  BB 167
   Insn 1977: point = 0
   Insn 1976: point = 0
   Insn 1972: point = 1
  BB 165
   Insn 2120: point = 4
   Insn 1958: point = 4
  BB 159
   Insn 2116: point = 5
   Insn 1885: point = 5
  BB 156
   Insn 2114: point = 6
   Insn 1846: point = 6
  BB 153
   Insn 2112: point = 7
   Insn 1811: point = 7
  BB 150
   Insn 2110: point = 8
   Insn 1776: point = 8
  BB 147
   Insn 2108: point = 9
   Insn 1741: point = 9
  BB 144
   Insn 2106: point = 10
   Insn 1706: point = 10
  BB 139
   Insn 2104: point = 11
   Insn 1660: point = 11
  BB 136
   Insn 2102: point = 12
   Insn 1625: point = 12
  BB 133
   Insn 2100: point = 13
   Insn 1590: point = 13
  BB 130
   Insn 2098: point = 14
   Insn 1555: point = 14
  BB 125
   Insn 2096: point = 15
   Insn 1494: point = 15
  BB 123
   Insn 2094: point = 16
   Insn 1462: point = 16
  BB 121
   Insn 2092: point = 17
   Insn 1429: point = 17
  BB 118
   Insn 2090: point = 18
   Insn 1394: point = 18
  BB 115
   Insn 2088: point = 19
   Insn 1355: point = 19
  BB 112
   Insn 2086: point = 20
   Insn 1320: point = 20
  BB 109
   Insn 2084: point = 21
   Insn 1281: point = 21
  BB 106
   Insn 2082: point = 22
   Insn 1246: point = 22
  BB 101
   Insn 2080: point = 23
   Insn 1161: point = 23
  BB 99
   Insn 2078: point = 24
   Insn 1134: point = 24
  BB 97
   Insn 2076: point = 25
   Insn 1111: point = 25
  BB 95
   Insn 2074: point = 26
   Insn 1088: point = 26
  BB 93
   Insn 2072: point = 27
   Insn 1061: point = 27
  BB 90
   Insn 2070: point = 28
   Insn 1027: point = 28
  BB 87
   Insn 2068: point = 29
   Insn 984: point = 29
  BB 84
   Insn 2066: point = 30
   Insn 950: point = 30
  BB 77
   Insn 2061: point = 31
   Insn 874: point = 31
  BB 74
   Insn 2059: point = 32
   Insn 840: point = 32
  BB 65
   Insn 2053: point = 33
   Insn 680: point = 33
  BB 62
   Insn 2051: point = 34
   Insn 646: point = 34
  BB 59
   Insn 2049: point = 35
   Insn 607: point = 35
  BB 56
   Insn 2047: point = 36
   Insn 573: point = 36
  BB 53
   Insn 2045: point = 37
   Insn 533: point = 37
  BB 50
   Insn 2043: point = 38
   Insn 499: point = 38
  BB 47
   Insn 2041: point = 39
   Insn 460: point = 39
  BB 44
   Insn 2039: point = 40
   Insn 426: point = 40
  BB 41
   Insn 2037: point = 41
   Insn 386: point = 41
  BB 38
   Insn 2035: point = 42
   Insn 352: point = 42
  BB 21
   Insn 2023: point = 43
   Insn 172: point = 43
   Insn 171: point = 44
   Insn 170: point = 45
   Insn 169: point = 45
   Insn 168: point = 47
  BB 3
   Insn 2008: point = 48
   Insn 49: point = 48
   Insn 48: point = 49
   Insn 47: point = 49
   Insn 46: point = 49
   Insn 45: point = 49
   Insn 44: point = 50
   Insn 43: point = 52
  BB 162
   Insn 2118: point = 53
   Insn 1924: point = 53
  BB 166
   Insn 1967: point = 54
   Insn 1966: point = 55
   Insn 1965: point = 56
   Insn 2140: point = 57
	Hard reg 0 is preferable by r834 with profit 1
   Insn 1964: point = 59
   Insn 1963: point = 61
  BB 164
   Insn 1956: point = 62
   Insn 1955: point = 62
   Insn 1954: point = 63
   Insn 1953: point = 65
   Insn 1952: point = 67
   Insn 1951: point = 68
   Insn 1950: point = 68
   Insn 1949: point = 69
   Insn 1948: point = 70
   Insn 1947: point = 71
   Insn 1946: point = 71
   Insn 1945: point = 72
   Insn 1944: point = 73
   Insn 1943: point = 74
   Insn 1942: point = 75
   Insn 1941: point = 76
   Insn 1940: point = 77
   Insn 1939: point = 79
   Insn 1938: point = 81
  BB 163
   Insn 1936: point = 82
   Insn 1935: point = 82
   Insn 1934: point = 83
   Insn 1933: point = 84
   Insn 1932: point = 84
   Insn 1931: point = 85
   Insn 1930: point = 85
   Insn 1929: point = 87
  BB 161
   Insn 1922: point = 88
   Insn 1921: point = 88
   Insn 1920: point = 89
   Insn 1919: point = 91
   Insn 1918: point = 93
   Insn 1917: point = 94
   Insn 1916: point = 94
   Insn 1915: point = 95
   Insn 1914: point = 96
   Insn 1913: point = 97
   Insn 1912: point = 97
   Insn 1911: point = 98
   Insn 1910: point = 99
   Insn 1909: point = 100
   Insn 1908: point = 101
   Insn 1907: point = 102
   Insn 1906: point = 103
   Insn 1905: point = 105
   Insn 1904: point = 107
  BB 160
   Insn 1902: point = 108
   Insn 1901: point = 108
   Insn 1900: point = 109
   Insn 1899: point = 110
   Insn 1898: point = 110
   Insn 1897: point = 111
   Insn 1896: point = 111
   Insn 1895: point = 113
   Insn 1894: point = 114
   Insn 1893: point = 114
   Insn 1892: point = 115
   Insn 2139: point = 116
	Hard reg 0 is preferable by r833 with profit 1
   Insn 1891: point = 118
   Insn 1890: point = 120
  BB 158
   Insn 1883: point = 121
   Insn 1882: point = 121
   Insn 1881: point = 122
   Insn 1880: point = 124
   Insn 1879: point = 126
   Insn 1878: point = 127
   Insn 1877: point = 127
   Insn 1876: point = 128
   Insn 1875: point = 129
   Insn 1874: point = 130
   Insn 1873: point = 130
   Insn 1872: point = 131
   Insn 1871: point = 132
   Insn 1870: point = 133
   Insn 1869: point = 134
   Insn 1868: point = 135
   Insn 1867: point = 136
   Insn 1866: point = 138
   Insn 1865: point = 140
  BB 157
   Insn 1863: point = 141
   Insn 1862: point = 141
   Insn 1861: point = 142
   Insn 1860: point = 143
   Insn 1859: point = 143
   Insn 1858: point = 144
   Insn 1857: point = 144
   Insn 1856: point = 146
   Insn 1855: point = 147
   Insn 1854: point = 147
   Insn 1853: point = 148
   Insn 2138: point = 149
	Hard reg 0 is preferable by r832 with profit 1
   Insn 1852: point = 151
   Insn 1851: point = 153
  BB 155
   Insn 1844: point = 154
   Insn 1843: point = 154
   Insn 1842: point = 155
   Insn 1841: point = 157
   Insn 1840: point = 159
   Insn 1839: point = 160
   Insn 1838: point = 160
   Insn 1837: point = 161
   Insn 1836: point = 162
   Insn 1835: point = 163
   Insn 1834: point = 163
   Insn 1833: point = 164
   Insn 1832: point = 165
   Insn 1831: point = 166
   Insn 1830: point = 167
   Insn 1829: point = 168
   Insn 1828: point = 169
   Insn 1827: point = 171
   Insn 1826: point = 173
  BB 154
   Insn 1824: point = 174
   Insn 1823: point = 174
   Insn 1822: point = 175
   Insn 1821: point = 176
   Insn 1820: point = 176
   Insn 1819: point = 177
   Insn 1818: point = 177
   Insn 1817: point = 179
   Insn 1816: point = 180
  BB 152
   Insn 1809: point = 180
   Insn 1808: point = 180
   Insn 1807: point = 181
   Insn 1806: point = 183
   Insn 1805: point = 185
   Insn 1804: point = 186
   Insn 1803: point = 186
   Insn 1802: point = 187
   Insn 1801: point = 188
   Insn 1800: point = 189
   Insn 1799: point = 189
   Insn 1798: point = 190
   Insn 1797: point = 191
   Insn 1796: point = 192
   Insn 1795: point = 194
   Insn 1794: point = 195
   Insn 1793: point = 196
   Insn 1792: point = 197
   Insn 1791: point = 199
   Insn 1790: point = 201
  BB 151
   Insn 1788: point = 202
   Insn 1787: point = 202
   Insn 1786: point = 203
   Insn 1785: point = 204
   Insn 1784: point = 204
   Insn 1783: point = 205
   Insn 1782: point = 205
   Insn 1781: point = 207
  BB 149
   Insn 1774: point = 208
   Insn 1773: point = 208
   Insn 1772: point = 209
   Insn 1771: point = 211
   Insn 1770: point = 213
   Insn 1769: point = 214
   Insn 1768: point = 214
   Insn 1767: point = 215
   Insn 1766: point = 216
   Insn 1765: point = 217
   Insn 1764: point = 217
   Insn 1763: point = 218
   Insn 1762: point = 219
   Insn 1761: point = 220
   Insn 1760: point = 222
   Insn 1759: point = 223
   Insn 1758: point = 224
   Insn 1757: point = 225
   Insn 1756: point = 227
   Insn 1755: point = 229
  BB 148
   Insn 1753: point = 230
   Insn 1752: point = 230
   Insn 1751: point = 231
   Insn 1750: point = 232
   Insn 1749: point = 232
   Insn 1748: point = 233
   Insn 1747: point = 233
   Insn 1746: point = 235
  BB 146
   Insn 1739: point = 236
   Insn 1738: point = 236
   Insn 1737: point = 237
   Insn 1736: point = 239
   Insn 1735: point = 241
   Insn 1734: point = 242
   Insn 1733: point = 242
   Insn 1732: point = 243
   Insn 1731: point = 244
   Insn 1730: point = 245
   Insn 1729: point = 245
   Insn 1728: point = 246
   Insn 1727: point = 247
   Insn 1726: point = 248
   Insn 1725: point = 250
   Insn 1724: point = 251
   Insn 1723: point = 252
   Insn 1722: point = 253
   Insn 1721: point = 255
   Insn 1720: point = 257
  BB 145
   Insn 1718: point = 258
   Insn 1717: point = 258
   Insn 1716: point = 259
   Insn 1715: point = 260
   Insn 1714: point = 260
   Insn 1713: point = 261
   Insn 1712: point = 261
   Insn 1711: point = 263
  BB 143
   Insn 1704: point = 264
   Insn 1703: point = 264
  BB 142
   Insn 1701: point = 264
   Insn 1700: point = 264
   Insn 1699: point = 265
   Insn 1698: point = 266
   Insn 1697: point = 266
   Insn 1696: point = 267
   Insn 1695: point = 267
   Insn 1694: point = 269
  BB 141
   Insn 1691: point = 270
   Insn 1690: point = 271
   Insn 1689: point = 272
   Insn 1688: point = 272
   Insn 1687: point = 273
   Insn 1686: point = 274
   Insn 1685: point = 275
   Insn 1684: point = 275
   Insn 1683: point = 276
   Insn 1682: point = 277
   Insn 1681: point = 278
   Insn 1680: point = 280
   Insn 1679: point = 281
   Insn 1678: point = 282
   Insn 1677: point = 283
   Insn 1676: point = 285
   Insn 1675: point = 287
  BB 140
   Insn 1673: point = 288
   Insn 1672: point = 288
   Insn 1671: point = 289
   Insn 1670: point = 290
   Insn 1669: point = 290
   Insn 1668: point = 291
   Insn 1667: point = 291
   Insn 1666: point = 293
   Insn 1665: point = 294
  BB 138
   Insn 1658: point = 294
   Insn 1657: point = 294
   Insn 1656: point = 295
   Insn 1655: point = 297
   Insn 1654: point = 299
   Insn 1653: point = 300
   Insn 1652: point = 300
   Insn 1651: point = 301
   Insn 1650: point = 302
   Insn 1649: point = 303
   Insn 1648: point = 303
   Insn 1647: point = 304
   Insn 1646: point = 305
   Insn 1645: point = 306
   Insn 1644: point = 308
   Insn 1643: point = 309
   Insn 1642: point = 310
   Insn 1641: point = 311
   Insn 1640: point = 313
   Insn 1639: point = 315
  BB 137
   Insn 1637: point = 316
   Insn 1636: point = 316
   Insn 1635: point = 317
   Insn 1634: point = 318
   Insn 1633: point = 318
   Insn 1632: point = 319
   Insn 1631: point = 319
   Insn 1630: point = 321
  BB 135
   Insn 1623: point = 322
   Insn 1622: point = 322
   Insn 1621: point = 323
   Insn 1620: point = 325
   Insn 1619: point = 327
   Insn 1618: point = 328
   Insn 1617: point = 328
   Insn 1616: point = 329
   Insn 1615: point = 330
   Insn 1614: point = 331
   Insn 1613: point = 331
   Insn 1612: point = 332
   Insn 1611: point = 333
   Insn 1610: point = 334
   Insn 1609: point = 336
   Insn 1608: point = 337
   Insn 1607: point = 338
   Insn 1606: point = 339
   Insn 1605: point = 341
   Insn 1604: point = 343
  BB 134
   Insn 1602: point = 344
   Insn 1601: point = 344
   Insn 1600: point = 345
   Insn 1599: point = 346
   Insn 1598: point = 346
   Insn 1597: point = 347
   Insn 1596: point = 347
   Insn 1595: point = 349
  BB 132
   Insn 1588: point = 350
   Insn 1587: point = 350
   Insn 1586: point = 351
   Insn 1585: point = 353
   Insn 1584: point = 355
   Insn 1583: point = 356
   Insn 1582: point = 356
   Insn 1581: point = 357
   Insn 1580: point = 358
   Insn 1579: point = 359
   Insn 1578: point = 359
   Insn 1577: point = 360
   Insn 1576: point = 361
   Insn 1575: point = 362
   Insn 1574: point = 364
   Insn 1573: point = 365
   Insn 1572: point = 366
   Insn 1571: point = 367
   Insn 1570: point = 369
   Insn 1569: point = 371
  BB 131
   Insn 1567: point = 372
   Insn 1566: point = 372
   Insn 1565: point = 373
   Insn 1564: point = 374
   Insn 1563: point = 374
   Insn 1562: point = 375
   Insn 1561: point = 375
   Insn 1560: point = 377
  BB 129
   Insn 1553: point = 378
   Insn 1552: point = 378
  BB 128
   Insn 1550: point = 378
   Insn 1549: point = 378
   Insn 1548: point = 379
   Insn 1547: point = 380
   Insn 1546: point = 380
   Insn 1545: point = 381
   Insn 1544: point = 381
   Insn 1543: point = 383
  BB 127
   Insn 1540: point = 384
   Insn 1539: point = 385
   Insn 1538: point = 386
   Insn 1537: point = 386
   Insn 1536: point = 387
   Insn 1535: point = 388
   Insn 1534: point = 389
   Insn 1533: point = 389
   Insn 1532: point = 390
   Insn 1531: point = 391
   Insn 1530: point = 392
   Insn 1529: point = 394
   Insn 1528: point = 395
   Insn 1527: point = 396
   Insn 1526: point = 397
   Insn 1525: point = 399
   Insn 1524: point = 401
  BB 126
   Insn 1522: point = 402
   Insn 1521: point = 402
   Insn 1520: point = 403
   Insn 1519: point = 404
   Insn 1518: point = 404
   Insn 1517: point = 405
   Insn 1516: point = 405
   Insn 1515: point = 407
   Insn 1514: point = 408
   Insn 1513: point = 408
   Insn 1512: point = 409
   Insn 1511: point = 410
   Insn 1510: point = 411
   Insn 1509: point = 412
   Insn 1508: point = 413
   Insn 1507: point = 414
   Insn 1506: point = 415
   Insn 1505: point = 416
   Insn 1504: point = 417
   Insn 1503: point = 418
   Insn 2137: point = 419
	Hard reg 0 is preferable by r831 with profit 1
   Insn 1502: point = 421
   Insn 2136: point = 422
	Hard reg 0 is preferable by r831 with profit 1
	Hard reg 21 is preferable by r831 with profit 1
   Insn 1501: point = 424
   Insn 1500: point = 425
   Insn 1499: point = 427
  BB 124
   Insn 1492: point = 428
   Insn 1491: point = 428
   Insn 1490: point = 429
   Insn 1489: point = 431
   Insn 1488: point = 433
   Insn 1487: point = 434
   Insn 1486: point = 434
   Insn 1485: point = 435
   Insn 1484: point = 436
   Insn 1483: point = 437
   Insn 1482: point = 437
   Insn 1481: point = 438
   Insn 1480: point = 439
   Insn 1479: point = 440
   Insn 1478: point = 441
   Insn 1477: point = 442
   Insn 1476: point = 443
   Insn 1475: point = 445
   Insn 1474: point = 447
   Insn 1473: point = 448
   Insn 1472: point = 448
   Insn 1471: point = 449
   Insn 2135: point = 450
	Hard reg 0 is preferable by r830 with profit 1
   Insn 1470: point = 452
   Insn 2134: point = 453
	Hard reg 0 is preferable by r830 with profit 1
	Hard reg 21 is preferable by r830 with profit 1
   Insn 1469: point = 455
   Insn 1468: point = 456
   Insn 1467: point = 458
  BB 122
   Insn 1460: point = 459
   Insn 1459: point = 459
   Insn 1458: point = 460
   Insn 1457: point = 462
   Insn 1456: point = 464
   Insn 1455: point = 465
   Insn 1454: point = 465
   Insn 1453: point = 466
   Insn 1452: point = 467
   Insn 1451: point = 468
   Insn 1450: point = 468
   Insn 1449: point = 469
   Insn 1448: point = 470
   Insn 1447: point = 471
   Insn 1446: point = 472
   Insn 1445: point = 473
   Insn 1444: point = 474
   Insn 1443: point = 476
   Insn 1442: point = 478
   Insn 1441: point = 479
   Insn 1440: point = 479
   Insn 1439: point = 480
   Insn 1438: point = 481
   Insn 1437: point = 482
   Insn 1436: point = 483
   Insn 1435: point = 484
   Insn 1434: point = 486
  BB 120
   Insn 1427: point = 487
   Insn 1426: point = 487
   Insn 1425: point = 488
   Insn 1424: point = 490
   Insn 1423: point = 492
   Insn 1422: point = 493
   Insn 1421: point = 493
   Insn 1420: point = 494
   Insn 1419: point = 495
   Insn 1418: point = 496
   Insn 1417: point = 496
   Insn 1416: point = 497
   Insn 1415: point = 498
   Insn 1414: point = 499
   Insn 1413: point = 501
   Insn 1412: point = 502
   Insn 1411: point = 503
   Insn 1410: point = 504
   Insn 1409: point = 506
   Insn 1408: point = 508
  BB 119
   Insn 1406: point = 509
   Insn 1405: point = 509
   Insn 1404: point = 510
   Insn 1403: point = 511
   Insn 1402: point = 511
   Insn 1401: point = 512
   Insn 1400: point = 512
   Insn 1399: point = 514
  BB 117
   Insn 1392: point = 515
   Insn 1391: point = 515
   Insn 1390: point = 516
   Insn 1389: point = 518
   Insn 1388: point = 520
   Insn 1387: point = 521
   Insn 1386: point = 521
   Insn 1385: point = 522
   Insn 1384: point = 523
   Insn 1383: point = 524
   Insn 1382: point = 524
   Insn 1381: point = 525
   Insn 1380: point = 526
   Insn 1379: point = 527
   Insn 1378: point = 529
   Insn 1377: point = 530
   Insn 1376: point = 531
   Insn 1375: point = 532
   Insn 1374: point = 534
   Insn 1373: point = 536
  BB 116
   Insn 1371: point = 537
   Insn 1370: point = 537
   Insn 1369: point = 538
   Insn 1368: point = 539
   Insn 1367: point = 539
   Insn 1366: point = 540
   Insn 1365: point = 540
   Insn 1364: point = 542
   Insn 1363: point = 543
   Insn 1362: point = 544
   Insn 1361: point = 545
   Insn 1360: point = 547
  BB 114
   Insn 1353: point = 548
   Insn 1352: point = 548
   Insn 1351: point = 549
   Insn 1350: point = 551
   Insn 1349: point = 553
   Insn 1348: point = 554
   Insn 1347: point = 554
   Insn 1346: point = 555
   Insn 1345: point = 556
   Insn 1344: point = 557
   Insn 1343: point = 557
   Insn 1342: point = 558
   Insn 1341: point = 559
   Insn 1340: point = 560
   Insn 1339: point = 562
   Insn 1338: point = 563
   Insn 1337: point = 564
   Insn 1336: point = 565
   Insn 1335: point = 567
   Insn 1334: point = 569
  BB 113
   Insn 1332: point = 570
   Insn 1331: point = 570
   Insn 1330: point = 571
   Insn 1329: point = 572
   Insn 1328: point = 572
   Insn 1327: point = 573
   Insn 1326: point = 573
   Insn 1325: point = 575
  BB 111
   Insn 1318: point = 576
   Insn 1317: point = 576
   Insn 1316: point = 577
   Insn 1315: point = 579
   Insn 1314: point = 581
   Insn 1313: point = 582
   Insn 1312: point = 582
   Insn 1311: point = 583
   Insn 1310: point = 584
   Insn 1309: point = 585
   Insn 1308: point = 585
   Insn 1307: point = 586
   Insn 1306: point = 587
   Insn 1305: point = 588
   Insn 1304: point = 590
   Insn 1303: point = 591
   Insn 1302: point = 592
   Insn 1301: point = 593
   Insn 1300: point = 595
   Insn 1299: point = 597
  BB 110
   Insn 1297: point = 598
   Insn 1296: point = 598
   Insn 1295: point = 599
   Insn 1294: point = 600
   Insn 1293: point = 600
   Insn 1292: point = 601
   Insn 1291: point = 601
   Insn 1290: point = 603
   Insn 1289: point = 604
   Insn 1288: point = 605
   Insn 1287: point = 606
   Insn 1286: point = 608
  BB 108
   Insn 1279: point = 609
   Insn 1278: point = 609
   Insn 1277: point = 610
   Insn 1276: point = 612
   Insn 1275: point = 614
   Insn 1274: point = 615
   Insn 1273: point = 615
   Insn 1272: point = 616
   Insn 1271: point = 617
   Insn 1270: point = 618
   Insn 1269: point = 618
   Insn 1268: point = 619
   Insn 1267: point = 620
   Insn 1266: point = 621
   Insn 1265: point = 623
   Insn 1264: point = 624
   Insn 1263: point = 625
   Insn 1262: point = 626
   Insn 1261: point = 628
   Insn 1260: point = 630
  BB 107
   Insn 1258: point = 631
   Insn 1257: point = 631
   Insn 1256: point = 632
   Insn 1255: point = 633
   Insn 1254: point = 633
   Insn 1253: point = 634
   Insn 1252: point = 634
   Insn 1251: point = 636
  BB 105
   Insn 1244: point = 637
   Insn 1243: point = 637
  BB 104
   Insn 1241: point = 637
   Insn 1240: point = 637
   Insn 1239: point = 638
   Insn 1238: point = 639
   Insn 1237: point = 639
   Insn 1236: point = 640
   Insn 1235: point = 640
   Insn 1234: point = 642
  BB 103
   Insn 1231: point = 643
   Insn 1230: point = 644
   Insn 1229: point = 645
   Insn 1228: point = 645
   Insn 1227: point = 646
   Insn 1226: point = 647
   Insn 1225: point = 648
   Insn 1224: point = 648
   Insn 1223: point = 649
   Insn 1222: point = 650
   Insn 1221: point = 651
   Insn 1220: point = 653
   Insn 1219: point = 654
   Insn 1218: point = 655
   Insn 1217: point = 656
   Insn 1216: point = 658
   Insn 1215: point = 660
  BB 102
   Insn 1213: point = 661
   Insn 1212: point = 661
   Insn 1211: point = 662
   Insn 1210: point = 663
   Insn 1209: point = 663
   Insn 1208: point = 664
   Insn 1207: point = 664
   Insn 1206: point = 666
   Insn 1205: point = 667
   Insn 1204: point = 667
   Insn 1203: point = 667
   Insn 1202: point = 667
   Insn 1201: point = 668
   Insn 1200: point = 669
   Insn 1199: point = 670
   Insn 1198: point = 671
   Insn 1197: point = 672
   Insn 1196: point = 673
   Insn 1195: point = 674
   Insn 1194: point = 675
   Insn 1193: point = 676
   Insn 1192: point = 677
   Insn 1191: point = 678
   Insn 1190: point = 680
   Insn 1189: point = 681
   Insn 1188: point = 681
   Insn 1187: point = 682
   Insn 1186: point = 683
   Insn 1185: point = 683
   Insn 1184: point = 684
   Insn 1183: point = 685
   Insn 1182: point = 685
   Insn 1181: point = 686
   Insn 1180: point = 687
   Insn 1179: point = 688
   Insn 1178: point = 690
   Insn 1177: point = 691
   Insn 1176: point = 692
   Insn 1175: point = 692
   Insn 1174: point = 693
   Insn 1173: point = 694
   Insn 1172: point = 696
   Insn 1171: point = 697
   Insn 1170: point = 697
   Insn 1169: point = 698
   Insn 1168: point = 699
   Insn 1167: point = 699
   Insn 1166: point = 700
  BB 100
   Insn 1159: point = 701
   Insn 1158: point = 701
   Insn 1157: point = 702
   Insn 1156: point = 704
   Insn 1155: point = 706
   Insn 1154: point = 707
   Insn 1153: point = 707
   Insn 1152: point = 708
   Insn 1151: point = 709
   Insn 1150: point = 710
   Insn 1149: point = 711
   Insn 1148: point = 712
   Insn 1147: point = 713
   Insn 1146: point = 714
   Insn 1145: point = 715
   Insn 1144: point = 716
   Insn 1143: point = 717
   Insn 1142: point = 718
   Insn 1141: point = 720
   Insn 1140: point = 722
   Insn 1139: point = 723
  BB 98
   Insn 1132: point = 723
   Insn 1131: point = 723
   Insn 1130: point = 724
   Insn 1129: point = 726
   Insn 1128: point = 728
   Insn 1127: point = 729
   Insn 1126: point = 729
   Insn 1125: point = 730
   Insn 1124: point = 731
   Insn 1123: point = 732
   Insn 1122: point = 733
   Insn 1121: point = 733
   Insn 1120: point = 733
   Insn 1119: point = 734
   Insn 1118: point = 735
   Insn 1117: point = 737
   Insn 1116: point = 738
  BB 96
   Insn 1109: point = 739
   Insn 1108: point = 739
   Insn 1107: point = 740
   Insn 1106: point = 742
   Insn 1105: point = 744
   Insn 1104: point = 745
   Insn 1103: point = 745
   Insn 1102: point = 746
   Insn 1101: point = 747
   Insn 1100: point = 748
   Insn 1099: point = 749
   Insn 1098: point = 749
   Insn 1097: point = 749
   Insn 1096: point = 750
   Insn 1095: point = 751
   Insn 1094: point = 753
   Insn 1093: point = 754
  BB 94
   Insn 1086: point = 755
   Insn 1085: point = 755
   Insn 1084: point = 756
   Insn 1083: point = 758
   Insn 1082: point = 760
   Insn 1081: point = 761
   Insn 1080: point = 761
   Insn 1079: point = 762
   Insn 1078: point = 763
   Insn 1077: point = 764
   Insn 1076: point = 765
   Insn 1075: point = 765
   Insn 1074: point = 765
   Insn 1073: point = 766
   Insn 1072: point = 767
   Insn 1071: point = 769
   Insn 1070: point = 770
   Insn 1069: point = 771
   Insn 1068: point = 772
   Insn 1067: point = 773
   Insn 2133: point = 775
	Hard reg 0 is preferable by r829 with profit 1
   Insn 1066: point = 777
  BB 92
   Insn 1059: point = 778
   Insn 1058: point = 778
   Insn 1057: point = 779
   Insn 1056: point = 781
   Insn 1055: point = 783
   Insn 1054: point = 784
   Insn 1053: point = 784
   Insn 1052: point = 785
   Insn 1051: point = 786
   Insn 1050: point = 787
   Insn 1049: point = 787
   Insn 1048: point = 788
   Insn 1047: point = 789
   Insn 1046: point = 790
   Insn 1045: point = 791
   Insn 1044: point = 792
   Insn 1043: point = 793
   Insn 1042: point = 795
   Insn 1041: point = 797
  BB 91
   Insn 1039: point = 798
   Insn 1038: point = 798
   Insn 1037: point = 799
   Insn 1036: point = 800
   Insn 1035: point = 800
   Insn 1034: point = 801
   Insn 1033: point = 801
   Insn 1032: point = 803
  BB 89
   Insn 1025: point = 804
   Insn 1024: point = 804
   Insn 1023: point = 805
   Insn 1022: point = 807
   Insn 1021: point = 809
   Insn 1020: point = 810
   Insn 1019: point = 810
   Insn 1018: point = 811
   Insn 1017: point = 812
   Insn 1016: point = 813
   Insn 1015: point = 813
   Insn 1014: point = 814
   Insn 1013: point = 815
   Insn 1012: point = 816
   Insn 1011: point = 817
   Insn 1010: point = 818
   Insn 1009: point = 819
   Insn 1008: point = 821
   Insn 1007: point = 823
  BB 88
   Insn 1005: point = 824
   Insn 1004: point = 824
   Insn 1003: point = 825
   Insn 1002: point = 826
   Insn 1001: point = 826
   Insn 1000: point = 827
   Insn 999: point = 827
   Insn 998: point = 829
   Insn 997: point = 830
   Insn 996: point = 831
   Insn 995: point = 832
   Insn 994: point = 833
   Insn 993: point = 834
   Insn 992: point = 835
   Insn 991: point = 836
   Insn 2132: point = 837
	Hard reg 0 is preferable by r828 with profit 1
   Insn 990: point = 839
   Insn 989: point = 841
  BB 86
   Insn 982: point = 842
   Insn 981: point = 842
   Insn 980: point = 843
   Insn 979: point = 845
   Insn 978: point = 847
   Insn 977: point = 848
   Insn 976: point = 848
   Insn 975: point = 849
   Insn 974: point = 850
   Insn 973: point = 851
   Insn 972: point = 851
   Insn 971: point = 852
   Insn 970: point = 853
   Insn 969: point = 854
   Insn 968: point = 855
   Insn 967: point = 856
   Insn 966: point = 857
   Insn 965: point = 859
   Insn 964: point = 861
  BB 85
   Insn 962: point = 862
   Insn 961: point = 862
   Insn 960: point = 863
   Insn 959: point = 864
   Insn 958: point = 864
   Insn 957: point = 865
   Insn 956: point = 865
   Insn 955: point = 867
  BB 83
   Insn 948: point = 868
   Insn 947: point = 868
   Insn 946: point = 869
   Insn 945: point = 871
   Insn 944: point = 873
   Insn 943: point = 874
   Insn 942: point = 874
   Insn 941: point = 875
   Insn 940: point = 876
   Insn 939: point = 877
   Insn 938: point = 877
   Insn 937: point = 878
   Insn 936: point = 879
   Insn 935: point = 880
   Insn 934: point = 881
   Insn 933: point = 882
   Insn 932: point = 883
   Insn 931: point = 885
   Insn 930: point = 887
  BB 82
   Insn 928: point = 888
   Insn 927: point = 888
   Insn 926: point = 889
   Insn 925: point = 890
   Insn 924: point = 890
   Insn 923: point = 891
   Insn 922: point = 891
   Insn 921: point = 893
   Insn 920: point = 894
   Insn 919: point = 894
   Insn 918: point = 895
   Insn 2131: point = 896
	Hard reg 0 is preferable by r827 with profit 1
   Insn 917: point = 898
   Insn 2130: point = 899
	Hard reg 0 is preferable by r827 with profit 1
	Hard reg 21 is preferable by r827 with profit 1
   Insn 916: point = 901
   Insn 915: point = 902
   Insn 914: point = 904
   Insn 913: point = 906
  BB 80
   Insn 2064: point = 907
   Insn 893: point = 907
   Insn 2127: point = 908
	Hard reg 0 is preferable by r825 with profit 1
   Insn 892: point = 910
   Insn 2126: point = 911
	Hard reg 0 is preferable by r825 with profit 1
	Hard reg 21 is preferable by r825 with profit 1
   Insn 891: point = 913
   Insn 890: point = 914
  BB 81
   Insn 910: point = 915
   Insn 2129: point = 916
	Hard reg 0 is preferable by r826 with profit 1
   Insn 909: point = 918
   Insn 2128: point = 919
	Hard reg 0 is preferable by r826 with profit 1
	Hard reg 21 is preferable by r826 with profit 1
   Insn 908: point = 921
   Insn 907: point = 922
   Insn 906: point = 923
   Insn 905: point = 923
   Insn 904: point = 923
   Insn 903: point = 923
   Insn 902: point = 924
   Insn 901: point = 925
   Insn 900: point = 925
   Insn 899: point = 925
   Insn 898: point = 925
  BB 79
   Insn 885: point = 925
   Insn 884: point = 925
   Insn 883: point = 926
  BB 78
   Insn 882: point = 928
   Insn 881: point = 928
   Insn 880: point = 929
   Insn 879: point = 930
  BB 76
   Insn 872: point = 931
   Insn 871: point = 931
   Insn 870: point = 932
   Insn 869: point = 934
   Insn 868: point = 936
   Insn 867: point = 937
   Insn 866: point = 937
   Insn 865: point = 938
   Insn 864: point = 939
   Insn 863: point = 940
   Insn 862: point = 940
   Insn 861: point = 941
   Insn 860: point = 942
   Insn 859: point = 943
   Insn 858: point = 944
   Insn 857: point = 945
   Insn 856: point = 946
   Insn 855: point = 948
   Insn 854: point = 950
  BB 75
   Insn 852: point = 951
   Insn 851: point = 951
   Insn 850: point = 952
   Insn 849: point = 953
   Insn 848: point = 953
   Insn 847: point = 954
   Insn 846: point = 954
   Insn 845: point = 956
  BB 73
   Insn 838: point = 957
   Insn 837: point = 957
   Insn 836: point = 958
   Insn 835: point = 960
   Insn 834: point = 962
   Insn 833: point = 963
   Insn 832: point = 963
   Insn 831: point = 964
   Insn 830: point = 965
   Insn 829: point = 966
   Insn 828: point = 966
   Insn 827: point = 967
   Insn 826: point = 968
   Insn 825: point = 969
   Insn 824: point = 970
   Insn 823: point = 971
   Insn 822: point = 972
   Insn 821: point = 974
   Insn 820: point = 976
  BB 72
   Insn 818: point = 977
   Insn 817: point = 977
   Insn 816: point = 978
   Insn 815: point = 979
   Insn 814: point = 979
   Insn 813: point = 980
   Insn 812: point = 980
   Insn 811: point = 982
   Insn 810: point = 983
   Insn 809: point = 984
   Insn 808: point = 985
   Insn 807: point = 986
   Insn 806: point = 988
   Insn 802: point = 989
   Insn 801: point = 991
   Insn 800: point = 993
   Insn 799: point = 995
   Insn 798: point = 996
   Insn 797: point = 998
   Insn 796: point = 1000
   Insn 795: point = 1002
   Insn 794: point = 1003
   Insn 793: point = 1005
   Insn 792: point = 1007
   Insn 791: point = 1009
   Insn 790: point = 1010
   Insn 789: point = 1012
   Insn 788: point = 1014
   Insn 787: point = 1015
   Insn 786: point = 1016
   Insn 785: point = 1017
   Insn 784: point = 1019
   Insn 783: point = 1020
   Insn 782: point = 1020
   Insn 781: point = 1021
   Insn 780: point = 1022
   Insn 779: point = 1022
   Insn 778: point = 1023
   Insn 777: point = 1023
   Insn 776: point = 1023
   Insn 775: point = 1024
   Insn 774: point = 1024
   Insn 773: point = 1024
   Insn 772: point = 1024
   Insn 771: point = 1025
   Insn 770: point = 1027
   Insn 769: point = 1028
   Insn 768: point = 1028
   Insn 767: point = 1028
   Insn 766: point = 1028
   Insn 765: point = 1029
   Insn 764: point = 1031
   Insn 763: point = 1032
   Insn 762: point = 1032
   Insn 761: point = 1032
   Insn 760: point = 1032
   Insn 759: point = 1033
   Insn 758: point = 1034
   Insn 757: point = 1035
   Insn 756: point = 1036
   Insn 755: point = 1037
   Insn 754: point = 1037
   Insn 753: point = 1037
   Insn 752: point = 1037
   Insn 751: point = 1038
   Insn 750: point = 1040
   Insn 749: point = 1041
   Insn 748: point = 1042
   Insn 747: point = 1043
   Insn 746: point = 1045
   Insn 2142: point = 1047
	Hard reg 3 is preferable by r835 with profit 1
   Insn 745: point = 1049
   Insn 2141: point = 1049
	Hard reg 3 is preferable by r835 with profit 1
	Hard reg 1 is preferable by r835 with profit 1
   Insn 744: point = 1051
   Insn 743: point = 1053
   Insn 742: point = 1055
   Insn 741: point = 1056
   Insn 740: point = 1058
  BB 69
   Insn 2057: point = 1059
   Insn 726: point = 1059
   Insn 725: point = 1059
   Insn 724: point = 1060
  BB 67
   Insn 2055: point = 1061
   Insn 715: point = 1061
   Insn 714: point = 1061
   Insn 713: point = 1062
  BB 71
   Insn 737: point = 1063
   Insn 736: point = 1063
   Insn 735: point = 1064
  BB 70
   Insn 733: point = 1065
   Insn 732: point = 1065
   Insn 731: point = 1066
  BB 68
   Insn 722: point = 1067
   Insn 721: point = 1067
   Insn 720: point = 1068
  BB 66
   Insn 711: point = 1069
   Insn 710: point = 1069
   Insn 709: point = 1070
   Insn 708: point = 1071
   Insn 707: point = 1071
   Insn 706: point = 1071
   Insn 705: point = 1071
   Insn 704: point = 1072
   Insn 703: point = 1073
   Insn 702: point = 1073
   Insn 701: point = 1073
   Insn 700: point = 1073
   Insn 699: point = 1074
   Insn 698: point = 1076
   Insn 697: point = 1078
   Insn 696: point = 1080
   Insn 695: point = 1081
   Insn 694: point = 1083
   Insn 693: point = 1085
   Insn 692: point = 1086
   Insn 691: point = 1087
   Insn 690: point = 1088
   Insn 689: point = 1090
   Insn 688: point = 1091
   Insn 687: point = 1092
   Insn 686: point = 1093
   Insn 685: point = 1095
  BB 64
   Insn 678: point = 1096
   Insn 677: point = 1096
   Insn 676: point = 1097
   Insn 675: point = 1099
   Insn 674: point = 1101
   Insn 673: point = 1102
   Insn 672: point = 1102
   Insn 671: point = 1103
   Insn 670: point = 1104
   Insn 669: point = 1105
   Insn 668: point = 1105
   Insn 667: point = 1106
   Insn 666: point = 1107
   Insn 665: point = 1108
   Insn 664: point = 1109
   Insn 663: point = 1110
   Insn 662: point = 1111
   Insn 661: point = 1113
   Insn 660: point = 1115
  BB 63
   Insn 658: point = 1116
   Insn 657: point = 1116
   Insn 656: point = 1117
   Insn 655: point = 1118
   Insn 654: point = 1118
   Insn 653: point = 1119
   Insn 652: point = 1119
   Insn 651: point = 1121
  BB 61
   Insn 644: point = 1122
   Insn 643: point = 1122
   Insn 642: point = 1123
   Insn 641: point = 1125
   Insn 640: point = 1127
   Insn 639: point = 1128
   Insn 638: point = 1128
   Insn 637: point = 1129
   Insn 636: point = 1130
   Insn 635: point = 1131
   Insn 634: point = 1131
   Insn 633: point = 1132
   Insn 632: point = 1133
   Insn 631: point = 1134
   Insn 630: point = 1135
   Insn 629: point = 1136
   Insn 628: point = 1137
   Insn 627: point = 1139
   Insn 626: point = 1141
  BB 60
   Insn 624: point = 1142
   Insn 623: point = 1142
   Insn 622: point = 1143
   Insn 621: point = 1144
   Insn 620: point = 1144
   Insn 619: point = 1145
   Insn 618: point = 1145
   Insn 617: point = 1147
   Insn 616: point = 1148
   Insn 615: point = 1148
   Insn 614: point = 1149
   Insn 613: point = 1150
   Insn 612: point = 1152
  BB 58
   Insn 605: point = 1153
   Insn 604: point = 1153
   Insn 603: point = 1154
   Insn 602: point = 1156
   Insn 601: point = 1158
   Insn 600: point = 1159
   Insn 599: point = 1159
   Insn 598: point = 1160
   Insn 597: point = 1161
   Insn 596: point = 1162
   Insn 595: point = 1162
   Insn 594: point = 1163
   Insn 593: point = 1164
   Insn 592: point = 1165
   Insn 591: point = 1166
   Insn 590: point = 1167
   Insn 589: point = 1168
   Insn 588: point = 1170
   Insn 587: point = 1172
  BB 57
   Insn 585: point = 1173
   Insn 584: point = 1173
   Insn 583: point = 1174
   Insn 582: point = 1175
   Insn 581: point = 1175
   Insn 580: point = 1176
   Insn 579: point = 1176
   Insn 578: point = 1178
  BB 55
   Insn 571: point = 1179
   Insn 570: point = 1179
   Insn 569: point = 1180
   Insn 568: point = 1182
   Insn 567: point = 1184
   Insn 566: point = 1185
   Insn 565: point = 1185
   Insn 564: point = 1186
   Insn 563: point = 1187
   Insn 562: point = 1188
   Insn 561: point = 1188
   Insn 560: point = 1189
   Insn 559: point = 1190
   Insn 558: point = 1191
   Insn 557: point = 1192
   Insn 556: point = 1193
   Insn 555: point = 1194
   Insn 554: point = 1196
   Insn 553: point = 1198
  BB 54
   Insn 551: point = 1199
   Insn 550: point = 1199
   Insn 549: point = 1200
   Insn 548: point = 1201
   Insn 547: point = 1201
   Insn 546: point = 1202
   Insn 545: point = 1202
   Insn 544: point = 1204
   Insn 543: point = 1205
   Insn 542: point = 1205
   Insn 541: point = 1206
   Insn 540: point = 1207
   Insn 539: point = 1209
   Insn 538: point = 1211
  BB 52
   Insn 531: point = 1212
   Insn 530: point = 1212
   Insn 529: point = 1213
   Insn 528: point = 1215
   Insn 527: point = 1217
   Insn 526: point = 1218
   Insn 525: point = 1218
   Insn 524: point = 1219
   Insn 523: point = 1220
   Insn 522: point = 1221
   Insn 521: point = 1221
   Insn 520: point = 1222
   Insn 519: point = 1223
   Insn 518: point = 1224
   Insn 517: point = 1225
   Insn 516: point = 1226
   Insn 515: point = 1227
   Insn 514: point = 1229
   Insn 513: point = 1231
  BB 51
   Insn 511: point = 1232
   Insn 510: point = 1232
   Insn 509: point = 1233
   Insn 508: point = 1234
   Insn 507: point = 1234
   Insn 506: point = 1235
   Insn 505: point = 1235
   Insn 504: point = 1237
  BB 49
   Insn 497: point = 1238
   Insn 496: point = 1238
   Insn 495: point = 1239
   Insn 494: point = 1241
   Insn 493: point = 1243
   Insn 492: point = 1244
   Insn 491: point = 1244
   Insn 490: point = 1245
   Insn 489: point = 1246
   Insn 488: point = 1247
   Insn 487: point = 1247
   Insn 486: point = 1248
   Insn 485: point = 1249
   Insn 484: point = 1250
   Insn 483: point = 1251
   Insn 482: point = 1252
   Insn 481: point = 1253
   Insn 480: point = 1255
   Insn 479: point = 1257
  BB 48
   Insn 477: point = 1258
   Insn 476: point = 1258
   Insn 475: point = 1259
   Insn 474: point = 1260
   Insn 473: point = 1260
   Insn 472: point = 1261
   Insn 471: point = 1261
   Insn 470: point = 1263
   Insn 469: point = 1264
   Insn 468: point = 1264
   Insn 467: point = 1265
   Insn 466: point = 1266
   Insn 2125: point = 1268
	Hard reg 0 is preferable by r823 with profit 1
   Insn 465: point = 1270
  BB 46
   Insn 458: point = 1271
   Insn 457: point = 1271
   Insn 456: point = 1272
   Insn 455: point = 1274
   Insn 454: point = 1276
   Insn 453: point = 1277
   Insn 452: point = 1277
   Insn 451: point = 1278
   Insn 450: point = 1279
   Insn 449: point = 1280
   Insn 448: point = 1280
   Insn 447: point = 1281
   Insn 446: point = 1282
   Insn 445: point = 1283
   Insn 444: point = 1284
   Insn 443: point = 1285
   Insn 442: point = 1286
   Insn 441: point = 1288
   Insn 440: point = 1290
  BB 45
   Insn 438: point = 1291
   Insn 437: point = 1291
   Insn 436: point = 1292
   Insn 435: point = 1293
   Insn 434: point = 1293
   Insn 433: point = 1294
   Insn 432: point = 1294
   Insn 431: point = 1296
  BB 43
   Insn 424: point = 1297
   Insn 423: point = 1297
   Insn 422: point = 1298
   Insn 421: point = 1300
   Insn 420: point = 1302
   Insn 419: point = 1303
   Insn 418: point = 1303
   Insn 417: point = 1304
   Insn 416: point = 1305
   Insn 415: point = 1306
   Insn 414: point = 1306
   Insn 413: point = 1307
   Insn 412: point = 1308
   Insn 411: point = 1309
   Insn 410: point = 1310
   Insn 409: point = 1311
   Insn 408: point = 1312
   Insn 407: point = 1314
   Insn 406: point = 1316
  BB 42
   Insn 404: point = 1317
   Insn 403: point = 1317
   Insn 402: point = 1318
   Insn 401: point = 1319
   Insn 400: point = 1319
   Insn 399: point = 1320
   Insn 398: point = 1320
   Insn 397: point = 1322
   Insn 396: point = 1323
   Insn 395: point = 1324
   Insn 394: point = 1325
   Insn 393: point = 1326
   Insn 392: point = 1327
   Insn 391: point = 1329
  BB 40
   Insn 384: point = 1330
   Insn 383: point = 1330
   Insn 382: point = 1331
   Insn 381: point = 1333
   Insn 380: point = 1335
   Insn 379: point = 1336
   Insn 378: point = 1336
   Insn 377: point = 1337
   Insn 376: point = 1338
   Insn 375: point = 1339
   Insn 374: point = 1339
   Insn 373: point = 1340
   Insn 372: point = 1341
   Insn 371: point = 1342
   Insn 370: point = 1343
   Insn 369: point = 1344
   Insn 368: point = 1345
   Insn 367: point = 1347
   Insn 366: point = 1349
  BB 39
   Insn 364: point = 1350
   Insn 363: point = 1350
   Insn 362: point = 1351
   Insn 361: point = 1352
   Insn 360: point = 1352
   Insn 359: point = 1353
   Insn 358: point = 1353
   Insn 357: point = 1355
  BB 37
   Insn 350: point = 1356
   Insn 349: point = 1356
   Insn 348: point = 1357
   Insn 347: point = 1359
   Insn 346: point = 1361
   Insn 345: point = 1362
   Insn 344: point = 1362
   Insn 343: point = 1363
   Insn 342: point = 1364
   Insn 341: point = 1365
   Insn 340: point = 1365
   Insn 339: point = 1366
   Insn 338: point = 1367
   Insn 337: point = 1368
   Insn 336: point = 1369
   Insn 335: point = 1370
   Insn 334: point = 1371
   Insn 333: point = 1373
   Insn 332: point = 1375
  BB 36
   Insn 330: point = 1376
   Insn 329: point = 1376
   Insn 328: point = 1377
   Insn 327: point = 1378
   Insn 326: point = 1378
   Insn 325: point = 1379
   Insn 324: point = 1379
   Insn 323: point = 1381
   Insn 322: point = 1382
  BB 33
   Insn 2033: point = 1382
   Insn 297: point = 1382
   Insn 296: point = 1382
   Insn 295: point = 1382
   Insn 294: point = 1382
   Insn 293: point = 1382
   Insn 292: point = 1382
   Insn 291: point = 1382
   Insn 290: point = 1382
   Insn 289: point = 1382
   Insn 288: point = 1382
   Insn 287: point = 1383
   Insn 286: point = 1385
  BB 31
   Insn 2031: point = 1386
   Insn 272: point = 1386
   Insn 271: point = 1386
   Insn 270: point = 1386
   Insn 269: point = 1386
   Insn 268: point = 1386
   Insn 267: point = 1386
   Insn 266: point = 1386
  BB 29
   Insn 2029: point = 1386
   Insn 252: point = 1386
   Insn 251: point = 1386
   Insn 250: point = 1386
   Insn 249: point = 1386
   Insn 248: point = 1386
   Insn 247: point = 1386
   Insn 246: point = 1386
  BB 27
   Insn 2027: point = 1386
   Insn 232: point = 1386
   Insn 231: point = 1386
   Insn 230: point = 1386
   Insn 229: point = 1386
   Insn 228: point = 1386
   Insn 227: point = 1386
   Insn 226: point = 1386
  BB 24
   Insn 2025: point = 1386
   Insn 202: point = 1386
   Insn 201: point = 1386
   Insn 200: point = 1386
   Insn 199: point = 1386
   Insn 198: point = 1386
   Insn 197: point = 1386
   Insn 196: point = 1386
  BB 35
   Insn 319: point = 1386
   Insn 318: point = 1386
   Insn 317: point = 1386
   Insn 316: point = 1386
   Insn 315: point = 1386
   Insn 314: point = 1386
   Insn 313: point = 1386
   Insn 312: point = 1386
   Insn 311: point = 1386
  BB 34
   Insn 309: point = 1386
   Insn 308: point = 1386
   Insn 307: point = 1387
   Insn 306: point = 1388
   Insn 305: point = 1388
   Insn 304: point = 1389
   Insn 303: point = 1389
   Insn 302: point = 1391
  BB 32
   Insn 284: point = 1392
   Insn 283: point = 1392
   Insn 282: point = 1393
   Insn 281: point = 1394
   Insn 280: point = 1394
   Insn 279: point = 1395
   Insn 278: point = 1395
   Insn 277: point = 1397
  BB 30
   Insn 264: point = 1398
   Insn 263: point = 1398
   Insn 262: point = 1399
   Insn 261: point = 1400
   Insn 260: point = 1400
   Insn 259: point = 1401
   Insn 258: point = 1401
   Insn 257: point = 1403
  BB 28
   Insn 244: point = 1404
   Insn 243: point = 1404
   Insn 242: point = 1405
   Insn 241: point = 1406
   Insn 240: point = 1406
   Insn 239: point = 1407
   Insn 238: point = 1407
   Insn 237: point = 1409
  BB 26
   Insn 223: point = 1410
   Insn 222: point = 1410
   Insn 221: point = 1411
   Insn 220: point = 1412
   Insn 219: point = 1412
   Insn 218: point = 1413
   Insn 217: point = 1413
   Insn 216: point = 1415
  BB 25
   Insn 214: point = 1416
   Insn 213: point = 1416
   Insn 212: point = 1417
   Insn 211: point = 1418
   Insn 210: point = 1418
   Insn 209: point = 1419
   Insn 208: point = 1419
   Insn 207: point = 1421
  BB 23
   Insn 193: point = 1422
   Insn 192: point = 1422
   Insn 191: point = 1423
   Insn 190: point = 1424
   Insn 189: point = 1424
   Insn 188: point = 1425
   Insn 187: point = 1425
   Insn 186: point = 1427
  BB 22
   Insn 184: point = 1428
   Insn 183: point = 1428
   Insn 182: point = 1429
   Insn 181: point = 1430
   Insn 180: point = 1430
   Insn 179: point = 1431
   Insn 178: point = 1431
   Insn 177: point = 1433
  BB 20
   Insn 2021: point = 1434
   Insn 163: point = 1434
   Insn 162: point = 1434
   Insn 2124: point = 1435
   Insn 161: point = 1436
   Insn 160: point = 1437
   Insn 159: point = 1439
   Insn 158: point = 1440
   Insn 157: point = 1440
   Insn 156: point = 1440
   Insn 155: point = 1440
   Insn 154: point = 1441
   Insn 153: point = 1443
  BB 19
   Insn 148: point = 1444
   Insn 147: point = 1444
   Insn 146: point = 1445
   Insn 145: point = 1446
  BB 18
   Insn 140: point = 1447
   Insn 139: point = 1447
   Insn 138: point = 1448
  BB 15
   Insn 2016: point = 1449
   Insn 117: point = 1449
   Insn 116: point = 1450
   Insn 115: point = 1450
   Insn 114: point = 1452
  BB 12
   Insn 2014: point = 1453
   Insn 100: point = 1453
   Insn 99: point = 1454
   Insn 98: point = 1454
   Insn 97: point = 1456
  BB 9
   Insn 2012: point = 1457
   Insn 83: point = 1457
   Insn 82: point = 1458
   Insn 81: point = 1458
   Insn 80: point = 1460
  BB 6
   Insn 2010: point = 1461
   Insn 66: point = 1461
   Insn 65: point = 1462
   Insn 64: point = 1462
   Insn 63: point = 1464
  BB 17
   Insn 2019: point = 1465
   Insn 133: point = 1465
   Insn 132: point = 1465
   Insn 2123: point = 1466
   Insn 131: point = 1467
   Insn 130: point = 1468
   Insn 129: point = 1470
  BB 16
   Insn 124: point = 1471
   Insn 123: point = 1471
   Insn 122: point = 1472
  BB 14
   Insn 109: point = 1473
   Insn 108: point = 1473
  BB 13
   Insn 107: point = 1475
   Insn 106: point = 1475
   Insn 105: point = 1475
  BB 11
   Insn 92: point = 1476
   Insn 91: point = 1476
  BB 10
   Insn 90: point = 1478
   Insn 89: point = 1478
   Insn 88: point = 1478
  BB 8
   Insn 75: point = 1479
   Insn 74: point = 1479
  BB 7
   Insn 73: point = 1481
   Insn 72: point = 1481
   Insn 71: point = 1481
  BB 5
   Insn 58: point = 1482
   Insn 57: point = 1482
  BB 4
   Insn 56: point = 1484
   Insn 55: point = 1484
   Insn 54: point = 1484
  BB 2
   Insn 41: point = 1485
   Insn 40: point = 1485
   Insn 39: point = 1486
   Insn 38: point = 1488
   Insn 37: point = 1490
   Insn 36: point = 1491
   Insn 35: point = 1491
   Insn 34: point = 1492
   Insn 33: point = 1493
   Insn 32: point = 1494
   Insn 31: point = 1494
   Insn 30: point = 1495
   Insn 29: point = 1496
   Insn 28: point = 1497
   Insn 27: point = 1498
   Insn 26: point = 1499
   Insn 25: point = 1500
   Insn 24: point = 1502
   Insn 23: point = 1504
   Insn 22: point = 1505
   Insn 21: point = 1505
   Insn 20: point = 1505
   Insn 19: point = 1505
   Insn 18: point = 1505
   Insn 17: point = 1505
   Insn 16: point = 1505
   Insn 15: point = 1505
   Insn 14: point = 1505
   Insn 13: point = 1505
   Insn 12: point = 1506
   Insn 11: point = 1507
   Insn 7: point = 1507
   Insn 6: point = 1507
   Insn 5: point = 1507
   Insn 4: point = 1507
   Insn 3: point = 1507
   Insn 2: point = 1507
 r83: [53..54] [48..48] [2..43]
 r84: [1501..1502]
 r85: [1495..1500]
 r86: [1494..1499]
 r87: [1493..1498]
 r88: [1489..1490]
 r89: [1485..1486]
 r90: [51..52]
 r91: [49..50]
 r92: [1482..1484]
 r93: [1479..1481]
 r94: [1476..1478]
 r95: [1473..1475]
 r96: [1471..1472]
 r97: [1447..1448]
 r98: [1444..1446]
 r99: [1442..1443]
 r100: [1440..1441]
 r101: [1434..1437]
 r102: [44..45]
 r103: [1465..1468]
 r104: [1449..1450]
 r105: [1453..1454]
 r106: [1457..1458]
 r107: [1461..1462]
 r108: [1430..1431]
 r109: [1428..1429]
 r110: [1424..1425]
 r111: [1422..1423]
 r112: [1418..1419]
 r113: [1416..1417]
 r114: [1412..1413]
 r115: [1410..1411]
 r116: [1406..1407]
 r117: [1404..1405]
 r118: [1400..1401]
 r119: [1398..1399]
 r120: [1394..1395]
 r121: [1392..1393]
 r122: [1382..1383]
 r123: [1388..1389]
 r124: [1386..1387]
 r125: [1378..1379]
 r126: [1376..1377]
 r127: [1372..1373]
 r128: [1366..1371]
 r129: [1365..1370]
 r130: [1364..1369]
 r131: [1360..1361]
 r132: [1356..1357]
 r133: [1352..1353]
 r134: [1350..1351]
 r135: [1346..1347]
 r136: [1340..1345]
 r137: [1339..1344]
 r138: [1338..1343]
 r139: [1334..1335]
 r140: [1330..1331]
 r141: [1328..1329]
 r142: [1325..1327]
 r143: [1319..1320]
 r144: [1317..1318]
 r145: [1313..1314]
 r146: [1307..1312]
 r147: [1306..1311]
 r148: [1305..1310]
 r149: [1301..1302]
 r150: [1297..1298]
 r151: [1293..1294]
 r152: [1291..1292]
 r153: [1287..1288]
 r154: [1281..1286]
 r155: [1280..1285]
 r156: [1279..1284]
 r157: [1275..1276]
 r158: [1271..1272]
 r159: [1269..1270]
 r160: [1264..1266]
 r161: [1260..1261]
 r162: [1258..1259]
 r163: [1254..1255]
 r164: [1248..1253]
 r165: [1247..1252]
 r166: [1246..1251]
 r167: [1242..1243]
 r168: [1238..1239]
 r169: [1234..1235]
 r170: [1232..1233]
 r171: [1228..1229]
 r172: [1222..1227]
 r173: [1221..1226]
 r174: [1220..1225]
 r175: [1216..1217]
 r176: [1212..1213]
 r177: [1210..1211]
 r178: [1208..1209]
 r179: [1205..1207]
 r180: [1201..1202]
 r181: [1199..1200]
 r182: [1195..1196]
 r183: [1189..1194]
 r184: [1188..1193]
 r185: [1187..1192]
 r186: [1183..1184]
 r187: [1179..1180]
 r188: [1175..1176]
 r189: [1173..1174]
 r190: [1169..1170]
 r191: [1163..1168]
 r192: [1162..1167]
 r193: [1161..1166]
 r194: [1157..1158]
 r195: [1153..1154]
 r196: [1151..1152]
 r197: [1148..1150]
 r198: [1144..1145]
 r199: [1142..1143]
 r200: [1138..1139]
 r201: [1132..1137]
 r202: [1131..1136]
 r203: [1130..1135]
 r204: [1126..1127]
 r205: [1122..1123]
 r206: [1118..1119]
 r207: [1116..1117]
 r208: [1112..1113]
 r209: [1106..1111]
 r210: [1105..1110]
 r211: [1104..1109]
 r212: [1100..1101]
 r213: [1096..1097]
 r214: [1094..1095]
 r215: [1091..1093]
 r216: [1089..1090]
 r217: [1086..1088]
 r218: [1082..1083]
 r219: [1075..1081]
 r220: [1077..1078]
 r221: [1075..1076]
 r222: [1073..1074]
 r223: [1069..1070]
 r224: [1067..1068]
 r225: [1065..1066]
 r226: [1046..1056]
 r227: [1052..1053]
 r228: [1050..1051]
 r229: [1046..1047]
 r230: [1041..1043]
 r231: [1037..1038]
 r232: [1034..1036]
 r233: [1028..1029]
 r234: [1024..1025]
 r235: [1018..1019]
 r236: [1015..1017]
 r237: [1011..1012]
 r238: [1004..1010]
 r239: [1006..1007]
 r240: [1004..1005]
 r241: [997..1003]
 r242: [999..1000]
 r243: [997..998]
 r244: [990..996]
 r245: [992..993]
 r246: [990..991]
 r247: [987..989]
 r248: [979..980]
 r249: [977..978]
 r250: [973..974]
 r251: [967..972]
 r252: [966..971]
 r253: [965..970]
 r254: [961..962]
 r255: [957..958]
 r256: [953..954]
 r257: [951..952]
 r258: [947..948]
 r259: [941..946]
 r260: [940..945]
 r261: [939..944]
 r262: [935..936]
 r263: [931..932]
 r264: [925..930]
 r265: [910..914]
 r266: [907..908]
 r267: [918..922]
 r268: [915..916]
 r269: [903..904]
 r270: [900..902]
 r271: [898..901]
 r272: [894..896]
 r273: [890..891]
 r274: [888..889]
 r275: [884..885]
 r276: [878..883]
 r277: [877..882]
 r278: [876..881]
 r279: [872..873]
 r280: [868..869]
 r281: [864..865]
 r282: [862..863]
 r283: [858..859]
 r284: [852..857]
 r285: [851..856]
 r286: [850..855]
 r287: [846..847]
 r288: [842..843]
 r289: [840..841]
 r290: [835..837]
 r291: [826..827]
 r292: [824..825]
 r293: [820..821]
 r294: [814..819]
 r295: [813..818]
 r296: [812..817]
 r297: [808..809]
 r298: [804..805]
 r299: [800..801]
 r300: [798..799]
 r301: [794..795]
 r302: [788..793]
 r303: [787..792]
 r304: [786..791]
 r305: [782..783]
 r306: [778..779]
 r307: [776..777]
 r308: [771..773]
 r309: [763..770]
 r310: [762..767]
 r311: [759..760]
 r312: [755..756]
 r313: [747..754]
 r314: [746..751]
 r315: [743..744]
 r316: [739..740]
 r317: [731..738]
 r318: [730..735]
 r319: [727..728]
 r320: [723..724]
 r321: [719..720]
 r322: [712..718]
 r323: [711..717]
 r324: [709..716]
 r325: [705..706]
 r326: [701..702]
 r327: [697..698]
 r328: [695..696]
 r329: [687..694]
 r330: [686..691]
 r331: [685..688]
 r332: [681..682]
 r333: [679..680]
 r334: [676..678]
 r335: [663..664]
 r336: [661..662]
 r337: [657..658]
 r338: [649..656]
 r339: [648..655]
 r340: [647..654]
 r341: [646..651]
 r342: [643..644]
 r343: [639..640]
 r344: [637..638]
 r345: [633..634]
 r346: [631..632]
 r347: [627..628]
 r348: [619..626]
 r349: [618..625]
 r350: [617..624]
 r351: [616..621]
 r352: [613..614]
 r353: [609..610]
 r354: [604..606]
 r355: [600..601]
 r356: [598..599]
 r357: [594..595]
 r358: [586..593]
 r359: [585..592]
 r360: [584..591]
 r361: [583..588]
 r362: [580..581]
 r363: [576..577]
 r364: [572..573]
 r365: [570..571]
 r366: [566..567]
 r367: [558..565]
 r368: [557..564]
 r369: [556..563]
 r370: [555..560]
 r371: [552..553]
 r372: [548..549]
 r373: [543..545]
 r374: [539..540]
 r375: [537..538]
 r376: [533..534]
 r377: [525..532]
 r378: [524..531]
 r379: [523..530]
 r380: [522..527]
 r381: [519..520]
 r382: [515..516]
 r383: [511..512]
 r384: [509..510]
 r385: [505..506]
 r386: [497..504]
 r387: [496..503]
 r388: [495..502]
 r389: [494..499]
 r390: [491..492]
 r391: [487..488]
 r392: [482..484]
 r393: [475..476]
 r394: [469..474]
 r395: [468..473]
 r396: [467..472]
 r397: [463..464]
 r398: [459..460]
 r399: [457..458]
 r400: [454..456]
 r401: [448..450]
 r402: [444..445]
 r403: [438..443]
 r404: [437..442]
 r405: [436..441]
 r406: [432..433]
 r407: [428..429]
 r408: [426..427]
 r409: [423..425]
 r410: [417..419]
 r411: [404..405]
 r412: [402..403]
 r413: [398..399]
 r414: [390..397]
 r415: [389..396]
 r416: [388..395]
 r417: [387..392]
 r418: [384..385]
 r419: [380..381]
 r420: [378..379]
 r421: [374..375]
 r422: [372..373]
 r423: [368..369]
 r424: [360..367]
 r425: [359..366]
 r426: [358..365]
 r427: [357..362]
 r428: [354..355]
 r429: [350..351]
 r430: [346..347]
 r431: [344..345]
 r432: [340..341]
 r433: [332..339]
 r434: [331..338]
 r435: [330..337]
 r436: [329..334]
 r437: [326..327]
 r438: [322..323]
 r439: [318..319]
 r440: [316..317]
 r441: [312..313]
 r442: [304..311]
 r443: [303..310]
 r444: [302..309]
 r445: [301..306]
 r446: [298..299]
 r447: [294..295]
 r448: [290..291]
 r449: [288..289]
 r450: [284..285]
 r451: [276..283]
 r452: [275..282]
 r453: [274..281]
 r454: [273..278]
 r455: [270..271]
 r456: [266..267]
 r457: [264..265]
 r458: [260..261]
 r459: [258..259]
 r460: [254..255]
 r461: [246..253]
 r462: [245..252]
 r463: [244..251]
 r464: [243..248]
 r465: [240..241]
 r466: [236..237]
 r467: [232..233]
 r468: [230..231]
 r469: [226..227]
 r470: [218..225]
 r471: [217..224]
 r472: [216..223]
 r473: [215..220]
 r474: [212..213]
 r475: [208..209]
 r476: [204..205]
 r477: [202..203]
 r478: [198..199]
 r479: [190..197]
 r480: [189..196]
 r481: [188..195]
 r482: [187..192]
 r483: [184..185]
 r484: [180..181]
 r485: [176..177]
 r486: [174..175]
 r487: [170..171]
 r488: [164..169]
 r489: [163..168]
 r490: [162..167]
 r491: [158..159]
 r492: [154..155]
 r493: [152..153]
 r494: [147..149]
 r495: [143..144]
 r496: [141..142]
 r497: [137..138]
 r498: [131..136]
 r499: [130..135]
 r500: [129..134]
 r501: [125..126]
 r502: [121..122]
 r503: [119..120]
 r504: [114..116]
 r505: [110..111]
 r506: [108..109]
 r507: [104..105]
 r508: [98..103]
 r509: [97..102]
 r510: [96..101]
 r511: [92..93]
 r512: [88..89]
 r513: [84..85]
 r514: [82..83]
 r515: [78..79]
 r516: [72..77]
 r517: [71..76]
 r518: [70..75]
 r519: [66..67]
 r520: [62..63]
 r521: [60..61]
 r522: [55..57]
 r523: [0..1]
 r524: [1505..1506]
 r525: [1503..1504]
 r526: [1492..1497]
 r527: [1491..1496]
 r528: [1487..1488]
 r529: [1463..1464]
 r530: [1459..1460]
 r531: [1455..1456]
 r532: [1451..1452]
 r533: [1469..1470]
 r534: [1444..1445]
 r535: [1438..1439]
 r536: [46..47]
 r537: [1432..1433]
 r538: [1426..1427]
 r539: [1420..1421]
 r540: [1414..1415]
 r541: [1408..1409]
 r542: [1402..1403]
 r543: [1396..1397]
 r544: [1384..1385]
 r545: [1390..1391]
 r546: [1380..1381]
 r547: [1374..1375]
 r548: [1363..1368]
 r549: [1362..1367]
 r550: [1358..1359]
 r551: [1354..1355]
 r552: [1348..1349]
 r553: [1337..1342]
 r554: [1336..1341]
 r555: [1332..1333]
 r556: [1325..1326]
 r557: [1323..1324]
 r558: [1321..1322]
 r559: [1315..1316]
 r560: [1304..1309]
 r561: [1303..1308]
 r562: [1299..1300]
 r563: [1295..1296]
 r564: [1289..1290]
 r565: [1278..1283]
 r566: [1277..1282]
 r567: [1273..1274]
 r568: [1264..1265]
 r569: [1262..1263]
 r570: [1256..1257]
 r571: [1245..1250]
 r572: [1244..1249]
 r573: [1240..1241]
 r574: [1236..1237]
 r575: [1230..1231]
 r576: [1219..1224]
 r577: [1218..1223]
 r578: [1214..1215]
 r579: [1205..1206]
 r580: [1203..1204]
 r581: [1197..1198]
 r582: [1186..1191]
 r583: [1185..1190]
 r584: [1181..1182]
 r585: [1177..1178]
 r586: [1171..1172]
 r587: [1160..1165]
 r588: [1159..1164]
 r589: [1155..1156]
 r590: [1148..1149]
 r591: [1146..1147]
 r592: [1140..1141]
 r593: [1129..1134]
 r594: [1128..1133]
 r595: [1124..1125]
 r596: [1120..1121]
 r597: [1114..1115]
 r598: [1103..1108]
 r599: [1102..1107]
 r600: [1098..1099]
 r601: [1091..1092]
 r602: [1086..1087]
 r603: [1084..1085]
 r604: [1079..1080]
 r605: [1071..1072]
 r606: [1061..1062]
 r607: [1059..1060]
 r608: [1063..1064]
 r609: [1057..1058]
 r610: [1054..1055]
 r611: [1044..1045]
 r613: [1041..1042]
 r614: [1039..1040]
 r615: [1034..1035]
 r616: [1032..1033]
 r617: [1030..1031]
 r618: [1026..1027]
 r619: [1022..1023]
 r620: [1020..1021]
 r621: [1015..1016]
 r622: [1013..1014]
 r623: [1008..1009]
 r624: [1001..1002]
 r625: [994..995]
 r628: [985..986]
 r629: [987..988]
 r630: [983..984]
 r631: [981..982]
 r632: [975..976]
 r633: [964..969]
 r634: [963..968]
 r635: [959..960]
 r636: [955..956]
 r637: [949..950]
 r638: [938..943]
 r639: [937..942]
 r640: [933..934]
 r641: [928..929]
 r642: [925..926]
 r643: [912..913]
 r644: [923..924]
 r645: [920..921]
 r646: [905..906]
 r647: [894..895]
 r648: [892..893]
 r649: [886..887]
 r650: [875..880]
 r651: [874..879]
 r652: [870..871]
 r653: [866..867]
 r654: [860..861]
 r655: [849..854]
 r656: [848..853]
 r657: [844..845]
 r658: [835..836]
 r659: [832..834]
 r660: [832..833]
 r661: [830..831]
 r662: [828..829]
 r663: [822..823]
 r664: [811..816]
 r665: [810..815]
 r666: [806..807]
 r667: [802..803]
 r668: [796..797]
 r669: [785..790]
 r670: [784..789]
 r671: [780..781]
 r672: [771..772]
 r673: [768..769]
 r674: [764..766]
 r675: [761..765]
 r676: [757..758]
 r677: [752..753]
 r678: [748..750]
 r679: [745..749]
 r680: [741..742]
 r681: [736..737]
 r682: [732..734]
 r683: [729..733]
 r684: [725..726]
 r685: [721..722]
 r686: [710..715]
 r687: [708..714]
 r688: [707..713]
 r689: [703..704]
 r690: [699..700]
 r691: [692..693]
 r692: [689..690]
 r693: [683..684]
 r694: [676..677]
 r695: [673..675]
 r696: [673..674]
 r697: [670..672]
 r698: [670..671]
 r699: [667..669]
 r700: [667..668]
 r701: [665..666]
 r702: [659..660]
 r703: [652..653]
 r704: [645..650]
 r705: [641..642]
 r706: [635..636]
 r707: [629..630]
 r708: [622..623]
 r709: [615..620]
 r710: [611..612]
 r711: [607..608]
 r712: [604..605]
 r713: [602..603]
 r714: [596..597]
 r715: [589..590]
 r716: [582..587]
 r717: [578..579]
 r718: [574..575]
 r719: [568..569]
 r720: [561..562]
 r721: [554..559]
 r722: [550..551]
 r723: [546..547]
 r724: [543..544]
 r725: [541..542]
 r726: [535..536]
 r727: [528..529]
 r728: [521..526]
 r729: [517..518]
 r730: [513..514]
 r731: [507..508]
 r732: [500..501]
 r733: [493..498]
 r734: [489..490]
 r735: [485..486]
 r736: [482..483]
 r737: [479..481]
 r738: [479..480]
 r739: [477..478]
 r740: [466..471]
 r741: [465..470]
 r742: [461..462]
 r743: [452..455]
 r744: [448..449]
 r745: [446..447]
 r746: [435..440]
 r747: [434..439]
 r748: [430..431]
 r749: [421..424]
 r750: [417..418]
 r751: [414..416]
 r752: [414..415]
 r753: [411..413]
 r754: [411..412]
 r755: [408..410]
 r756: [408..409]
 r757: [406..407]
 r758: [400..401]
 r759: [393..394]
 r760: [386..391]
 r761: [382..383]
 r762: [376..377]
 r763: [370..371]
 r764: [363..364]
 r765: [356..361]
 r766: [352..353]
 r767: [348..349]
 r768: [342..343]
 r769: [335..336]
 r770: [328..333]
 r771: [324..325]
 r772: [320..321]
 r773: [314..315]
 r774: [307..308]
 r775: [300..305]
 r776: [296..297]
 r777: [292..293]
 r778: [286..287]
 r779: [279..280]
 r780: [272..277]
 r781: [268..269]
 r782: [262..263]
 r783: [256..257]
 r784: [249..250]
 r785: [242..247]
 r786: [238..239]
 r787: [234..235]
 r788: [228..229]
 r789: [221..222]
 r790: [214..219]
 r791: [210..211]
 r792: [206..207]
 r793: [200..201]
 r794: [193..194]
 r795: [186..191]
 r796: [182..183]
 r797: [178..179]
 r798: [172..173]
 r799: [161..166]
 r800: [160..165]
 r801: [156..157]
 r802: [147..148]
 r803: [145..146]
 r804: [139..140]
 r805: [128..133]
 r806: [127..132]
 r807: [123..124]
 r808: [114..115]
 r809: [112..113]
 r810: [106..107]
 r811: [95..100]
 r812: [94..99]
 r813: [90..91]
 r814: [86..87]
 r815: [80..81]
 r816: [69..74]
 r817: [68..73]
 r818: [64..65]
 r819: [55..56]
 r821: [1466..1467]
 r822: [1435..1436]
 r823: [1267..1268]
 r824: [1045..1046]
 r825: [909..911]
 r826: [917..919]
 r827: [897..899]
 r828: [838..839]
 r829: [774..775]
 r830: [451..453]
 r831: [420..422]
 r832: [150..151]
 r833: [117..118]
 r834: [58..59]
 r835: [1048..1049]
Compressing live ranges: from 1507 to 1083 - 71%
Ranges after the compression:
 r83: [13..14] [8..8] [2..3]
 r84: [1077..1078]
 r85: [1075..1076]
 r86: [1075..1076]
 r87: [1075..1076]
 r88: [1073..1074]
 r89: [1069..1070]
 r90: [11..12]
 r91: [9..10]
 r92: [1067..1068]
 r93: [1065..1066]
 r94: [1063..1064]
 r95: [1061..1062]
 r96: [1059..1060]
 r97: [1037..1038]
 r98: [1035..1036]
 r99: [1033..1034]
 r100: [1031..1032]
 r101: [1027..1028]
 r102: [4..5]
 r103: [1055..1056]
 r104: [1039..1040]
 r105: [1043..1044]
 r106: [1047..1048]
 r107: [1051..1052]
 r108: [1023..1024]
 r109: [1021..1022]
 r110: [1017..1018]
 r111: [1015..1016]
 r112: [1011..1012]
 r113: [1009..1010]
 r114: [1005..1006]
 r115: [1003..1004]
 r116: [999..1000]
 r117: [997..998]
 r118: [993..994]
 r119: [991..992]
 r120: [987..988]
 r121: [985..986]
 r122: [975..976]
 r123: [981..982]
 r124: [979..980]
 r125: [971..972]
 r126: [969..970]
 r127: [965..966]
 r128: [963..964]
 r129: [963..964]
 r130: [963..964]
 r131: [961..962]
 r132: [957..958]
 r133: [953..954]
 r134: [951..952]
 r135: [947..948]
 r136: [945..946]
 r137: [945..946]
 r138: [945..946]
 r139: [943..944]
 r140: [939..940]
 r141: [937..938]
 r142: [935..936]
 r143: [929..930]
 r144: [927..928]
 r145: [923..924]
 r146: [921..922]
 r147: [921..922]
 r148: [921..922]
 r149: [919..920]
 r150: [915..916]
 r151: [911..912]
 r152: [909..910]
 r153: [905..906]
 r154: [903..904]
 r155: [903..904]
 r156: [903..904]
 r157: [901..902]
 r158: [897..898]
 r159: [895..896]
 r160: [891..892]
 r161: [887..888]
 r162: [885..886]
 r163: [881..882]
 r164: [879..880]
 r165: [879..880]
 r166: [879..880]
 r167: [877..878]
 r168: [873..874]
 r169: [869..870]
 r170: [867..868]
 r171: [863..864]
 r172: [861..862]
 r173: [861..862]
 r174: [861..862]
 r175: [859..860]
 r176: [855..856]
 r177: [853..854]
 r178: [851..852]
 r179: [849..850]
 r180: [845..846]
 r181: [843..844]
 r182: [839..840]
 r183: [837..838]
 r184: [837..838]
 r185: [837..838]
 r186: [835..836]
 r187: [831..832]
 r188: [827..828]
 r189: [825..826]
 r190: [821..822]
 r191: [819..820]
 r192: [819..820]
 r193: [819..820]
 r194: [817..818]
 r195: [813..814]
 r196: [811..812]
 r197: [809..810]
 r198: [805..806]
 r199: [803..804]
 r200: [799..800]
 r201: [797..798]
 r202: [797..798]
 r203: [797..798]
 r204: [795..796]
 r205: [791..792]
 r206: [787..788]
 r207: [785..786]
 r208: [781..782]
 r209: [779..780]
 r210: [779..780]
 r211: [779..780]
 r212: [777..778]
 r213: [773..774]
 r214: [771..772]
 r215: [769..770]
 r216: [767..768]
 r217: [765..766]
 r218: [761..762]
 r219: [755..760]
 r220: [757..758]
 r221: [755..756]
 r222: [753..754]
 r223: [749..750]
 r224: [747..748]
 r225: [745..746]
 r226: [727..736]
 r227: [733..734]
 r228: [731..732]
 r229: [727..728]
 r230: [723..724]
 r231: [719..720]
 r232: [717..718]
 r233: [711..712]
 r234: [707..708]
 r235: [701..702]
 r236: [699..700]
 r237: [695..696]
 r238: [689..694]
 r239: [691..692]
 r240: [689..690]
 r241: [683..688]
 r242: [685..686]
 r243: [683..684]
 r244: [677..682]
 r245: [679..680]
 r246: [677..678]
 r247: [675..676]
 r248: [667..668]
 r249: [665..666]
 r250: [661..662]
 r251: [659..660]
 r252: [659..660]
 r253: [659..660]
 r254: [657..658]
 r255: [653..654]
 r256: [649..650]
 r257: [647..648]
 r258: [643..644]
 r259: [641..642]
 r260: [641..642]
 r261: [641..642]
 r262: [639..640]
 r263: [635..636]
 r264: [631..634]
 r265: [619..622]
 r266: [617..618]
 r267: [625..628]
 r268: [623..624]
 r269: [613..614]
 r270: [611..612]
 r271: [609..612]
 r272: [607..608]
 r273: [603..604]
 r274: [601..602]
 r275: [597..598]
 r276: [595..596]
 r277: [595..596]
 r278: [595..596]
 r279: [593..594]
 r280: [589..590]
 r281: [585..586]
 r282: [583..584]
 r283: [579..580]
 r284: [577..578]
 r285: [577..578]
 r286: [577..578]
 r287: [575..576]
 r288: [571..572]
 r289: [569..570]
 r290: [565..566]
 r291: [557..558]
 r292: [555..556]
 r293: [551..552]
 r294: [549..550]
 r295: [549..550]
 r296: [549..550]
 r297: [547..548]
 r298: [543..544]
 r299: [539..540]
 r300: [537..538]
 r301: [533..534]
 r302: [531..532]
 r303: [531..532]
 r304: [531..532]
 r305: [529..530]
 r306: [525..526]
 r307: [523..524]
 r308: [519..520]
 r309: [515..518]
 r310: [515..516]
 r311: [513..514]
 r312: [509..510]
 r313: [505..508]
 r314: [505..506]
 r315: [503..504]
 r316: [499..500]
 r317: [495..498]
 r318: [495..496]
 r319: [493..494]
 r320: [489..490]
 r321: [485..486]
 r322: [483..484]
 r323: [483..484]
 r324: [483..484]
 r325: [481..482]
 r326: [477..478]
 r327: [473..474]
 r328: [471..472]
 r329: [465..470]
 r330: [465..468]
 r331: [465..466]
 r332: [461..462]
 r333: [459..460]
 r334: [457..458]
 r335: [447..448]
 r336: [445..446]
 r337: [441..442]
 r338: [437..440]
 r339: [437..440]
 r340: [437..440]
 r341: [437..438]
 r342: [435..436]
 r343: [431..432]
 r344: [429..430]
 r345: [425..426]
 r346: [423..424]
 r347: [419..420]
 r348: [415..418]
 r349: [415..418]
 r350: [415..418]
 r351: [415..416]
 r352: [413..414]
 r353: [409..410]
 r354: [405..406]
 r355: [401..402]
 r356: [399..400]
 r357: [395..396]
 r358: [391..394]
 r359: [391..394]
 r360: [391..394]
 r361: [391..392]
 r362: [389..390]
 r363: [385..386]
 r364: [381..382]
 r365: [379..380]
 r366: [375..376]
 r367: [371..374]
 r368: [371..374]
 r369: [371..374]
 r370: [371..372]
 r371: [369..370]
 r372: [365..366]
 r373: [361..362]
 r374: [357..358]
 r375: [355..356]
 r376: [351..352]
 r377: [347..350]
 r378: [347..350]
 r379: [347..350]
 r380: [347..348]
 r381: [345..346]
 r382: [341..342]
 r383: [337..338]
 r384: [335..336]
 r385: [331..332]
 r386: [327..330]
 r387: [327..330]
 r388: [327..330]
 r389: [327..328]
 r390: [325..326]
 r391: [321..322]
 r392: [317..318]
 r393: [311..312]
 r394: [309..310]
 r395: [309..310]
 r396: [309..310]
 r397: [307..308]
 r398: [303..304]
 r399: [301..302]
 r400: [299..300]
 r401: [295..296]
 r402: [291..292]
 r403: [289..290]
 r404: [289..290]
 r405: [289..290]
 r406: [287..288]
 r407: [283..284]
 r408: [281..282]
 r409: [279..280]
 r410: [275..276]
 r411: [265..266]
 r412: [263..264]
 r413: [259..260]
 r414: [255..258]
 r415: [255..258]
 r416: [255..258]
 r417: [255..256]
 r418: [253..254]
 r419: [249..250]
 r420: [247..248]
 r421: [243..244]
 r422: [241..242]
 r423: [237..238]
 r424: [233..236]
 r425: [233..236]
 r426: [233..236]
 r427: [233..234]
 r428: [231..232]
 r429: [227..228]
 r430: [223..224]
 r431: [221..222]
 r432: [217..218]
 r433: [213..216]
 r434: [213..216]
 r435: [213..216]
 r436: [213..214]
 r437: [211..212]
 r438: [207..208]
 r439: [203..204]
 r440: [201..202]
 r441: [197..198]
 r442: [193..196]
 r443: [193..196]
 r444: [193..196]
 r445: [193..194]
 r446: [191..192]
 r447: [187..188]
 r448: [183..184]
 r449: [181..182]
 r450: [177..178]
 r451: [173..176]
 r452: [173..176]
 r453: [173..176]
 r454: [173..174]
 r455: [171..172]
 r456: [167..168]
 r457: [165..166]
 r458: [161..162]
 r459: [159..160]
 r460: [155..156]
 r461: [151..154]
 r462: [151..154]
 r463: [151..154]
 r464: [151..152]
 r465: [149..150]
 r466: [145..146]
 r467: [141..142]
 r468: [139..140]
 r469: [135..136]
 r470: [131..134]
 r471: [131..134]
 r472: [131..134]
 r473: [131..132]
 r474: [129..130]
 r475: [125..126]
 r476: [121..122]
 r477: [119..120]
 r478: [115..116]
 r479: [111..114]
 r480: [111..114]
 r481: [111..114]
 r482: [111..112]
 r483: [109..110]
 r484: [105..106]
 r485: [101..102]
 r486: [99..100]
 r487: [95..96]
 r488: [93..94]
 r489: [93..94]
 r490: [93..94]
 r491: [91..92]
 r492: [87..88]
 r493: [85..86]
 r494: [81..82]
 r495: [77..78]
 r496: [75..76]
 r497: [71..72]
 r498: [69..70]
 r499: [69..70]
 r500: [69..70]
 r501: [67..68]
 r502: [63..64]
 r503: [61..62]
 r504: [57..58]
 r505: [53..54]
 r506: [51..52]
 r507: [47..48]
 r508: [45..46]
 r509: [45..46]
 r510: [45..46]
 r511: [43..44]
 r512: [39..40]
 r513: [35..36]
 r514: [33..34]
 r515: [29..30]
 r516: [27..28]
 r517: [27..28]
 r518: [27..28]
 r519: [25..26]
 r520: [21..22]
 r521: [19..20]
 r522: [15..16]
 r523: [0..1]
 r524: [1081..1082]
 r525: [1079..1080]
 r526: [1075..1076]
 r527: [1075..1076]
 r528: [1071..1072]
 r529: [1053..1054]
 r530: [1049..1050]
 r531: [1045..1046]
 r532: [1041..1042]
 r533: [1057..1058]
 r534: [1035..1036]
 r535: [1029..1030]
 r536: [6..7]
 r537: [1025..1026]
 r538: [1019..1020]
 r539: [1013..1014]
 r540: [1007..1008]
 r541: [1001..1002]
 r542: [995..996]
 r543: [989..990]
 r544: [977..978]
 r545: [983..984]
 r546: [973..974]
 r547: [967..968]
 r548: [963..964]
 r549: [963..964]
 r550: [959..960]
 r551: [955..956]
 r552: [949..950]
 r553: [945..946]
 r554: [945..946]
 r555: [941..942]
 r556: [935..936]
 r557: [933..934]
 r558: [931..932]
 r559: [925..926]
 r560: [921..922]
 r561: [921..922]
 r562: [917..918]
 r563: [913..914]
 r564: [907..908]
 r565: [903..904]
 r566: [903..904]
 r567: [899..900]
 r568: [891..892]
 r569: [889..890]
 r570: [883..884]
 r571: [879..880]
 r572: [879..880]
 r573: [875..876]
 r574: [871..872]
 r575: [865..866]
 r576: [861..862]
 r577: [861..862]
 r578: [857..858]
 r579: [849..850]
 r580: [847..848]
 r581: [841..842]
 r582: [837..838]
 r583: [837..838]
 r584: [833..834]
 r585: [829..830]
 r586: [823..824]
 r587: [819..820]
 r588: [819..820]
 r589: [815..816]
 r590: [809..810]
 r591: [807..808]
 r592: [801..802]
 r593: [797..798]
 r594: [797..798]
 r595: [793..794]
 r596: [789..790]
 r597: [783..784]
 r598: [779..780]
 r599: [779..780]
 r600: [775..776]
 r601: [769..770]
 r602: [765..766]
 r603: [763..764]
 r604: [759..760]
 r605: [751..752]
 r606: [741..742]
 r607: [739..740]
 r608: [743..744]
 r609: [737..738]
 r610: [735..736]
 r611: [725..726]
 r613: [723..724]
 r614: [721..722]
 r615: [717..718]
 r616: [715..716]
 r617: [713..714]
 r618: [709..710]
 r619: [705..706]
 r620: [703..704]
 r621: [699..700]
 r622: [697..698]
 r623: [693..694]
 r624: [687..688]
 r625: [681..682]
 r628: [673..674]
 r629: [675..676]
 r630: [671..672]
 r631: [669..670]
 r632: [663..664]
 r633: [659..660]
 r634: [659..660]
 r635: [655..656]
 r636: [651..652]
 r637: [645..646]
 r638: [641..642]
 r639: [641..642]
 r640: [637..638]
 r641: [633..634]
 r642: [631..632]
 r643: [621..622]
 r644: [629..630]
 r645: [627..628]
 r646: [615..616]
 r647: [607..608]
 r648: [605..606]
 r649: [599..600]
 r650: [595..596]
 r651: [595..596]
 r652: [591..592]
 r653: [587..588]
 r654: [581..582]
 r655: [577..578]
 r656: [577..578]
 r657: [573..574]
 r658: [565..566]
 r659: [563..564]
 r660: [563..564]
 r661: [561..562]
 r662: [559..560]
 r663: [553..554]
 r664: [549..550]
 r665: [549..550]
 r666: [545..546]
 r667: [541..542]
 r668: [535..536]
 r669: [531..532]
 r670: [531..532]
 r671: [527..528]
 r672: [519..520]
 r673: [517..518]
 r674: [515..516]
 r675: [515..516]
 r676: [511..512]
 r677: [507..508]
 r678: [505..506]
 r679: [505..506]
 r680: [501..502]
 r681: [497..498]
 r682: [495..496]
 r683: [495..496]
 r684: [491..492]
 r685: [487..488]
 r686: [483..484]
 r687: [483..484]
 r688: [483..484]
 r689: [479..480]
 r690: [475..476]
 r691: [469..470]
 r692: [467..468]
 r693: [463..464]
 r694: [457..458]
 r695: [455..456]
 r696: [455..456]
 r697: [453..454]
 r698: [453..454]
 r699: [451..452]
 r700: [451..452]
 r701: [449..450]
 r702: [443..444]
 r703: [439..440]
 r704: [437..438]
 r705: [433..434]
 r706: [427..428]
 r707: [421..422]
 r708: [417..418]
 r709: [415..416]
 r710: [411..412]
 r711: [407..408]
 r712: [405..406]
 r713: [403..404]
 r714: [397..398]
 r715: [393..394]
 r716: [391..392]
 r717: [387..388]
 r718: [383..384]
 r719: [377..378]
 r720: [373..374]
 r721: [371..372]
 r722: [367..368]
 r723: [363..364]
 r724: [361..362]
 r725: [359..360]
 r726: [353..354]
 r727: [349..350]
 r728: [347..348]
 r729: [343..344]
 r730: [339..340]
 r731: [333..334]
 r732: [329..330]
 r733: [327..328]
 r734: [323..324]
 r735: [319..320]
 r736: [317..318]
 r737: [315..316]
 r738: [315..316]
 r739: [313..314]
 r740: [309..310]
 r741: [309..310]
 r742: [305..306]
 r743: [297..300]
 r744: [295..296]
 r745: [293..294]
 r746: [289..290]
 r747: [289..290]
 r748: [285..286]
 r749: [277..280]
 r750: [275..276]
 r751: [273..274]
 r752: [273..274]
 r753: [271..272]
 r754: [271..272]
 r755: [269..270]
 r756: [269..270]
 r757: [267..268]
 r758: [261..262]
 r759: [257..258]
 r760: [255..256]
 r761: [251..252]
 r762: [245..246]
 r763: [239..240]
 r764: [235..236]
 r765: [233..234]
 r766: [229..230]
 r767: [225..226]
 r768: [219..220]
 r769: [215..216]
 r770: [213..214]
 r771: [209..210]
 r772: [205..206]
 r773: [199..200]
 r774: [195..196]
 r775: [193..194]
 r776: [189..190]
 r777: [185..186]
 r778: [179..180]
 r779: [175..176]
 r780: [173..174]
 r781: [169..170]
 r782: [163..164]
 r783: [157..158]
 r784: [153..154]
 r785: [151..152]
 r786: [147..148]
 r787: [143..144]
 r788: [137..138]
 r789: [133..134]
 r790: [131..132]
 r791: [127..128]
 r792: [123..124]
 r793: [117..118]
 r794: [113..114]
 r795: [111..112]
 r796: [107..108]
 r797: [103..104]
 r798: [97..98]
 r799: [93..94]
 r800: [93..94]
 r801: [89..90]
 r802: [81..82]
 r803: [79..80]
 r804: [73..74]
 r805: [69..70]
 r806: [69..70]
 r807: [65..66]
 r808: [57..58]
 r809: [55..56]
 r810: [49..50]
 r811: [45..46]
 r812: [45..46]
 r813: [41..42]
 r814: [37..38]
 r815: [31..32]
 r816: [27..28]
 r817: [27..28]
 r818: [23..24]
 r819: [15..16]
 r821: [1055..1056]
 r822: [1027..1028]
 r823: [893..894]
 r824: [726..727]
 r825: [619..620]
 r826: [625..626]
 r827: [609..610]
 r828: [567..568]
 r829: [521..522]
 r830: [297..298]
 r831: [277..278]
 r832: [83..84]
 r833: [59..60]
 r834: [17..18]
 r835: [729..730]

********** Assignment #2: **********

	 Assigning to 835 (cl=GENERAL_REGS, orig=229, freq=3, tfirst=835, tfreq=3)...
	   Assign 3 to reload r835 (freq=3)

********** Undoing inheritance #2: **********


********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
  Slot 0 regnos (width = 4):	 823	 829
Changing spilled pseudos to memory in insn #2125
Changing spilled pseudos to memory in insn #466
Changing spilled pseudos to memory in insn #2133
Changing spilled pseudos to memory in insn #1067
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #1067
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1067:  (0) r  (1) m {fix_truncsfsi_sse}
Reusing alternative 4 for insn #2133
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2133:  (0) ?m  (1) rF {*movsf_internal}
Reusing alternative 1 for insn #466
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 466:  (0) r  (1) m {fix_truncsfsi_sse}
Reusing alternative 4 for insn #2125
            Staticly defined alt reject+=6
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2125:  (0) ?m  (1) rF {*movsf_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=240, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=208, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 1967
changing reg in insn 1958
changing reg in insn 1924
changing reg in insn 1885
changing reg in insn 1846
changing reg in insn 1811
changing reg in insn 1776
changing reg in insn 1741
changing reg in insn 1706
changing reg in insn 1660
changing reg in insn 1625
changing reg in insn 1590
changing reg in insn 1555
changing reg in insn 1494
changing reg in insn 1462
changing reg in insn 1429
changing reg in insn 1394
changing reg in insn 1355
changing reg in insn 1320
changing reg in insn 1281
changing reg in insn 1246
changing reg in insn 1161
changing reg in insn 1134
changing reg in insn 1111
changing reg in insn 1088
changing reg in insn 1061
changing reg in insn 1027
changing reg in insn 984
changing reg in insn 950
changing reg in insn 874
changing reg in insn 840
changing reg in insn 680
changing reg in insn 646
changing reg in insn 607
changing reg in insn 573
changing reg in insn 533
changing reg in insn 499
changing reg in insn 460
changing reg in insn 426
changing reg in insn 386
changing reg in insn 352
changing reg in insn 172
changing reg in insn 49
changing reg in insn 1972
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 30
changing reg in insn 26
changing reg in insn 31
changing reg in insn 27
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 54
changing reg in insn 57
changing reg in insn 55
changing reg in insn 71
changing reg in insn 74
changing reg in insn 72
changing reg in insn 88
changing reg in insn 91
changing reg in insn 89
changing reg in insn 105
changing reg in insn 108
changing reg in insn 106
changing reg in insn 122
changing reg in insn 123
changing reg in insn 138
changing reg in insn 139
changing reg in insn 145
changing reg in insn 147
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 155
changing reg in insn 160
changing reg in insn 162
changing reg in insn 161
changing reg in insn 169
changing reg in insn 171
changing reg in insn 170
changing reg in insn 130
changing reg in insn 132
changing reg in insn 131
changing reg in insn 115
changing reg in insn 117
changing reg in insn 116
changing reg in insn 98
changing reg in insn 100
changing reg in insn 99
changing reg in insn 81
changing reg in insn 83
changing reg in insn 82
changing reg in insn 64
changing reg in insn 66
changing reg in insn 65
changing reg in insn 178
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 187
changing reg in insn 189
changing reg in insn 191
changing reg in insn 192
changing reg in insn 208
changing reg in insn 210
changing reg in insn 212
changing reg in insn 213
changing reg in insn 217
changing reg in insn 219
changing reg in insn 221
changing reg in insn 222
changing reg in insn 238
changing reg in insn 240
changing reg in insn 242
changing reg in insn 243
changing reg in insn 258
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 278
changing reg in insn 280
changing reg in insn 282
changing reg in insn 283
changing reg in insn 287
changing reg in insn 288
changing reg in insn 303
changing reg in insn 305
changing reg in insn 307
changing reg in insn 308
changing reg in insn 324
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 339
changing reg in insn 335
changing reg in insn 340
changing reg in insn 336
changing reg in insn 342
changing reg in insn 346
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 358
changing reg in insn 360
changing reg in insn 362
changing reg in insn 363
changing reg in insn 367
changing reg in insn 368
changing reg in insn 368
changing reg in insn 373
changing reg in insn 369
changing reg in insn 374
changing reg in insn 370
changing reg in insn 376
changing reg in insn 380
changing reg in insn 381
changing reg in insn 382
changing reg in insn 383
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 394
changing reg in insn 398
changing reg in insn 400
changing reg in insn 402
changing reg in insn 403
changing reg in insn 407
changing reg in insn 408
changing reg in insn 408
changing reg in insn 413
changing reg in insn 409
changing reg in insn 414
changing reg in insn 410
changing reg in insn 416
changing reg in insn 420
changing reg in insn 421
changing reg in insn 422
changing reg in insn 423
changing reg in insn 432
changing reg in insn 434
changing reg in insn 436
changing reg in insn 437
changing reg in insn 441
changing reg in insn 442
changing reg in insn 442
changing reg in insn 447
changing reg in insn 443
changing reg in insn 448
changing reg in insn 444
changing reg in insn 450
changing reg in insn 454
changing reg in insn 455
changing reg in insn 456
changing reg in insn 457
changing reg in insn 465
changing reg in insn 466
changing reg in insn 468
changing reg in insn 471
changing reg in insn 473
changing reg in insn 475
changing reg in insn 476
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 486
changing reg in insn 482
changing reg in insn 487
changing reg in insn 483
changing reg in insn 489
changing reg in insn 493
changing reg in insn 494
changing reg in insn 495
changing reg in insn 496
changing reg in insn 505
changing reg in insn 507
changing reg in insn 509
changing reg in insn 510
changing reg in insn 514
changing reg in insn 515
changing reg in insn 515
changing reg in insn 520
changing reg in insn 516
changing reg in insn 521
changing reg in insn 517
changing reg in insn 523
changing reg in insn 527
changing reg in insn 528
changing reg in insn 529
changing reg in insn 530
changing reg in insn 538
changing reg in insn 539
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 542
changing reg in insn 545
changing reg in insn 547
changing reg in insn 549
changing reg in insn 550
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 560
changing reg in insn 556
changing reg in insn 561
changing reg in insn 557
changing reg in insn 563
changing reg in insn 567
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 579
changing reg in insn 581
changing reg in insn 583
changing reg in insn 584
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 594
changing reg in insn 590
changing reg in insn 595
changing reg in insn 591
changing reg in insn 597
changing reg in insn 601
changing reg in insn 602
changing reg in insn 603
changing reg in insn 604
changing reg in insn 612
changing reg in insn 613
changing reg in insn 615
changing reg in insn 618
changing reg in insn 620
changing reg in insn 622
changing reg in insn 623
changing reg in insn 627
changing reg in insn 628
changing reg in insn 628
changing reg in insn 633
changing reg in insn 629
changing reg in insn 634
changing reg in insn 630
changing reg in insn 636
changing reg in insn 640
changing reg in insn 641
changing reg in insn 642
changing reg in insn 643
changing reg in insn 652
changing reg in insn 654
changing reg in insn 656
changing reg in insn 657
changing reg in insn 661
changing reg in insn 662
changing reg in insn 662
changing reg in insn 667
changing reg in insn 663
changing reg in insn 668
changing reg in insn 664
changing reg in insn 670
changing reg in insn 674
changing reg in insn 675
changing reg in insn 676
changing reg in insn 677
changing reg in insn 685
changing reg in insn 686
changing reg in insn 686
changing reg in insn 688
changing reg in insn 689
changing reg in insn 690
changing reg in insn 690
changing reg in insn 692
changing reg in insn 694
changing reg in insn 695
changing reg in insn 695
changing reg in insn 697
changing reg in insn 698
changing reg in insn 699
changing reg in insn 700
changing reg in insn 709
changing reg in insn 710
changing reg in insn 720
changing reg in insn 721
changing reg in insn 731
changing reg in insn 732
changing reg in insn 741
changing reg in insn 746
changing reg in insn 746
changing reg in insn 743
changing reg in insn 744
changing reg in insn 744
changing reg in insn 746
changing reg in insn 746
changing reg in insn 747
changing reg in insn 749
changing reg in insn 751
changing reg in insn 752
changing reg in insn 756
changing reg in insn 758
changing reg in insn 765
changing reg in insn 766
changing reg in insn 771
changing reg in insn 772
changing reg in insn 784
changing reg in insn 785
changing reg in insn 787
changing reg in insn 789
changing reg in insn 790
changing reg in insn 790
changing reg in insn 794
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 794
changing reg in insn 794
changing reg in insn 798
changing reg in insn 796
changing reg in insn 797
changing reg in insn 797
changing reg in insn 798
changing reg in insn 798
changing reg in insn 802
changing reg in insn 800
changing reg in insn 801
changing reg in insn 801
changing reg in insn 802
changing reg in insn 802
changing reg in insn 807
changing reg in insn 812
changing reg in insn 814
changing reg in insn 816
changing reg in insn 817
changing reg in insn 821
changing reg in insn 822
changing reg in insn 822
changing reg in insn 827
changing reg in insn 823
changing reg in insn 828
changing reg in insn 824
changing reg in insn 830
changing reg in insn 834
changing reg in insn 835
changing reg in insn 836
changing reg in insn 837
changing reg in insn 846
changing reg in insn 848
changing reg in insn 850
changing reg in insn 851
changing reg in insn 855
changing reg in insn 856
changing reg in insn 856
changing reg in insn 861
changing reg in insn 857
changing reg in insn 862
changing reg in insn 858
changing reg in insn 864
changing reg in insn 868
changing reg in insn 869
changing reg in insn 870
changing reg in insn 871
changing reg in insn 879
changing reg in insn 884
changing reg in insn 881
changing reg in insn 890
changing reg in insn 892
changing reg in insn 893
changing reg in insn 907
changing reg in insn 909
changing reg in insn 910
changing reg in insn 914
changing reg in insn 915
changing reg in insn 915
changing reg in insn 916
changing reg in insn 917
changing reg in insn 919
changing reg in insn 922
changing reg in insn 924
changing reg in insn 926
changing reg in insn 927
changing reg in insn 931
changing reg in insn 932
changing reg in insn 932
changing reg in insn 937
changing reg in insn 933
changing reg in insn 938
changing reg in insn 934
changing reg in insn 940
changing reg in insn 944
changing reg in insn 945
changing reg in insn 946
changing reg in insn 947
changing reg in insn 956
changing reg in insn 958
changing reg in insn 960
changing reg in insn 961
changing reg in insn 965
changing reg in insn 966
changing reg in insn 966
changing reg in insn 971
changing reg in insn 967
changing reg in insn 972
changing reg in insn 968
changing reg in insn 974
changing reg in insn 978
changing reg in insn 979
changing reg in insn 980
changing reg in insn 981
changing reg in insn 989
changing reg in insn 990
changing reg in insn 992
changing reg in insn 999
changing reg in insn 1001
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1009
changing reg in insn 1014
changing reg in insn 1010
changing reg in insn 1015
changing reg in insn 1011
changing reg in insn 1017
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1033
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1043
changing reg in insn 1048
changing reg in insn 1044
changing reg in insn 1049
changing reg in insn 1045
changing reg in insn 1051
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1057
changing reg in insn 1058
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1078
changing reg in insn 1072
changing reg in insn 1079
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1093
changing reg in insn 1101
changing reg in insn 1095
changing reg in insn 1102
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1116
changing reg in insn 1124
changing reg in insn 1118
changing reg in insn 1125
changing reg in insn 1128
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1142
changing reg in insn 1148
changing reg in insn 1143
changing reg in insn 1149
changing reg in insn 1144
changing reg in insn 1151
changing reg in insn 1155
changing reg in insn 1156
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 1172
changing reg in insn 1173
changing reg in insn 1173
changing reg in insn 1180
changing reg in insn 1177
changing reg in insn 1181
changing reg in insn 1179
changing reg in insn 1182
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1191
changing reg in insn 1193
changing reg in insn 1207
changing reg in insn 1209
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1217
changing reg in insn 1223
changing reg in insn 1218
changing reg in insn 1224
changing reg in insn 1219
changing reg in insn 1226
changing reg in insn 1221
changing reg in insn 1227
changing reg in insn 1230
changing reg in insn 1231
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1252
changing reg in insn 1254
changing reg in insn 1256
changing reg in insn 1257
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1262
changing reg in insn 1268
changing reg in insn 1263
changing reg in insn 1269
changing reg in insn 1264
changing reg in insn 1271
changing reg in insn 1266
changing reg in insn 1272
changing reg in insn 1275
changing reg in insn 1276
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1287
changing reg in insn 1289
changing reg in insn 1291
changing reg in insn 1293
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1301
changing reg in insn 1307
changing reg in insn 1302
changing reg in insn 1308
changing reg in insn 1303
changing reg in insn 1310
changing reg in insn 1305
changing reg in insn 1311
changing reg in insn 1314
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1326
changing reg in insn 1328
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1335
changing reg in insn 1336
changing reg in insn 1336
changing reg in insn 1342
changing reg in insn 1337
changing reg in insn 1343
changing reg in insn 1338
changing reg in insn 1345
changing reg in insn 1340
changing reg in insn 1346
changing reg in insn 1349
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1352
changing reg in insn 1361
changing reg in insn 1363
changing reg in insn 1365
changing reg in insn 1367
changing reg in insn 1369
changing reg in insn 1370
changing reg in insn 1374
changing reg in insn 1375
changing reg in insn 1375
changing reg in insn 1381
changing reg in insn 1376
changing reg in insn 1382
changing reg in insn 1377
changing reg in insn 1384
changing reg in insn 1379
changing reg in insn 1385
changing reg in insn 1388
changing reg in insn 1389
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1400
changing reg in insn 1402
changing reg in insn 1404
changing reg in insn 1405
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1410
changing reg in insn 1416
changing reg in insn 1411
changing reg in insn 1417
changing reg in insn 1412
changing reg in insn 1419
changing reg in insn 1414
changing reg in insn 1420
changing reg in insn 1423
changing reg in insn 1424
changing reg in insn 1425
changing reg in insn 1426
changing reg in insn 1435
changing reg in insn 1437
changing reg in insn 1443
changing reg in insn 1444
changing reg in insn 1444
changing reg in insn 1449
changing reg in insn 1445
changing reg in insn 1450
changing reg in insn 1446
changing reg in insn 1452
changing reg in insn 1456
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1459
changing reg in insn 1467
changing reg in insn 1468
changing reg in insn 1468
changing reg in insn 1472
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1476
changing reg in insn 1481
changing reg in insn 1477
changing reg in insn 1482
changing reg in insn 1478
changing reg in insn 1484
changing reg in insn 1488
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1491
changing reg in insn 1499
changing reg in insn 1500
changing reg in insn 1500
changing reg in insn 1504
changing reg in insn 1516
changing reg in insn 1518
changing reg in insn 1520
changing reg in insn 1521
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1526
changing reg in insn 1532
changing reg in insn 1527
changing reg in insn 1533
changing reg in insn 1528
changing reg in insn 1535
changing reg in insn 1530
changing reg in insn 1536
changing reg in insn 1539
changing reg in insn 1540
changing reg in insn 1544
changing reg in insn 1546
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1561
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1570
changing reg in insn 1571
changing reg in insn 1571
changing reg in insn 1577
changing reg in insn 1572
changing reg in insn 1578
changing reg in insn 1573
changing reg in insn 1580
changing reg in insn 1575
changing reg in insn 1581
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1596
changing reg in insn 1598
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1605
changing reg in insn 1606
changing reg in insn 1606
changing reg in insn 1612
changing reg in insn 1607
changing reg in insn 1613
changing reg in insn 1608
changing reg in insn 1615
changing reg in insn 1610
changing reg in insn 1616
changing reg in insn 1619
changing reg in insn 1620
changing reg in insn 1621
changing reg in insn 1622
changing reg in insn 1631
changing reg in insn 1633
changing reg in insn 1635
changing reg in insn 1636
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1641
changing reg in insn 1647
changing reg in insn 1642
changing reg in insn 1648
changing reg in insn 1643
changing reg in insn 1650
changing reg in insn 1645
changing reg in insn 1651
changing reg in insn 1654
changing reg in insn 1655
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1667
changing reg in insn 1669
changing reg in insn 1671
changing reg in insn 1672
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1677
changing reg in insn 1683
changing reg in insn 1678
changing reg in insn 1684
changing reg in insn 1679
changing reg in insn 1686
changing reg in insn 1681
changing reg in insn 1687
changing reg in insn 1690
changing reg in insn 1691
changing reg in insn 1695
changing reg in insn 1697
changing reg in insn 1699
changing reg in insn 1700
changing reg in insn 1712
changing reg in insn 1714
changing reg in insn 1716
changing reg in insn 1717
changing reg in insn 1721
changing reg in insn 1722
changing reg in insn 1722
changing reg in insn 1728
changing reg in insn 1723
changing reg in insn 1729
changing reg in insn 1724
changing reg in insn 1731
changing reg in insn 1726
changing reg in insn 1732
changing reg in insn 1735
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1747
changing reg in insn 1749
changing reg in insn 1751
changing reg in insn 1752
changing reg in insn 1756
changing reg in insn 1757
changing reg in insn 1757
changing reg in insn 1763
changing reg in insn 1758
changing reg in insn 1764
changing reg in insn 1759
changing reg in insn 1766
changing reg in insn 1761
changing reg in insn 1767
changing reg in insn 1770
changing reg in insn 1771
changing reg in insn 1772
changing reg in insn 1773
changing reg in insn 1782
changing reg in insn 1784
changing reg in insn 1786
changing reg in insn 1787
changing reg in insn 1791
changing reg in insn 1792
changing reg in insn 1792
changing reg in insn 1798
changing reg in insn 1793
changing reg in insn 1799
changing reg in insn 1794
changing reg in insn 1801
changing reg in insn 1796
changing reg in insn 1802
changing reg in insn 1805
changing reg in insn 1806
changing reg in insn 1807
changing reg in insn 1808
changing reg in insn 1818
changing reg in insn 1820
changing reg in insn 1822
changing reg in insn 1823
changing reg in insn 1827
changing reg in insn 1828
changing reg in insn 1828
changing reg in insn 1833
changing reg in insn 1829
changing reg in insn 1834
changing reg in insn 1830
changing reg in insn 1836
changing reg in insn 1840
changing reg in insn 1841
changing reg in insn 1842
changing reg in insn 1843
changing reg in insn 1851
changing reg in insn 1852
changing reg in insn 1854
changing reg in insn 1857
changing reg in insn 1859
changing reg in insn 1861
changing reg in insn 1862
changing reg in insn 1866
changing reg in insn 1867
changing reg in insn 1867
changing reg in insn 1872
changing reg in insn 1868
changing reg in insn 1873
changing reg in insn 1869
changing reg in insn 1875
changing reg in insn 1879
changing reg in insn 1880
changing reg in insn 1881
changing reg in insn 1882
changing reg in insn 1890
changing reg in insn 1891
changing reg in insn 1893
changing reg in insn 1896
changing reg in insn 1898
changing reg in insn 1900
changing reg in insn 1901
changing reg in insn 1905
changing reg in insn 1906
changing reg in insn 1906
changing reg in insn 1911
changing reg in insn 1907
changing reg in insn 1912
changing reg in insn 1908
changing reg in insn 1914
changing reg in insn 1918
changing reg in insn 1919
changing reg in insn 1920
changing reg in insn 1921
changing reg in insn 1930
changing reg in insn 1932
changing reg in insn 1934
changing reg in insn 1935
changing reg in insn 1939
changing reg in insn 1940
changing reg in insn 1940
changing reg in insn 1945
changing reg in insn 1941
changing reg in insn 1946
changing reg in insn 1942
changing reg in insn 1948
changing reg in insn 1952
changing reg in insn 1953
changing reg in insn 1954
changing reg in insn 1955
changing reg in insn 1963
changing reg in insn 1964
changing reg in insn 1966
changing reg in insn 1972
changing reg in insn 1976
changing reg in insn 12
changing reg in insn 13
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 34
changing reg in insn 29
changing reg in insn 35
changing reg in insn 38
changing reg in insn 63
changing reg in insn 64
changing reg in insn 80
changing reg in insn 81
changing reg in insn 97
changing reg in insn 98
changing reg in insn 114
changing reg in insn 115
changing reg in insn 129
changing reg in insn 130
changing reg in insn 146
changing reg in insn 147
changing reg in insn 159
changing reg in insn 160
changing reg in insn 168
changing reg in insn 169
changing reg in insn 177
changing reg in insn 178
changing reg in insn 186
changing reg in insn 187
changing reg in insn 207
changing reg in insn 208
changing reg in insn 216
changing reg in insn 217
changing reg in insn 237
changing reg in insn 238
changing reg in insn 257
changing reg in insn 258
changing reg in insn 277
changing reg in insn 278
changing reg in insn 286
changing reg in insn 287
changing reg in insn 302
changing reg in insn 303
changing reg in insn 323
changing reg in insn 324
changing reg in insn 332
changing reg in insn 333
changing reg in insn 337
changing reg in insn 343
changing reg in insn 338
changing reg in insn 344
changing reg in insn 347
changing reg in insn 357
changing reg in insn 358
changing reg in insn 366
changing reg in insn 367
changing reg in insn 371
changing reg in insn 377
changing reg in insn 372
changing reg in insn 378
changing reg in insn 381
changing reg in insn 393
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 397
changing reg in insn 398
changing reg in insn 406
changing reg in insn 407
changing reg in insn 411
changing reg in insn 417
changing reg in insn 412
changing reg in insn 418
changing reg in insn 421
changing reg in insn 431
changing reg in insn 432
changing reg in insn 440
changing reg in insn 441
changing reg in insn 445
changing reg in insn 451
changing reg in insn 446
changing reg in insn 452
changing reg in insn 455
changing reg in insn 467
changing reg in insn 468
changing reg in insn 470
changing reg in insn 471
changing reg in insn 479
changing reg in insn 480
changing reg in insn 484
changing reg in insn 490
changing reg in insn 485
changing reg in insn 491
changing reg in insn 494
changing reg in insn 504
changing reg in insn 505
changing reg in insn 513
changing reg in insn 514
changing reg in insn 518
changing reg in insn 524
changing reg in insn 519
changing reg in insn 525
changing reg in insn 528
changing reg in insn 541
changing reg in insn 542
changing reg in insn 544
changing reg in insn 545
changing reg in insn 553
changing reg in insn 554
changing reg in insn 558
changing reg in insn 564
changing reg in insn 559
changing reg in insn 565
changing reg in insn 568
changing reg in insn 578
changing reg in insn 579
changing reg in insn 587
changing reg in insn 588
changing reg in insn 592
changing reg in insn 598
changing reg in insn 593
changing reg in insn 599
changing reg in insn 602
changing reg in insn 614
changing reg in insn 615
changing reg in insn 617
changing reg in insn 618
changing reg in insn 626
changing reg in insn 627
changing reg in insn 631
changing reg in insn 637
changing reg in insn 632
changing reg in insn 638
changing reg in insn 641
changing reg in insn 651
changing reg in insn 652
changing reg in insn 660
changing reg in insn 661
changing reg in insn 665
changing reg in insn 671
changing reg in insn 666
changing reg in insn 672
changing reg in insn 675
changing reg in insn 687
changing reg in insn 688
changing reg in insn 691
changing reg in insn 692
changing reg in insn 693
changing reg in insn 694
changing reg in insn 696
changing reg in insn 697
changing reg in insn 704
changing reg in insn 705
changing reg in insn 713
changing reg in insn 714
changing reg in insn 724
changing reg in insn 725
changing reg in insn 735
changing reg in insn 736
changing reg in insn 740
changing reg in insn 741
changing reg in insn 742
changing reg in insn 743
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 749
changing reg in insn 750
changing reg in insn 751
changing reg in insn 757
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 764
changing reg in insn 765
changing reg in insn 770
changing reg in insn 771
changing reg in insn 776
changing reg in insn 779
changing reg in insn 781
changing reg in insn 782
changing reg in insn 786
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 791
changing reg in insn 792
changing reg in insn 795
changing reg in insn 796
changing reg in insn 799
changing reg in insn 800
changing reg in insn 807
changing reg in insn 808
changing reg in insn 806
changing reg in insn 809
changing reg in insn 810
changing reg in insn 811
changing reg in insn 812
changing reg in insn 820
changing reg in insn 821
changing reg in insn 825
changing reg in insn 831
changing reg in insn 826
changing reg in insn 832
changing reg in insn 835
changing reg in insn 845
changing reg in insn 846
changing reg in insn 854
changing reg in insn 855
changing reg in insn 859
changing reg in insn 865
changing reg in insn 860
changing reg in insn 866
changing reg in insn 869
changing reg in insn 880
changing reg in insn 881
changing reg in insn 883
changing reg in insn 884
changing reg in insn 891
changing reg in insn 902
changing reg in insn 903
changing reg in insn 908
changing reg in insn 913
changing reg in insn 914
changing reg in insn 918
changing reg in insn 919
changing reg in insn 921
changing reg in insn 922
changing reg in insn 930
changing reg in insn 931
changing reg in insn 935
changing reg in insn 941
changing reg in insn 936
changing reg in insn 942
changing reg in insn 945
changing reg in insn 955
changing reg in insn 956
changing reg in insn 964
changing reg in insn 965
changing reg in insn 969
changing reg in insn 975
changing reg in insn 970
changing reg in insn 976
changing reg in insn 979
changing reg in insn 991
changing reg in insn 992
changing reg in insn 993
changing reg in insn 995
changing reg in insn 994
changing reg in insn 995
changing reg in insn 996
changing reg in insn 997
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1012
changing reg in insn 1018
changing reg in insn 1013
changing reg in insn 1019
changing reg in insn 1022
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1046
changing reg in insn 1052
changing reg in insn 1047
changing reg in insn 1053
changing reg in insn 1056
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1077
changing reg in insn 1074
changing reg in insn 1080
changing reg in insn 1083
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1100
changing reg in insn 1097
changing reg in insn 1103
changing reg in insn 1106
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1123
changing reg in insn 1120
changing reg in insn 1126
changing reg in insn 1129
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1145
changing reg in insn 1150
changing reg in insn 1146
changing reg in insn 1152
changing reg in insn 1147
changing reg in insn 1153
changing reg in insn 1156
changing reg in insn 1166
changing reg in insn 1167
changing reg in insn 1174
changing reg in insn 1175
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1195
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1199
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1202
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1228
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1265
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1273
changing reg in insn 1276
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1306
changing reg in insn 1312
changing reg in insn 1315
changing reg in insn 1325
changing reg in insn 1326
changing reg in insn 1334
changing reg in insn 1335
changing reg in insn 1339
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1347
changing reg in insn 1350
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1362
changing reg in insn 1363
changing reg in insn 1364
changing reg in insn 1365
changing reg in insn 1373
changing reg in insn 1374
changing reg in insn 1378
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1386
changing reg in insn 1389
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 1413
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1421
changing reg in insn 1424
changing reg in insn 1434
changing reg in insn 1435
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1438
changing reg in insn 1440
changing reg in insn 1439
changing reg in insn 1440
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1447
changing reg in insn 1453
changing reg in insn 1448
changing reg in insn 1454
changing reg in insn 1457
changing reg in insn 1469
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1472
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1479
changing reg in insn 1485
changing reg in insn 1480
changing reg in insn 1486
changing reg in insn 1489
changing reg in insn 1501
changing reg in insn 1502
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1505
changing reg in insn 1507
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1510
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1513
changing reg in insn 1512
changing reg in insn 1513
changing reg in insn 1515
changing reg in insn 1516
changing reg in insn 1524
changing reg in insn 1525
changing reg in insn 1529
changing reg in insn 1530
changing reg in insn 1531
changing reg in insn 1537
changing reg in insn 1543
changing reg in insn 1544
changing reg in insn 1560
changing reg in insn 1561
changing reg in insn 1569
changing reg in insn 1570
changing reg in insn 1574
changing reg in insn 1575
changing reg in insn 1576
changing reg in insn 1582
changing reg in insn 1585
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1609
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1617
changing reg in insn 1620
changing reg in insn 1630
changing reg in insn 1631
changing reg in insn 1639
changing reg in insn 1640
changing reg in insn 1644
changing reg in insn 1645
changing reg in insn 1646
changing reg in insn 1652
changing reg in insn 1655
changing reg in insn 1666
changing reg in insn 1667
changing reg in insn 1675
changing reg in insn 1676
changing reg in insn 1680
changing reg in insn 1681
changing reg in insn 1682
changing reg in insn 1688
changing reg in insn 1694
changing reg in insn 1695
changing reg in insn 1711
changing reg in insn 1712
changing reg in insn 1720
changing reg in insn 1721
changing reg in insn 1725
changing reg in insn 1726
changing reg in insn 1727
changing reg in insn 1733
changing reg in insn 1736
changing reg in insn 1746
changing reg in insn 1747
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1760
changing reg in insn 1761
changing reg in insn 1762
changing reg in insn 1768
changing reg in insn 1771
changing reg in insn 1781
changing reg in insn 1782
changing reg in insn 1790
changing reg in insn 1791
changing reg in insn 1795
changing reg in insn 1796
changing reg in insn 1797
changing reg in insn 1803
changing reg in insn 1806
changing reg in insn 1817
changing reg in insn 1818
changing reg in insn 1826
changing reg in insn 1827
changing reg in insn 1831
changing reg in insn 1837
changing reg in insn 1832
changing reg in insn 1838
changing reg in insn 1841
changing reg in insn 1853
changing reg in insn 1854
changing reg in insn 1856
changing reg in insn 1857
changing reg in insn 1865
changing reg in insn 1866
changing reg in insn 1870
changing reg in insn 1876
changing reg in insn 1871
changing reg in insn 1877
changing reg in insn 1880
changing reg in insn 1892
changing reg in insn 1893
changing reg in insn 1895
changing reg in insn 1896
changing reg in insn 1904
changing reg in insn 1905
changing reg in insn 1909
changing reg in insn 1915
changing reg in insn 1910
changing reg in insn 1916
changing reg in insn 1919
changing reg in insn 1929
changing reg in insn 1930
changing reg in insn 1938
changing reg in insn 1939
changing reg in insn 1943
changing reg in insn 1949
changing reg in insn 1944
changing reg in insn 1950
changing reg in insn 1953
changing reg in insn 1965
changing reg in insn 1966
deleting insn with uid = 34.
deleting insn with uid = 45.
deleting insn with uid = 155.
deleting insn with uid = 343.
deleting insn with uid = 377.
deleting insn with uid = 417.
deleting insn with uid = 451.
deleting insn with uid = 490.
deleting insn with uid = 524.
deleting insn with uid = 564.
deleting insn with uid = 598.
deleting insn with uid = 637.
deleting insn with uid = 671.
deleting insn with uid = 2142.
deleting insn with uid = 831.
deleting insn with uid = 865.
deleting insn with uid = 2126.
deleting insn with uid = 2128.
deleting insn with uid = 2130.
deleting insn with uid = 941.
deleting insn with uid = 975.
deleting insn with uid = 1018.
deleting insn with uid = 1052.
deleting insn with uid = 1079.
deleting insn with uid = 1102.
deleting insn with uid = 1125.
deleting insn with uid = 1149.
deleting insn with uid = 1152.
deleting insn with uid = 1227.
deleting insn with uid = 1272.
deleting insn with uid = 1311.
deleting insn with uid = 1346.
deleting insn with uid = 1385.
deleting insn with uid = 1420.
deleting insn with uid = 1453.
deleting insn with uid = 2134.
deleting insn with uid = 1485.
deleting insn with uid = 2136.
deleting insn with uid = 1536.
deleting insn with uid = 1581.
deleting insn with uid = 1616.
deleting insn with uid = 1651.
deleting insn with uid = 1687.
deleting insn with uid = 1732.
deleting insn with uid = 1767.
deleting insn with uid = 1802.
deleting insn with uid = 1837.
deleting insn with uid = 1876.
deleting insn with uid = 1915.
deleting insn with uid = 1949.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 261.
verify found no changes in insn with uid = 281.
verify found no changes in insn with uid = 291.
verify found no changes in insn with uid = 306.
verify found no changes in insn with uid = 319.
verify found no changes in insn with uid = 327.
verify found no changes in insn with uid = 345.
verify found no changes in insn with uid = 361.
verify found no changes in insn with uid = 379.
verify found no changes in insn with uid = 401.
verify found no changes in insn with uid = 419.
verify found no changes in insn with uid = 435.
verify found no changes in insn with uid = 453.
verify found no changes in insn with uid = 474.
verify found no changes in insn with uid = 492.
verify found no changes in insn with uid = 508.
verify found no changes in insn with uid = 526.
verify found no changes in insn with uid = 548.
verify found no changes in insn with uid = 566.
verify found no changes in insn with uid = 582.
verify found no changes in insn with uid = 600.
verify found no changes in insn with uid = 621.
verify found no changes in insn with uid = 639.
verify found no changes in insn with uid = 655.
verify found no changes in insn with uid = 673.
verify found no changes in insn with uid = 703.
verify found no changes in insn with uid = 708.
verify found no changes in insn with uid = 755.
verify found no changes in insn with uid = 763.
verify found no changes in insn with uid = 769.
verify found no changes in insn with uid = 775.
verify found no changes in insn with uid = 780.
verify found no changes in insn with uid = 783.
verify found no changes in insn with uid = 815.
verify found no changes in insn with uid = 833.
verify found no changes in insn with uid = 849.
verify found no changes in insn with uid = 867.
verify found no changes in insn with uid = 899.
verify found no changes in insn with uid = 901.
verify found no changes in insn with uid = 906.
verify found no changes in insn with uid = 925.
verify found no changes in insn with uid = 943.
verify found no changes in insn with uid = 959.
verify found no changes in insn with uid = 977.
verify found no changes in insn with uid = 1002.
verify found no changes in insn with uid = 1020.
verify found no changes in insn with uid = 1036.
verify found no changes in insn with uid = 1054.
verify found no changes in insn with uid = 1081.
verify found no changes in insn with uid = 1104.
verify found no changes in insn with uid = 1127.
verify found no changes in insn with uid = 1154.
verify found no changes in insn with uid = 1168.
verify found no changes in insn with uid = 1171.
verify found no changes in insn with uid = 1176.
verify found no changes in insn with uid = 1183.
verify found no changes in insn with uid = 1186.
verify found no changes in insn with uid = 1189.
verify found no changes in insn with uid = 1210.
verify found no changes in insn with uid = 1229.
verify found no changes in insn with uid = 1238.
verify found no changes in insn with uid = 1255.
verify found no changes in insn with uid = 1274.
verify found no changes in insn with uid = 1294.
verify found no changes in insn with uid = 1313.
verify found no changes in insn with uid = 1329.
verify found no changes in insn with uid = 1348.
verify found no changes in insn with uid = 1368.
verify found no changes in insn with uid = 1387.
verify found no changes in insn with uid = 1403.
verify found no changes in insn with uid = 1422.
verify found no changes in insn with uid = 1455.
verify found no changes in insn with uid = 1487.
verify found no changes in insn with uid = 1519.
verify found no changes in insn with uid = 1538.
verify found no changes in insn with uid = 1547.
verify found no changes in insn with uid = 1564.
verify found no changes in insn with uid = 1583.
verify found no changes in insn with uid = 1599.
verify found no changes in insn with uid = 1618.
verify found no changes in insn with uid = 1634.
verify found no changes in insn with uid = 1653.
verify found no changes in insn with uid = 1670.
verify found no changes in insn with uid = 1689.
verify found no changes in insn with uid = 1698.
verify found no changes in insn with uid = 1715.
verify found no changes in insn with uid = 1734.
verify found no changes in insn with uid = 1750.
verify found no changes in insn with uid = 1769.
verify found no changes in insn with uid = 1785.
verify found no changes in insn with uid = 1804.
verify found no changes in insn with uid = 1821.
verify found no changes in insn with uid = 1839.
verify found no changes in insn with uid = 1860.
verify found no changes in insn with uid = 1878.
verify found no changes in insn with uid = 1899.
verify found no changes in insn with uid = 1917.
verify found no changes in insn with uid = 1933.
verify found no changes in insn with uid = 1951.


int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 37[r8] 38[r9]
;;  ref usage 	r0={668d,619u} r1={230d,122u,1e} r2={188d,81u} r3={5d,6u} r4={203d,96u} r5={256d,149u} r6={1d,528u} r7={1d,274u} r8={107d} r9={107d} r10={107d} r11={107d} r12={107d} r13={107d} r14={107d} r15={107d} r17={359d,102u} r18={107d} r19={107d} r20={1d,1u,72e} r21={130d,27u} r22={116d,8u} r23={109d,1u} r24={109d,1u} r25={109d,1u} r26={109d,1u} r27={108d} r28={108d} r29={107d} r30={107d} r31={107d} r32={107d} r33={107d} r34={107d} r35={107d} r36={107d} r37={149d,42u} r38={149d,42u} r39={107d} r40={107d} r45={107d} r46={107d} r47={107d} r48={107d} r49={107d} r50={107d} r51={107d} r52={107d} r53={107d} r54={107d} r55={107d} r56={107d} r57={107d} r58={107d} r59={107d} r60={107d} r61={107d} r62={107d} r63={107d} r64={107d} r65={107d} r66={107d} r67={107d} r68={107d} r69={107d} r70={107d} r71={107d} r72={107d} r73={107d} r74={107d} r75={107d} r76={107d} 
;;    total ref usage 10846{8672d,2101u,73e} in 1630{1523 regular + 107 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87 88 89 524 525 526 527 528
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])
        (reg:DI 1 dx [ in_file ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])
        (reg:DI 2 cx [ swap_bytes ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])
        (reg:DI 37 r8 [ infile_struct ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])
        (reg:DI 38 r9 [ main_header ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 date_stamp+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:29 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 0 ax [524])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:30 129 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])
        (reg:SF 0 ax [524])) ge2fitman_read_procpar.cpp:30 129 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 calc_filesize+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:31 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:33 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:35 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:36 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:37 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:38 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:40 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 ver+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:53 90 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 0 ax [525])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:63 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:QI 0 ax [orig:84 D.24954 ] [84])
        (mem:QI (reg/f:DI 0 ax [525]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:63 93 {*movqi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:SI 1 dx [orig:85 D.24953 ] [85])
        (zero_extend:SI (reg:QI 0 ax [orig:84 D.24954 ] [84]))) ge2fitman_read_procpar.cpp:63 138 {*zero_extendqisi2}
     (nil))
(insn 26 25 27 2 (set (reg:SI 2 cx [orig:86 D.24953 ] [86])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 5 di [orig:87 D.24953 ] [87])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 4 si [526])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:63 221 {*adddi_1}
     (nil))
(insn 29 28 30 2 (set (reg:DI 0 ax [527])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:63 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:85 D.24953 ] [85])) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:86 D.24953 ] [86])) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:63 89 {*movdi_internal}
     (nil))
(insn 33 32 35 2 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:87 D.24953 ] [87])) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 35 33 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [527])) ge2fitman_read_procpar.cpp:63 89 {*movdi_internal}
     (nil))
(call_insn 36 35 37 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:63 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 37 36 38 2 (set (reg:SI 0 ax [orig:88 D.24953 ] [88])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:SI 0 ax [528])
                (lshiftrt:SI (reg:SI 0 ax [orig:88 D.24953 ] [88])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:61 529 {*lshrsi3_1}
     (nil))
(insn 39 38 40 2 (set (reg:QI 0 ax [orig:89 D.24954 ] [89])
        (reg:QI 0 ax [528])) ge2fitman_read_procpar.cpp:61 93 {*movqi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:89 D.24954 ] [89])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:61 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) ge2fitman_read_procpar.cpp:61 596 {*jcc_1}
     (nil)
 -> 52)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 90 91
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg:SF 21 xmm0 [orig:90 D.24955 ] [90])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:65 129 {*movsf_internal}
     (nil))
(insn 44 43 46 3 (set (reg:DF 21 xmm0 [orig:91 D.24956 ] [91])
        (float_extend:DF (reg:SF 21 xmm0 [orig:90 D.24955 ] [90]))) ge2fitman_read_procpar.cpp:65 152 {*extendsfdf2_sse}
     (nil))
(insn 46 44 47 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b9523c58000 *.LC1>)) ge2fitman_read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 47 46 48 3 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:65 93 {*movqi_internal}
     (nil))
(call_insn 48 47 49 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:65 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 49 48 2008 3 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:67 90 {*movsi_internal}
     (nil))
(jump_insn 2008 49 2009 3 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:67 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2009 2008 52)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 52 2009 53 4 2 "" [1 uses])
(note 53 52 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 4 (set (reg:SF 21 xmm0 [orig:92 D.24955 ] [92])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:71 129 {*movsf_internal}
     (nil))
(insn 55 54 56 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:92 D.24955 ] [92])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:71 55 {*cmpiusf_sse}
     (nil))
(jump_insn 56 55 1979 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) ge2fitman_read_procpar.cpp:71 596 {*jcc_1}
     (nil)
 -> 69)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(note 1979 56 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 57 1979 58 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:92 D.24955 ] [92])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:71 55 {*cmpiusf_sse}
     (nil))
(jump_insn 58 57 62 5 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) ge2fitman_read_procpar.cpp:71 596 {*jcc_1}
     (nil)
 -> 69)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 529
(note 62 58 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 6 (set (reg/f:DI 0 ax [529])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:73 89 {*movdi_internal}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 0 ax [orig:107 D.24957 ] [107])
                (plus:DI (reg/f:DI 0 ax [529])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:73 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 65 64 66 6 (set (mem:HI (reg/f:DI 0 ax [orig:107 D.24957 ] [107]) [0 MEM[(void *)_51]+0 S2 A8])
        (const_int 14384 [0x3830])) ge2fitman_read_procpar.cpp:73 92 {*movhi_internal}
     (nil))
(insn 66 65 2010 6 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:107 D.24957 ] [107])
                (const_int 2 [0x2])) [0 MEM[(void *)_51]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:73 93 {*movqi_internal}
     (nil))
(jump_insn 2010 66 2011 6 (set (pc)
        (label_ref 175)) 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2011 2010 69)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(code_label 69 2011 70 7 4 "" [2 uses])
(note 70 69 71 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 7 (set (reg:SF 21 xmm0 [orig:93 D.24955 ] [93])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:74 129 {*movsf_internal}
     (nil))
(insn 72 71 73 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:93 D.24955 ] [93])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:74 55 {*cmpiusf_sse}
     (nil))
(jump_insn 73 72 1982 7 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) ge2fitman_read_procpar.cpp:74 596 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       10
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
(note 1982 73 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 1982 75 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:93 D.24955 ] [93])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:74 55 {*cmpiusf_sse}
     (nil))
(jump_insn 75 74 79 8 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) ge2fitman_read_procpar.cpp:74 596 {*jcc_1}
     (nil)
 -> 86)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 106 530
(note 79 75 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (set (reg/f:DI 0 ax [530])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:76 89 {*movdi_internal}
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg/f:DI 0 ax [orig:106 D.24957 ] [106])
                (plus:DI (reg/f:DI 0 ax [530])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:76 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 82 81 83 9 (set (mem:HI (reg/f:DI 0 ax [orig:106 D.24957 ] [106]) [0 MEM[(void *)_50]+0 S2 A8])
        (const_int 14640 [0x3930])) ge2fitman_read_procpar.cpp:76 92 {*movhi_internal}
     (nil))
(insn 83 82 2012 9 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:106 D.24957 ] [106])
                (const_int 2 [0x2])) [0 MEM[(void *)_50]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:76 93 {*movqi_internal}
     (nil))
(jump_insn 2012 83 2013 9 (set (pc)
        (label_ref 175)) 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2013 2012 86)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94
(code_label 86 2013 87 10 7 "" [2 uses])
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 10 (set (reg:SF 21 xmm0 [orig:94 D.24955 ] [94])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:77 129 {*movsf_internal}
     (nil))
(insn 89 88 90 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:94 D.24955 ] [94])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:77 55 {*cmpiusf_sse}
     (nil))
(jump_insn 90 89 1985 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) ge2fitman_read_procpar.cpp:77 596 {*jcc_1}
     (nil)
 -> 103)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 17 [flags]
(note 1985 90 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 1985 92 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:94 D.24955 ] [94])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:77 55 {*cmpiusf_sse}
     (nil))
(jump_insn 92 91 96 11 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) ge2fitman_read_procpar.cpp:77 596 {*jcc_1}
     (nil)
 -> 103)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 105 531
(note 96 92 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 12 (set (reg/f:DI 0 ax [531])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg/f:DI 0 ax [orig:105 D.24957 ] [105])
                (plus:DI (reg/f:DI 0 ax [531])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:79 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 99 98 100 12 (set (mem:HI (reg/f:DI 0 ax [orig:105 D.24957 ] [105]) [0 MEM[(void *)_49]+0 S2 A8])
        (const_int 12593 [0x3131])) ge2fitman_read_procpar.cpp:79 92 {*movhi_internal}
     (nil))
(insn 100 99 2014 12 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:105 D.24957 ] [105])
                (const_int 2 [0x2])) [0 MEM[(void *)_49]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:79 93 {*movqi_internal}
     (nil))
(jump_insn 2014 100 2015 12 (set (pc)
        (label_ref 175)) 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2015 2014 103)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95
(code_label 103 2015 104 13 9 "" [2 uses])
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 13 (set (reg:SF 21 xmm0 [orig:95 D.24955 ] [95])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:80 129 {*movsf_internal}
     (nil))
(insn 106 105 107 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:95 D.24955 ] [95])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:80 55 {*cmpiusf_sse}
     (nil))
(jump_insn 107 106 1988 13 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) ge2fitman_read_procpar.cpp:80 596 {*jcc_1}
     (nil)
 -> 120)
;;  succ:       16
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 17 [flags]
(note 1988 107 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 1988 109 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:95 D.24955 ] [95])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:80 55 {*cmpiusf_sse}
     (nil))
(jump_insn 109 108 113 14 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 120)
            (pc))) ge2fitman_read_procpar.cpp:80 596 {*jcc_1}
     (nil)
 -> 120)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 532
(note 113 109 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 15 (set (reg/f:DI 0 ax [532])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:82 89 {*movdi_internal}
     (nil))
(insn 115 114 116 15 (parallel [
            (set (reg/f:DI 0 ax [orig:104 D.24957 ] [104])
                (plus:DI (reg/f:DI 0 ax [532])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:82 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 116 115 117 15 (set (mem:HI (reg/f:DI 0 ax [orig:104 D.24957 ] [104]) [0 MEM[(void *)_48]+0 S2 A8])
        (const_int 12849 [0x3231])) ge2fitman_read_procpar.cpp:82 92 {*movhi_internal}
     (nil))
(insn 117 116 2016 15 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:104 D.24957 ] [104])
                (const_int 2 [0x2])) [0 MEM[(void *)_48]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:82 93 {*movqi_internal}
     (nil))
(jump_insn 2016 117 2017 15 (set (pc)
        (label_ref 175)) 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2017 2016 120)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96
(code_label 120 2017 121 16 11 "" [2 uses])
(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg:SF 21 xmm0 [orig:96 D.24955 ] [96])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:85 129 {*movsf_internal}
     (nil))
(insn 123 122 124 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:96 D.24955 ] [96])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:85 55 {*cmpiusf_sse}
     (nil))
(jump_insn 124 123 128 16 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2018)
            (pc))) ge2fitman_read_procpar.cpp:85 596 {*jcc_1}
     (nil)
 -> 2018)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 533
(note 128 124 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 17 (set (reg/f:DI 0 ax [533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 130 129 131 17 (parallel [
            (set (reg/f:DI 0 ax [orig:103 D.24957 ] [103])
                (plus:DI (reg/f:DI 0 ax [533])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:89 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 131 130 2123 17 (set (reg:DI 3 bx [821])
        (const_int 3472334893297315890 [0x30303630302e3032])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 2123 131 132 17 (set (mem:DI (reg/f:DI 0 ax [orig:103 D.24957 ] [103]) [0 MEM[(void *)_46]+0 S8 A8])
        (reg:DI 3 bx [821])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 132 2123 133 17 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:103 D.24957 ] [103])
                (const_int 8 [0x8])) [0 MEM[(void *)_46]+8 S2 A8])
        (const_int 49 [0x31])) ge2fitman_read_procpar.cpp:89 92 {*movhi_internal}
     (nil))
(insn 133 132 2019 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 ver+0 S4 A32])
        (const_int 20 [0x14])) ge2fitman_read_procpar.cpp:90 90 {*movsi_internal}
     (nil))
(jump_insn 2019 133 2020 17 (set (pc)
        (label_ref 175)) 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2020 2019 2018)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97
(code_label 2018 2020 137 18 84 "" [1 uses])
(note 137 2018 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 18 (set (reg:SF 21 xmm0 [orig:97 D.24955 ] [97])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (nil))
(insn 139 138 140 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:97 D.24955 ] [97])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:92 55 {*cmpiusf_sse}
     (nil))
(jump_insn 140 139 144 18 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 166)
            (pc))) ge2fitman_read_procpar.cpp:92 596 {*jcc_1}
     (nil)
 -> 166)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98 534
(note 144 140 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (set (reg:SF 22 xmm1 [orig:98 D.24955 ] [98])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (nil))
(insn 146 145 147 19 (set (reg:SF 21 xmm0 [534])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
(insn 147 146 148 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [534])
            (reg:SF 22 xmm1 [orig:98 D.24955 ] [98]))) ge2fitman_read_procpar.cpp:92 55 {*cmpiusf_sse}
     (nil))
(jump_insn 148 147 152 19 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 166)
            (pc))) ge2fitman_read_procpar.cpp:92 596 {*jcc_1}
     (nil)
 -> 166)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 99 100 101 535
(note 152 148 153 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 20 (set (reg:SF 21 xmm0 [orig:99 D.24955 ] [99])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:95 129 {*movsf_internal}
     (nil))
(insn 154 153 156 20 (set (reg:DF 21 xmm0 [orig:100 D.24956 ] [100])
        (float_extend:DF (reg:SF 21 xmm0 [orig:99 D.24955 ] [99]))) ge2fitman_read_procpar.cpp:95 152 {*extendsfdf2_sse}
     (nil))
(insn 156 154 157 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9523c58098 *.LC8>)) ge2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (nil))
(insn 157 156 158 20 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:95 93 {*movqi_internal}
     (nil))
(call_insn 158 157 159 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:95 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 159 158 160 20 (set (reg/f:DI 0 ax [535])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg/f:DI 0 ax [orig:101 D.24957 ] [101])
                (plus:DI (reg/f:DI 0 ax [535])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:96 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 161 160 2124 20 (set (reg:DI 3 bx [822])
        (const_int 3472334893297315890 [0x30303630302e3032])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 2124 161 162 20 (set (mem:DI (reg/f:DI 0 ax [orig:101 D.24957 ] [101]) [0 MEM[(void *)_42]+0 S8 A8])
        (reg:DI 3 bx [822])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 162 2124 163 20 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:101 D.24957 ] [101])
                (const_int 8 [0x8])) [0 MEM[(void *)_42]+8 S2 A8])
        (const_int 49 [0x31])) ge2fitman_read_procpar.cpp:96 92 {*movhi_internal}
     (nil))
(insn 163 162 2021 20 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 ver+0 S4 A32])
        (const_int 14 [0xe])) ge2fitman_read_procpar.cpp:97 90 {*movsi_internal}
     (nil))
(jump_insn 2021 163 2022 20 (set (pc)
        (label_ref 175)) ge2fitman_read_procpar.cpp:97 636 {jump}
     (nil)
 -> 175)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2022 2021 166)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;;              19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 102 536
(code_label 166 2022 167 21 15 "" [2 uses])
(note 167 166 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 21 (set (reg/f:DI 0 ax [536])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 169 168 170 21 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.24957 ] [102])
                (plus:DI (reg/f:DI 0 ax [536])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:100 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 170 169 171 21 (set (mem:HI (reg/f:DI 0 ax [orig:102 D.24957 ] [102]) [0 MEM[(void *)_44]+0 S2 A8])
        (const_int 16718 [0x414e])) ge2fitman_read_procpar.cpp:100 92 {*movhi_internal}
     (nil))
(insn 171 170 172 21 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:102 D.24957 ] [102])
                (const_int 2 [0x2])) [0 MEM[(void *)_44]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:100 93 {*movqi_internal}
     (nil))
(insn 172 171 2023 21 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -2 [0xfffffffffffffffe])) ge2fitman_read_procpar.cpp:101 90 {*movsi_internal}
     (nil))
(jump_insn 2023 172 2024 21 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:101 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2024 2023 175)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%] 
;;              6 [100.0%] 
;;              9 [100.0%] 
;;              12 [100.0%] 
;;              15 [100.0%] 
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 108 109 537
(code_label 175 2024 176 22 6 "" [6 uses])
(note 176 175 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 22 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 178 177 179 22 (parallel [
            (set (reg/f:DI 0 ax [orig:108 D.24957 ] [108])
                (plus:DI (reg/f:DI 0 ax [537])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:106 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 179 178 180 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b9523c58130 *.LC9>)) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 180 179 181 22 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:108 D.24957 ] [108])) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(call_insn/i 181 180 182 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 182 181 183 22 (set (reg:SI 0 ax [orig:109 D.24953 ] [109])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:106 90 {*movsi_internal}
     (nil))
(insn 183 182 184 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 D.24953 ] [109])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 184 183 185 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) ge2fitman_read_procpar.cpp:106 596 {*jcc_1}
     (nil)
 -> 194)
;;  succ:       24
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 110 111 538
(note 185 184 186 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 23 (set (reg/f:DI 0 ax [538])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 187 186 188 23 (parallel [
            (set (reg/f:DI 0 ax [orig:110 D.24957 ] [110])
                (plus:DI (reg/f:DI 0 ax [538])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:107 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 188 187 189 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b9523c581c8 *.LC10>)) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 189 188 190 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:110 D.24957 ] [110])) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(call_insn/i 190 189 191 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:107 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 191 190 192 23 (set (reg:SI 0 ax [orig:111 D.24953 ] [111])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:107 90 {*movsi_internal}
     (nil))
(insn 192 191 193 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 D.24953 ] [111])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 193 192 194 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) ge2fitman_read_procpar.cpp:106 596 {*jcc_1}
     (nil)
 -> 205)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 194 193 195 24 18 "" [1 uses])
(note 195 194 196 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 39984 [0x9c30])) ge2fitman_read_procpar.cpp:108 89 {*movdi_internal}
     (nil))
(insn 197 196 198 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 36882 [0x9012])) ge2fitman_read_procpar.cpp:109 89 {*movdi_internal}
     (nil))
(insn 198 197 199 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 36973 [0x906d])) ge2fitman_read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 199 198 200 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 37084 [0x90dc])) ge2fitman_read_procpar.cpp:111 89 {*movdi_internal}
     (nil))
(insn 200 199 201 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 39148 [0x98ec])) ge2fitman_read_procpar.cpp:112 89 {*movdi_internal}
     (nil))
(insn 201 200 202 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 39140 [0x98e4])) ge2fitman_read_procpar.cpp:113 89 {*movdi_internal}
     (nil))
(insn 202 201 2025 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 39260 [0x995c])) ge2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (nil))
(jump_insn 2025 202 2026 24 (set (pc)
        (label_ref 320)) ge2fitman_read_procpar.cpp:114 636 {jump}
     (nil)
 -> 320)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2026 2025 205)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 112 113 539
(code_label 205 2026 206 25 19 "" [1 uses])
(note 206 205 207 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 25 (set (reg/f:DI 0 ax [539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 208 207 209 25 (parallel [
            (set (reg/f:DI 0 ax [orig:112 D.24957 ] [112])
                (plus:DI (reg/f:DI 0 ax [539])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:115 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 209 208 210 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b9523c58260 *.LC11>)) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 210 209 211 25 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 D.24957 ] [112])) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn/i 211 210 212 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 212 211 213 25 (set (reg:SI 0 ax [orig:113 D.24953 ] [113])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:115 90 {*movsi_internal}
     (nil))
(insn 213 212 214 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:113 D.24953 ] [113])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 214 213 215 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) ge2fitman_read_procpar.cpp:115 596 {*jcc_1}
     (nil)
 -> 224)
;;  succ:       27
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 114 115 540
(note 215 214 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 26 (set (reg/f:DI 0 ax [540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(insn 217 216 218 26 (parallel [
            (set (reg/f:DI 0 ax [orig:114 D.24957 ] [114])
                (plus:DI (reg/f:DI 0 ax [540])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:116 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 218 217 219 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b9523c582f8 *.LC12>)) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(insn 219 218 220 26 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:114 D.24957 ] [114])) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(call_insn/i 220 219 221 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:116 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 221 220 222 26 (set (reg:SI 0 ax [orig:115 D.24953 ] [115])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:116 90 {*movsi_internal}
     (nil))
(insn 222 221 223 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:115 D.24953 ] [115])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 223 222 224 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) ge2fitman_read_procpar.cpp:115 596 {*jcc_1}
     (nil)
 -> 235)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 224 223 225 27 21 "" [1 uses])
(note 225 224 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 60464 [0xec30])) ge2fitman_read_procpar.cpp:117 89 {*movdi_internal}
     (nil))
(insn 227 226 228 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 57362 [0xe012])) ge2fitman_read_procpar.cpp:118 89 {*movdi_internal}
     (nil))
(insn 228 227 229 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 57453 [0xe06d])) ge2fitman_read_procpar.cpp:119 89 {*movdi_internal}
     (nil))
(insn 229 228 230 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 57564 [0xe0dc])) ge2fitman_read_procpar.cpp:120 89 {*movdi_internal}
     (nil))
(insn 230 229 231 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 59628 [0xe8ec])) ge2fitman_read_procpar.cpp:121 89 {*movdi_internal}
     (nil))
(insn 231 230 232 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 59620 [0xe8e4])) ge2fitman_read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 232 231 2027 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 59740 [0xe95c])) ge2fitman_read_procpar.cpp:123 89 {*movdi_internal}
     (nil))
(jump_insn 2027 232 2028 27 (set (pc)
        (label_ref 320)) ge2fitman_read_procpar.cpp:123 636 {jump}
     (nil)
 -> 320)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2028 2027 235)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 116 117 541
(code_label 235 2028 236 28 22 "" [1 uses])
(note 236 235 237 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 28 (set (reg/f:DI 0 ax [541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(insn 238 237 239 28 (parallel [
            (set (reg/f:DI 0 ax [orig:116 D.24957 ] [116])
                (plus:DI (reg/f:DI 0 ax [541])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:124 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 239 238 240 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b9523c58390 *.LC13>)) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(insn 240 239 241 28 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:116 D.24957 ] [116])) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(call_insn/i 241 240 242 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:124 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 242 241 243 28 (set (reg:SI 0 ax [orig:117 D.24953 ] [117])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:124 90 {*movsi_internal}
     (nil))
(insn 243 242 244 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:117 D.24953 ] [117])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:124 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 244 243 245 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) ge2fitman_read_procpar.cpp:124 596 {*jcc_1}
     (nil)
 -> 255)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 245 244 246 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 61464 [0xf018])) ge2fitman_read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 247 246 248 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 57362 [0xe012])) ge2fitman_read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(insn 248 247 249 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 57453 [0xe06d])) ge2fitman_read_procpar.cpp:127 89 {*movdi_internal}
     (nil))
(insn 249 248 250 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 57564 [0xe0dc])) ge2fitman_read_procpar.cpp:128 89 {*movdi_internal}
     (nil))
(insn 250 249 251 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 60136 [0xeae8])) ge2fitman_read_procpar.cpp:129 89 {*movdi_internal}
     (nil))
(insn 251 250 252 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 60128 [0xeae0])) ge2fitman_read_procpar.cpp:130 89 {*movdi_internal}
     (nil))
(insn 252 251 2029 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 60248 [0xeb58])) ge2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (nil))
(jump_insn 2029 252 2030 29 (set (pc)
        (label_ref 320)) 636 {jump}
     (nil)
 -> 320)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2030 2029 255)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 118 119 542
(code_label 255 2030 256 30 23 "" [1 uses])
(note 256 255 257 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 30 (set (reg/f:DI 0 ax [542])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 258 257 259 30 (parallel [
            (set (reg/f:DI 0 ax [orig:118 D.24957 ] [118])
                (plus:DI (reg/f:DI 0 ax [542])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:132 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 259 258 260 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b9523c58428 *.LC14>)) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 260 259 261 30 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:118 D.24957 ] [118])) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn/i 261 260 262 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:132 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 262 261 263 30 (set (reg:SI 0 ax [orig:119 D.24953 ] [119])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:132 90 {*movsi_internal}
     (nil))
(insn 263 262 264 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 D.24953 ] [119])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:132 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 264 263 265 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) ge2fitman_read_procpar.cpp:132 596 {*jcc_1}
     (nil)
 -> 275)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 265 264 266 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 66072 [0x10218])) ge2fitman_read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 267 266 268 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 61851 [0xf19b])) ge2fitman_read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 268 267 269 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 62062 [0xf26e])) ge2fitman_read_procpar.cpp:135 89 {*movdi_internal}
     (nil))
(insn 269 268 270 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 61568 [0xf080])) ge2fitman_read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 270 269 271 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 65032 [0xfe08])) ge2fitman_read_procpar.cpp:137 89 {*movdi_internal}
     (nil))
(insn 271 270 272 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 65024 [0xfe00])) ge2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 272 271 2031 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 65374 [0xff5e])) ge2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(jump_insn 2031 272 2032 31 (set (pc)
        (label_ref 320)) 636 {jump}
     (nil)
 -> 320)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2032 2031 275)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 120 121 543
(code_label 275 2032 276 32 24 "" [1 uses])
(note 276 275 277 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 32 (set (reg/f:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 278 277 279 32 (parallel [
            (set (reg/f:DI 0 ax [orig:120 D.24957 ] [120])
                (plus:DI (reg/f:DI 0 ax [543])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:143 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 279 278 280 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 280 279 281 32 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:120 D.24957 ] [120])) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(call_insn/i 281 280 282 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:143 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 282 281 283 32 (set (reg:SI 0 ax [orig:121 D.24953 ] [121])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:143 90 {*movsi_internal}
     (nil))
(insn 283 282 284 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:121 D.24953 ] [121])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:143 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 284 283 285 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) ge2fitman_read_procpar.cpp:143 596 {*jcc_1}
     (nil)
 -> 300)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 122 544
(note 285 284 286 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 33 (set (reg/f:DI 0 ax [544])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 287 286 288 33 (parallel [
            (set (reg/f:DI 0 ax [orig:122 D.24957 ] [122])
                (plus:DI (reg/f:DI 0 ax [544])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:150 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 288 287 289 33 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:122 D.24957 ] [122])) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 289 288 290 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b9523c58558 *.LC16>)) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 290 289 291 33 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:150 93 {*movqi_internal}
     (nil))
(call_insn 291 290 292 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:150 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 292 291 293 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 144175 [0x2332f])) ge2fitman_read_procpar.cpp:157 89 {*movdi_internal}
     (nil))
(insn 293 292 294 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 144348 [0x233dc])) ge2fitman_read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 294 293 295 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 143412 [0x23034])) ge2fitman_read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 295 294 296 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 296 295 297 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:161 89 {*movdi_internal}
     (nil))
(insn 297 296 2033 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 148988 [0x245fc])) ge2fitman_read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(jump_insn 2033 297 2034 33 (set (pc)
        (label_ref 320)) 636 {jump}
     (nil)
 -> 320)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2034 2033 300)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 123 124 545
(code_label 300 2034 301 34 25 "" [1 uses])
(note 301 300 302 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 34 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 303 302 304 34 (parallel [
            (set (reg/f:DI 0 ax [orig:123 D.24957 ] [123])
                (plus:DI (reg/f:DI 0 ax [545])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:165 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 304 303 305 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b9523c585f0 *.LC17>)) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 305 304 306 34 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:123 D.24957 ] [123])) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(call_insn/i 306 305 307 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:165 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 307 306 308 34 (set (reg:SI 0 ax [orig:124 D.24953 ] [124])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:165 90 {*movsi_internal}
     (nil))
(insn 308 307 309 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:124 D.24953 ] [124])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 309 308 310 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) ge2fitman_read_procpar.cpp:165 596 {*jcc_1}
     (nil)
 -> 320)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 310 309 311 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 145908 [0x239f4])) ge2fitman_read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 312 311 313 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])
        (const_int 144175 [0x2332f])) ge2fitman_read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 313 312 314 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])
        (const_int 144348 [0x233dc])) ge2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (nil))
(insn 314 313 315 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 143412 [0x23034])) ge2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 315 314 316 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 te_offset+0 S8 A64])
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:176 89 {*movdi_internal}
     (nil))
(insn 316 315 317 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 tr_offset+0 S8 A64])
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 317 316 318 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])
        (const_int 148988 [0x245fc])) ge2fitman_read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(insn 318 317 319 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b9523c58688 *.LC18>)) ge2fitman_read_procpar.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 319 318 320 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b95225d9900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:179 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;;              24 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              34
;;              33 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 125 126 546
(code_label 320 319 321 36 20 "" [6 uses])
(note 321 320 322 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 36 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:183 92 {*movhi_internal}
     (nil))
(insn 323 322 324 36 (set (reg/f:DI 0 ax [546])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 324 323 325 36 (parallel [
            (set (reg/f:DI 0 ax [orig:125 D.24957 ] [125])
                (plus:DI (reg/f:DI 0 ax [546])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:185 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 325 324 326 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 326 325 327 36 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:125 D.24957 ] [125])) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(call_insn/i 327 326 328 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:185 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 328 327 329 36 (set (reg:SI 0 ax [orig:126 D.24953 ] [126])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:185 90 {*movsi_internal}
     (nil))
(insn 329 328 330 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:126 D.24953 ] [126])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:185 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 330 329 331 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) ge2fitman_read_procpar.cpp:185 596 {*jcc_1}
     (nil)
 -> 355)
;;  succ:       37 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 127 128 129 130 131 132 547 548 549 550
(note 331 330 332 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 37 (set (reg/f:DI 0 ax [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 333 332 334 37 (set (reg:QI 0 ax [orig:127 D.24954 ] [127])
        (mem:QI (reg/f:DI 0 ax [547]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:190 93 {*movqi_internal}
     (nil))
(insn 334 333 335 37 (set (reg:SI 1 dx [orig:128 D.24953 ] [128])
        (zero_extend:SI (reg:QI 0 ax [orig:127 D.24954 ] [127]))) ge2fitman_read_procpar.cpp:190 138 {*zero_extendqisi2}
     (nil))
(insn 335 334 336 37 (set (reg:SI 2 cx [orig:129 D.24953 ] [129])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 336 335 337 37 (set (reg:SI 5 di [orig:130 D.24953 ] [130])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 337 336 338 37 (parallel [
            (set (reg:DI 4 si [548])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:190 221 {*adddi_1}
     (nil))
(insn 338 337 339 37 (set (reg:DI 0 ax [549])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 339 338 340 37 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:128 D.24953 ] [128])) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 340 339 341 37 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:129 D.24953 ] [129])) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 341 340 342 37 (set (reg:DI 2 cx)
        (const_int 74 [0x4a])) ge2fitman_read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(insn 342 341 344 37 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:130 D.24953 ] [130])) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 344 342 345 37 (set (reg:DI 5 di)
        (reg:DI 0 ax [549])) ge2fitman_read_procpar.cpp:190 89 {*movdi_internal}
     (nil))
(call_insn 345 344 346 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:190 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 346 345 347 37 (set (reg:SI 0 ax [orig:131 D.24953 ] [131])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:190 90 {*movsi_internal}
     (nil))
(insn 347 346 348 37 (parallel [
            (set (reg:SI 0 ax [550])
                (lshiftrt:SI (reg:SI 0 ax [orig:131 D.24953 ] [131])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:188 529 {*lshrsi3_1}
     (nil))
(insn 348 347 349 37 (set (reg:QI 0 ax [orig:132 D.24954 ] [132])
        (reg:QI 0 ax [550])) ge2fitman_read_procpar.cpp:188 93 {*movqi_internal}
     (nil))
(insn 349 348 350 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:132 D.24954 ] [132])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:188 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 350 349 351 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) ge2fitman_read_procpar.cpp:188 596 {*jcc_1}
     (nil)
 -> 389)
;;  succ:       38 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 351 350 352 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 2035 38 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:191 90 {*movsi_internal}
     (nil))
(jump_insn 2035 352 2036 38 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:191 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2036 2035 355)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 133 134 551
(code_label 355 2036 356 39 26 "" [1 uses])
(note 356 355 357 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 39 (set (reg/f:DI 0 ax [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 358 357 359 39 (parallel [
            (set (reg/f:DI 0 ax [orig:133 D.24957 ] [133])
                (plus:DI (reg/f:DI 0 ax [551])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:194 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 359 358 360 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 360 359 361 39 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:133 D.24957 ] [133])) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(call_insn/i 361 360 362 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:194 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 362 361 363 39 (set (reg:SI 0 ax [orig:134 D.24953 ] [134])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:194 90 {*movsi_internal}
     (nil))
(insn 363 362 364 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:134 D.24953 ] [134])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:194 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 364 363 365 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) ge2fitman_read_procpar.cpp:194 596 {*jcc_1}
     (nil)
 -> 389)
;;  succ:       40 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 135 136 137 138 139 140 552 553 554 555
(note 365 364 366 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 40 (set (reg/f:DI 0 ax [552])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 367 366 368 40 (set (reg:QI 0 ax [orig:135 D.24954 ] [135])
        (mem:QI (reg/f:DI 0 ax [552]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:199 93 {*movqi_internal}
     (nil))
(insn 368 367 369 40 (set (reg:SI 1 dx [orig:136 D.24953 ] [136])
        (zero_extend:SI (reg:QI 0 ax [orig:135 D.24954 ] [135]))) ge2fitman_read_procpar.cpp:199 138 {*zero_extendqisi2}
     (nil))
(insn 369 368 370 40 (set (reg:SI 2 cx [orig:137 D.24953 ] [137])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 370 369 371 40 (set (reg:SI 5 di [orig:138 D.24953 ] [138])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 371 370 372 40 (parallel [
            (set (reg:DI 4 si [553])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:199 221 {*adddi_1}
     (nil))
(insn 372 371 373 40 (set (reg:DI 0 ax [554])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 373 372 374 40 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:136 D.24953 ] [136])) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 374 373 375 40 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:137 D.24953 ] [137])) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 375 374 376 40 (set (reg:DI 2 cx)
        (const_int 74 [0x4a])) ge2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(insn 376 375 378 40 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:138 D.24953 ] [138])) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 378 376 379 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [554])) ge2fitman_read_procpar.cpp:199 89 {*movdi_internal}
     (nil))
(call_insn 379 378 380 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:199 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 380 379 381 40 (set (reg:SI 0 ax [orig:139 D.24953 ] [139])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:199 90 {*movsi_internal}
     (nil))
(insn 381 380 382 40 (parallel [
            (set (reg:SI 0 ax [555])
                (lshiftrt:SI (reg:SI 0 ax [orig:139 D.24953 ] [139])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:197 529 {*lshrsi3_1}
     (nil))
(insn 382 381 383 40 (set (reg:QI 0 ax [orig:140 D.24954 ] [140])
        (reg:QI 0 ax [555])) ge2fitman_read_procpar.cpp:197 93 {*movqi_internal}
     (nil))
(insn 383 382 384 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:140 D.24954 ] [140])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:197 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 384 383 385 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) ge2fitman_read_procpar.cpp:197 596 {*jcc_1}
     (nil)
 -> 389)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 385 384 386 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 2037 41 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:201 90 {*movsi_internal}
     (nil))
(jump_insn 2037 386 2038 41 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:201 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2038 2037 389)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;;              39
;;              40
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 141 142 143 144 556 557 558
(code_label 389 2038 390 42 27 "" [3 uses])
(note 390 389 391 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 42 (set (reg:HI 0 ax [orig:141 D.24958 ] [141])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:204 92 {*movhi_internal}
     (nil))
(insn 392 391 393 42 (set (reg:SI 1 dx [orig:142 D.24953 ] [142])
        (sign_extend:SI (reg:HI 0 ax [orig:141 D.24958 ] [141]))) ge2fitman_read_procpar.cpp:204 146 {extendhisi2}
     (nil))
(insn 393 392 394 42 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 394 393 395 42 (set (mem/j:SI (reg/f:DI 0 ax [556]) [0 infile_struct_41(D)->num_datasets+0 S4 A32])
        (reg:SI 1 dx [orig:142 D.24953 ] [142])) ge2fitman_read_procpar.cpp:204 90 {*movsi_internal}
     (nil))
(insn 395 394 396 42 (set (reg:SF 0 ax [557])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:209 129 {*movsf_internal}
     (nil))
(insn 396 395 397 42 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])
        (reg:SF 0 ax [557])) ge2fitman_read_procpar.cpp:209 129 {*movsf_internal}
     (nil))
(insn 397 396 398 42 (set (reg/f:DI 0 ax [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 398 397 399 42 (parallel [
            (set (reg/f:DI 0 ax [orig:143 D.24957 ] [143])
                (plus:DI (reg/f:DI 0 ax [558])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:212 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 399 398 400 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 400 399 401 42 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:143 D.24957 ] [143])) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(call_insn/i 401 400 402 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:212 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 402 401 403 42 (set (reg:SI 0 ax [orig:144 D.24953 ] [144])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:212 90 {*movsi_internal}
     (nil))
(insn 403 402 404 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:144 D.24953 ] [144])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:212 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 404 403 405 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) ge2fitman_read_procpar.cpp:212 596 {*jcc_1}
     (nil)
 -> 429)
;;  succ:       43 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 145 146 147 148 149 150 559 560 561 562
(note 405 404 406 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 43 (set (reg/f:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 407 406 408 43 (set (reg:QI 0 ax [orig:145 D.24954 ] [145])
        (mem:QI (reg/f:DI 0 ax [559]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:216 93 {*movqi_internal}
     (nil))
(insn 408 407 409 43 (set (reg:SI 1 dx [orig:146 D.24953 ] [146])
        (zero_extend:SI (reg:QI 0 ax [orig:145 D.24954 ] [145]))) ge2fitman_read_procpar.cpp:216 138 {*zero_extendqisi2}
     (nil))
(insn 409 408 410 43 (set (reg:SI 2 cx [orig:147 D.24953 ] [147])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 410 409 411 43 (set (reg:SI 5 di [orig:148 D.24953 ] [148])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 411 410 412 43 (parallel [
            (set (reg:DI 4 si [560])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:216 221 {*adddi_1}
     (nil))
(insn 412 411 413 43 (set (reg:DI 0 ax [561])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 413 412 414 43 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:146 D.24953 ] [146])) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 414 413 415 43 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:147 D.24953 ] [147])) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 415 414 416 43 (set (reg:DI 2 cx)
        (const_int 292 [0x124])) ge2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(insn 416 415 418 43 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:148 D.24953 ] [148])) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 418 416 419 43 (set (reg:DI 5 di)
        (reg:DI 0 ax [561])) ge2fitman_read_procpar.cpp:216 89 {*movdi_internal}
     (nil))
(call_insn 419 418 420 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:216 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 420 419 421 43 (set (reg:SI 0 ax [orig:149 D.24953 ] [149])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:216 90 {*movsi_internal}
     (nil))
(insn 421 420 422 43 (parallel [
            (set (reg:SI 0 ax [562])
                (lshiftrt:SI (reg:SI 0 ax [orig:149 D.24953 ] [149])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:214 529 {*lshrsi3_1}
     (nil))
(insn 422 421 423 43 (set (reg:QI 0 ax [orig:150 D.24954 ] [150])
        (reg:QI 0 ax [562])) ge2fitman_read_procpar.cpp:214 93 {*movqi_internal}
     (nil))
(insn 423 422 424 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:150 D.24954 ] [150])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:214 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 424 423 425 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) ge2fitman_read_procpar.cpp:214 596 {*jcc_1}
     (nil)
 -> 463)
;;  succ:       44 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 425 424 426 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 2039 44 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:217 90 {*movsi_internal}
     (nil))
(jump_insn 2039 426 2040 44 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:217 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2040 2039 429)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 151 152 563
(code_label 429 2040 430 45 28 "" [1 uses])
(note 430 429 431 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 45 (set (reg/f:DI 0 ax [563])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(insn 432 431 433 45 (parallel [
            (set (reg/f:DI 0 ax [orig:151 D.24957 ] [151])
                (plus:DI (reg/f:DI 0 ax [563])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:220 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 433 432 434 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(insn 434 433 435 45 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:151 D.24957 ] [151])) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(call_insn/i 435 434 436 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:220 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 436 435 437 45 (set (reg:SI 0 ax [orig:152 D.24953 ] [152])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:220 90 {*movsi_internal}
     (nil))
(insn 437 436 438 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:152 D.24953 ] [152])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:220 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 438 437 439 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) ge2fitman_read_procpar.cpp:220 596 {*jcc_1}
     (nil)
 -> 463)
;;  succ:       46 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 153 154 155 156 157 158 564 565 566 567
(note 439 438 440 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 46 (set (reg/f:DI 0 ax [564])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 441 440 442 46 (set (reg:QI 0 ax [orig:153 D.24954 ] [153])
        (mem:QI (reg/f:DI 0 ax [564]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:224 93 {*movqi_internal}
     (nil))
(insn 442 441 443 46 (set (reg:SI 1 dx [orig:154 D.24953 ] [154])
        (zero_extend:SI (reg:QI 0 ax [orig:153 D.24954 ] [153]))) ge2fitman_read_procpar.cpp:224 138 {*zero_extendqisi2}
     (nil))
(insn 443 442 444 46 (set (reg:SI 2 cx [orig:155 D.24953 ] [155])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 444 443 445 46 (set (reg:SI 5 di [orig:156 D.24953 ] [156])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 445 444 446 46 (parallel [
            (set (reg:DI 4 si [565])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:224 221 {*adddi_1}
     (nil))
(insn 446 445 447 46 (set (reg:DI 0 ax [566])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 447 446 448 46 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:154 D.24953 ] [154])) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 448 447 449 46 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:155 D.24953 ] [155])) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 449 448 450 46 (set (reg:DI 2 cx)
        (const_int 292 [0x124])) ge2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(insn 450 449 452 46 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:156 D.24953 ] [156])) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 452 450 453 46 (set (reg:DI 5 di)
        (reg:DI 0 ax [566])) ge2fitman_read_procpar.cpp:224 89 {*movdi_internal}
     (nil))
(call_insn 453 452 454 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:224 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 454 453 455 46 (set (reg:SI 0 ax [orig:157 D.24953 ] [157])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:224 90 {*movsi_internal}
     (nil))
(insn 455 454 456 46 (parallel [
            (set (reg:SI 0 ax [567])
                (lshiftrt:SI (reg:SI 0 ax [orig:157 D.24953 ] [157])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:222 529 {*lshrsi3_1}
     (nil))
(insn 456 455 457 46 (set (reg:QI 0 ax [orig:158 D.24954 ] [158])
        (reg:QI 0 ax [567])) ge2fitman_read_procpar.cpp:222 93 {*movqi_internal}
     (nil))
(insn 457 456 458 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:158 D.24954 ] [158])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:222 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 458 457 459 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) ge2fitman_read_procpar.cpp:222 596 {*jcc_1}
     (nil)
 -> 463)
;;  succ:       47 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 459 458 460 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 2041 47 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:225 90 {*movsi_internal}
     (nil))
(jump_insn 2041 460 2042 47 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:225 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2042 2041 463)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              45
;;              46
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 159 160 161 162 568 569
(code_label 463 2042 464 48 29 "" [3 uses])
(note 464 463 465 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 2125 48 (set (reg:SF 0 ax [orig:159 D.24955 ] [159])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:233 129 {*movsf_internal}
     (nil))
(insn 2125 465 466 48 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [0 %sfp+-196 S4 A32])
        (reg:SF 0 ax [orig:159 D.24955 ] [159])) ge2fitman_read_procpar.cpp:233 129 {*movsf_internal}
     (nil))
(insn 466 2125 467 48 (set (reg:SI 1 dx [orig:160 D.24953 ] [160])
        (fix:SI (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -212 [0xffffffffffffff2c])) [0 %sfp+-196 S4 A32]))) ge2fitman_read_procpar.cpp:233 170 {fix_truncsfsi_sse}
     (nil))
(insn 467 466 468 48 (set (reg/f:DI 0 ax [568])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:233 89 {*movdi_internal}
     (nil))
(insn 468 467 469 48 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [568])
                (const_int 4 [0x4])) [0 infile_struct_41(D)->num_unsup_sets+0 S4 A32])
        (reg:SI 1 dx [orig:160 D.24953 ] [160])) ge2fitman_read_procpar.cpp:233 90 {*movsi_internal}
     (nil))
(insn 469 468 470 48 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:240 92 {*movhi_internal}
     (nil))
(insn 470 469 471 48 (set (reg/f:DI 0 ax [569])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 471 470 472 48 (parallel [
            (set (reg/f:DI 0 ax [orig:161 D.24957 ] [161])
                (plus:DI (reg/f:DI 0 ax [569])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:242 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 472 471 473 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 473 472 474 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:161 D.24957 ] [161])) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn/i 474 473 475 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:242 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 475 474 476 48 (set (reg:SI 0 ax [orig:162 D.24953 ] [162])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:242 90 {*movsi_internal}
     (nil))
(insn 476 475 477 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:162 D.24953 ] [162])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:242 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 477 476 478 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 502)
            (pc))) ge2fitman_read_procpar.cpp:242 596 {*jcc_1}
     (nil)
 -> 502)
;;  succ:       49 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 163 164 165 166 167 168 570 571 572 573
(note 478 477 479 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 49 (set (reg/f:DI 0 ax [570])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:246 89 {*movdi_internal}
     (nil))
(insn 480 479 481 49 (set (reg:QI 0 ax [orig:163 D.24954 ] [163])
        (mem:QI (reg/f:DI 0 ax [570]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:246 93 {*movqi_internal}
     (nil))
(insn 481 480 482 49 (set (reg:SI 1 dx [orig:164 D.24953 ] [164])
        (zero_extend:SI (reg:QI 0 ax [orig:163 D.24954 ] [163]))) ge2fitman_read_procpar.cpp:246 138 {*zero_extendqisi2}
     (nil))
(insn 482 481 483 49 (set (reg:SI 2 cx [orig:165 D.24953 ] [165])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 483 482 484 49 (set (reg:SI 5 di [orig:166 D.24953 ] [166])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 484 483 485 49 (parallel [
            (set (reg:DI 4 si [571])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:246 221 {*adddi_1}
     (nil))
(insn 485 484 486 49 (set (reg:DI 0 ax [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:246 89 {*movdi_internal}
     (nil))
(insn 486 485 487 49 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:164 D.24953 ] [164])) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 487 486 488 49 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:165 D.24953 ] [165])) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 488 487 489 49 (set (reg:DI 2 cx)
        (const_int 82 [0x52])) ge2fitman_read_procpar.cpp:246 89 {*movdi_internal}
     (nil))
(insn 489 488 491 49 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:166 D.24953 ] [166])) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 491 489 492 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [572])) ge2fitman_read_procpar.cpp:246 89 {*movdi_internal}
     (nil))
(call_insn 492 491 493 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:246 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 493 492 494 49 (set (reg:SI 0 ax [orig:167 D.24953 ] [167])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:246 90 {*movsi_internal}
     (nil))
(insn 494 493 495 49 (parallel [
            (set (reg:SI 0 ax [573])
                (lshiftrt:SI (reg:SI 0 ax [orig:167 D.24953 ] [167])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:244 529 {*lshrsi3_1}
     (nil))
(insn 495 494 496 49 (set (reg:QI 0 ax [orig:168 D.24954 ] [168])
        (reg:QI 0 ax [573])) ge2fitman_read_procpar.cpp:244 93 {*movqi_internal}
     (nil))
(insn 496 495 497 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:168 D.24954 ] [168])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:244 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 497 496 498 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) ge2fitman_read_procpar.cpp:244 596 {*jcc_1}
     (nil)
 -> 536)
;;  succ:       50 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 498 497 499 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 499 498 2043 50 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:247 90 {*movsi_internal}
     (nil))
(jump_insn 2043 499 2044 50 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:247 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2044 2043 502)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 169 170 574
(code_label 502 2044 503 51 30 "" [1 uses])
(note 503 502 504 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 51 (set (reg/f:DI 0 ax [574])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 505 504 506 51 (parallel [
            (set (reg/f:DI 0 ax [orig:169 D.24957 ] [169])
                (plus:DI (reg/f:DI 0 ax [574])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:250 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 506 505 507 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 507 506 508 51 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:169 D.24957 ] [169])) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(call_insn/i 508 507 509 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:250 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 509 508 510 51 (set (reg:SI 0 ax [orig:170 D.24953 ] [170])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:250 90 {*movsi_internal}
     (nil))
(insn 510 509 511 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:170 D.24953 ] [170])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:250 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 511 510 512 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) ge2fitman_read_procpar.cpp:250 596 {*jcc_1}
     (nil)
 -> 536)
;;  succ:       52 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 171 172 173 174 175 176 575 576 577 578
(note 512 511 513 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 52 (set (reg/f:DI 0 ax [575])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:254 89 {*movdi_internal}
     (nil))
(insn 514 513 515 52 (set (reg:QI 0 ax [orig:171 D.24954 ] [171])
        (mem:QI (reg/f:DI 0 ax [575]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:254 93 {*movqi_internal}
     (nil))
(insn 515 514 516 52 (set (reg:SI 1 dx [orig:172 D.24953 ] [172])
        (zero_extend:SI (reg:QI 0 ax [orig:171 D.24954 ] [171]))) ge2fitman_read_procpar.cpp:254 138 {*zero_extendqisi2}
     (nil))
(insn 516 515 517 52 (set (reg:SI 2 cx [orig:173 D.24953 ] [173])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 517 516 518 52 (set (reg:SI 5 di [orig:174 D.24953 ] [174])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 518 517 519 52 (parallel [
            (set (reg:DI 4 si [576])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:254 221 {*adddi_1}
     (nil))
(insn 519 518 520 52 (set (reg:DI 0 ax [577])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:254 89 {*movdi_internal}
     (nil))
(insn 520 519 521 52 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:172 D.24953 ] [172])) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 521 520 522 52 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:173 D.24953 ] [173])) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 522 521 523 52 (set (reg:DI 2 cx)
        (const_int 82 [0x52])) ge2fitman_read_procpar.cpp:254 89 {*movdi_internal}
     (nil))
(insn 523 522 525 52 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:174 D.24953 ] [174])) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 525 523 526 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [577])) ge2fitman_read_procpar.cpp:254 89 {*movdi_internal}
     (nil))
(call_insn 526 525 527 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:254 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 527 526 528 52 (set (reg:SI 0 ax [orig:175 D.24953 ] [175])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:254 90 {*movsi_internal}
     (nil))
(insn 528 527 529 52 (parallel [
            (set (reg:SI 0 ax [578])
                (lshiftrt:SI (reg:SI 0 ax [orig:175 D.24953 ] [175])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:252 529 {*lshrsi3_1}
     (nil))
(insn 529 528 530 52 (set (reg:QI 0 ax [orig:176 D.24954 ] [176])
        (reg:QI 0 ax [578])) ge2fitman_read_procpar.cpp:252 93 {*movqi_internal}
     (nil))
(insn 530 529 531 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:176 D.24954 ] [176])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:252 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 531 530 532 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) ge2fitman_read_procpar.cpp:252 596 {*jcc_1}
     (nil)
 -> 536)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 532 531 533 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 2045 53 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:255 90 {*movsi_internal}
     (nil))
(jump_insn 2045 533 2046 53 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:255 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2046 2045 536)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              51
;;              52
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 177 178 179 180 181 579 580
(code_label 536 2046 537 54 31 "" [3 uses])
(note 537 536 538 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 539 54 (set (reg:HI 0 ax [orig:177 D.24958 ] [177])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:261 92 {*movhi_internal}
     (nil))
(insn 539 538 540 54 (set (reg:DI 0 ax [orig:178 D.24959 ] [178])
        (sign_extend:DI (reg:HI 0 ax [orig:177 D.24958 ] [177]))) ge2fitman_read_procpar.cpp:261 145 {extendhidi2}
     (nil))
(insn 540 539 541 54 (parallel [
            (set (reg:DI 1 dx [orig:179 D.24959 ] [179])
                (ashift:DI (reg:DI 0 ax [orig:178 D.24959 ] [178])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:261 497 {*ashldi3_1}
     (nil))
(insn 541 540 542 54 (set (reg/f:DI 0 ax [579])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:261 89 {*movdi_internal}
     (nil))
(insn 542 541 543 54 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [579])
                (const_int 24 [0x18])) [0 main_header_177(D)->ebytes.number+0 S8 A64])
        (reg:DI 1 dx [orig:179 D.24959 ] [179])) ge2fitman_read_procpar.cpp:261 89 {*movdi_internal}
     (nil))
(insn 543 542 544 54 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 temp_long2+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 544 543 545 54 (set (reg/f:DI 0 ax [580])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(insn 545 544 546 54 (parallel [
            (set (reg/f:DI 0 ax [orig:180 D.24957 ] [180])
                (plus:DI (reg/f:DI 0 ax [580])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:284 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 546 545 547 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(insn 547 546 548 54 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:180 D.24957 ] [180])) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(call_insn/i 548 547 549 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:284 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 549 548 550 54 (set (reg:SI 0 ax [orig:181 D.24953 ] [181])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:284 90 {*movsi_internal}
     (nil))
(insn 550 549 551 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:181 D.24953 ] [181])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 551 550 552 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 576)
            (pc))) ge2fitman_read_procpar.cpp:284 596 {*jcc_1}
     (nil)
 -> 576)
;;  succ:       55 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 182 183 184 185 186 187 581 582 583 584
(note 552 551 553 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 55 (set (reg/f:DI 0 ax [581])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 554 553 555 55 (set (reg:QI 0 ax [orig:182 D.24954 ] [182])
        (mem:QI (reg/f:DI 0 ax [581]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:288 93 {*movqi_internal}
     (nil))
(insn 555 554 556 55 (set (reg:SI 1 dx [orig:183 D.24953 ] [183])
        (zero_extend:SI (reg:QI 0 ax [orig:182 D.24954 ] [182]))) ge2fitman_read_procpar.cpp:288 138 {*zero_extendqisi2}
     (nil))
(insn 556 555 557 55 (set (reg:SI 2 cx [orig:184 D.24953 ] [184])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 557 556 558 55 (set (reg:SI 5 di [orig:185 D.24953 ] [185])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 558 557 559 55 (parallel [
            (set (reg:DI 4 si [582])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:288 221 {*adddi_1}
     (nil))
(insn 559 558 560 55 (set (reg:DI 0 ax [583])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 560 559 561 55 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:183 D.24953 ] [183])) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 561 560 562 55 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:184 D.24953 ] [184])) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 562 561 563 55 (set (reg:DI 2 cx)
        (const_int 1664 [0x680])) ge2fitman_read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(insn 563 562 565 55 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:185 D.24953 ] [185])) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 565 563 566 55 (set (reg:DI 5 di)
        (reg:DI 0 ax [583])) ge2fitman_read_procpar.cpp:288 89 {*movdi_internal}
     (nil))
(call_insn 566 565 567 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:288 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 567 566 568 55 (set (reg:SI 0 ax [orig:186 D.24953 ] [186])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:288 90 {*movsi_internal}
     (nil))
(insn 568 567 569 55 (parallel [
            (set (reg:SI 0 ax [584])
                (lshiftrt:SI (reg:SI 0 ax [orig:186 D.24953 ] [186])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:286 529 {*lshrsi3_1}
     (nil))
(insn 569 568 570 55 (set (reg:QI 0 ax [orig:187 D.24954 ] [187])
        (reg:QI 0 ax [584])) ge2fitman_read_procpar.cpp:286 93 {*movqi_internal}
     (nil))
(insn 570 569 571 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:187 D.24954 ] [187])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:286 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 571 570 572 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 610)
            (pc))) ge2fitman_read_procpar.cpp:286 596 {*jcc_1}
     (nil)
 -> 610)
;;  succ:       56 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 572 571 573 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 2047 56 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:289 90 {*movsi_internal}
     (nil))
(jump_insn 2047 573 2048 56 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:289 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2048 2047 576)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 188 189 585
(code_label 576 2048 577 57 32 "" [1 uses])
(note 577 576 578 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 57 (set (reg/f:DI 0 ax [585])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 579 578 580 57 (parallel [
            (set (reg/f:DI 0 ax [orig:188 D.24957 ] [188])
                (plus:DI (reg/f:DI 0 ax [585])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:292 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 580 579 581 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 581 580 582 57 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:188 D.24957 ] [188])) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(call_insn/i 582 581 583 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:292 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 583 582 584 57 (set (reg:SI 0 ax [orig:189 D.24953 ] [189])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:292 90 {*movsi_internal}
     (nil))
(insn 584 583 585 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:189 D.24953 ] [189])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:292 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 585 584 586 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 610)
            (pc))) ge2fitman_read_procpar.cpp:292 596 {*jcc_1}
     (nil)
 -> 610)
;;  succ:       58 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 190 191 192 193 194 195 586 587 588 589
(note 586 585 587 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 58 (set (reg/f:DI 0 ax [586])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(insn 588 587 589 58 (set (reg:QI 0 ax [orig:190 D.24954 ] [190])
        (mem:QI (reg/f:DI 0 ax [586]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:296 93 {*movqi_internal}
     (nil))
(insn 589 588 590 58 (set (reg:SI 1 dx [orig:191 D.24953 ] [191])
        (zero_extend:SI (reg:QI 0 ax [orig:190 D.24954 ] [190]))) ge2fitman_read_procpar.cpp:296 138 {*zero_extendqisi2}
     (nil))
(insn 590 589 591 58 (set (reg:SI 2 cx [orig:192 D.24953 ] [192])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 591 590 592 58 (set (reg:SI 5 di [orig:193 D.24953 ] [193])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 592 591 593 58 (parallel [
            (set (reg:DI 4 si [587])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:296 221 {*adddi_1}
     (nil))
(insn 593 592 594 58 (set (reg:DI 0 ax [588])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(insn 594 593 595 58 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:191 D.24953 ] [191])) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 595 594 596 58 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:192 D.24953 ] [192])) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 596 595 597 58 (set (reg:DI 2 cx)
        (const_int 116 [0x74])) ge2fitman_read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(insn 597 596 599 58 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:193 D.24953 ] [193])) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 599 597 600 58 (set (reg:DI 5 di)
        (reg:DI 0 ax [588])) ge2fitman_read_procpar.cpp:296 89 {*movdi_internal}
     (nil))
(call_insn 600 599 601 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:296 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 601 600 602 58 (set (reg:SI 0 ax [orig:194 D.24953 ] [194])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:296 90 {*movsi_internal}
     (nil))
(insn 602 601 603 58 (parallel [
            (set (reg:SI 0 ax [589])
                (lshiftrt:SI (reg:SI 0 ax [orig:194 D.24953 ] [194])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:294 529 {*lshrsi3_1}
     (nil))
(insn 603 602 604 58 (set (reg:QI 0 ax [orig:195 D.24954 ] [195])
        (reg:QI 0 ax [589])) ge2fitman_read_procpar.cpp:294 93 {*movqi_internal}
     (nil))
(insn 604 603 605 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:195 D.24954 ] [195])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:294 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 605 604 606 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 610)
            (pc))) ge2fitman_read_procpar.cpp:294 596 {*jcc_1}
     (nil)
 -> 610)
;;  succ:       59 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 606 605 607 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 2049 59 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:297 90 {*movsi_internal}
     (nil))
(jump_insn 2049 607 2050 59 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:297 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2050 2049 610)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;;              57
;;              58
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 196 197 198 199 590 591
(code_label 610 2050 611 60 33 "" [3 uses])
(note 611 610 612 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 60 (set (reg:DI 0 ax [orig:196 D.24960 ] [196])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 temp_long2+0 S8 A64])) ge2fitman_read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 613 612 614 60 (set (reg:SI 1 dx [orig:197 D.24953 ] [197])
        (reg:SI 0 ax [orig:196 D.24960 ] [196])) ge2fitman_read_procpar.cpp:301 90 {*movsi_internal}
     (nil))
(insn 614 613 615 60 (set (reg/f:DI 0 ax [590])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 615 614 616 60 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [590])
                (const_int 12 [0xc])) [0 infile_struct_41(D)->total_data_size+0 S4 A32])
        (reg:SI 1 dx [orig:197 D.24953 ] [197])) ge2fitman_read_procpar.cpp:301 90 {*movsi_internal}
     (nil))
(insn 616 615 617 60 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:347 92 {*movhi_internal}
     (nil))
(insn 617 616 618 60 (set (reg/f:DI 0 ax [591])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(insn 618 617 619 60 (parallel [
            (set (reg/f:DI 0 ax [orig:198 D.24957 ] [198])
                (plus:DI (reg/f:DI 0 ax [591])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:349 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 619 618 620 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(insn 620 619 621 60 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:198 D.24957 ] [198])) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(call_insn/i 621 620 622 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:349 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 622 621 623 60 (set (reg:SI 0 ax [orig:199 D.24953 ] [199])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:349 90 {*movsi_internal}
     (nil))
(insn 623 622 624 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:199 D.24953 ] [199])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:349 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 624 623 625 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) ge2fitman_read_procpar.cpp:349 596 {*jcc_1}
     (nil)
 -> 649)
;;  succ:       61 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 200 201 202 203 204 205 592 593 594 595
(note 625 624 626 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 627 61 (set (reg/f:DI 0 ax [592])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:353 89 {*movdi_internal}
     (nil))
(insn 627 626 628 61 (set (reg:QI 0 ax [orig:200 D.24954 ] [200])
        (mem:QI (reg/f:DI 0 ax [592]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:353 93 {*movqi_internal}
     (nil))
(insn 628 627 629 61 (set (reg:SI 1 dx [orig:201 D.24953 ] [201])
        (zero_extend:SI (reg:QI 0 ax [orig:200 D.24954 ] [200]))) ge2fitman_read_procpar.cpp:353 138 {*zero_extendqisi2}
     (nil))
(insn 629 628 630 61 (set (reg:SI 2 cx [orig:202 D.24953 ] [202])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 630 629 631 61 (set (reg:SI 5 di [orig:203 D.24953 ] [203])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 631 630 632 61 (parallel [
            (set (reg:DI 4 si [593])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:353 221 {*adddi_1}
     (nil))
(insn 632 631 633 61 (set (reg:DI 0 ax [594])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:353 89 {*movdi_internal}
     (nil))
(insn 633 632 634 61 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:201 D.24953 ] [201])) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 634 633 635 61 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:202 D.24953 ] [202])) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 635 634 636 61 (set (reg:DI 2 cx)
        (const_int 102 [0x66])) ge2fitman_read_procpar.cpp:353 89 {*movdi_internal}
     (nil))
(insn 636 635 638 61 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:203 D.24953 ] [203])) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 638 636 639 61 (set (reg:DI 5 di)
        (reg:DI 0 ax [594])) ge2fitman_read_procpar.cpp:353 89 {*movdi_internal}
     (nil))
(call_insn 639 638 640 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:353 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 640 639 641 61 (set (reg:SI 0 ax [orig:204 D.24953 ] [204])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:353 90 {*movsi_internal}
     (nil))
(insn 641 640 642 61 (parallel [
            (set (reg:SI 0 ax [595])
                (lshiftrt:SI (reg:SI 0 ax [orig:204 D.24953 ] [204])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:351 529 {*lshrsi3_1}
     (nil))
(insn 642 641 643 61 (set (reg:QI 0 ax [orig:205 D.24954 ] [205])
        (reg:QI 0 ax [595])) ge2fitman_read_procpar.cpp:351 93 {*movqi_internal}
     (nil))
(insn 643 642 644 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:205 D.24954 ] [205])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:351 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 644 643 645 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) ge2fitman_read_procpar.cpp:351 596 {*jcc_1}
     (nil)
 -> 683)
;;  succ:       62 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 645 644 646 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 2051 62 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:354 90 {*movsi_internal}
     (nil))
(jump_insn 2051 646 2052 62 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:354 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2052 2051 649)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 206 207 596
(code_label 649 2052 650 63 34 "" [1 uses])
(note 650 649 651 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 63 (set (reg/f:DI 0 ax [596])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 652 651 653 63 (parallel [
            (set (reg/f:DI 0 ax [orig:206 D.24957 ] [206])
                (plus:DI (reg/f:DI 0 ax [596])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:357 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 653 652 654 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 654 653 655 63 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:206 D.24957 ] [206])) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(call_insn/i 655 654 656 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:357 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 656 655 657 63 (set (reg:SI 0 ax [orig:207 D.24953 ] [207])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:357 90 {*movsi_internal}
     (nil))
(insn 657 656 658 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:207 D.24953 ] [207])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:357 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 658 657 659 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) ge2fitman_read_procpar.cpp:357 596 {*jcc_1}
     (nil)
 -> 683)
;;  succ:       64 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 208 209 210 211 212 213 597 598 599 600
(note 659 658 660 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 64 (set (reg/f:DI 0 ax [597])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:361 89 {*movdi_internal}
     (nil))
(insn 661 660 662 64 (set (reg:QI 0 ax [orig:208 D.24954 ] [208])
        (mem:QI (reg/f:DI 0 ax [597]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:361 93 {*movqi_internal}
     (nil))
(insn 662 661 663 64 (set (reg:SI 1 dx [orig:209 D.24953 ] [209])
        (zero_extend:SI (reg:QI 0 ax [orig:208 D.24954 ] [208]))) ge2fitman_read_procpar.cpp:361 138 {*zero_extendqisi2}
     (nil))
(insn 663 662 664 64 (set (reg:SI 2 cx [orig:210 D.24953 ] [210])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 664 663 665 64 (set (reg:SI 5 di [orig:211 D.24953 ] [211])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 665 664 666 64 (parallel [
            (set (reg:DI 4 si [598])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -150 [0xffffffffffffff6a])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:361 221 {*adddi_1}
     (nil))
(insn 666 665 667 64 (set (reg:DI 0 ax [599])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:361 89 {*movdi_internal}
     (nil))
(insn 667 666 668 64 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:209 D.24953 ] [209])) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 668 667 669 64 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:210 D.24953 ] [210])) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 669 668 670 64 (set (reg:DI 2 cx)
        (const_int 102 [0x66])) ge2fitman_read_procpar.cpp:361 89 {*movdi_internal}
     (nil))
(insn 670 669 672 64 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:211 D.24953 ] [211])) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 672 670 673 64 (set (reg:DI 5 di)
        (reg:DI 0 ax [599])) ge2fitman_read_procpar.cpp:361 89 {*movdi_internal}
     (nil))
(call_insn 673 672 674 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:361 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 674 673 675 64 (set (reg:SI 0 ax [orig:212 D.24953 ] [212])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:361 90 {*movsi_internal}
     (nil))
(insn 675 674 676 64 (parallel [
            (set (reg:SI 0 ax [600])
                (lshiftrt:SI (reg:SI 0 ax [orig:212 D.24953 ] [212])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:359 529 {*lshrsi3_1}
     (nil))
(insn 676 675 677 64 (set (reg:QI 0 ax [orig:213 D.24954 ] [213])
        (reg:QI 0 ax [600])) ge2fitman_read_procpar.cpp:359 93 {*movqi_internal}
     (nil))
(insn 677 676 678 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:213 D.24954 ] [213])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:359 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 678 677 679 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) ge2fitman_read_procpar.cpp:359 596 {*jcc_1}
     (nil)
 -> 683)
;;  succ:       65 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 679 678 680 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 2053 65 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:362 90 {*movsi_internal}
     (nil))
(jump_insn 2053 680 2054 65 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:362 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2054 2053 683)
;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              63
;;              64
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 214 215 216 217 218 219 220 221 222 223 601 602 603 604 605
(code_label 683 2054 684 66 35 "" [3 uses])
(note 684 683 685 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 66 (set (reg:HI 0 ax [orig:214 D.24958 ] [214])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:366 92 {*movhi_internal}
     (nil))
(insn 686 685 687 66 (set (reg:SI 1 dx [orig:215 D.24953 ] [215])
        (sign_extend:SI (reg:HI 0 ax [orig:214 D.24958 ] [214]))) ge2fitman_read_procpar.cpp:366 146 {extendhisi2}
     (nil))
(insn 687 686 688 66 (set (reg/f:DI 0 ax [601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:366 89 {*movdi_internal}
     (nil))
(insn 688 687 689 66 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [601])
                (const_int 324 [0x144])) [0 procpar_info_222(D)->num_points+0 S4 A32])
        (reg:SI 1 dx [orig:215 D.24953 ] [215])) ge2fitman_read_procpar.cpp:366 90 {*movsi_internal}
     (nil))
(insn 689 688 690 66 (set (reg:HI 0 ax [orig:216 D.24958 ] [216])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -150 [0xffffffffffffff6a])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:367 92 {*movhi_internal}
     (nil))
(insn 690 689 691 66 (set (reg:DI 1 dx [orig:217 D.24959 ] [217])
        (sign_extend:DI (reg:HI 0 ax [orig:216 D.24958 ] [216]))) ge2fitman_read_procpar.cpp:367 145 {extendhidi2}
     (nil))
(insn 691 690 692 66 (set (reg/f:DI 0 ax [602])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:367 89 {*movdi_internal}
     (nil))
(insn 692 691 693 66 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [602])
                (const_int 16 [0x10])) [0 main_header_177(D)->np.number+0 S8 A64])
        (reg:DI 1 dx [orig:217 D.24959 ] [217])) ge2fitman_read_procpar.cpp:367 89 {*movdi_internal}
     (nil))
(insn 693 692 694 66 (set (reg/f:DI 0 ax [603])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 694 693 695 66 (set (reg:SI 0 ax [orig:218 D.24953 ] [218])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [603])
                (const_int 324 [0x144])) [0 procpar_info_222(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 695 694 696 66 (set (reg:SI 1 dx [orig:219 D.24961 ] [219])
        (reg:SI 0 ax [orig:218 D.24953 ] [218])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 696 695 697 66 (set (reg/f:DI 0 ax [604])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 697 696 698 66 (set (reg:DI 0 ax [orig:220 D.24959 ] [220])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [604])
                (const_int 24 [0x18])) [0 main_header_177(D)->ebytes.number+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 698 697 699 66 (set (reg:SI 0 ax [orig:221 D.24961 ] [221])
        (reg:SI 0 ax [orig:220 D.24959 ] [220])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 699 698 700 66 (parallel [
            (set (reg:SI 0 ax [orig:222 D.24961 ] [222])
                (mult:SI (reg:SI 0 ax [orig:221 D.24961 ] [221])
                    (reg:SI 1 dx [orig:219 D.24961 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:368 306 {*mulsi3_1}
     (nil))
(insn 700 699 701 66 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [0 fid_set_size+0 S4 A32])
        (reg:SI 0 ax [orig:222 D.24961 ] [222])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 701 700 702 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b9523c58720 *.LC19>)) ge2fitman_read_procpar.cpp:434 89 {*movdi_internal}
     (nil))
(insn 702 701 703 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:434 93 {*movqi_internal}
     (nil))
(call_insn 703 702 704 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:434 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 704 703 705 66 (parallel [
            (set (reg:DI 0 ax [605])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:435 221 {*adddi_1}
     (nil))
(insn 705 704 706 66 (set (reg:DI 4 si)
        (reg:DI 0 ax [605])) ge2fitman_read_procpar.cpp:435 89 {*movdi_internal}
     (nil))
(insn 706 705 707 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b9523c587b8 *.LC20>)) ge2fitman_read_procpar.cpp:435 89 {*movdi_internal}
     (nil))
(insn 707 706 708 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:435 93 {*movqi_internal}
     (nil))
(call_insn 708 707 709 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("scanf") [flags 0x41]  <function_decl 0x2b95225db000 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:435 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 709 708 710 66 (set (reg:SI 0 ax [orig:223 D.24953 ] [223])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:437 90 {*movsi_internal}
     (nil))
(insn 710 709 711 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:223 D.24953 ] [223])
            (const_int 2 [0x2]))) ge2fitman_read_procpar.cpp:437 7 {*cmpsi_1}
     (nil))
(jump_insn 711 710 712 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 718)
            (pc))) ge2fitman_read_procpar.cpp:437 596 {*jcc_1}
     (nil)
 -> 718)
;;  succ:       67 (FALLTHRU)
;;              68
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 606
(note 712 711 713 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 67 (set (reg/f:DI 0 ax [606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:439 89 {*movdi_internal}
     (nil))
(insn 714 713 715 67 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [606])
                (const_int 12 [0xc])) [0 infile_struct_41(D)->total_data_size+0 S4 A32])
        (const_int 131072 [0x20000])) ge2fitman_read_procpar.cpp:439 90 {*movsi_internal}
     (nil))
(insn 715 714 2055 67 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_read_procpar.cpp:440 89 {*movdi_internal}
     (nil))
(jump_insn 2055 715 2056 67 (set (pc)
        (label_ref 738)) 636 {jump}
     (nil)
 -> 738)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2056 2055 718)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 224
(code_label 718 2056 719 68 36 "" [1 uses])
(note 719 718 720 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 720 719 721 68 (set (reg:SI 0 ax [orig:224 D.24953 ] [224])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:442 90 {*movsi_internal}
     (nil))
(insn 721 720 722 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:224 D.24953 ] [224])
            (const_int 8 [0x8]))) ge2fitman_read_procpar.cpp:442 7 {*cmpsi_1}
     (nil))
(jump_insn 722 721 723 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 729)
            (pc))) ge2fitman_read_procpar.cpp:442 596 {*jcc_1}
     (nil)
 -> 729)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 607
(note 723 722 724 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 725 69 (set (reg/f:DI 0 ax [607])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:444 89 {*movdi_internal}
     (nil))
(insn 725 724 726 69 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [607])
                (const_int 12 [0xc])) [0 infile_struct_41(D)->total_data_size+0 S4 A32])
        (const_int 262144 [0x40000])) ge2fitman_read_procpar.cpp:444 90 {*movsi_internal}
     (nil))
(insn 726 725 2057 69 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 145908 [0x239f4])) ge2fitman_read_procpar.cpp:446 89 {*movdi_internal}
     (nil))
(jump_insn 2057 726 2058 69 (set (pc)
        (label_ref 738)) 636 {jump}
     (nil)
 -> 738)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2058 2057 729)
;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 225
(code_label 729 2058 730 70 38 "" [1 uses])
(note 730 729 731 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 70 (set (reg:SI 0 ax [orig:225 D.24953 ] [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:448 90 {*movsi_internal}
     (nil))
(insn 732 731 733 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:225 D.24953 ] [225])
            (const_int 1 [0x1]))) ge2fitman_read_procpar.cpp:448 7 {*cmpsi_1}
     (nil))
(jump_insn 733 732 734 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 738)
            (pc))) ge2fitman_read_procpar.cpp:448 596 {*jcc_1}
     (nil)
 -> 738)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 608
(note 734 733 735 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 736 71 (set (reg/f:DI 0 ax [608])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:451 89 {*movdi_internal}
     (nil))
(insn 736 735 737 71 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [608])
                (const_int 12 [0xc])) [0 infile_struct_41(D)->total_data_size+0 S4 A32])
        (const_int 4202496 [0x402000])) ge2fitman_read_procpar.cpp:451 90 {*movsi_internal}
     (nil))
(insn 737 736 738 71 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_read_procpar.cpp:452 89 {*movdi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              67 [100.0%] 
;;              70
;;              69 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 628 629 630 631
(code_label 738 737 739 72 37 "" [3 uses])
(note 739 738 740 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 740 739 741 72 (set (reg/f:DI 0 ax [609])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:456 89 {*movdi_internal}
     (nil))
(insn 741 740 742 72 (set (reg:SI 0 ax [orig:226 D.24953 ] [226])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [609])
                (const_int 12 [0xc])) [0 infile_struct_41(D)->total_data_size+0 S4 A32])) ge2fitman_read_procpar.cpp:456 90 {*movsi_internal}
     (nil))
(insn 742 741 743 72 (set (reg/f:DI 1 dx [610])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:457 89 {*movdi_internal}
     (nil))
(insn 743 742 744 72 (set (reg:SI 1 dx [orig:227 D.24953 ] [227])
        (mem/j:SI (reg/f:DI 1 dx [610]) [0 infile_struct_41(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 744 743 2141 72 (parallel [
            (set (reg:SI 1 dx [orig:228 D.24953 ] [228])
                (plus:SI (reg:SI 1 dx [orig:227 D.24953 ] [227])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:457 220 {*addsi_1}
     (nil))
(insn 2141 744 745 72 (set (reg:SI 3 bx [orig:229 D.24953 ] [229])
        (reg:SI 1 dx [orig:228 D.24953 ] [228])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 745 2141 746 72 (parallel [
            (set (reg:SI 3 bx [orig:229 D.24953 ] [229])
                (mult:SI (reg:SI 3 bx [orig:229 D.24953 ] [229])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -108 [0xffffffffffffff94])) [0 fid_set_size+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:457 306 {*mulsi3_1}
     (nil))
(insn 746 745 747 72 (parallel [
            (set (reg:SI 0 ax [611])
                (div:SI (reg:SI 0 ax [orig:226 D.24953 ] [226])
                    (reg:SI 3 bx [orig:229 D.24953 ] [229])))
            (set (reg:SI 1 dx [612])
                (mod:SI (reg:SI 0 ax [orig:226 D.24953 ] [226])
                    (reg:SI 3 bx [orig:229 D.24953 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:456 338 {*divmodsi4}
     (nil))
(insn 747 746 748 72 (set (reg:SI 1 dx [orig:230 D.24953 ] [230])
        (reg:SI 0 ax [611])) ge2fitman_read_procpar.cpp:456 90 {*movsi_internal}
     (nil))
(insn 748 747 749 72 (set (reg/f:DI 0 ax [613])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:457 89 {*movdi_internal}
     (nil))
(insn 749 748 750 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [613])
                (const_int 508 [0x1fc])) [0 procpar_info_222(D)->num_channels+0 S4 A32])
        (reg:SI 1 dx [orig:230 D.24953 ] [230])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 750 749 751 72 (set (reg/f:DI 0 ax [614])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:459 89 {*movdi_internal}
     (nil))
(insn 751 750 752 72 (set (reg:SI 0 ax [orig:231 D.24953 ] [231])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [614])
                (const_int 508 [0x1fc])) [0 procpar_info_222(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:459 90 {*movsi_internal}
     (nil))
(insn 752 751 753 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:231 D.24953 ] [231])) ge2fitman_read_procpar.cpp:459 90 {*movsi_internal}
     (nil))
(insn 753 752 754 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b9523c58850 *.LC21>)) ge2fitman_read_procpar.cpp:459 89 {*movdi_internal}
     (nil))
(insn 754 753 755 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:459 93 {*movqi_internal}
     (nil))
(call_insn 755 754 756 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:459 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 756 755 757 72 (set (reg:SI 1 dx [orig:232 D.24953 ] [232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:461 90 {*movsi_internal}
     (nil))
(insn 757 756 758 72 (set (reg/f:DI 0 ax [615])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:461 89 {*movdi_internal}
     (nil))
(insn 758 757 759 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [615])
                (const_int 508 [0x1fc])) [0 procpar_info_222(D)->num_channels+0 S4 A32])
        (reg:SI 1 dx [orig:232 D.24953 ] [232])) ge2fitman_read_procpar.cpp:461 90 {*movsi_internal}
     (nil))
(insn 759 758 760 72 (set (reg:SI 0 ax [616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [0 fid_set_size+0 S4 A32])) ge2fitman_read_procpar.cpp:463 90 {*movsi_internal}
     (nil))
(insn 760 759 761 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [616])) ge2fitman_read_procpar.cpp:463 90 {*movsi_internal}
     (nil))
(insn 761 760 762 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b9523c588e8 *.LC22>)) ge2fitman_read_procpar.cpp:463 89 {*movdi_internal}
     (nil))
(insn 762 761 763 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:463 93 {*movqi_internal}
     (nil))
(call_insn 763 762 764 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:463 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 764 763 765 72 (set (reg/f:DI 0 ax [617])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:464 89 {*movdi_internal}
     (nil))
(insn 765 764 766 72 (set (reg:SI 0 ax [orig:233 D.24953 ] [233])
        (mem/j:SI (reg/f:DI 0 ax [617]) [0 infile_struct_41(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:464 90 {*movsi_internal}
     (nil))
(insn 766 765 767 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:233 D.24953 ] [233])) ge2fitman_read_procpar.cpp:464 90 {*movsi_internal}
     (nil))
(insn 767 766 768 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b9523c58980 *.LC23>)) ge2fitman_read_procpar.cpp:464 89 {*movdi_internal}
     (nil))
(insn 768 767 769 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:464 93 {*movqi_internal}
     (nil))
(call_insn 769 768 770 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:464 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 770 769 771 72 (set (reg/f:DI 0 ax [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:465 89 {*movdi_internal}
     (nil))
(insn 771 770 772 72 (set (reg:SI 0 ax [orig:234 D.24953 ] [234])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [618])
                (const_int 508 [0x1fc])) [0 procpar_info_222(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:465 90 {*movsi_internal}
     (nil))
(insn 772 771 773 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:234 D.24953 ] [234])) ge2fitman_read_procpar.cpp:465 90 {*movsi_internal}
     (nil))
(insn 773 772 774 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b9523c58850 *.LC21>)) ge2fitman_read_procpar.cpp:465 89 {*movdi_internal}
     (nil))
(insn 774 773 775 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:465 93 {*movqi_internal}
     (nil))
(call_insn 775 774 776 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x2b95225d6e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:465 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 776 775 777 72 (set (reg:DI 0 ax [619])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(insn 777 776 778 72 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:478 90 {*movsi_internal}
     (nil))
(insn 778 777 779 72 (set (reg:DI 4 si)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(insn 779 778 780 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [619])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(call_insn 780 779 781 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x2b952280d400 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:478 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 781 780 782 72 (set (reg:DI 0 ax [620])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 782 781 783 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [620])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(call_insn 783 782 784 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x2b952280d500 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:479 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 784 783 785 72 (set (reg:DI 0 ax [orig:235 D.24959 ] [235])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 785 784 786 72 (set (reg:SI 1 dx [orig:236 D.24953 ] [236])
        (reg:SI 0 ax [orig:235 D.24959 ] [235])) ge2fitman_read_procpar.cpp:479 90 {*movsi_internal}
     (nil))
(insn 786 785 787 72 (set (reg/f:DI 0 ax [621])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 787 786 788 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [621])
                (const_int 8 [0x8])) [0 infile_struct_41(D)->file_size+0 S4 A32])
        (reg:SI 1 dx [orig:236 D.24953 ] [236])) ge2fitman_read_procpar.cpp:479 90 {*movsi_internal}
     (nil))
(insn 788 787 789 72 (set (reg/f:DI 0 ax [622])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 789 788 790 72 (set (reg:DI 0 ax [orig:237 D.24959 ] [237])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [622])
                (const_int 24 [0x18])) [0 main_header_177(D)->ebytes.number+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 790 789 791 72 (parallel [
            (set (reg:DI 1 dx [orig:238 D.24959 ] [238])
                (ashift:DI (reg:DI 0 ax [orig:237 D.24959 ] [237])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:502 497 {*ashldi3_1}
     (nil))
(insn 791 790 792 72 (set (reg/f:DI 0 ax [623])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 792 791 793 72 (set (reg:SI 0 ax [orig:239 D.24953 ] [239])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [623])
                (const_int 324 [0x144])) [0 procpar_info_222(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:502 90 {*movsi_internal}
     (nil))
(insn 793 792 794 72 (set (reg:DI 0 ax [orig:240 D.24959 ] [240])
        (sign_extend:DI (reg:SI 0 ax [orig:239 D.24953 ] [239]))) ge2fitman_read_procpar.cpp:502 142 {*extendsidi2_rex64}
     (nil))
(insn 794 793 795 72 (parallel [
            (set (reg:DI 1 dx [orig:241 D.24959 ] [241])
                (mult:DI (reg:DI 1 dx [orig:238 D.24959 ] [238])
                    (reg:DI 0 ax [orig:240 D.24959 ] [240])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:502 307 {*muldi3_1}
     (nil))
(insn 795 794 796 72 (set (reg/f:DI 0 ax [624])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:503 89 {*movdi_internal}
     (nil))
(insn 796 795 797 72 (set (reg:SI 0 ax [orig:242 D.24953 ] [242])
        (mem/j:SI (reg/f:DI 0 ax [624]) [0 infile_struct_41(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:503 90 {*movsi_internal}
     (nil))
(insn 797 796 798 72 (set (reg:DI 0 ax [orig:243 D.24959 ] [243])
        (sign_extend:DI (reg:SI 0 ax [orig:242 D.24953 ] [242]))) ge2fitman_read_procpar.cpp:503 142 {*extendsidi2_rex64}
     (nil))
(insn 798 797 799 72 (parallel [
            (set (reg:DI 1 dx [orig:244 D.24959 ] [244])
                (mult:DI (reg:DI 1 dx [orig:241 D.24959 ] [241])
                    (reg:DI 0 ax [orig:243 D.24959 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:503 307 {*muldi3_1}
     (nil))
(insn 799 798 800 72 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:503 89 {*movdi_internal}
     (nil))
(insn 800 799 801 72 (set (reg:SI 0 ax [orig:245 D.24953 ] [245])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [625])
                (const_int 508 [0x1fc])) [0 procpar_info_222(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:503 90 {*movsi_internal}
     (nil))
(insn 801 800 802 72 (set (reg:DI 0 ax [orig:246 D.24959 ] [246])
        (sign_extend:DI (reg:SI 0 ax [orig:245 D.24953 ] [245]))) ge2fitman_read_procpar.cpp:503 142 {*extendsidi2_rex64}
     (nil))
(insn 802 801 806 72 (parallel [
            (set (reg:DI 1 dx [orig:247 D.24959 ] [247])
                (mult:DI (reg:DI 1 dx [orig:244 D.24959 ] [244])
                    (reg:DI 0 ax [orig:246 D.24959 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:503 307 {*muldi3_1}
     (nil))
(insn 806 802 807 72 (set (reg:DI 0 ax [629])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 header_size+0 S8 A64])) ge2fitman_read_procpar.cpp:504 89 {*movdi_internal}
     (nil))
(insn 807 806 808 72 (parallel [
            (set (reg:DI 0 ax [628])
                (plus:DI (reg:DI 0 ax [629])
                    (reg:DI 1 dx [orig:247 D.24959 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:504 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg:DI 1 dx [orig:247 D.24959 ] [247])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 header_size+0 S8 A64]))
        (nil)))
(insn 808 807 809 72 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 calc_filesize+0 S8 A64])
        (reg:DI 0 ax [628])) ge2fitman_read_procpar.cpp:504 89 {*movdi_internal}
     (nil))
(insn 809 808 810 72 (set (reg:SF 0 ax [630])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:550 129 {*movsf_internal}
     (nil))
(insn 810 809 811 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])
        (reg:SF 0 ax [630])) ge2fitman_read_procpar.cpp:550 129 {*movsf_internal}
     (nil))
(insn 811 810 812 72 (set (reg/f:DI 0 ax [631])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(insn 812 811 813 72 (parallel [
            (set (reg/f:DI 0 ax [orig:248 D.24957 ] [248])
                (plus:DI (reg/f:DI 0 ax [631])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:552 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 813 812 814 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(insn 814 813 815 72 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:248 D.24957 ] [248])) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(call_insn/i 815 814 816 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:552 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 816 815 817 72 (set (reg:SI 0 ax [orig:249 D.24953 ] [249])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:552 90 {*movsi_internal}
     (nil))
(insn 817 816 818 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:249 D.24953 ] [249])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:552 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 818 817 819 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 843)
            (pc))) ge2fitman_read_procpar.cpp:552 596 {*jcc_1}
     (nil)
 -> 843)
;;  succ:       73 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 250 251 252 253 254 255 632 633 634 635
(note 819 818 820 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 820 819 821 73 (set (reg/f:DI 0 ax [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:556 89 {*movdi_internal}
     (nil))
(insn 821 820 822 73 (set (reg:QI 0 ax [orig:250 D.24954 ] [250])
        (mem:QI (reg/f:DI 0 ax [632]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:556 93 {*movqi_internal}
     (nil))
(insn 822 821 823 73 (set (reg:SI 1 dx [orig:251 D.24953 ] [251])
        (zero_extend:SI (reg:QI 0 ax [orig:250 D.24954 ] [250]))) ge2fitman_read_procpar.cpp:556 138 {*zero_extendqisi2}
     (nil))
(insn 823 822 824 73 (set (reg:SI 2 cx [orig:252 D.24953 ] [252])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 824 823 825 73 (set (reg:SI 5 di [orig:253 D.24953 ] [253])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 825 824 826 73 (parallel [
            (set (reg:DI 4 si [633])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:556 221 {*adddi_1}
     (nil))
(insn 826 825 827 73 (set (reg:DI 0 ax [634])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:556 89 {*movdi_internal}
     (nil))
(insn 827 826 828 73 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:251 D.24953 ] [251])) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 828 827 829 73 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:252 D.24953 ] [252])) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 829 828 830 73 (set (reg:DI 2 cx)
        (const_int 368 [0x170])) ge2fitman_read_procpar.cpp:556 89 {*movdi_internal}
     (nil))
(insn 830 829 832 73 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:253 D.24953 ] [253])) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 832 830 833 73 (set (reg:DI 5 di)
        (reg:DI 0 ax [634])) ge2fitman_read_procpar.cpp:556 89 {*movdi_internal}
     (nil))
(call_insn 833 832 834 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:556 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 834 833 835 73 (set (reg:SI 0 ax [orig:254 D.24953 ] [254])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:556 90 {*movsi_internal}
     (nil))
(insn 835 834 836 73 (parallel [
            (set (reg:SI 0 ax [635])
                (lshiftrt:SI (reg:SI 0 ax [orig:254 D.24953 ] [254])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:554 529 {*lshrsi3_1}
     (nil))
(insn 836 835 837 73 (set (reg:QI 0 ax [orig:255 D.24954 ] [255])
        (reg:QI 0 ax [635])) ge2fitman_read_procpar.cpp:554 93 {*movqi_internal}
     (nil))
(insn 837 836 838 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:255 D.24954 ] [255])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:554 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 838 837 839 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) ge2fitman_read_procpar.cpp:554 596 {*jcc_1}
     (nil)
 -> 877)
;;  succ:       74 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 839 838 840 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 2059 74 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:557 90 {*movsi_internal}
     (nil))
(jump_insn 2059 840 2060 74 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:557 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2060 2059 843)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 256 257 636
(code_label 843 2060 844 75 39 "" [1 uses])
(note 844 843 845 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 75 (set (reg/f:DI 0 ax [636])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(insn 846 845 847 75 (parallel [
            (set (reg/f:DI 0 ax [orig:256 D.24957 ] [256])
                (plus:DI (reg/f:DI 0 ax [636])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:560 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 847 846 848 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(insn 848 847 849 75 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:256 D.24957 ] [256])) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(call_insn/i 849 848 850 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:560 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 850 849 851 75 (set (reg:SI 0 ax [orig:257 D.24953 ] [257])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:560 90 {*movsi_internal}
     (nil))
(insn 851 850 852 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:257 D.24953 ] [257])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:560 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 852 851 853 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) ge2fitman_read_procpar.cpp:560 596 {*jcc_1}
     (nil)
 -> 877)
;;  succ:       76 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 258 259 260 261 262 263 637 638 639 640
(note 853 852 854 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 76 (set (reg/f:DI 0 ax [637])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:563 89 {*movdi_internal}
     (nil))
(insn 855 854 856 76 (set (reg:QI 0 ax [orig:258 D.24954 ] [258])
        (mem:QI (reg/f:DI 0 ax [637]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:563 93 {*movqi_internal}
     (nil))
(insn 856 855 857 76 (set (reg:SI 1 dx [orig:259 D.24953 ] [259])
        (zero_extend:SI (reg:QI 0 ax [orig:258 D.24954 ] [258]))) ge2fitman_read_procpar.cpp:563 138 {*zero_extendqisi2}
     (nil))
(insn 857 856 858 76 (set (reg:SI 2 cx [orig:260 D.24953 ] [260])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 858 857 859 76 (set (reg:SI 5 di [orig:261 D.24953 ] [261])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 859 858 860 76 (parallel [
            (set (reg:DI 4 si [638])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:563 221 {*adddi_1}
     (nil))
(insn 860 859 861 76 (set (reg:DI 0 ax [639])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:563 89 {*movdi_internal}
     (nil))
(insn 861 860 862 76 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:259 D.24953 ] [259])) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 862 861 863 76 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:260 D.24953 ] [260])) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 863 862 864 76 (set (reg:DI 2 cx)
        (const_int 368 [0x170])) ge2fitman_read_procpar.cpp:563 89 {*movdi_internal}
     (nil))
(insn 864 863 866 76 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:261 D.24953 ] [261])) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 866 864 867 76 (set (reg:DI 5 di)
        (reg:DI 0 ax [639])) ge2fitman_read_procpar.cpp:563 89 {*movdi_internal}
     (nil))
(call_insn 867 866 868 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:563 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 868 867 869 76 (set (reg:SI 0 ax [orig:262 D.24953 ] [262])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:563 90 {*movsi_internal}
     (nil))
(insn 869 868 870 76 (parallel [
            (set (reg:SI 0 ax [640])
                (lshiftrt:SI (reg:SI 0 ax [orig:262 D.24953 ] [262])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:561 529 {*lshrsi3_1}
     (nil))
(insn 870 869 871 76 (set (reg:QI 0 ax [orig:263 D.24954 ] [263])
        (reg:QI 0 ax [640])) ge2fitman_read_procpar.cpp:561 93 {*movqi_internal}
     (nil))
(insn 871 870 872 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:263 D.24954 ] [263])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:561 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 872 871 873 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) ge2fitman_read_procpar.cpp:561 596 {*jcc_1}
     (nil)
 -> 877)
;;  succ:       77 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 873 872 874 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 2061 77 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:564 90 {*movsi_internal}
     (nil))
(jump_insn 2061 874 2062 77 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:564 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2062 2061 877)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              75
;;              76
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 264 641
(code_label 877 2062 878 78 40 "" [3 uses])
(note 878 877 879 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 78 (set (reg:SF 21 xmm0 [orig:264 D.24955 ] [264])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (nil))
(insn 880 879 881 78 (set (reg:SF 22 xmm1 [641])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 881 880 882 78 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:264 D.24955 ] [264])
            (reg:SF 22 xmm1 [641]))) ge2fitman_read_procpar.cpp:574 55 {*cmpiusf_sse}
     (nil))
(jump_insn 882 881 1997 78 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2007)
            (pc))) ge2fitman_read_procpar.cpp:574 596 {*jcc_1}
     (nil)
 -> 2007)
;;  succ:       80
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264
;; lr  def 	 17 [flags] 642
(note 1997 882 883 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 883 1997 884 79 (set (reg:SF 22 xmm1 [642])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 884 883 885 79 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:264 D.24955 ] [264])
            (reg:SF 22 xmm1 [642]))) ge2fitman_read_procpar.cpp:574 55 {*cmpiusf_sse}
     (nil))
(jump_insn 885 884 2007 79 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2063)
            (pc))) ge2fitman_read_procpar.cpp:574 596 {*jcc_1}
     (nil)
 -> 2063)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;;              78
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 265 266 643
(code_label 2007 885 889 80 83 "" [1 uses])
(note 889 2007 890 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 80 (set (reg:SF 22 xmm1 [orig:265 D.24955 ] [265])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (nil))
(insn 891 890 892 80 (set (reg:SF 21 xmm0 [643])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC24") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 892 891 2127 80 (set (reg:SF 21 xmm0 [orig:266 D.24955 ] [266])
        (div:SF (reg:SF 21 xmm0 [orig:266 D.24955 ] [266])
            (reg:SF 22 xmm1 [orig:265 D.24955 ] [265]))) ge2fitman_read_procpar.cpp:575 782 {*fop_sf_1_sse}
     (nil))
(insn 2127 892 893 80 (set (reg:SF 0 ax [orig:266 D.24955 ] [266])
        (reg:SF 21 xmm0 [orig:266 D.24955 ] [266])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (nil))
(insn 893 2127 2064 80 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])
        (reg:SF 0 ax [orig:266 D.24955 ] [266])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (nil))
(jump_insn 2064 893 2065 80 (set (pc)
        (label_ref 911)) 636 {jump}
     (nil)
 -> 911)
;;  succ:       82 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2065 2064 2063)
;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 267 268 644 645
(code_label 2063 2065 897 81 85 "" [1 uses])
(note 897 2063 898 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 898 897 899 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2b9523c58a18 *.LC25>)) ge2fitman_read_procpar.cpp:577 89 {*movdi_internal}
     (nil))
(call_insn 899 898 900 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b95225d9900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:577 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 900 899 901 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2b9523c58ab0 *.LC26>)) ge2fitman_read_procpar.cpp:578 89 {*movdi_internal}
     (nil))
(call_insn 901 900 902 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b95225d9900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:578 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 902 901 903 81 (parallel [
            (set (reg:DI 0 ax [644])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:579 221 {*adddi_1}
     (nil))
(insn 903 902 904 81 (set (reg:DI 4 si)
        (reg:DI 0 ax [644])) ge2fitman_read_procpar.cpp:579 89 {*movdi_internal}
     (nil))
(insn 904 903 905 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2b9523c58b48 *.LC27>)) ge2fitman_read_procpar.cpp:579 89 {*movdi_internal}
     (nil))
(insn 905 904 906 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:579 93 {*movqi_internal}
     (nil))
(call_insn 906 905 907 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("scanf") [flags 0x41]  <function_decl 0x2b95225db000 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:579 649 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 907 906 908 81 (set (reg:SF 22 xmm1 [orig:267 D.24955 ] [267])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 dwellin+0 S4 A64])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (nil))
(insn 908 907 909 81 (set (reg:SF 21 xmm0 [645])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC24") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 909 908 2129 81 (set (reg:SF 21 xmm0 [orig:268 D.24955 ] [268])
        (div:SF (reg:SF 21 xmm0 [orig:268 D.24955 ] [268])
            (reg:SF 22 xmm1 [orig:267 D.24955 ] [267]))) ge2fitman_read_procpar.cpp:580 782 {*fop_sf_1_sse}
     (nil))
(insn 2129 909 910 81 (set (reg:SF 0 ax [orig:268 D.24955 ] [268])
        (reg:SF 21 xmm0 [orig:268 D.24955 ] [268])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (nil))
(insn 910 2129 911 81 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])
        (reg:SF 0 ax [orig:268 D.24955 ] [268])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              80 [100.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 269 270 271 272 273 274 646 647 648
(code_label 911 910 912 82 43 "" [1 uses])
(note 912 911 913 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 82 (set (reg/f:DI 0 ax [646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:588 89 {*movdi_internal}
     (nil))
(insn 914 913 915 82 (set (reg:SI 0 ax [orig:269 D.24953 ] [269])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [646])
                (const_int 324 [0x144])) [0 procpar_info_222(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:588 90 {*movsi_internal}
     (nil))
(insn 915 914 916 82 (set (reg:SF 21 xmm0 [orig:270 D.24955 ] [270])
        (float:SF (reg:SI 0 ax [orig:269 D.24953 ] [269]))) ge2fitman_read_procpar.cpp:588 199 {*floatsisf2_sse}
     (nil))
(insn 916 915 917 82 (set (reg:SF 22 xmm1 [orig:271 D.24955 ] [271])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:588 129 {*movsf_internal}
     (nil))
(insn 917 916 2131 82 (set (reg:SF 21 xmm0 [orig:272 D.24955 ] [272])
        (mult:SF (reg:SF 21 xmm0 [orig:272 D.24955 ] [272])
            (reg:SF 22 xmm1 [orig:271 D.24955 ] [271]))) ge2fitman_read_procpar.cpp:588 775 {*fop_sf_comm_sse}
     (nil))
(insn 2131 917 918 82 (set (reg:SF 0 ax [orig:272 D.24955 ] [272])
        (reg:SF 21 xmm0 [orig:272 D.24955 ] [272])) ge2fitman_read_procpar.cpp:588 129 {*movsf_internal}
     (nil))
(insn 918 2131 919 82 (set (reg/f:DI 1 dx [647])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:588 89 {*movdi_internal}
     (nil))
(insn 919 918 920 82 (set (mem/j:SF (reg/f:DI 1 dx [647]) [0 procpar_info_222(D)->acquision_time+0 S4 A64])
        (reg:SF 0 ax [orig:272 D.24955 ] [272])) ge2fitman_read_procpar.cpp:588 129 {*movsf_internal}
     (nil))
(insn 920 919 921 82 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:594 90 {*movsi_internal}
     (nil))
(insn 921 920 922 82 (set (reg/f:DI 0 ax [648])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(insn 922 921 923 82 (parallel [
            (set (reg/f:DI 0 ax [orig:273 D.24957 ] [273])
                (plus:DI (reg/f:DI 0 ax [648])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:596 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 923 922 924 82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(insn 924 923 925 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:273 D.24957 ] [273])) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(call_insn/i 925 924 926 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:596 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 926 925 927 82 (set (reg:SI 0 ax [orig:274 D.24953 ] [274])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:596 90 {*movsi_internal}
     (nil))
(insn 927 926 928 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:274 D.24953 ] [274])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:596 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 928 927 929 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 953)
            (pc))) ge2fitman_read_procpar.cpp:596 596 {*jcc_1}
     (nil)
 -> 953)
;;  succ:       83 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 275 276 277 278 279 280 649 650 651 652
(note 929 928 930 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 83 (set (reg/f:DI 0 ax [649])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:600 89 {*movdi_internal}
     (nil))
(insn 931 930 932 83 (set (reg:QI 0 ax [orig:275 D.24954 ] [275])
        (mem:QI (reg/f:DI 0 ax [649]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:600 93 {*movqi_internal}
     (nil))
(insn 932 931 933 83 (set (reg:SI 1 dx [orig:276 D.24953 ] [276])
        (zero_extend:SI (reg:QI 0 ax [orig:275 D.24954 ] [275]))) ge2fitman_read_procpar.cpp:600 138 {*zero_extendqisi2}
     (nil))
(insn 933 932 934 83 (set (reg:SI 2 cx [orig:277 D.24953 ] [277])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 934 933 935 83 (set (reg:SI 5 di [orig:278 D.24953 ] [278])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 935 934 936 83 (parallel [
            (set (reg:DI 4 si [650])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:600 221 {*adddi_1}
     (nil))
(insn 936 935 937 83 (set (reg:DI 0 ax [651])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:600 89 {*movdi_internal}
     (nil))
(insn 937 936 938 83 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:276 D.24953 ] [276])) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 938 937 939 83 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:277 D.24953 ] [277])) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 939 938 940 83 (set (reg:DI 2 cx)
        (const_int 424 [0x1a8])) ge2fitman_read_procpar.cpp:600 89 {*movdi_internal}
     (nil))
(insn 940 939 942 83 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:278 D.24953 ] [278])) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 942 940 943 83 (set (reg:DI 5 di)
        (reg:DI 0 ax [651])) ge2fitman_read_procpar.cpp:600 89 {*movdi_internal}
     (nil))
(call_insn 943 942 944 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:600 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 944 943 945 83 (set (reg:SI 0 ax [orig:279 D.24953 ] [279])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:600 90 {*movsi_internal}
     (nil))
(insn 945 944 946 83 (parallel [
            (set (reg:SI 0 ax [652])
                (lshiftrt:SI (reg:SI 0 ax [orig:279 D.24953 ] [279])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:598 529 {*lshrsi3_1}
     (nil))
(insn 946 945 947 83 (set (reg:QI 0 ax [orig:280 D.24954 ] [280])
        (reg:QI 0 ax [652])) ge2fitman_read_procpar.cpp:598 93 {*movqi_internal}
     (nil))
(insn 947 946 948 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:280 D.24954 ] [280])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:598 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 948 947 949 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) ge2fitman_read_procpar.cpp:598 596 {*jcc_1}
     (nil)
 -> 987)
;;  succ:       84 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 949 948 950 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 2066 84 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:601 90 {*movsi_internal}
     (nil))
(jump_insn 2066 950 2067 84 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:601 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2067 2066 953)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 281 282 653
(code_label 953 2067 954 85 44 "" [1 uses])
(note 954 953 955 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 85 (set (reg/f:DI 0 ax [653])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(insn 956 955 957 85 (parallel [
            (set (reg/f:DI 0 ax [orig:281 D.24957 ] [281])
                (plus:DI (reg/f:DI 0 ax [653])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:604 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 957 956 958 85 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(insn 958 957 959 85 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:281 D.24957 ] [281])) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(call_insn/i 959 958 960 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:604 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 960 959 961 85 (set (reg:SI 0 ax [orig:282 D.24953 ] [282])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:604 90 {*movsi_internal}
     (nil))
(insn 961 960 962 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:282 D.24953 ] [282])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:604 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 962 961 963 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) ge2fitman_read_procpar.cpp:604 596 {*jcc_1}
     (nil)
 -> 987)
;;  succ:       86 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 283 284 285 286 287 288 654 655 656 657
(note 963 962 964 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 86 (set (reg/f:DI 0 ax [654])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:607 89 {*movdi_internal}
     (nil))
(insn 965 964 966 86 (set (reg:QI 0 ax [orig:283 D.24954 ] [283])
        (mem:QI (reg/f:DI 0 ax [654]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:607 93 {*movqi_internal}
     (nil))
(insn 966 965 967 86 (set (reg:SI 1 dx [orig:284 D.24953 ] [284])
        (zero_extend:SI (reg:QI 0 ax [orig:283 D.24954 ] [283]))) ge2fitman_read_procpar.cpp:607 138 {*zero_extendqisi2}
     (nil))
(insn 967 966 968 86 (set (reg:SI 2 cx [orig:285 D.24953 ] [285])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 968 967 969 86 (set (reg:SI 5 di [orig:286 D.24953 ] [286])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 969 968 970 86 (parallel [
            (set (reg:DI 4 si [655])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:607 221 {*adddi_1}
     (nil))
(insn 970 969 971 86 (set (reg:DI 0 ax [656])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:607 89 {*movdi_internal}
     (nil))
(insn 971 970 972 86 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:284 D.24953 ] [284])) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 972 971 973 86 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:285 D.24953 ] [285])) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 973 972 974 86 (set (reg:DI 2 cx)
        (const_int 424 [0x1a8])) ge2fitman_read_procpar.cpp:607 89 {*movdi_internal}
     (nil))
(insn 974 973 976 86 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:286 D.24953 ] [286])) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 976 974 977 86 (set (reg:DI 5 di)
        (reg:DI 0 ax [656])) ge2fitman_read_procpar.cpp:607 89 {*movdi_internal}
     (nil))
(call_insn 977 976 978 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:607 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 978 977 979 86 (set (reg:SI 0 ax [orig:287 D.24953 ] [287])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:607 90 {*movsi_internal}
     (nil))
(insn 979 978 980 86 (parallel [
            (set (reg:SI 0 ax [657])
                (lshiftrt:SI (reg:SI 0 ax [orig:287 D.24953 ] [287])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:605 529 {*lshrsi3_1}
     (nil))
(insn 980 979 981 86 (set (reg:QI 0 ax [orig:288 D.24954 ] [288])
        (reg:QI 0 ax [657])) ge2fitman_read_procpar.cpp:605 93 {*movqi_internal}
     (nil))
(insn 981 980 982 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:288 D.24954 ] [288])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:605 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 982 981 983 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) ge2fitman_read_procpar.cpp:605 596 {*jcc_1}
     (nil)
 -> 987)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 983 982 984 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 984 983 2068 87 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:608 90 {*movsi_internal}
     (nil))
(jump_insn 2068 984 2069 87 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:608 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2069 2068 987)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83
;;              85
;;              86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 289 290 291 292 658 659 660 661 662
(code_label 987 2069 988 88 45 "" [3 uses])
(note 988 987 989 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 989 988 990 88 (set (reg:SI 0 ax [orig:289 D.24953 ] [289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:612 90 {*movsi_internal}
     (nil))
(insn 990 989 2132 88 (set (reg:DF 23 xmm2 [orig:290 D.24956 ] [290])
        (float:DF (reg:SI 0 ax [orig:289 D.24953 ] [289]))) ge2fitman_read_procpar.cpp:612 201 {*floatsidf2_sse}
     (nil))
(insn 2132 990 991 88 (set (reg:DF 0 ax [orig:290 D.24956 ] [290])
        (reg:DF 23 xmm2 [orig:290 D.24956 ] [290])) ge2fitman_read_procpar.cpp:612 128 {*movdf_internal}
     (nil))
(insn 991 2132 992 88 (set (reg/f:DI 1 dx [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:612 89 {*movdi_internal}
     (nil))
(insn 992 991 993 88 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [658])
                (const_int 328 [0x148])) [0 procpar_info_222(D)->main_frequency+0 S8 A64])
        (reg:DF 0 ax [orig:290 D.24956 ] [290])) ge2fitman_read_procpar.cpp:612 128 {*movdf_internal}
     (nil))
(insn 993 992 994 88 (set (reg/f:DI 1 dx [659])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:620 89 {*movdi_internal}
     (nil))
(insn 994 993 995 88 (set (reg:DF 0 ax [660])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC28") [flags 0x2]) [0  S8 A64])) ge2fitman_read_procpar.cpp:620 128 {*movdf_internal}
     (nil))
(insn 995 994 996 88 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [659])
                (const_int 336 [0x150])) [0 procpar_info_222(D)->offset_frequency+0 S8 A64])
        (reg:DF 0 ax [660])) ge2fitman_read_procpar.cpp:620 128 {*movdf_internal}
     (nil))
(insn 996 995 997 88 (set (reg:SF 0 ax [661])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:624 129 {*movsf_internal}
     (nil))
(insn 997 996 998 88 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])
        (reg:SF 0 ax [661])) ge2fitman_read_procpar.cpp:624 129 {*movsf_internal}
     (nil))
(insn 998 997 999 88 (set (reg/f:DI 0 ax [662])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(insn 999 998 1000 88 (parallel [
            (set (reg/f:DI 0 ax [orig:291 D.24957 ] [291])
                (plus:DI (reg/f:DI 0 ax [662])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:626 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1000 999 1001 88 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(insn 1001 1000 1002 88 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:291 D.24957 ] [291])) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(call_insn/i 1002 1001 1003 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:626 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1003 1002 1004 88 (set (reg:SI 0 ax [orig:292 D.24953 ] [292])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:626 90 {*movsi_internal}
     (nil))
(insn 1004 1003 1005 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:292 D.24953 ] [292])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:626 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1005 1004 1006 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1030)
            (pc))) ge2fitman_read_procpar.cpp:626 596 {*jcc_1}
     (nil)
 -> 1030)
;;  succ:       89 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 293 294 295 296 297 298 663 664 665 666
(note 1006 1005 1007 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1007 1006 1008 89 (set (reg/f:DI 0 ax [663])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:630 89 {*movdi_internal}
     (nil))
(insn 1008 1007 1009 89 (set (reg:QI 0 ax [orig:293 D.24954 ] [293])
        (mem:QI (reg/f:DI 0 ax [663]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:630 93 {*movqi_internal}
     (nil))
(insn 1009 1008 1010 89 (set (reg:SI 1 dx [orig:294 D.24953 ] [294])
        (zero_extend:SI (reg:QI 0 ax [orig:293 D.24954 ] [293]))) ge2fitman_read_procpar.cpp:630 138 {*zero_extendqisi2}
     (nil))
(insn 1010 1009 1011 89 (set (reg:SI 2 cx [orig:295 D.24953 ] [295])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 89 (set (reg:SI 5 di [orig:296 D.24953 ] [296])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 89 (parallel [
            (set (reg:DI 4 si [664])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:630 221 {*adddi_1}
     (nil))
(insn 1013 1012 1014 89 (set (reg:DI 0 ax [665])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:630 89 {*movdi_internal}
     (nil))
(insn 1014 1013 1015 89 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:294 D.24953 ] [294])) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1015 1014 1016 89 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:295 D.24953 ] [295])) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1016 1015 1017 89 (set (reg:DI 2 cx)
        (const_int 232 [0xe8])) ge2fitman_read_procpar.cpp:630 89 {*movdi_internal}
     (nil))
(insn 1017 1016 1019 89 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:296 D.24953 ] [296])) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1019 1017 1020 89 (set (reg:DI 5 di)
        (reg:DI 0 ax [665])) ge2fitman_read_procpar.cpp:630 89 {*movdi_internal}
     (nil))
(call_insn 1020 1019 1021 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:630 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1021 1020 1022 89 (set (reg:SI 0 ax [orig:297 D.24953 ] [297])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:630 90 {*movsi_internal}
     (nil))
(insn 1022 1021 1023 89 (parallel [
            (set (reg:SI 0 ax [666])
                (lshiftrt:SI (reg:SI 0 ax [orig:297 D.24953 ] [297])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:628 529 {*lshrsi3_1}
     (nil))
(insn 1023 1022 1024 89 (set (reg:QI 0 ax [orig:298 D.24954 ] [298])
        (reg:QI 0 ax [666])) ge2fitman_read_procpar.cpp:628 93 {*movqi_internal}
     (nil))
(insn 1024 1023 1025 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:298 D.24954 ] [298])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:628 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1025 1024 1026 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1064)
            (pc))) ge2fitman_read_procpar.cpp:628 596 {*jcc_1}
     (nil)
 -> 1064)
;;  succ:       90 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1026 1025 1027 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 2070 90 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:631 90 {*movsi_internal}
     (nil))
(jump_insn 2070 1027 2071 90 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:631 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2071 2070 1030)
;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 299 300 667
(code_label 1030 2071 1031 91 46 "" [1 uses])
(note 1031 1030 1032 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1032 1031 1033 91 (set (reg/f:DI 0 ax [667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(insn 1033 1032 1034 91 (parallel [
            (set (reg/f:DI 0 ax [orig:299 D.24957 ] [299])
                (plus:DI (reg/f:DI 0 ax [667])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:634 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1034 1033 1035 91 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 91 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:299 D.24957 ] [299])) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(call_insn/i 1036 1035 1037 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:634 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1037 1036 1038 91 (set (reg:SI 0 ax [orig:300 D.24953 ] [300])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:634 90 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:300 D.24953 ] [300])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:634 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1039 1038 1040 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1064)
            (pc))) ge2fitman_read_procpar.cpp:634 596 {*jcc_1}
     (nil)
 -> 1064)
;;  succ:       92 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 301 302 303 304 305 306 668 669 670 671
(note 1040 1039 1041 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1041 1040 1042 92 (set (reg/f:DI 0 ax [668])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:637 89 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 92 (set (reg:QI 0 ax [orig:301 D.24954 ] [301])
        (mem:QI (reg/f:DI 0 ax [668]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:637 93 {*movqi_internal}
     (nil))
(insn 1043 1042 1044 92 (set (reg:SI 1 dx [orig:302 D.24953 ] [302])
        (zero_extend:SI (reg:QI 0 ax [orig:301 D.24954 ] [301]))) ge2fitman_read_procpar.cpp:637 138 {*zero_extendqisi2}
     (nil))
(insn 1044 1043 1045 92 (set (reg:SI 2 cx [orig:303 D.24953 ] [303])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1045 1044 1046 92 (set (reg:SI 5 di [orig:304 D.24953 ] [304])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1046 1045 1047 92 (parallel [
            (set (reg:DI 4 si [669])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:637 221 {*adddi_1}
     (nil))
(insn 1047 1046 1048 92 (set (reg:DI 0 ax [670])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:637 89 {*movdi_internal}
     (nil))
(insn 1048 1047 1049 92 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:302 D.24953 ] [302])) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 92 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:303 D.24953 ] [303])) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1050 1049 1051 92 (set (reg:DI 2 cx)
        (const_int 232 [0xe8])) ge2fitman_read_procpar.cpp:637 89 {*movdi_internal}
     (nil))
(insn 1051 1050 1053 92 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:304 D.24953 ] [304])) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1053 1051 1054 92 (set (reg:DI 5 di)
        (reg:DI 0 ax [670])) ge2fitman_read_procpar.cpp:637 89 {*movdi_internal}
     (nil))
(call_insn 1054 1053 1055 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:637 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1055 1054 1056 92 (set (reg:SI 0 ax [orig:305 D.24953 ] [305])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:637 90 {*movsi_internal}
     (nil))
(insn 1056 1055 1057 92 (parallel [
            (set (reg:SI 0 ax [671])
                (lshiftrt:SI (reg:SI 0 ax [orig:305 D.24953 ] [305])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:635 529 {*lshrsi3_1}
     (nil))
(insn 1057 1056 1058 92 (set (reg:QI 0 ax [orig:306 D.24954 ] [306])
        (reg:QI 0 ax [671])) ge2fitman_read_procpar.cpp:635 93 {*movqi_internal}
     (nil))
(insn 1058 1057 1059 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:306 D.24954 ] [306])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:635 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1059 1058 1060 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1064)
            (pc))) ge2fitman_read_procpar.cpp:635 596 {*jcc_1}
     (nil)
 -> 1064)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1060 1059 1061 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1061 1060 2072 93 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:638 90 {*movsi_internal}
     (nil))
(jump_insn 2072 1061 2073 93 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:638 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2073 2072 1064)
;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89
;;              91
;;              92
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 307 308 309 310 311 312 672 673 674 675 676
(code_label 1064 2073 1065 94 47 "" [3 uses])
(note 1065 1064 1066 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1066 1065 2133 94 (set (reg:SF 0 ax [orig:307 D.24955 ] [307])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:642 129 {*movsf_internal}
     (nil))
(insn 2133 1066 1067 94 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [0 %sfp+-196 S4 A32])
        (reg:SF 0 ax [orig:307 D.24955 ] [307])) ge2fitman_read_procpar.cpp:642 129 {*movsf_internal}
     (nil))
(insn 1067 2133 1068 94 (set (reg:SI 1 dx [orig:308 D.24953 ] [308])
        (fix:SI (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -212 [0xffffffffffffff2c])) [0 %sfp+-196 S4 A32]))) ge2fitman_read_procpar.cpp:642 170 {fix_truncsfsi_sse}
     (nil))
(insn 1068 1067 1069 94 (set (reg/f:DI 0 ax [672])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:642 89 {*movdi_internal}
     (nil))
(insn 1069 1068 1070 94 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [672])
                (const_int 320 [0x140])) [0 procpar_info_222(D)->num_transients+0 S4 A64])
        (reg:SI 1 dx [orig:308 D.24953 ] [308])) ge2fitman_read_procpar.cpp:642 90 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 94 (set (reg:SI 5 di [orig:309 D.24953 ] [309])
        (const_int 36 [0x24])) ge2fitman_read_procpar.cpp:649 90 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 94 (set (reg/f:DI 0 ax [673])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:649 89 {*movdi_internal}
     (nil))
(insn 1072 1071 1073 94 (parallel [
            (set (reg/f:DI 4 si [orig:310 D.24962 ] [310])
                (plus:DI (reg/f:DI 0 ax [673])
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:649 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 404 [0x194]))
        (nil)))
(insn 1073 1072 1074 94 (set (reg:DI 1 dx [674])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 hospname_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:649 89 {*movdi_internal}
     (nil))
(insn 1074 1073 1075 94 (set (reg:DI 0 ax [675])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:649 89 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 94 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:649 90 {*movsi_internal}
     (nil))
(insn 1076 1075 1077 94 (set (reg:SI 37 r8)
        (const_int 33 [0x21])) ge2fitman_read_procpar.cpp:649 90 {*movsi_internal}
     (nil))
(insn 1077 1076 1078 94 (set (reg:DI 2 cx)
        (reg:DI 1 dx [674])) ge2fitman_read_procpar.cpp:649 89 {*movdi_internal}
     (nil))
(insn 1078 1077 1080 94 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:309 D.24953 ] [309])) ge2fitman_read_procpar.cpp:649 90 {*movsi_internal}
     (nil))
(insn 1080 1078 1081 94 (set (reg:DI 5 di)
        (reg:DI 0 ax [675])) ge2fitman_read_procpar.cpp:649 89 {*movdi_internal}
     (nil))
(call_insn 1081 1080 1082 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:649 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1082 1081 1083 94 (set (reg:SI 0 ax [orig:311 D.24953 ] [311])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:649 90 {*movsi_internal}
     (nil))
(insn 1083 1082 1084 94 (parallel [
            (set (reg:SI 0 ax [676])
                (lshiftrt:SI (reg:SI 0 ax [orig:311 D.24953 ] [311])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:647 529 {*lshrsi3_1}
     (nil))
(insn 1084 1083 1085 94 (set (reg:QI 0 ax [orig:312 D.24954 ] [312])
        (reg:QI 0 ax [676])) ge2fitman_read_procpar.cpp:647 93 {*movqi_internal}
     (nil))
(insn 1085 1084 1086 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:312 D.24954 ] [312])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:647 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1086 1085 1087 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1091)
            (pc))) ge2fitman_read_procpar.cpp:647 596 {*jcc_1}
     (nil)
 -> 1091)
;;  succ:       95 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1087 1086 1088 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1088 1087 2074 95 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:650 90 {*movsi_internal}
     (nil))
(jump_insn 2074 1088 2075 95 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:650 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2075 2074 1091)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 313 314 315 316 677 678 679 680
(code_label 1091 2075 1092 96 48 "" [1 uses])
(note 1092 1091 1093 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1093 1092 1094 96 (set (reg:SI 5 di [orig:313 D.24953 ] [313])
        (const_int 28 [0x1c])) ge2fitman_read_procpar.cpp:658 90 {*movsi_internal}
     (nil))
(insn 1094 1093 1095 96 (set (reg/f:DI 0 ax [677])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:658 89 {*movdi_internal}
     (nil))
(insn 1095 1094 1096 96 (parallel [
            (set (reg/f:DI 4 si [orig:314 D.24963 ] [314])
                (plus:DI (reg/f:DI 0 ax [677])
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:658 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 440 [0x1b8]))
        (nil)))
(insn 1096 1095 1097 96 (set (reg:DI 1 dx [678])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 patname_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:658 89 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 96 (set (reg:DI 0 ax [679])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:658 89 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 96 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:658 90 {*movsi_internal}
     (nil))
(insn 1099 1098 1100 96 (set (reg:SI 37 r8)
        (const_int 25 [0x19])) ge2fitman_read_procpar.cpp:658 90 {*movsi_internal}
     (nil))
(insn 1100 1099 1101 96 (set (reg:DI 2 cx)
        (reg:DI 1 dx [678])) ge2fitman_read_procpar.cpp:658 89 {*movdi_internal}
     (nil))
(insn 1101 1100 1103 96 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:313 D.24953 ] [313])) ge2fitman_read_procpar.cpp:658 90 {*movsi_internal}
     (nil))
(insn 1103 1101 1104 96 (set (reg:DI 5 di)
        (reg:DI 0 ax [679])) ge2fitman_read_procpar.cpp:658 89 {*movdi_internal}
     (nil))
(call_insn 1104 1103 1105 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:658 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1105 1104 1106 96 (set (reg:SI 0 ax [orig:315 D.24953 ] [315])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:658 90 {*movsi_internal}
     (nil))
(insn 1106 1105 1107 96 (parallel [
            (set (reg:SI 0 ax [680])
                (lshiftrt:SI (reg:SI 0 ax [orig:315 D.24953 ] [315])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:656 529 {*lshrsi3_1}
     (nil))
(insn 1107 1106 1108 96 (set (reg:QI 0 ax [orig:316 D.24954 ] [316])
        (reg:QI 0 ax [680])) ge2fitman_read_procpar.cpp:656 93 {*movqi_internal}
     (nil))
(insn 1108 1107 1109 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:316 D.24954 ] [316])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:656 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1109 1108 1110 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1114)
            (pc))) ge2fitman_read_procpar.cpp:656 596 {*jcc_1}
     (nil)
 -> 1114)
;;  succ:       97 (FALLTHRU)
;;              98
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1110 1109 1111 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 2076 97 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:659 90 {*movsi_internal}
     (nil))
(jump_insn 2076 1111 2077 97 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:659 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2077 2076 1114)
;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 317 318 319 320 681 682 683 684
(code_label 1114 2077 1115 98 49 "" [1 uses])
(note 1115 1114 1116 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1116 1115 1117 98 (set (reg:SI 5 di [orig:317 D.24953 ] [317])
        (const_int 40 [0x28])) ge2fitman_read_procpar.cpp:667 90 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 98 (set (reg/f:DI 0 ax [681])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:667 89 {*movdi_internal}
     (nil))
(insn 1118 1117 1119 98 (parallel [
            (set (reg/f:DI 4 si [orig:318 D.24964 ] [318])
                (plus:DI (reg/f:DI 0 ax [681])
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:667 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 468 [0x1d4]))
        (nil)))
(insn 1119 1118 1120 98 (set (reg:DI 1 dx [682])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 pulse_name_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:667 89 {*movdi_internal}
     (nil))
(insn 1120 1119 1121 98 (set (reg:DI 0 ax [683])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:667 89 {*movdi_internal}
     (nil))
(insn 1121 1120 1122 98 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:667 90 {*movsi_internal}
     (nil))
(insn 1122 1121 1123 98 (set (reg:SI 37 r8)
        (const_int 33 [0x21])) ge2fitman_read_procpar.cpp:667 90 {*movsi_internal}
     (nil))
(insn 1123 1122 1124 98 (set (reg:DI 2 cx)
        (reg:DI 1 dx [682])) ge2fitman_read_procpar.cpp:667 89 {*movdi_internal}
     (nil))
(insn 1124 1123 1126 98 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:317 D.24953 ] [317])) ge2fitman_read_procpar.cpp:667 90 {*movsi_internal}
     (nil))
(insn 1126 1124 1127 98 (set (reg:DI 5 di)
        (reg:DI 0 ax [683])) ge2fitman_read_procpar.cpp:667 89 {*movdi_internal}
     (nil))
(call_insn 1127 1126 1128 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:667 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1128 1127 1129 98 (set (reg:SI 0 ax [orig:319 D.24953 ] [319])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:667 90 {*movsi_internal}
     (nil))
(insn 1129 1128 1130 98 (parallel [
            (set (reg:SI 0 ax [684])
                (lshiftrt:SI (reg:SI 0 ax [orig:319 D.24953 ] [319])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:665 529 {*lshrsi3_1}
     (nil))
(insn 1130 1129 1131 98 (set (reg:QI 0 ax [orig:320 D.24954 ] [320])
        (reg:QI 0 ax [684])) ge2fitman_read_procpar.cpp:665 93 {*movqi_internal}
     (nil))
(insn 1131 1130 1132 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:320 D.24954 ] [320])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:665 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1132 1131 1133 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1137)
            (pc))) ge2fitman_read_procpar.cpp:665 596 {*jcc_1}
     (nil)
 -> 1137)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1133 1132 1134 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1134 1133 2078 99 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:668 90 {*movsi_internal}
     (nil))
(jump_insn 2078 1134 2079 99 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:668 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2079 2078 1137)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 321 322 323 324 325 326 685 686 687 688 689
(code_label 1137 2079 1138 100 50 "" [1 uses])
(note 1138 1137 1139 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1139 1138 1140 100 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 date_stamp+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:674 89 {*movdi_internal}
     (nil))
(insn 1140 1139 1141 100 (set (reg/f:DI 0 ax [685])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:677 89 {*movdi_internal}
     (nil))
(insn 1141 1140 1142 100 (set (reg:QI 0 ax [orig:321 D.24954 ] [321])
        (mem:QI (reg/f:DI 0 ax [685]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:677 93 {*movqi_internal}
     (nil))
(insn 1142 1141 1143 100 (set (reg:SI 2 cx [orig:322 D.24953 ] [322])
        (zero_extend:SI (reg:QI 0 ax [orig:321 D.24954 ] [321]))) ge2fitman_read_procpar.cpp:677 138 {*zero_extendqisi2}
     (nil))
(insn 1143 1142 1144 100 (set (reg:SI 37 r8 [orig:323 D.24953 ] [323])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:677 90 {*movsi_internal}
     (nil))
(insn 1144 1143 1145 100 (set (reg:SI 5 di [orig:324 D.24953 ] [324])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:677 90 {*movsi_internal}
     (nil))
(insn 1145 1144 1146 100 (set (reg:DI 1 dx [686])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 ex_datetime_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:677 89 {*movdi_internal}
     (nil))
(insn 1146 1145 1147 100 (parallel [
            (set (reg:DI 4 si [687])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:677 221 {*adddi_1}
     (nil))
(insn 1147 1146 1148 100 (set (reg:DI 0 ax [688])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:677 89 {*movdi_internal}
     (nil))
(insn 1148 1147 1150 100 (set (reg:SI 38 r9)
        (reg:SI 2 cx [orig:322 D.24953 ] [322])) ge2fitman_read_procpar.cpp:677 90 {*movsi_internal}
     (nil))
(insn 1150 1148 1151 100 (set (reg:DI 2 cx)
        (reg:DI 1 dx [686])) ge2fitman_read_procpar.cpp:677 89 {*movdi_internal}
     (nil))
(insn 1151 1150 1153 100 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:324 D.24953 ] [324])) ge2fitman_read_procpar.cpp:677 90 {*movsi_internal}
     (nil))
(insn 1153 1151 1154 100 (set (reg:DI 5 di)
        (reg:DI 0 ax [688])) ge2fitman_read_procpar.cpp:677 89 {*movdi_internal}
     (nil))
(call_insn 1154 1153 1155 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:677 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1155 1154 1156 100 (set (reg:SI 0 ax [orig:325 D.24953 ] [325])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:677 90 {*movsi_internal}
     (nil))
(insn 1156 1155 1157 100 (parallel [
            (set (reg:SI 0 ax [689])
                (lshiftrt:SI (reg:SI 0 ax [orig:325 D.24953 ] [325])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:675 529 {*lshrsi3_1}
     (nil))
(insn 1157 1156 1158 100 (set (reg:QI 0 ax [orig:326 D.24954 ] [326])
        (reg:QI 0 ax [689])) ge2fitman_read_procpar.cpp:675 93 {*movqi_internal}
     (nil))
(insn 1158 1157 1159 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:326 D.24954 ] [326])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:675 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1159 1158 1160 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1164)
            (pc))) ge2fitman_read_procpar.cpp:675 596 {*jcc_1}
     (nil)
 -> 1164)
;;  succ:       101 (FALLTHRU)
;;              102
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1160 1159 1161 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1161 1160 2080 101 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:678 90 {*movsi_internal}
     (nil))
(jump_insn 2080 1161 2081 101 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:678 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2081 2080 1164)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 327 328 329 330 331 332 333 334 335 336 690 691 692 693 694 695 696 697 698 699 700 701
(code_label 1164 2081 1165 102 51 "" [1 uses])
(note 1165 1164 1166 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1165 1167 102 (parallel [
            (set (reg:DI 0 ax [690])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:681 221 {*adddi_1}
     (nil))
(insn 1167 1166 1168 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [690])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn 1168 1167 1169 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x2b9522905700 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1169 1168 1170 102 (set (reg/f:DI 0 ax [orig:327 D.24965 ] [327])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1170 1169 1171 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:327 D.24965 ] [327])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn/i 1171 1170 1172 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b95225d0200 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1172 1171 1173 102 (set (reg:DI 0 ax [orig:328 D.24966 ] [328])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 102 (parallel [
            (set (reg:DI 3 bx [orig:329 D.24966 ] [329])
                (plus:DI (reg:DI 0 ax [orig:328 D.24966 ] [328])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:681 221 {*adddi_1}
     (nil))
(insn 1174 1173 1175 102 (parallel [
            (set (reg:DI 0 ax [691])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:680 221 {*adddi_1}
     (nil))
(insn 1175 1174 1176 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [691])) ge2fitman_read_procpar.cpp:680 89 {*movdi_internal}
     (nil))
(call_insn 1176 1175 1177 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x2b9522905700 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:680 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1177 1176 1178 102 (set (reg/f:DI 2 cx [orig:330 D.24965 ] [330])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:680 89 {*movdi_internal}
     (nil))
(insn 1178 1177 1179 102 (set (reg/f:DI 0 ax [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1179 1178 1180 102 (parallel [
            (set (reg/f:DI 0 ax [orig:331 D.24967 ] [331])
                (plus:DI (reg/f:DI 0 ax [692])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:681 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1180 1179 1181 102 (set (reg:DI 1 dx)
        (reg:DI 3 bx [orig:329 D.24966 ] [329])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1181 1180 1182 102 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:330 D.24965 ] [330])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1182 1181 1183 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:331 D.24967 ] [331])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn 1183 1182 1184 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x2b95225d0e00 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1184 1183 1185 102 (parallel [
            (set (reg:DI 0 ax [693])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:682 221 {*adddi_1}
     (nil))
(insn 1185 1184 1186 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [693])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(call_insn 1186 1185 1187 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x2b9522905700 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:682 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1187 1186 1188 102 (set (reg/f:DI 0 ax [orig:332 D.24965 ] [332])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1188 1187 1189 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:332 D.24965 ] [332])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(call_insn/i 1189 1188 1190 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b95225d0200 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:682 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1190 1189 1191 102 (set (reg:DI 0 ax [orig:333 D.24966 ] [333])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 102 (parallel [
            (set (reg:DI 1 dx [orig:334 D.24966 ] [334])
                (plus:DI (reg:DI 0 ax [orig:333 D.24966 ] [333])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:682 221 {*adddi_1}
     (nil))
(insn 1192 1191 1193 102 (set (reg/f:DI 0 ax [694])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1193 1192 1194 102 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 0 ax [694])
                    (reg:DI 1 dx [orig:334 D.24966 ] [334]))
                (const_int 4 [0x4])) [0 procpar_info_222(D)->ex_datetime S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:682 93 {*movqi_internal}
     (nil))
(insn 1194 1193 1195 102 (set (reg/f:DI 1 dx [695])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:688 89 {*movdi_internal}
     (nil))
(insn 1195 1194 1196 102 (set (reg:SF 0 ax [696])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:688 129 {*movsf_internal}
     (nil))
(insn 1196 1195 1197 102 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [695])
                (const_int 376 [0x178])) [0 procpar_info_222(D)->vox1+0 S4 A64])
        (reg:SF 0 ax [696])) ge2fitman_read_procpar.cpp:688 129 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 102 (set (reg/f:DI 1 dx [697])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:689 89 {*movdi_internal}
     (nil))
(insn 1198 1197 1199 102 (set (reg:SF 0 ax [698])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:689 129 {*movsf_internal}
     (nil))
(insn 1199 1198 1200 102 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [697])
                (const_int 380 [0x17c])) [0 procpar_info_222(D)->vox2+0 S4 A32])
        (reg:SF 0 ax [698])) ge2fitman_read_procpar.cpp:689 129 {*movsf_internal}
     (nil))
(insn 1200 1199 1201 102 (set (reg/f:DI 1 dx [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:690 89 {*movdi_internal}
     (nil))
(insn 1201 1200 1202 102 (set (reg:SF 0 ax [700])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:690 129 {*movsf_internal}
     (nil))
(insn 1202 1201 1203 102 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [699])
                (const_int 384 [0x180])) [0 procpar_info_222(D)->vox3+0 S4 A64])
        (reg:SF 0 ax [700])) ge2fitman_read_procpar.cpp:690 129 {*movsf_internal}
     (nil))
(insn 1203 1202 1204 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 vox1index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:694 90 {*movsi_internal}
     (nil))
(insn 1204 1203 1205 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 vox2index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:695 90 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [0 vox3index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:696 90 {*movsi_internal}
     (nil))
(insn 1206 1205 1207 102 (set (reg/f:DI 0 ax [701])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(insn 1207 1206 1208 102 (parallel [
            (set (reg/f:DI 0 ax [orig:335 D.24957 ] [335])
                (plus:DI (reg/f:DI 0 ax [701])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:700 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1208 1207 1209 102 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(insn 1209 1208 1210 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:335 D.24957 ] [335])) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(call_insn/i 1210 1209 1211 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:700 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1211 1210 1212 102 (set (reg:SI 0 ax [orig:336 D.24953 ] [336])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:700 90 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:336 D.24953 ] [336])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:700 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1213 1212 1214 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1232)
            (pc))) ge2fitman_read_procpar.cpp:700 596 {*jcc_1}
     (nil)
 -> 1232)
;;  succ:       103 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 337 338 339 340 341 342 702 703 704
(note 1214 1213 1215 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1215 1214 1216 103 (set (reg/f:DI 0 ax [702])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1216 1215 1217 103 (set (reg:QI 0 ax [orig:337 D.24954 ] [337])
        (mem:QI (reg/f:DI 0 ax [702]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:703 93 {*movqi_internal}
     (nil))
(insn 1217 1216 1218 103 (set (reg:SI 1 dx [orig:338 D.24953 ] [338])
        (zero_extend:SI (reg:QI 0 ax [orig:337 D.24954 ] [337]))) ge2fitman_read_procpar.cpp:703 138 {*zero_extendqisi2}
     (nil))
(insn 1218 1217 1219 103 (set (reg:SI 2 cx [orig:339 D.24953 ] [339])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1219 1218 1220 103 (set (reg:SI 5 di [orig:340 D.24953 ] [340])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1220 1219 1221 103 (set (reg/f:DI 0 ax [703])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1221 1220 1222 103 (parallel [
            (set (reg/f:DI 4 si [orig:341 D.24968 ] [341])
                (plus:DI (reg/f:DI 0 ax [703])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:703 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 376 [0x178]))
        (nil)))
(insn 1222 1221 1223 103 (set (reg:DI 0 ax [704])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1223 1222 1224 103 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:338 D.24953 ] [338])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1224 1223 1225 103 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:339 D.24953 ] [339])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 103 (set (reg:DI 2 cx)
        (const_int 380 [0x17c])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1226 1225 1228 103 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:340 D.24953 ] [340])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1228 1226 1229 103 (set (reg:DI 5 di)
        (reg:DI 0 ax [704])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(call_insn 1229 1228 1230 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:703 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1230 1229 1231 103 (set (reg:SI 0 ax [orig:342 D.24953 ] [342])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1231 1230 1232 103 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 vox1index+0 S4 A32])
        (reg:SI 0 ax [orig:342 D.24953 ] [342])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
;;  succ:       104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 343 344 705
(code_label 1232 1231 1233 104 52 "" [1 uses])
(note 1233 1232 1234 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1234 1233 1235 104 (set (reg/f:DI 0 ax [705])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(insn 1235 1234 1236 104 (parallel [
            (set (reg/f:DI 0 ax [orig:343 D.24957 ] [343])
                (plus:DI (reg/f:DI 0 ax [705])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:711 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1236 1235 1237 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(insn 1237 1236 1238 104 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:343 D.24957 ] [343])) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(call_insn/i 1238 1237 1239 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:711 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1239 1238 1240 104 (set (reg:SI 0 ax [orig:344 D.24953 ] [344])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:711 90 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:344 D.24953 ] [344])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:711 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1241 1240 1242 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1249)
            (pc))) ge2fitman_read_procpar.cpp:711 596 {*jcc_1}
     (nil)
 -> 1249)
;;  succ:       105 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1242 1241 1243 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1243 1242 1244 105 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [0 vox1index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:714 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1244 1243 1245 105 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) ge2fitman_read_procpar.cpp:714 596 {*jcc_1}
     (nil)
 -> 1284)
;;  succ:       106 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1245 1244 1246 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1246 1245 2082 106 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:715 90 {*movsi_internal}
     (nil))
(jump_insn 2082 1246 2083 106 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:715 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2083 2082 1249)
;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       104
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 345 346 706
(code_label 1249 2083 1250 107 53 "" [1 uses])
(note 1250 1249 1251 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 107 (set (reg/f:DI 0 ax [706])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(insn 1252 1251 1253 107 (parallel [
            (set (reg/f:DI 0 ax [orig:345 D.24957 ] [345])
                (plus:DI (reg/f:DI 0 ax [706])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:720 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1253 1252 1254 107 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(insn 1254 1253 1255 107 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:345 D.24957 ] [345])) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(call_insn/i 1255 1254 1256 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:720 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1256 1255 1257 107 (set (reg:SI 0 ax [orig:346 D.24953 ] [346])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:720 90 {*movsi_internal}
     (nil))
(insn 1257 1256 1258 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:346 D.24953 ] [346])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:720 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1258 1257 1259 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) ge2fitman_read_procpar.cpp:720 596 {*jcc_1}
     (nil)
 -> 1284)
;;  succ:       108 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 347 348 349 350 351 352 353 707 708 709 710
(note 1259 1258 1260 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1260 1259 1261 108 (set (reg/f:DI 0 ax [707])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:723 89 {*movdi_internal}
     (nil))
(insn 1261 1260 1262 108 (set (reg:QI 0 ax [orig:347 D.24954 ] [347])
        (mem:QI (reg/f:DI 0 ax [707]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:723 93 {*movqi_internal}
     (nil))
(insn 1262 1261 1263 108 (set (reg:SI 1 dx [orig:348 D.24953 ] [348])
        (zero_extend:SI (reg:QI 0 ax [orig:347 D.24954 ] [347]))) ge2fitman_read_procpar.cpp:723 138 {*zero_extendqisi2}
     (nil))
(insn 1263 1262 1264 108 (set (reg:SI 2 cx [orig:349 D.24953 ] [349])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1264 1263 1265 108 (set (reg:SI 5 di [orig:350 D.24953 ] [350])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1265 1264 1266 108 (set (reg/f:DI 0 ax [708])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:723 89 {*movdi_internal}
     (nil))
(insn 1266 1265 1267 108 (parallel [
            (set (reg/f:DI 4 si [orig:351 D.24968 ] [351])
                (plus:DI (reg/f:DI 0 ax [708])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:723 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 376 [0x178]))
        (nil)))
(insn 1267 1266 1268 108 (set (reg:DI 0 ax [709])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:723 89 {*movdi_internal}
     (nil))
(insn 1268 1267 1269 108 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:348 D.24953 ] [348])) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1269 1268 1270 108 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:349 D.24953 ] [349])) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1270 1269 1271 108 (set (reg:DI 2 cx)
        (const_int 380 [0x17c])) ge2fitman_read_procpar.cpp:723 89 {*movdi_internal}
     (nil))
(insn 1271 1270 1273 108 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:350 D.24953 ] [350])) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1273 1271 1274 108 (set (reg:DI 5 di)
        (reg:DI 0 ax [709])) ge2fitman_read_procpar.cpp:723 89 {*movdi_internal}
     (nil))
(call_insn 1274 1273 1275 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:723 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1275 1274 1276 108 (set (reg:SI 0 ax [orig:352 D.24953 ] [352])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:723 90 {*movsi_internal}
     (nil))
(insn 1276 1275 1277 108 (parallel [
            (set (reg:SI 0 ax [710])
                (lshiftrt:SI (reg:SI 0 ax [orig:352 D.24953 ] [352])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:721 529 {*lshrsi3_1}
     (nil))
(insn 1277 1276 1278 108 (set (reg:QI 0 ax [orig:353 D.24954 ] [353])
        (reg:QI 0 ax [710])) ge2fitman_read_procpar.cpp:721 93 {*movqi_internal}
     (nil))
(insn 1278 1277 1279 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:353 D.24954 ] [353])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:721 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1279 1278 1280 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) ge2fitman_read_procpar.cpp:721 596 {*jcc_1}
     (nil)
 -> 1284)
;;  succ:       109 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1280 1279 1281 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1281 1280 2084 109 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:724 90 {*movsi_internal}
     (nil))
(jump_insn 2084 1281 2085 109 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:724 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2085 2084 1284)
;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;;              107
;;              108
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 354 355 356 711 712 713
(code_label 1284 2085 1285 110 54 "" [3 uses])
(note 1285 1284 1286 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1286 1285 1287 110 (set (reg/f:DI 0 ax [711])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:730 89 {*movdi_internal}
     (nil))
(insn 1287 1286 1288 110 (set (reg:SF 0 ax [orig:354 D.24955 ] [354])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [711])
                (const_int 376 [0x178])) [0 procpar_info_222(D)->vox1+0 S4 A64])) ge2fitman_read_procpar.cpp:730 129 {*movsf_internal}
     (nil))
(insn 1288 1287 1289 110 (set (reg/f:DI 1 dx [712])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:730 89 {*movdi_internal}
     (nil))
(insn 1289 1288 1290 110 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [712])
                (const_int 376 [0x178])) [0 procpar_info_222(D)->vox1+0 S4 A64])
        (reg:SF 0 ax [orig:354 D.24955 ] [354])) ge2fitman_read_procpar.cpp:730 129 {*movsf_internal}
     (nil))
(insn 1290 1289 1291 110 (set (reg/f:DI 0 ax [713])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(insn 1291 1290 1292 110 (parallel [
            (set (reg/f:DI 0 ax [orig:355 D.24957 ] [355])
                (plus:DI (reg/f:DI 0 ax [713])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:734 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1292 1291 1293 110 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(insn 1293 1292 1294 110 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:355 D.24957 ] [355])) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(call_insn/i 1294 1293 1295 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:734 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1295 1294 1296 110 (set (reg:SI 0 ax [orig:356 D.24953 ] [356])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:734 90 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:356 D.24953 ] [356])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:734 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1297 1296 1298 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) ge2fitman_read_procpar.cpp:734 596 {*jcc_1}
     (nil)
 -> 1323)
;;  succ:       111 (FALLTHRU)
;;              113
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 357 358 359 360 361 362 363 714 715 716 717
(note 1298 1297 1299 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1299 1298 1300 111 (set (reg/f:DI 0 ax [714])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:738 89 {*movdi_internal}
     (nil))
(insn 1300 1299 1301 111 (set (reg:QI 0 ax [orig:357 D.24954 ] [357])
        (mem:QI (reg/f:DI 0 ax [714]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:738 93 {*movqi_internal}
     (nil))
(insn 1301 1300 1302 111 (set (reg:SI 1 dx [orig:358 D.24953 ] [358])
        (zero_extend:SI (reg:QI 0 ax [orig:357 D.24954 ] [357]))) ge2fitman_read_procpar.cpp:738 138 {*zero_extendqisi2}
     (nil))
(insn 1302 1301 1303 111 (set (reg:SI 2 cx [orig:359 D.24953 ] [359])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1303 1302 1304 111 (set (reg:SI 5 di [orig:360 D.24953 ] [360])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 111 (set (reg/f:DI 0 ax [715])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:738 89 {*movdi_internal}
     (nil))
(insn 1305 1304 1306 111 (parallel [
            (set (reg/f:DI 4 si [orig:361 D.24968 ] [361])
                (plus:DI (reg/f:DI 0 ax [715])
                    (const_int 380 [0x17c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:738 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 380 [0x17c]))
        (nil)))
(insn 1306 1305 1307 111 (set (reg:DI 0 ax [716])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:738 89 {*movdi_internal}
     (nil))
(insn 1307 1306 1308 111 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:358 D.24953 ] [358])) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1308 1307 1309 111 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:359 D.24953 ] [359])) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1309 1308 1310 111 (set (reg:DI 2 cx)
        (const_int 384 [0x180])) ge2fitman_read_procpar.cpp:738 89 {*movdi_internal}
     (nil))
(insn 1310 1309 1312 111 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:360 D.24953 ] [360])) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1312 1310 1313 111 (set (reg:DI 5 di)
        (reg:DI 0 ax [716])) ge2fitman_read_procpar.cpp:738 89 {*movdi_internal}
     (nil))
(call_insn 1313 1312 1314 111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:738 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1314 1313 1315 111 (set (reg:SI 0 ax [orig:362 D.24953 ] [362])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:738 90 {*movsi_internal}
     (nil))
(insn 1315 1314 1316 111 (parallel [
            (set (reg:SI 0 ax [717])
                (lshiftrt:SI (reg:SI 0 ax [orig:362 D.24953 ] [362])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:736 529 {*lshrsi3_1}
     (nil))
(insn 1316 1315 1317 111 (set (reg:QI 0 ax [orig:363 D.24954 ] [363])
        (reg:QI 0 ax [717])) ge2fitman_read_procpar.cpp:736 93 {*movqi_internal}
     (nil))
(insn 1317 1316 1318 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:363 D.24954 ] [363])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:736 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1318 1317 1319 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1358)
            (pc))) ge2fitman_read_procpar.cpp:736 596 {*jcc_1}
     (nil)
 -> 1358)
;;  succ:       112 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1319 1318 1320 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1320 1319 2086 112 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:742 90 {*movsi_internal}
     (nil))
(jump_insn 2086 1320 2087 112 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:742 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2087 2086 1323)
;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 364 365 718
(code_label 1323 2087 1324 113 55 "" [1 uses])
(note 1324 1323 1325 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1324 1326 113 (set (reg/f:DI 0 ax [718])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(insn 1326 1325 1327 113 (parallel [
            (set (reg/f:DI 0 ax [orig:364 D.24957 ] [364])
                (plus:DI (reg/f:DI 0 ax [718])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:745 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1327 1326 1328 113 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(insn 1328 1327 1329 113 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:364 D.24957 ] [364])) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(call_insn/i 1329 1328 1330 113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:745 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1330 1329 1331 113 (set (reg:SI 0 ax [orig:365 D.24953 ] [365])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:745 90 {*movsi_internal}
     (nil))
(insn 1331 1330 1332 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:365 D.24953 ] [365])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:745 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1332 1331 1333 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1358)
            (pc))) ge2fitman_read_procpar.cpp:745 596 {*jcc_1}
     (nil)
 -> 1358)
;;  succ:       114 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 366 367 368 369 370 371 372 719 720 721 722
(note 1333 1332 1334 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1334 1333 1335 114 (set (reg/f:DI 0 ax [719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:748 89 {*movdi_internal}
     (nil))
(insn 1335 1334 1336 114 (set (reg:QI 0 ax [orig:366 D.24954 ] [366])
        (mem:QI (reg/f:DI 0 ax [719]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:748 93 {*movqi_internal}
     (nil))
(insn 1336 1335 1337 114 (set (reg:SI 1 dx [orig:367 D.24953 ] [367])
        (zero_extend:SI (reg:QI 0 ax [orig:366 D.24954 ] [366]))) ge2fitman_read_procpar.cpp:748 138 {*zero_extendqisi2}
     (nil))
(insn 1337 1336 1338 114 (set (reg:SI 2 cx [orig:368 D.24953 ] [368])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1338 1337 1339 114 (set (reg:SI 5 di [orig:369 D.24953 ] [369])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1339 1338 1340 114 (set (reg/f:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:748 89 {*movdi_internal}
     (nil))
(insn 1340 1339 1341 114 (parallel [
            (set (reg/f:DI 4 si [orig:370 D.24968 ] [370])
                (plus:DI (reg/f:DI 0 ax [720])
                    (const_int 380 [0x17c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:748 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 380 [0x17c]))
        (nil)))
(insn 1341 1340 1342 114 (set (reg:DI 0 ax [721])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:748 89 {*movdi_internal}
     (nil))
(insn 1342 1341 1343 114 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:367 D.24953 ] [367])) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1343 1342 1344 114 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:368 D.24953 ] [368])) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1344 1343 1345 114 (set (reg:DI 2 cx)
        (const_int 384 [0x180])) ge2fitman_read_procpar.cpp:748 89 {*movdi_internal}
     (nil))
(insn 1345 1344 1347 114 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:369 D.24953 ] [369])) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1347 1345 1348 114 (set (reg:DI 5 di)
        (reg:DI 0 ax [721])) ge2fitman_read_procpar.cpp:748 89 {*movdi_internal}
     (nil))
(call_insn 1348 1347 1349 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:748 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1349 1348 1350 114 (set (reg:SI 0 ax [orig:371 D.24953 ] [371])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:748 90 {*movsi_internal}
     (nil))
(insn 1350 1349 1351 114 (parallel [
            (set (reg:SI 0 ax [722])
                (lshiftrt:SI (reg:SI 0 ax [orig:371 D.24953 ] [371])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:746 529 {*lshrsi3_1}
     (nil))
(insn 1351 1350 1352 114 (set (reg:QI 0 ax [orig:372 D.24954 ] [372])
        (reg:QI 0 ax [722])) ge2fitman_read_procpar.cpp:746 93 {*movqi_internal}
     (nil))
(insn 1352 1351 1353 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:372 D.24954 ] [372])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:746 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1353 1352 1354 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1358)
            (pc))) ge2fitman_read_procpar.cpp:746 596 {*jcc_1}
     (nil)
 -> 1358)
;;  succ:       115 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1354 1353 1355 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1355 1354 2088 115 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:749 90 {*movsi_internal}
     (nil))
(jump_insn 2088 1355 2089 115 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:749 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2089 2088 1358)
;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;;              113
;;              114
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 373 374 375 723 724 725
(code_label 1358 2089 1359 116 56 "" [3 uses])
(note 1359 1358 1360 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1360 1359 1361 116 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:754 89 {*movdi_internal}
     (nil))
(insn 1361 1360 1362 116 (set (reg:SF 0 ax [orig:373 D.24955 ] [373])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [723])
                (const_int 380 [0x17c])) [0 procpar_info_222(D)->vox2+0 S4 A32])) ge2fitman_read_procpar.cpp:754 129 {*movsf_internal}
     (nil))
(insn 1362 1361 1363 116 (set (reg/f:DI 1 dx [724])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:754 89 {*movdi_internal}
     (nil))
(insn 1363 1362 1364 116 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [724])
                (const_int 380 [0x17c])) [0 procpar_info_222(D)->vox2+0 S4 A32])
        (reg:SF 0 ax [orig:373 D.24955 ] [373])) ge2fitman_read_procpar.cpp:754 129 {*movsf_internal}
     (nil))
(insn 1364 1363 1365 116 (set (reg/f:DI 0 ax [725])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(insn 1365 1364 1366 116 (parallel [
            (set (reg/f:DI 0 ax [orig:374 D.24957 ] [374])
                (plus:DI (reg/f:DI 0 ax [725])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:757 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1366 1365 1367 116 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(insn 1367 1366 1368 116 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:374 D.24957 ] [374])) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(call_insn/i 1368 1367 1369 116 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:757 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1369 1368 1370 116 (set (reg:SI 0 ax [orig:375 D.24953 ] [375])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:757 90 {*movsi_internal}
     (nil))
(insn 1370 1369 1371 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:375 D.24953 ] [375])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:757 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1371 1370 1372 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1397)
            (pc))) ge2fitman_read_procpar.cpp:757 596 {*jcc_1}
     (nil)
 -> 1397)
;;  succ:       117 (FALLTHRU)
;;              119
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 376 377 378 379 380 381 382 726 727 728 729
(note 1372 1371 1373 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1373 1372 1374 117 (set (reg/f:DI 0 ax [726])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:761 89 {*movdi_internal}
     (nil))
(insn 1374 1373 1375 117 (set (reg:QI 0 ax [orig:376 D.24954 ] [376])
        (mem:QI (reg/f:DI 0 ax [726]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:761 93 {*movqi_internal}
     (nil))
(insn 1375 1374 1376 117 (set (reg:SI 1 dx [orig:377 D.24953 ] [377])
        (zero_extend:SI (reg:QI 0 ax [orig:376 D.24954 ] [376]))) ge2fitman_read_procpar.cpp:761 138 {*zero_extendqisi2}
     (nil))
(insn 1376 1375 1377 117 (set (reg:SI 2 cx [orig:378 D.24953 ] [378])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1377 1376 1378 117 (set (reg:SI 5 di [orig:379 D.24953 ] [379])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1378 1377 1379 117 (set (reg/f:DI 0 ax [727])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:761 89 {*movdi_internal}
     (nil))
(insn 1379 1378 1380 117 (parallel [
            (set (reg/f:DI 4 si [orig:380 D.24968 ] [380])
                (plus:DI (reg/f:DI 0 ax [727])
                    (const_int 384 [0x180])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:761 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 384 [0x180]))
        (nil)))
(insn 1380 1379 1381 117 (set (reg:DI 0 ax [728])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:761 89 {*movdi_internal}
     (nil))
(insn 1381 1380 1382 117 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:377 D.24953 ] [377])) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1382 1381 1383 117 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:378 D.24953 ] [378])) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1383 1382 1384 117 (set (reg:DI 2 cx)
        (const_int 388 [0x184])) ge2fitman_read_procpar.cpp:761 89 {*movdi_internal}
     (nil))
(insn 1384 1383 1386 117 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:379 D.24953 ] [379])) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1386 1384 1387 117 (set (reg:DI 5 di)
        (reg:DI 0 ax [728])) ge2fitman_read_procpar.cpp:761 89 {*movdi_internal}
     (nil))
(call_insn 1387 1386 1388 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:761 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1388 1387 1389 117 (set (reg:SI 0 ax [orig:381 D.24953 ] [381])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:761 90 {*movsi_internal}
     (nil))
(insn 1389 1388 1390 117 (parallel [
            (set (reg:SI 0 ax [729])
                (lshiftrt:SI (reg:SI 0 ax [orig:381 D.24953 ] [381])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:759 529 {*lshrsi3_1}
     (nil))
(insn 1390 1389 1391 117 (set (reg:QI 0 ax [orig:382 D.24954 ] [382])
        (reg:QI 0 ax [729])) ge2fitman_read_procpar.cpp:759 93 {*movqi_internal}
     (nil))
(insn 1391 1390 1392 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:382 D.24954 ] [382])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:759 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1392 1391 1393 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1432)
            (pc))) ge2fitman_read_procpar.cpp:759 596 {*jcc_1}
     (nil)
 -> 1432)
;;  succ:       118 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1393 1392 1394 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1394 1393 2090 118 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:762 90 {*movsi_internal}
     (nil))
(jump_insn 2090 1394 2091 118 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:762 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2091 2090 1397)
;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 383 384 730
(code_label 1397 2091 1398 119 57 "" [1 uses])
(note 1398 1397 1399 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1399 1398 1400 119 (set (reg/f:DI 0 ax [730])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(insn 1400 1399 1401 119 (parallel [
            (set (reg/f:DI 0 ax [orig:383 D.24957 ] [383])
                (plus:DI (reg/f:DI 0 ax [730])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:765 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1401 1400 1402 119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(insn 1402 1401 1403 119 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:383 D.24957 ] [383])) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(call_insn/i 1403 1402 1404 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:765 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1404 1403 1405 119 (set (reg:SI 0 ax [orig:384 D.24953 ] [384])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:765 90 {*movsi_internal}
     (nil))
(insn 1405 1404 1406 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:384 D.24953 ] [384])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:765 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1406 1405 1407 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1432)
            (pc))) ge2fitman_read_procpar.cpp:765 596 {*jcc_1}
     (nil)
 -> 1432)
;;  succ:       120 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 385 386 387 388 389 390 391 731 732 733 734
(note 1407 1406 1408 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1408 1407 1409 120 (set (reg/f:DI 0 ax [731])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:768 89 {*movdi_internal}
     (nil))
(insn 1409 1408 1410 120 (set (reg:QI 0 ax [orig:385 D.24954 ] [385])
        (mem:QI (reg/f:DI 0 ax [731]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:768 93 {*movqi_internal}
     (nil))
(insn 1410 1409 1411 120 (set (reg:SI 1 dx [orig:386 D.24953 ] [386])
        (zero_extend:SI (reg:QI 0 ax [orig:385 D.24954 ] [385]))) ge2fitman_read_procpar.cpp:768 138 {*zero_extendqisi2}
     (nil))
(insn 1411 1410 1412 120 (set (reg:SI 2 cx [orig:387 D.24953 ] [387])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1412 1411 1413 120 (set (reg:SI 5 di [orig:388 D.24953 ] [388])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1413 1412 1414 120 (set (reg/f:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:768 89 {*movdi_internal}
     (nil))
(insn 1414 1413 1415 120 (parallel [
            (set (reg/f:DI 4 si [orig:389 D.24968 ] [389])
                (plus:DI (reg/f:DI 0 ax [732])
                    (const_int 384 [0x180])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:768 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 384 [0x180]))
        (nil)))
(insn 1415 1414 1416 120 (set (reg:DI 0 ax [733])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:768 89 {*movdi_internal}
     (nil))
(insn 1416 1415 1417 120 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:386 D.24953 ] [386])) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1417 1416 1418 120 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:387 D.24953 ] [387])) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1418 1417 1419 120 (set (reg:DI 2 cx)
        (const_int 388 [0x184])) ge2fitman_read_procpar.cpp:768 89 {*movdi_internal}
     (nil))
(insn 1419 1418 1421 120 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:388 D.24953 ] [388])) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1421 1419 1422 120 (set (reg:DI 5 di)
        (reg:DI 0 ax [733])) ge2fitman_read_procpar.cpp:768 89 {*movdi_internal}
     (nil))
(call_insn 1422 1421 1423 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:768 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1423 1422 1424 120 (set (reg:SI 0 ax [orig:390 D.24953 ] [390])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:768 90 {*movsi_internal}
     (nil))
(insn 1424 1423 1425 120 (parallel [
            (set (reg:SI 0 ax [734])
                (lshiftrt:SI (reg:SI 0 ax [orig:390 D.24953 ] [390])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:766 529 {*lshrsi3_1}
     (nil))
(insn 1425 1424 1426 120 (set (reg:QI 0 ax [orig:391 D.24954 ] [391])
        (reg:QI 0 ax [734])) ge2fitman_read_procpar.cpp:766 93 {*movqi_internal}
     (nil))
(insn 1426 1425 1427 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:391 D.24954 ] [391])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:766 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1427 1426 1428 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1432)
            (pc))) ge2fitman_read_procpar.cpp:766 596 {*jcc_1}
     (nil)
 -> 1432)
;;  succ:       121 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1428 1427 1429 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1429 1428 2092 121 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:769 90 {*movsi_internal}
     (nil))
(jump_insn 2092 1429 2093 121 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:769 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2093 2092 1432)
;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;;              119
;;              120
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 392 393 394 395 396 397 398 735 736 737 738 739 740 741 742
(code_label 1432 2093 1433 122 58 "" [3 uses])
(note 1433 1432 1434 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1434 1433 1435 122 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:776 89 {*movdi_internal}
     (nil))
(insn 1435 1434 1436 122 (set (reg:SF 0 ax [orig:392 D.24955 ] [392])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [735])
                (const_int 384 [0x180])) [0 procpar_info_222(D)->vox3+0 S4 A64])) ge2fitman_read_procpar.cpp:776 129 {*movsf_internal}
     (nil))
(insn 1436 1435 1437 122 (set (reg/f:DI 1 dx [736])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:776 89 {*movdi_internal}
     (nil))
(insn 1437 1436 1438 122 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [736])
                (const_int 384 [0x180])) [0 procpar_info_222(D)->vox3+0 S4 A64])
        (reg:SF 0 ax [orig:392 D.24955 ] [392])) ge2fitman_read_procpar.cpp:776 129 {*movsf_internal}
     (nil))
(insn 1438 1437 1439 122 (set (reg/f:DI 1 dx [737])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:780 89 {*movdi_internal}
     (nil))
(insn 1439 1438 1440 122 (set (reg:SF 0 ax [738])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:780 129 {*movsf_internal}
     (nil))
(insn 1440 1439 1441 122 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [737])
                (const_int 400 [0x190])) [0 procpar_info_222(D)->vtheta+0 S4 A64])
        (reg:SF 0 ax [738])) ge2fitman_read_procpar.cpp:780 129 {*movsf_internal}
     (nil))
(insn 1441 1440 1442 122 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_int+0 S4 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:783 90 {*movsi_internal}
     (nil))
(insn 1442 1441 1443 122 (set (reg/f:DI 0 ax [739])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:795 89 {*movdi_internal}
     (nil))
(insn 1443 1442 1444 122 (set (reg:QI 0 ax [orig:393 D.24954 ] [393])
        (mem:QI (reg/f:DI 0 ax [739]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:795 93 {*movqi_internal}
     (nil))
(insn 1444 1443 1445 122 (set (reg:SI 1 dx [orig:394 D.24953 ] [394])
        (zero_extend:SI (reg:QI 0 ax [orig:393 D.24954 ] [393]))) ge2fitman_read_procpar.cpp:795 138 {*zero_extendqisi2}
     (nil))
(insn 1445 1444 1446 122 (set (reg:SI 2 cx [orig:395 D.24953 ] [395])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1446 1445 1447 122 (set (reg:SI 5 di [orig:396 D.24953 ] [396])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1447 1446 1448 122 (parallel [
            (set (reg:DI 4 si [740])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:795 221 {*adddi_1}
     (nil))
(insn 1448 1447 1449 122 (set (reg:DI 0 ax [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:795 89 {*movdi_internal}
     (nil))
(insn 1449 1448 1450 122 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:394 D.24953 ] [394])) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1450 1449 1451 122 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:395 D.24953 ] [395])) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1451 1450 1452 122 (set (reg:DI 2 cx)
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:795 89 {*movdi_internal}
     (nil))
(insn 1452 1451 1454 122 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:396 D.24953 ] [396])) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1454 1452 1455 122 (set (reg:DI 5 di)
        (reg:DI 0 ax [741])) ge2fitman_read_procpar.cpp:795 89 {*movdi_internal}
     (nil))
(call_insn 1455 1454 1456 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:795 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1456 1455 1457 122 (set (reg:SI 0 ax [orig:397 D.24953 ] [397])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:795 90 {*movsi_internal}
     (nil))
(insn 1457 1456 1458 122 (parallel [
            (set (reg:SI 0 ax [742])
                (lshiftrt:SI (reg:SI 0 ax [orig:397 D.24953 ] [397])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:793 529 {*lshrsi3_1}
     (nil))
(insn 1458 1457 1459 122 (set (reg:QI 0 ax [orig:398 D.24954 ] [398])
        (reg:QI 0 ax [742])) ge2fitman_read_procpar.cpp:793 93 {*movqi_internal}
     (nil))
(insn 1459 1458 1460 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:398 D.24954 ] [398])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:793 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1460 1459 1461 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1465)
            (pc))) ge2fitman_read_procpar.cpp:793 596 {*jcc_1}
     (nil)
 -> 1465)
;;  succ:       123 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1461 1460 1462 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 2094 123 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:796 90 {*movsi_internal}
     (nil))
(jump_insn 2094 1462 2095 123 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:796 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2095 2094 1465)
;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 399 400 401 402 403 404 405 406 407 743 744 745 746 747 748
(code_label 1465 2095 1466 124 59 "" [1 uses])
(note 1466 1465 1467 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1467 1466 1468 124 (set (reg:SI 0 ax [orig:399 D.24953 ] [399])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_int+0 S4 A64])) ge2fitman_read_procpar.cpp:800 90 {*movsi_internal}
     (nil))
(insn 1468 1467 1469 124 (set (reg:SF 21 xmm0 [orig:400 D.24955 ] [400])
        (float:SF (reg:SI 0 ax [orig:399 D.24953 ] [399]))) ge2fitman_read_procpar.cpp:800 199 {*floatsisf2_sse}
     (nil))
(insn 1469 1468 1470 124 (set (reg:SF 22 xmm1 [743])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC29") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:800 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 1470 1469 2135 124 (set (reg:SF 21 xmm0 [orig:401 D.24955 ] [401])
        (div:SF (reg:SF 21 xmm0 [orig:401 D.24955 ] [401])
            (reg:SF 22 xmm1 [743]))) ge2fitman_read_procpar.cpp:800 782 {*fop_sf_1_sse}
     (nil))
(insn 2135 1470 1471 124 (set (reg:SF 0 ax [orig:401 D.24955 ] [401])
        (reg:SF 21 xmm0 [orig:401 D.24955 ] [401])) ge2fitman_read_procpar.cpp:800 129 {*movsf_internal}
     (nil))
(insn 1471 2135 1472 124 (set (reg/f:DI 1 dx [744])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:800 89 {*movdi_internal}
     (nil))
(insn 1472 1471 1473 124 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [744])
                (const_int 344 [0x158])) [0 procpar_info_222(D)->te+0 S4 A64])
        (reg:SF 0 ax [orig:401 D.24955 ] [401])) ge2fitman_read_procpar.cpp:800 129 {*movsf_internal}
     (nil))
(insn 1473 1472 1474 124 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_int+0 S4 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:805 90 {*movsi_internal}
     (nil))
(insn 1474 1473 1475 124 (set (reg/f:DI 0 ax [745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:817 89 {*movdi_internal}
     (nil))
(insn 1475 1474 1476 124 (set (reg:QI 0 ax [orig:402 D.24954 ] [402])
        (mem:QI (reg/f:DI 0 ax [745]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:817 93 {*movqi_internal}
     (nil))
(insn 1476 1475 1477 124 (set (reg:SI 1 dx [orig:403 D.24953 ] [403])
        (zero_extend:SI (reg:QI 0 ax [orig:402 D.24954 ] [402]))) ge2fitman_read_procpar.cpp:817 138 {*zero_extendqisi2}
     (nil))
(insn 1477 1476 1478 124 (set (reg:SI 2 cx [orig:404 D.24953 ] [404])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1478 1477 1479 124 (set (reg:SI 5 di [orig:405 D.24953 ] [405])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1479 1478 1480 124 (parallel [
            (set (reg:DI 4 si [746])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:817 221 {*adddi_1}
     (nil))
(insn 1480 1479 1481 124 (set (reg:DI 0 ax [747])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:817 89 {*movdi_internal}
     (nil))
(insn 1481 1480 1482 124 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:403 D.24953 ] [403])) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1482 1481 1483 124 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:404 D.24953 ] [404])) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1483 1482 1484 124 (set (reg:DI 2 cx)
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:817 89 {*movdi_internal}
     (nil))
(insn 1484 1483 1486 124 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:405 D.24953 ] [405])) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1486 1484 1487 124 (set (reg:DI 5 di)
        (reg:DI 0 ax [747])) ge2fitman_read_procpar.cpp:817 89 {*movdi_internal}
     (nil))
(call_insn 1487 1486 1488 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:817 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1488 1487 1489 124 (set (reg:SI 0 ax [orig:406 D.24953 ] [406])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:817 90 {*movsi_internal}
     (nil))
(insn 1489 1488 1490 124 (parallel [
            (set (reg:SI 0 ax [748])
                (lshiftrt:SI (reg:SI 0 ax [orig:406 D.24953 ] [406])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:815 529 {*lshrsi3_1}
     (nil))
(insn 1490 1489 1491 124 (set (reg:QI 0 ax [orig:407 D.24954 ] [407])
        (reg:QI 0 ax [748])) ge2fitman_read_procpar.cpp:815 93 {*movqi_internal}
     (nil))
(insn 1491 1490 1492 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:407 D.24954 ] [407])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:815 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1492 1491 1493 124 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1497)
            (pc))) ge2fitman_read_procpar.cpp:815 596 {*jcc_1}
     (nil)
 -> 1497)
;;  succ:       125 (FALLTHRU)
;;              126
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1493 1492 1494 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1494 1493 2096 125 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:818 90 {*movsi_internal}
     (nil))
(jump_insn 2096 1494 2097 125 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:818 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2097 2096 1497)
;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 408 409 410 411 412 749 750 751 752 753 754 755 756 757
(code_label 1497 2097 1498 126 60 "" [1 uses])
(note 1498 1497 1499 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1499 1498 1500 126 (set (reg:SI 0 ax [orig:408 D.24953 ] [408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_int+0 S4 A64])) ge2fitman_read_procpar.cpp:822 90 {*movsi_internal}
     (nil))
(insn 1500 1499 1501 126 (set (reg:SF 21 xmm0 [orig:409 D.24955 ] [409])
        (float:SF (reg:SI 0 ax [orig:408 D.24953 ] [408]))) ge2fitman_read_procpar.cpp:822 199 {*floatsisf2_sse}
     (nil))
(insn 1501 1500 1502 126 (set (reg:SF 22 xmm1 [749])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC29") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:822 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 1502 1501 2137 126 (set (reg:SF 21 xmm0 [orig:410 D.24955 ] [410])
        (div:SF (reg:SF 21 xmm0 [orig:410 D.24955 ] [410])
            (reg:SF 22 xmm1 [749]))) ge2fitman_read_procpar.cpp:822 782 {*fop_sf_1_sse}
     (nil))
(insn 2137 1502 1503 126 (set (reg:SF 0 ax [orig:410 D.24955 ] [410])
        (reg:SF 21 xmm0 [orig:410 D.24955 ] [410])) ge2fitman_read_procpar.cpp:822 129 {*movsf_internal}
     (nil))
(insn 1503 2137 1504 126 (set (reg/f:DI 1 dx [750])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:822 89 {*movdi_internal}
     (nil))
(insn 1504 1503 1505 126 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [750])
                (const_int 348 [0x15c])) [0 procpar_info_222(D)->tr+0 S4 A32])
        (reg:SF 0 ax [orig:410 D.24955 ] [410])) ge2fitman_read_procpar.cpp:822 129 {*movsf_internal}
     (nil))
(insn 1505 1504 1506 126 (set (reg/f:DI 1 dx [751])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:828 89 {*movdi_internal}
     (nil))
(insn 1506 1505 1507 126 (set (reg:SF 0 ax [752])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:828 129 {*movsf_internal}
     (nil))
(insn 1507 1506 1508 126 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [751])
                (const_int 364 [0x16c])) [0 procpar_info_222(D)->pos1+0 S4 A32])
        (reg:SF 0 ax [752])) ge2fitman_read_procpar.cpp:828 129 {*movsf_internal}
     (nil))
(insn 1508 1507 1509 126 (set (reg/f:DI 1 dx [753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:829 89 {*movdi_internal}
     (nil))
(insn 1509 1508 1510 126 (set (reg:SF 0 ax [754])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:829 129 {*movsf_internal}
     (nil))
(insn 1510 1509 1511 126 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [753])
                (const_int 368 [0x170])) [0 procpar_info_222(D)->pos2+0 S4 A64])
        (reg:SF 0 ax [754])) ge2fitman_read_procpar.cpp:829 129 {*movsf_internal}
     (nil))
(insn 1511 1510 1512 126 (set (reg/f:DI 1 dx [755])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:830 89 {*movdi_internal}
     (nil))
(insn 1512 1511 1513 126 (set (reg:SF 0 ax [756])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:830 129 {*movsf_internal}
     (nil))
(insn 1513 1512 1514 126 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [755])
                (const_int 372 [0x174])) [0 procpar_info_222(D)->pos3+0 S4 A32])
        (reg:SF 0 ax [756])) ge2fitman_read_procpar.cpp:830 129 {*movsf_internal}
     (nil))
(insn 1514 1513 1515 126 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 pos1index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:834 90 {*movsi_internal}
     (nil))
(insn 1515 1514 1516 126 (set (reg/f:DI 0 ax [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(insn 1516 1515 1517 126 (parallel [
            (set (reg/f:DI 0 ax [orig:411 D.24957 ] [411])
                (plus:DI (reg/f:DI 0 ax [757])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:836 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1517 1516 1518 126 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(insn 1518 1517 1519 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:411 D.24957 ] [411])) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(call_insn/i 1519 1518 1520 126 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:836 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1520 1519 1521 126 (set (reg:SI 0 ax [orig:412 D.24953 ] [412])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:836 90 {*movsi_internal}
     (nil))
(insn 1521 1520 1522 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:412 D.24953 ] [412])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:836 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1522 1521 1523 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1541)
            (pc))) ge2fitman_read_procpar.cpp:836 596 {*jcc_1}
     (nil)
 -> 1541)
;;  succ:       127 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 413 414 415 416 417 418 758 759 760
(note 1523 1522 1524 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1524 1523 1525 127 (set (reg/f:DI 0 ax [758])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1525 1524 1526 127 (set (reg:QI 0 ax [orig:413 D.24954 ] [413])
        (mem:QI (reg/f:DI 0 ax [758]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:839 93 {*movqi_internal}
     (nil))
(insn 1526 1525 1527 127 (set (reg:SI 1 dx [orig:414 D.24953 ] [414])
        (zero_extend:SI (reg:QI 0 ax [orig:413 D.24954 ] [413]))) ge2fitman_read_procpar.cpp:839 138 {*zero_extendqisi2}
     (nil))
(insn 1527 1526 1528 127 (set (reg:SI 2 cx [orig:415 D.24953 ] [415])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1528 1527 1529 127 (set (reg:SI 5 di [orig:416 D.24953 ] [416])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1529 1528 1530 127 (set (reg/f:DI 0 ax [759])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1530 1529 1531 127 (parallel [
            (set (reg/f:DI 4 si [orig:417 D.24968 ] [417])
                (plus:DI (reg/f:DI 0 ax [759])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:839 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1531 1530 1532 127 (set (reg:DI 0 ax [760])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1532 1531 1533 127 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:414 D.24953 ] [414])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1533 1532 1534 127 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:415 D.24953 ] [415])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1534 1533 1535 127 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1535 1534 1537 127 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:416 D.24953 ] [416])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1537 1535 1538 127 (set (reg:DI 5 di)
        (reg:DI 0 ax [760])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(call_insn 1538 1537 1539 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:839 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1539 1538 1540 127 (set (reg:SI 0 ax [orig:418 D.24953 ] [418])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1540 1539 1541 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 pos1index+0 S4 A32])
        (reg:SI 0 ax [orig:418 D.24953 ] [418])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       126
;;              127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 419 420 761
(code_label 1541 1540 1542 128 61 "" [1 uses])
(note 1542 1541 1543 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1543 1542 1544 128 (set (reg/f:DI 0 ax [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(insn 1544 1543 1545 128 (parallel [
            (set (reg/f:DI 0 ax [orig:419 D.24957 ] [419])
                (plus:DI (reg/f:DI 0 ax [761])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:842 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1545 1544 1546 128 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(insn 1546 1545 1547 128 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:419 D.24957 ] [419])) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(call_insn/i 1547 1546 1548 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:842 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1548 1547 1549 128 (set (reg:SI 0 ax [orig:420 D.24953 ] [420])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:842 90 {*movsi_internal}
     (nil))
(insn 1549 1548 1550 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:420 D.24953 ] [420])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:842 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1550 1549 1551 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1558)
            (pc))) ge2fitman_read_procpar.cpp:842 596 {*jcc_1}
     (nil)
 -> 1558)
;;  succ:       129 (FALLTHRU)
;;              131
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1551 1550 1552 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1552 1551 1553 129 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [0 pos1index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:843 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1553 1552 1554 129 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1593)
            (pc))) ge2fitman_read_procpar.cpp:843 596 {*jcc_1}
     (nil)
 -> 1593)
;;  succ:       130 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1554 1553 1555 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1555 1554 2098 130 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:844 90 {*movsi_internal}
     (nil))
(jump_insn 2098 1555 2099 130 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:844 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2099 2098 1558)
;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 421 422 762
(code_label 1558 2099 1559 131 62 "" [1 uses])
(note 1559 1558 1560 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1560 1559 1561 131 (set (reg/f:DI 0 ax [762])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(insn 1561 1560 1562 131 (parallel [
            (set (reg/f:DI 0 ax [orig:421 D.24957 ] [421])
                (plus:DI (reg/f:DI 0 ax [762])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:847 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1562 1561 1563 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(insn 1563 1562 1564 131 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:421 D.24957 ] [421])) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(call_insn/i 1564 1563 1565 131 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:847 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1565 1564 1566 131 (set (reg:SI 0 ax [orig:422 D.24953 ] [422])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:847 90 {*movsi_internal}
     (nil))
(insn 1566 1565 1567 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:422 D.24953 ] [422])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:847 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1567 1566 1568 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1593)
            (pc))) ge2fitman_read_procpar.cpp:847 596 {*jcc_1}
     (nil)
 -> 1593)
;;  succ:       132 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 423 424 425 426 427 428 429 763 764 765 766
(note 1568 1567 1569 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1569 1568 1570 132 (set (reg/f:DI 0 ax [763])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:850 89 {*movdi_internal}
     (nil))
(insn 1570 1569 1571 132 (set (reg:QI 0 ax [orig:423 D.24954 ] [423])
        (mem:QI (reg/f:DI 0 ax [763]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:850 93 {*movqi_internal}
     (nil))
(insn 1571 1570 1572 132 (set (reg:SI 1 dx [orig:424 D.24953 ] [424])
        (zero_extend:SI (reg:QI 0 ax [orig:423 D.24954 ] [423]))) ge2fitman_read_procpar.cpp:850 138 {*zero_extendqisi2}
     (nil))
(insn 1572 1571 1573 132 (set (reg:SI 2 cx [orig:425 D.24953 ] [425])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1573 1572 1574 132 (set (reg:SI 5 di [orig:426 D.24953 ] [426])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1574 1573 1575 132 (set (reg/f:DI 0 ax [764])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:850 89 {*movdi_internal}
     (nil))
(insn 1575 1574 1576 132 (parallel [
            (set (reg/f:DI 4 si [orig:427 D.24968 ] [427])
                (plus:DI (reg/f:DI 0 ax [764])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:850 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1576 1575 1577 132 (set (reg:DI 0 ax [765])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:850 89 {*movdi_internal}
     (nil))
(insn 1577 1576 1578 132 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:424 D.24953 ] [424])) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1578 1577 1579 132 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:425 D.24953 ] [425])) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1579 1578 1580 132 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:850 89 {*movdi_internal}
     (nil))
(insn 1580 1579 1582 132 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:426 D.24953 ] [426])) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1582 1580 1583 132 (set (reg:DI 5 di)
        (reg:DI 0 ax [765])) ge2fitman_read_procpar.cpp:850 89 {*movdi_internal}
     (nil))
(call_insn 1583 1582 1584 132 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:850 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1584 1583 1585 132 (set (reg:SI 0 ax [orig:428 D.24953 ] [428])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:850 90 {*movsi_internal}
     (nil))
(insn 1585 1584 1586 132 (parallel [
            (set (reg:SI 0 ax [766])
                (lshiftrt:SI (reg:SI 0 ax [orig:428 D.24953 ] [428])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:848 529 {*lshrsi3_1}
     (nil))
(insn 1586 1585 1587 132 (set (reg:QI 0 ax [orig:429 D.24954 ] [429])
        (reg:QI 0 ax [766])) ge2fitman_read_procpar.cpp:848 93 {*movqi_internal}
     (nil))
(insn 1587 1586 1588 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:429 D.24954 ] [429])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:848 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1588 1587 1589 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1593)
            (pc))) ge2fitman_read_procpar.cpp:848 596 {*jcc_1}
     (nil)
 -> 1593)
;;  succ:       133 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1589 1588 1590 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1590 1589 2100 133 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:851 90 {*movsi_internal}
     (nil))
(jump_insn 2100 1590 2101 133 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:851 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2101 2100 1593)
;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129
;;              131
;;              132
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 430 431 767
(code_label 1593 2101 1594 134 63 "" [3 uses])
(note 1594 1593 1595 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1595 1594 1596 134 (set (reg/f:DI 0 ax [767])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(insn 1596 1595 1597 134 (parallel [
            (set (reg/f:DI 0 ax [orig:430 D.24957 ] [430])
                (plus:DI (reg/f:DI 0 ax [767])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:861 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1597 1596 1598 134 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(insn 1598 1597 1599 134 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:430 D.24957 ] [430])) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(call_insn/i 1599 1598 1600 134 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:861 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1600 1599 1601 134 (set (reg:SI 0 ax [orig:431 D.24953 ] [431])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:861 90 {*movsi_internal}
     (nil))
(insn 1601 1600 1602 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:431 D.24953 ] [431])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:861 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1602 1601 1603 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1628)
            (pc))) ge2fitman_read_procpar.cpp:861 596 {*jcc_1}
     (nil)
 -> 1628)
;;  succ:       135 (FALLTHRU)
;;              137
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 432 433 434 435 436 437 438 768 769 770 771
(note 1603 1602 1604 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1604 1603 1605 135 (set (reg/f:DI 0 ax [768])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:865 89 {*movdi_internal}
     (nil))
(insn 1605 1604 1606 135 (set (reg:QI 0 ax [orig:432 D.24954 ] [432])
        (mem:QI (reg/f:DI 0 ax [768]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:865 93 {*movqi_internal}
     (nil))
(insn 1606 1605 1607 135 (set (reg:SI 1 dx [orig:433 D.24953 ] [433])
        (zero_extend:SI (reg:QI 0 ax [orig:432 D.24954 ] [432]))) ge2fitman_read_procpar.cpp:865 138 {*zero_extendqisi2}
     (nil))
(insn 1607 1606 1608 135 (set (reg:SI 2 cx [orig:434 D.24953 ] [434])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1608 1607 1609 135 (set (reg:SI 5 di [orig:435 D.24953 ] [435])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1609 1608 1610 135 (set (reg/f:DI 0 ax [769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:865 89 {*movdi_internal}
     (nil))
(insn 1610 1609 1611 135 (parallel [
            (set (reg/f:DI 4 si [orig:436 D.24968 ] [436])
                (plus:DI (reg/f:DI 0 ax [769])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:865 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1611 1610 1612 135 (set (reg:DI 0 ax [770])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:865 89 {*movdi_internal}
     (nil))
(insn 1612 1611 1613 135 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:433 D.24953 ] [433])) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1613 1612 1614 135 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:434 D.24953 ] [434])) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1614 1613 1615 135 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:865 89 {*movdi_internal}
     (nil))
(insn 1615 1614 1617 135 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:435 D.24953 ] [435])) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1617 1615 1618 135 (set (reg:DI 5 di)
        (reg:DI 0 ax [770])) ge2fitman_read_procpar.cpp:865 89 {*movdi_internal}
     (nil))
(call_insn 1618 1617 1619 135 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:865 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1619 1618 1620 135 (set (reg:SI 0 ax [orig:437 D.24953 ] [437])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:865 90 {*movsi_internal}
     (nil))
(insn 1620 1619 1621 135 (parallel [
            (set (reg:SI 0 ax [771])
                (lshiftrt:SI (reg:SI 0 ax [orig:437 D.24953 ] [437])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:863 529 {*lshrsi3_1}
     (nil))
(insn 1621 1620 1622 135 (set (reg:QI 0 ax [orig:438 D.24954 ] [438])
        (reg:QI 0 ax [771])) ge2fitman_read_procpar.cpp:863 93 {*movqi_internal}
     (nil))
(insn 1622 1621 1623 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:438 D.24954 ] [438])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:863 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1623 1622 1624 135 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1663)
            (pc))) ge2fitman_read_procpar.cpp:863 596 {*jcc_1}
     (nil)
 -> 1663)
;;  succ:       136 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1624 1623 1625 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1625 1624 2102 136 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:866 90 {*movsi_internal}
     (nil))
(jump_insn 2102 1625 2103 136 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:866 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2103 2102 1628)
;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 439 440 772
(code_label 1628 2103 1629 137 64 "" [1 uses])
(note 1629 1628 1630 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1630 1629 1631 137 (set (reg/f:DI 0 ax [772])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(insn 1631 1630 1632 137 (parallel [
            (set (reg/f:DI 0 ax [orig:439 D.24957 ] [439])
                (plus:DI (reg/f:DI 0 ax [772])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:869 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1632 1631 1633 137 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(insn 1633 1632 1634 137 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:439 D.24957 ] [439])) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(call_insn/i 1634 1633 1635 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:869 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1635 1634 1636 137 (set (reg:SI 0 ax [orig:440 D.24953 ] [440])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:869 90 {*movsi_internal}
     (nil))
(insn 1636 1635 1637 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:440 D.24953 ] [440])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:869 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1637 1636 1638 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1663)
            (pc))) ge2fitman_read_procpar.cpp:869 596 {*jcc_1}
     (nil)
 -> 1663)
;;  succ:       138 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 441 442 443 444 445 446 447 773 774 775 776
(note 1638 1637 1639 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1639 1638 1640 138 (set (reg/f:DI 0 ax [773])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:872 89 {*movdi_internal}
     (nil))
(insn 1640 1639 1641 138 (set (reg:QI 0 ax [orig:441 D.24954 ] [441])
        (mem:QI (reg/f:DI 0 ax [773]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:872 93 {*movqi_internal}
     (nil))
(insn 1641 1640 1642 138 (set (reg:SI 1 dx [orig:442 D.24953 ] [442])
        (zero_extend:SI (reg:QI 0 ax [orig:441 D.24954 ] [441]))) ge2fitman_read_procpar.cpp:872 138 {*zero_extendqisi2}
     (nil))
(insn 1642 1641 1643 138 (set (reg:SI 2 cx [orig:443 D.24953 ] [443])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1643 1642 1644 138 (set (reg:SI 5 di [orig:444 D.24953 ] [444])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1644 1643 1645 138 (set (reg/f:DI 0 ax [774])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:872 89 {*movdi_internal}
     (nil))
(insn 1645 1644 1646 138 (parallel [
            (set (reg/f:DI 4 si [orig:445 D.24968 ] [445])
                (plus:DI (reg/f:DI 0 ax [774])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:872 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1646 1645 1647 138 (set (reg:DI 0 ax [775])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:872 89 {*movdi_internal}
     (nil))
(insn 1647 1646 1648 138 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:442 D.24953 ] [442])) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1648 1647 1649 138 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:443 D.24953 ] [443])) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1649 1648 1650 138 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:872 89 {*movdi_internal}
     (nil))
(insn 1650 1649 1652 138 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:444 D.24953 ] [444])) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1652 1650 1653 138 (set (reg:DI 5 di)
        (reg:DI 0 ax [775])) ge2fitman_read_procpar.cpp:872 89 {*movdi_internal}
     (nil))
(call_insn 1653 1652 1654 138 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:872 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1654 1653 1655 138 (set (reg:SI 0 ax [orig:446 D.24953 ] [446])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:872 90 {*movsi_internal}
     (nil))
(insn 1655 1654 1656 138 (parallel [
            (set (reg:SI 0 ax [776])
                (lshiftrt:SI (reg:SI 0 ax [orig:446 D.24953 ] [446])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:870 529 {*lshrsi3_1}
     (nil))
(insn 1656 1655 1657 138 (set (reg:QI 0 ax [orig:447 D.24954 ] [447])
        (reg:QI 0 ax [776])) ge2fitman_read_procpar.cpp:870 93 {*movqi_internal}
     (nil))
(insn 1657 1656 1658 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:447 D.24954 ] [447])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:870 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1658 1657 1659 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1663)
            (pc))) ge2fitman_read_procpar.cpp:870 596 {*jcc_1}
     (nil)
 -> 1663)
;;  succ:       139 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1659 1658 1660 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1660 1659 2104 139 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:873 90 {*movsi_internal}
     (nil))
(jump_insn 2104 1660 2105 139 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:873 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2105 2104 1663)
;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135
;;              137
;;              138
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 448 449 777
(code_label 1663 2105 1664 140 65 "" [3 uses])
(note 1664 1663 1665 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1665 1664 1666 140 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 pos2index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:880 90 {*movsi_internal}
     (nil))
(insn 1666 1665 1667 140 (set (reg/f:DI 0 ax [777])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(insn 1667 1666 1668 140 (parallel [
            (set (reg/f:DI 0 ax [orig:448 D.24957 ] [448])
                (plus:DI (reg/f:DI 0 ax [777])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:882 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1668 1667 1669 140 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(insn 1669 1668 1670 140 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:448 D.24957 ] [448])) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(call_insn/i 1670 1669 1671 140 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:882 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1671 1670 1672 140 (set (reg:SI 0 ax [orig:449 D.24953 ] [449])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:882 90 {*movsi_internal}
     (nil))
(insn 1672 1671 1673 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:449 D.24953 ] [449])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:882 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1673 1672 1674 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1692)
            (pc))) ge2fitman_read_procpar.cpp:882 596 {*jcc_1}
     (nil)
 -> 1692)
;;  succ:       141 (FALLTHRU)
;;              142
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 450 451 452 453 454 455 778 779 780
(note 1674 1673 1675 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1675 1674 1676 141 (set (reg/f:DI 0 ax [778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1676 1675 1677 141 (set (reg:QI 0 ax [orig:450 D.24954 ] [450])
        (mem:QI (reg/f:DI 0 ax [778]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:885 93 {*movqi_internal}
     (nil))
(insn 1677 1676 1678 141 (set (reg:SI 1 dx [orig:451 D.24953 ] [451])
        (zero_extend:SI (reg:QI 0 ax [orig:450 D.24954 ] [450]))) ge2fitman_read_procpar.cpp:885 138 {*zero_extendqisi2}
     (nil))
(insn 1678 1677 1679 141 (set (reg:SI 2 cx [orig:452 D.24953 ] [452])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1679 1678 1680 141 (set (reg:SI 5 di [orig:453 D.24953 ] [453])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1680 1679 1681 141 (set (reg/f:DI 0 ax [779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1681 1680 1682 141 (parallel [
            (set (reg/f:DI 4 si [orig:454 D.24968 ] [454])
                (plus:DI (reg/f:DI 0 ax [779])
                    (const_int 368 [0x170])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:885 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 368 [0x170]))
        (nil)))
(insn 1682 1681 1683 141 (set (reg:DI 0 ax [780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1683 1682 1684 141 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:451 D.24953 ] [451])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1684 1683 1685 141 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:452 D.24953 ] [452])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1685 1684 1686 141 (set (reg:DI 2 cx)
        (const_int 396 [0x18c])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1686 1685 1688 141 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:453 D.24953 ] [453])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1688 1686 1689 141 (set (reg:DI 5 di)
        (reg:DI 0 ax [780])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(call_insn 1689 1688 1690 141 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:885 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1690 1689 1691 141 (set (reg:SI 0 ax [orig:455 D.24953 ] [455])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1691 1690 1692 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 pos2index+0 S4 A32])
        (reg:SI 0 ax [orig:455 D.24953 ] [455])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
;;  succ:       142 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140
;;              141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 456 457 781
(code_label 1692 1691 1693 142 66 "" [1 uses])
(note 1693 1692 1694 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1694 1693 1695 142 (set (reg/f:DI 0 ax [781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(insn 1695 1694 1696 142 (parallel [
            (set (reg/f:DI 0 ax [orig:456 D.24957 ] [456])
                (plus:DI (reg/f:DI 0 ax [781])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:888 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1696 1695 1697 142 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(insn 1697 1696 1698 142 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:456 D.24957 ] [456])) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(call_insn/i 1698 1697 1699 142 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:888 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1699 1698 1700 142 (set (reg:SI 0 ax [orig:457 D.24953 ] [457])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:888 90 {*movsi_internal}
     (nil))
(insn 1700 1699 1701 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:457 D.24953 ] [457])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:888 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1701 1700 1702 142 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1709)
            (pc))) ge2fitman_read_procpar.cpp:888 596 {*jcc_1}
     (nil)
 -> 1709)
;;  succ:       143 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1702 1701 1703 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1703 1702 1704 143 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [0 pos2index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:889 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1704 1703 1705 143 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1744)
            (pc))) ge2fitman_read_procpar.cpp:889 596 {*jcc_1}
     (nil)
 -> 1744)
;;  succ:       144 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1705 1704 1706 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1706 1705 2106 144 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:890 90 {*movsi_internal}
     (nil))
(jump_insn 2106 1706 2107 144 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:890 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2107 2106 1709)
;; basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 458 459 782
(code_label 1709 2107 1710 145 67 "" [1 uses])
(note 1710 1709 1711 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1711 1710 1712 145 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(insn 1712 1711 1713 145 (parallel [
            (set (reg/f:DI 0 ax [orig:458 D.24957 ] [458])
                (plus:DI (reg/f:DI 0 ax [782])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:893 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1713 1712 1714 145 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(insn 1714 1713 1715 145 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:458 D.24957 ] [458])) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(call_insn/i 1715 1714 1716 145 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:893 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1716 1715 1717 145 (set (reg:SI 0 ax [orig:459 D.24953 ] [459])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:893 90 {*movsi_internal}
     (nil))
(insn 1717 1716 1718 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:459 D.24953 ] [459])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:893 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1718 1717 1719 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1744)
            (pc))) ge2fitman_read_procpar.cpp:893 596 {*jcc_1}
     (nil)
 -> 1744)
;;  succ:       146 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 460 461 462 463 464 465 466 783 784 785 786
(note 1719 1718 1720 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1720 1719 1721 146 (set (reg/f:DI 0 ax [783])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:896 89 {*movdi_internal}
     (nil))
(insn 1721 1720 1722 146 (set (reg:QI 0 ax [orig:460 D.24954 ] [460])
        (mem:QI (reg/f:DI 0 ax [783]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:896 93 {*movqi_internal}
     (nil))
(insn 1722 1721 1723 146 (set (reg:SI 1 dx [orig:461 D.24953 ] [461])
        (zero_extend:SI (reg:QI 0 ax [orig:460 D.24954 ] [460]))) ge2fitman_read_procpar.cpp:896 138 {*zero_extendqisi2}
     (nil))
(insn 1723 1722 1724 146 (set (reg:SI 2 cx [orig:462 D.24953 ] [462])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1724 1723 1725 146 (set (reg:SI 5 di [orig:463 D.24953 ] [463])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1725 1724 1726 146 (set (reg/f:DI 0 ax [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:896 89 {*movdi_internal}
     (nil))
(insn 1726 1725 1727 146 (parallel [
            (set (reg/f:DI 4 si [orig:464 D.24968 ] [464])
                (plus:DI (reg/f:DI 0 ax [784])
                    (const_int 368 [0x170])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:896 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 368 [0x170]))
        (nil)))
(insn 1727 1726 1728 146 (set (reg:DI 0 ax [785])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:896 89 {*movdi_internal}
     (nil))
(insn 1728 1727 1729 146 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:461 D.24953 ] [461])) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1729 1728 1730 146 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:462 D.24953 ] [462])) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1730 1729 1731 146 (set (reg:DI 2 cx)
        (const_int 396 [0x18c])) ge2fitman_read_procpar.cpp:896 89 {*movdi_internal}
     (nil))
(insn 1731 1730 1733 146 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:463 D.24953 ] [463])) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1733 1731 1734 146 (set (reg:DI 5 di)
        (reg:DI 0 ax [785])) ge2fitman_read_procpar.cpp:896 89 {*movdi_internal}
     (nil))
(call_insn 1734 1733 1735 146 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:896 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1735 1734 1736 146 (set (reg:SI 0 ax [orig:465 D.24953 ] [465])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:896 90 {*movsi_internal}
     (nil))
(insn 1736 1735 1737 146 (parallel [
            (set (reg:SI 0 ax [786])
                (lshiftrt:SI (reg:SI 0 ax [orig:465 D.24953 ] [465])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:894 529 {*lshrsi3_1}
     (nil))
(insn 1737 1736 1738 146 (set (reg:QI 0 ax [orig:466 D.24954 ] [466])
        (reg:QI 0 ax [786])) ge2fitman_read_procpar.cpp:894 93 {*movqi_internal}
     (nil))
(insn 1738 1737 1739 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:466 D.24954 ] [466])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:894 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1739 1738 1740 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1744)
            (pc))) ge2fitman_read_procpar.cpp:894 596 {*jcc_1}
     (nil)
 -> 1744)
;;  succ:       147 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1740 1739 1741 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1741 1740 2108 147 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:897 90 {*movsi_internal}
     (nil))
(jump_insn 2108 1741 2109 147 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:897 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2109 2108 1744)
;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143
;;              145
;;              146
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 467 468 787
(code_label 1744 2109 1745 148 68 "" [3 uses])
(note 1745 1744 1746 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1746 1745 1747 148 (set (reg/f:DI 0 ax [787])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(insn 1747 1746 1748 148 (parallel [
            (set (reg/f:DI 0 ax [orig:467 D.24957 ] [467])
                (plus:DI (reg/f:DI 0 ax [787])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:928 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1748 1747 1749 148 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(insn 1749 1748 1750 148 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:467 D.24957 ] [467])) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(call_insn/i 1750 1749 1751 148 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:928 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1751 1750 1752 148 (set (reg:SI 0 ax [orig:468 D.24953 ] [468])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:928 90 {*movsi_internal}
     (nil))
(insn 1752 1751 1753 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:468 D.24953 ] [468])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:928 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1753 1752 1754 148 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1779)
            (pc))) ge2fitman_read_procpar.cpp:928 596 {*jcc_1}
     (nil)
 -> 1779)
;;  succ:       149 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148 (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 469 470 471 472 473 474 475 788 789 790 791
(note 1754 1753 1755 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1755 1754 1756 149 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:932 89 {*movdi_internal}
     (nil))
(insn 1756 1755 1757 149 (set (reg:QI 0 ax [orig:469 D.24954 ] [469])
        (mem:QI (reg/f:DI 0 ax [788]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:932 93 {*movqi_internal}
     (nil))
(insn 1757 1756 1758 149 (set (reg:SI 1 dx [orig:470 D.24953 ] [470])
        (zero_extend:SI (reg:QI 0 ax [orig:469 D.24954 ] [469]))) ge2fitman_read_procpar.cpp:932 138 {*zero_extendqisi2}
     (nil))
(insn 1758 1757 1759 149 (set (reg:SI 2 cx [orig:471 D.24953 ] [471])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1759 1758 1760 149 (set (reg:SI 5 di [orig:472 D.24953 ] [472])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 149 (set (reg/f:DI 0 ax [789])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:932 89 {*movdi_internal}
     (nil))
(insn 1761 1760 1762 149 (parallel [
            (set (reg/f:DI 4 si [orig:473 D.24968 ] [473])
                (plus:DI (reg/f:DI 0 ax [789])
                    (const_int 372 [0x174])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:932 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 372 [0x174]))
        (nil)))
(insn 1762 1761 1763 149 (set (reg:DI 0 ax [790])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:932 89 {*movdi_internal}
     (nil))
(insn 1763 1762 1764 149 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:470 D.24953 ] [470])) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1764 1763 1765 149 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:471 D.24953 ] [471])) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1765 1764 1766 149 (set (reg:DI 2 cx)
        (const_int 400 [0x190])) ge2fitman_read_procpar.cpp:932 89 {*movdi_internal}
     (nil))
(insn 1766 1765 1768 149 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:472 D.24953 ] [472])) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1768 1766 1769 149 (set (reg:DI 5 di)
        (reg:DI 0 ax [790])) ge2fitman_read_procpar.cpp:932 89 {*movdi_internal}
     (nil))
(call_insn 1769 1768 1770 149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:932 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1770 1769 1771 149 (set (reg:SI 0 ax [orig:474 D.24953 ] [474])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:932 90 {*movsi_internal}
     (nil))
(insn 1771 1770 1772 149 (parallel [
            (set (reg:SI 0 ax [791])
                (lshiftrt:SI (reg:SI 0 ax [orig:474 D.24953 ] [474])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:930 529 {*lshrsi3_1}
     (nil))
(insn 1772 1771 1773 149 (set (reg:QI 0 ax [orig:475 D.24954 ] [475])
        (reg:QI 0 ax [791])) ge2fitman_read_procpar.cpp:930 93 {*movqi_internal}
     (nil))
(insn 1773 1772 1774 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:475 D.24954 ] [475])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:930 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1774 1773 1775 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1814)
            (pc))) ge2fitman_read_procpar.cpp:930 596 {*jcc_1}
     (nil)
 -> 1814)
;;  succ:       150 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1775 1774 1776 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1776 1775 2110 150 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:933 90 {*movsi_internal}
     (nil))
(jump_insn 2110 1776 2111 150 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:933 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2111 2110 1779)
;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 476 477 792
(code_label 1779 2111 1780 151 69 "" [1 uses])
(note 1780 1779 1781 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1781 1780 1782 151 (set (reg/f:DI 0 ax [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(insn 1782 1781 1783 151 (parallel [
            (set (reg/f:DI 0 ax [orig:476 D.24957 ] [476])
                (plus:DI (reg/f:DI 0 ax [792])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:936 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1783 1782 1784 151 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(insn 1784 1783 1785 151 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:476 D.24957 ] [476])) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(call_insn/i 1785 1784 1786 151 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:936 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1786 1785 1787 151 (set (reg:SI 0 ax [orig:477 D.24953 ] [477])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:936 90 {*movsi_internal}
     (nil))
(insn 1787 1786 1788 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:477 D.24953 ] [477])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:936 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1788 1787 1789 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1814)
            (pc))) ge2fitman_read_procpar.cpp:936 596 {*jcc_1}
     (nil)
 -> 1814)
;;  succ:       152 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 478 479 480 481 482 483 484 793 794 795 796
(note 1789 1788 1790 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1790 1789 1791 152 (set (reg/f:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:939 89 {*movdi_internal}
     (nil))
(insn 1791 1790 1792 152 (set (reg:QI 0 ax [orig:478 D.24954 ] [478])
        (mem:QI (reg/f:DI 0 ax [793]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:939 93 {*movqi_internal}
     (nil))
(insn 1792 1791 1793 152 (set (reg:SI 1 dx [orig:479 D.24953 ] [479])
        (zero_extend:SI (reg:QI 0 ax [orig:478 D.24954 ] [478]))) ge2fitman_read_procpar.cpp:939 138 {*zero_extendqisi2}
     (nil))
(insn 1793 1792 1794 152 (set (reg:SI 2 cx [orig:480 D.24953 ] [480])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1794 1793 1795 152 (set (reg:SI 5 di [orig:481 D.24953 ] [481])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1795 1794 1796 152 (set (reg/f:DI 0 ax [794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:939 89 {*movdi_internal}
     (nil))
(insn 1796 1795 1797 152 (parallel [
            (set (reg/f:DI 4 si [orig:482 D.24968 ] [482])
                (plus:DI (reg/f:DI 0 ax [794])
                    (const_int 372 [0x174])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:939 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 372 [0x174]))
        (nil)))
(insn 1797 1796 1798 152 (set (reg:DI 0 ax [795])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:939 89 {*movdi_internal}
     (nil))
(insn 1798 1797 1799 152 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:479 D.24953 ] [479])) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1799 1798 1800 152 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:480 D.24953 ] [480])) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1800 1799 1801 152 (set (reg:DI 2 cx)
        (const_int 400 [0x190])) ge2fitman_read_procpar.cpp:939 89 {*movdi_internal}
     (nil))
(insn 1801 1800 1803 152 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:481 D.24953 ] [481])) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1803 1801 1804 152 (set (reg:DI 5 di)
        (reg:DI 0 ax [795])) ge2fitman_read_procpar.cpp:939 89 {*movdi_internal}
     (nil))
(call_insn 1804 1803 1805 152 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:939 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1805 1804 1806 152 (set (reg:SI 0 ax [orig:483 D.24953 ] [483])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:939 90 {*movsi_internal}
     (nil))
(insn 1806 1805 1807 152 (parallel [
            (set (reg:SI 0 ax [796])
                (lshiftrt:SI (reg:SI 0 ax [orig:483 D.24953 ] [483])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:937 529 {*lshrsi3_1}
     (nil))
(insn 1807 1806 1808 152 (set (reg:QI 0 ax [orig:484 D.24954 ] [484])
        (reg:QI 0 ax [796])) ge2fitman_read_procpar.cpp:937 93 {*movqi_internal}
     (nil))
(insn 1808 1807 1809 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:484 D.24954 ] [484])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:937 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1809 1808 1810 152 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1814)
            (pc))) ge2fitman_read_procpar.cpp:937 596 {*jcc_1}
     (nil)
 -> 1814)
;;  succ:       153 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1810 1809 1811 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1811 1810 2112 153 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:940 90 {*movsi_internal}
     (nil))
(jump_insn 2112 1811 2113 153 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:940 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2113 2112 1814)
;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       149
;;              151
;;              152
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 485 486 797
(code_label 1814 2113 1815 154 70 "" [3 uses])
(note 1815 1814 1816 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1816 1815 1817 154 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:947 90 {*movsi_internal}
     (nil))
(insn 1817 1816 1818 154 (set (reg/f:DI 0 ax [797])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(insn 1818 1817 1819 154 (parallel [
            (set (reg/f:DI 0 ax [orig:485 D.24957 ] [485])
                (plus:DI (reg/f:DI 0 ax [797])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:949 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1819 1818 1820 154 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(insn 1820 1819 1821 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:485 D.24957 ] [485])) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(call_insn/i 1821 1820 1822 154 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:949 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1822 1821 1823 154 (set (reg:SI 0 ax [orig:486 D.24953 ] [486])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:949 90 {*movsi_internal}
     (nil))
(insn 1823 1822 1824 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:486 D.24953 ] [486])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:949 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1824 1823 1825 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1849)
            (pc))) ge2fitman_read_procpar.cpp:949 596 {*jcc_1}
     (nil)
 -> 1849)
;;  succ:       155 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 487 488 489 490 491 492 798 799 800 801
(note 1825 1824 1826 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1826 1825 1827 155 (set (reg/f:DI 0 ax [798])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:952 89 {*movdi_internal}
     (nil))
(insn 1827 1826 1828 155 (set (reg:QI 0 ax [orig:487 D.24954 ] [487])
        (mem:QI (reg/f:DI 0 ax [798]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:952 93 {*movqi_internal}
     (nil))
(insn 1828 1827 1829 155 (set (reg:SI 1 dx [orig:488 D.24953 ] [488])
        (zero_extend:SI (reg:QI 0 ax [orig:487 D.24954 ] [487]))) ge2fitman_read_procpar.cpp:952 138 {*zero_extendqisi2}
     (nil))
(insn 1829 1828 1830 155 (set (reg:SI 2 cx [orig:489 D.24953 ] [489])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1830 1829 1831 155 (set (reg:SI 5 di [orig:490 D.24953 ] [490])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1831 1830 1832 155 (parallel [
            (set (reg:DI 4 si [799])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:952 221 {*adddi_1}
     (nil))
(insn 1832 1831 1833 155 (set (reg:DI 0 ax [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:952 89 {*movdi_internal}
     (nil))
(insn 1833 1832 1834 155 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:488 D.24953 ] [488])) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1834 1833 1835 155 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:489 D.24953 ] [489])) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1835 1834 1836 155 (set (reg:DI 2 cx)
        (const_int 412 [0x19c])) ge2fitman_read_procpar.cpp:952 89 {*movdi_internal}
     (nil))
(insn 1836 1835 1838 155 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:490 D.24953 ] [490])) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1838 1836 1839 155 (set (reg:DI 5 di)
        (reg:DI 0 ax [800])) ge2fitman_read_procpar.cpp:952 89 {*movdi_internal}
     (nil))
(call_insn 1839 1838 1840 155 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:952 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1840 1839 1841 155 (set (reg:SI 0 ax [orig:491 D.24953 ] [491])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:952 90 {*movsi_internal}
     (nil))
(insn 1841 1840 1842 155 (parallel [
            (set (reg:SI 0 ax [801])
                (lshiftrt:SI (reg:SI 0 ax [orig:491 D.24953 ] [491])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:950 529 {*lshrsi3_1}
     (nil))
(insn 1842 1841 1843 155 (set (reg:QI 0 ax [orig:492 D.24954 ] [492])
        (reg:QI 0 ax [801])) ge2fitman_read_procpar.cpp:950 93 {*movqi_internal}
     (nil))
(insn 1843 1842 1844 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:492 D.24954 ] [492])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:950 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1844 1843 1845 155 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1849)
            (pc))) ge2fitman_read_procpar.cpp:950 596 {*jcc_1}
     (nil)
 -> 1849)
;;  succ:       156 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1845 1844 1846 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1846 1845 2114 156 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:953 90 {*movsi_internal}
     (nil))
(jump_insn 2114 1846 2115 156 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:953 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2115 2114 1849)
;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154
;;              155
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 493 494 495 496 802 803
(code_label 1849 2115 1850 157 71 "" [2 uses])
(note 1850 1849 1851 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1851 1850 1852 157 (set (reg:SI 0 ax [orig:493 D.24953 ] [493])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:956 90 {*movsi_internal}
     (nil))
(insn 1852 1851 2138 157 (set (reg:SF 24 xmm3 [orig:494 D.24955 ] [494])
        (float:SF (reg:SI 0 ax [orig:493 D.24953 ] [493]))) ge2fitman_read_procpar.cpp:956 199 {*floatsisf2_sse}
     (nil))
(insn 2138 1852 1853 157 (set (reg:SF 0 ax [orig:494 D.24955 ] [494])
        (reg:SF 24 xmm3 [orig:494 D.24955 ] [494])) ge2fitman_read_procpar.cpp:956 129 {*movsf_internal}
     (nil))
(insn 1853 2138 1854 157 (set (reg/f:DI 1 dx [802])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:956 89 {*movdi_internal}
     (nil))
(insn 1854 1853 1855 157 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [802])
                (const_int 352 [0x160])) [0 procpar_info_222(D)->R1+0 S4 A64])
        (reg:SF 0 ax [orig:494 D.24955 ] [494])) ge2fitman_read_procpar.cpp:956 129 {*movsf_internal}
     (nil))
(insn 1855 1854 1856 157 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:961 90 {*movsi_internal}
     (nil))
(insn 1856 1855 1857 157 (set (reg/f:DI 0 ax [803])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(insn 1857 1856 1858 157 (parallel [
            (set (reg/f:DI 0 ax [orig:495 D.24957 ] [495])
                (plus:DI (reg/f:DI 0 ax [803])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:963 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1858 1857 1859 157 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(insn 1859 1858 1860 157 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:495 D.24957 ] [495])) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(call_insn/i 1860 1859 1861 157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:963 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1861 1860 1862 157 (set (reg:SI 0 ax [orig:496 D.24953 ] [496])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:963 90 {*movsi_internal}
     (nil))
(insn 1862 1861 1863 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:496 D.24953 ] [496])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:963 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1863 1862 1864 157 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1888)
            (pc))) ge2fitman_read_procpar.cpp:963 596 {*jcc_1}
     (nil)
 -> 1888)
;;  succ:       158 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 497 498 499 500 501 502 804 805 806 807
(note 1864 1863 1865 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1865 1864 1866 158 (set (reg/f:DI 0 ax [804])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:966 89 {*movdi_internal}
     (nil))
(insn 1866 1865 1867 158 (set (reg:QI 0 ax [orig:497 D.24954 ] [497])
        (mem:QI (reg/f:DI 0 ax [804]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:966 93 {*movqi_internal}
     (nil))
(insn 1867 1866 1868 158 (set (reg:SI 1 dx [orig:498 D.24953 ] [498])
        (zero_extend:SI (reg:QI 0 ax [orig:497 D.24954 ] [497]))) ge2fitman_read_procpar.cpp:966 138 {*zero_extendqisi2}
     (nil))
(insn 1868 1867 1869 158 (set (reg:SI 2 cx [orig:499 D.24953 ] [499])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1869 1868 1870 158 (set (reg:SI 5 di [orig:500 D.24953 ] [500])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1870 1869 1871 158 (parallel [
            (set (reg:DI 4 si [805])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:966 221 {*adddi_1}
     (nil))
(insn 1871 1870 1872 158 (set (reg:DI 0 ax [806])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:966 89 {*movdi_internal}
     (nil))
(insn 1872 1871 1873 158 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:498 D.24953 ] [498])) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1873 1872 1874 158 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:499 D.24953 ] [499])) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1874 1873 1875 158 (set (reg:DI 2 cx)
        (const_int 416 [0x1a0])) ge2fitman_read_procpar.cpp:966 89 {*movdi_internal}
     (nil))
(insn 1875 1874 1877 158 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:500 D.24953 ] [500])) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1877 1875 1878 158 (set (reg:DI 5 di)
        (reg:DI 0 ax [806])) ge2fitman_read_procpar.cpp:966 89 {*movdi_internal}
     (nil))
(call_insn 1878 1877 1879 158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:966 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1879 1878 1880 158 (set (reg:SI 0 ax [orig:501 D.24953 ] [501])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:966 90 {*movsi_internal}
     (nil))
(insn 1880 1879 1881 158 (parallel [
            (set (reg:SI 0 ax [807])
                (lshiftrt:SI (reg:SI 0 ax [orig:501 D.24953 ] [501])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:964 529 {*lshrsi3_1}
     (nil))
(insn 1881 1880 1882 158 (set (reg:QI 0 ax [orig:502 D.24954 ] [502])
        (reg:QI 0 ax [807])) ge2fitman_read_procpar.cpp:964 93 {*movqi_internal}
     (nil))
(insn 1882 1881 1883 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:502 D.24954 ] [502])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:964 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1883 1882 1884 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1888)
            (pc))) ge2fitman_read_procpar.cpp:964 596 {*jcc_1}
     (nil)
 -> 1888)
;;  succ:       159 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1884 1883 1885 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1885 1884 2116 159 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:967 90 {*movsi_internal}
     (nil))
(jump_insn 2116 1885 2117 159 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:967 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2117 2116 1888)
;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157
;;              158
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 503 504 505 506 808 809
(code_label 1888 2117 1889 160 72 "" [2 uses])
(note 1889 1888 1890 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1890 1889 1891 160 (set (reg:SI 0 ax [orig:503 D.24953 ] [503])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:970 90 {*movsi_internal}
     (nil))
(insn 1891 1890 2139 160 (set (reg:SF 25 xmm4 [orig:504 D.24955 ] [504])
        (float:SF (reg:SI 0 ax [orig:503 D.24953 ] [503]))) ge2fitman_read_procpar.cpp:970 199 {*floatsisf2_sse}
     (nil))
(insn 2139 1891 1892 160 (set (reg:SF 0 ax [orig:504 D.24955 ] [504])
        (reg:SF 25 xmm4 [orig:504 D.24955 ] [504])) ge2fitman_read_procpar.cpp:970 129 {*movsf_internal}
     (nil))
(insn 1892 2139 1893 160 (set (reg/f:DI 1 dx [808])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:970 89 {*movdi_internal}
     (nil))
(insn 1893 1892 1894 160 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [808])
                (const_int 356 [0x164])) [0 procpar_info_222(D)->R2+0 S4 A32])
        (reg:SF 0 ax [orig:504 D.24955 ] [504])) ge2fitman_read_procpar.cpp:970 129 {*movsf_internal}
     (nil))
(insn 1894 1893 1895 160 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:975 90 {*movsi_internal}
     (nil))
(insn 1895 1894 1896 160 (set (reg/f:DI 0 ax [809])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(insn 1896 1895 1897 160 (parallel [
            (set (reg/f:DI 0 ax [orig:505 D.24957 ] [505])
                (plus:DI (reg/f:DI 0 ax [809])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:977 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1897 1896 1898 160 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(insn 1898 1897 1899 160 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:505 D.24957 ] [505])) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(call_insn/i 1899 1898 1900 160 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:977 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1900 1899 1901 160 (set (reg:SI 0 ax [orig:506 D.24953 ] [506])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:977 90 {*movsi_internal}
     (nil))
(insn 1901 1900 1902 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:506 D.24953 ] [506])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:977 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1902 1901 1903 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1927)
            (pc))) ge2fitman_read_procpar.cpp:977 596 {*jcc_1}
     (nil)
 -> 1927)
;;  succ:       161 (FALLTHRU)
;;              163
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 507 508 509 510 511 512 810 811 812 813
(note 1903 1902 1904 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1904 1903 1905 161 (set (reg/f:DI 0 ax [810])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:981 89 {*movdi_internal}
     (nil))
(insn 1905 1904 1906 161 (set (reg:QI 0 ax [orig:507 D.24954 ] [507])
        (mem:QI (reg/f:DI 0 ax [810]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:981 93 {*movqi_internal}
     (nil))
(insn 1906 1905 1907 161 (set (reg:SI 1 dx [orig:508 D.24953 ] [508])
        (zero_extend:SI (reg:QI 0 ax [orig:507 D.24954 ] [507]))) ge2fitman_read_procpar.cpp:981 138 {*zero_extendqisi2}
     (nil))
(insn 1907 1906 1908 161 (set (reg:SI 2 cx [orig:509 D.24953 ] [509])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1908 1907 1909 161 (set (reg:SI 5 di [orig:510 D.24953 ] [510])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1909 1908 1910 161 (parallel [
            (set (reg:DI 4 si [811])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:981 221 {*adddi_1}
     (nil))
(insn 1910 1909 1911 161 (set (reg:DI 0 ax [812])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:981 89 {*movdi_internal}
     (nil))
(insn 1911 1910 1912 161 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:508 D.24953 ] [508])) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1912 1911 1913 161 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:509 D.24953 ] [509])) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1913 1912 1914 161 (set (reg:DI 2 cx)
        (const_int 420 [0x1a4])) ge2fitman_read_procpar.cpp:981 89 {*movdi_internal}
     (nil))
(insn 1914 1913 1916 161 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:510 D.24953 ] [510])) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1916 1914 1917 161 (set (reg:DI 5 di)
        (reg:DI 0 ax [812])) ge2fitman_read_procpar.cpp:981 89 {*movdi_internal}
     (nil))
(call_insn 1917 1916 1918 161 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:981 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1918 1917 1919 161 (set (reg:SI 0 ax [orig:511 D.24953 ] [511])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:981 90 {*movsi_internal}
     (nil))
(insn 1919 1918 1920 161 (parallel [
            (set (reg:SI 0 ax [813])
                (lshiftrt:SI (reg:SI 0 ax [orig:511 D.24953 ] [511])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:979 529 {*lshrsi3_1}
     (nil))
(insn 1920 1919 1921 161 (set (reg:QI 0 ax [orig:512 D.24954 ] [512])
        (reg:QI 0 ax [813])) ge2fitman_read_procpar.cpp:979 93 {*movqi_internal}
     (nil))
(insn 1921 1920 1922 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:512 D.24954 ] [512])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:979 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1922 1921 1923 161 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1961)
            (pc))) ge2fitman_read_procpar.cpp:979 596 {*jcc_1}
     (nil)
 -> 1961)
;;  succ:       162 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1923 1922 1924 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1924 1923 2118 162 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:982 90 {*movsi_internal}
     (nil))
(jump_insn 2118 1924 2119 162 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:982 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2119 2118 1927)
;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 513 514 814
(code_label 1927 2119 1928 163 73 "" [1 uses])
(note 1928 1927 1929 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1929 1928 1930 163 (set (reg/f:DI 0 ax [814])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(insn 1930 1929 1931 163 (parallel [
            (set (reg/f:DI 0 ax [orig:513 D.24957 ] [513])
                (plus:DI (reg/f:DI 0 ax [814])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:985 221 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1931 1930 1932 163 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b9523c584c0 *.LC15>)) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(insn 1932 1931 1933 163 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:513 D.24957 ] [513])) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(call_insn/i 1933 1932 1934 163 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b95225cc300 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:985 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1934 1933 1935 163 (set (reg:SI 0 ax [orig:514 D.24953 ] [514])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:985 90 {*movsi_internal}
     (nil))
(insn 1935 1934 1936 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:514 D.24953 ] [514])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:985 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1936 1935 1937 163 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1961)
            (pc))) ge2fitman_read_procpar.cpp:985 596 {*jcc_1}
     (nil)
 -> 1961)
;;  succ:       164 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 515 516 517 518 519 520 815 816 817 818
(note 1937 1936 1938 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1938 1937 1939 164 (set (reg/f:DI 0 ax [815])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:988 89 {*movdi_internal}
     (nil))
(insn 1939 1938 1940 164 (set (reg:QI 0 ax [orig:515 D.24954 ] [515])
        (mem:QI (reg/f:DI 0 ax [815]) [0 *swap_bytes_20(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:988 93 {*movqi_internal}
     (nil))
(insn 1940 1939 1941 164 (set (reg:SI 1 dx [orig:516 D.24953 ] [516])
        (zero_extend:SI (reg:QI 0 ax [orig:515 D.24954 ] [515]))) ge2fitman_read_procpar.cpp:988 138 {*zero_extendqisi2}
     (nil))
(insn 1941 1940 1942 164 (set (reg:SI 2 cx [orig:517 D.24953 ] [517])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1942 1941 1943 164 (set (reg:SI 5 di [orig:518 D.24953 ] [518])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1943 1942 1944 164 (parallel [
            (set (reg:DI 4 si [816])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:988 221 {*adddi_1}
     (nil))
(insn 1944 1943 1945 164 (set (reg:DI 0 ax [817])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:988 89 {*movdi_internal}
     (nil))
(insn 1945 1944 1946 164 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:516 D.24953 ] [516])) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1946 1945 1947 164 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:517 D.24953 ] [517])) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1947 1946 1948 164 (set (reg:DI 2 cx)
        (const_int 420 [0x1a4])) ge2fitman_read_procpar.cpp:988 89 {*movdi_internal}
     (nil))
(insn 1948 1947 1950 164 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:518 D.24953 ] [518])) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1950 1948 1951 164 (set (reg:DI 5 di)
        (reg:DI 0 ax [817])) ge2fitman_read_procpar.cpp:988 89 {*movdi_internal}
     (nil))
(call_insn 1951 1950 1952 164 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x2b9523b75600 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:988 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1952 1951 1953 164 (set (reg:SI 0 ax [orig:519 D.24953 ] [519])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:988 90 {*movsi_internal}
     (nil))
(insn 1953 1952 1954 164 (parallel [
            (set (reg:SI 0 ax [818])
                (lshiftrt:SI (reg:SI 0 ax [orig:519 D.24953 ] [519])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:986 529 {*lshrsi3_1}
     (nil))
(insn 1954 1953 1955 164 (set (reg:QI 0 ax [orig:520 D.24954 ] [520])
        (reg:QI 0 ax [818])) ge2fitman_read_procpar.cpp:986 93 {*movqi_internal}
     (nil))
(insn 1955 1954 1956 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:520 D.24954 ] [520])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:986 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1956 1955 1957 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1961)
            (pc))) ge2fitman_read_procpar.cpp:986 596 {*jcc_1}
     (nil)
 -> 1961)
;;  succ:       165 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 1957 1956 1958 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1958 1957 2120 165 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:989 90 {*movsi_internal}
     (nil))
(jump_insn 2120 1958 2121 165 (set (pc)
        (label_ref 1970)) ge2fitman_read_procpar.cpp:989 636 {jump}
     (nil)
 -> 1970)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 2121 2120 1961)
;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161
;;              163
;;              164
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83 521 522 819
(code_label 1961 2121 1962 166 74 "" [3 uses])
(note 1962 1961 1963 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1963 1962 1964 166 (set (reg:SI 0 ax [orig:521 D.24953 ] [521])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:993 90 {*movsi_internal}
     (nil))
(insn 1964 1963 2140 166 (set (reg:SF 26 xmm5 [orig:522 D.24955 ] [522])
        (float:SF (reg:SI 0 ax [orig:521 D.24953 ] [521]))) ge2fitman_read_procpar.cpp:993 199 {*floatsisf2_sse}
     (nil))
(insn 2140 1964 1965 166 (set (reg:SF 0 ax [orig:522 D.24955 ] [522])
        (reg:SF 26 xmm5 [orig:522 D.24955 ] [522])) ge2fitman_read_procpar.cpp:993 129 {*movsf_internal}
     (nil))
(insn 1965 2140 1966 166 (set (reg/f:DI 1 dx [819])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:993 89 {*movdi_internal}
     (nil))
(insn 1966 1965 1967 166 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [819])
                (const_int 360 [0x168])) [0 procpar_info_222(D)->gain+0 S4 A64])
        (reg:SF 0 ax [orig:522 D.24955 ] [522])) ge2fitman_read_procpar.cpp:993 129 {*movsf_internal}
     (nil))
(insn 1967 1966 1970 166 (set (reg:SI 0 ax [orig:83 D.24953 ] [83])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1001 90 {*movsi_internal}
     (nil))
;;  succ:       167 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       166 (FALLTHRU)
;;              162 [100.0%] 
;;              3 [100.0%] 
;;              21 [100.0%] 
;;              38 [100.0%] 
;;              41 [100.0%] 
;;              44 [100.0%] 
;;              47 [100.0%] 
;;              50 [100.0%] 
;;              53 [100.0%] 
;;              56 [100.0%] 
;;              59 [100.0%] 
;;              62 [100.0%] 
;;              65 [100.0%] 
;;              74 [100.0%] 
;;              77 [100.0%] 
;;              84 [100.0%] 
;;              87 [100.0%] 
;;              90 [100.0%] 
;;              93 [100.0%] 
;;              95 [100.0%] 
;;              97 [100.0%] 
;;              99 [100.0%] 
;;              101 [100.0%] 
;;              106 [100.0%] 
;;              109 [100.0%] 
;;              112 [100.0%] 
;;              115 [100.0%] 
;;              118 [100.0%] 
;;              121 [100.0%] 
;;              123 [100.0%] 
;;              125 [100.0%] 
;;              130 [100.0%] 
;;              133 [100.0%] 
;;              136 [100.0%] 
;;              139 [100.0%] 
;;              144 [100.0%] 
;;              147 [100.0%] 
;;              150 [100.0%] 
;;              153 [100.0%] 
;;              156 [100.0%] 
;;              159 [100.0%] 
;;              165 [100.0%] 
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 523
(code_label 1970 1967 1971 167 75 "" [42 uses])
(note 1971 1970 1972 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1972 1971 1976 167 (set (reg:SI 0 ax [orig:523 <retval> ] [523])
        (reg:SI 0 ax [orig:83 D.24953 ] [83])) 90 {*movsi_internal}
     (nil))
(insn 1976 1972 1977 167 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:523 <retval> ] [523])) ge2fitman_read_procpar.cpp:1003 90 {*movsi_internal}
     (nil))
(insn 1977 1976 2122 167 (use (reg/i:SI 0 ax)) ge2fitman_read_procpar.cpp:1003 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 2122 1977 0 NOTE_INSN_DELETED)

;; Function int read_field(FILE*, char*, int, long int, int, bool) (_Z10read_fieldP8_IO_FILEPcilib, funcdef_no=1021, decl_uid=23947, symbol_order=228)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=5,overall=615,losers=1,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 37
changing reg in insn 55
changing reg in insn 19
changing reg in insn 23
changing reg in insn 27
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 55
changing reg in insn 59
changing reg in insn 7
changing reg in insn 12
changing reg in insn 15
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 45
changing reg in insn 47
changing reg in insn 46
changing reg in insn 48
deleting insn with uid = 22.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns


int read_field(FILE*, char*, int, long int, int, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={17d,13u} r1={9d,5u} r2={7d,3u} r4={8d,4u} r5={9d,5u} r6={1d,22u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={7d,3u} r18={4d} r19={4d} r20={1d,1u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} 
;;    total ref usage 387{318d,69u,0e} in 42{38 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87 89 90 91 92 93 94 95
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])
        (reg:DI 4 si [ var_pointer ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])
        (reg:SI 1 dx [ var_size ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])
        (reg:DI 2 cx [ hdr_field_offset ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])
        (reg:SI 37 r8 [ hdr_field_size ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [89])
        (reg:SI 38 r9 [ swap_bytes ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
        (reg:QI 0 ax [89])) ge2fitman_read_procpar.cpp:1008 93 {*movqi_internal}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg:DI 2 cx [90])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [91])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1014 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [90])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [91])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x2b952280d400 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1014 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 0 ax [92])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1015 90 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx [orig:84 D.24991 ] [84])
        (sign_extend:DI (reg:SI 0 ax [92]))) ge2fitman_read_procpar.cpp:1015 142 {*extendsidi2_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 21 20 24 2 (set (reg:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 24 21 25 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [94])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x2b9522804f00 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 1 dx [orig:85 D.24991 ] [85])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 0 ax [95])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1015 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 0 ax [orig:86 D.24991 ] [86])
        (sign_extend:DI (reg:SI 0 ax [95]))) ge2fitman_read_procpar.cpp:1015 142 {*extendsidi2_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [orig:85 D.24991 ] [85])
            (reg:DI 0 ax [orig:86 D.24991 ] [86]))) ge2fitman_read_procpar.cpp:1015 8 {*cmpdi_1}
     (nil))
(insn 31 30 32 2 (set (reg:QI 0 ax [orig:87 D.24992 ] [87])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 592 {*setcc_qi}
     (nil))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:87 D.24992 ] [87])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ge2fitman_read_procpar.cpp:1015 596 {*jcc_1}
     (nil)
 -> 40)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x2b9523cd3428 *.LC30>)) ge2fitman_read_procpar.cpp:1017 89 {*movdi_internal}
     (nil))
(call_insn 36 35 37 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x2b95225d9900 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1017 649 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 62 3 (set (reg:SI 0 ax [orig:83 D.24990 ] [83])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:1021 90 {*movsi_internal}
     (nil))
(jump_insn 62 37 63 3 (set (pc)
        (label_ref 53)) ge2fitman_read_procpar.cpp:1021 636 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

(barrier 63 62 40)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 40 63 41 4 87 "" [1 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1031 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ge2fitman_read_procpar.cpp:1031 596 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 96 97
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:SI 1 dx [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1032 90 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) ge2fitman_read_procpar.cpp:1032 89 {*movdi_internal}
     (nil))
(insn 47 46 48 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [96])) ge2fitman_read_procpar.cpp:1032 90 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [97])) ge2fitman_read_procpar.cpp:1032 89 {*movdi_internal}
     (nil))
(call_insn 49 48 50 5 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x2b9523b9b800 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1032 642 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(code_label 50 49 51 6 89 "" [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg:SI 0 ax [orig:83 D.24990 ] [83])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1039 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 83
;; lr  def 	 0 [ax] 88
(code_label 53 52 54 7 88 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 7 (set (reg:SI 0 ax [orig:88 <retval> ] [88])
        (reg:SI 0 ax [orig:83 D.24990 ] [83])) 90 {*movsi_internal}
     (nil))
(insn 59 55 60 7 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:88 <retval> ] [88])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 60 59 64 7 (use (reg/i:SI 0 ax)) ge2fitman_read_procpar.cpp:1041 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 64 60 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1022, decl_uid=24196, symbol_order=252)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rzw {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rzw {*call_value}
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,9u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} 
;;    total ref usage 185{160d,25u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_read_procpar.cpp:1041 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) ge2fitman_read_procpar.cpp:1041 596 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_read_procpar.cpp:1041 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) ge2fitman_read_procpar.cpp:1041 596 {*jcc_1}
     (nil)
 -> 21)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b9523b74000 __ioinit>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x2b95236cd500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.9/iostream:74 642 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x2b9523bc7558 __dso_handle>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x2b9523b74000 __ioinit>)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x2b95236cd700 __comp_dtor >)) /usr/include/c++/4.9/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x2b9523ba7800 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.9/iostream:74 649 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 18 22 5 90 "" [2 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 23 22 0 NOTE_INSN_DELETED)

;; Function (static initializers for ge2fitman_read_procpar.cpp) (_GLOBAL__sub_I__Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header, funcdef_no=1023, decl_uid=24202, symbol_order=361)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rzw {*call}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for ge2fitman_read_procpar.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 96{88d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x2b9523ba7700 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1041 642 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 10 7 0 NOTE_INSN_DELETED)
