
;; Function int pre_process(int*, Preprocess*, Procpar_info*, float**, float**) (_Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_, funcdef_no=1021, decl_uid=24410, cgraph_uid=226, symbol_order=227)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 52 n_edges 75 count 52 (    1)
Building IRA IR
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 272.
verify found no changes in insn with uid = 337.
verify found no changes in insn with uid = 367.
verify found no changes in insn with uid = 406.
verify found no changes in insn with uid = 431.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 477.
verify found no changes in insn with uid = 516.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 604.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r416: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r416,l0) best DREG, allocno GENERAL_REGS
    r415: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r415,l0) best CREG, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r412,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r411,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r407,l0) best DREG, allocno GENERAL_REGS
    r406: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r406,l0) best CREG, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a31 (r401,l0) best SSE_REGS, allocno SSE_REGS
    r400: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r400,l0) best SSE_REGS, allocno SSE_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r398,l0) best SSE_REGS, allocno SSE_REGS
    r397: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r397,l0) best SSE_REGS, allocno SSE_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r388,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r387: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r387,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r386: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r386,l0) best CREG, allocno GENERAL_REGS
    r385: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r385,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r384,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r380,l0) best CREG, allocno GENERAL_REGS
    r379: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r379,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r378,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r376,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r374,l0) best DREG, allocno GENERAL_REGS
    r373: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r373,l0) best CREG, allocno GENERAL_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r368,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r367,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r356,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a158 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r340: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r340,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r339: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r339,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r336,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a174 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a175 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a173 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a176 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a177 (r330,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r329: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a178 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a197 (r319,l0) best SSE_REGS, allocno SSE_REGS
    r318: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a196 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a199 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a200 (r315,l0) best SSE_REGS, allocno SSE_REGS
    r314: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a203 (r314,l0) best SSE_REGS, allocno SSE_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a219 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a220 (r304,l0) best SSE_REGS, allocno SSE_REGS
    r303: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a218 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a221 (r302,l0) best SSE_REGS, allocno SSE_REGS
    r301: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a222 (r301,l0) best SSE_REGS, allocno SSE_REGS
    r300: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a223 (r300,l0) best SSE_REGS, allocno SSE_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a232 (r295,l0) best SSE_REGS, allocno SSE_REGS
    r294: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r294,l0) best SSE_REGS, allocno SSE_REGS
    r293: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a234 (r293,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a258 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a260 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a271 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a288 (r280,l0) best SSE_REGS, allocno SSE_REGS
    r279: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a289 (r279,l0) best SSE_REGS, allocno SSE_REGS
    r278: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a290 (r278,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a300 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a303 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a308 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a317 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a320 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a324 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r268,l0) best AREG, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r266,l0) best DIREG, allocno GENERAL_REGS
    r265: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r265,l0) best SIREG, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r258,l0) best DIREG, allocno GENERAL_REGS
    r257: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r257,l0) best SIREG, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r252,l0) best SSE_REGS, allocno SSE_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r250,l0) best SSE_REGS, allocno SSE_REGS
    r249: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r249,l0) best DIREG, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r245,l0) best SIREG, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r237,l0) best DIREG, allocno GENERAL_REGS
    r236: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r236,l0) best SIREG, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r234,l0) best DREG, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r231,l0) best DIREG, allocno GENERAL_REGS
    r230: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a74 (r230,l0) best SIREG, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r228,l0) best DREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r225,l0) best DIREG, allocno GENERAL_REGS
    r224: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r224,l0) best SIREG, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r221,l0) best DIREG, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r217,l0) best SIREG, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r213,l0) best DREG, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r206,l0) best DIREG, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r202,l0) best SIREG, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r191,l0) best SIREG, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a140 (r188,l0) best DREG, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a157 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a159 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a202 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a204 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a180 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a182 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a235 (r157,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a236 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a238 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a240 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a239 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a252 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a257 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a259 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a261 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a262 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a237 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a264 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a266 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a267 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a268 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a270 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a269 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a265 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a277 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a291 (r116,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a292 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a294 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a296 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a298 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a299 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a301 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a302 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a295 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a304 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a305 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a306 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a307 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a293 (r100,l0) best SSE_REGS, allocno SSE_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a312 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a314 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a316 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a318 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a319 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a313 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a321 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a322 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r412,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a14(r411,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a16(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a18(r408,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r407,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a29(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r401,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a32(r252,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a33(r400,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a34(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r398,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a37(r250,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a38(r397,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a39(r396,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a40(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a46(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a49(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a52(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a55(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a56(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a58(r388,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r387,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a61(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r385,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r384,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a71(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a72(r381,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a73(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a75(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a76(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r379,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a78(r378,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a79(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r376,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a84(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a85(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r373,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a90(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a91(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a92(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a93(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a94(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a97(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r367,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r366,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a112(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r363,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a115(r361,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a116(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a117(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a118(r360,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a119(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a120(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a121(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r359,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a125(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a126(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a129(r356,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a130(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a131(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a134(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a135(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a137(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a140(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a141(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a147(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a148(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a149(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a150(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a151(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a152(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a153(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a154(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a155(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a156(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a157(r185,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a158(r343,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a159(r184,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a160(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a161(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a162(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a163(r340,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a164(r341,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a165(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a166(r339,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a167(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a168(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a169(r336,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a170(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a171(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a172(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a173(r332,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a174(r334,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a175(r333,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a176(r331,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a177(r330,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a178(r329,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a179(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a181(r328,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a182(r168,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a183(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a184(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a186(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a187(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a188(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a189(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a191(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a192(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a193(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a194(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a195(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a196(r317,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a197(r319,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a198(r318,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a199(r316,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a200(r315,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a201(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a202(r177,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a203(r314,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a204(r176,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a205(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a206(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a207(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a208(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a209(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a210(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a211(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a212(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a213(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a214(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a215(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a216(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a217(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a218(r303,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a219(r305,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a220(r304,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a221(r302,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a222(r301,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a223(r300,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a224(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a225(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a226(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a227(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a228(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:116 NO_REX_SSE_REGS:116 SSE_REGS:116 MMX_REGS:146 INT_SSE_REGS:122 ALL_REGS:2280 MEM:32
  a229(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a230(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:37 NO_REX_SSE_REGS:37 SSE_REGS:37 MMX_REGS:52 INT_SSE_REGS:40 ALL_REGS:832 MEM:13
  a231(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a232(r295,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a233(r294,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a234(r293,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a235(r157,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a236(r156,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a237(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a238(r155,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a239(r145,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a240(r154,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a241(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a242(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a243(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a244(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a245(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a246(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a247(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a248(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a249(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a250(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a251(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a252(r144,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a253(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a254(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a255(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a256(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a257(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a258(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a259(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a260(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a261(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a262(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a263(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a264(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a265(r125,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a266(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a267(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a268(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a269(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a270(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a271(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a272(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a273(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a274(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a275(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a276(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a277(r124,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a278(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a279(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a280(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a281(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a282(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a283(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a284(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a285(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a286(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a287(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a288(r280,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a289(r279,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a290(r278,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a291(r116,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a292(r115,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a293(r100,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a294(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a295(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a296(r113,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a297(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a298(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a299(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a300(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a301(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a302(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a303(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a304(r106,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a305(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a306(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a307(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a308(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a309(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a310(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a311(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a312(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a313(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a314(r98,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a315(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a316(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a317(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a318(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a319(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a320(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a321(r92,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a322(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a323(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a324(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a325(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a326(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a327(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a328(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a329(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 621(l0): point = 0
   Insn 620(l0): point = 2
   Insn 616(l0): point = 4
   Insn 613(l0): point = 6
   Insn 575(l0): point = 9
   Insn 574(l0): point = 11
   Insn 573(l0): point = 13
   Insn 572(l0): point = 15
   Insn 661(l0): point = 18
   Insn 607(l0): point = 20
   Insn 591(l0): point = 23
   Insn 590(l0): point = 25
   Insn 589(l0): point = 27
   Insn 588(l0): point = 29
   Insn 587(l0): point = 31
   Insn 586(l0): point = 33
   Insn 585(l0): point = 35
   Insn 584(l0): point = 37
   Insn 583(l0): point = 39
   Insn 582(l0): point = 41
   Insn 581(l0): point = 43
   Insn 580(l0): point = 45
   Insn 579(l0): point = 47
   Insn 578(l0): point = 49
   Insn 577(l0): point = 51
   Insn 604(l0): point = 54
   Insn 603(l0): point = 56
   Insn 602(l0): point = 58
   Insn 601(l0): point = 60
   Insn 600(l0): point = 62
   Insn 599(l0): point = 64
   Insn 598(l0): point = 66
   Insn 597(l0): point = 68
   Insn 596(l0): point = 70
   Insn 595(l0): point = 72
   Insn 594(l0): point = 74
   Insn 593(l0): point = 76
   Insn 570(l0): point = 79
   Insn 567(l0): point = 82
   Insn 566(l0): point = 84
   Insn 565(l0): point = 86
   Insn 564(l0): point = 88
   Insn 563(l0): point = 90
   Insn 562(l0): point = 92
   Insn 561(l0): point = 94
   Insn 560(l0): point = 96
   Insn 559(l0): point = 98
   Insn 558(l0): point = 100
   Insn 557(l0): point = 102
   Insn 556(l0): point = 104
   Insn 553(l0): point = 107
   Insn 552(l0): point = 109
   Insn 551(l0): point = 111
   Insn 550(l0): point = 113
   Insn 549(l0): point = 115
   Insn 547(l0): point = 118
   Insn 546(l0): point = 120
   Insn 545(l0): point = 122
   Insn 544(l0): point = 124
   Insn 542(l0): point = 127
   Insn 541(l0): point = 129
   Insn 540(l0): point = 131
   Insn 539(l0): point = 134
   Insn 538(l0): point = 136
   Insn 537(l0): point = 138
   Insn 536(l0): point = 140
   Insn 535(l0): point = 142
   Insn 534(l0): point = 144
   Insn 532(l0): point = 147
   Insn 531(l0): point = 149
   Insn 530(l0): point = 151
   Insn 529(l0): point = 154
   Insn 528(l0): point = 156
   Insn 527(l0): point = 158
   Insn 526(l0): point = 160
   Insn 525(l0): point = 162
   Insn 485(l0): point = 165
   Insn 484(l0): point = 167
   Insn 483(l0): point = 169
   Insn 482(l0): point = 171
   Insn 659(l0): point = 174
   Insn 519(l0): point = 176
   Insn 501(l0): point = 179
   Insn 500(l0): point = 181
   Insn 499(l0): point = 183
   Insn 498(l0): point = 185
   Insn 497(l0): point = 187
   Insn 496(l0): point = 189
   Insn 495(l0): point = 191
   Insn 494(l0): point = 193
   Insn 493(l0): point = 195
   Insn 492(l0): point = 197
   Insn 491(l0): point = 199
   Insn 490(l0): point = 201
   Insn 489(l0): point = 203
   Insn 488(l0): point = 205
   Insn 487(l0): point = 207
   Insn 516(l0): point = 210
   Insn 515(l0): point = 212
   Insn 514(l0): point = 214
   Insn 513(l0): point = 216
   Insn 512(l0): point = 218
   Insn 511(l0): point = 220
   Insn 510(l0): point = 222
   Insn 509(l0): point = 224
   Insn 508(l0): point = 226
   Insn 507(l0): point = 228
   Insn 506(l0): point = 230
   Insn 505(l0): point = 232
   Insn 504(l0): point = 234
   Insn 503(l0): point = 236
   Insn 480(l0): point = 239
   Insn 477(l0): point = 242
   Insn 476(l0): point = 244
   Insn 475(l0): point = 246
   Insn 474(l0): point = 248
   Insn 473(l0): point = 250
   Insn 472(l0): point = 252
   Insn 471(l0): point = 254
   Insn 470(l0): point = 256
   Insn 469(l0): point = 258
   Insn 468(l0): point = 260
   Insn 467(l0): point = 262
   Insn 466(l0): point = 264
   Insn 465(l0): point = 266
   Insn 464(l0): point = 268
   Insn 463(l0): point = 270
   Insn 462(l0): point = 272
   Insn 460(l0): point = 275
   Insn 459(l0): point = 277
   Insn 458(l0): point = 279
   Insn 457(l0): point = 281
   Insn 454(l0): point = 284
   Insn 453(l0): point = 286
   Insn 452(l0): point = 288
   Insn 451(l0): point = 290
   Insn 450(l0): point = 292
   Insn 449(l0): point = 294
   Insn 448(l0): point = 296
   Insn 447(l0): point = 298
   Insn 446(l0): point = 300
   Insn 445(l0): point = 302
   Insn 444(l0): point = 304
   Insn 443(l0): point = 306
   Insn 442(l0): point = 308
   Insn 441(l0): point = 310
   Insn 440(l0): point = 312
   Insn 439(l0): point = 314
   Insn 437(l0): point = 317
   Insn 436(l0): point = 319
   Insn 435(l0): point = 321
   Insn 434(l0): point = 323
   Insn 431(l0): point = 326
   Insn 430(l0): point = 328
   Insn 429(l0): point = 330
   Insn 428(l0): point = 332
   Insn 427(l0): point = 334
   Insn 426(l0): point = 336
   Insn 425(l0): point = 338
   Insn 424(l0): point = 340
   Insn 423(l0): point = 342
   Insn 422(l0): point = 344
   Insn 421(l0): point = 346
   Insn 420(l0): point = 348
   Insn 418(l0): point = 351
   Insn 417(l0): point = 353
   Insn 416(l0): point = 355
   Insn 415(l0): point = 357
   Insn 15(l0): point = 360
   Insn 14(l0): point = 362
   Insn 13(l0): point = 364
   Insn 12(l0): point = 366
   Insn 657(l0): point = 369
   Insn 409(l0): point = 371
   Insn 384(l0): point = 374
   Insn 383(l0): point = 376
   Insn 382(l0): point = 378
   Insn 381(l0): point = 380
   Insn 380(l0): point = 382
   Insn 379(l0): point = 384
   Insn 378(l0): point = 386
   Insn 377(l0): point = 388
   Insn 376(l0): point = 390
   Insn 375(l0): point = 392
   Insn 374(l0): point = 394
   Insn 373(l0): point = 396
   Insn 372(l0): point = 398
   Insn 371(l0): point = 400
   Insn 370(l0): point = 402
   Insn 352(l0): point = 405
   Insn 351(l0): point = 407
   Insn 350(l0): point = 409
   Insn 349(l0): point = 411
   Insn 348(l0): point = 413
   Insn 347(l0): point = 415
   Insn 346(l0): point = 417
   Insn 345(l0): point = 419
   Insn 344(l0): point = 421
   Insn 343(l0): point = 423
   Insn 342(l0): point = 425
   Insn 341(l0): point = 427
   Insn 340(l0): point = 429
   Insn 339(l0): point = 431
   Insn 338(l0): point = 433
   Insn 337(l0): point = 435
   Insn 336(l0): point = 437
   Insn 335(l0): point = 439
   Insn 334(l0): point = 441
   Insn 333(l0): point = 443
   Insn 332(l0): point = 445
   Insn 331(l0): point = 447
   Insn 330(l0): point = 449
   Insn 329(l0): point = 451
   Insn 328(l0): point = 453
   Insn 327(l0): point = 455
   Insn 326(l0): point = 457
   Insn 325(l0): point = 459
   Insn 324(l0): point = 461
   Insn 323(l0): point = 463
   Insn 322(l0): point = 465
   Insn 321(l0): point = 467
   Insn 320(l0): point = 469
   Insn 319(l0): point = 471
   Insn 318(l0): point = 473
   Insn 317(l0): point = 475
   Insn 316(l0): point = 477
   Insn 315(l0): point = 479
   Insn 314(l0): point = 481
   Insn 313(l0): point = 483
   Insn 312(l0): point = 485
   Insn 311(l0): point = 487
   Insn 263(l0): point = 490
   Insn 262(l0): point = 492
   Insn 261(l0): point = 494
   Insn 155(l0): point = 497
   Insn 154(l0): point = 499
   Insn 153(l0): point = 501
   Insn 152(l0): point = 503
   Insn 151(l0): point = 505
   Insn 150(l0): point = 507
   Insn 149(l0): point = 509
   Insn 148(l0): point = 511
   Insn 147(l0): point = 513
   Insn 146(l0): point = 515
   Insn 145(l0): point = 517
   Insn 144(l0): point = 519
   Insn 143(l0): point = 521
   Insn 142(l0): point = 523
   Insn 141(l0): point = 525
   Insn 65(l0): point = 528
   Insn 64(l0): point = 530
   Insn 62(l0): point = 533
   Insn 61(l0): point = 535
   Insn 60(l0): point = 537
   Insn 59(l0): point = 539
   Insn 58(l0): point = 541
   Insn 57(l0): point = 543
   Insn 56(l0): point = 545
   Insn 55(l0): point = 547
   Insn 54(l0): point = 549
   Insn 53(l0): point = 551
   Insn 52(l0): point = 553
   Insn 51(l0): point = 555
   Insn 50(l0): point = 557
   Insn 49(l0): point = 559
   Insn 48(l0): point = 561
   Insn 47(l0): point = 563
   Insn 46(l0): point = 565
   Insn 45(l0): point = 567
   Insn 44(l0): point = 569
   Insn 43(l0): point = 571
   Insn 42(l0): point = 573
   Insn 41(l0): point = 575
   Insn 40(l0): point = 577
   Insn 39(l0): point = 579
   Insn 38(l0): point = 581
   Insn 37(l0): point = 583
   Insn 36(l0): point = 585
   Insn 35(l0): point = 587
   Insn 34(l0): point = 589
   Insn 33(l0): point = 591
   Insn 32(l0): point = 593
   Insn 31(l0): point = 595
   Insn 30(l0): point = 597
   Insn 29(l0): point = 599
   Insn 28(l0): point = 601
   Insn 27(l0): point = 603
   Insn 26(l0): point = 605
   Insn 25(l0): point = 607
   Insn 24(l0): point = 609
   Insn 23(l0): point = 611
   Insn 22(l0): point = 613
   Insn 21(l0): point = 615
   Insn 20(l0): point = 617
   Insn 19(l0): point = 619
   Insn 18(l0): point = 621
   Insn 17(l0): point = 623
   Insn 641(l0): point = 626
   Insn 135(l0): point = 628
   Insn 132(l0): point = 631
   Insn 131(l0): point = 633
   Insn 126(l0): point = 636
   Insn 125(l0): point = 638
   Insn 124(l0): point = 640
   Insn 123(l0): point = 642
   Insn 122(l0): point = 644
   Insn 121(l0): point = 646
   Insn 120(l0): point = 648
   Insn 119(l0): point = 650
   Insn 118(l0): point = 652
   Insn 117(l0): point = 654
   Insn 116(l0): point = 656
   Insn 115(l0): point = 658
   Insn 114(l0): point = 660
   Insn 113(l0): point = 662
   Insn 112(l0): point = 664
   Insn 111(l0): point = 666
   Insn 110(l0): point = 668
   Insn 109(l0): point = 670
   Insn 108(l0): point = 672
   Insn 107(l0): point = 674
   Insn 106(l0): point = 676
   Insn 105(l0): point = 678
   Insn 104(l0): point = 680
   Insn 103(l0): point = 682
   Insn 102(l0): point = 684
   Insn 101(l0): point = 686
   Insn 100(l0): point = 688
   Insn 99(l0): point = 690
   Insn 98(l0): point = 692
   Insn 97(l0): point = 694
   Insn 96(l0): point = 696
   Insn 95(l0): point = 698
   Insn 94(l0): point = 700
   Insn 93(l0): point = 702
   Insn 92(l0): point = 704
   Insn 91(l0): point = 706
   Insn 90(l0): point = 708
   Insn 89(l0): point = 710
   Insn 88(l0): point = 712
   Insn 87(l0): point = 714
   Insn 86(l0): point = 716
   Insn 85(l0): point = 718
   Insn 84(l0): point = 720
   Insn 83(l0): point = 722
   Insn 82(l0): point = 724
   Insn 81(l0): point = 726
   Insn 80(l0): point = 728
   Insn 79(l0): point = 730
   Insn 78(l0): point = 732
   Insn 77(l0): point = 734
   Insn 76(l0): point = 736
   Insn 75(l0): point = 738
   Insn 74(l0): point = 740
   Insn 73(l0): point = 742
   Insn 72(l0): point = 744
   Insn 71(l0): point = 746
   Insn 70(l0): point = 748
   Insn 69(l0): point = 750
   Insn 68(l0): point = 752
   Insn 67(l0): point = 754
   Insn 650(l0): point = 757
   Insn 219(l0): point = 760
   Insn 218(l0): point = 762
   Insn 217(l0): point = 764
   Insn 652(l0): point = 768
   Insn 255(l0): point = 770
   Insn 254(l0): point = 772
   Insn 253(l0): point = 774
   Insn 252(l0): point = 776
   Insn 251(l0): point = 778
   Insn 250(l0): point = 780
   Insn 249(l0): point = 782
   Insn 248(l0): point = 784
   Insn 247(l0): point = 786
   Insn 246(l0): point = 788
   Insn 245(l0): point = 790
   Insn 244(l0): point = 792
   Insn 243(l0): point = 794
   Insn 242(l0): point = 796
   Insn 241(l0): point = 798
   Insn 240(l0): point = 800
   Insn 239(l0): point = 802
   Insn 238(l0): point = 804
   Insn 237(l0): point = 806
   Insn 236(l0): point = 808
   Insn 235(l0): point = 810
   Insn 234(l0): point = 812
   Insn 233(l0): point = 814
   Insn 232(l0): point = 816
   Insn 231(l0): point = 818
   Insn 230(l0): point = 820
   Insn 229(l0): point = 822
   Insn 228(l0): point = 824
   Insn 227(l0): point = 826
   Insn 226(l0): point = 828
   Insn 225(l0): point = 830
   Insn 224(l0): point = 832
   Insn 648(l0): point = 835
   Insn 212(l0): point = 838
   Insn 211(l0): point = 840
   Insn 210(l0): point = 842
   Insn 644(l0): point = 845
   Insn 166(l0): point = 848
   Insn 165(l0): point = 850
   Insn 164(l0): point = 852
   Insn 159(l0): point = 856
   Insn 158(l0): point = 858
   Insn 157(l0): point = 860
   Insn 646(l0): point = 863
   Insn 204(l0): point = 865
   Insn 203(l0): point = 867
   Insn 202(l0): point = 869
   Insn 201(l0): point = 871
   Insn 200(l0): point = 873
   Insn 199(l0): point = 875
   Insn 198(l0): point = 877
   Insn 197(l0): point = 879
   Insn 196(l0): point = 881
   Insn 195(l0): point = 883
   Insn 194(l0): point = 885
   Insn 193(l0): point = 887
   Insn 192(l0): point = 889
   Insn 191(l0): point = 891
   Insn 190(l0): point = 893
   Insn 189(l0): point = 895
   Insn 188(l0): point = 897
   Insn 187(l0): point = 899
   Insn 186(l0): point = 901
   Insn 185(l0): point = 903
   Insn 184(l0): point = 905
   Insn 183(l0): point = 907
   Insn 182(l0): point = 909
   Insn 181(l0): point = 911
   Insn 180(l0): point = 913
   Insn 179(l0): point = 915
   Insn 178(l0): point = 917
   Insn 177(l0): point = 919
   Insn 176(l0): point = 921
   Insn 175(l0): point = 923
   Insn 174(l0): point = 925
   Insn 173(l0): point = 927
   Insn 172(l0): point = 929
   Insn 171(l0): point = 931
   Insn 655(l0): point = 934
   Insn 306(l0): point = 936
   Insn 305(l0): point = 938
   Insn 304(l0): point = 940
   Insn 303(l0): point = 942
   Insn 302(l0): point = 944
   Insn 301(l0): point = 946
   Insn 300(l0): point = 948
   Insn 299(l0): point = 950
   Insn 298(l0): point = 952
   Insn 297(l0): point = 954
   Insn 296(l0): point = 956
   Insn 295(l0): point = 958
   Insn 294(l0): point = 960
   Insn 293(l0): point = 962
   Insn 292(l0): point = 964
   Insn 291(l0): point = 966
   Insn 290(l0): point = 968
   Insn 289(l0): point = 970
   Insn 288(l0): point = 972
   Insn 287(l0): point = 974
   Insn 286(l0): point = 976
   Insn 285(l0): point = 978
   Insn 284(l0): point = 980
   Insn 283(l0): point = 982
   Insn 282(l0): point = 984
   Insn 281(l0): point = 986
   Insn 280(l0): point = 988
   Insn 279(l0): point = 990
   Insn 278(l0): point = 992
   Insn 277(l0): point = 994
   Insn 276(l0): point = 996
   Insn 275(l0): point = 998
   Insn 274(l0): point = 1000
   Insn 273(l0): point = 1002
   Insn 272(l0): point = 1004
   Insn 271(l0): point = 1006
   Insn 270(l0): point = 1008
   Insn 269(l0): point = 1010
   Insn 268(l0): point = 1012
   Insn 367(l0): point = 1015
   Insn 366(l0): point = 1017
   Insn 365(l0): point = 1019
   Insn 364(l0): point = 1021
   Insn 363(l0): point = 1023
   Insn 362(l0): point = 1025
   Insn 361(l0): point = 1027
   Insn 360(l0): point = 1029
   Insn 359(l0): point = 1031
   Insn 358(l0): point = 1033
   Insn 357(l0): point = 1035
   Insn 356(l0): point = 1037
   Insn 355(l0): point = 1039
   Insn 354(l0): point = 1041
   Insn 406(l0): point = 1044
   Insn 405(l0): point = 1046
   Insn 404(l0): point = 1048
   Insn 403(l0): point = 1050
   Insn 402(l0): point = 1052
   Insn 401(l0): point = 1054
   Insn 400(l0): point = 1056
   Insn 399(l0): point = 1058
   Insn 398(l0): point = 1060
   Insn 397(l0): point = 1062
   Insn 396(l0): point = 1064
   Insn 395(l0): point = 1066
   Insn 394(l0): point = 1068
   Insn 393(l0): point = 1070
   Insn 392(l0): point = 1072
   Insn 391(l0): point = 1074
   Insn 390(l0): point = 1076
   Insn 389(l0): point = 1078
   Insn 388(l0): point = 1080
   Insn 387(l0): point = 1082
   Insn 386(l0): point = 1084
   Insn 10(l0): point = 1087
   Insn 6(l0): point = 1089
   Insn 5(l0): point = 1091
   Insn 4(l0): point = 1093
   Insn 3(l0): point = 1095
   Insn 2(l0): point = 1097
 a0(r268): [3..4]
 a1(r267): [5..6]
 a2(r266): [57..68]
 a3(r265): [59..72]
 a4(r416): [61..64]
 a5(r415): [63..66]
 a6(r414): [69..70]
 a7(r264): [73..74]
 a8(r413): [75..76]
 a9(r263): [26..27]
 a10(r262): [28..29]
 a11(r412): [30..31]
 a12(r261): [30..33]
 a13(r410): [38..47] [34..35]
 a14(r411): [36..37]
 a15(r260): [40..49]
 a16(r409): [50..51]
 a17(r259): [12..13]
 a18(r408): [14..15]
 a19(r258): [85..96]
 a20(r257): [87..100]
 a21(r407): [89..92]
 a22(r406): [91..94]
 a23(r405): [97..98]
 a24(r256): [101..102]
 a25(r404): [103..104]
 a26(r255): [110..111]
 a27(r254): [112..113]
 a28(r403): [114..115]
 a29(r253): [121..122]
 a30(r402): [123..124]
 a31(r401): [130..131]
 a32(r252): [130..140]
 a33(r400): [137..138]
 a34(r251): [141..142]
 a35(r399): [143..144]
 a36(r398): [150..151]
 a37(r250): [150..160]
 a38(r397): [157..158]
 a39(r396): [161..162]
 a40(r249): [213..216]
 a41(r245): [215..228]
 a42(r248): [217..218]
 a43(r395): [219..220]
 a44(r247): [219..222]
 a45(r246): [223..224]
 a46(r394): [225..226]
 a47(r393): [229..230]
 a48(r244): [229..232]
 a49(r243): [233..234]
 a50(r392): [235..236]
 a51(r242): [182..183]
 a52(r241): [184..185]
 a53(r391): [186..187]
 a54(r240): [186..189]
 a55(r389): [194..203] [190..191]
 a56(r390): [192..193]
 a57(r239): [196..205]
 a58(r388): [206..207]
 a59(r238): [168..169]
 a60(r387): [170..171]
 a61(r237): [245..258]
 a62(r236): [247..262]
 a63(r234): [249..268]
 a64(r386): [251..254]
 a65(r385): [253..256]
 a66(r384): [259..260]
 a67(r235): [263..264]
 a68(r383): [265..266]
 a69(r233): [269..270]
 a70(r382): [271..272]
 a71(r232): [278..279]
 a72(r381): [280..281]
 a73(r231): [287..300]
 a74(r230): [289..304]
 a75(r228): [291..310]
 a76(r380): [293..296]
 a77(r379): [295..298]
 a78(r378): [301..302]
 a79(r229): [305..306]
 a80(r377): [307..308]
 a81(r227): [311..312]
 a82(r376): [313..314]
 a83(r226): [320..321]
 a84(r375): [322..323]
 a85(r225): [329..340]
 a86(r224): [331..344]
 a87(r374): [333..336]
 a88(r373): [335..338]
 a89(r372): [341..342]
 a90(r223): [345..346]
 a91(r371): [347..348]
 a92(r222): [354..355]
 a93(r370): [356..357]
 a94(r221): [1047..1052]
 a95(r217): [1049..1064]
 a96(r213): [1051..1076]
 a97(r220): [1053..1054]
 a98(r369): [1055..1056]
 a99(r219): [1055..1058]
 a100(r218): [1059..1060]
 a101(r368): [1061..1062]
 a102(r216): [1065..1066]
 a103(r367): [1067..1068]
 a104(r215): [1067..1070]
 a105(r214): [1071..1072]
 a106(r366): [1073..1074]
 a107(r365): [1077..1078]
 a108(r212): [1077..1080]
 a109(r211): [1081..1082]
 a110(r364): [1083..1084]
 a111(r210): [377..378]
 a112(r209): [379..380]
 a113(r363): [381..382]
 a114(r208): [381..384]
 a115(r361): [389..398] [385..386]
 a116(r362): [387..388]
 a117(r207): [391..400]
 a118(r360): [401..402]
 a119(r206): [1018..1021]
 a120(r202): [1020..1033]
 a121(r205): [1022..1023]
 a122(r359): [1024..1025]
 a123(r204): [1024..1027]
 a124(r203): [1028..1029]
 a125(r358): [1030..1031]
 a126(r357): [1034..1035]
 a127(r201): [1034..1037]
 a128(r200): [1038..1039]
 a129(r356): [1040..1041]
 a130(r199): [408..409]
 a131(r198): [410..411]
 a132(r355): [412..413]
 a133(r197): [412..415]
 a134(r353): [420..429] [416..417]
 a135(r354): [418..419]
 a136(r196): [422..431]
 a137(r352): [432..433]
 a138(r195): [438..443]
 a139(r191): [440..455]
 a140(r188): [442..465]
 a141(r194): [444..445]
 a142(r351): [446..447]
 a143(r193): [446..449]
 a144(r192): [450..451]
 a145(r350): [452..453]
 a146(r349): [456..457]
 a147(r190): [456..459]
 a148(r189): [460..461]
 a149(r348): [462..463]
 a150(r347): [466..467]
 a151(r187): [466..469]
 a152(r345): [474..483] [470..471]
 a153(r346): [472..473]
 a154(r186): [476..485]
 a155(r344): [486..487]
 a156(r180): [937..968]
 a157(r185): [937..938]
 a158(r343): [939..940]
 a159(r184): [939..942]
 a160(r183): [943..944]
 a161(r342): [945..946]
 a162(r182): [945..948]
 a163(r340): [953..962] [949..950]
 a164(r341): [951..952]
 a165(r181): [955..964]
 a166(r339): [965..966]
 a167(r338): [969..970]
 a168(r179): [969..972]
 a169(r336): [977..986] [973..974]
 a170(r337): [975..976]
 a171(r178): [979..988]
 a172(r335): [989..990]
 a173(r332): [993..994]
 a174(r334): [995..996]
 a175(r333): [995..998]
 a176(r331): [1001..1002]
 a177(r330): [1011..1012]
 a178(r329): [493..494]
 a179(r164): [771..802]
 a180(r169): [771..772]
 a181(r328): [773..774]
 a182(r168): [773..776]
 a183(r167): [777..778]
 a184(r327): [779..780]
 a185(r166): [779..782]
 a186(r325): [787..796] [783..784]
 a187(r326): [785..786]
 a188(r165): [789..798]
 a189(r324): [799..800]
 a190(r323): [803..804]
 a191(r163): [803..806]
 a192(r321): [811..820] [807..808]
 a193(r322): [809..810]
 a194(r162): [813..822]
 a195(r320): [823..824]
 a196(r317): [827..828]
 a197(r319): [829..830]
 a198(r318): [829..832]
 a199(r316): [763..764]
 a200(r315): [841..842]
 a201(r172): [866..897]
 a202(r177): [866..867]
 a203(r314): [868..869]
 a204(r176): [868..871]
 a205(r175): [872..873]
 a206(r313): [874..875]
 a207(r174): [874..877]
 a208(r311): [882..891] [878..879]
 a209(r312): [880..881]
 a210(r173): [884..893]
 a211(r310): [894..895]
 a212(r309): [898..899]
 a213(r171): [898..901]
 a214(r307): [906..915] [902..903]
 a215(r308): [904..905]
 a216(r170): [908..917]
 a217(r306): [918..919]
 a218(r303): [922..923]
 a219(r305): [924..925]
 a220(r304): [924..927]
 a221(r302): [930..931]
 a222(r301): [851..852]
 a223(r300): [859..860]
 a224(r161): [500..501]
 a225(r160): [502..503]
 a226(r299): [504..505]
 a227(r159): [504..507]
 a228(r297): [512..521] [508..509]
 a229(r298): [510..511]
 a230(r158): [514..523]
 a231(r296): [524..525]
 a232(r295): [632..633]
 a233(r294): [639..640]
 a234(r293): [643..644]
 a235(r157): [649..650]
 a236(r156): [651..652]
 a237(r135): [651..706]
 a238(r155): [653..654]
 a239(r145): [653..680]
 a240(r154): [655..656]
 a241(r153): [657..658]
 a242(r152): [659..660]
 a243(r149): [659..668]
 a244(r151): [661..662]
 a245(r150): [663..664]
 a246(r292): [665..666]
 a247(r148): [669..670]
 a248(r291): [671..672]
 a249(r147): [671..674]
 a250(r146): [675..676]
 a251(r290): [677..678]
 a252(r144): [681..682]
 a253(r143): [683..684]
 a254(r142): [685..686]
 a255(r139): [685..694]
 a256(r141): [687..688]
 a257(r140): [689..690]
 a258(r289): [691..692]
 a259(r138): [695..696]
 a260(r288): [697..698]
 a261(r137): [697..700]
 a262(r136): [701..702]
 a263(r287): [703..704]
 a264(r134): [707..708]
 a265(r125): [707..732]
 a266(r133): [709..710]
 a267(r132): [711..712]
 a268(r131): [713..714]
 a269(r129): [713..720]
 a270(r130): [715..716]
 a271(r286): [717..718]
 a272(r128): [721..722]
 a273(r285): [723..724]
 a274(r127): [723..726]
 a275(r126): [727..728]
 a276(r284): [729..730]
 a277(r124): [733..734]
 a278(r123): [735..736]
 a279(r122): [737..738]
 a280(r120): [737..744]
 a281(r121): [739..740]
 a282(r283): [741..742]
 a283(r119): [745..746]
 a284(r282): [747..748]
 a285(r118): [747..750]
 a286(r117): [751..752]
 a287(r281): [753..754]
 a288(r280): [536..537]
 a289(r279): [540..541]
 a290(r278): [544..545]
 a291(r116): [550..551]
 a292(r115): [552..553]
 a293(r100): [552..591]
 a294(r114): [554..555]
 a295(r107): [554..573]
 a296(r113): [556..557]
 a297(r112): [558..559]
 a298(r111): [560..561]
 a299(r110): [562..563]
 a300(r277): [564..565]
 a301(r109): [564..567]
 a302(r108): [568..569]
 a303(r276): [570..571]
 a304(r106): [574..575]
 a305(r105): [576..577]
 a306(r104): [578..579]
 a307(r103): [580..581]
 a308(r275): [582..583]
 a309(r102): [582..585]
 a310(r101): [586..587]
 a311(r274): [588..589]
 a312(r99): [592..593]
 a313(r93): [592..609]
 a314(r98): [594..595]
 a315(r97): [596..597]
 a316(r96): [598..599]
 a317(r273): [600..601]
 a318(r95): [600..603]
 a319(r94): [604..605]
 a320(r272): [606..607]
 a321(r92): [610..611]
 a322(r91): [612..613]
 a323(r90): [614..615]
 a324(r271): [616..617]
 a325(r89): [616..619]
 a326(r88): [620..621]
 a327(r270): [622..623]
 a328(r87): [363..364]
 a329(r269): [365..366]
Compressing live ranges: from 1100 to 514 - 46%
Ranges after the compression:
 a0(r268): [0..1]
 a1(r267): [2..3]
 a2(r266): [22..23]
 a3(r265): [22..25]
 a4(r416): [22..23]
 a5(r415): [22..23]
 a6(r414): [24..25]
 a7(r264): [26..27]
 a8(r413): [28..29]
 a9(r263): [8..9]
 a10(r262): [10..11]
 a11(r412): [12..13]
 a12(r261): [12..13]
 a13(r410): [18..19] [14..15]
 a14(r411): [16..17]
 a15(r260): [18..19]
 a16(r409): [20..21]
 a17(r259): [4..5]
 a18(r408): [6..7]
 a19(r258): [30..31]
 a20(r257): [30..33]
 a21(r407): [30..31]
 a22(r406): [30..31]
 a23(r405): [32..33]
 a24(r256): [34..35]
 a25(r404): [36..37]
 a26(r255): [38..39]
 a27(r254): [40..41]
 a28(r403): [42..43]
 a29(r253): [44..45]
 a30(r402): [46..47]
 a31(r401): [48..49]
 a32(r252): [48..51]
 a33(r400): [50..51]
 a34(r251): [52..53]
 a35(r399): [54..55]
 a36(r398): [56..57]
 a37(r250): [56..59]
 a38(r397): [58..59]
 a39(r396): [60..61]
 a40(r249): [80..81]
 a41(r245): [80..89]
 a42(r248): [82..83]
 a43(r395): [84..85]
 a44(r247): [84..85]
 a45(r246): [86..87]
 a46(r394): [88..89]
 a47(r393): [90..91]
 a48(r244): [90..91]
 a49(r243): [92..93]
 a50(r392): [94..95]
 a51(r242): [66..67]
 a52(r241): [68..69]
 a53(r391): [70..71]
 a54(r240): [70..71]
 a55(r389): [76..77] [72..73]
 a56(r390): [74..75]
 a57(r239): [76..77]
 a58(r388): [78..79]
 a59(r238): [62..63]
 a60(r387): [64..65]
 a61(r237): [96..97]
 a62(r236): [96..99]
 a63(r234): [96..103]
 a64(r386): [96..97]
 a65(r385): [96..97]
 a66(r384): [98..99]
 a67(r235): [100..101]
 a68(r383): [102..103]
 a69(r233): [104..105]
 a70(r382): [106..107]
 a71(r232): [108..109]
 a72(r381): [110..111]
 a73(r231): [112..113]
 a74(r230): [112..115]
 a75(r228): [112..119]
 a76(r380): [112..113]
 a77(r379): [112..113]
 a78(r378): [114..115]
 a79(r229): [116..117]
 a80(r377): [118..119]
 a81(r227): [120..121]
 a82(r376): [122..123]
 a83(r226): [124..125]
 a84(r375): [126..127]
 a85(r225): [128..129]
 a86(r224): [128..131]
 a87(r374): [128..129]
 a88(r373): [128..129]
 a89(r372): [130..131]
 a90(r223): [132..133]
 a91(r371): [134..135]
 a92(r222): [136..137]
 a93(r370): [138..139]
 a94(r221): [490..491]
 a95(r217): [490..499]
 a96(r213): [490..507]
 a97(r220): [492..493]
 a98(r369): [494..495]
 a99(r219): [494..495]
 a100(r218): [496..497]
 a101(r368): [498..499]
 a102(r216): [500..501]
 a103(r367): [502..503]
 a104(r215): [502..503]
 a105(r214): [504..505]
 a106(r366): [506..507]
 a107(r365): [508..509]
 a108(r212): [508..509]
 a109(r211): [510..511]
 a110(r364): [512..513]
 a111(r210): [144..145]
 a112(r209): [146..147]
 a113(r363): [148..149]
 a114(r208): [148..149]
 a115(r361): [154..155] [150..151]
 a116(r362): [152..153]
 a117(r207): [154..155]
 a118(r360): [156..157]
 a119(r206): [474..475]
 a120(r202): [474..483]
 a121(r205): [476..477]
 a122(r359): [478..479]
 a123(r204): [478..479]
 a124(r203): [480..481]
 a125(r358): [482..483]
 a126(r357): [484..485]
 a127(r201): [484..485]
 a128(r200): [486..487]
 a129(r356): [488..489]
 a130(r199): [158..159]
 a131(r198): [160..161]
 a132(r355): [162..163]
 a133(r197): [162..163]
 a134(r353): [168..169] [164..165]
 a135(r354): [166..167]
 a136(r196): [168..169]
 a137(r352): [170..171]
 a138(r195): [172..173]
 a139(r191): [172..181]
 a140(r188): [172..187]
 a141(r194): [174..175]
 a142(r351): [176..177]
 a143(r193): [176..177]
 a144(r192): [178..179]
 a145(r350): [180..181]
 a146(r349): [182..183]
 a147(r190): [182..183]
 a148(r189): [184..185]
 a149(r348): [186..187]
 a150(r347): [188..189]
 a151(r187): [188..189]
 a152(r345): [194..195] [190..191]
 a153(r346): [192..193]
 a154(r186): [194..195]
 a155(r344): [196..197]
 a156(r180): [440..455]
 a157(r185): [440..441]
 a158(r343): [442..443]
 a159(r184): [442..443]
 a160(r183): [444..445]
 a161(r342): [446..447]
 a162(r182): [446..447]
 a163(r340): [452..453] [448..449]
 a164(r341): [450..451]
 a165(r181): [452..453]
 a166(r339): [454..455]
 a167(r338): [456..457]
 a168(r179): [456..457]
 a169(r336): [462..463] [458..459]
 a170(r337): [460..461]
 a171(r178): [462..463]
 a172(r335): [464..465]
 a173(r332): [466..467]
 a174(r334): [468..469]
 a175(r333): [468..469]
 a176(r331): [470..471]
 a177(r330): [472..473]
 a178(r329): [198..199]
 a179(r164): [372..387]
 a180(r169): [372..373]
 a181(r328): [374..375]
 a182(r168): [374..375]
 a183(r167): [376..377]
 a184(r327): [378..379]
 a185(r166): [378..379]
 a186(r325): [384..385] [380..381]
 a187(r326): [382..383]
 a188(r165): [384..385]
 a189(r324): [386..387]
 a190(r323): [388..389]
 a191(r163): [388..389]
 a192(r321): [394..395] [390..391]
 a193(r322): [392..393]
 a194(r162): [394..395]
 a195(r320): [396..397]
 a196(r317): [398..399]
 a197(r319): [400..401]
 a198(r318): [400..401]
 a199(r316): [370..371]
 a200(r315): [402..403]
 a201(r172): [408..423]
 a202(r177): [408..409]
 a203(r314): [410..411]
 a204(r176): [410..411]
 a205(r175): [412..413]
 a206(r313): [414..415]
 a207(r174): [414..415]
 a208(r311): [420..421] [416..417]
 a209(r312): [418..419]
 a210(r173): [420..421]
 a211(r310): [422..423]
 a212(r309): [424..425]
 a213(r171): [424..425]
 a214(r307): [430..431] [426..427]
 a215(r308): [428..429]
 a216(r170): [430..431]
 a217(r306): [432..433]
 a218(r303): [434..435]
 a219(r305): [436..437]
 a220(r304): [436..437]
 a221(r302): [438..439]
 a222(r301): [404..405]
 a223(r300): [406..407]
 a224(r161): [200..201]
 a225(r160): [202..203]
 a226(r299): [204..205]
 a227(r159): [204..205]
 a228(r297): [210..211] [206..207]
 a229(r298): [208..209]
 a230(r158): [210..211]
 a231(r296): [212..213]
 a232(r295): [280..281]
 a233(r294): [282..283]
 a234(r293): [284..285]
 a235(r157): [286..287]
 a236(r156): [288..289]
 a237(r135): [288..331]
 a238(r155): [290..291]
 a239(r145): [290..311]
 a240(r154): [292..293]
 a241(r153): [294..295]
 a242(r152): [296..297]
 a243(r149): [296..303]
 a244(r151): [298..299]
 a245(r150): [300..301]
 a246(r292): [302..303]
 a247(r148): [304..305]
 a248(r291): [306..307]
 a249(r147): [306..307]
 a250(r146): [308..309]
 a251(r290): [310..311]
 a252(r144): [312..313]
 a253(r143): [314..315]
 a254(r142): [316..317]
 a255(r139): [316..323]
 a256(r141): [318..319]
 a257(r140): [320..321]
 a258(r289): [322..323]
 a259(r138): [324..325]
 a260(r288): [326..327]
 a261(r137): [326..327]
 a262(r136): [328..329]
 a263(r287): [330..331]
 a264(r134): [332..333]
 a265(r125): [332..351]
 a266(r133): [334..335]
 a267(r132): [336..337]
 a268(r131): [338..339]
 a269(r129): [338..343]
 a270(r130): [340..341]
 a271(r286): [342..343]
 a272(r128): [344..345]
 a273(r285): [346..347]
 a274(r127): [346..347]
 a275(r126): [348..349]
 a276(r284): [350..351]
 a277(r124): [352..353]
 a278(r123): [354..355]
 a279(r122): [356..357]
 a280(r120): [356..361]
 a281(r121): [358..359]
 a282(r283): [360..361]
 a283(r119): [362..363]
 a284(r282): [364..365]
 a285(r118): [364..365]
 a286(r117): [366..367]
 a287(r281): [368..369]
 a288(r280): [214..215]
 a289(r279): [216..217]
 a290(r278): [218..219]
 a291(r116): [220..221]
 a292(r115): [222..223]
 a293(r100): [222..253]
 a294(r114): [224..225]
 a295(r107): [224..239]
 a296(r113): [226..227]
 a297(r112): [228..229]
 a298(r111): [230..231]
 a299(r110): [232..233]
 a300(r277): [234..235]
 a301(r109): [234..235]
 a302(r108): [236..237]
 a303(r276): [238..239]
 a304(r106): [240..241]
 a305(r105): [242..243]
 a306(r104): [244..245]
 a307(r103): [246..247]
 a308(r275): [248..249]
 a309(r102): [248..249]
 a310(r101): [250..251]
 a311(r274): [252..253]
 a312(r99): [254..255]
 a313(r93): [254..267]
 a314(r98): [256..257]
 a315(r97): [258..259]
 a316(r96): [260..261]
 a317(r273): [262..263]
 a318(r95): [262..263]
 a319(r94): [264..265]
 a320(r272): [266..267]
 a321(r92): [268..269]
 a322(r91): [270..271]
 a323(r90): [272..273]
 a324(r271): [274..275]
 a325(r89): [274..275]
 a326(r88): [276..277]
 a327(r270): [278..279]
 a328(r87): [140..141]
 a329(r269): [142..143]
  pref0:a177(r330)<-hr21@1
  pref1:a234(r293)<-hr21@1
  pref2:a290(r278)<-hr21@1
  regions=1, blocks=52, points=514
    allocnos=330 (big 0), copies=0, conflicts=0, ranges=342
Disposition:
  328:r87  l0     0  326:r88  l0     0  325:r89  l0     1  323:r90  l0     0
  322:r91  l0     0  321:r92  l0    21  313:r93  l0    22  319:r94  l0     0
  318:r95  l0     1  316:r96  l0     0  315:r97  l0     0  314:r98  l0    21
  312:r99  l0    21  293:r100 l0    22  310:r101 l0     0  309:r102 l0     1
  307:r103 l0     0  306:r104 l0     0  305:r105 l0     0  304:r106 l0    21
  295:r107 l0    23  302:r108 l0     0  301:r109 l0     1  299:r110 l0     0
  298:r111 l0     0  297:r112 l0     0  296:r113 l0    21  294:r114 l0    21
  292:r115 l0    21  291:r116 l0    21  286:r117 l0     0  285:r118 l0     1
  283:r119 l0     0  280:r120 l0     0  281:r121 l0     1  279:r122 l0     1
  278:r123 l0     0  277:r124 l0    21  265:r125 l0    22  275:r126 l0     0
  274:r127 l0     1  272:r128 l0     0  269:r129 l0     0  270:r130 l0     1
  268:r131 l0     1  267:r132 l0     0  266:r133 l0    21  264:r134 l0    21
  237:r135 l0    22  262:r136 l0     0  261:r137 l0     1  259:r138 l0     0
  255:r139 l0     0  257:r140 l0     1  256:r141 l0     1  254:r142 l0     1
  253:r143 l0     0  252:r144 l0    21  239:r145 l0    23  250:r146 l0     0
  249:r147 l0     1  247:r148 l0     0  243:r149 l0     0  245:r150 l0     1
  244:r151 l0     1  242:r152 l0     1  241:r153 l0     0  240:r154 l0    21
  238:r155 l0    21  236:r156 l0    21  235:r157 l0    21  230:r158 l0     1
  227:r159 l0     1  225:r160 l0     0  224:r161 l0     0  194:r162 l0     1
  191:r163 l0     1  179:r164 l0     2  188:r165 l0     1  185:r166 l0     1
  183:r167 l0     0  182:r168 l0    21  180:r169 l0    21  216:r170 l0     1
  213:r171 l0     1  201:r172 l0     2  210:r173 l0     1  207:r174 l0     1
  205:r175 l0     0  204:r176 l0    22  202:r177 l0    21  171:r178 l0     1
  168:r179 l0     1  156:r180 l0     2  165:r181 l0     1  162:r182 l0     1
  160:r183 l0     0  159:r184 l0    22  157:r185 l0    21  154:r186 l0     1
  151:r187 l0     1  140:r188 l0     1  148:r189 l0     0  147:r190 l0     2
  139:r191 l0     2  144:r192 l0     0  143:r193 l0     4  141:r194 l0     0
  138:r195 l0     0  136:r196 l0     1  133:r197 l0     1  131:r198 l0     0
  130:r199 l0     0  128:r200 l0     0  127:r201 l0     1  120:r202 l0     1
  124:r203 l0     0  123:r204 l0     2  121:r205 l0     0  119:r206 l0     0
  117:r207 l0     1  114:r208 l0     1  112:r209 l0     0  111:r210 l0     0
  109:r211 l0     0  108:r212 l0     1   96:r213 l0     1  105:r214 l0     0
  104:r215 l0     2  102:r216 l0     0   95:r217 l0     2  100:r218 l0     0
   99:r219 l0     4   97:r220 l0     0   94:r221 l0     0   92:r222 l0     0
   90:r223 l0     0   86:r224 l0     4   85:r225 l0     0   83:r226 l0     0
   81:r227 l0     0   75:r228 l0     1   79:r229 l0     0   74:r230 l0     4
   73:r231 l0     0   71:r232 l0     0   69:r233 l0     0   63:r234 l0     1
   67:r235 l0     0   62:r236 l0     4   61:r237 l0     0   59:r238 l0     0
   57:r239 l0     1   54:r240 l0     1   52:r241 l0     0   51:r242 l0     0
   49:r243 l0     0   48:r244 l0     1   41:r245 l0     1   45:r246 l0     0
   44:r247 l0     2   42:r248 l0     0   40:r249 l0     0   37:r250 l0    21
   34:r251 l0     0   32:r252 l0    21   29:r253 l0     0   27:r254 l0     0
   26:r255 l0     0   24:r256 l0     0   20:r257 l0     4   19:r258 l0     0
   17:r259 l0     0   15:r260 l0     1   12:r261 l0     1   10:r262 l0     0
    9:r263 l0     0    7:r264 l0     0    3:r265 l0     4    2:r266 l0     0
    1:r267 l0     0    0:r268 l0     0  329:r269 l0     0  327:r270 l0     0
  324:r271 l0     0  320:r272 l0     0  317:r273 l0     0  311:r274 l0     0
  308:r275 l0     0  303:r276 l0     0  300:r277 l0     0  290:r278 l0     0
  289:r279 l0    21  288:r280 l0    21  287:r281 l0     0  284:r282 l0     0
  282:r283 l0     1  276:r284 l0     0  273:r285 l0     0  271:r286 l0     1
  263:r287 l0     0  260:r288 l0     0  258:r289 l0     1  251:r290 l0     0
  248:r291 l0     0  246:r292 l0     1  234:r293 l0     0  233:r294 l0    21
  232:r295 l0    21  231:r296 l0     0  228:r297 l0     0  229:r298 l0     0
  226:r299 l0     0  223:r300 l0    21  222:r301 l0    21  221:r302 l0    21
  218:r303 l0    21  220:r304 l0    22  219:r305 l0    21  217:r306 l0     0
  214:r307 l0     0  215:r308 l0     0  212:r309 l0     0  211:r310 l0     0
  208:r311 l0     0  209:r312 l0     0  206:r313 l0     0  203:r314 l0    21
  200:r315 l0    21  199:r316 l0    21  196:r317 l0    21  198:r318 l0    21
  197:r319 l0    22  195:r320 l0     0  192:r321 l0     0  193:r322 l0     0
  190:r323 l0     0  189:r324 l0     0  186:r325 l0     0  187:r326 l0     0
  184:r327 l0     0  181:r328 l0    22  178:r329 l0    21  177:r330 l0     0
  176:r331 l0    21  173:r332 l0    21  175:r333 l0    22  174:r334 l0    21
  172:r335 l0     0  169:r336 l0     0  170:r337 l0     0  167:r338 l0     0
  166:r339 l0     0  163:r340 l0     0  164:r341 l0     0  161:r342 l0     0
  158:r343 l0    21  155:r344 l0     0  152:r345 l0     0  153:r346 l0     0
  150:r347 l0     0  149:r348 l0     0  146:r349 l0     0  145:r350 l0     0
  142:r351 l0     0  137:r352 l0     0  134:r353 l0     0  135:r354 l0     0
  132:r355 l0     0  129:r356 l0     0  126:r357 l0     0  125:r358 l0     0
  122:r359 l0     0  118:r360 l0     0  115:r361 l0     0  116:r362 l0     0
  113:r363 l0     0  110:r364 l0     0  107:r365 l0     0  106:r366 l0     0
  103:r367 l0     0  101:r368 l0     0   98:r369 l0     0   93:r370 l0     0
   91:r371 l0     0   89:r372 l0     0   88:r373 l0     2   87:r374 l0     1
   84:r375 l0     0   82:r376 l0     0   80:r377 l0     0   78:r378 l0     0
   77:r379 l0     5   76:r380 l0     2   72:r381 l0     0   70:r382 l0     0
   68:r383 l0     0   66:r384 l0     0   65:r385 l0     5   64:r386 l0     2
   60:r387 l0     0   58:r388 l0     0   55:r389 l0     0   56:r390 l0     0
   53:r391 l0     0   50:r392 l0     0   47:r393 l0     0   46:r394 l0     0
   43:r395 l0     0   39:r396 l0     0   38:r397 l0    22   36:r398 l0    22
   35:r399 l0     0   33:r400 l0    22   31:r401 l0    22   30:r402 l0     0
   28:r403 l0     0   25:r404 l0     0   23:r405 l0     0   22:r406 l0     2
   21:r407 l0     1   18:r408 l0     0   16:r409 l0     0   13:r410 l0     0
   14:r411 l0     0   11:r412 l0     0    8:r413 l0     0    6:r414 l0     0
    5:r415 l0     2    4:r416 l0     1
+++Costs: overall -36, reg -36, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int pre_process(int*, Preprocess*, Procpar_info*, float**, float**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8]
;;  ref usage 	r0={15d,3u} r1={20d,8u} r2={18d,6u} r4={22d,10u} r5={23d,11u} r6={1d,51u} r7={1d,63u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,50u} r17={167d,24u} r18={12d} r19={12d} r20={1d,189u,38e} r21={16d,5u} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={15d,3u} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r87={1d,1u} r88={1d,1u} r89={1d,1u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u,1e} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u,1e} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,3u,2e} r159={1d,1u,1e} r160={1d,1u} r161={1d,1u} r162={1d,3u,2e} r163={1d,1u,1e} r164={1d,1u} r165={1d,3u,2e} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,3u,2e} r171={1d,1u,1e} r172={1d,1u} r173={1d,3u,2e} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,3u,2e} r179={1d,1u,1e} r180={1d,1u} r181={1d,3u,2e} r182={1d,1u,1e} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,3u,2e} r187={1d,1u,1e} r188={1d,1u} r189={1d,1u} r190={1d,1u,1e} r191={1d,1u} r192={1d,1u} r193={1d,1u,1e} r194={1d,1u} r195={1d,1u} r196={1d,3u,2e} r197={1d,1u,1e} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u,1e} r202={1d,1u} r203={1d,1u} r204={1d,1u,1e} r205={1d,1u} r206={1d,1u} r207={1d,3u,2e} r208={1d,1u,1e} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1e} r213={1d,1u} r214={1d,1u} r215={1d,1u,1e} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u,1e} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,3u,2e} r240={1d,1u,1e} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u,1e} r245={1d,1u} r246={1d,1u} r247={1d,1u,1e} r248={1d,1u} r249={1d,1u} r250={1d,2u} r251={1d,1u} r252={1d,2u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,3u,2e} r261={1d,1u,1e} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={6d,6u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={6d,6u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={6d,6u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={6d,6u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={6d,6u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={6d,6u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={6d,6u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={6d,6u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={6d,6u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={6d,6u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={6d,6u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={6d,6u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} 
;;    total ref usage 2396{1466d,839u,91e} in 525{513 regular + 12 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])
        (reg:DI 5 di [ fid ])) ge2fitman_preproc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ fid ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
        (reg:DI 4 si [ preprocess ])) ge2fitman_preproc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ preprocess ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_preproc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
        (reg:DI 2 cx [ out_data ])) ge2fitman_preproc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ out_data ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
        (reg:DI 37 r8 [ scratch_data ])) ge2fitman_preproc.cpp:19 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ scratch_data ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 410 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:30 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              27 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 269
(code_label 410 10 11 3 19 "" [1 uses])
(note 11 410 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) ge2fitman_preproc.cpp:30 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:SI 87 [ D.25995 ])
        (mem:SI (reg/f:DI 269) [0 *fid_27(D)+0 S4 A32])) ge2fitman_preproc.cpp:30 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 269)
        (nil)))
(insn 14 13 15 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ D.25995 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:30 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.25995 ])
        (nil)))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 413)
            (pc))) ge2fitman_preproc.cpp:30 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 413)
;;  succ:       28
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 270 271 272 273 274 275 276 277 278 279 280
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:38 90 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 88 [ D.25996 ])
        (sign_extend:DI (reg:SI 270))) ge2fitman_preproc.cpp:38 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 89 [ D.25996 ])
                (ashift:DI (reg:DI 88 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:38 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 4 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:38 89 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 90 [ D.25997 ])
                (plus:DI (reg:DI 89 [ D.25996 ])
                    (reg/f:DI 271)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 271)
        (expr_list:REG_DEAD (reg:DI 89 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 89 [ D.25996 ]))
                    (nil))))))
(insn 22 21 23 4 (set (reg/f:DI 91 [ D.25998 ])
        (mem/f:DI (reg/f:DI 90 [ D.25997 ]) [0 *_32+0 S8 A64])) ge2fitman_preproc.cpp:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.25997 ])
        (nil)))
(insn 23 22 24 4 (set (reg:SF 92 [ D.25999 ])
        (mem:SF (reg/f:DI 91 [ D.25998 ]) [0 *_33+0 S4 A32])) ge2fitman_preproc.cpp:38 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.25998 ])
        (nil)))
(insn 24 23 25 4 (set (reg:DF 93 [ D.26000 ])
        (float_extend:DF (reg:SF 92 [ D.25999 ]))) ge2fitman_preproc.cpp:38 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 92 [ D.25999 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:38 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 94 [ D.25996 ])
        (sign_extend:DI (reg:SI 272))) ge2fitman_preproc.cpp:38 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 272)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 95 [ D.25996 ])
                (ashift:DI (reg:DI 94 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:38 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:38 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 96 [ D.25997 ])
                (plus:DI (reg:DI 95 [ D.25996 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:38 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:DI 95 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 95 [ D.25996 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg/f:DI 97 [ D.25998 ])
        (mem/f:DI (reg/f:DI 96 [ D.25997 ]) [0 *_38+0 S8 A64])) ge2fitman_preproc.cpp:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.25997 ])
        (nil)))
(insn 31 30 32 4 (set (reg:SF 98 [ D.25999 ])
        (mem:SF (reg/f:DI 97 [ D.25998 ]) [0 *_39+0 S4 A32])) ge2fitman_preproc.cpp:38 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.25998 ])
        (nil)))
(insn 32 31 33 4 (set (reg:DF 99 [ D.26000 ])
        (float_extend:DF (reg:SF 98 [ D.25999 ]))) ge2fitman_preproc.cpp:38 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 98 [ D.25999 ])
        (nil)))
(insn 33 32 34 4 (set (reg:DF 100 [ D.26000 ])
        (mult:DF (reg:DF 93 [ D.26000 ])
            (reg:DF 99 [ D.26000 ]))) ge2fitman_preproc.cpp:38 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 99 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 93 [ D.26000 ])
            (nil))))
(insn 34 33 35 4 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:39 90 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 101 [ D.25996 ])
        (sign_extend:DI (reg:SI 274))) ge2fitman_preproc.cpp:39 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 102 [ D.25996 ])
                (ashift:DI (reg:DI 101 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:39 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 103 [ D.25997 ])
                (plus:DI (reg:DI 102 [ D.25996 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 102 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 102 [ D.25996 ]))
                    (nil))))))
(insn 39 38 40 4 (set (reg/f:DI 104 [ D.25998 ])
        (mem/f:DI (reg/f:DI 103 [ D.25997 ]) [0 *_45+0 S8 A64])) ge2fitman_preproc.cpp:39 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.25997 ])
        (nil)))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 105 [ D.25998 ])
                (plus:DI (reg/f:DI 104 [ D.25998 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.25998 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 4 (set (reg:SF 106 [ D.25999 ])
        (mem:SF (reg/f:DI 105 [ D.25998 ]) [0 *_47+0 S4 A32])) ge2fitman_preproc.cpp:39 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.25998 ])
        (nil)))
(insn 42 41 43 4 (set (reg:DF 107 [ D.26000 ])
        (float_extend:DF (reg:SF 106 [ D.25999 ]))) ge2fitman_preproc.cpp:39 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 106 [ D.25999 ])
        (nil)))
(insn 43 42 44 4 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:39 90 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 108 [ D.25996 ])
        (sign_extend:DI (reg:SI 276))) ge2fitman_preproc.cpp:39 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 276)
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 109 [ D.25996 ])
                (ashift:DI (reg:DI 108 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 108 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:39 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 110 [ D.25997 ])
                (plus:DI (reg:DI 109 [ D.25996 ])
                    (reg/f:DI 277)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 277)
        (expr_list:REG_DEAD (reg:DI 109 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 109 [ D.25996 ]))
                    (nil))))))
(insn 48 47 49 4 (set (reg/f:DI 111 [ D.25998 ])
        (mem/f:DI (reg/f:DI 110 [ D.25997 ]) [0 *_52+0 S8 A64])) ge2fitman_preproc.cpp:39 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ D.25997 ])
        (nil)))
(insn 49 48 50 4 (parallel [
            (set (reg/f:DI 112 [ D.25998 ])
                (plus:DI (reg/f:DI 111 [ D.25998 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:39 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.25998 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 4 (set (reg:SF 113 [ D.25999 ])
        (mem:SF (reg/f:DI 112 [ D.25998 ]) [0 *_54+0 S4 A32])) ge2fitman_preproc.cpp:39 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ D.25998 ])
        (nil)))
(insn 51 50 52 4 (set (reg:DF 114 [ D.26000 ])
        (float_extend:DF (reg:SF 113 [ D.25999 ]))) ge2fitman_preproc.cpp:39 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 113 [ D.25999 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 115 [ D.26000 ])
        (mult:DF (reg:DF 107 [ D.26000 ])
            (reg:DF 114 [ D.26000 ]))) ge2fitman_preproc.cpp:39 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 114 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 107 [ D.26000 ])
            (nil))))
(insn 53 52 54 4 (set (reg:DF 116 [ D.26000 ])
        (plus:DF (reg:DF 100 [ D.26000 ])
            (reg:DF 115 [ D.26000 ]))) ge2fitman_preproc.cpp:38 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 115 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 100 [ D.26000 ])
            (nil))))
(insn 54 53 55 4 (set (reg:DF 21 xmm0)
        (reg:DF 116 [ D.26000 ])) ge2fitman_preproc.cpp:39 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 116 [ D.26000 ])
        (nil)))
(call_insn 55 54 56 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:39 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 56 55 57 4 (set (reg:DF 278)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:39 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 57 56 58 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])
        (reg:DF 278)) ge2fitman_preproc.cpp:39 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 278)
        (nil)))
(insn 58 57 59 4 (set (reg:DF 279)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) ge2fitman_preproc.cpp:40 128 {*movdf_internal}
     (nil))
(insn 59 58 60 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 279)) ge2fitman_preproc.cpp:40 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 279)
        (nil)))
(insn 60 59 61 4 (set (reg:DF 280)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:42 128 {*movdf_internal}
     (nil))
(insn 61 60 62 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 280)) ge2fitman_preproc.cpp:42 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 280)
        (nil)))
(insn 62 61 136 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman_preproc.cpp:46 90 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              8 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 136 62 63 5 6 "" [1 uses])
(note 63 136 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
            (const_int 48 [0x30]))) ge2fitman_preproc.cpp:46 7 {*cmpsi_1}
     (nil))
(jump_insn 65 64 66 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) ge2fitman_preproc.cpp:46 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 139)
;;  succ:       9
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 281 282 283 284 285 286 287 288 289 290 291 292 293 294
(note 66 65 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 6 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:51 90 {*movsi_internal}
     (nil))
(insn 68 67 69 6 (set (reg:DI 117 [ D.25996 ])
        (sign_extend:DI (reg:SI 281))) ge2fitman_preproc.cpp:51 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 281)
        (nil)))
(insn 69 68 70 6 (parallel [
            (set (reg:DI 118 [ D.25996 ])
                (ashift:DI (reg:DI 117 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 6 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:51 89 {*movdi_internal}
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg/f:DI 119 [ D.25997 ])
                (plus:DI (reg:DI 118 [ D.25996 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (expr_list:REG_DEAD (reg:DI 118 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 118 [ D.25996 ]))
                    (nil))))))
(insn 72 71 73 6 (set (reg/f:DI 120 [ D.25998 ])
        (mem/f:DI (reg/f:DI 119 [ D.25997 ]) [0 *_66+0 S8 A64])) ge2fitman_preproc.cpp:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.25997 ])
        (nil)))
(insn 73 72 74 6 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) ge2fitman_preproc.cpp:51 90 {*movsi_internal}
     (nil))
(insn 74 73 75 6 (set (reg:DI 121 [ D.25996 ])
        (sign_extend:DI (reg:SI 283))) ge2fitman_preproc.cpp:51 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 283)
        (nil)))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 122 [ D.25996 ])
                (ashift:DI (reg:DI 121 [ D.25996 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 77 6 (parallel [
            (set (reg/f:DI 123 [ D.25998 ])
                (plus:DI (reg/f:DI 120 [ D.25998 ])
                    (reg:DI 122 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.25996 ])
        (expr_list:REG_DEAD (reg/f:DI 120 [ D.25998 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 77 76 78 6 (set (reg:SF 124 [ D.25999 ])
        (mem:SF (reg/f:DI 123 [ D.25998 ]) [0 *_70+0 S4 A32])) ge2fitman_preproc.cpp:51 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ D.25998 ])
        (nil)))
(insn 78 77 79 6 (set (reg:DF 125 [ D.26000 ])
        (float_extend:DF (reg:SF 124 [ D.25999 ]))) ge2fitman_preproc.cpp:51 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 124 [ D.25999 ])
        (nil)))
(insn 79 78 80 6 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:51 90 {*movsi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:DI 126 [ D.25996 ])
        (sign_extend:DI (reg:SI 284))) ge2fitman_preproc.cpp:51 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
(insn 81 80 82 6 (parallel [
            (set (reg:DI 127 [ D.25996 ])
                (ashift:DI (reg:DI 126 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 82 81 83 6 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:51 89 {*movdi_internal}
     (nil))
(insn 83 82 84 6 (parallel [
            (set (reg/f:DI 128 [ D.25997 ])
                (plus:DI (reg:DI 127 [ D.25996 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (expr_list:REG_DEAD (reg:DI 127 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 127 [ D.25996 ]))
                    (nil))))))
(insn 84 83 85 6 (set (reg/f:DI 129 [ D.25998 ])
        (mem/f:DI (reg/f:DI 128 [ D.25997 ]) [0 *_75+0 S8 A64])) ge2fitman_preproc.cpp:51 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ D.25997 ])
        (nil)))
(insn 85 84 86 6 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) ge2fitman_preproc.cpp:51 90 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:DI 130 [ D.25996 ])
        (sign_extend:DI (reg:SI 286))) ge2fitman_preproc.cpp:51 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 87 86 88 6 (parallel [
            (set (reg:DI 131 [ D.25996 ])
                (ashift:DI (reg:DI 130 [ D.25996 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 6 (parallel [
            (set (reg/f:DI 132 [ D.25998 ])
                (plus:DI (reg/f:DI 129 [ D.25998 ])
                    (reg:DI 131 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:51 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ D.25996 ])
        (expr_list:REG_DEAD (reg/f:DI 129 [ D.25998 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 89 88 90 6 (set (reg:SF 133 [ D.25999 ])
        (mem:SF (reg/f:DI 132 [ D.25998 ]) [0 *_79+0 S4 A32])) ge2fitman_preproc.cpp:51 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.25998 ])
        (nil)))
(insn 90 89 91 6 (set (reg:DF 134 [ D.26000 ])
        (float_extend:DF (reg:SF 133 [ D.25999 ]))) ge2fitman_preproc.cpp:51 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.25999 ])
        (nil)))
(insn 91 90 92 6 (set (reg:DF 135 [ D.26000 ])
        (mult:DF (reg:DF 125 [ D.26000 ])
            (reg:DF 134 [ D.26000 ]))) ge2fitman_preproc.cpp:51 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 125 [ D.26000 ])
            (nil))))
(insn 92 91 93 6 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:52 90 {*movsi_internal}
     (nil))
(insn 93 92 94 6 (set (reg:DI 136 [ D.25996 ])
        (sign_extend:DI (reg:SI 287))) ge2fitman_preproc.cpp:52 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
(insn 94 93 95 6 (parallel [
            (set (reg:DI 137 [ D.25996 ])
                (ashift:DI (reg:DI 136 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 6 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:52 89 {*movdi_internal}
     (nil))
(insn 96 95 97 6 (parallel [
            (set (reg/f:DI 138 [ D.25997 ])
                (plus:DI (reg:DI 137 [ D.25996 ])
                    (reg/f:DI 288)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 288)
        (expr_list:REG_DEAD (reg:DI 137 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 137 [ D.25996 ]))
                    (nil))))))
(insn 97 96 98 6 (set (reg/f:DI 139 [ D.25998 ])
        (mem/f:DI (reg/f:DI 138 [ D.25997 ]) [0 *_85+0 S8 A64])) ge2fitman_preproc.cpp:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ D.25997 ])
        (nil)))
(insn 98 97 99 6 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) ge2fitman_preproc.cpp:52 90 {*movsi_internal}
     (nil))
(insn 99 98 100 6 (set (reg:DI 140 [ D.26001 ])
        (sign_extend:DI (reg:SI 289))) ge2fitman_preproc.cpp:52 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 289)
        (nil)))
(insn 100 99 101 6 (parallel [
            (set (reg:DI 141 [ D.26001 ])
                (plus:DI (reg:DI 140 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 101 100 102 6 (parallel [
            (set (reg:DI 142 [ D.26001 ])
                (ashift:DI (reg:DI 141 [ D.26001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 6 (parallel [
            (set (reg/f:DI 143 [ D.25998 ])
                (plus:DI (reg/f:DI 139 [ D.25998 ])
                    (reg:DI 142 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.26001 ])
        (expr_list:REG_DEAD (reg/f:DI 139 [ D.25998 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 103 102 104 6 (set (reg:SF 144 [ D.25999 ])
        (mem:SF (reg/f:DI 143 [ D.25998 ]) [0 *_90+0 S4 A32])) ge2fitman_preproc.cpp:52 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ D.25998 ])
        (nil)))
(insn 104 103 105 6 (set (reg:DF 145 [ D.26000 ])
        (float_extend:DF (reg:SF 144 [ D.25999 ]))) ge2fitman_preproc.cpp:52 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 144 [ D.25999 ])
        (nil)))
(insn 105 104 106 6 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:52 90 {*movsi_internal}
     (nil))
(insn 106 105 107 6 (set (reg:DI 146 [ D.25996 ])
        (sign_extend:DI (reg:SI 290))) ge2fitman_preproc.cpp:52 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 107 106 108 6 (parallel [
            (set (reg:DI 147 [ D.25996 ])
                (ashift:DI (reg:DI 146 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 6 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:52 89 {*movdi_internal}
     (nil))
(insn 109 108 110 6 (parallel [
            (set (reg/f:DI 148 [ D.25997 ])
                (plus:DI (reg:DI 147 [ D.25996 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_DEAD (reg:DI 147 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 147 [ D.25996 ]))
                    (nil))))))
(insn 110 109 111 6 (set (reg/f:DI 149 [ D.25998 ])
        (mem/f:DI (reg/f:DI 148 [ D.25997 ]) [0 *_95+0 S8 A64])) ge2fitman_preproc.cpp:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.25997 ])
        (nil)))
(insn 111 110 112 6 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])) ge2fitman_preproc.cpp:52 90 {*movsi_internal}
     (nil))
(insn 112 111 113 6 (set (reg:DI 150 [ D.26001 ])
        (sign_extend:DI (reg:SI 292))) ge2fitman_preproc.cpp:52 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 292)
        (nil)))
(insn 113 112 114 6 (parallel [
            (set (reg:DI 151 [ D.26001 ])
                (plus:DI (reg:DI 150 [ D.26001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 6 (parallel [
            (set (reg:DI 152 [ D.26001 ])
                (ashift:DI (reg:DI 151 [ D.26001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 151 [ D.26001 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 6 (parallel [
            (set (reg/f:DI 153 [ D.25998 ])
                (plus:DI (reg/f:DI 149 [ D.25998 ])
                    (reg:DI 152 [ D.26001 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ D.26001 ])
        (expr_list:REG_DEAD (reg/f:DI 149 [ D.25998 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 116 115 117 6 (set (reg:SF 154 [ D.25999 ])
        (mem:SF (reg/f:DI 153 [ D.25998 ]) [0 *_100+0 S4 A32])) ge2fitman_preproc.cpp:52 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ D.25998 ])
        (nil)))
(insn 117 116 118 6 (set (reg:DF 155 [ D.26000 ])
        (float_extend:DF (reg:SF 154 [ D.25999 ]))) ge2fitman_preproc.cpp:52 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 154 [ D.25999 ])
        (nil)))
(insn 118 117 119 6 (set (reg:DF 156 [ D.26000 ])
        (mult:DF (reg:DF 145 [ D.26000 ])
            (reg:DF 155 [ D.26000 ]))) ge2fitman_preproc.cpp:52 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 155 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 145 [ D.26000 ])
            (nil))))
(insn 119 118 120 6 (set (reg:DF 157 [ D.26000 ])
        (plus:DF (reg:DF 135 [ D.26000 ])
            (reg:DF 156 [ D.26000 ]))) ge2fitman_preproc.cpp:51 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 156 [ D.26000 ])
        (expr_list:REG_DEAD (reg:DF 135 [ D.26000 ])
            (nil))))
(insn 120 119 121 6 (set (reg:DF 21 xmm0)
        (reg:DF 157 [ D.26000 ])) ge2fitman_preproc.cpp:52 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 157 [ D.26000 ])
        (nil)))
(call_insn 121 120 122 6 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:52 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 122 121 123 6 (set (reg:DF 293)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:52 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 123 122 124 6 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])
        (reg:DF 293)) ge2fitman_preproc.cpp:52 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 293)
        (nil)))
(insn 124 123 125 6 (set (reg:DF 294)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) ge2fitman_preproc.cpp:53 128 {*movdf_internal}
     (nil))
(insn 125 124 126 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 294)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) ge2fitman_preproc.cpp:53 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 294)
        (nil)))
(jump_insn 126 125 130 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 133)
            (pc))) ge2fitman_preproc.cpp:53 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 133)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 295
(note 130 126 131 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 7 (set (reg:DF 295)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp2+0 S8 A64])) ge2fitman_preproc.cpp:54 128 {*movdf_internal}
     (nil))
(insn 132 131 133 7 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 295)) ge2fitman_preproc.cpp:54 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 295)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 133 132 134 8 4 "" [1 uses])
(note 134 133 135 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 641 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 k+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:46 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 641 135 642 8 (set (pc)
        (label_ref 136)) ge2fitman_preproc.cpp:46 654 {jump}
     (nil)
 -> 136)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 642 641 139)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158 159 160 161 296 297 298 299
(code_label 139 642 140 9 3 "" [1 uses])
(note 140 139 141 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 9 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:58 90 {*movsi_internal}
     (nil))
(insn 142 141 143 9 (set (reg:DI 158 [ D.25996 ])
        (sign_extend:DI (reg:SI 296))) ge2fitman_preproc.cpp:58 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 296)
        (nil)))
(insn 143 142 144 9 (set (reg:DI 297)
        (reg:DI 158 [ D.25996 ])) ge2fitman_preproc.cpp:58 89 {*movdi_internal}
     (nil))
(insn 144 143 145 9 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 297)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 145 144 146 9 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg:DI 297)
                    (reg:DI 158 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 158 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 146 145 147 9 (parallel [
            (set (reg:DI 297)
                (ashift:DI (reg:DI 297)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 9 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg:DI 297)
                    (reg:DI 158 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 158 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 158 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 148 147 149 9 (parallel [
            (set (reg:DI 298)
                (ashift:DI (reg:DI 297)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 297)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 9 (set (reg:DI 297)
        (reg:DI 298)) ge2fitman_preproc.cpp:58 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 298)
        (nil)))
(insn 150 149 151 9 (set (reg:DI 159 [ D.25996 ])
        (reg:DI 297)) ge2fitman_preproc.cpp:58 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(insn 151 150 152 9 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:58 89 {*movdi_internal}
     (nil))
(insn 152 151 153 9 (parallel [
            (set (reg/f:DI 160 [ D.26002 ])
                (plus:DI (reg:DI 159 [ D.25996 ])
                    (reg/f:DI 299)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:58 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_DEAD (reg:DI 159 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 159 [ D.25996 ]))
                    (nil))))))
(insn 153 152 154 9 (set (reg:SI 161 [ D.25995 ])
        (mem/j:SI (reg/f:DI 160 [ D.26002 ]) [0 _112->fid_scale+0 S4 A32])) ge2fitman_preproc.cpp:58 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.26002 ])
        (nil)))
(insn 154 153 155 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:58 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 161 [ D.25995 ])
        (nil)))
(jump_insn 155 154 156 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 259)
            (pc))) ge2fitman_preproc.cpp:58 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 259)
;;  succ:       10 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 300
(note 156 155 157 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 10 (set (reg:DF 300)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:63 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 158 157 159 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 300)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) ge2fitman_preproc.cpp:63 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 300)
        (nil)))
(jump_insn 159 158 626 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 643)
            (pc))) ge2fitman_preproc.cpp:63 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 643)
;;  succ:       11 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 626 159 205 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 301
(code_label 205 626 163 12 11 "" [1 uses])
(note 163 205 164 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 12 (set (reg:DF 301)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:64 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 165 164 166 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 301)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) ge2fitman_preproc.cpp:64 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 301)
        (nil)))
(jump_insn 166 165 627 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 638)
            (pc))) ge2fitman_preproc.cpp:64 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 638)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 627 166 644 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 644 627 645 13 (set (pc)
        (label_ref 259)) 654 {jump}
     (nil)
 -> 259)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 645 644 638)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 170 171 172 173 174 175 176 177 302 303 304 305 306 307 308 309 310 311 312 313 314
(code_label 638 645 170 14 33 "" [1 uses])
(note 170 638 171 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 14 (set (reg:DF 302)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:71 128 {*movdf_internal}
     (nil))
(insn 172 171 173 14 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 302)) ge2fitman_preproc.cpp:71 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 302)
        (nil)))
(insn 173 172 174 14 (set (reg:DF 304)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:73 128 {*movdf_internal}
     (nil))
(insn 174 173 175 14 (set (reg:DF 305)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:73 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 175 174 176 14 (set (reg:DF 303)
        (mult:DF (reg:DF 304)
            (reg:DF 305))) ge2fitman_preproc.cpp:73 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 305)
        (expr_list:REG_DEAD (reg:DF 304)
            (nil))))
(insn 176 175 177 14 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 303)) ge2fitman_preproc.cpp:73 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 303)
        (nil)))
(insn 177 176 178 14 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:74 90 {*movsi_internal}
     (nil))
(insn 178 177 179 14 (set (reg:DI 170 [ D.25996 ])
        (sign_extend:DI (reg:SI 306))) ge2fitman_preproc.cpp:74 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 306)
        (nil)))
(insn 179 178 180 14 (set (reg:DI 307)
        (reg:DI 170 [ D.25996 ])) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (nil))
(insn 180 179 181 14 (parallel [
            (set (reg:DI 307)
                (ashift:DI (reg:DI 307)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 181 180 182 14 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 307)
                    (reg:DI 170 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 170 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 182 181 183 14 (parallel [
            (set (reg:DI 307)
                (ashift:DI (reg:DI 307)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 183 182 184 14 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 307)
                    (reg:DI 170 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 170 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 308)
                (ashift:DI (reg:DI 307)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 307)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 14 (set (reg:DI 307)
        (reg:DI 308)) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 308)
        (nil)))
(insn 186 185 187 14 (set (reg:DI 171 [ D.25996 ])
        (reg:DI 307)) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 307)
        (nil)))
(insn 187 186 188 14 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (nil))
(insn 188 187 189 14 (parallel [
            (set (reg/f:DI 172 [ D.26002 ])
                (plus:DI (reg:DI 171 [ D.25996 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (expr_list:REG_DEAD (reg:DI 171 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 171 [ D.25996 ]))
                    (nil))))))
(insn 189 188 190 14 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:74 90 {*movsi_internal}
     (nil))
(insn 190 189 191 14 (set (reg:DI 173 [ D.25996 ])
        (sign_extend:DI (reg:SI 310))) ge2fitman_preproc.cpp:74 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 310)
        (nil)))
(insn 191 190 192 14 (set (reg:DI 311)
        (reg:DI 173 [ D.25996 ])) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (nil))
(insn 192 191 193 14 (parallel [
            (set (reg:DI 311)
                (ashift:DI (reg:DI 311)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 192 194 14 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 311)
                    (reg:DI 173 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 194 193 195 14 (parallel [
            (set (reg:DI 311)
                (ashift:DI (reg:DI 311)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 195 194 196 14 (parallel [
            (set (reg:DI 311)
                (plus:DI (reg:DI 311)
                    (reg:DI 173 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 173 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 196 195 197 14 (parallel [
            (set (reg:DI 312)
                (ashift:DI (reg:DI 311)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 311)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 14 (set (reg:DI 311)
        (reg:DI 312)) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 312)
        (nil)))
(insn 198 197 199 14 (set (reg:DI 174 [ D.25996 ])
        (reg:DI 311)) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 311)
        (nil)))
(insn 199 198 200 14 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:74 89 {*movdi_internal}
     (nil))
(insn 200 199 201 14 (parallel [
            (set (reg/f:DI 175 [ D.26002 ])
                (plus:DI (reg:DI 174 [ D.25996 ])
                    (reg/f:DI 313)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:74 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 313)
        (expr_list:REG_DEAD (reg:DI 174 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 174 [ D.25996 ]))
                    (nil))))))
(insn 201 200 202 14 (set (reg:SF 176 [ D.25999 ])
        (mem/j:SF (plus:DI (reg/f:DI 175 [ D.26002 ])
                (const_int 4 [0x4])) [0 _131->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:74 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.26002 ])
        (nil)))
(insn 202 201 203 14 (set (reg:SF 314)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:74 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 203 202 204 14 (set (reg:SF 177 [ D.25999 ])
        (mult:SF (reg:SF 176 [ D.25999 ])
            (reg:SF 314))) ge2fitman_preproc.cpp:74 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 314)
        (expr_list:REG_DEAD (reg:SF 176 [ D.25999 ])
            (nil))))
(insn 204 203 646 14 (set (mem/j:SF (plus:DI (reg/f:DI 172 [ D.26002 ])
                (const_int 4 [0x4])) [0 _128->scale_factor+0 S4 A32])
        (reg:SF 177 [ D.25999 ])) ge2fitman_preproc.cpp:74 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 177 [ D.25999 ])
        (expr_list:REG_DEAD (reg/f:DI 172 [ D.26002 ])
            (nil))))
(jump_insn 646 204 647 14 (set (pc)
        (label_ref 205)) ge2fitman_preproc.cpp:64 654 {jump}
     (nil)
 -> 205)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 647 646 643)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 315
(code_label 643 647 209 15 36 "" [1 uses])
(note 209 643 210 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 15 (set (reg:DF 315)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:76 128 {*movdf_internal}
     (nil))
(insn 211 210 212 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 315)
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64]))) ge2fitman_preproc.cpp:76 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 315)
        (nil)))
(jump_insn 212 211 629 15 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) ge2fitman_preproc.cpp:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 215)
;;  succ:       17
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 629 212 648 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 648 629 649 16 (set (pc)
        (label_ref 259)) 654 {jump}
     (nil)
 -> 259)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 649 648 215)
;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 215 649 630 17 12 "" [1 uses])
(note 630 215 256 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              20 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 316
(code_label 256 630 216 18 14 "" [1 uses])
(note 216 256 217 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 18 (set (reg:DF 316)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:77 128 {*movdf_internal}
     (nil))
(insn 218 217 219 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 316)
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64]))) ge2fitman_preproc.cpp:77 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 316)
        (nil)))
(jump_insn 219 218 631 18 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 639)
            (pc))) ge2fitman_preproc.cpp:77 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 639)
;;  succ:       20
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 631 219 650 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 650 631 651 19 (set (pc)
        (label_ref 259)) 654 {jump}
     (nil)
 -> 259)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 651 650 639)
;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 162 163 164 165 166 167 168 169 317 318 319 320 321 322 323 324 325 326 327 328
(code_label 639 651 223 20 34 "" [1 uses])
(note 223 639 224 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 20 (set (reg:DF 318)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:78 128 {*movdf_internal}
     (nil))
(insn 225 224 226 20 (set (reg:DF 319)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:78 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 226 225 227 20 (set (reg:DF 317)
        (div:DF (reg:DF 318)
            (reg:DF 319))) ge2fitman_preproc.cpp:78 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 319)
        (expr_list:REG_DEAD (reg:DF 318)
            (nil))))
(insn 227 226 228 20 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 317)) ge2fitman_preproc.cpp:78 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 317)
        (nil)))
(insn 228 227 229 20 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:79 90 {*movsi_internal}
     (nil))
(insn 229 228 230 20 (set (reg:DI 162 [ D.25996 ])
        (sign_extend:DI (reg:SI 320))) ge2fitman_preproc.cpp:79 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 320)
        (nil)))
(insn 230 229 231 20 (set (reg:DI 321)
        (reg:DI 162 [ D.25996 ])) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (nil))
(insn 231 230 232 20 (parallel [
            (set (reg:DI 321)
                (ashift:DI (reg:DI 321)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 232 231 233 20 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 321)
                    (reg:DI 162 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 233 232 234 20 (parallel [
            (set (reg:DI 321)
                (ashift:DI (reg:DI 321)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 20 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 321)
                    (reg:DI 162 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 162 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 235 234 236 20 (parallel [
            (set (reg:DI 322)
                (ashift:DI (reg:DI 321)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 321)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 236 235 237 20 (set (reg:DI 321)
        (reg:DI 322)) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 322)
        (nil)))
(insn 237 236 238 20 (set (reg:DI 163 [ D.25996 ])
        (reg:DI 321)) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 321)
        (nil)))
(insn 238 237 239 20 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (nil))
(insn 239 238 240 20 (parallel [
            (set (reg/f:DI 164 [ D.26002 ])
                (plus:DI (reg:DI 163 [ D.25996 ])
                    (reg/f:DI 323)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (expr_list:REG_DEAD (reg:DI 163 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 163 [ D.25996 ]))
                    (nil))))))
(insn 240 239 241 20 (set (reg:SI 324)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:79 90 {*movsi_internal}
     (nil))
(insn 241 240 242 20 (set (reg:DI 165 [ D.25996 ])
        (sign_extend:DI (reg:SI 324))) ge2fitman_preproc.cpp:79 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 324)
        (nil)))
(insn 242 241 243 20 (set (reg:DI 325)
        (reg:DI 165 [ D.25996 ])) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (nil))
(insn 243 242 244 20 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 325)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 245 20 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 325)
                    (reg:DI 165 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 165 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 245 244 246 20 (parallel [
            (set (reg:DI 325)
                (ashift:DI (reg:DI 325)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 246 245 247 20 (parallel [
            (set (reg:DI 325)
                (plus:DI (reg:DI 325)
                    (reg:DI 165 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 165 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 247 246 248 20 (parallel [
            (set (reg:DI 326)
                (ashift:DI (reg:DI 325)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 325)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 20 (set (reg:DI 325)
        (reg:DI 326)) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 326)
        (nil)))
(insn 249 248 250 20 (set (reg:DI 166 [ D.25996 ])
        (reg:DI 325)) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 325)
        (nil)))
(insn 250 249 251 20 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:79 89 {*movdi_internal}
     (nil))
(insn 251 250 252 20 (parallel [
            (set (reg/f:DI 167 [ D.26002 ])
                (plus:DI (reg:DI 166 [ D.25996 ])
                    (reg/f:DI 327)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:79 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 327)
        (expr_list:REG_DEAD (reg:DI 166 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 166 [ D.25996 ]))
                    (nil))))))
(insn 252 251 253 20 (set (reg:SF 168 [ D.25999 ])
        (mem/j:SF (plus:DI (reg/f:DI 167 [ D.26002 ])
                (const_int 4 [0x4])) [0 _120->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:79 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.26002 ])
        (nil)))
(insn 253 252 254 20 (set (reg:SF 328)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:79 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 254 253 255 20 (set (reg:SF 169 [ D.25999 ])
        (div:SF (reg:SF 168 [ D.25999 ])
            (reg:SF 328))) ge2fitman_preproc.cpp:79 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 328)
        (expr_list:REG_DEAD (reg:SF 168 [ D.25999 ])
            (nil))))
(insn 255 254 652 20 (set (mem/j:SF (plus:DI (reg/f:DI 164 [ D.26002 ])
                (const_int 4 [0x4])) [0 _117->scale_factor+0 S4 A32])
        (reg:SF 169 [ D.25999 ])) ge2fitman_preproc.cpp:79 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ D.25999 ])
        (expr_list:REG_DEAD (reg/f:DI 164 [ D.26002 ])
            (nil))))
(jump_insn 652 255 653 20 (set (pc)
        (label_ref 256)) ge2fitman_preproc.cpp:77 654 {jump}
     (nil)
 -> 256)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 653 652 259)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              19 [100.0%] 
;;              16 [100.0%] 
;;              13 [100.0%] 
;;              22 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 329
(code_label 259 653 260 21 7 "" [5 uses])
(note 260 259 261 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 21 (set (reg:DF 329)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:88 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 262 261 263 21 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 329)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64]))) ge2fitman_preproc.cpp:88 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 329)
        (nil)))
(jump_insn 263 262 267 21 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 654)
            (pc))) ge2fitman_preproc.cpp:88 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 654)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 178 179 180 181 182 183 184 185 330 331 332 333 334 335 336 337 338 339 340 341 342 343
(note 267 263 268 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 22 (set (reg:DF 330)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:92 128 {*movdf_internal}
     (nil))
(insn 269 268 270 22 (set (reg:DF 21 xmm0)
        (reg:DF 330)) ge2fitman_preproc.cpp:92 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 330)
        (nil)))
(insn 270 269 271 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fe355947ab0 *.LC4>)) ge2fitman_preproc.cpp:92 89 {*movdi_internal}
     (nil))
(insn 271 270 272 22 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:92 93 {*movqi_internal}
     (nil))
(call_insn 272 271 273 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe3570c75e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:92 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 273 272 274 22 (set (reg:DF 331)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:95 128 {*movdf_internal}
     (nil))
(insn 274 273 275 22 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 331)) ge2fitman_preproc.cpp:95 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 331)
        (nil)))
(insn 275 274 276 22 (set (reg:DF 333)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])) ge2fitman_preproc.cpp:97 128 {*movdf_internal}
     (nil))
(insn 276 275 277 22 (set (reg:DF 334)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:97 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 277 276 278 22 (set (reg:DF 332)
        (mult:DF (reg:DF 333)
            (reg:DF 334))) ge2fitman_preproc.cpp:97 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 334)
        (expr_list:REG_DEAD (reg:DF 333)
            (nil))))
(insn 278 277 279 22 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 scaled_point+0 S8 A64])
        (reg:DF 332)) ge2fitman_preproc.cpp:97 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 332)
        (nil)))
(insn 279 278 280 22 (set (reg:SI 335)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:98 90 {*movsi_internal}
     (nil))
(insn 280 279 281 22 (set (reg:DI 178 [ D.25996 ])
        (sign_extend:DI (reg:SI 335))) ge2fitman_preproc.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 335)
        (nil)))
(insn 281 280 282 22 (set (reg:DI 336)
        (reg:DI 178 [ D.25996 ])) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 282 281 283 22 (parallel [
            (set (reg:DI 336)
                (ashift:DI (reg:DI 336)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 283 282 284 22 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg:DI 336)
                    (reg:DI 178 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 284 283 285 22 (parallel [
            (set (reg:DI 336)
                (ashift:DI (reg:DI 336)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 285 284 286 22 (parallel [
            (set (reg:DI 336)
                (plus:DI (reg:DI 336)
                    (reg:DI 178 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 178 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 286 285 287 22 (parallel [
            (set (reg:DI 337)
                (ashift:DI (reg:DI 336)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 336)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 287 286 288 22 (set (reg:DI 336)
        (reg:DI 337)) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 337)
        (nil)))
(insn 288 287 289 22 (set (reg:DI 179 [ D.25996 ])
        (reg:DI 336)) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 336)
        (nil)))
(insn 289 288 290 22 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 290 289 291 22 (parallel [
            (set (reg/f:DI 180 [ D.26002 ])
                (plus:DI (reg:DI 179 [ D.25996 ])
                    (reg/f:DI 338)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (expr_list:REG_DEAD (reg:DI 179 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 179 [ D.25996 ]))
                    (nil))))))
(insn 291 290 292 22 (set (reg:SI 339)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:98 90 {*movsi_internal}
     (nil))
(insn 292 291 293 22 (set (reg:DI 181 [ D.25996 ])
        (sign_extend:DI (reg:SI 339))) ge2fitman_preproc.cpp:98 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 339)
        (nil)))
(insn 293 292 294 22 (set (reg:DI 340)
        (reg:DI 181 [ D.25996 ])) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 294 293 295 22 (parallel [
            (set (reg:DI 340)
                (ashift:DI (reg:DI 340)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 295 294 296 22 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg:DI 340)
                    (reg:DI 181 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 181 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 296 295 297 22 (parallel [
            (set (reg:DI 340)
                (ashift:DI (reg:DI 340)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 297 296 298 22 (parallel [
            (set (reg:DI 340)
                (plus:DI (reg:DI 340)
                    (reg:DI 181 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 181 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 181 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 298 297 299 22 (parallel [
            (set (reg:DI 341)
                (ashift:DI (reg:DI 340)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 340)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 299 298 300 22 (set (reg:DI 340)
        (reg:DI 341)) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 341)
        (nil)))
(insn 300 299 301 22 (set (reg:DI 182 [ D.25996 ])
        (reg:DI 340)) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 340)
        (nil)))
(insn 301 300 302 22 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:98 89 {*movdi_internal}
     (nil))
(insn 302 301 303 22 (parallel [
            (set (reg/f:DI 183 [ D.26002 ])
                (plus:DI (reg:DI 182 [ D.25996 ])
                    (reg/f:DI 342)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:98 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 342)
        (expr_list:REG_DEAD (reg:DI 182 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 182 [ D.25996 ]))
                    (nil))))))
(insn 303 302 304 22 (set (reg:SF 184 [ D.25999 ])
        (mem/j:SF (plus:DI (reg/f:DI 183 [ D.26002 ])
                (const_int 4 [0x4])) [0 _143->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:98 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.26002 ])
        (nil)))
(insn 304 303 305 22 (set (reg:SF 343)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:98 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 305 304 306 22 (set (reg:SF 185 [ D.25999 ])
        (mult:SF (reg:SF 184 [ D.25999 ])
            (reg:SF 343))) ge2fitman_preproc.cpp:98 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 343)
        (expr_list:REG_DEAD (reg:SF 184 [ D.25999 ])
            (nil))))
(insn 306 305 655 22 (set (mem/j:SF (plus:DI (reg/f:DI 180 [ D.26002 ])
                (const_int 4 [0x4])) [0 _140->scale_factor+0 S4 A32])
        (reg:SF 185 [ D.25999 ])) ge2fitman_preproc.cpp:98 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 185 [ D.25999 ])
        (expr_list:REG_DEAD (reg/f:DI 180 [ D.26002 ])
            (nil))))
(jump_insn 655 306 656 22 (set (pc)
        (label_ref 259)) ge2fitman_preproc.cpp:88 654 {jump}
     (nil)
 -> 259)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 656 655 654)
;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 186 187 188 189 190 191 192 193 194 195 196 197 198 199 344 345 346 347 348 349 350 351 352 353 354 355
(code_label 654 656 310 23 37 "" [1 uses])
(note 310 654 311 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 23 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:101 90 {*movsi_internal}
     (nil))
(insn 312 311 313 23 (set (reg:DI 186 [ D.25996 ])
        (sign_extend:DI (reg:SI 344))) ge2fitman_preproc.cpp:101 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 344)
        (nil)))
(insn 313 312 314 23 (set (reg:DI 345)
        (reg:DI 186 [ D.25996 ])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (nil))
(insn 314 313 315 23 (parallel [
            (set (reg:DI 345)
                (ashift:DI (reg:DI 345)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 315 314 316 23 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg:DI 345)
                    (reg:DI 186 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 186 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 316 315 317 23 (parallel [
            (set (reg:DI 345)
                (ashift:DI (reg:DI 345)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 317 316 318 23 (parallel [
            (set (reg:DI 345)
                (plus:DI (reg:DI 345)
                    (reg:DI 186 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 186 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 186 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 318 317 319 23 (parallel [
            (set (reg:DI 346)
                (ashift:DI (reg:DI 345)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 345)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 319 318 320 23 (set (reg:DI 345)
        (reg:DI 346)) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 346)
        (nil)))
(insn 320 319 321 23 (set (reg:DI 187 [ D.25996 ])
        (reg:DI 345)) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 345)
        (nil)))
(insn 321 320 322 23 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (nil))
(insn 322 321 323 23 (parallel [
            (set (reg/f:DI 188 [ D.26002 ])
                (plus:DI (reg:DI 187 [ D.25996 ])
                    (reg/f:DI 347)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (expr_list:REG_DEAD (reg:DI 187 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 187 [ D.25996 ]))
                    (nil))))))
(insn 323 322 324 23 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:101 90 {*movsi_internal}
     (nil))
(insn 324 323 325 23 (set (reg:DI 189 [ D.25996 ])
        (sign_extend:DI (reg:SI 348))) ge2fitman_preproc.cpp:101 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 348)
        (nil)))
(insn 325 324 326 23 (parallel [
            (set (reg:DI 190 [ D.25996 ])
                (ashift:DI (reg:DI 189 [ D.25996 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 189 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 326 325 327 23 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (nil))
(insn 327 326 328 23 (parallel [
            (set (reg/f:DI 191 [ D.26003 ])
                (plus:DI (reg:DI 190 [ D.25996 ])
                    (reg/f:DI 349)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 349)
        (expr_list:REG_DEAD (reg:DI 190 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 190 [ D.25996 ]))
                    (nil))))))
(insn 328 327 329 23 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:101 90 {*movsi_internal}
     (nil))
(insn 329 328 330 23 (set (reg:DI 192 [ D.25996 ])
        (sign_extend:DI (reg:SI 350))) ge2fitman_preproc.cpp:101 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 350)
        (nil)))
(insn 330 329 331 23 (parallel [
            (set (reg:DI 193 [ D.25996 ])
                (ashift:DI (reg:DI 192 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 192 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 331 330 332 23 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (nil))
(insn 332 331 333 23 (parallel [
            (set (reg/f:DI 194 [ D.25997 ])
                (plus:DI (reg:DI 193 [ D.25996 ])
                    (reg/f:DI 351)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:101 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (expr_list:REG_DEAD (reg:DI 193 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 193 [ D.25996 ]))
                    (nil))))))
(insn 333 332 334 23 (set (reg/f:DI 195 [ D.25998 ])
        (mem/f:DI (reg/f:DI 194 [ D.25997 ]) [0 *_156+0 S8 A64])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ D.25997 ])
        (nil)))
(insn 334 333 335 23 (set (reg:DI 1 dx)
        (reg/f:DI 188 [ D.26002 ])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ D.26002 ])
        (nil)))
(insn 335 334 336 23 (set (reg:DI 4 si)
        (reg/f:DI 191 [ D.26003 ])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ D.26003 ])
        (nil)))
(insn 336 335 337 23 (set (reg:DI 5 di)
        (reg/f:DI 195 [ D.25998 ])) ge2fitman_preproc.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.25998 ])
        (nil)))
(call_insn 337 336 338 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5scalePfP12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c51a20 scale>) [0 scale S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:101 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 338 337 339 23 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:105 90 {*movsi_internal}
     (nil))
(insn 339 338 340 23 (set (reg:DI 196 [ D.25996 ])
        (sign_extend:DI (reg:SI 352))) ge2fitman_preproc.cpp:105 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 352)
        (nil)))
(insn 340 339 341 23 (set (reg:DI 353)
        (reg:DI 196 [ D.25996 ])) ge2fitman_preproc.cpp:105 89 {*movdi_internal}
     (nil))
(insn 341 340 342 23 (parallel [
            (set (reg:DI 353)
                (ashift:DI (reg:DI 353)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 342 341 343 23 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg:DI 353)
                    (reg:DI 196 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 196 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 343 342 344 23 (parallel [
            (set (reg:DI 353)
                (ashift:DI (reg:DI 353)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 344 343 345 23 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg:DI 353)
                    (reg:DI 196 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 196 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 345 344 346 23 (parallel [
            (set (reg:DI 354)
                (ashift:DI (reg:DI 353)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 353)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 346 345 347 23 (set (reg:DI 353)
        (reg:DI 354)) ge2fitman_preproc.cpp:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 354)
        (nil)))
(insn 347 346 348 23 (set (reg:DI 197 [ D.25996 ])
        (reg:DI 353)) ge2fitman_preproc.cpp:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 353)
        (nil)))
(insn 348 347 349 23 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:105 89 {*movdi_internal}
     (nil))
(insn 349 348 350 23 (parallel [
            (set (reg/f:DI 198 [ D.26002 ])
                (plus:DI (reg:DI 197 [ D.25996 ])
                    (reg/f:DI 355)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:105 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (expr_list:REG_DEAD (reg:DI 197 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 197 [ D.25996 ]))
                    (nil))))))
(insn 350 349 351 23 (set (reg:SI 199 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 198 [ D.26002 ])
                (const_int 16 [0x10])) [0 _161->bc+0 S4 A32])) ge2fitman_preproc.cpp:105 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198 [ D.26002 ])
        (nil)))
(insn 351 350 352 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:105 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 199 [ D.25995 ])
        (nil)))
(jump_insn 352 351 353 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 368)
            (pc))) ge2fitman_preproc.cpp:105 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 368)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 200 201 202 203 204 205 206 356 357 358 359
(note 353 352 354 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 24 (set (reg:SI 356)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:106 90 {*movsi_internal}
     (nil))
(insn 355 354 356 24 (set (reg:DI 200 [ D.25996 ])
        (sign_extend:DI (reg:SI 356))) ge2fitman_preproc.cpp:106 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 356)
        (nil)))
(insn 356 355 357 24 (parallel [
            (set (reg:DI 201 [ D.25996 ])
                (ashift:DI (reg:DI 200 [ D.25996 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:106 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 200 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 357 356 358 24 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:106 89 {*movdi_internal}
     (nil))
(insn 358 357 359 24 (parallel [
            (set (reg/f:DI 202 [ D.26003 ])
                (plus:DI (reg:DI 201 [ D.25996 ])
                    (reg/f:DI 357)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:106 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (expr_list:REG_DEAD (reg:DI 201 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 201 [ D.25996 ]))
                    (nil))))))
(insn 359 358 360 24 (set (reg:SI 358)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:106 90 {*movsi_internal}
     (nil))
(insn 360 359 361 24 (set (reg:DI 203 [ D.25996 ])
        (sign_extend:DI (reg:SI 358))) ge2fitman_preproc.cpp:106 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 358)
        (nil)))
(insn 361 360 362 24 (parallel [
            (set (reg:DI 204 [ D.25996 ])
                (ashift:DI (reg:DI 203 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:106 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 362 361 363 24 (set (reg/f:DI 359)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:106 89 {*movdi_internal}
     (nil))
(insn 363 362 364 24 (parallel [
            (set (reg/f:DI 205 [ D.25997 ])
                (plus:DI (reg:DI 204 [ D.25996 ])
                    (reg/f:DI 359)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:106 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (expr_list:REG_DEAD (reg:DI 204 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 204 [ D.25996 ]))
                    (nil))))))
(insn 364 363 365 24 (set (reg/f:DI 206 [ D.25998 ])
        (mem/f:DI (reg/f:DI 205 [ D.25997 ]) [0 *_168+0 S8 A64])) ge2fitman_preproc.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 205 [ D.25997 ])
        (nil)))
(insn 365 364 366 24 (set (reg:DI 4 si)
        (reg/f:DI 202 [ D.26003 ])) ge2fitman_preproc.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202 [ D.26003 ])
        (nil)))
(insn 366 365 367 24 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.25998 ])) ge2fitman_preproc.cpp:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.25998 ])
        (nil)))
(call_insn 367 366 368 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16baseline_correctPfP12Procpar_info") [flags 0x3]  <function_decl 0x7fe355c780d8 baseline_correct>) [0 baseline_correct S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:106 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 207 208 209 210 360 361 362 363
(code_label 368 367 369 25 17 "" [1 uses])
(note 369 368 370 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 25 (set (reg:SI 360)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:111 90 {*movsi_internal}
     (nil))
(insn 371 370 372 25 (set (reg:DI 207 [ D.25996 ])
        (sign_extend:DI (reg:SI 360))) ge2fitman_preproc.cpp:111 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 360)
        (nil)))
(insn 372 371 373 25 (set (reg:DI 361)
        (reg:DI 207 [ D.25996 ])) ge2fitman_preproc.cpp:111 89 {*movdi_internal}
     (nil))
(insn 373 372 374 25 (parallel [
            (set (reg:DI 361)
                (ashift:DI (reg:DI 361)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 374 373 375 25 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg:DI 361)
                    (reg:DI 207 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 207 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 375 374 376 25 (parallel [
            (set (reg:DI 361)
                (ashift:DI (reg:DI 361)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 376 375 377 25 (parallel [
            (set (reg:DI 361)
                (plus:DI (reg:DI 361)
                    (reg:DI 207 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 207 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 207 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 377 376 378 25 (parallel [
            (set (reg:DI 362)
                (ashift:DI (reg:DI 361)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 361)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 378 377 379 25 (set (reg:DI 361)
        (reg:DI 362)) ge2fitman_preproc.cpp:111 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 362)
        (nil)))
(insn 379 378 380 25 (set (reg:DI 208 [ D.25996 ])
        (reg:DI 361)) ge2fitman_preproc.cpp:111 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 361)
        (nil)))
(insn 380 379 381 25 (set (reg/f:DI 363)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:111 89 {*movdi_internal}
     (nil))
(insn 381 380 382 25 (parallel [
            (set (reg/f:DI 209 [ D.26002 ])
                (plus:DI (reg:DI 208 [ D.25996 ])
                    (reg/f:DI 363)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:111 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 363)
        (expr_list:REG_DEAD (reg:DI 208 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 208 [ D.25996 ]))
                    (nil))))))
(insn 382 381 383 25 (set (reg:SI 210 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 209 [ D.26002 ])
                (const_int 32 [0x20])) [0 _173->max_normalize+0 S4 A32])) ge2fitman_preproc.cpp:111 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.26002 ])
        (nil)))
(insn 383 382 384 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 210 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:111 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 210 [ D.25995 ])
        (nil)))
(jump_insn 384 383 385 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 407)
            (pc))) ge2fitman_preproc.cpp:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 407)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 211 212 213 214 215 216 217 218 219 220 221 364 365 366 367 368 369
(note 385 384 386 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 26 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:112 90 {*movsi_internal}
     (nil))
(insn 387 386 388 26 (set (reg:DI 211 [ D.25996 ])
        (sign_extend:DI (reg:SI 364))) ge2fitman_preproc.cpp:112 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 364)
        (nil)))
(insn 388 387 389 26 (parallel [
            (set (reg:DI 212 [ D.25996 ])
                (ashift:DI (reg:DI 211 [ D.25996 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 211 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 389 388 390 26 (set (reg/f:DI 365)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (nil))
(insn 390 389 391 26 (parallel [
            (set (reg/f:DI 213 [ D.26003 ])
                (plus:DI (reg:DI 212 [ D.25996 ])
                    (reg/f:DI 365)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 365)
        (expr_list:REG_DEAD (reg:DI 212 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 212 [ D.25996 ]))
                    (nil))))))
(insn 391 390 392 26 (set (reg:SI 366)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:112 90 {*movsi_internal}
     (nil))
(insn 392 391 393 26 (set (reg:DI 214 [ D.25996 ])
        (sign_extend:DI (reg:SI 366))) ge2fitman_preproc.cpp:112 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 366)
        (nil)))
(insn 393 392 394 26 (parallel [
            (set (reg:DI 215 [ D.25996 ])
                (ashift:DI (reg:DI 214 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 214 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 394 393 395 26 (set (reg/f:DI 367)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (nil))
(insn 395 394 396 26 (parallel [
            (set (reg/f:DI 216 [ D.25997 ])
                (plus:DI (reg:DI 215 [ D.25996 ])
                    (reg/f:DI 367)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 367)
        (expr_list:REG_DEAD (reg:DI 215 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                        (reg:DI 215 [ D.25996 ]))
                    (nil))))))
(insn 396 395 397 26 (set (reg/f:DI 217 [ D.25998 ])
        (mem/f:DI (reg/f:DI 216 [ D.25997 ]) [0 *_181+0 S8 A64])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.25997 ])
        (nil)))
(insn 397 396 398 26 (set (reg:SI 368)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:112 90 {*movsi_internal}
     (nil))
(insn 398 397 399 26 (set (reg:DI 218 [ D.25996 ])
        (sign_extend:DI (reg:SI 368))) ge2fitman_preproc.cpp:112 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 368)
        (nil)))
(insn 399 398 400 26 (parallel [
            (set (reg:DI 219 [ D.25996 ])
                (ashift:DI (reg:DI 218 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 218 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 400 399 401 26 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (nil))
(insn 401 400 402 26 (parallel [
            (set (reg/f:DI 220 [ D.25997 ])
                (plus:DI (reg:DI 219 [ D.25996 ])
                    (reg/f:DI 369)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:112 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 369)
        (expr_list:REG_DEAD (reg:DI 219 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 219 [ D.25996 ]))
                    (nil))))))
(insn 402 401 403 26 (set (reg/f:DI 221 [ D.25998 ])
        (mem/f:DI (reg/f:DI 220 [ D.25997 ]) [0 *_185+0 S8 A64])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.25997 ])
        (nil)))
(insn 403 402 404 26 (set (reg:DI 1 dx)
        (reg/f:DI 213 [ D.26003 ])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.26003 ])
        (nil)))
(insn 404 403 405 26 (set (reg:DI 4 si)
        (reg/f:DI 217 [ D.25998 ])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ D.25998 ])
        (nil)))
(insn 405 404 406 26 (set (reg:DI 5 di)
        (reg/f:DI 221 [ D.25998 ])) ge2fitman_preproc.cpp:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221 [ D.25998 ])
        (nil)))
(call_insn 406 405 407 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9normalizePfS_P12Procpar_info") [flags 0x3]  <function_decl 0x7fe355c51af8 normalize>) [0 normalize S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:112 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 407 406 408 27 18 "" [1 uses])
(note 408 407 409 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 657 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:30 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 657 409 658 27 (set (pc)
        (label_ref 410)) ge2fitman_preproc.cpp:30 654 {jump}
     (nil)
 -> 410)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 658 657 413)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 222 370
(code_label 413 658 414 28 2 "" [1 uses])
(note 414 413 415 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 28 (set (reg/f:DI 370)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:119 89 {*movdi_internal}
     (nil))
(insn 416 415 417 28 (set (reg:SI 222 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 370)
                (const_int 12 [0xc])) [0 preprocess_111(D)->pre_ecc+0 S4 A32])) ge2fitman_preproc.cpp:119 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 370)
        (nil)))
(insn 417 416 418 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 222 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:119 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 222 [ D.25995 ])
        (nil)))
(jump_insn 418 417 419 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 432)
            (pc))) ge2fitman_preproc.cpp:119 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 432)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 223 224 225 371 372 373 374
(note 419 418 420 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 29 (set (reg/f:DI 371)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 421 420 422 29 (parallel [
            (set (reg/f:DI 223 [ D.25997 ])
                (plus:DI (reg/f:DI 371)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:121 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 371)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 422 421 423 29 (set (reg/f:DI 224 [ D.25998 ])
        (mem/f:DI (reg/f:DI 223 [ D.25997 ]) [0 *_190+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 223 [ D.25997 ])
        (nil)))
(insn 423 422 424 29 (set (reg/f:DI 372)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 424 423 425 29 (set (reg/f:DI 225 [ D.25998 ])
        (mem/f:DI (reg/f:DI 372) [0 *out_data_31(D)+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 372)
        (nil)))
(insn 425 424 426 29 (set (reg:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 426 425 427 29 (set (reg:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (nil))
(insn 427 426 428 29 (set (reg:DI 2 cx)
        (reg:DI 373)) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 373)
        (nil)))
(insn 428 427 429 29 (set (reg:DI 1 dx)
        (reg:DI 374)) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 374)
        (nil)))
(insn 429 428 430 29 (set (reg:DI 4 si)
        (reg/f:DI 224 [ D.25998 ])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.25998 ])
        (nil)))
(insn 430 429 431 29 (set (reg:DI 5 di)
        (reg/f:DI 225 [ D.25998 ])) ge2fitman_preproc.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225 [ D.25998 ])
        (nil)))
(call_insn 431 430 432 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14ecc_correctionPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c51bd0 ecc_correction>) [0 ecc_correction S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:121 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;;              29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 226 375
(code_label 432 431 433 30 20 "" [1 uses])
(note 433 432 434 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 30 (set (reg/f:DI 375)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:125 89 {*movdi_internal}
     (nil))
(insn 435 434 436 30 (set (reg:SI 226 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 375)
                (const_int 36 [0x24])) [0 preprocess_111(D)->pre_quality+0 S4 A32])) ge2fitman_preproc.cpp:125 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 375)
        (nil)))
(insn 436 435 437 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 226 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:125 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 226 [ D.25995 ])
        (nil)))
(jump_insn 437 436 438 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 455)
            (pc))) ge2fitman_preproc.cpp:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 455)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 227 228 229 230 231 376 377 378 379 380
(note 438 437 439 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 31 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (nil))
(insn 440 439 441 31 (parallel [
            (set (reg/f:DI 227 [ D.25997 ])
                (plus:DI (reg/f:DI 376)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:127 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 376)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 441 440 442 31 (set (reg/f:DI 228 [ D.25998 ])
        (mem/f:DI (reg/f:DI 227 [ D.25997 ]) [0 *_195+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 227 [ D.25997 ])
        (nil)))
(insn 442 441 443 31 (set (reg/f:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (nil))
(insn 443 442 444 31 (parallel [
            (set (reg/f:DI 229 [ D.25997 ])
                (plus:DI (reg/f:DI 377)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:127 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 377)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 444 443 445 31 (set (reg/f:DI 230 [ D.25998 ])
        (mem/f:DI (reg/f:DI 229 [ D.25997 ]) [0 *_197+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 229 [ D.25997 ])
        (nil)))
(insn 445 444 446 31 (set (reg/f:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (nil))
(insn 446 445 447 31 (set (reg/f:DI 231 [ D.25998 ])
        (mem/f:DI (reg/f:DI 378) [0 *out_data_31(D)+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 378)
        (nil)))
(insn 447 446 448 31 (set (reg:DI 379)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (nil))
(insn 448 447 449 31 (set (reg:DI 380)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (nil))
(insn 449 448 450 31 (set (reg:DI 37 r8)
        (reg:DI 379)) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 379)
        (nil)))
(insn 450 449 451 31 (set (reg:DI 2 cx)
        (reg:DI 380)) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 380)
        (nil)))
(insn 451 450 452 31 (set (reg:DI 1 dx)
        (reg/f:DI 228 [ D.25998 ])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 228 [ D.25998 ])
        (nil)))
(insn 452 451 453 31 (set (reg:DI 4 si)
        (reg/f:DI 230 [ D.25998 ])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.25998 ])
        (nil)))
(insn 453 452 454 31 (set (reg:DI 5 di)
        (reg/f:DI 231 [ D.25998 ])) ge2fitman_preproc.cpp:127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 231 [ D.25998 ])
        (nil)))
(call_insn 454 453 455 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7qualityPfS_S_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c51ca8 quality>) [0 quality S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:127 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;;              31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 232 381
(code_label 455 454 456 32 21 "" [1 uses])
(note 456 455 457 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 32 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:131 89 {*movdi_internal}
     (nil))
(insn 458 457 459 32 (set (reg:SI 232 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 381)
                (const_int 40 [0x28])) [0 preprocess_111(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:131 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 381)
        (nil)))
(insn 459 458 460 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 232 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:131 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 232 [ D.25995 ])
        (nil)))
(jump_insn 460 459 461 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) ge2fitman_preproc.cpp:131 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 478)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 233 234 235 236 237 382 383 384 385 386
(note 461 460 462 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 33 (set (reg/f:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (nil))
(insn 463 462 464 33 (parallel [
            (set (reg/f:DI 233 [ D.25997 ])
                (plus:DI (reg/f:DI 382)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:133 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 382)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -72 [0xffffffffffffffb8])) [0 scratch_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 464 463 465 33 (set (reg/f:DI 234 [ D.25998 ])
        (mem/f:DI (reg/f:DI 233 [ D.25997 ]) [0 *_202+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 233 [ D.25997 ])
        (nil)))
(insn 465 464 466 33 (set (reg/f:DI 383)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (nil))
(insn 466 465 467 33 (parallel [
            (set (reg/f:DI 235 [ D.25997 ])
                (plus:DI (reg/f:DI 383)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:133 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 383)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 467 466 468 33 (set (reg/f:DI 236 [ D.25998 ])
        (mem/f:DI (reg/f:DI 235 [ D.25997 ]) [0 *_204+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 235 [ D.25997 ])
        (nil)))
(insn 468 467 469 33 (set (reg/f:DI 384)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (nil))
(insn 469 468 470 33 (set (reg/f:DI 237 [ D.25998 ])
        (mem/f:DI (reg/f:DI 384) [0 *out_data_31(D)+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 384)
        (nil)))
(insn 470 469 471 33 (set (reg:DI 385)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (nil))
(insn 471 470 472 33 (set (reg:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (nil))
(insn 472 471 473 33 (set (reg:DI 37 r8)
        (reg:DI 385)) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 385)
        (nil)))
(insn 473 472 474 33 (set (reg:DI 2 cx)
        (reg:DI 386)) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 386)
        (nil)))
(insn 474 473 475 33 (set (reg:DI 1 dx)
        (reg/f:DI 234 [ D.25998 ])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.25998 ])
        (nil)))
(insn 475 474 476 33 (set (reg:DI 4 si)
        (reg/f:DI 236 [ D.25998 ])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 236 [ D.25998 ])
        (nil)))
(insn 476 475 477 33 (set (reg:DI 5 di)
        (reg/f:DI 237 [ D.25998 ])) ge2fitman_preproc.cpp:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 237 [ D.25998 ])
        (nil)))
(call_insn 477 476 478 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z5queccPfS_S_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c51d80 quecc>) [0 quecc S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:133 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:SI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;;              33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 478 477 479 34 22 "" [1 uses])
(note 479 478 480 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 520 34 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:139 90 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              38 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 238 387
(code_label 520 480 481 35 25 "" [1 uses])
(note 481 520 482 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 35 (set (reg/f:DI 387)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) ge2fitman_preproc.cpp:139 89 {*movdi_internal}
     (nil))
(insn 483 482 484 35 (set (reg:SI 238 [ D.25995 ])
        (mem:SI (reg/f:DI 387) [0 *fid_27(D)+0 S4 A32])) ge2fitman_preproc.cpp:139 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 387)
        (nil)))
(insn 484 483 485 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 238 [ D.25995 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:139 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 238 [ D.25995 ])
        (nil)))
(jump_insn 485 484 486 35 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) ge2fitman_preproc.cpp:139 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 523)
;;  succ:       39
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 239 240 241 242 388 389 390 391
(note 486 485 487 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 36 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:141 90 {*movsi_internal}
     (nil))
(insn 488 487 489 36 (set (reg:DI 239 [ D.25996 ])
        (sign_extend:DI (reg:SI 388))) ge2fitman_preproc.cpp:141 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 388)
        (nil)))
(insn 489 488 490 36 (set (reg:DI 389)
        (reg:DI 239 [ D.25996 ])) ge2fitman_preproc.cpp:141 89 {*movdi_internal}
     (nil))
(insn 490 489 491 36 (parallel [
            (set (reg:DI 389)
                (ashift:DI (reg:DI 389)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 491 490 492 36 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 389)
                    (reg:DI 239 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 239 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 492 491 493 36 (parallel [
            (set (reg:DI 389)
                (ashift:DI (reg:DI 389)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 493 492 494 36 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 389)
                    (reg:DI 239 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 239 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 239 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 494 493 495 36 (parallel [
            (set (reg:DI 390)
                (ashift:DI (reg:DI 389)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 389)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 495 494 496 36 (set (reg:DI 389)
        (reg:DI 390)) ge2fitman_preproc.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 390)
        (nil)))
(insn 496 495 497 36 (set (reg:DI 240 [ D.25996 ])
        (reg:DI 389)) ge2fitman_preproc.cpp:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 389)
        (nil)))
(insn 497 496 498 36 (set (reg/f:DI 391)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:141 89 {*movdi_internal}
     (nil))
(insn 498 497 499 36 (parallel [
            (set (reg/f:DI 241 [ D.26002 ])
                (plus:DI (reg:DI 240 [ D.25996 ])
                    (reg/f:DI 391)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:141 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 391)
        (expr_list:REG_DEAD (reg:DI 240 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 240 [ D.25996 ]))
                    (nil))))))
(insn 499 498 500 36 (set (reg:SI 242 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 241 [ D.26002 ])
                (const_int 68 [0x44])) [0 _212->tilt+0 S4 A32])) ge2fitman_preproc.cpp:141 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 241 [ D.26002 ])
        (nil)))
(insn 500 499 501 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:141 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.25995 ])
        (nil)))
(jump_insn 501 500 502 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) ge2fitman_preproc.cpp:141 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 517)
;;  succ:       37 (FALLTHRU)
;;              38
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 243 244 245 246 247 248 249 392 393 394 395
(note 502 501 503 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 37 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:143 90 {*movsi_internal}
     (nil))
(insn 504 503 505 37 (set (reg:DI 243 [ D.25996 ])
        (sign_extend:DI (reg:SI 392))) ge2fitman_preproc.cpp:143 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 392)
        (nil)))
(insn 505 504 506 37 (parallel [
            (set (reg:DI 244 [ D.25996 ])
                (ashift:DI (reg:DI 243 [ D.25996 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:143 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 243 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 506 505 507 37 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:143 89 {*movdi_internal}
     (nil))
(insn 507 506 508 37 (parallel [
            (set (reg/f:DI 245 [ D.26003 ])
                (plus:DI (reg:DI 244 [ D.25996 ])
                    (reg/f:DI 393)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:143 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 393)
        (expr_list:REG_DEAD (reg:DI 244 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
                        (reg:DI 244 [ D.25996 ]))
                    (nil))))))
(insn 508 507 509 37 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:143 90 {*movsi_internal}
     (nil))
(insn 509 508 510 37 (set (reg:DI 246 [ D.25996 ])
        (sign_extend:DI (reg:SI 394))) ge2fitman_preproc.cpp:143 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 394)
        (nil)))
(insn 510 509 511 37 (parallel [
            (set (reg:DI 247 [ D.25996 ])
                (ashift:DI (reg:DI 246 [ D.25996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:143 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 246 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 511 510 512 37 (set (reg/f:DI 395)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:143 89 {*movdi_internal}
     (nil))
(insn 512 511 513 37 (parallel [
            (set (reg/f:DI 248 [ D.25997 ])
                (plus:DI (reg:DI 247 [ D.25996 ])
                    (reg/f:DI 395)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:143 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (expr_list:REG_DEAD (reg:DI 247 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                        (reg:DI 247 [ D.25996 ]))
                    (nil))))))
(insn 513 512 514 37 (set (reg/f:DI 249 [ D.25998 ])
        (mem/f:DI (reg/f:DI 248 [ D.25997 ]) [0 *_219+0 S8 A64])) ge2fitman_preproc.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 248 [ D.25997 ])
        (nil)))
(insn 514 513 515 37 (set (reg:DI 4 si)
        (reg/f:DI 245 [ D.26003 ])) ge2fitman_preproc.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.26003 ])
        (nil)))
(insn 515 514 516 37 (set (reg:DI 5 di)
        (reg/f:DI 249 [ D.25998 ])) ge2fitman_preproc.cpp:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 249 [ D.25998 ])
        (nil)))
(call_insn 516 515 517 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16baseline_correctPfP12Procpar_info") [flags 0x3]  <function_decl 0x7fe355c780d8 baseline_correct>) [0 baseline_correct S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:143 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;;              37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 517 516 518 38 24 "" [1 uses])
(note 518 517 519 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 659 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:139 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 659 519 660 38 (set (pc)
        (label_ref 520)) ge2fitman_preproc.cpp:139 654 {jump}
     (nil)
 -> 520)
;;  succ:       35 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 660 659 523)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 250 396 397
(code_label 523 660 524 39 23 "" [1 uses])
(note 524 523 525 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 39 (set (reg/f:DI 396)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:150 89 {*movdi_internal}
     (nil))
(insn 526 525 527 39 (set (reg:SF 250 [ D.25999 ])
        (mem/j:SF (plus:DI (reg/f:DI 396)
                (const_int 28 [0x1c])) [0 preprocess_111(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 396)
        (nil)))
(insn 527 526 528 39 (set (reg:SF 397)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 528 527 529 39 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 250 [ D.25999 ])
            (reg:SF 397))) ge2fitman_preproc.cpp:150 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 397)
        (nil)))
(jump_insn 529 528 635 39 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) ge2fitman_preproc.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 554)
;;  succ:       45
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  def 	 17 [flags] 398
(note 635 529 530 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 530 635 531 40 (set (reg:SF 398)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 531 530 532 40 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 250 [ D.25999 ])
            (reg:SF 398))) ge2fitman_preproc.cpp:150 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 398)
        (expr_list:REG_DEAD (reg:SF 250 [ D.25999 ])
            (nil))))
(jump_insn 532 531 533 40 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) ge2fitman_preproc.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 554)
;;  succ:       45
;;              41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 251 252 399 400
(note 533 532 534 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 41 (set (reg/f:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:150 89 {*movdi_internal}
     (nil))
(insn 535 534 536 41 (parallel [
            (set (reg/f:DI 251 [ D.26002 ])
                (plus:DI (reg/f:DI 399)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:150 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 399)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 536 535 537 41 (set (reg:SF 252 [ D.25999 ])
        (mem/j:SF (plus:DI (reg/f:DI 251 [ D.26002 ])
                (const_int 28 [0x1c])) [0 _224->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 251 [ D.26002 ])
        (nil)))
(insn 537 536 538 41 (set (reg:SF 400)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 538 537 539 41 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 252 [ D.25999 ])
            (reg:SF 400))) ge2fitman_preproc.cpp:150 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 400)
        (nil)))
(jump_insn 539 538 636 41 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) ge2fitman_preproc.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 554)
;;  succ:       45
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 252
;; lr  def 	 17 [flags] 401
(note 636 539 540 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 540 636 541 42 (set (reg:SF 401)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:150 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 541 540 542 42 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 252 [ D.25999 ])
            (reg:SF 401))) ge2fitman_preproc.cpp:150 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 401)
        (expr_list:REG_DEAD (reg:SF 252 [ D.25999 ])
            (nil))))
(jump_insn 542 541 543 42 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) ge2fitman_preproc.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 554)
;;  succ:       45
;;              43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 253 402
(note 543 542 544 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 43 (set (reg/f:DI 402)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:151 89 {*movdi_internal}
     (nil))
(insn 545 544 546 43 (set (reg:SI 253 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 402)
                (const_int 52 [0x34])) [0 preprocess_111(D)->pre_quecc_if+0 S4 A32])) ge2fitman_preproc.cpp:151 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 402)
        (nil)))
(insn 546 545 547 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 253 [ D.25995 ])
            (const_int 1 [0x1]))) ge2fitman_preproc.cpp:150 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 253 [ D.25995 ])
        (nil)))
(jump_insn 547 546 548 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) ge2fitman_preproc.cpp:150 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 554)
;;  succ:       45
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 254 255 403
(note 548 547 549 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 44 (set (reg/f:DI 403)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:151 89 {*movdi_internal}
     (nil))
(insn 550 549 551 44 (parallel [
            (set (reg/f:DI 254 [ D.26002 ])
                (plus:DI (reg/f:DI 403)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:151 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 403)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 551 550 552 44 (set (reg:SI 255 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 254 [ D.26002 ])
                (const_int 52 [0x34])) [0 _227->pre_quecc_if+0 S4 A32])) ge2fitman_preproc.cpp:151 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.26002 ])
        (nil)))
(insn 552 551 553 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 255 [ D.25995 ])
            (const_int 1 [0x1]))) ge2fitman_preproc.cpp:151 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 255 [ D.25995 ])
        (nil)))
(jump_insn 553 552 554 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 568)
            (pc))) ge2fitman_preproc.cpp:151 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 568)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40
;;              42
;;              43
;;              44 (FALLTHRU)
;;              39
;;              41
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 256 257 258 404 405 406 407
(code_label 554 553 555 45 26 "" [5 uses])
(note 555 554 556 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 556 555 557 45 (set (reg/f:DI 404)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (nil))
(insn 557 556 558 45 (parallel [
            (set (reg/f:DI 256 [ D.25997 ])
                (plus:DI (reg/f:DI 404)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:153 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 404)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 558 557 559 45 (set (reg/f:DI 257 [ D.25998 ])
        (mem/f:DI (reg/f:DI 256 [ D.25997 ]) [0 *_229+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 256 [ D.25997 ])
        (nil)))
(insn 559 558 560 45 (set (reg/f:DI 405)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (nil))
(insn 560 559 561 45 (set (reg/f:DI 258 [ D.25998 ])
        (mem/f:DI (reg/f:DI 405) [0 *out_data_31(D)+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 405)
        (nil)))
(insn 561 560 562 45 (set (reg:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (nil))
(insn 562 561 563 45 (set (reg:DI 407)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (nil))
(insn 563 562 564 45 (set (reg:DI 2 cx)
        (reg:DI 406)) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 406)
        (nil)))
(insn 564 563 565 45 (set (reg:DI 1 dx)
        (reg:DI 407)) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 407)
        (nil)))
(insn 565 564 566 45 (set (reg:DI 4 si)
        (reg/f:DI 257 [ D.25998 ])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 257 [ D.25998 ])
        (nil)))
(insn 566 565 567 45 (set (reg:DI 5 di)
        (reg/f:DI 258 [ D.25998 ])) ge2fitman_preproc.cpp:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 258 [ D.25998 ])
        (nil)))
(call_insn 567 566 568 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6filterPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c78000 filter>) [0 filter S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:153 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 568 567 569 46 27 "" [1 uses])
(note 569 568 570 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 608 46 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:158 90 {*movsi_internal}
     (nil))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;;              50 [100.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 259 408
(code_label 608 570 571 47 30 "" [1 uses])
(note 571 608 572 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 47 (set (reg/f:DI 408)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 fid+0 S8 A64])) ge2fitman_preproc.cpp:158 89 {*movdi_internal}
     (nil))
(insn 573 572 574 47 (set (reg:SI 259 [ D.25995 ])
        (mem:SI (reg/f:DI 408) [0 *fid_27(D)+0 S4 A32])) ge2fitman_preproc.cpp:158 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 408)
        (nil)))
(insn 574 573 575 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 259 [ D.25995 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:158 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 259 [ D.25995 ])
        (nil)))
(jump_insn 575 574 576 47 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 611)
            (pc))) ge2fitman_preproc.cpp:158 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 611)
;;  succ:       51
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 260 261 262 263 409 410 411 412
(note 576 575 577 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 577 576 578 48 (set (reg:SI 409)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:159 90 {*movsi_internal}
     (nil))
(insn 578 577 579 48 (set (reg:DI 260 [ D.25996 ])
        (sign_extend:DI (reg:SI 409))) ge2fitman_preproc.cpp:159 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 409)
        (nil)))
(insn 579 578 580 48 (set (reg:DI 410)
        (reg:DI 260 [ D.25996 ])) ge2fitman_preproc.cpp:159 89 {*movdi_internal}
     (nil))
(insn 580 579 581 48 (parallel [
            (set (reg:DI 410)
                (ashift:DI (reg:DI 410)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 581 580 582 48 (parallel [
            (set (reg:DI 410)
                (plus:DI (reg:DI 410)
                    (reg:DI 260 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (mult:DI (reg:DI 260 [ D.25996 ])
                (const_int 9 [0x9]))
            (nil))))
(insn 582 581 583 48 (parallel [
            (set (reg:DI 410)
                (ashift:DI (reg:DI 410)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 583 582 584 48 (parallel [
            (set (reg:DI 410)
                (plus:DI (reg:DI 410)
                    (reg:DI 260 [ D.25996 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 260 [ D.25996 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 260 [ D.25996 ])
                    (const_int 19 [0x13]))
                (nil)))))
(insn 584 583 585 48 (parallel [
            (set (reg:DI 411)
                (ashift:DI (reg:DI 410)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 410)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 585 584 586 48 (set (reg:DI 410)
        (reg:DI 411)) ge2fitman_preproc.cpp:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 411)
        (nil)))
(insn 586 585 587 48 (set (reg:DI 261 [ D.25996 ])
        (reg:DI 410)) ge2fitman_preproc.cpp:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 410)
        (nil)))
(insn 587 586 588 48 (set (reg/f:DI 412)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:159 89 {*movdi_internal}
     (nil))
(insn 588 587 589 48 (parallel [
            (set (reg/f:DI 262 [ D.26002 ])
                (plus:DI (reg:DI 261 [ D.25996 ])
                    (reg/f:DI 412)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:159 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 412)
        (expr_list:REG_DEAD (reg:DI 261 [ D.25996 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
                        (reg:DI 261 [ D.25996 ]))
                    (nil))))))
(insn 589 588 590 48 (set (reg:SI 263 [ D.25995 ])
        (mem/j:SI (plus:DI (reg/f:DI 262 [ D.26002 ])
                (const_int 24 [0x18])) [0 _237->data_zero_fill+0 S4 A32])) ge2fitman_preproc.cpp:159 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 262 [ D.26002 ])
        (nil)))
(insn 590 589 591 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 263 [ D.25995 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:159 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 263 [ D.25995 ])
        (nil)))
(jump_insn 591 590 592 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 605)
            (pc))) ge2fitman_preproc.cpp:159 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 605)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 264 265 266 413 414 415 416
(note 592 591 593 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 594 49 (set (reg/f:DI 413)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (nil))
(insn 594 593 595 49 (parallel [
            (set (reg/f:DI 264 [ D.25997 ])
                (plus:DI (reg/f:DI 413)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:160 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 413)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 595 594 596 49 (set (reg/f:DI 265 [ D.25998 ])
        (mem/f:DI (reg/f:DI 264 [ D.25997 ]) [0 *_239+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 264 [ D.25997 ])
        (nil)))
(insn 596 595 597 49 (set (reg/f:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 out_data+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (nil))
(insn 597 596 598 49 (set (reg/f:DI 266 [ D.25998 ])
        (mem/f:DI (reg/f:DI 414) [0 *out_data_31(D)+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 414)
        (nil)))
(insn 598 597 599 49 (set (reg:DI 415)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (nil))
(insn 599 598 600 49 (set (reg:DI 416)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (nil))
(insn 600 599 601 49 (set (reg:DI 2 cx)
        (reg:DI 415)) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 415)
        (nil)))
(insn 601 600 602 49 (set (reg:DI 1 dx)
        (reg:DI 416)) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 416)
        (nil)))
(insn 602 601 603 49 (set (reg:DI 4 si)
        (reg/f:DI 265 [ D.25998 ])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 265 [ D.25998 ])
        (nil)))
(insn 603 602 604 49 (set (reg:DI 5 di)
        (reg/f:DI 266 [ D.25998 ])) ge2fitman_preproc.cpp:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 266 [ D.25998 ])
        (nil)))
(call_insn 604 603 605 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z9zero_fillPfS_P12Procpar_infoP10Preprocess") [flags 0x3]  <function_decl 0x7fe355c51e58 zero_fill>) [0 zero_fill S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:160 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;;              49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 605 604 606 50 29 "" [1 uses])
(note 606 605 607 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 661 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:158 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 661 607 662 50 (set (pc)
        (label_ref 608)) ge2fitman_preproc.cpp:158 654 {jump}
     (nil)
 -> 608)
;;  succ:       47 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 662 661 611)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 267 268
(code_label 611 662 612 51 28 "" [1 uses])
(note 612 611 613 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 616 51 (set (reg:SI 267 [ D.25995 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:164 90 {*movsi_internal}
     (nil))
(insn 616 613 620 51 (set (reg:SI 268 [ <retval> ])
        (reg:SI 267 [ D.25995 ])) ge2fitman_preproc.cpp:164 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 267 [ D.25995 ])
        (nil)))
(insn 620 616 621 51 (set (reg/i:SI 0 ax)
        (reg:SI 268 [ <retval> ])) ge2fitman_preproc.cpp:165 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 268 [ <retval> ])
        (nil)))
(insn 621 620 0 51 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:165 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int scale(float*, Procpar_info*, Preprocess*) (_Z5scalePfP12Procpar_infoP10Preprocess, funcdef_no=1022, decl_uid=24414, cgraph_uid=227, symbol_order=228)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 22 (    1)
Building IRA IR
verify found no changes in insn with uid = 156.
verify found no changes in insn with uid = 294.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r318: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r317,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r316,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r315,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a22 (r313,l0) best SSE_REGS, allocno SSE_REGS
    r312: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a27 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r310,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a57 (r303,l0) best SSE_REGS, allocno SSE_REGS
    r302: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r302,l0) best SSE_REGS, allocno SSE_REGS
    r301: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a64 (r301,l0) best SSE_REGS, allocno SSE_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a72 (r298,l0) best SSE_REGS, allocno SSE_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r296,l0) best SSE_REGS, allocno SSE_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a94 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r288,l0) best SSE_REGS, allocno SSE_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a106 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r280,l0) best SSE_REGS, allocno SSE_REGS
    r279: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a127 (r279,l0) best SSE_REGS, allocno SSE_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a158 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a161 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a168 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a180 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a182 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a189 (r256,l0) best SSE_REGS, allocno SSE_REGS
    r255: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r255,l0) best SSE_REGS, allocno SSE_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a223 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a224 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a231 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r240,l0) best AREG, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a20 (r226,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r225: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a21 (r225,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a23 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r222,l0) best SSE_REGS, allocno SSE_REGS
    r221: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r221,l0) best SSE_REGS, allocno SSE_REGS
    r220: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a28 (r220,l0) best SSE_REGS, allocno SSE_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r199,l0) best SSE_REGS, allocno SSE_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a60 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a73 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a76 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a93 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a95 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a105 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a107 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a119 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a120 (r159,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r158: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a121 (r158,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r157: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r157,l0) best SSE_REGS, allocno SSE_REGS
    r156: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r156,l0) best SSE_REGS, allocno SSE_REGS
    r155: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a125 (r155,l0) best SSE_REGS, allocno SSE_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a126 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a128 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a129 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a153 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a157 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a159 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a160 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a169 (r125,l0) best SSE_REGS, allocno SSE_REGS
    r124: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a170 (r124,l0) best SSE_REGS, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a191 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a199 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a200 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a201 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a215 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a216 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a217 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a221 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a222 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a225 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a226 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r238,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r318,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a5(r237,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r317,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r316,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r315,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a16(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r227,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a20(r226,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a21(r225,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a22(r313,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a23(r224,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a24(r223,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a25(r222,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r221,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r312,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a28(r220,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a29(r214,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a30(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a34(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r310,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a39(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a40(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a41(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a47(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a48(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a49(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a50(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a51(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a53(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a55(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a56(r199,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a57(r303,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a58(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a59(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a60(r196,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a61(r302,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a62(r195,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a63(r194,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a64(r301,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a65(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a69(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a70(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a71(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r298,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a73(r188,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a74(r187,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a75(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a76(r186,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a77(r296,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a78(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a80(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a81(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a82(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r293,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a85(r181,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a86(r292,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a87(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a90(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a91(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r176,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a94(r289,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a95(r175,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a96(r174,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a97(r288,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a98(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a99(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a100(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a101(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a102(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a105(r169,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a106(r285,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a107(r168,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a108(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a109(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a110(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a111(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a112(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a116(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a119(r160,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a120(r159,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a121(r158,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a122(r280,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a123(r157,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r156,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a125(r155,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a126(r154,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a127(r279,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a128(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a129(r148,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a130(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a131(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a132(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a133(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a139(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a140(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a141(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a142(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a147(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a148(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a150(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a151(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a152(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a153(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a154(r270,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a155(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a156(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a157(r132,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a158(r269,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a159(r131,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a160(r130,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a161(r268,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a162(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a163(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a165(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a166(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a167(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a168(r265,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a169(r125,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a170(r124,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a171(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a172(r123,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a173(r263,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a174(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a175(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a176(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a177(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a179(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a180(r260,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a181(r118,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a182(r259,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a183(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a184(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a185(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a186(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a189(r256,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a190(r113,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a191(r112,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a192(r255,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a193(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a196(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a197(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a198(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a199(r108,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a200(r107,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a201(r106,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a202(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a203(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a204(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a205(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a206(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a207(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a208(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a209(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a211(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a212(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a213(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a215(r97,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a216(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a217(r95,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a218(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a219(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a220(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a221(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a222(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a223(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a224(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a225(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a226(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a227(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a228(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a229(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a230(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a231(r241,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 337(l0): point = 0
   Insn 336(l0): point = 2
   Insn 332(l0): point = 4
   Insn 329(l0): point = 6
   Insn 17(l0): point = 9
   Insn 16(l0): point = 11
   Insn 15(l0): point = 13
   Insn 14(l0): point = 15
   Insn 13(l0): point = 17
   Insn 357(l0): point = 20
   Insn 323(l0): point = 22
   Insn 318(l0): point = 25
   Insn 317(l0): point = 27
   Insn 316(l0): point = 29
   Insn 315(l0): point = 31
   Insn 314(l0): point = 33
   Insn 313(l0): point = 35
   Insn 312(l0): point = 37
   Insn 311(l0): point = 39
   Insn 310(l0): point = 41
   Insn 309(l0): point = 43
   Insn 308(l0): point = 45
   Insn 307(l0): point = 47
   Insn 306(l0): point = 49
   Insn 305(l0): point = 51
   Insn 304(l0): point = 53
   Insn 303(l0): point = 55
   Insn 302(l0): point = 57
   Insn 195(l0): point = 60
   Insn 194(l0): point = 62
   Insn 193(l0): point = 64
   Insn 192(l0): point = 66
   Insn 191(l0): point = 68
   Insn 190(l0): point = 70
   Insn 189(l0): point = 72
   Insn 188(l0): point = 74
   Insn 187(l0): point = 76
   Insn 186(l0): point = 78
   Insn 185(l0): point = 80
   Insn 184(l0): point = 82
   Insn 183(l0): point = 84
   Insn 178(l0): point = 87
   Insn 177(l0): point = 89
   Insn 176(l0): point = 91
   Insn 175(l0): point = 93
   Insn 174(l0): point = 95
   Insn 173(l0): point = 97
   Insn 172(l0): point = 99
   Insn 171(l0): point = 101
   Insn 170(l0): point = 103
   Insn 169(l0): point = 105
   Insn 168(l0): point = 107
   Insn 167(l0): point = 109
   Insn 166(l0): point = 111
   Insn 165(l0): point = 113
   Insn 164(l0): point = 115
   Insn 62(l0): point = 118
   Insn 61(l0): point = 120
   Insn 60(l0): point = 122
   Insn 59(l0): point = 124
   Insn 58(l0): point = 126
   Insn 57(l0): point = 128
   Insn 56(l0): point = 130
   Insn 55(l0): point = 132
   Insn 54(l0): point = 134
   Insn 53(l0): point = 136
   Insn 52(l0): point = 138
   Insn 51(l0): point = 140
   Insn 50(l0): point = 142
   Insn 49(l0): point = 144
   Insn 48(l0): point = 146
   Insn 47(l0): point = 148
   Insn 46(l0): point = 150
   Insn 45(l0): point = 152
   Insn 44(l0): point = 154
   Insn 43(l0): point = 156
   Insn 42(l0): point = 158
   Insn 41(l0): point = 160
   Insn 40(l0): point = 162
   Insn 39(l0): point = 164
   Insn 38(l0): point = 166
   Insn 37(l0): point = 168
   Insn 36(l0): point = 170
   Insn 35(l0): point = 172
   Insn 34(l0): point = 174
   Insn 33(l0): point = 176
   Insn 32(l0): point = 178
   Insn 31(l0): point = 180
   Insn 30(l0): point = 182
   Insn 29(l0): point = 184
   Insn 28(l0): point = 186
   Insn 27(l0): point = 188
   Insn 26(l0): point = 190
   Insn 25(l0): point = 192
   Insn 24(l0): point = 194
   Insn 23(l0): point = 196
   Insn 22(l0): point = 198
   Insn 21(l0): point = 200
   Insn 20(l0): point = 202
   Insn 19(l0): point = 204
   Insn 78(l0): point = 207
   Insn 77(l0): point = 209
   Insn 76(l0): point = 211
   Insn 353(l0): point = 214
   Insn 159(l0): point = 216
   Insn 158(l0): point = 218
   Insn 157(l0): point = 220
   Insn 156(l0): point = 222
   Insn 155(l0): point = 224
   Insn 154(l0): point = 226
   Insn 153(l0): point = 228
   Insn 152(l0): point = 230
   Insn 151(l0): point = 232
   Insn 150(l0): point = 234
   Insn 149(l0): point = 236
   Insn 148(l0): point = 238
   Insn 147(l0): point = 240
   Insn 146(l0): point = 242
   Insn 145(l0): point = 244
   Insn 144(l0): point = 246
   Insn 143(l0): point = 248
   Insn 142(l0): point = 250
   Insn 141(l0): point = 252
   Insn 140(l0): point = 254
   Insn 139(l0): point = 256
   Insn 138(l0): point = 258
   Insn 137(l0): point = 260
   Insn 136(l0): point = 262
   Insn 135(l0): point = 264
   Insn 134(l0): point = 266
   Insn 133(l0): point = 268
   Insn 132(l0): point = 270
   Insn 131(l0): point = 272
   Insn 130(l0): point = 274
   Insn 129(l0): point = 276
   Insn 127(l0): point = 279
   Insn 126(l0): point = 281
   Insn 125(l0): point = 283
   Insn 124(l0): point = 285
   Insn 123(l0): point = 287
   Insn 122(l0): point = 289
   Insn 121(l0): point = 291
   Insn 119(l0): point = 294
   Insn 118(l0): point = 296
   Insn 117(l0): point = 298
   Insn 116(l0): point = 300
   Insn 115(l0): point = 302
   Insn 114(l0): point = 304
   Insn 113(l0): point = 306
   Insn 111(l0): point = 309
   Insn 110(l0): point = 311
   Insn 109(l0): point = 313
   Insn 108(l0): point = 315
   Insn 107(l0): point = 317
   Insn 106(l0): point = 319
   Insn 105(l0): point = 321
   Insn 104(l0): point = 323
   Insn 103(l0): point = 325
   Insn 102(l0): point = 327
   Insn 101(l0): point = 329
   Insn 100(l0): point = 331
   Insn 99(l0): point = 333
   Insn 98(l0): point = 335
   Insn 97(l0): point = 337
   Insn 96(l0): point = 339
   Insn 95(l0): point = 341
   Insn 94(l0): point = 343
   Insn 93(l0): point = 345
   Insn 92(l0): point = 347
   Insn 91(l0): point = 349
   Insn 90(l0): point = 351
   Insn 89(l0): point = 353
   Insn 88(l0): point = 355
   Insn 87(l0): point = 357
   Insn 86(l0): point = 359
   Insn 85(l0): point = 361
   Insn 84(l0): point = 363
   Insn 83(l0): point = 365
   Insn 75(l0): point = 368
   Insn 74(l0): point = 370
   Insn 73(l0): point = 372
   Insn 72(l0): point = 374
   Insn 71(l0): point = 376
   Insn 70(l0): point = 378
   Insn 69(l0): point = 380
   Insn 68(l0): point = 382
   Insn 67(l0): point = 384
   Insn 212(l0): point = 387
   Insn 211(l0): point = 389
   Insn 210(l0): point = 391
   Insn 355(l0): point = 394
   Insn 297(l0): point = 396
   Insn 296(l0): point = 398
   Insn 295(l0): point = 400
   Insn 294(l0): point = 402
   Insn 293(l0): point = 404
   Insn 292(l0): point = 406
   Insn 291(l0): point = 408
   Insn 290(l0): point = 410
   Insn 289(l0): point = 412
   Insn 288(l0): point = 414
   Insn 287(l0): point = 416
   Insn 286(l0): point = 418
   Insn 285(l0): point = 420
   Insn 284(l0): point = 422
   Insn 283(l0): point = 424
   Insn 282(l0): point = 426
   Insn 281(l0): point = 428
   Insn 280(l0): point = 430
   Insn 279(l0): point = 432
   Insn 278(l0): point = 434
   Insn 277(l0): point = 436
   Insn 276(l0): point = 438
   Insn 275(l0): point = 440
   Insn 274(l0): point = 442
   Insn 273(l0): point = 444
   Insn 272(l0): point = 446
   Insn 271(l0): point = 448
   Insn 270(l0): point = 450
   Insn 269(l0): point = 452
   Insn 268(l0): point = 454
   Insn 267(l0): point = 456
   Insn 266(l0): point = 458
   Insn 265(l0): point = 460
   Insn 264(l0): point = 462
   Insn 262(l0): point = 465
   Insn 261(l0): point = 467
   Insn 260(l0): point = 469
   Insn 259(l0): point = 471
   Insn 258(l0): point = 473
   Insn 257(l0): point = 475
   Insn 256(l0): point = 477
   Insn 254(l0): point = 480
   Insn 253(l0): point = 482
   Insn 252(l0): point = 484
   Insn 251(l0): point = 486
   Insn 250(l0): point = 488
   Insn 249(l0): point = 490
   Insn 248(l0): point = 492
   Insn 246(l0): point = 495
   Insn 245(l0): point = 497
   Insn 244(l0): point = 499
   Insn 243(l0): point = 501
   Insn 242(l0): point = 503
   Insn 241(l0): point = 505
   Insn 240(l0): point = 507
   Insn 239(l0): point = 509
   Insn 238(l0): point = 511
   Insn 237(l0): point = 513
   Insn 236(l0): point = 515
   Insn 235(l0): point = 517
   Insn 234(l0): point = 519
   Insn 233(l0): point = 521
   Insn 232(l0): point = 523
   Insn 231(l0): point = 525
   Insn 230(l0): point = 527
   Insn 229(l0): point = 529
   Insn 228(l0): point = 531
   Insn 227(l0): point = 533
   Insn 226(l0): point = 535
   Insn 225(l0): point = 537
   Insn 224(l0): point = 539
   Insn 223(l0): point = 541
   Insn 222(l0): point = 543
   Insn 221(l0): point = 545
   Insn 220(l0): point = 547
   Insn 219(l0): point = 549
   Insn 218(l0): point = 551
   Insn 217(l0): point = 553
   Insn 209(l0): point = 556
   Insn 208(l0): point = 558
   Insn 207(l0): point = 560
   Insn 206(l0): point = 562
   Insn 205(l0): point = 564
   Insn 204(l0): point = 566
   Insn 203(l0): point = 568
   Insn 202(l0): point = 570
   Insn 201(l0): point = 572
   Insn 200(l0): point = 574
   Insn 11(l0): point = 577
   Insn 10(l0): point = 579
   Insn 9(l0): point = 581
   Insn 8(l0): point = 583
   Insn 4(l0): point = 585
   Insn 3(l0): point = 587
   Insn 2(l0): point = 589
 a0(r240): [3..4]
 a1(r239): [5..6]
 a2(r231): [26..47]
 a3(r238): [26..27]
 a4(r318): [28..29]
 a5(r237): [28..31]
 a6(r236): [32..33]
 a7(r317): [34..35]
 a8(r235): [34..37]
 a9(r234): [38..39]
 a10(r233): [40..41]
 a11(r232): [42..43]
 a12(r316): [44..45]
 a13(r315): [48..49]
 a14(r230): [48..51]
 a15(r229): [52..53]
 a16(r228): [54..55]
 a17(r314): [56..57]
 a18(r208): [397..452]
 a19(r227): [397..398]
 a20(r226): [399..400]
 a21(r225): [405..406]
 a22(r313): [407..408]
 a23(r224): [407..410]
 a24(r223): [411..412]
 a25(r222): [413..414]
 a26(r221): [413..418]
 a27(r312): [415..416]
 a28(r220): [419..420]
 a29(r214): [419..436]
 a30(r219): [421..422]
 a31(r311): [423..424]
 a32(r218): [423..426]
 a33(r217): [427..428]
 a34(r216): [429..430]
 a35(r215): [431..432]
 a36(r310): [433..434]
 a37(r213): [437..438]
 a38(r309): [439..440]
 a39(r212): [439..442]
 a40(r211): [443..444]
 a41(r210): [445..446]
 a42(r209): [447..448]
 a43(r308): [449..450]
 a44(r307): [453..454]
 a45(r207): [453..456]
 a46(r206): [457..458]
 a47(r205): [459..460]
 a48(r306): [461..462]
 a49(r204): [468..469]
 a50(r202): [468..475]
 a51(r203): [470..471]
 a52(r305): [472..473]
 a53(r304): [476..477]
 a54(r201): [483..484]
 a55(r200): [485..486]
 a56(r199): [489..492]
 a57(r303): [489..490]
 a58(r198): [498..499]
 a59(r197): [500..501]
 a60(r196): [504..507]
 a61(r302): [504..505]
 a62(r195): [508..509]
 a63(r194): [510..513]
 a64(r301): [510..511]
 a65(r193): [514..515]
 a66(r300): [516..517]
 a67(r192): [516..519]
 a68(r191): [520..521]
 a69(r190): [522..523]
 a70(r189): [524..525]
 a71(r299): [526..527]
 a72(r298): [530..531]
 a73(r188): [532..533]
 a74(r187): [532..537]
 a75(r297): [534..535]
 a76(r186): [538..541]
 a77(r296): [538..539]
 a78(r185): [542..543]
 a79(r295): [544..545]
 a80(r184): [544..547]
 a81(r183): [548..549]
 a82(r182): [550..551]
 a83(r294): [552..553]
 a84(r293): [390..391]
 a85(r181): [556..562] [390..393]
 a86(r292): [559..560]
 a87(r180): [563..564]
 a88(r291): [565..566]
 a89(r179): [565..568]
 a90(r178): [569..570]
 a91(r177): [571..572]
 a92(r290): [573..574]
 a93(r176): [63..66]
 a94(r289): [63..64]
 a95(r175): [67..68]
 a96(r174): [69..72]
 a97(r288): [69..70]
 a98(r173): [73..74]
 a99(r287): [75..76]
 a100(r172): [75..78]
 a101(r171): [79..80]
 a102(r170): [81..82]
 a103(r286): [83..84]
 a104(r163): [88..107]
 a105(r169): [88..89]
 a106(r285): [90..91]
 a107(r168): [90..93]
 a108(r167): [94..95]
 a109(r284): [96..97]
 a110(r166): [96..99]
 a111(r165): [100..101]
 a112(r164): [102..103]
 a113(r283): [104..105]
 a114(r282): [108..109]
 a115(r162): [108..111]
 a116(r161): [112..113]
 a117(r281): [114..115]
 a118(r143): [217..268]
 a119(r160): [217..218]
 a120(r159): [219..220]
 a121(r158): [225..226]
 a122(r280): [227..228]
 a123(r157): [227..230]
 a124(r156): [231..232]
 a125(r155): [233..234]
 a126(r154): [233..238]
 a127(r279): [235..236]
 a128(r153): [239..240]
 a129(r148): [239..254]
 a130(r152): [241..242]
 a131(r278): [243..244]
 a132(r151): [243..246]
 a133(r150): [247..248]
 a134(r149): [249..250]
 a135(r277): [251..252]
 a136(r147): [255..256]
 a137(r276): [257..258]
 a138(r146): [257..260]
 a139(r145): [261..262]
 a140(r144): [263..264]
 a141(r275): [265..266]
 a142(r274): [269..270]
 a143(r142): [269..272]
 a144(r141): [273..274]
 a145(r273): [275..276]
 a146(r140): [282..283]
 a147(r138): [282..289]
 a148(r139): [284..285]
 a149(r272): [286..287]
 a150(r271): [290..291]
 a151(r137): [297..298]
 a152(r136): [299..300]
 a153(r135): [303..306]
 a154(r270): [303..304]
 a155(r134): [312..313]
 a156(r133): [314..315]
 a157(r132): [318..321]
 a158(r269): [318..319]
 a159(r131): [322..323]
 a160(r130): [324..327]
 a161(r268): [324..325]
 a162(r129): [328..329]
 a163(r267): [330..331]
 a164(r128): [330..333]
 a165(r127): [334..335]
 a166(r126): [336..337]
 a167(r266): [338..339]
 a168(r265): [342..343]
 a169(r125): [344..345]
 a170(r124): [344..349]
 a171(r264): [346..347]
 a172(r123): [350..353]
 a173(r263): [350..351]
 a174(r122): [354..355]
 a175(r262): [356..357]
 a176(r121): [356..359]
 a177(r120): [360..361]
 a178(r119): [362..363]
 a179(r261): [364..365]
 a180(r260): [210..211]
 a181(r118): [368..374] [210..213]
 a182(r259): [371..372]
 a183(r117): [375..376]
 a184(r258): [377..378]
 a185(r116): [377..380]
 a186(r115): [381..382]
 a187(r257): [383..384]
 a188(r114): [121..124]
 a189(r256): [121..122]
 a190(r113): [125..126]
 a191(r112): [127..130]
 a192(r255): [127..128]
 a193(r111): [131..132]
 a194(r254): [133..134]
 a195(r110): [133..136]
 a196(r109): [137..138]
 a197(r253): [139..140]
 a198(r101): [143..164]
 a199(r108): [143..144]
 a200(r107): [145..146]
 a201(r106): [145..150]
 a202(r252): [147..148]
 a203(r105): [151..152]
 a204(r251): [153..154]
 a205(r104): [153..156]
 a206(r103): [157..158]
 a207(r102): [159..160]
 a208(r250): [161..162]
 a209(r249): [165..166]
 a210(r100): [165..168]
 a211(r99): [169..170]
 a212(r98): [171..172]
 a213(r248): [173..174]
 a214(r91): [177..196]
 a215(r97): [177..178]
 a216(r96): [179..180]
 a217(r95): [179..184]
 a218(r247): [181..182]
 a219(r94): [185..186]
 a220(r246): [187..188]
 a221(r93): [187..190]
 a222(r92): [191..192]
 a223(r245): [193..194]
 a224(r244): [197..198]
 a225(r90): [197..200]
 a226(r89): [201..202]
 a227(r243): [203..204]
 a228(r88): [12..13]
 a229(r87): [14..15]
 a230(r242): [16..17]
 a231(r241): [580..581]
Compressing live ranges: from 592 to 352 - 59%
Ranges after the compression:
 a0(r240): [0..1]
 a1(r239): [2..3]
 a2(r231): [10..25]
 a3(r238): [10..11]
 a4(r318): [12..13]
 a5(r237): [12..13]
 a6(r236): [14..15]
 a7(r317): [16..17]
 a8(r235): [16..17]
 a9(r234): [18..19]
 a10(r233): [20..21]
 a11(r232): [22..23]
 a12(r316): [24..25]
 a13(r315): [26..27]
 a14(r230): [26..27]
 a15(r229): [28..29]
 a16(r228): [30..31]
 a17(r314): [32..33]
 a18(r208): [236..275]
 a19(r227): [236..237]
 a20(r226): [238..239]
 a21(r225): [240..241]
 a22(r313): [242..243]
 a23(r224): [242..243]
 a24(r223): [244..245]
 a25(r222): [246..247]
 a26(r221): [246..249]
 a27(r312): [248..249]
 a28(r220): [250..251]
 a29(r214): [250..263]
 a30(r219): [252..253]
 a31(r311): [254..255]
 a32(r218): [254..255]
 a33(r217): [256..257]
 a34(r216): [258..259]
 a35(r215): [260..261]
 a36(r310): [262..263]
 a37(r213): [264..265]
 a38(r309): [266..267]
 a39(r212): [266..267]
 a40(r211): [268..269]
 a41(r210): [270..271]
 a42(r209): [272..273]
 a43(r308): [274..275]
 a44(r307): [276..277]
 a45(r207): [276..277]
 a46(r206): [278..279]
 a47(r205): [280..281]
 a48(r306): [282..283]
 a49(r204): [284..285]
 a50(r202): [284..289]
 a51(r203): [286..287]
 a52(r305): [288..289]
 a53(r304): [290..291]
 a54(r201): [292..293]
 a55(r200): [294..295]
 a56(r199): [296..297]
 a57(r303): [296..297]
 a58(r198): [298..299]
 a59(r197): [300..301]
 a60(r196): [302..303]
 a61(r302): [302..303]
 a62(r195): [304..305]
 a63(r194): [306..307]
 a64(r301): [306..307]
 a65(r193): [308..309]
 a66(r300): [310..311]
 a67(r192): [310..311]
 a68(r191): [312..313]
 a69(r190): [314..315]
 a70(r189): [316..317]
 a71(r299): [318..319]
 a72(r298): [320..321]
 a73(r188): [322..323]
 a74(r187): [322..325]
 a75(r297): [324..325]
 a76(r186): [326..327]
 a77(r296): [326..327]
 a78(r185): [328..329]
 a79(r295): [330..331]
 a80(r184): [330..331]
 a81(r183): [332..333]
 a82(r182): [334..335]
 a83(r294): [336..337]
 a84(r293): [234..235]
 a85(r181): [338..339] [234..235]
 a86(r292): [338..339]
 a87(r180): [340..341]
 a88(r291): [342..343]
 a89(r179): [342..343]
 a90(r178): [344..345]
 a91(r177): [346..347]
 a92(r290): [348..349]
 a93(r176): [34..35]
 a94(r289): [34..35]
 a95(r175): [36..37]
 a96(r174): [38..39]
 a97(r288): [38..39]
 a98(r173): [40..41]
 a99(r287): [42..43]
 a100(r172): [42..43]
 a101(r171): [44..45]
 a102(r170): [46..47]
 a103(r286): [48..49]
 a104(r163): [50..63]
 a105(r169): [50..51]
 a106(r285): [52..53]
 a107(r168): [52..53]
 a108(r167): [54..55]
 a109(r284): [56..57]
 a110(r166): [56..57]
 a111(r165): [58..59]
 a112(r164): [60..61]
 a113(r283): [62..63]
 a114(r282): [64..65]
 a115(r162): [64..65]
 a116(r161): [66..67]
 a117(r281): [68..69]
 a118(r143): [130..165]
 a119(r160): [130..131]
 a120(r159): [132..133]
 a121(r158): [134..135]
 a122(r280): [136..137]
 a123(r157): [136..137]
 a124(r156): [138..139]
 a125(r155): [140..141]
 a126(r154): [140..143]
 a127(r279): [142..143]
 a128(r153): [144..145]
 a129(r148): [144..155]
 a130(r152): [146..147]
 a131(r278): [148..149]
 a132(r151): [148..149]
 a133(r150): [150..151]
 a134(r149): [152..153]
 a135(r277): [154..155]
 a136(r147): [156..157]
 a137(r276): [158..159]
 a138(r146): [158..159]
 a139(r145): [160..161]
 a140(r144): [162..163]
 a141(r275): [164..165]
 a142(r274): [166..167]
 a143(r142): [166..167]
 a144(r141): [168..169]
 a145(r273): [170..171]
 a146(r140): [172..173]
 a147(r138): [172..177]
 a148(r139): [174..175]
 a149(r272): [176..177]
 a150(r271): [178..179]
 a151(r137): [180..181]
 a152(r136): [182..183]
 a153(r135): [184..185]
 a154(r270): [184..185]
 a155(r134): [186..187]
 a156(r133): [188..189]
 a157(r132): [190..191]
 a158(r269): [190..191]
 a159(r131): [192..193]
 a160(r130): [194..195]
 a161(r268): [194..195]
 a162(r129): [196..197]
 a163(r267): [198..199]
 a164(r128): [198..199]
 a165(r127): [200..201]
 a166(r126): [202..203]
 a167(r266): [204..205]
 a168(r265): [206..207]
 a169(r125): [208..209]
 a170(r124): [208..211]
 a171(r264): [210..211]
 a172(r123): [212..213]
 a173(r263): [212..213]
 a174(r122): [214..215]
 a175(r262): [216..217]
 a176(r121): [216..217]
 a177(r120): [218..219]
 a178(r119): [220..221]
 a179(r261): [222..223]
 a180(r260): [128..129]
 a181(r118): [224..225] [128..129]
 a182(r259): [224..225]
 a183(r117): [226..227]
 a184(r258): [228..229]
 a185(r116): [228..229]
 a186(r115): [230..231]
 a187(r257): [232..233]
 a188(r114): [70..71]
 a189(r256): [70..71]
 a190(r113): [72..73]
 a191(r112): [74..75]
 a192(r255): [74..75]
 a193(r111): [76..77]
 a194(r254): [78..79]
 a195(r110): [78..79]
 a196(r109): [80..81]
 a197(r253): [82..83]
 a198(r101): [84..99]
 a199(r108): [84..85]
 a200(r107): [86..87]
 a201(r106): [86..89]
 a202(r252): [88..89]
 a203(r105): [90..91]
 a204(r251): [92..93]
 a205(r104): [92..93]
 a206(r103): [94..95]
 a207(r102): [96..97]
 a208(r250): [98..99]
 a209(r249): [100..101]
 a210(r100): [100..101]
 a211(r99): [102..103]
 a212(r98): [104..105]
 a213(r248): [106..107]
 a214(r91): [108..121]
 a215(r97): [108..109]
 a216(r96): [110..111]
 a217(r95): [110..113]
 a218(r247): [112..113]
 a219(r94): [114..115]
 a220(r246): [116..117]
 a221(r93): [116..117]
 a222(r92): [118..119]
 a223(r245): [120..121]
 a224(r244): [122..123]
 a225(r90): [122..123]
 a226(r89): [124..125]
 a227(r243): [126..127]
 a228(r88): [4..5]
 a229(r87): [6..7]
 a230(r242): [8..9]
 a231(r241): [350..351]
  regions=1, blocks=22, points=352
    allocnos=232 (big 0), copies=0, conflicts=0, ranges=234
Disposition:
  229:r87  l0     0  228:r88  l0     0  226:r89  l0     0  225:r90  l0     1
  214:r91  l0     1  222:r92  l0     0  221:r93  l0     2  219:r94  l0     0
  217:r95  l0    22  216:r96  l0    21  215:r97  l0    21  212:r98  l0     0
  211:r99  l0     0  210:r100 l0     1  198:r101 l0     1  207:r102 l0     0
  206:r103 l0     0  205:r104 l0     2  203:r105 l0     0  201:r106 l0    22
  200:r107 l0    21  199:r108 l0    21  196:r109 l0     0  195:r110 l0     1
  193:r111 l0     0  191:r112 l0    22  190:r113 l0    21  188:r114 l0    21
  186:r115 l0     0  185:r116 l0     1  183:r117 l0     0  181:r118 l0    21
  178:r119 l0     0  177:r120 l0     0  176:r121 l0     1  174:r122 l0     0
  172:r123 l0    22  170:r124 l0    21  169:r125 l0    22  166:r126 l0     0
  165:r127 l0     0  164:r128 l0     1  162:r129 l0     0  160:r130 l0    22
  159:r131 l0    21  157:r132 l0    21  156:r133 l0     0  155:r134 l0     0
  153:r135 l0    21  152:r136 l0     0  151:r137 l0     0  147:r138 l0     1
  148:r139 l0     0  146:r140 l0     0  144:r141 l0     0  143:r142 l0     1
  118:r143 l0     3  140:r144 l0     0  139:r145 l0     0  138:r146 l0     1
  136:r147 l0     0  129:r148 l0    22  134:r149 l0     0  133:r150 l0     0
  132:r151 l0     1  130:r152 l0     0  128:r153 l0    21  126:r154 l0    22
  125:r155 l0    21  124:r156 l0    21  123:r157 l0    21  121:r158 l0    21
  120:r159 l0    21  119:r160 l0    21  116:r161 l0     0  115:r162 l0     1
  104:r163 l0     0  112:r164 l0     1  111:r165 l0     1  110:r166 l0     2
  108:r167 l0     1  107:r168 l0    22  105:r169 l0    21  102:r170 l0     0
  101:r171 l0     0  100:r172 l0     1   98:r173 l0     0   96:r174 l0    22
   95:r175 l0    21   93:r176 l0    21   91:r177 l0     0   90:r178 l0     0
   89:r179 l0     1   87:r180 l0     0   85:r181 l0    21   82:r182 l0     0
   81:r183 l0     0   80:r184 l0     1   78:r185 l0     0   76:r186 l0    22
   74:r187 l0    21   73:r188 l0    22   70:r189 l0     0   69:r190 l0     0
   68:r191 l0     0   67:r192 l0     1   65:r193 l0     0   63:r194 l0    22
   62:r195 l0    21   60:r196 l0    21   59:r197 l0     0   58:r198 l0     0
   56:r199 l0    21   55:r200 l0     0   54:r201 l0     0   50:r202 l0     1
   51:r203 l0     0   49:r204 l0     0   47:r205 l0     0   46:r206 l0     0
   45:r207 l0     1   18:r208 l0     3   42:r209 l0     0   41:r210 l0     0
   40:r211 l0     0   39:r212 l0     1   37:r213 l0     0   29:r214 l0    22
   35:r215 l0     0   34:r216 l0     0   33:r217 l0     0   32:r218 l0     1
   30:r219 l0     0   28:r220 l0    21   26:r221 l0    22   25:r222 l0    21
   24:r223 l0    21   23:r224 l0    21   21:r225 l0    21   20:r226 l0    21
   19:r227 l0    21   16:r228 l0     0   15:r229 l0     0   14:r230 l0     1
    2:r231 l0     0   11:r232 l0     1   10:r233 l0     1    9:r234 l0     1
    8:r235 l0     2    6:r236 l0     1    5:r237 l0    22    3:r238 l0    21
    1:r239 l0     0    0:r240 l0     0  231:r241 l0    21  230:r242 l0     0
  227:r243 l0     0  224:r244 l0     0  223:r245 l0     0  220:r246 l0     0
  218:r247 l0     0  213:r248 l0     0  209:r249 l0     0  208:r250 l0     0
  204:r251 l0     0  202:r252 l0     0  197:r253 l0     0  194:r254 l0     0
  192:r255 l0    21  189:r256 l0    22  187:r257 l0     0  184:r258 l0     0
  182:r259 l0    22  180:r260 l0    22  179:r261 l0     0  175:r262 l0     0
  173:r263 l0    21  171:r264 l0     0  168:r265 l0    21  167:r266 l0     0
  163:r267 l0     0  161:r268 l0    21  158:r269 l0    22  154:r270 l0    22
  150:r271 l0     0  149:r272 l0     0  145:r273 l0     0  142:r274 l0     0
  141:r275 l0     0  137:r276 l0     0  135:r277 l0     0  131:r278 l0     0
  127:r279 l0    21  122:r280 l0    22  117:r281 l0     0  114:r282 l0     0
  113:r283 l0     1  109:r284 l0     1  106:r285 l0    21  103:r286 l0     0
   99:r287 l0     0   97:r288 l0    21   94:r289 l0    22   92:r290 l0     0
   88:r291 l0     0   86:r292 l0    22   84:r293 l0    22   83:r294 l0     0
   79:r295 l0     0   77:r296 l0    21   75:r297 l0     0   72:r298 l0    21
   71:r299 l0     0   66:r300 l0     0   64:r301 l0    21   61:r302 l0    22
   57:r303 l0    22   53:r304 l0     0   52:r305 l0     0   48:r306 l0     0
   44:r307 l0     0   43:r308 l0     0   38:r309 l0     0   36:r310 l0     0
   31:r311 l0     0   27:r312 l0    21   22:r313 l0    22   17:r314 l0     0
   13:r315 l0     0   12:r316 l0     1    7:r317 l0     1    4:r318 l0    21
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int scale(float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={4d,2u} r1={3d,1u} r2={3d} r4={3d,1u} r5={3d,1u} r6={1d,21u} r7={1d,23u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,20u} r17={99d,17u} r18={2d} r19={2d} r20={1d,91u,24e} r21={5d,4u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u,1e} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,2u} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u,1e} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u,1e} r129={1d,1u} r130={1d,1u,1e} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u,1e} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1e} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u,1e} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u,1e} r173={1d,1u} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1e} r180={1d,1u} r181={1d,2u} r182={1d,1u} r183={1d,1u} r184={1d,1u,1e} r185={1d,1u} r186={1d,1u,1e} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u,1e} r193={1d,1u} r194={1d,1u,1e} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u,1e} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1e} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u,1e} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u,1e} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u,1e} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} 
;;    total ref usage 962{495d,415u,52e} in 286{284 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 241
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) ge2fitman_preproc.cpp:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])
        (reg:DI 4 si [ procpar_info ])) ge2fitman_preproc.cpp:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_info ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])
        (reg:DI 1 dx [ preprocess ])) ge2fitman_preproc.cpp:170 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ preprocess ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:172 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 241)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:173 129 {*movsf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 half+0 S4 A32])
        (reg:SF 241)) ge2fitman_preproc.cpp:173 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 241)
        (nil)))
(insn 11 10 324 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:175 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              20 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 242
(code_label 324 11 12 3 50 "" [1 uses])
(note 12 324 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:175 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:SI 87 [ D.26006 ])
        (mem/j:SI (plus:DI (reg/f:DI 242)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:175 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (nil)))
(insn 15 14 16 3 (parallel [
            (set (reg:SI 88 [ D.26006 ])
                (ashift:SI (reg:SI 87 [ D.26006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:175 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26006 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.26006 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32]))) ge2fitman_preproc.cpp:175 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26006 ])
        (nil)))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) ge2fitman_preproc.cpp:175 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 327)
;;  succ:       21
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 243 244 245 246 247 248 249 250 251 252 253 254 255 256
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:177 90 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 89 [ D.26007 ])
        (sign_extend:DI (reg:SI 243))) ge2fitman_preproc.cpp:177 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 90 [ D.26007 ])
                (ashift:DI (reg:DI 89 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:177 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 22 21 23 4 (set (reg/f:DI 244)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:177 89 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 91 [ D.26008 ])
                (plus:DI (reg:DI 90 [ D.26007 ])
                    (reg/f:DI 244)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 244)
        (expr_list:REG_DEAD (reg:DI 90 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 90 [ D.26007 ]))
                    (nil))))))
(insn 24 23 25 4 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:177 90 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 92 [ D.26007 ])
        (sign_extend:DI (reg:SI 245))) ge2fitman_preproc.cpp:177 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 93 [ D.26007 ])
                (ashift:DI (reg:DI 92 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:177 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 4 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:177 89 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:DI 94 [ D.26008 ])
                (plus:DI (reg:DI 93 [ D.26007 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 93 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 93 [ D.26007 ]))
                    (nil))))))
(insn 29 28 30 4 (set (reg:SF 95 [ D.26009 ])
        (mem:SF (reg/f:DI 94 [ D.26008 ]) [0 *_20+0 S4 A32])) ge2fitman_preproc.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.26008 ])
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:177 89 {*movdi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:SF 96 [ D.26009 ])
        (mem/j:SF (plus:DI (reg/f:DI 247)
                (const_int 4 [0x4])) [0 preprocess_22(D)->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 247)
        (nil)))
(insn 32 31 33 4 (set (reg:SF 97 [ D.26009 ])
        (mult:SF (reg:SF 95 [ D.26009 ])
            (reg:SF 96 [ D.26009 ]))) ge2fitman_preproc.cpp:177 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 96 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 95 [ D.26009 ])
            (nil))))
(insn 33 32 34 4 (set (mem:SF (reg/f:DI 91 [ D.26008 ]) [0 *_17+0 S4 A32])
        (reg:SF 97 [ D.26009 ])) ge2fitman_preproc.cpp:177 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 97 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.26008 ])
            (nil))))
(insn 34 33 35 4 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:178 90 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:DI 98 [ D.26010 ])
        (sign_extend:DI (reg:SI 248))) ge2fitman_preproc.cpp:178 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 248)
        (nil)))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 99 [ D.26010 ])
                (plus:DI (reg:DI 98 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (parallel [
            (set (reg:DI 100 [ D.26010 ])
                (ashift:DI (reg:DI 99 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 4 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:178 89 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg/f:DI 101 [ D.26008 ])
                (plus:DI (reg:DI 100 [ D.26010 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (expr_list:REG_DEAD (reg:DI 100 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 100 [ D.26010 ]))
                    (nil))))))
(insn 40 39 41 4 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:178 90 {*movsi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:DI 102 [ D.26010 ])
        (sign_extend:DI (reg:SI 250))) ge2fitman_preproc.cpp:178 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(insn 42 41 43 4 (parallel [
            (set (reg:DI 103 [ D.26010 ])
                (plus:DI (reg:DI 102 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 102 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 104 [ D.26010 ])
                (ashift:DI (reg:DI 103 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 103 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 4 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:178 89 {*movdi_internal}
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg/f:DI 105 [ D.26008 ])
                (plus:DI (reg:DI 104 [ D.26010 ])
                    (reg/f:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 104 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 104 [ D.26010 ]))
                    (nil))))))
(insn 46 45 47 4 (set (reg:SF 106 [ D.26009 ])
        (mem:SF (reg/f:DI 105 [ D.26008 ]) [0 *_33+0 S4 A32])) ge2fitman_preproc.cpp:178 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.26008 ])
        (nil)))
(insn 47 46 48 4 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:178 89 {*movdi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:SF 107 [ D.26009 ])
        (mem/j:SF (plus:DI (reg/f:DI 252)
                (const_int 4 [0x4])) [0 preprocess_22(D)->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:178 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 252)
        (nil)))
(insn 49 48 50 4 (set (reg:SF 108 [ D.26009 ])
        (mult:SF (reg:SF 106 [ D.26009 ])
            (reg:SF 107 [ D.26009 ]))) ge2fitman_preproc.cpp:178 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 107 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 106 [ D.26009 ])
            (nil))))
(insn 50 49 51 4 (set (mem:SF (reg/f:DI 101 [ D.26008 ]) [0 *_29+0 S4 A32])
        (reg:SF 108 [ D.26009 ])) ge2fitman_preproc.cpp:178 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 108 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 101 [ D.26008 ])
            (nil))))
(insn 51 50 52 4 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:180 90 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 109 [ D.26007 ])
        (sign_extend:DI (reg:SI 253))) ge2fitman_preproc.cpp:180 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 110 [ D.26007 ])
                (ashift:DI (reg:DI 109 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:180 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 109 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 4 (set (reg/f:DI 254)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:180 89 {*movdi_internal}
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg/f:DI 111 [ D.26008 ])
                (plus:DI (reg:DI 110 [ D.26007 ])
                    (reg/f:DI 254)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:180 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 254)
        (expr_list:REG_DEAD (reg:DI 110 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 110 [ D.26007 ]))
                    (nil))))))
(insn 56 55 57 4 (set (reg:SF 112 [ D.26009 ])
        (mem:SF (reg/f:DI 111 [ D.26008 ]) [0 *_40+0 S4 A32])) ge2fitman_preproc.cpp:180 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.26008 ])
        (nil)))
(insn 57 56 58 4 (set (reg:V4SF 255)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:180 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 58 57 59 4 (parallel [
            (set (reg:SF 113 [ D.26009 ])
                (abs:SF (reg:SF 112 [ D.26009 ])))
            (use (reg:V4SF 255))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:180 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 255)
        (expr_list:REG_DEAD (reg:SF 112 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 112 [ D.26009 ]))
                    (nil))))))
(insn 59 58 60 4 (set (reg:DF 114 [ D.26011 ])
        (float_extend:DF (reg:SF 113 [ D.26009 ]))) ge2fitman_preproc.cpp:180 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 113 [ D.26009 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 256)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:180 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 61 60 62 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 256)
            (reg:DF 114 [ D.26011 ]))) ge2fitman_preproc.cpp:180 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 256)
        (expr_list:REG_DEAD (reg:DF 114 [ D.26011 ])
            (nil))))
(jump_insn 62 61 66 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 181)
            (pc))) ge2fitman_preproc.cpp:180 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 181)
;;  succ:       5 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 115 116 117 118 257 258 259
(note 66 62 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 5 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:180 90 {*movsi_internal}
     (nil))
(insn 68 67 69 5 (set (reg:DI 115 [ D.26007 ])
        (sign_extend:DI (reg:SI 257))) ge2fitman_preproc.cpp:180 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 69 68 70 5 (parallel [
            (set (reg:DI 116 [ D.26007 ])
                (ashift:DI (reg:DI 115 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:180 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 5 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:180 89 {*movdi_internal}
     (nil))
(insn 71 70 72 5 (parallel [
            (set (reg/f:DI 117 [ D.26008 ])
                (plus:DI (reg:DI 116 [ D.26007 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:180 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 116 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 116 [ D.26007 ]))
                    (nil))))))
(insn 72 71 73 5 (set (reg:SF 118 [ D.26009 ])
        (mem:SF (reg/f:DI 117 [ D.26008 ]) [0 *_46+0 S4 A32])) ge2fitman_preproc.cpp:180 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.26008 ])
        (nil)))
(insn 73 72 74 5 (set (reg:SF 259)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:180 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 74 73 75 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 118 [ D.26009 ])
            (reg:SF 259))) ge2fitman_preproc.cpp:180 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 259)
        (nil)))
(jump_insn 75 74 341 5 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 350)
            (pc))) ge2fitman_preproc.cpp:180 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 350)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 260
(note 341 75 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 76 341 77 6 (set (reg:SF 260)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:180 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 77 76 78 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 118 [ D.26009 ])
            (reg:SF 260))) ge2fitman_preproc.cpp:180 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 260)
        (expr_list:REG_DEAD (reg:SF 118 [ D.26009 ])
            (nil))))
(jump_insn 78 77 350 6 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 181)
            (pc))) ge2fitman_preproc.cpp:180 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 181)
;;  succ:       7 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 261 262 263 264 265 266 267 268 269
(code_label 350 78 82 7 53 "" [1 uses])
(note 82 350 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 7 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:181 90 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (reg:DI 119 [ D.26010 ])
        (sign_extend:DI (reg:SI 261))) ge2fitman_preproc.cpp:181 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 261)
        (nil)))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 120 [ D.26010 ])
                (plus:DI (reg:DI 119 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 7 (parallel [
            (set (reg:DI 121 [ D.26010 ])
                (ashift:DI (reg:DI 120 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:181 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 7 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:181 89 {*movdi_internal}
     (nil))
(insn 88 87 89 7 (parallel [
            (set (reg/f:DI 122 [ D.26008 ])
                (plus:DI (reg:DI 121 [ D.26010 ])
                    (reg/f:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 262)
        (expr_list:REG_DEAD (reg:DI 121 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 121 [ D.26010 ]))
                    (nil))))))
(insn 89 88 90 7 (set (reg:SF 123 [ D.26009 ])
        (mem:SF (reg/f:DI 122 [ D.26008 ]) [0 *_51+0 S4 A32])) ge2fitman_preproc.cpp:181 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.26008 ])
        (nil)))
(insn 90 89 91 7 (set (reg:V4SF 263)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:181 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 91 90 92 7 (parallel [
            (set (reg:SF 124 [ D.26009 ])
                (abs:SF (reg:SF 123 [ D.26009 ])))
            (use (reg:V4SF 263))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:181 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 263)
        (expr_list:REG_DEAD (reg:SF 123 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 123 [ D.26009 ]))
                    (nil))))))
(insn 92 91 93 7 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:181 89 {*movdi_internal}
     (nil))
(insn 93 92 94 7 (set (reg:SF 125 [ D.26009 ])
        (mem/j:SF (plus:DI (reg/f:DI 264)
                (const_int 4 [0x4])) [0 preprocess_22(D)->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:181 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (nil)))
(insn 94 93 95 7 (set (reg:SF 265)
        (mult:SF (reg:SF 124 [ D.26009 ])
            (reg:SF 125 [ D.26009 ]))) ge2fitman_preproc.cpp:181 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 125 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 124 [ D.26009 ])
            (nil))))
(insn 95 94 96 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])
        (reg:SF 265)) ge2fitman_preproc.cpp:181 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 265)
        (nil)))
(insn 96 95 97 7 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:183 90 {*movsi_internal}
     (nil))
(insn 97 96 98 7 (set (reg:DI 126 [ D.26007 ])
        (sign_extend:DI (reg:SI 266))) ge2fitman_preproc.cpp:183 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 266)
        (nil)))
(insn 98 97 99 7 (parallel [
            (set (reg:DI 127 [ D.26007 ])
                (ashift:DI (reg:DI 126 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 7 (parallel [
            (set (reg:DI 128 [ D.26010 ])
                (plus:DI (reg:DI 127 [ D.26007 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 7 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:183 89 {*movdi_internal}
     (nil))
(insn 101 100 102 7 (parallel [
            (set (reg/f:DI 129 [ D.26008 ])
                (plus:DI (reg:DI 128 [ D.26010 ])
                    (reg/f:DI 267)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 267)
        (expr_list:REG_DEAD (reg:DI 128 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 128 [ D.26010 ]))
                    (nil))))))
(insn 102 101 103 7 (set (reg:SF 130 [ D.26009 ])
        (mem:SF (reg/f:DI 129 [ D.26008 ]) [0 *_59+0 S4 A32])) ge2fitman_preproc.cpp:183 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.26008 ])
        (nil)))
(insn 103 102 104 7 (set (reg:V4SF 268)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:183 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 104 103 105 7 (parallel [
            (set (reg:SF 131 [ D.26009 ])
                (abs:SF (reg:SF 130 [ D.26009 ])))
            (use (reg:V4SF 268))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 268)
        (expr_list:REG_DEAD (reg:SF 130 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 130 [ D.26009 ]))
                    (nil))))))
(insn 105 104 106 7 (set (reg:DF 132 [ D.26011 ])
        (float_extend:DF (reg:SF 131 [ D.26009 ]))) ge2fitman_preproc.cpp:183 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 131 [ D.26009 ])
        (nil)))
(insn 106 105 107 7 (set (reg:DF 269)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:183 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 107 106 108 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 269)
            (reg:DF 132 [ D.26011 ]))) ge2fitman_preproc.cpp:183 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 269)
        (expr_list:REG_DEAD (reg:DF 132 [ D.26011 ])
            (nil))))
(insn 108 107 109 7 (set (reg:QI 133 [ D.26012 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) ge2fitman_preproc.cpp:183 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 109 108 110 7 (parallel [
            (set (reg:QI 134 [ D.26012 ])
                (xor:QI (reg:QI 133 [ D.26012 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 133 [ D.26012 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.26012 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:183 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 134 [ D.26012 ])
        (nil)))
(jump_insn 111 110 112 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) ge2fitman_preproc.cpp:183 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 162)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135 136 137 270
(note 112 111 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 8 (set (reg:DF 135 [ D.26011 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) ge2fitman_preproc.cpp:183 152 {*extendsfdf2_sse}
     (nil))
(insn 114 113 115 8 (set (reg:DF 270)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:183 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 115 114 116 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 270)
            (reg:DF 135 [ D.26011 ]))) ge2fitman_preproc.cpp:183 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 270)
        (expr_list:REG_DEAD (reg:DF 135 [ D.26011 ])
            (nil))))
(insn 116 115 117 8 (set (reg:QI 136 [ D.26012 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) ge2fitman_preproc.cpp:183 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 117 116 118 8 (parallel [
            (set (reg:QI 137 [ D.26012 ])
                (xor:QI (reg:QI 136 [ D.26012 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 136 [ D.26012 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 117 119 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.26012 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:183 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 137 [ D.26012 ])
        (nil)))
(jump_insn 119 118 120 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) ge2fitman_preproc.cpp:183 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 162)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 138 139 140 271 272
(note 120 119 121 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 9 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:183 90 {*movsi_internal}
     (nil))
(insn 122 121 123 9 (parallel [
            (set (reg:SI 138 [ D.26006 ])
                (plus:SI (reg:SI 271)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 271)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 123 122 124 9 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:183 89 {*movdi_internal}
     (nil))
(insn 124 123 125 9 (set (reg:SI 139 [ D.26006 ])
        (mem/j:SI (plus:DI (reg/f:DI 272)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:183 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 272)
        (nil)))
(insn 125 124 126 9 (parallel [
            (set (reg:SI 140 [ D.26006 ])
                (ashift:SI (reg:SI 139 [ D.26006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:183 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 139 [ D.26006 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 138 [ D.26006 ])
            (reg:SI 140 [ D.26006 ]))) ge2fitman_preproc.cpp:183 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 140 [ D.26006 ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.26006 ])
            (nil))))
(jump_insn 127 126 128 9 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) ge2fitman_preproc.cpp:183 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 162)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 273 274 275 276 277 278 279 280
(note 128 127 129 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 10 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:185 90 {*movsi_internal}
     (nil))
(insn 130 129 131 10 (set (reg:DI 141 [ D.26007 ])
        (sign_extend:DI (reg:SI 273))) ge2fitman_preproc.cpp:185 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 131 130 132 10 (parallel [
            (set (reg:DI 142 [ D.26007 ])
                (ashift:DI (reg:DI 141 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 10 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:185 89 {*movdi_internal}
     (nil))
(insn 133 132 134 10 (parallel [
            (set (reg/f:DI 143 [ D.26008 ])
                (plus:DI (reg:DI 142 [ D.26007 ])
                    (reg/f:DI 274)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 274)
        (expr_list:REG_DEAD (reg:DI 142 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 142 [ D.26007 ]))
                    (nil))))))
(insn 134 133 135 10 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:185 90 {*movsi_internal}
     (nil))
(insn 135 134 136 10 (set (reg:DI 144 [ D.26007 ])
        (sign_extend:DI (reg:SI 275))) ge2fitman_preproc.cpp:185 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 136 135 137 10 (parallel [
            (set (reg:DI 145 [ D.26007 ])
                (ashift:DI (reg:DI 144 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 144 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 10 (parallel [
            (set (reg:DI 146 [ D.26010 ])
                (plus:DI (reg:DI 145 [ D.26007 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 145 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 138 137 139 10 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:185 89 {*movdi_internal}
     (nil))
(insn 139 138 140 10 (parallel [
            (set (reg/f:DI 147 [ D.26008 ])
                (plus:DI (reg:DI 146 [ D.26010 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:DI 146 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 146 [ D.26010 ]))
                    (nil))))))
(insn 140 139 141 10 (set (reg:SF 148 [ D.26009 ])
        (mem:SF (reg/f:DI 147 [ D.26008 ]) [0 *_77+0 S4 A32])) ge2fitman_preproc.cpp:185 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ D.26008 ])
        (nil)))
(insn 141 140 142 10 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:185 90 {*movsi_internal}
     (nil))
(insn 142 141 143 10 (set (reg:DI 149 [ D.26007 ])
        (sign_extend:DI (reg:SI 277))) ge2fitman_preproc.cpp:185 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277)
        (nil)))
(insn 143 142 144 10 (parallel [
            (set (reg:DI 150 [ D.26007 ])
                (ashift:DI (reg:DI 149 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 149 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 10 (parallel [
            (set (reg:DI 151 [ D.26010 ])
                (plus:DI (reg:DI 150 [ D.26007 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 10 (set (reg/f:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:185 89 {*movdi_internal}
     (nil))
(insn 146 145 147 10 (parallel [
            (set (reg/f:DI 152 [ D.26008 ])
                (plus:DI (reg:DI 151 [ D.26010 ])
                    (reg/f:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:185 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 278)
        (expr_list:REG_DEAD (reg:DI 151 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 151 [ D.26010 ]))
                    (nil))))))
(insn 147 146 148 10 (set (reg:SF 153 [ D.26009 ])
        (mem:SF (reg/f:DI 152 [ D.26008 ]) [0 *_82+0 S4 A32])) ge2fitman_preproc.cpp:185 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.26008 ])
        (nil)))
(insn 148 147 149 10 (set (reg:SF 154 [ D.26009 ])
        (mult:SF (reg:SF 148 [ D.26009 ])
            (reg:SF 153 [ D.26009 ]))) ge2fitman_preproc.cpp:185 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 153 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 148 [ D.26009 ])
            (nil))))
(insn 149 148 150 10 (set (reg:SF 279)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])) ge2fitman_preproc.cpp:186 129 {*movsf_internal}
     (nil))
(insn 150 149 151 10 (set (reg:SF 155 [ D.26009 ])
        (mult:SF (reg:SF 279)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) ge2fitman_preproc.cpp:186 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 279)
        (nil)))
(insn 151 150 152 10 (set (reg:SF 156 [ D.26009 ])
        (plus:SF (reg:SF 154 [ D.26009 ])
            (reg:SF 155 [ D.26009 ]))) ge2fitman_preproc.cpp:185 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 155 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 154 [ D.26009 ])
            (nil))))
(insn 152 151 153 10 (set (reg:DF 157 [ D.26011 ])
        (float_extend:DF (reg:SF 156 [ D.26009 ]))) ge2fitman_preproc.cpp:185 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 156 [ D.26009 ])
        (nil)))
(insn 153 152 154 10 (set (reg:DF 280)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:185 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 154 153 155 10 (set (reg:DF 158 [ D.26011 ])
        (mult:DF (reg:DF 157 [ D.26011 ])
            (reg:DF 280))) ge2fitman_preproc.cpp:185 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 280)
        (expr_list:REG_DEAD (reg:DF 157 [ D.26011 ])
            (nil))))
(insn 155 154 156 10 (set (reg:DF 21 xmm0)
        (reg:DF 158 [ D.26011 ])) ge2fitman_preproc.cpp:185 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 158 [ D.26011 ])
        (nil)))
(call_insn 156 155 157 10 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:185 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 157 156 158 10 (set (reg:DF 159 [ D.26011 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:185 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 158 157 159 10 (set (reg:SF 160 [ D.26009 ])
        (float_truncate:SF (reg:DF 159 [ D.26011 ]))) ge2fitman_preproc.cpp:186 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 159 [ D.26011 ])
        (nil)))
(insn 159 158 353 10 (set (mem:SF (reg/f:DI 143 [ D.26008 ]) [0 *_73+0 S4 A32])
        (reg:SF 160 [ D.26009 ])) ge2fitman_preproc.cpp:186 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 160 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 143 [ D.26008 ])
            (nil))))
(jump_insn 353 159 354 10 (set (pc)
        (label_ref 181)) ge2fitman_preproc.cpp:186 654 {jump}
     (nil)
 -> 181)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 354 353 162)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8
;;              9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161 162 163 164 165 166 167 168 169 281 282 283 284 285
(code_label 162 354 163 11 43 "" [3 uses])
(note 163 162 164 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 11 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:188 90 {*movsi_internal}
     (nil))
(insn 165 164 166 11 (set (reg:DI 161 [ D.26007 ])
        (sign_extend:DI (reg:SI 281))) ge2fitman_preproc.cpp:188 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 281)
        (nil)))
(insn 166 165 167 11 (parallel [
            (set (reg:DI 162 [ D.26007 ])
                (ashift:DI (reg:DI 161 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:188 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 11 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:188 89 {*movdi_internal}
     (nil))
(insn 168 167 169 11 (parallel [
            (set (reg/f:DI 163 [ D.26008 ])
                (plus:DI (reg:DI 162 [ D.26007 ])
                    (reg/f:DI 282)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:188 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 282)
        (expr_list:REG_DEAD (reg:DI 162 [ D.26007 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 162 [ D.26007 ]))
                    (nil))))))
(insn 169 168 170 11 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:188 90 {*movsi_internal}
     (nil))
(insn 170 169 171 11 (set (reg:DI 164 [ D.26007 ])
        (sign_extend:DI (reg:SI 283))) ge2fitman_preproc.cpp:188 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 283)
        (nil)))
(insn 171 170 172 11 (parallel [
            (set (reg:DI 165 [ D.26007 ])
                (ashift:DI (reg:DI 164 [ D.26007 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:188 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 164 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 171 173 11 (parallel [
            (set (reg:DI 166 [ D.26010 ])
                (plus:DI (reg:DI 165 [ D.26007 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:188 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ D.26007 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 11 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:188 89 {*movdi_internal}
     (nil))
(insn 174 173 175 11 (parallel [
            (set (reg/f:DI 167 [ D.26008 ])
                (plus:DI (reg:DI 166 [ D.26010 ])
                    (reg/f:DI 284)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:188 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 284)
        (expr_list:REG_DEAD (reg:DI 166 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 166 [ D.26010 ]))
                    (nil))))))
(insn 175 174 176 11 (set (reg:SF 168 [ D.26009 ])
        (mem:SF (reg/f:DI 167 [ D.26008 ]) [0 *_99+0 S4 A32])) ge2fitman_preproc.cpp:188 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.26008 ])
        (nil)))
(insn 176 175 177 11 (set (reg:SF 285)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:188 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 177 176 178 11 (set (reg:SF 169 [ D.26009 ])
        (mult:SF (reg:SF 168 [ D.26009 ])
            (reg:SF 285))) ge2fitman_preproc.cpp:188 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 285)
        (expr_list:REG_DEAD (reg:SF 168 [ D.26009 ])
            (nil))))
(insn 178 177 181 11 (set (mem:SF (reg/f:DI 163 [ D.26008 ]) [0 *_95+0 S4 A32])
        (reg:SF 169 [ D.26009 ])) ge2fitman_preproc.cpp:188 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 169 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 163 [ D.26008 ])
            (nil))))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              4
;;              6
;;              10 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 170 171 172 173 174 175 176 286 287 288 289
(code_label 181 178 182 12 40 "" [3 uses])
(note 182 181 183 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 12 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:192 90 {*movsi_internal}
     (nil))
(insn 184 183 185 12 (set (reg:DI 170 [ D.26010 ])
        (sign_extend:DI (reg:SI 286))) ge2fitman_preproc.cpp:192 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 185 184 186 12 (parallel [
            (set (reg:DI 171 [ D.26010 ])
                (plus:DI (reg:DI 170 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 12 (parallel [
            (set (reg:DI 172 [ D.26010 ])
                (ashift:DI (reg:DI 171 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 171 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 12 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:192 89 {*movdi_internal}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg/f:DI 173 [ D.26008 ])
                (plus:DI (reg:DI 172 [ D.26010 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (expr_list:REG_DEAD (reg:DI 172 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 172 [ D.26010 ]))
                    (nil))))))
(insn 189 188 190 12 (set (reg:SF 174 [ D.26009 ])
        (mem:SF (reg/f:DI 173 [ D.26008 ]) [0 *_106+0 S4 A32])) ge2fitman_preproc.cpp:192 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.26008 ])
        (nil)))
(insn 190 189 191 12 (set (reg:V4SF 288)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:192 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 191 190 192 12 (parallel [
            (set (reg:SF 175 [ D.26009 ])
                (abs:SF (reg:SF 174 [ D.26009 ])))
            (use (reg:V4SF 288))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 288)
        (expr_list:REG_DEAD (reg:SF 174 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 174 [ D.26009 ]))
                    (nil))))))
(insn 192 191 193 12 (set (reg:DF 176 [ D.26011 ])
        (float_extend:DF (reg:SF 175 [ D.26009 ]))) ge2fitman_preproc.cpp:192 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 175 [ D.26009 ])
        (nil)))
(insn 193 192 194 12 (set (reg:DF 289)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:192 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 194 193 195 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 289)
            (reg:DF 176 [ D.26011 ]))) ge2fitman_preproc.cpp:192 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 289)
        (expr_list:REG_DEAD (reg:DF 176 [ D.26011 ])
            (nil))))
(jump_insn 195 194 199 12 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 321)
            (pc))) ge2fitman_preproc.cpp:192 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 321)
;;  succ:       13 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 177 178 179 180 181 290 291 292
(note 199 195 200 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 13 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:192 90 {*movsi_internal}
     (nil))
(insn 201 200 202 13 (set (reg:DI 177 [ D.26010 ])
        (sign_extend:DI (reg:SI 290))) ge2fitman_preproc.cpp:192 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 202 201 203 13 (parallel [
            (set (reg:DI 178 [ D.26010 ])
                (plus:DI (reg:DI 177 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 177 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 13 (parallel [
            (set (reg:DI 179 [ D.26010 ])
                (ashift:DI (reg:DI 178 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 204 203 205 13 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:192 89 {*movdi_internal}
     (nil))
(insn 205 204 206 13 (parallel [
            (set (reg/f:DI 180 [ D.26008 ])
                (plus:DI (reg:DI 179 [ D.26010 ])
                    (reg/f:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:192 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 291)
        (expr_list:REG_DEAD (reg:DI 179 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 179 [ D.26010 ]))
                    (nil))))))
(insn 206 205 207 13 (set (reg:SF 181 [ D.26009 ])
        (mem:SF (reg/f:DI 180 [ D.26008 ]) [0 *_113+0 S4 A32])) ge2fitman_preproc.cpp:192 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ D.26008 ])
        (nil)))
(insn 207 206 208 13 (set (reg:SF 292)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:192 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 208 207 209 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 181 [ D.26009 ])
            (reg:SF 292))) ge2fitman_preproc.cpp:192 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 292)
        (nil)))
(jump_insn 209 208 346 13 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 352)
            (pc))) ge2fitman_preproc.cpp:192 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 352)
;;  succ:       15
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 181
;; lr  def 	 17 [flags] 293
(note 346 209 210 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 210 346 211 14 (set (reg:SF 293)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:192 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 211 210 212 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 181 [ D.26009 ])
            (reg:SF 293))) ge2fitman_preproc.cpp:192 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 293)
        (expr_list:REG_DEAD (reg:SF 181 [ D.26009 ])
            (nil))))
(jump_insn 212 211 352 14 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 321)
            (pc))) ge2fitman_preproc.cpp:192 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 321)
;;  succ:       15 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 294 295 296 297 298 299 300 301 302
(code_label 352 212 216 15 55 "" [1 uses])
(note 216 352 217 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 15 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:193 90 {*movsi_internal}
     (nil))
(insn 218 217 219 15 (set (reg:DI 182 [ D.26010 ])
        (sign_extend:DI (reg:SI 294))) ge2fitman_preproc.cpp:193 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 294)
        (nil)))
(insn 219 218 220 15 (parallel [
            (set (reg:DI 183 [ D.26010 ])
                (plus:DI (reg:DI 182 [ D.26010 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:193 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 182 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 15 (parallel [
            (set (reg:DI 184 [ D.26010 ])
                (ashift:DI (reg:DI 183 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:193 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 183 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 15 (set (reg/f:DI 295)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:193 89 {*movdi_internal}
     (nil))
(insn 222 221 223 15 (parallel [
            (set (reg/f:DI 185 [ D.26008 ])
                (plus:DI (reg:DI 184 [ D.26010 ])
                    (reg/f:DI 295)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:193 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 295)
        (expr_list:REG_DEAD (reg:DI 184 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 184 [ D.26010 ]))
                    (nil))))))
(insn 223 222 224 15 (set (reg:SF 186 [ D.26009 ])
        (mem:SF (reg/f:DI 185 [ D.26008 ]) [0 *_118+0 S4 A32])) ge2fitman_preproc.cpp:193 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 185 [ D.26008 ])
        (nil)))
(insn 224 223 225 15 (set (reg:V4SF 296)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:193 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 225 224 226 15 (parallel [
            (set (reg:SF 187 [ D.26009 ])
                (abs:SF (reg:SF 186 [ D.26009 ])))
            (use (reg:V4SF 296))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:193 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 296)
        (expr_list:REG_DEAD (reg:SF 186 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 186 [ D.26009 ]))
                    (nil))))))
(insn 226 225 227 15 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:193 89 {*movdi_internal}
     (nil))
(insn 227 226 228 15 (set (reg:SF 188 [ D.26009 ])
        (mem/j:SF (plus:DI (reg/f:DI 297)
                (const_int 4 [0x4])) [0 preprocess_22(D)->scale_factor+0 S4 A32])) ge2fitman_preproc.cpp:193 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (nil)))
(insn 228 227 229 15 (set (reg:SF 298)
        (mult:SF (reg:SF 187 [ D.26009 ])
            (reg:SF 188 [ D.26009 ]))) ge2fitman_preproc.cpp:193 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 188 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 187 [ D.26009 ])
            (nil))))
(insn 229 228 230 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])
        (reg:SF 298)) ge2fitman_preproc.cpp:193 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 298)
        (nil)))
(insn 230 229 231 15 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:195 90 {*movsi_internal}
     (nil))
(insn 231 230 232 15 (set (reg:DI 189 [ D.26010 ])
        (sign_extend:DI (reg:SI 299))) ge2fitman_preproc.cpp:195 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 232 231 233 15 (parallel [
            (set (reg:DI 190 [ D.26010 ])
                (plus:DI (reg:DI 189 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 189 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 15 (parallel [
            (set (reg:DI 191 [ D.26010 ])
                (ashift:DI (reg:DI 190 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 190 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 235 15 (parallel [
            (set (reg:DI 192 [ D.26010 ])
                (plus:DI (reg:DI 191 [ D.26010 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 235 234 236 15 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:195 89 {*movdi_internal}
     (nil))
(insn 236 235 237 15 (parallel [
            (set (reg/f:DI 193 [ D.26008 ])
                (plus:DI (reg:DI 192 [ D.26010 ])
                    (reg/f:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (expr_list:REG_DEAD (reg:DI 192 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 192 [ D.26010 ]))
                    (nil))))))
(insn 237 236 238 15 (set (reg:SF 194 [ D.26009 ])
        (mem:SF (reg/f:DI 193 [ D.26008 ]) [0 *_127+0 S4 A32])) ge2fitman_preproc.cpp:195 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 193 [ D.26008 ])
        (nil)))
(insn 238 237 239 15 (set (reg:V4SF 301)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:195 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 239 238 240 15 (parallel [
            (set (reg:SF 195 [ D.26009 ])
                (abs:SF (reg:SF 194 [ D.26009 ])))
            (use (reg:V4SF 301))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 301)
        (expr_list:REG_DEAD (reg:SF 194 [ D.26009 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 194 [ D.26009 ]))
                    (nil))))))
(insn 240 239 241 15 (set (reg:DF 196 [ D.26011 ])
        (float_extend:DF (reg:SF 195 [ D.26009 ]))) ge2fitman_preproc.cpp:195 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 195 [ D.26009 ])
        (nil)))
(insn 241 240 242 15 (set (reg:DF 302)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:195 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 242 241 243 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 302)
            (reg:DF 196 [ D.26011 ]))) ge2fitman_preproc.cpp:195 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 302)
        (expr_list:REG_DEAD (reg:DF 196 [ D.26011 ])
            (nil))))
(insn 243 242 244 15 (set (reg:QI 197 [ D.26012 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) ge2fitman_preproc.cpp:195 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 244 243 245 15 (parallel [
            (set (reg:QI 198 [ D.26012 ])
                (xor:QI (reg:QI 197 [ D.26012 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 197 [ D.26012 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 245 244 246 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 198 [ D.26012 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:195 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 198 [ D.26012 ])
        (nil)))
(jump_insn 246 245 247 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) ge2fitman_preproc.cpp:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 300)
;;  succ:       16 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 199 200 201 303
(note 247 246 248 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 16 (set (reg:DF 199 [ D.26011 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) ge2fitman_preproc.cpp:195 152 {*extendsfdf2_sse}
     (nil))
(insn 249 248 250 16 (set (reg:DF 303)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:195 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 1.0000000000000000622815914577798564188970686927859788e-9 [0x0.89705f4136b4a8p-29])
        (nil)))
(insn 250 249 251 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 303)
            (reg:DF 199 [ D.26011 ]))) ge2fitman_preproc.cpp:195 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 303)
        (expr_list:REG_DEAD (reg:DF 199 [ D.26011 ])
            (nil))))
(insn 251 250 252 16 (set (reg:QI 200 [ D.26012 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) ge2fitman_preproc.cpp:195 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil)))
(insn 252 251 253 16 (parallel [
            (set (reg:QI 201 [ D.26012 ])
                (xor:QI (reg:QI 200 [ D.26012 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 200 [ D.26012 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.26012 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:195 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 201 [ D.26012 ])
        (nil)))
(jump_insn 254 253 255 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) ge2fitman_preproc.cpp:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 300)
;;  succ:       17 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 202 203 204 304 305
(note 255 254 256 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 17 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:195 90 {*movsi_internal}
     (nil))
(insn 257 256 258 17 (parallel [
            (set (reg:SI 202 [ D.26006 ])
                (plus:SI (reg:SI 304)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 304)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2]))
                (nil)))))
(insn 258 257 259 17 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:195 89 {*movdi_internal}
     (nil))
(insn 259 258 260 17 (set (reg:SI 203 [ D.26006 ])
        (mem/j:SI (plus:DI (reg/f:DI 305)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:195 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (nil)))
(insn 260 259 261 17 (parallel [
            (set (reg:SI 204 [ D.26006 ])
                (ashift:SI (reg:SI 203 [ D.26006 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:195 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 203 [ D.26006 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 261 260 262 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 202 [ D.26006 ])
            (reg:SI 204 [ D.26006 ]))) ge2fitman_preproc.cpp:195 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 204 [ D.26006 ])
        (expr_list:REG_DEAD (reg:SI 202 [ D.26006 ])
            (nil))))
(jump_insn 262 261 263 17 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) ge2fitman_preproc.cpp:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 300)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 306 307 308 309 310 311 312 313
(note 263 262 264 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 18 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:197 90 {*movsi_internal}
     (nil))
(insn 265 264 266 18 (set (reg:DI 205 [ D.26010 ])
        (sign_extend:DI (reg:SI 306))) ge2fitman_preproc.cpp:197 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 306)
        (nil)))
(insn 266 265 267 18 (parallel [
            (set (reg:DI 206 [ D.26010 ])
                (plus:DI (reg:DI 205 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 267 266 268 18 (parallel [
            (set (reg:DI 207 [ D.26010 ])
                (ashift:DI (reg:DI 206 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 206 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 268 267 269 18 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:197 89 {*movdi_internal}
     (nil))
(insn 269 268 270 18 (parallel [
            (set (reg/f:DI 208 [ D.26008 ])
                (plus:DI (reg:DI 207 [ D.26010 ])
                    (reg/f:DI 307)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 307)
        (expr_list:REG_DEAD (reg:DI 207 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 207 [ D.26010 ]))
                    (nil))))))
(insn 270 269 271 18 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:197 90 {*movsi_internal}
     (nil))
(insn 271 270 272 18 (set (reg:DI 209 [ D.26010 ])
        (sign_extend:DI (reg:SI 308))) ge2fitman_preproc.cpp:197 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 308)
        (nil)))
(insn 272 271 273 18 (parallel [
            (set (reg:DI 210 [ D.26010 ])
                (plus:DI (reg:DI 209 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 209 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 273 272 274 18 (parallel [
            (set (reg:DI 211 [ D.26010 ])
                (ashift:DI (reg:DI 210 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 210 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 274 273 275 18 (parallel [
            (set (reg:DI 212 [ D.26010 ])
                (plus:DI (reg:DI 211 [ D.26010 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 211 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 275 274 276 18 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:197 89 {*movdi_internal}
     (nil))
(insn 276 275 277 18 (parallel [
            (set (reg/f:DI 213 [ D.26008 ])
                (plus:DI (reg:DI 212 [ D.26010 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (expr_list:REG_DEAD (reg:DI 212 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 212 [ D.26010 ]))
                    (nil))))))
(insn 277 276 278 18 (set (reg:SF 214 [ D.26009 ])
        (mem:SF (reg/f:DI 213 [ D.26008 ]) [0 *_147+0 S4 A32])) ge2fitman_preproc.cpp:197 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.26008 ])
        (nil)))
(insn 278 277 279 18 (set (reg:SI 310)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:197 90 {*movsi_internal}
     (nil))
(insn 279 278 280 18 (set (reg:DI 215 [ D.26010 ])
        (sign_extend:DI (reg:SI 310))) ge2fitman_preproc.cpp:197 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 310)
        (nil)))
(insn 280 279 281 18 (parallel [
            (set (reg:DI 216 [ D.26010 ])
                (plus:DI (reg:DI 215 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 215 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 281 280 282 18 (parallel [
            (set (reg:DI 217 [ D.26010 ])
                (ashift:DI (reg:DI 216 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 216 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 282 281 283 18 (parallel [
            (set (reg:DI 218 [ D.26010 ])
                (plus:DI (reg:DI 217 [ D.26010 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 217 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 283 282 284 18 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:197 89 {*movdi_internal}
     (nil))
(insn 284 283 285 18 (parallel [
            (set (reg/f:DI 219 [ D.26008 ])
                (plus:DI (reg:DI 218 [ D.26010 ])
                    (reg/f:DI 311)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:197 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (expr_list:REG_DEAD (reg:DI 218 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 218 [ D.26010 ]))
                    (nil))))))
(insn 285 284 286 18 (set (reg:SF 220 [ D.26009 ])
        (mem:SF (reg/f:DI 219 [ D.26008 ]) [0 *_153+0 S4 A32])) ge2fitman_preproc.cpp:197 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 219 [ D.26008 ])
        (nil)))
(insn 286 285 287 18 (set (reg:SF 221 [ D.26009 ])
        (mult:SF (reg:SF 214 [ D.26009 ])
            (reg:SF 220 [ D.26009 ]))) ge2fitman_preproc.cpp:197 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 220 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 214 [ D.26009 ])
            (nil))))
(insn 287 286 288 18 (set (reg:SF 312)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32])) ge2fitman_preproc.cpp:198 129 {*movsf_internal}
     (nil))
(insn 288 287 289 18 (set (reg:SF 222 [ D.26009 ])
        (mult:SF (reg:SF 312)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 next_point+0 S4 A32]))) ge2fitman_preproc.cpp:198 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 312)
        (nil)))
(insn 289 288 290 18 (set (reg:SF 223 [ D.26009 ])
        (plus:SF (reg:SF 221 [ D.26009 ])
            (reg:SF 222 [ D.26009 ]))) ge2fitman_preproc.cpp:197 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 222 [ D.26009 ])
        (expr_list:REG_DEAD (reg:SF 221 [ D.26009 ])
            (nil))))
(insn 290 289 291 18 (set (reg:DF 224 [ D.26011 ])
        (float_extend:DF (reg:SF 223 [ D.26009 ]))) ge2fitman_preproc.cpp:197 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 223 [ D.26009 ])
        (nil)))
(insn 291 290 292 18 (set (reg:DF 313)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:197 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 292 291 293 18 (set (reg:DF 225 [ D.26011 ])
        (mult:DF (reg:DF 224 [ D.26011 ])
            (reg:DF 313))) ge2fitman_preproc.cpp:197 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 313)
        (expr_list:REG_DEAD (reg:DF 224 [ D.26011 ])
            (nil))))
(insn 293 292 294 18 (set (reg:DF 21 xmm0)
        (reg:DF 225 [ D.26011 ])) ge2fitman_preproc.cpp:197 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 225 [ D.26011 ])
        (nil)))
(call_insn 294 293 295 18 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:197 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 295 294 296 18 (set (reg:DF 226 [ D.26011 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:197 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 296 295 297 18 (set (reg:SF 227 [ D.26009 ])
        (float_truncate:SF (reg:DF 226 [ D.26011 ]))) ge2fitman_preproc.cpp:198 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 226 [ D.26011 ])
        (nil)))
(insn 297 296 355 18 (set (mem:SF (reg/f:DI 208 [ D.26008 ]) [0 *_142+0 S4 A32])
        (reg:SF 227 [ D.26009 ])) ge2fitman_preproc.cpp:198 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 227 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 208 [ D.26008 ])
            (nil))))
(jump_insn 355 297 356 18 (set (pc)
        (label_ref 321)) ge2fitman_preproc.cpp:198 654 {jump}
     (nil)
 -> 321)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 356 355 300)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16
;;              17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 228 229 230 231 232 233 234 235 236 237 238 314 315 316 317 318
(code_label 300 356 301 19 48 "" [3 uses])
(note 301 300 302 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 19 (set (reg:SI 314)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:200 90 {*movsi_internal}
     (nil))
(insn 303 302 304 19 (set (reg:DI 228 [ D.26010 ])
        (sign_extend:DI (reg:SI 314))) ge2fitman_preproc.cpp:200 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 314)
        (nil)))
(insn 304 303 305 19 (parallel [
            (set (reg:DI 229 [ D.26010 ])
                (plus:DI (reg:DI 228 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 305 304 306 19 (parallel [
            (set (reg:DI 230 [ D.26010 ])
                (ashift:DI (reg:DI 229 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 229 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 306 305 307 19 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:200 89 {*movdi_internal}
     (nil))
(insn 307 306 308 19 (parallel [
            (set (reg/f:DI 231 [ D.26008 ])
                (plus:DI (reg:DI 230 [ D.26010 ])
                    (reg/f:DI 315)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 315)
        (expr_list:REG_DEAD (reg:DI 230 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 230 [ D.26010 ]))
                    (nil))))))
(insn 308 307 309 19 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:200 90 {*movsi_internal}
     (nil))
(insn 309 308 310 19 (set (reg:DI 232 [ D.26010 ])
        (sign_extend:DI (reg:SI 316))) ge2fitman_preproc.cpp:200 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 316)
        (nil)))
(insn 310 309 311 19 (parallel [
            (set (reg:DI 233 [ D.26010 ])
                (plus:DI (reg:DI 232 [ D.26010 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 232 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 311 310 312 19 (parallel [
            (set (reg:DI 234 [ D.26010 ])
                (ashift:DI (reg:DI 233 [ D.26010 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 233 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 312 311 313 19 (parallel [
            (set (reg:DI 235 [ D.26010 ])
                (plus:DI (reg:DI 234 [ D.26010 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 234 [ D.26010 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 313 312 314 19 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:200 89 {*movdi_internal}
     (nil))
(insn 314 313 315 19 (parallel [
            (set (reg/f:DI 236 [ D.26008 ])
                (plus:DI (reg:DI 235 [ D.26010 ])
                    (reg/f:DI 317)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:200 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (expr_list:REG_DEAD (reg:DI 235 [ D.26010 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 235 [ D.26010 ]))
                    (nil))))))
(insn 315 314 316 19 (set (reg:SF 237 [ D.26009 ])
        (mem:SF (reg/f:DI 236 [ D.26008 ]) [0 *_172+0 S4 A32])) ge2fitman_preproc.cpp:200 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 236 [ D.26008 ])
        (nil)))
(insn 316 315 317 19 (set (reg:SF 318)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:200 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 317 316 318 19 (set (reg:SF 238 [ D.26009 ])
        (mult:SF (reg:SF 237 [ D.26009 ])
            (reg:SF 318))) ge2fitman_preproc.cpp:200 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 318)
        (expr_list:REG_DEAD (reg:SF 237 [ D.26009 ])
            (nil))))
(insn 318 317 321 19 (set (mem:SF (reg/f:DI 231 [ D.26008 ]) [0 *_167+0 S4 A32])
        (reg:SF 238 [ D.26009 ])) ge2fitman_preproc.cpp:200 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 238 [ D.26009 ])
        (expr_list:REG_DEAD (reg/f:DI 231 [ D.26008 ])
            (nil))))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              12
;;              14
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 321 318 322 20 45 "" [3 uses])
(note 322 321 323 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 357 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:175 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 357 323 358 20 (set (pc)
        (label_ref 324)) ge2fitman_preproc.cpp:175 654 {jump}
     (nil)
 -> 324)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 358 357 327)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 239 240
(code_label 327 358 328 21 39 "" [1 uses])
(note 328 327 329 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 332 21 (set (reg:SI 239 [ D.26006 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:205 90 {*movsi_internal}
     (nil))
(insn 332 329 336 21 (set (reg:SI 240 [ <retval> ])
        (reg:SI 239 [ D.26006 ])) ge2fitman_preproc.cpp:205 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 239 [ D.26006 ])
        (nil)))
(insn 336 332 337 21 (set (reg/i:SI 0 ax)
        (reg:SI 240 [ <retval> ])) ge2fitman_preproc.cpp:206 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240 [ <retval> ])
        (nil)))
(insn 337 336 0 21 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:206 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int baseline_correct(float*, Procpar_info*) (_Z16baseline_correctPfP12Procpar_info, funcdef_no=1023, decl_uid=24448, cgraph_uid=228, symbol_order=229)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a33 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a31 (r152,l0) best SSE_REGS, allocno SSE_REGS
    r151: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a35 (r151,l0) best SSE_REGS, allocno SSE_REGS
    r150: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r150,l0) best SSE_REGS, allocno SSE_REGS
    r149: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a37 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a43 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a52 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a74 (r130,l0) best SSE_REGS, allocno SSE_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r126,l0) best SSE_REGS, allocno SSE_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a32 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a42 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a44 (r101,l0) best SSE_REGS, allocno SSE_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r127,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r126,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a5(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a6(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r117,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a18(r116,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a19(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a20(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a21(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a22(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a23(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a26(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r152,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a32(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a33(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a34(r106,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a35(r151,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a36(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a37(r149,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a38(r104,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a39(r150,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a40(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a41(r148,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a42(r102,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a43(r146,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a44(r101,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a45(r147,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a46(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a49(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a50(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a51(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a52(r142,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a53(r96,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a54(r143,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a55(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a56(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a57(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a63(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a64(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a67(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:53 NO_REX_SSE_REGS:53 SSE_REGS:53 MMX_REGS:73 INT_SSE_REGS:57 ALL_REGS:1140 MEM:19
  a69(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a70(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a71(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a73(r131,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a74(r130,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 125(l0): point = 0
   Insn 124(l0): point = 2
   Insn 120(l0): point = 4
   Insn 117(l0): point = 6
   Insn 81(l0): point = 9
   Insn 80(l0): point = 11
   Insn 79(l0): point = 13
   Insn 78(l0): point = 15
   Insn 77(l0): point = 17
   Insn 129(l0): point = 20
   Insn 111(l0): point = 22
   Insn 110(l0): point = 24
   Insn 109(l0): point = 26
   Insn 108(l0): point = 28
   Insn 107(l0): point = 30
   Insn 106(l0): point = 32
   Insn 105(l0): point = 34
   Insn 104(l0): point = 36
   Insn 103(l0): point = 38
   Insn 102(l0): point = 40
   Insn 101(l0): point = 42
   Insn 100(l0): point = 44
   Insn 99(l0): point = 46
   Insn 98(l0): point = 48
   Insn 97(l0): point = 50
   Insn 96(l0): point = 52
   Insn 95(l0): point = 54
   Insn 94(l0): point = 56
   Insn 93(l0): point = 58
   Insn 92(l0): point = 60
   Insn 91(l0): point = 62
   Insn 90(l0): point = 64
   Insn 89(l0): point = 66
   Insn 88(l0): point = 68
   Insn 87(l0): point = 70
   Insn 86(l0): point = 72
   Insn 85(l0): point = 74
   Insn 84(l0): point = 76
   Insn 83(l0): point = 78
   Insn 75(l0): point = 81
   Insn 74(l0): point = 83
   Insn 73(l0): point = 85
   Insn 72(l0): point = 87
   Insn 71(l0): point = 89
   Insn 70(l0): point = 91
   Insn 69(l0): point = 93
   Insn 68(l0): point = 95
   Insn 67(l0): point = 97
   Insn 66(l0): point = 99
   Insn 65(l0): point = 101
   Insn 64(l0): point = 103
   Insn 63(l0): point = 105
   Insn 62(l0): point = 107
   Insn 61(l0): point = 109
   Insn 34(l0): point = 112
   Insn 33(l0): point = 114
   Insn 32(l0): point = 116
   Insn 31(l0): point = 118
   Insn 30(l0): point = 120
   Insn 127(l0): point = 123
   Insn 55(l0): point = 125
   Insn 54(l0): point = 127
   Insn 53(l0): point = 129
   Insn 52(l0): point = 131
   Insn 51(l0): point = 133
   Insn 50(l0): point = 135
   Insn 49(l0): point = 137
   Insn 48(l0): point = 139
   Insn 47(l0): point = 141
   Insn 46(l0): point = 143
   Insn 45(l0): point = 145
   Insn 44(l0): point = 147
   Insn 43(l0): point = 149
   Insn 42(l0): point = 151
   Insn 41(l0): point = 153
   Insn 40(l0): point = 155
   Insn 39(l0): point = 157
   Insn 38(l0): point = 159
   Insn 37(l0): point = 161
   Insn 36(l0): point = 163
   Insn 28(l0): point = 166
   Insn 27(l0): point = 168
   Insn 24(l0): point = 170
   Insn 23(l0): point = 172
   Insn 22(l0): point = 174
   Insn 21(l0): point = 176
   Insn 20(l0): point = 178
   Insn 19(l0): point = 180
   Insn 18(l0): point = 182
   Insn 17(l0): point = 184
   Insn 16(l0): point = 186
   Insn 15(l0): point = 188
   Insn 14(l0): point = 190
   Insn 13(l0): point = 192
   Insn 12(l0): point = 194
   Insn 11(l0): point = 196
   Insn 10(l0): point = 198
   Insn 9(l0): point = 200
   Insn 8(l0): point = 202
   Insn 7(l0): point = 204
   Insn 3(l0): point = 206
   Insn 2(l0): point = 208
 a0(r129): [3..4]
 a1(r128): [5..6]
 a2(r121): [25..42]
 a3(r127): [25..26]
 a4(r126): [27..28]
 a5(r125): [29..30]
 a6(r162): [31..32]
 a7(r124): [31..34]
 a8(r123): [35..36]
 a9(r122): [37..38]
 a10(r161): [39..40]
 a11(r160): [43..44]
 a12(r120): [43..46]
 a13(r119): [47..48]
 a14(r118): [49..50]
 a15(r159): [51..52]
 a16(r112): [55..70]
 a17(r117): [55..56]
 a18(r116): [57..58]
 a19(r115): [59..60]
 a20(r158): [61..62]
 a21(r114): [61..64]
 a22(r113): [65..66]
 a23(r157): [67..68]
 a24(r156): [71..72]
 a25(r111): [71..74]
 a26(r110): [75..76]
 a27(r155): [77..78]
 a28(r109): [12..13]
 a29(r108): [14..15]
 a30(r154): [16..17]
 a31(r152): [84..85]
 a32(r107): [86..89]
 a33(r153): [86..87]
 a34(r106): [90..91]
 a35(r151): [92..93]
 a36(r105): [92..95]
 a37(r149): [98..99]
 a38(r104): [100..103]
 a39(r150): [100..101]
 a40(r103): [104..105]
 a41(r148): [106..107]
 a42(r102): [106..109]
 a43(r146): [128..129]
 a44(r101): [130..133]
 a45(r147): [130..131]
 a46(r100): [134..135]
 a47(r145): [136..137]
 a48(r99): [136..139]
 a49(r98): [140..141]
 a50(r97): [142..143]
 a51(r144): [144..145]
 a52(r142): [148..149]
 a53(r96): [150..153]
 a54(r143): [150..151]
 a55(r95): [154..155]
 a56(r141): [156..157]
 a57(r94): [156..159]
 a58(r93): [160..161]
 a59(r140): [162..163]
 a60(r92): [115..116]
 a61(r91): [117..118]
 a62(r139): [119..120]
 a63(r138): [167..168]
 a64(r90): [169..170]
 a65(r89): [171..172]
 a66(r136): [173..174]
 a67(r135): [177..178]
 a68(r133): [179..186]
 a69(r134): [181..184]
 a70(r88): [187..188]
 a71(r87): [189..190]
 a72(r132): [191..192]
 a73(r131): [195..196]
 a74(r130): [199..200]
Compressing live ranges: from 211 to 120 - 56%
Ranges after the compression:
 a0(r129): [0..1]
 a1(r128): [2..3]
 a2(r121): [10..23]
 a3(r127): [10..11]
 a4(r126): [12..13]
 a5(r125): [14..15]
 a6(r162): [16..17]
 a7(r124): [16..17]
 a8(r123): [18..19]
 a9(r122): [20..21]
 a10(r161): [22..23]
 a11(r160): [24..25]
 a12(r120): [24..25]
 a13(r119): [26..27]
 a14(r118): [28..29]
 a15(r159): [30..31]
 a16(r112): [32..43]
 a17(r117): [32..33]
 a18(r116): [34..35]
 a19(r115): [36..37]
 a20(r158): [38..39]
 a21(r114): [38..39]
 a22(r113): [40..41]
 a23(r157): [42..43]
 a24(r156): [44..45]
 a25(r111): [44..45]
 a26(r110): [46..47]
 a27(r155): [48..49]
 a28(r109): [4..5]
 a29(r108): [6..7]
 a30(r154): [8..9]
 a31(r152): [50..51]
 a32(r107): [52..53]
 a33(r153): [52..53]
 a34(r106): [54..55]
 a35(r151): [56..57]
 a36(r105): [56..57]
 a37(r149): [58..59]
 a38(r104): [60..61]
 a39(r150): [60..61]
 a40(r103): [62..63]
 a41(r148): [64..65]
 a42(r102): [64..65]
 a43(r146): [72..73]
 a44(r101): [74..75]
 a45(r147): [74..75]
 a46(r100): [76..77]
 a47(r145): [78..79]
 a48(r99): [78..79]
 a49(r98): [80..81]
 a50(r97): [82..83]
 a51(r144): [84..85]
 a52(r142): [86..87]
 a53(r96): [88..89]
 a54(r143): [88..89]
 a55(r95): [90..91]
 a56(r141): [92..93]
 a57(r94): [92..93]
 a58(r93): [94..95]
 a59(r140): [96..97]
 a60(r92): [66..67]
 a61(r91): [68..69]
 a62(r139): [70..71]
 a63(r138): [98..99]
 a64(r90): [100..101]
 a65(r89): [102..103]
 a66(r136): [104..105]
 a67(r135): [106..107]
 a68(r133): [108..109]
 a69(r134): [108..109]
 a70(r88): [110..111]
 a71(r87): [112..113]
 a72(r132): [114..115]
 a73(r131): [116..117]
 a74(r130): [118..119]
  regions=1, blocks=9, points=120
    allocnos=75 (big 0), copies=0, conflicts=0, ranges=75
Disposition:
   71:r87  l0     0   70:r88  l0     0   65:r89  l0     0   64:r90  l0     0
   61:r91  l0     0   60:r92  l0     0   58:r93  l0     0   57:r94  l0     1
   55:r95  l0     0   53:r96  l0    21   50:r97  l0     0   49:r98  l0     0
   48:r99  l0     1   46:r100 l0     0   44:r101 l0    21   42:r102 l0    21
   40:r103 l0    21   38:r104 l0    21   36:r105 l0    21   34:r106 l0    21
   32:r107 l0    21   29:r108 l0     0   28:r109 l0     0   26:r110 l0     0
   25:r111 l0     1   16:r112 l0     0   22:r113 l0     1   21:r114 l0     2
   19:r115 l0     1   18:r116 l0    21   17:r117 l0    21   14:r118 l0     0
   13:r119 l0     0   12:r120 l0     1    2:r121 l0     0    9:r122 l0     1
    8:r123 l0     1    7:r124 l0     2    5:r125 l0     1    4:r126 l0    21
    3:r127 l0    21    1:r128 l0     0    0:r129 l0     0   74:r130 l0    21
   73:r131 l0    21   72:r132 l0     0   68:r133 l0     0   69:r134 l0     1
   67:r135 l0     0   66:r136 l0     0   63:r138 l0     0   62:r139 l0     0
   59:r140 l0     0   56:r141 l0     0   52:r142 l0    21   54:r143 l0    22
   51:r144 l0     0   47:r145 l0     0   43:r146 l0    21   45:r147 l0    22
   41:r148 l0    22   37:r149 l0    21   39:r150 l0    22   35:r151 l0    22
   31:r152 l0    21   33:r153 l0    22   30:r154 l0     0   27:r155 l0     0
   24:r156 l0     0   23:r157 l0     1   20:r158 l0     1   15:r159 l0     0
   11:r160 l0     0   10:r161 l0     1    6:r162 l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int baseline_correct(float*, Procpar_info*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u} r17={27d,3u} r20={1d,52u,6e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u,1e} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u,1e} r112={1d,1u} r113={1d,1u} r114={1d,1u,1e} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u,1e} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u,1e} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={2d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} 
;;    total ref usage 295{123d,160u,12e} in 102{102 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 130 131 132 133 134 135 136 138
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) ge2fitman_preproc.cpp:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])
        (reg:DI 4 si [ procpar_info ])) ge2fitman_preproc.cpp:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ procpar_info ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:212 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:212 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 130)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:213 129 {*movsf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 130)) ge2fitman_preproc.cpp:213 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 130)
        (nil)))
(insn 11 10 12 2 (set (reg:SF 131)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:214 129 {*movsf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 131)) ge2fitman_preproc.cpp:214 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 131)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:216 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 87 [ D.26013 ])
        (mem/j:SI (plus:DI (reg/f:DI 132)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:216 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:SI 88 [ D.26013 ])
                (ashift:SI (reg:SI 87 [ D.26013 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:216 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26013 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 16 15 17 2 (set (reg:SI 133)
        (reg:SI 88 [ D.26013 ])) ge2fitman_preproc.cpp:216 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26013 ])
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg:SI 134)
                (plus:SI (reg:SI 133)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:216 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 133)
            (const_int 0 [0]))) ge2fitman_preproc.cpp:216 3 {*cmpsi_ccno_1}
     (nil))
(insn 19 18 20 2 (set (reg:SI 133)
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 134)
            (reg:SI 133))) ge2fitman_preproc.cpp:216 953 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 134)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 135)
                (ashiftrt:SI (reg:SI 133)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:216 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 133)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])
        (reg:SI 135)) ge2fitman_preproc.cpp:216 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:218 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 89 [ D.26013 ])
        (mem/j:SI (plus:DI (reg/f:DI 136)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (nil)))
(insn 24 23 27 2 (parallel [
            (set (reg:SI 90 [ D.26013 ])
                (ashift:SI (reg:SI 89 [ D.26013 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:218 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.26013 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 24 28 2 (parallel [
            (set (reg:SI 138)
                (minus:SI (reg:SI 90 [ D.26013 ])
                    (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:218 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.26013 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 56 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (reg:SI 138)) ge2fitman_preproc.cpp:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 92 139
(code_label 56 28 29 3 58 "" [1 uses])
(note 29 56 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:218 89 {*movdi_internal}
     (nil))
(insn 31 30 32 3 (set (reg:SI 91 [ D.26013 ])
        (mem/j:SI (plus:DI (reg/f:DI 139)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:218 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139)
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:SI 92 [ D.26013 ])
                (ashift:SI (reg:SI 91 [ D.26013 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:218 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.26013 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.26013 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) ge2fitman_preproc.cpp:218 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.26013 ])
        (nil)))
(jump_insn 34 33 35 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) ge2fitman_preproc.cpp:218 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 59)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 94 95 96 97 98 99 100 101 140 141 142 143 144 145 146 147
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:220 90 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 93 [ D.26014 ])
        (sign_extend:DI (reg:SI 140))) ge2fitman_preproc.cpp:220 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:DI 94 [ D.26014 ])
                (ashift:DI (reg:DI 93 [ D.26014 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:220 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.26014 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:220 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 95 [ D.26015 ])
                (plus:DI (reg:DI 94 [ D.26014 ])
                    (reg/f:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:220 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (expr_list:REG_DEAD (reg:DI 94 [ D.26014 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 94 [ D.26014 ]))
                    (nil))))))
(insn 41 40 42 4 (set (reg:SF 96 [ D.26016 ])
        (mem:SF (reg/f:DI 95 [ D.26015 ]) [0 *_23+0 S4 A32])) ge2fitman_preproc.cpp:220 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.26015 ])
        (nil)))
(insn 42 41 43 4 (set (reg:SF 143)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])) ge2fitman_preproc.cpp:220 129 {*movsf_internal}
     (nil))
(insn 43 42 44 4 (set (reg:SF 142)
        (plus:SF (reg:SF 143)
            (reg:SF 96 [ D.26016 ]))) ge2fitman_preproc.cpp:220 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 143)
        (expr_list:REG_DEAD (reg:SF 96 [ D.26016 ])
            (nil))))
(insn 44 43 45 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 142)) ge2fitman_preproc.cpp:220 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 142)
        (nil)))
(insn 45 44 46 4 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:221 90 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 97 [ D.26017 ])
        (sign_extend:DI (reg:SI 144))) ge2fitman_preproc.cpp:221 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 98 [ D.26017 ])
                (plus:DI (reg:DI 97 [ D.26017 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:221 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 99 [ D.26017 ])
                (ashift:DI (reg:DI 98 [ D.26017 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:221 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 4 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:221 89 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 100 [ D.26015 ])
                (plus:DI (reg:DI 99 [ D.26017 ])
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:221 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (expr_list:REG_DEAD (reg:DI 99 [ D.26017 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 99 [ D.26017 ]))
                    (nil))))))
(insn 51 50 52 4 (set (reg:SF 101 [ D.26016 ])
        (mem:SF (reg/f:DI 100 [ D.26015 ]) [0 *_29+0 S4 A32])) ge2fitman_preproc.cpp:221 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.26015 ])
        (nil)))
(insn 52 51 53 4 (set (reg:SF 147)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])) ge2fitman_preproc.cpp:221 129 {*movsf_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SF 146)
        (plus:SF (reg:SF 147)
            (reg:SF 101 [ D.26016 ]))) ge2fitman_preproc.cpp:221 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 147)
        (expr_list:REG_DEAD (reg:SF 101 [ D.26016 ])
            (nil))))
(insn 54 53 55 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 146)) ge2fitman_preproc.cpp:221 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 146)
        (nil)))
(insn 55 54 127 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:218 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 127 55 128 4 (set (pc)
        (label_ref 56)) ge2fitman_preproc.cpp:218 654 {jump}
     (nil)
 -> 56)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 128 127 59)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 102 103 104 105 106 107 148 149 150 151 152 153
(code_label 59 128 60 5 57 "" [1 uses])
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (set (reg:DF 102 [ D.26018 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32]))) ge2fitman_preproc.cpp:224 201 {*floatsidf2_sse}
     (nil))
(insn 62 61 63 5 (set (reg:DF 148)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:224 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 63 62 64 5 (set (reg:DF 103 [ D.26018 ])
        (div:DF (reg:DF 102 [ D.26018 ])
            (reg:DF 148))) ge2fitman_preproc.cpp:224 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 148)
        (expr_list:REG_DEAD (reg:DF 102 [ D.26018 ])
            (nil))))
(insn 64 63 65 5 (set (reg:SF 104 [ D.26016 ])
        (float_truncate:SF (reg:DF 103 [ D.26018 ]))) ge2fitman_preproc.cpp:224 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 103 [ D.26018 ])
        (nil)))
(insn 65 64 66 5 (set (reg:SF 150)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])) ge2fitman_preproc.cpp:224 129 {*movsf_internal}
     (nil))
(insn 66 65 67 5 (set (reg:SF 149)
        (div:SF (reg:SF 150)
            (reg:SF 104 [ D.26016 ]))) ge2fitman_preproc.cpp:224 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 150)
        (expr_list:REG_DEAD (reg:SF 104 [ D.26016 ])
            (nil))))
(insn 67 66 68 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32])
        (reg:SF 149)) ge2fitman_preproc.cpp:224 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 149)
        (nil)))
(insn 68 67 69 5 (set (reg:DF 105 [ D.26018 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 last_eighth+0 S4 A32]))) ge2fitman_preproc.cpp:225 201 {*floatsidf2_sse}
     (nil))
(insn 69 68 70 5 (set (reg:DF 151)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:225 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 70 69 71 5 (set (reg:DF 106 [ D.26018 ])
        (div:DF (reg:DF 105 [ D.26018 ])
            (reg:DF 151))) ge2fitman_preproc.cpp:225 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 151)
        (expr_list:REG_DEAD (reg:DF 105 [ D.26018 ])
            (nil))))
(insn 71 70 72 5 (set (reg:SF 107 [ D.26016 ])
        (float_truncate:SF (reg:DF 106 [ D.26018 ]))) ge2fitman_preproc.cpp:225 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 106 [ D.26018 ])
        (nil)))
(insn 72 71 73 5 (set (reg:SF 153)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])) ge2fitman_preproc.cpp:225 129 {*movsf_internal}
     (nil))
(insn 73 72 74 5 (set (reg:SF 152)
        (div:SF (reg:SF 153)
            (reg:SF 107 [ D.26016 ]))) ge2fitman_preproc.cpp:225 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 153)
        (expr_list:REG_DEAD (reg:SF 107 [ D.26016 ])
            (nil))))
(insn 74 73 75 5 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32])
        (reg:SF 152)) ge2fitman_preproc.cpp:225 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 152)
        (nil)))
(insn 75 74 112 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:227 90 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 109 154
(code_label 112 75 76 6 60 "" [1 uses])
(note 76 112 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:227 89 {*movdi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:SI 108 [ D.26013 ])
        (mem/j:SI (plus:DI (reg/f:DI 154)
                (const_int 324 [0x144])) [0 procpar_info_11(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:227 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154)
        (nil)))
(insn 79 78 80 6 (parallel [
            (set (reg:SI 109 [ D.26013 ])
                (ashift:SI (reg:SI 108 [ D.26013 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:227 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.26013 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ D.26013 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32]))) ge2fitman_preproc.cpp:227 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.26013 ])
        (nil)))
(jump_insn 81 80 82 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) ge2fitman_preproc.cpp:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 115)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 155 156 157 158 159 160 161 162
(note 82 81 83 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 7 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:229 90 {*movsi_internal}
     (nil))
(insn 84 83 85 7 (set (reg:DI 110 [ D.26014 ])
        (sign_extend:DI (reg:SI 155))) ge2fitman_preproc.cpp:229 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155)
        (nil)))
(insn 85 84 86 7 (parallel [
            (set (reg:DI 111 [ D.26014 ])
                (ashift:DI (reg:DI 110 [ D.26014 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:229 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ D.26014 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 7 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:229 89 {*movdi_internal}
     (nil))
(insn 87 86 88 7 (parallel [
            (set (reg/f:DI 112 [ D.26015 ])
                (plus:DI (reg:DI 111 [ D.26014 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:229 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 156)
        (expr_list:REG_DEAD (reg:DI 111 [ D.26014 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 111 [ D.26014 ]))
                    (nil))))))
(insn 88 87 89 7 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:229 90 {*movsi_internal}
     (nil))
(insn 89 88 90 7 (set (reg:DI 113 [ D.26014 ])
        (sign_extend:DI (reg:SI 157))) ge2fitman_preproc.cpp:229 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 90 89 91 7 (parallel [
            (set (reg:DI 114 [ D.26014 ])
                (ashift:DI (reg:DI 113 [ D.26014 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:229 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 113 [ D.26014 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 7 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:229 89 {*movdi_internal}
     (nil))
(insn 92 91 93 7 (parallel [
            (set (reg/f:DI 115 [ D.26015 ])
                (plus:DI (reg:DI 114 [ D.26014 ])
                    (reg/f:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:229 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:DI 114 [ D.26014 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 114 [ D.26014 ]))
                    (nil))))))
(insn 93 92 94 7 (set (reg:SF 116 [ D.26016 ])
        (mem:SF (reg/f:DI 115 [ D.26015 ]) [0 *_49+0 S4 A32])) ge2fitman_preproc.cpp:229 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.26015 ])
        (nil)))
(insn 94 93 95 7 (set (reg:SF 117 [ D.26016 ])
        (minus:SF (reg:SF 116 [ D.26016 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 average_offset_real+0 S4 A32]))) ge2fitman_preproc.cpp:229 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 116 [ D.26016 ])
        (nil)))
(insn 95 94 96 7 (set (mem:SF (reg/f:DI 112 [ D.26015 ]) [0 *_46+0 S4 A32])
        (reg:SF 117 [ D.26016 ])) ge2fitman_preproc.cpp:229 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 117 [ D.26016 ])
        (expr_list:REG_DEAD (reg/f:DI 112 [ D.26015 ])
            (nil))))
(insn 96 95 97 7 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:230 90 {*movsi_internal}
     (nil))
(insn 97 96 98 7 (set (reg:DI 118 [ D.26017 ])
        (sign_extend:DI (reg:SI 159))) ge2fitman_preproc.cpp:230 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 159)
        (nil)))
(insn 98 97 99 7 (parallel [
            (set (reg:DI 119 [ D.26017 ])
                (plus:DI (reg:DI 118 [ D.26017 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 118 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 7 (parallel [
            (set (reg:DI 120 [ D.26017 ])
                (ashift:DI (reg:DI 119 [ D.26017 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 7 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:230 89 {*movdi_internal}
     (nil))
(insn 101 100 102 7 (parallel [
            (set (reg/f:DI 121 [ D.26015 ])
                (plus:DI (reg:DI 120 [ D.26017 ])
                    (reg/f:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (expr_list:REG_DEAD (reg:DI 120 [ D.26017 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 120 [ D.26017 ]))
                    (nil))))))
(insn 102 101 103 7 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:230 90 {*movsi_internal}
     (nil))
(insn 103 102 104 7 (set (reg:DI 122 [ D.26017 ])
        (sign_extend:DI (reg:SI 161))) ge2fitman_preproc.cpp:230 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161)
        (nil)))
(insn 104 103 105 7 (parallel [
            (set (reg:DI 123 [ D.26017 ])
                (plus:DI (reg:DI 122 [ D.26017 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 7 (parallel [
            (set (reg:DI 124 [ D.26017 ])
                (ashift:DI (reg:DI 123 [ D.26017 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.26017 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 7 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:230 89 {*movdi_internal}
     (nil))
(insn 107 106 108 7 (parallel [
            (set (reg/f:DI 125 [ D.26015 ])
                (plus:DI (reg:DI 124 [ D.26017 ])
                    (reg/f:DI 162)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 162)
        (expr_list:REG_DEAD (reg:DI 124 [ D.26017 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 data+0 S8 A64])
                        (reg:DI 124 [ D.26017 ]))
                    (nil))))))
(insn 108 107 109 7 (set (reg:SF 126 [ D.26016 ])
        (mem:SF (reg/f:DI 125 [ D.26015 ]) [0 *_60+0 S4 A32])) ge2fitman_preproc.cpp:230 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.26015 ])
        (nil)))
(insn 109 108 110 7 (set (reg:SF 127 [ D.26016 ])
        (minus:SF (reg:SF 126 [ D.26016 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 average_offset_imag+0 S4 A32]))) ge2fitman_preproc.cpp:230 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 126 [ D.26016 ])
        (nil)))
(insn 110 109 111 7 (set (mem:SF (reg/f:DI 121 [ D.26015 ]) [0 *_56+0 S4 A32])
        (reg:SF 127 [ D.26016 ])) ge2fitman_preproc.cpp:230 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 127 [ D.26016 ])
        (expr_list:REG_DEAD (reg/f:DI 121 [ D.26015 ])
            (nil))))
(insn 111 110 129 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:227 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 129 111 130 7 (set (pc)
        (label_ref 112)) ge2fitman_preproc.cpp:227 654 {jump}
     (nil)
 -> 112)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 130 129 115)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 128 129
(code_label 115 130 116 8 59 "" [1 uses])
(note 116 115 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 120 8 (set (reg:SI 128 [ D.26013 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:233 90 {*movsi_internal}
     (nil))
(insn 120 117 124 8 (set (reg:SI 129 [ <retval> ])
        (reg:SI 128 [ D.26013 ])) ge2fitman_preproc.cpp:233 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128 [ D.26013 ])
        (nil)))
(insn 124 120 125 8 (set (reg/i:SI 0 ax)
        (reg:SI 129 [ <retval> ])) ge2fitman_preproc.cpp:234 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129 [ <retval> ])
        (nil)))
(insn 125 124 0 8 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:234 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int ecc_correction(float*, float*, Procpar_info*, Preprocess*) (_Z14ecc_correctionPfS_P12Procpar_infoP10Preprocess, funcdef_no=1024, decl_uid=24423, cgraph_uid=229, symbol_order=230)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 199.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r243: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r243,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r240,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a28 (r237,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a39 (r234,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a48 (r227,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a64 (r222,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a98 (r213,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a114 (r208,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a151 (r198,l0) best SSE_REGS, allocno SSE_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a152 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a153 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a154 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a155 (r194,l0) best SSE_REGS, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a156 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r192,l0) best AREG, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r188,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r181,l0) best SSE_REGS, allocno SSE_REGS
    r180: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r180,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r179: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r179,l0) best SSE_REGS, allocno SSE_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r175,l0) best SSE_REGS, allocno SSE_REGS
    r174: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a27 (r173,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a38 (r165,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a49 (r160,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a58 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a65 (r149,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a66 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a68 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a69 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a67 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a92 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a99 (r124,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a101 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a100 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a108 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a115 (r113,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a116 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a127 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a117 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a134 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a136 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a135 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a142 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r190,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r189,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r187,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r188,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r243,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r182,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r181,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r179,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r180,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r240,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r175,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r174,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r172,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r173,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a28(r237,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a29(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r167,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a36(r166,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r164,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r165,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a39(r234,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a40(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r230,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a45(r231,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a46(r228,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a47(r229,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a48(r227,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a49(r160,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a50(r154,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a51(r159,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a52(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a53(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a55(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a56(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a58(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a59(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a60(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a62(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a63(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a64(r222,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a65(r149,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a66(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a67(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a68(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a69(r141,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a70(r146,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a71(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a72(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a73(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a74(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a75(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r140,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a78(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a79(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a80(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a81(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a82(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a85(r129,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a86(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a87(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a88(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a89(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a90(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a91(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a92(r128,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a93(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a94(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a95(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a96(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r213,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a99(r124,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a100(r118,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a101(r123,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a102(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a103(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a104(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a106(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r117,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a109(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a110(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a111(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a112(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a113(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r208,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a115(r113,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a116(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a117(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a118(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a119(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a120(r110,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a121(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a122(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a123(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a124(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a125(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r104,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a128(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a129(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a130(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a131(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a132(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a135(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a136(r97,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a137(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a138(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a139(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a140(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a141(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a142(r92,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a143(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a144(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a145(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a146(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a147(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a148(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a149(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a150(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a151(r198,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a152(r197,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a153(r196,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a154(r195,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a155(r194,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a156(r193,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 218(l0): point = 0
   Insn 217(l0): point = 2
   Insn 213(l0): point = 4
   Insn 210(l0): point = 6
   Insn 28(l0): point = 9
   Insn 27(l0): point = 11
   Insn 26(l0): point = 13
   Insn 25(l0): point = 15
   Insn 24(l0): point = 17
   Insn 220(l0): point = 20
   Insn 204(l0): point = 22
   Insn 203(l0): point = 24
   Insn 202(l0): point = 26
   Insn 201(l0): point = 28
   Insn 200(l0): point = 30
   Insn 199(l0): point = 32
   Insn 198(l0): point = 34
   Insn 197(l0): point = 36
   Insn 196(l0): point = 38
   Insn 195(l0): point = 40
   Insn 194(l0): point = 42
   Insn 193(l0): point = 44
   Insn 192(l0): point = 46
   Insn 191(l0): point = 48
   Insn 190(l0): point = 50
   Insn 189(l0): point = 52
   Insn 188(l0): point = 54
   Insn 187(l0): point = 56
   Insn 186(l0): point = 58
   Insn 185(l0): point = 60
   Insn 184(l0): point = 62
   Insn 183(l0): point = 64
   Insn 182(l0): point = 66
   Insn 181(l0): point = 68
   Insn 180(l0): point = 70
   Insn 179(l0): point = 72
   Insn 178(l0): point = 74
   Insn 177(l0): point = 76
   Insn 176(l0): point = 78
   Insn 175(l0): point = 80
   Insn 174(l0): point = 82
   Insn 173(l0): point = 84
   Insn 172(l0): point = 86
   Insn 171(l0): point = 88
   Insn 170(l0): point = 90
   Insn 169(l0): point = 92
   Insn 168(l0): point = 94
   Insn 167(l0): point = 96
   Insn 166(l0): point = 98
   Insn 165(l0): point = 100
   Insn 164(l0): point = 102
   Insn 163(l0): point = 104
   Insn 162(l0): point = 106
   Insn 161(l0): point = 108
   Insn 160(l0): point = 110
   Insn 159(l0): point = 112
   Insn 158(l0): point = 114
   Insn 157(l0): point = 116
   Insn 156(l0): point = 118
   Insn 155(l0): point = 120
   Insn 154(l0): point = 122
   Insn 153(l0): point = 124
   Insn 152(l0): point = 126
   Insn 151(l0): point = 128
   Insn 150(l0): point = 130
   Insn 149(l0): point = 132
   Insn 148(l0): point = 134
   Insn 147(l0): point = 136
   Insn 146(l0): point = 138
   Insn 145(l0): point = 140
   Insn 144(l0): point = 142
   Insn 143(l0): point = 144
   Insn 142(l0): point = 146
   Insn 141(l0): point = 148
   Insn 140(l0): point = 150
   Insn 139(l0): point = 152
   Insn 138(l0): point = 154
   Insn 137(l0): point = 156
   Insn 136(l0): point = 158
   Insn 135(l0): point = 160
   Insn 134(l0): point = 162
   Insn 133(l0): point = 164
   Insn 132(l0): point = 166
   Insn 131(l0): point = 168
   Insn 130(l0): point = 170
   Insn 129(l0): point = 172
   Insn 128(l0): point = 174
   Insn 127(l0): point = 176
   Insn 126(l0): point = 178
   Insn 125(l0): point = 180
   Insn 124(l0): point = 182
   Insn 123(l0): point = 184
   Insn 122(l0): point = 186
   Insn 121(l0): point = 188
   Insn 120(l0): point = 190
   Insn 119(l0): point = 192
   Insn 118(l0): point = 194
   Insn 117(l0): point = 196
   Insn 116(l0): point = 198
   Insn 115(l0): point = 200
   Insn 114(l0): point = 202
   Insn 113(l0): point = 204
   Insn 112(l0): point = 206
   Insn 111(l0): point = 208
   Insn 110(l0): point = 210
   Insn 109(l0): point = 212
   Insn 108(l0): point = 214
   Insn 107(l0): point = 216
   Insn 106(l0): point = 218
   Insn 105(l0): point = 220
   Insn 104(l0): point = 222
   Insn 103(l0): point = 224
   Insn 102(l0): point = 226
   Insn 101(l0): point = 228
   Insn 100(l0): point = 230
   Insn 99(l0): point = 232
   Insn 98(l0): point = 234
   Insn 97(l0): point = 236
   Insn 96(l0): point = 238
   Insn 95(l0): point = 240
   Insn 94(l0): point = 242
   Insn 93(l0): point = 244
   Insn 92(l0): point = 246
   Insn 91(l0): point = 248
   Insn 90(l0): point = 250
   Insn 89(l0): point = 252
   Insn 88(l0): point = 254
   Insn 87(l0): point = 256
   Insn 86(l0): point = 258
   Insn 85(l0): point = 260
   Insn 84(l0): point = 262
   Insn 83(l0): point = 264
   Insn 82(l0): point = 266
   Insn 81(l0): point = 268
   Insn 80(l0): point = 270
   Insn 79(l0): point = 272
   Insn 78(l0): point = 274
   Insn 77(l0): point = 276
   Insn 76(l0): point = 278
   Insn 75(l0): point = 280
   Insn 74(l0): point = 282
   Insn 73(l0): point = 284
   Insn 72(l0): point = 286
   Insn 71(l0): point = 288
   Insn 70(l0): point = 290
   Insn 69(l0): point = 292
   Insn 68(l0): point = 294
   Insn 67(l0): point = 296
   Insn 66(l0): point = 298
   Insn 65(l0): point = 300
   Insn 64(l0): point = 302
   Insn 63(l0): point = 304
   Insn 62(l0): point = 306
   Insn 61(l0): point = 308
   Insn 60(l0): point = 310
   Insn 59(l0): point = 312
   Insn 58(l0): point = 314
   Insn 57(l0): point = 316
   Insn 56(l0): point = 318
   Insn 55(l0): point = 320
   Insn 54(l0): point = 322
   Insn 53(l0): point = 324
   Insn 52(l0): point = 326
   Insn 51(l0): point = 328
   Insn 50(l0): point = 330
   Insn 49(l0): point = 332
   Insn 48(l0): point = 334
   Insn 47(l0): point = 336
   Insn 46(l0): point = 338
   Insn 45(l0): point = 340
   Insn 44(l0): point = 342
   Insn 43(l0): point = 344
   Insn 42(l0): point = 346
   Insn 41(l0): point = 348
   Insn 40(l0): point = 350
   Insn 39(l0): point = 352
   Insn 38(l0): point = 354
   Insn 37(l0): point = 356
   Insn 36(l0): point = 358
   Insn 35(l0): point = 360
   Insn 34(l0): point = 362
   Insn 33(l0): point = 364
   Insn 32(l0): point = 366
   Insn 31(l0): point = 368
   Insn 30(l0): point = 370
   Insn 22(l0): point = 373
   Insn 21(l0): point = 375
   Insn 20(l0): point = 377
   Insn 19(l0): point = 379
   Insn 18(l0): point = 381
   Insn 17(l0): point = 383
   Insn 16(l0): point = 385
   Insn 15(l0): point = 387
   Insn 14(l0): point = 389
   Insn 13(l0): point = 391
   Insn 12(l0): point = 393
   Insn 11(l0): point = 395
   Insn 10(l0): point = 397
   Insn 9(l0): point = 399
   Insn 5(l0): point = 401
   Insn 4(l0): point = 403
   Insn 3(l0): point = 405
   Insn 2(l0): point = 407
 a0(r192): [3..4]
 a1(r191): [5..6]
 a2(r186): [25..40]
 a3(r190): [25..26]
 a4(r189): [27..28]
 a5(r187): [27..38]
 a6(r188): [29..30]
 a7(r243): [35..36]
 a8(r242): [41..42]
 a9(r185): [41..44]
 a10(r184): [45..46]
 a11(r183): [47..48]
 a12(r241): [49..50]
 a13(r178): [53..68]
 a14(r182): [53..54]
 a15(r181): [55..56]
 a16(r179): [55..66]
 a17(r180): [57..58]
 a18(r240): [63..64]
 a19(r239): [69..70]
 a20(r177): [69..72]
 a21(r176): [73..74]
 a22(r238): [75..76]
 a23(r171): [79..94]
 a24(r175): [79..80]
 a25(r174): [81..82]
 a26(r172): [81..92]
 a27(r173): [83..84]
 a28(r237): [89..90]
 a29(r236): [95..96]
 a30(r170): [95..98]
 a31(r169): [99..100]
 a32(r168): [101..102]
 a33(r235): [103..104]
 a34(r163): [107..122]
 a35(r167): [107..108]
 a36(r166): [109..110]
 a37(r164): [109..120]
 a38(r165): [111..112]
 a39(r234): [117..118]
 a40(r233): [123..124]
 a41(r162): [123..126]
 a42(r161): [127..128]
 a43(r232): [129..130]
 a44(r230): [133..134]
 a45(r231): [135..136]
 a46(r228): [139..140]
 a47(r229): [141..142]
 a48(r227): [145..146]
 a49(r160): [151..154]
 a50(r154): [153..170]
 a51(r159): [155..156]
 a52(r158): [157..158]
 a53(r226): [159..160]
 a54(r157): [159..162]
 a55(r156): [163..164]
 a56(r155): [165..166]
 a57(r225): [167..168]
 a58(r153): [171..172]
 a59(r152): [173..174]
 a60(r224): [175..176]
 a61(r151): [175..178]
 a62(r150): [179..180]
 a63(r223): [181..182]
 a64(r222): [185..186]
 a65(r149): [191..192]
 a66(r148): [193..194]
 a67(r135): [193..228]
 a68(r147): [195..196]
 a69(r141): [195..212]
 a70(r146): [197..198]
 a71(r145): [199..200]
 a72(r221): [201..202]
 a73(r144): [201..204]
 a74(r143): [205..206]
 a75(r142): [207..208]
 a76(r220): [209..210]
 a77(r140): [213..214]
 a78(r139): [215..216]
 a79(r219): [217..218]
 a80(r138): [217..220]
 a81(r137): [221..222]
 a82(r136): [223..224]
 a83(r218): [225..226]
 a84(r134): [229..230]
 a85(r129): [229..244]
 a86(r133): [231..232]
 a87(r132): [233..234]
 a88(r217): [235..236]
 a89(r131): [235..238]
 a90(r130): [239..240]
 a91(r216): [241..242]
 a92(r128): [245..246]
 a93(r127): [247..248]
 a94(r215): [249..250]
 a95(r126): [249..252]
 a96(r125): [253..254]
 a97(r214): [255..256]
 a98(r213): [259..260]
 a99(r124): [265..268]
 a100(r118): [267..284]
 a101(r123): [269..270]
 a102(r122): [271..272]
 a103(r212): [273..274]
 a104(r121): [273..276]
 a105(r120): [277..278]
 a106(r119): [279..280]
 a107(r211): [281..282]
 a108(r117): [285..286]
 a109(r116): [287..288]
 a110(r210): [289..290]
 a111(r115): [289..292]
 a112(r114): [293..294]
 a113(r209): [295..296]
 a114(r208): [299..300]
 a115(r113): [305..306]
 a116(r112): [307..308]
 a117(r99): [307..342]
 a118(r111): [309..310]
 a119(r105): [309..326]
 a120(r110): [311..312]
 a121(r109): [313..314]
 a122(r207): [315..316]
 a123(r108): [315..318]
 a124(r107): [319..320]
 a125(r106): [321..322]
 a126(r206): [323..324]
 a127(r104): [327..328]
 a128(r103): [329..330]
 a129(r205): [331..332]
 a130(r102): [331..334]
 a131(r101): [335..336]
 a132(r100): [337..338]
 a133(r204): [339..340]
 a134(r98): [343..344]
 a135(r93): [343..358]
 a136(r97): [345..346]
 a137(r96): [347..348]
 a138(r203): [349..350]
 a139(r95): [349..352]
 a140(r94): [353..354]
 a141(r202): [355..356]
 a142(r92): [359..360]
 a143(r91): [361..362]
 a144(r201): [363..364]
 a145(r90): [363..366]
 a146(r89): [367..368]
 a147(r200): [369..370]
 a148(r88): [12..13]
 a149(r87): [14..15]
 a150(r199): [16..17]
 a151(r198): [376..377]
 a152(r197): [380..381]
 a153(r196): [384..385]
 a154(r195): [388..389]
 a155(r194): [392..393]
 a156(r193): [396..397]
Compressing live ranges: from 410 to 250 - 60%
Ranges after the compression:
 a0(r192): [0..1]
 a1(r191): [2..3]
 a2(r186): [10..17]
 a3(r190): [10..11]
 a4(r189): [12..13]
 a5(r187): [12..17]
 a6(r188): [14..15]
 a7(r243): [16..17]
 a8(r242): [18..19]
 a9(r185): [18..19]
 a10(r184): [20..21]
 a11(r183): [22..23]
 a12(r241): [24..25]
 a13(r178): [26..33]
 a14(r182): [26..27]
 a15(r181): [28..29]
 a16(r179): [28..33]
 a17(r180): [30..31]
 a18(r240): [32..33]
 a19(r239): [34..35]
 a20(r177): [34..35]
 a21(r176): [36..37]
 a22(r238): [38..39]
 a23(r171): [40..47]
 a24(r175): [40..41]
 a25(r174): [42..43]
 a26(r172): [42..47]
 a27(r173): [44..45]
 a28(r237): [46..47]
 a29(r236): [48..49]
 a30(r170): [48..49]
 a31(r169): [50..51]
 a32(r168): [52..53]
 a33(r235): [54..55]
 a34(r163): [56..63]
 a35(r167): [56..57]
 a36(r166): [58..59]
 a37(r164): [58..63]
 a38(r165): [60..61]
 a39(r234): [62..63]
 a40(r233): [64..65]
 a41(r162): [64..65]
 a42(r161): [66..67]
 a43(r232): [68..69]
 a44(r230): [70..71]
 a45(r231): [72..73]
 a46(r228): [74..75]
 a47(r229): [76..77]
 a48(r227): [78..79]
 a49(r160): [80..81]
 a50(r154): [80..93]
 a51(r159): [82..83]
 a52(r158): [84..85]
 a53(r226): [86..87]
 a54(r157): [86..87]
 a55(r156): [88..89]
 a56(r155): [90..91]
 a57(r225): [92..93]
 a58(r153): [94..95]
 a59(r152): [96..97]
 a60(r224): [98..99]
 a61(r151): [98..99]
 a62(r150): [100..101]
 a63(r223): [102..103]
 a64(r222): [104..105]
 a65(r149): [106..107]
 a66(r148): [108..109]
 a67(r135): [108..135]
 a68(r147): [110..111]
 a69(r141): [110..123]
 a70(r146): [112..113]
 a71(r145): [114..115]
 a72(r221): [116..117]
 a73(r144): [116..117]
 a74(r143): [118..119]
 a75(r142): [120..121]
 a76(r220): [122..123]
 a77(r140): [124..125]
 a78(r139): [126..127]
 a79(r219): [128..129]
 a80(r138): [128..129]
 a81(r137): [130..131]
 a82(r136): [132..133]
 a83(r218): [134..135]
 a84(r134): [136..137]
 a85(r129): [136..147]
 a86(r133): [138..139]
 a87(r132): [140..141]
 a88(r217): [142..143]
 a89(r131): [142..143]
 a90(r130): [144..145]
 a91(r216): [146..147]
 a92(r128): [148..149]
 a93(r127): [150..151]
 a94(r215): [152..153]
 a95(r126): [152..153]
 a96(r125): [154..155]
 a97(r214): [156..157]
 a98(r213): [158..159]
 a99(r124): [160..161]
 a100(r118): [160..173]
 a101(r123): [162..163]
 a102(r122): [164..165]
 a103(r212): [166..167]
 a104(r121): [166..167]
 a105(r120): [168..169]
 a106(r119): [170..171]
 a107(r211): [172..173]
 a108(r117): [174..175]
 a109(r116): [176..177]
 a110(r210): [178..179]
 a111(r115): [178..179]
 a112(r114): [180..181]
 a113(r209): [182..183]
 a114(r208): [184..185]
 a115(r113): [186..187]
 a116(r112): [188..189]
 a117(r99): [188..215]
 a118(r111): [190..191]
 a119(r105): [190..203]
 a120(r110): [192..193]
 a121(r109): [194..195]
 a122(r207): [196..197]
 a123(r108): [196..197]
 a124(r107): [198..199]
 a125(r106): [200..201]
 a126(r206): [202..203]
 a127(r104): [204..205]
 a128(r103): [206..207]
 a129(r205): [208..209]
 a130(r102): [208..209]
 a131(r101): [210..211]
 a132(r100): [212..213]
 a133(r204): [214..215]
 a134(r98): [216..217]
 a135(r93): [216..227]
 a136(r97): [218..219]
 a137(r96): [220..221]
 a138(r203): [222..223]
 a139(r95): [222..223]
 a140(r94): [224..225]
 a141(r202): [226..227]
 a142(r92): [228..229]
 a143(r91): [230..231]
 a144(r201): [232..233]
 a145(r90): [232..233]
 a146(r89): [234..235]
 a147(r200): [236..237]
 a148(r88): [4..5]
 a149(r87): [6..7]
 a150(r199): [8..9]
 a151(r198): [238..239]
 a152(r197): [240..241]
 a153(r196): [242..243]
 a154(r195): [244..245]
 a155(r194): [246..247]
 a156(r193): [248..249]
  pref0:a7(r243)<-hr21@1
  pref1:a18(r240)<-hr21@1
  pref2:a28(r237)<-hr21@1
  pref3:a39(r234)<-hr21@1
  pref4:a48(r227)<-hr21@1
  pref5:a64(r222)<-hr21@1
  pref6:a98(r213)<-hr21@1
  pref7:a114(r208)<-hr21@1
  regions=1, blocks=6, points=250
    allocnos=157 (big 0), copies=0, conflicts=0, ranges=157
Disposition:
  149:r87  l0     0  148:r88  l0     0  146:r89  l0     0  145:r90  l0     1
  143:r91  l0     0  142:r92  l0    21  135:r93  l0    22  140:r94  l0     0
  139:r95  l0     1  137:r96  l0     0  136:r97  l0    21  134:r98  l0    21
  117:r99  l0    22  132:r100 l0     0  131:r101 l0     0  130:r102 l0     1
  128:r103 l0     0  127:r104 l0    21  119:r105 l0    23  125:r106 l0     0
  124:r107 l0     0  123:r108 l0     1  121:r109 l0     0  120:r110 l0    21
  118:r111 l0    21  116:r112 l0    21  115:r113 l0    21  112:r114 l0     0
  111:r115 l0     1  109:r116 l0     0  108:r117 l0    21  100:r118 l0    22
  106:r119 l0     0  105:r120 l0     0  104:r121 l0     1  102:r122 l0     0
  101:r123 l0    21   99:r124 l0    21   96:r125 l0     0   95:r126 l0     1
   93:r127 l0     0   92:r128 l0    21   85:r129 l0    22   90:r130 l0     0
   89:r131 l0     1   87:r132 l0     0   86:r133 l0    21   84:r134 l0    21
   67:r135 l0    22   82:r136 l0     0   81:r137 l0     0   80:r138 l0     1
   78:r139 l0     0   77:r140 l0    21   69:r141 l0    23   75:r142 l0     0
   74:r143 l0     0   73:r144 l0     1   71:r145 l0     0   70:r146 l0    21
   68:r147 l0    21   66:r148 l0    21   65:r149 l0    21   62:r150 l0     0
   61:r151 l0     1   59:r152 l0     0   58:r153 l0    21   50:r154 l0    22
   56:r155 l0     0   55:r156 l0     0   54:r157 l0     1   52:r158 l0     0
   51:r159 l0    21   49:r160 l0    21   42:r161 l0     0   41:r162 l0     1
   34:r163 l0     3   37:r164 l0   mem   38:r165 l0    21   36:r166 l0    21
   35:r167 l0    21   32:r168 l0     0   31:r169 l0     0   30:r170 l0     1
   23:r171 l0     3   26:r172 l0   mem   27:r173 l0    21   25:r174 l0    21
   24:r175 l0    21   21:r176 l0     0   20:r177 l0     1   13:r178 l0     3
   16:r179 l0   mem   17:r180 l0    21   15:r181 l0    21   14:r182 l0    21
   11:r183 l0     0   10:r184 l0     0    9:r185 l0     1    2:r186 l0     3
    5:r187 l0   mem    6:r188 l0    21    4:r189 l0    21    3:r190 l0    21
    1:r191 l0     0    0:r192 l0     0  156:r193 l0    21  155:r194 l0    21
  154:r195 l0    21  153:r196 l0    21  152:r197 l0    21  151:r198 l0    21
  150:r199 l0     0  147:r200 l0     0  144:r201 l0     0  141:r202 l0     0
  138:r203 l0     0  133:r204 l0     0  129:r205 l0     0  126:r206 l0     0
  122:r207 l0     0  114:r208 l0     0  113:r209 l0     0  110:r210 l0     0
  107:r211 l0     0  103:r212 l0     0   98:r213 l0     0   97:r214 l0     0
   94:r215 l0     0   91:r216 l0     0   88:r217 l0     0   83:r218 l0     0
   79:r219 l0     0   76:r220 l0     0   72:r221 l0     0   64:r222 l0     0
   63:r223 l0     0   60:r224 l0     0   57:r225 l0     0   53:r226 l0     0
   48:r227 l0     0   46:r228 l0    21   47:r229 l0    21   44:r230 l0    21
   45:r231 l0    21   43:r232 l0     0   40:r233 l0     0   39:r234 l0     0
   33:r235 l0     0   29:r236 l0     0   28:r237 l0     0   22:r238 l0     0
   19:r239 l0     0   18:r240 l0     0   12:r241 l0     0    8:r242 l0     0
    7:r243 l0     0
+++Costs: overall 43, reg -17, mem 60, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int ecc_correction(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1]
;;  ref usage 	r0={10d,2u} r1={9d,1u} r2={9d,1u} r4={9d,1u} r5={9d,1u} r6={1d,5u} r7={1d,13u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,4u} r17={51d,1u} r18={8d} r19={8d} r20={1d,71u,16e} r21={17d,16u} r22={11d,2u} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u,1e} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u,1e} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1e} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u,1e} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u,1e} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1e} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u,1e} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u,1e} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} 
;;    total ref usage 1113{806d,275u,32e} in 203{195 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 193 194 195 196 197 198
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) ge2fitman_preproc.cpp:239 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) ge2fitman_preproc.cpp:239 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_preproc.cpp:239 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) ge2fitman_preproc.cpp:239 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:241 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DF 193)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:242 128 {*movdf_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64])
        (reg:DF 193)) ge2fitman_preproc.cpp:242 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 193)
        (nil)))
(insn 12 11 13 2 (set (reg:DF 194)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:242 128 {*movdf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 194)) ge2fitman_preproc.cpp:242 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 194)
        (nil)))
(insn 14 13 15 2 (set (reg:DF 195)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])
        (reg:DF 195)) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 195)
        (nil)))
(insn 16 15 17 2 (set (reg:DF 196)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 196)) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 196)
        (nil)))
(insn 18 17 19 2 (set (reg:DF 197)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 197)) ge2fitman_preproc.cpp:243 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 197)
        (nil)))
(insn 20 19 21 2 (set (reg:DF 198)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:244 128 {*movdf_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 198)) ge2fitman_preproc.cpp:244 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 198)
        (nil)))
(insn 22 21 205 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:247 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 199
(code_label 205 22 23 3 64 "" [1 uses])
(note 23 205 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:247 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:SI 87 [ D.26019 ])
        (mem/j:SI (plus:DI (reg/f:DI 199)
                (const_int 324 [0x144])) [0 procpar_info_12(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:247 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (nil)))
(insn 26 25 27 3 (parallel [
            (set (reg:SI 88 [ D.26019 ])
                (ashift:SI (reg:SI 87 [ D.26019 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:247 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26019 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.26019 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32]))) ge2fitman_preproc.cpp:247 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26019 ])
        (nil)))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) ge2fitman_preproc.cpp:247 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 208)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:249 90 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (set (reg:DI 89 [ D.26020 ])
        (sign_extend:DI (reg:SI 200))) ge2fitman_preproc.cpp:249 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 90 [ D.26020 ])
                (ashift:DI (reg:DI 89 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:249 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 33 32 34 4 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:249 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg/f:DI 91 [ D.26021 ])
                (plus:DI (reg:DI 90 [ D.26020 ])
                    (reg/f:DI 201)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_DEAD (reg:DI 90 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 90 [ D.26020 ]))
                    (nil))))))
(insn 35 34 36 4 (set (reg:SF 92 [ D.26022 ])
        (mem:SF (reg/f:DI 91 [ D.26021 ]) [0 *_18+0 S4 A32])) ge2fitman_preproc.cpp:249 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.26021 ])
        (nil)))
(insn 36 35 37 4 (set (reg:DF 93 [ D.26023 ])
        (float_extend:DF (reg:SF 92 [ D.26022 ]))) ge2fitman_preproc.cpp:249 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 92 [ D.26022 ])
        (nil)))
(insn 37 36 38 4 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:249 90 {*movsi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 94 [ D.26020 ])
        (sign_extend:DI (reg:SI 202))) ge2fitman_preproc.cpp:249 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 202)
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 95 [ D.26020 ])
                (ashift:DI (reg:DI 94 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:249 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 4 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:249 89 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (parallel [
            (set (reg/f:DI 96 [ D.26021 ])
                (plus:DI (reg:DI 95 [ D.26020 ])
                    (reg/f:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:249 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_DEAD (reg:DI 95 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 95 [ D.26020 ]))
                    (nil))))))
(insn 42 41 43 4 (set (reg:SF 97 [ D.26022 ])
        (mem:SF (reg/f:DI 96 [ D.26021 ]) [0 *_23+0 S4 A32])) ge2fitman_preproc.cpp:249 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.26021 ])
        (nil)))
(insn 43 42 44 4 (set (reg:DF 98 [ D.26023 ])
        (float_extend:DF (reg:SF 97 [ D.26022 ]))) ge2fitman_preproc.cpp:249 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 97 [ D.26022 ])
        (nil)))
(insn 44 43 45 4 (set (reg:DF 99 [ D.26023 ])
        (mult:DF (reg:DF 93 [ D.26023 ])
            (reg:DF 98 [ D.26023 ]))) ge2fitman_preproc.cpp:249 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 98 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 93 [ D.26023 ])
            (nil))))
(insn 45 44 46 4 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:250 90 {*movsi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:DI 100 [ D.26024 ])
        (sign_extend:DI (reg:SI 204))) ge2fitman_preproc.cpp:250 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 204)
        (nil)))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 101 [ D.26024 ])
                (plus:DI (reg:DI 100 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 102 [ D.26024 ])
                (ashift:DI (reg:DI 101 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 4 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:250 89 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 103 [ D.26021 ])
                (plus:DI (reg:DI 102 [ D.26024 ])
                    (reg/f:DI 205)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 205)
        (expr_list:REG_DEAD (reg:DI 102 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 102 [ D.26024 ]))
                    (nil))))))
(insn 51 50 52 4 (set (reg:SF 104 [ D.26022 ])
        (mem:SF (reg/f:DI 103 [ D.26021 ]) [0 *_30+0 S4 A32])) ge2fitman_preproc.cpp:250 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.26021 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 105 [ D.26023 ])
        (float_extend:DF (reg:SF 104 [ D.26022 ]))) ge2fitman_preproc.cpp:250 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 104 [ D.26022 ])
        (nil)))
(insn 53 52 54 4 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:250 90 {*movsi_internal}
     (nil))
(insn 54 53 55 4 (set (reg:DI 106 [ D.26024 ])
        (sign_extend:DI (reg:SI 206))) ge2fitman_preproc.cpp:250 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
(insn 55 54 56 4 (parallel [
            (set (reg:DI 107 [ D.26024 ])
                (plus:DI (reg:DI 106 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 108 [ D.26024 ])
                (ashift:DI (reg:DI 107 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 4 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:250 89 {*movdi_internal}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg/f:DI 109 [ D.26021 ])
                (plus:DI (reg:DI 108 [ D.26024 ])
                    (reg/f:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:250 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (expr_list:REG_DEAD (reg:DI 108 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 108 [ D.26024 ]))
                    (nil))))))
(insn 59 58 60 4 (set (reg:SF 110 [ D.26022 ])
        (mem:SF (reg/f:DI 109 [ D.26021 ]) [0 *_36+0 S4 A32])) ge2fitman_preproc.cpp:250 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.26021 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 111 [ D.26023 ])
        (float_extend:DF (reg:SF 110 [ D.26022 ]))) ge2fitman_preproc.cpp:250 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 110 [ D.26022 ])
        (nil)))
(insn 61 60 62 4 (set (reg:DF 112 [ D.26023 ])
        (mult:DF (reg:DF 105 [ D.26023 ])
            (reg:DF 111 [ D.26023 ]))) ge2fitman_preproc.cpp:250 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 105 [ D.26023 ])
            (nil))))
(insn 62 61 63 4 (set (reg:DF 113 [ D.26023 ])
        (plus:DF (reg:DF 99 [ D.26023 ])
            (reg:DF 112 [ D.26023 ]))) ge2fitman_preproc.cpp:249 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 112 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 99 [ D.26023 ])
            (nil))))
(insn 63 62 64 4 (set (reg:DF 21 xmm0)
        (reg:DF 113 [ D.26023 ])) ge2fitman_preproc.cpp:250 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 113 [ D.26023 ])
        (nil)))
(call_insn 64 63 65 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:250 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 65 64 66 4 (set (reg:DF 208)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:250 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 66 65 67 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64])
        (reg:DF 208)) ge2fitman_preproc.cpp:250 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 208)
        (nil)))
(insn 67 66 68 4 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:252 90 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 114 [ D.26020 ])
        (sign_extend:DI (reg:SI 209))) ge2fitman_preproc.cpp:252 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 209)
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 115 [ D.26020 ])
                (ashift:DI (reg:DI 114 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:252 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 4 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:252 89 {*movdi_internal}
     (nil))
(insn 71 70 72 4 (parallel [
            (set (reg/f:DI 116 [ D.26021 ])
                (plus:DI (reg:DI 115 [ D.26020 ])
                    (reg/f:DI 210)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (expr_list:REG_DEAD (reg:DI 115 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 115 [ D.26020 ]))
                    (nil))))))
(insn 72 71 73 4 (set (reg:SF 117 [ D.26022 ])
        (mem:SF (reg/f:DI 116 [ D.26021 ]) [0 *_45+0 S4 A32])) ge2fitman_preproc.cpp:252 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.26021 ])
        (nil)))
(insn 73 72 74 4 (set (reg:DF 118 [ D.26023 ])
        (float_extend:DF (reg:SF 117 [ D.26022 ]))) ge2fitman_preproc.cpp:252 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ D.26022 ])
        (nil)))
(insn 74 73 75 4 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:252 90 {*movsi_internal}
     (nil))
(insn 75 74 76 4 (set (reg:DI 119 [ D.26024 ])
        (sign_extend:DI (reg:SI 211))) ge2fitman_preproc.cpp:252 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 211)
        (nil)))
(insn 76 75 77 4 (parallel [
            (set (reg:DI 120 [ D.26024 ])
                (plus:DI (reg:DI 119 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 4 (parallel [
            (set (reg:DI 121 [ D.26024 ])
                (ashift:DI (reg:DI 120 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:252 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 4 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:252 89 {*movdi_internal}
     (nil))
(insn 79 78 80 4 (parallel [
            (set (reg/f:DI 122 [ D.26021 ])
                (plus:DI (reg:DI 121 [ D.26024 ])
                    (reg/f:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:252 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_DEAD (reg:DI 121 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 121 [ D.26024 ]))
                    (nil))))))
(insn 80 79 81 4 (set (reg:SF 123 [ D.26022 ])
        (mem:SF (reg/f:DI 122 [ D.26021 ]) [0 *_51+0 S4 A32])) ge2fitman_preproc.cpp:252 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.26021 ])
        (nil)))
(insn 81 80 82 4 (set (reg:DF 124 [ D.26023 ])
        (float_extend:DF (reg:SF 123 [ D.26022 ]))) ge2fitman_preproc.cpp:252 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 123 [ D.26022 ])
        (nil)))
(insn 82 81 83 4 (set (reg:DF 22 xmm1)
        (reg:DF 118 [ D.26023 ])) ge2fitman_preproc.cpp:252 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 118 [ D.26023 ])
        (nil)))
(insn 83 82 84 4 (set (reg:DF 21 xmm0)
        (reg:DF 124 [ D.26023 ])) ge2fitman_preproc.cpp:252 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 124 [ D.26023 ])
        (nil)))
(call_insn 84 83 85 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:252 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 85 84 86 4 (set (reg:DF 213)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:252 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 86 85 87 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])
        (reg:DF 213)) ge2fitman_preproc.cpp:252 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 213)
        (nil)))
(insn 87 86 88 4 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:254 90 {*movsi_internal}
     (nil))
(insn 88 87 89 4 (set (reg:DI 125 [ D.26020 ])
        (sign_extend:DI (reg:SI 214))) ge2fitman_preproc.cpp:254 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))
(insn 89 88 90 4 (parallel [
            (set (reg:DI 126 [ D.26020 ])
                (ashift:DI (reg:DI 125 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:254 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 4 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:254 89 {*movdi_internal}
     (nil))
(insn 91 90 92 4 (parallel [
            (set (reg/f:DI 127 [ D.26021 ])
                (plus:DI (reg:DI 126 [ D.26020 ])
                    (reg/f:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:254 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (expr_list:REG_DEAD (reg:DI 126 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 126 [ D.26020 ]))
                    (nil))))))
(insn 92 91 93 4 (set (reg:SF 128 [ D.26022 ])
        (mem:SF (reg/f:DI 127 [ D.26021 ]) [0 *_59+0 S4 A32])) ge2fitman_preproc.cpp:254 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.26021 ])
        (nil)))
(insn 93 92 94 4 (set (reg:DF 129 [ D.26023 ])
        (float_extend:DF (reg:SF 128 [ D.26022 ]))) ge2fitman_preproc.cpp:254 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 128 [ D.26022 ])
        (nil)))
(insn 94 93 95 4 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:254 90 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (reg:DI 130 [ D.26020 ])
        (sign_extend:DI (reg:SI 216))) ge2fitman_preproc.cpp:254 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 216)
        (nil)))
(insn 96 95 97 4 (parallel [
            (set (reg:DI 131 [ D.26020 ])
                (ashift:DI (reg:DI 130 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:254 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 4 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:254 89 {*movdi_internal}
     (nil))
(insn 98 97 99 4 (parallel [
            (set (reg/f:DI 132 [ D.26021 ])
                (plus:DI (reg:DI 131 [ D.26020 ])
                    (reg/f:DI 217)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:254 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (expr_list:REG_DEAD (reg:DI 131 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 131 [ D.26020 ]))
                    (nil))))))
(insn 99 98 100 4 (set (reg:SF 133 [ D.26022 ])
        (mem:SF (reg/f:DI 132 [ D.26021 ]) [0 *_64+0 S4 A32])) ge2fitman_preproc.cpp:254 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.26021 ])
        (nil)))
(insn 100 99 101 4 (set (reg:DF 134 [ D.26023 ])
        (float_extend:DF (reg:SF 133 [ D.26022 ]))) ge2fitman_preproc.cpp:254 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.26022 ])
        (nil)))
(insn 101 100 102 4 (set (reg:DF 135 [ D.26023 ])
        (mult:DF (reg:DF 129 [ D.26023 ])
            (reg:DF 134 [ D.26023 ]))) ge2fitman_preproc.cpp:254 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 129 [ D.26023 ])
            (nil))))
(insn 102 101 103 4 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:255 90 {*movsi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:DI 136 [ D.26024 ])
        (sign_extend:DI (reg:SI 218))) ge2fitman_preproc.cpp:255 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 218)
        (nil)))
(insn 104 103 105 4 (parallel [
            (set (reg:DI 137 [ D.26024 ])
                (plus:DI (reg:DI 136 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 4 (parallel [
            (set (reg:DI 138 [ D.26024 ])
                (ashift:DI (reg:DI 137 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 4 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:255 89 {*movdi_internal}
     (nil))
(insn 107 106 108 4 (parallel [
            (set (reg/f:DI 139 [ D.26021 ])
                (plus:DI (reg:DI 138 [ D.26024 ])
                    (reg/f:DI 219)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 219)
        (expr_list:REG_DEAD (reg:DI 138 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 138 [ D.26024 ]))
                    (nil))))))
(insn 108 107 109 4 (set (reg:SF 140 [ D.26022 ])
        (mem:SF (reg/f:DI 139 [ D.26021 ]) [0 *_71+0 S4 A32])) ge2fitman_preproc.cpp:255 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.26021 ])
        (nil)))
(insn 109 108 110 4 (set (reg:DF 141 [ D.26023 ])
        (float_extend:DF (reg:SF 140 [ D.26022 ]))) ge2fitman_preproc.cpp:255 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 140 [ D.26022 ])
        (nil)))
(insn 110 109 111 4 (set (reg:SI 220)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:255 90 {*movsi_internal}
     (nil))
(insn 111 110 112 4 (set (reg:DI 142 [ D.26024 ])
        (sign_extend:DI (reg:SI 220))) ge2fitman_preproc.cpp:255 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 220)
        (nil)))
(insn 112 111 113 4 (parallel [
            (set (reg:DI 143 [ D.26024 ])
                (plus:DI (reg:DI 142 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 113 112 114 4 (parallel [
            (set (reg:DI 144 [ D.26024 ])
                (ashift:DI (reg:DI 143 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 4 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:255 89 {*movdi_internal}
     (nil))
(insn 115 114 116 4 (parallel [
            (set (reg/f:DI 145 [ D.26021 ])
                (plus:DI (reg:DI 144 [ D.26024 ])
                    (reg/f:DI 221)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:255 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (expr_list:REG_DEAD (reg:DI 144 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 144 [ D.26024 ]))
                    (nil))))))
(insn 116 115 117 4 (set (reg:SF 146 [ D.26022 ])
        (mem:SF (reg/f:DI 145 [ D.26021 ]) [0 *_77+0 S4 A32])) ge2fitman_preproc.cpp:255 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.26021 ])
        (nil)))
(insn 117 116 118 4 (set (reg:DF 147 [ D.26023 ])
        (float_extend:DF (reg:SF 146 [ D.26022 ]))) ge2fitman_preproc.cpp:255 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 146 [ D.26022 ])
        (nil)))
(insn 118 117 119 4 (set (reg:DF 148 [ D.26023 ])
        (mult:DF (reg:DF 141 [ D.26023 ])
            (reg:DF 147 [ D.26023 ]))) ge2fitman_preproc.cpp:255 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 141 [ D.26023 ])
            (nil))))
(insn 119 118 120 4 (set (reg:DF 149 [ D.26023 ])
        (plus:DF (reg:DF 135 [ D.26023 ])
            (reg:DF 148 [ D.26023 ]))) ge2fitman_preproc.cpp:254 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 148 [ D.26023 ])
        (expr_list:REG_DEAD (reg:DF 135 [ D.26023 ])
            (nil))))
(insn 120 119 121 4 (set (reg:DF 21 xmm0)
        (reg:DF 149 [ D.26023 ])) ge2fitman_preproc.cpp:255 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 149 [ D.26023 ])
        (nil)))
(call_insn 121 120 122 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:255 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 122 121 123 4 (set (reg:DF 222)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:255 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 123 122 124 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 222)) ge2fitman_preproc.cpp:255 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 222)
        (nil)))
(insn 124 123 125 4 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:257 90 {*movsi_internal}
     (nil))
(insn 125 124 126 4 (set (reg:DI 150 [ D.26020 ])
        (sign_extend:DI (reg:SI 223))) ge2fitman_preproc.cpp:257 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 223)
        (nil)))
(insn 126 125 127 4 (parallel [
            (set (reg:DI 151 [ D.26020 ])
                (ashift:DI (reg:DI 150 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:257 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 4 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:257 89 {*movdi_internal}
     (nil))
(insn 128 127 129 4 (parallel [
            (set (reg/f:DI 152 [ D.26021 ])
                (plus:DI (reg:DI 151 [ D.26020 ])
                    (reg/f:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (expr_list:REG_DEAD (reg:DI 151 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 151 [ D.26020 ]))
                    (nil))))))
(insn 129 128 130 4 (set (reg:SF 153 [ D.26022 ])
        (mem:SF (reg/f:DI 152 [ D.26021 ]) [0 *_86+0 S4 A32])) ge2fitman_preproc.cpp:257 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.26021 ])
        (nil)))
(insn 130 129 131 4 (set (reg:DF 154 [ D.26023 ])
        (float_extend:DF (reg:SF 153 [ D.26022 ]))) ge2fitman_preproc.cpp:257 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 153 [ D.26022 ])
        (nil)))
(insn 131 130 132 4 (set (reg:SI 225)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:257 90 {*movsi_internal}
     (nil))
(insn 132 131 133 4 (set (reg:DI 155 [ D.26024 ])
        (sign_extend:DI (reg:SI 225))) ge2fitman_preproc.cpp:257 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 225)
        (nil)))
(insn 133 132 134 4 (parallel [
            (set (reg:DI 156 [ D.26024 ])
                (plus:DI (reg:DI 155 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 4 (parallel [
            (set (reg:DI 157 [ D.26024 ])
                (ashift:DI (reg:DI 156 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:257 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 4 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:257 89 {*movdi_internal}
     (nil))
(insn 136 135 137 4 (parallel [
            (set (reg/f:DI 158 [ D.26021 ])
                (plus:DI (reg:DI 157 [ D.26024 ])
                    (reg/f:DI 226)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:257 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_DEAD (reg:DI 157 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 157 [ D.26024 ]))
                    (nil))))))
(insn 137 136 138 4 (set (reg:SF 159 [ D.26022 ])
        (mem:SF (reg/f:DI 158 [ D.26021 ]) [0 *_92+0 S4 A32])) ge2fitman_preproc.cpp:257 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.26021 ])
        (nil)))
(insn 138 137 139 4 (set (reg:DF 160 [ D.26023 ])
        (float_extend:DF (reg:SF 159 [ D.26022 ]))) ge2fitman_preproc.cpp:257 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 159 [ D.26022 ])
        (nil)))
(insn 139 138 140 4 (set (reg:DF 22 xmm1)
        (reg:DF 154 [ D.26023 ])) ge2fitman_preproc.cpp:257 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 154 [ D.26023 ])
        (nil)))
(insn 140 139 141 4 (set (reg:DF 21 xmm0)
        (reg:DF 160 [ D.26023 ])) ge2fitman_preproc.cpp:257 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 160 [ D.26023 ])
        (nil)))
(call_insn 141 140 142 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:257 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 142 141 143 4 (set (reg:DF 227)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:257 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 143 142 144 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 227)) ge2fitman_preproc.cpp:257 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 227)
        (nil)))
(insn 144 143 145 4 (set (reg:DF 229)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_sup+0 S8 A64])) ge2fitman_preproc.cpp:259 128 {*movdf_internal}
     (nil))
(insn 145 144 146 4 (set (reg:DF 228)
        (minus:DF (reg:DF 229)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:259 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 229)
        (nil)))
(insn 146 145 147 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 228)) ge2fitman_preproc.cpp:259 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 228)
        (nil)))
(insn 147 146 148 4 (set (reg:DF 231)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64])) ge2fitman_preproc.cpp:260 128 {*movdf_internal}
     (nil))
(insn 148 147 149 4 (set (reg:DF 230)
        (minus:DF (reg:DF 231)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 phase_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:260 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 231)
        (nil)))
(insn 149 148 150 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 230)) ge2fitman_preproc.cpp:260 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 230)
        (nil)))
(insn 150 149 151 4 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:262 90 {*movsi_internal}
     (nil))
(insn 151 150 152 4 (set (reg:DI 161 [ D.26020 ])
        (sign_extend:DI (reg:SI 232))) ge2fitman_preproc.cpp:262 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 232)
        (nil)))
(insn 152 151 153 4 (parallel [
            (set (reg:DI 162 [ D.26020 ])
                (ashift:DI (reg:DI 161 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:262 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 153 152 154 4 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:262 89 {*movdi_internal}
     (nil))
(insn 154 153 155 4 (parallel [
            (set (reg/f:DI 163 [ D.26021 ])
                (plus:DI (reg:DI 162 [ D.26020 ])
                    (reg/f:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:262 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 233)
        (expr_list:REG_DEAD (reg:DI 162 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 162 [ D.26020 ]))
                    (nil))))))
(insn 155 154 156 4 (set (reg:SF 164 [ D.26022 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64]))) ge2fitman_preproc.cpp:262 157 {*truncdfsf_fast_sse}
     (nil))
(insn 156 155 157 4 (set (reg:DF 234)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) ge2fitman_preproc.cpp:262 128 {*movdf_internal}
     (nil))
(insn 157 156 158 4 (set (reg:DF 21 xmm0)
        (reg:DF 234)) ge2fitman_preproc.cpp:262 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 234)
        (nil)))
(call_insn/u 158 157 159 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:262 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 159 158 160 4 (set (reg:DF 165 [ D.26023 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:262 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 160 159 161 4 (set (reg:SF 166 [ D.26022 ])
        (float_truncate:SF (reg:DF 165 [ D.26023 ]))) ge2fitman_preproc.cpp:262 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 165 [ D.26023 ])
        (nil)))
(insn 161 160 162 4 (set (reg:SF 167 [ D.26022 ])
        (mult:SF (reg:SF 164 [ D.26022 ])
            (reg:SF 166 [ D.26022 ]))) ge2fitman_preproc.cpp:262 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 166 [ D.26022 ])
        (expr_list:REG_DEAD (reg:SF 164 [ D.26022 ])
            (nil))))
(insn 162 161 163 4 (set (mem:SF (reg/f:DI 163 [ D.26021 ]) [0 *_101+0 S4 A32])
        (reg:SF 167 [ D.26022 ])) ge2fitman_preproc.cpp:262 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 167 [ D.26022 ])
        (expr_list:REG_DEAD (reg/f:DI 163 [ D.26021 ])
            (nil))))
(insn 163 162 164 4 (set (reg:SI 235)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:263 90 {*movsi_internal}
     (nil))
(insn 164 163 165 4 (set (reg:DI 168 [ D.26024 ])
        (sign_extend:DI (reg:SI 235))) ge2fitman_preproc.cpp:263 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 235)
        (nil)))
(insn 165 164 166 4 (parallel [
            (set (reg:DI 169 [ D.26024 ])
                (plus:DI (reg:DI 168 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:263 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 168 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 4 (parallel [
            (set (reg:DI 170 [ D.26024 ])
                (ashift:DI (reg:DI 169 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:263 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 4 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:263 89 {*movdi_internal}
     (nil))
(insn 168 167 169 4 (parallel [
            (set (reg/f:DI 171 [ D.26021 ])
                (plus:DI (reg:DI 170 [ D.26024 ])
                    (reg/f:DI 236)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:263 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 236)
        (expr_list:REG_DEAD (reg:DI 170 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -72 [0xffffffffffffffb8])) [0 sup_data+0 S8 A64])
                        (reg:DI 170 [ D.26024 ]))
                    (nil))))))
(insn 169 168 170 4 (set (reg:SF 172 [ D.26022 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [0 mag_sup+0 S8 A64]))) ge2fitman_preproc.cpp:263 157 {*truncdfsf_fast_sse}
     (nil))
(insn 170 169 171 4 (set (reg:DF 237)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) ge2fitman_preproc.cpp:263 128 {*movdf_internal}
     (nil))
(insn 171 170 172 4 (set (reg:DF 21 xmm0)
        (reg:DF 237)) ge2fitman_preproc.cpp:263 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 237)
        (nil)))
(call_insn/u 172 171 173 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:263 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 173 172 174 4 (set (reg:DF 173 [ D.26023 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:263 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 174 173 175 4 (set (reg:SF 174 [ D.26022 ])
        (float_truncate:SF (reg:DF 173 [ D.26023 ]))) ge2fitman_preproc.cpp:263 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 173 [ D.26023 ])
        (nil)))
(insn 175 174 176 4 (set (reg:SF 175 [ D.26022 ])
        (mult:SF (reg:SF 172 [ D.26022 ])
            (reg:SF 174 [ D.26022 ]))) ge2fitman_preproc.cpp:263 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 174 [ D.26022 ])
        (expr_list:REG_DEAD (reg:SF 172 [ D.26022 ])
            (nil))))
(insn 176 175 177 4 (set (mem:SF (reg/f:DI 171 [ D.26021 ]) [0 *_110+0 S4 A32])
        (reg:SF 175 [ D.26022 ])) ge2fitman_preproc.cpp:263 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 175 [ D.26022 ])
        (expr_list:REG_DEAD (reg/f:DI 171 [ D.26021 ])
            (nil))))
(insn 177 176 178 4 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:265 90 {*movsi_internal}
     (nil))
(insn 178 177 179 4 (set (reg:DI 176 [ D.26020 ])
        (sign_extend:DI (reg:SI 238))) ge2fitman_preproc.cpp:265 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 238)
        (nil)))
(insn 179 178 180 4 (parallel [
            (set (reg:DI 177 [ D.26020 ])
                (ashift:DI (reg:DI 176 [ D.26020 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:265 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 176 [ D.26020 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 4 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:265 89 {*movdi_internal}
     (nil))
(insn 181 180 182 4 (parallel [
            (set (reg/f:DI 178 [ D.26021 ])
                (plus:DI (reg:DI 177 [ D.26020 ])
                    (reg/f:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:265 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 239)
        (expr_list:REG_DEAD (reg:DI 177 [ D.26020 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 177 [ D.26020 ]))
                    (nil))))))
(insn 182 181 183 4 (set (reg:SF 179 [ D.26022 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:265 157 {*truncdfsf_fast_sse}
     (nil))
(insn 183 182 184 4 (set (reg:DF 240)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) ge2fitman_preproc.cpp:265 128 {*movdf_internal}
     (nil))
(insn 184 183 185 4 (set (reg:DF 21 xmm0)
        (reg:DF 240)) ge2fitman_preproc.cpp:265 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 240)
        (nil)))
(call_insn/u 185 184 186 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:265 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 186 185 187 4 (set (reg:DF 180 [ D.26023 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:265 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 187 186 188 4 (set (reg:SF 181 [ D.26022 ])
        (float_truncate:SF (reg:DF 180 [ D.26023 ]))) ge2fitman_preproc.cpp:265 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 180 [ D.26023 ])
        (nil)))
(insn 188 187 189 4 (set (reg:SF 182 [ D.26022 ])
        (mult:SF (reg:SF 179 [ D.26022 ])
            (reg:SF 181 [ D.26022 ]))) ge2fitman_preproc.cpp:265 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 181 [ D.26022 ])
        (expr_list:REG_DEAD (reg:SF 179 [ D.26022 ])
            (nil))))
(insn 189 188 190 4 (set (mem:SF (reg/f:DI 178 [ D.26021 ]) [0 *_118+0 S4 A32])
        (reg:SF 182 [ D.26022 ])) ge2fitman_preproc.cpp:265 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 182 [ D.26022 ])
        (expr_list:REG_DEAD (reg/f:DI 178 [ D.26021 ])
            (nil))))
(insn 190 189 191 4 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:266 90 {*movsi_internal}
     (nil))
(insn 191 190 192 4 (set (reg:DI 183 [ D.26024 ])
        (sign_extend:DI (reg:SI 241))) ge2fitman_preproc.cpp:266 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 241)
        (nil)))
(insn 192 191 193 4 (parallel [
            (set (reg:DI 184 [ D.26024 ])
                (plus:DI (reg:DI 183 [ D.26024 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:266 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 183 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 4 (parallel [
            (set (reg:DI 185 [ D.26024 ])
                (ashift:DI (reg:DI 184 [ D.26024 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:266 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 184 [ D.26024 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 194 193 195 4 (set (reg/f:DI 242)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:266 89 {*movdi_internal}
     (nil))
(insn 195 194 196 4 (parallel [
            (set (reg/f:DI 186 [ D.26021 ])
                (plus:DI (reg:DI 185 [ D.26024 ])
                    (reg/f:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:266 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 242)
        (expr_list:REG_DEAD (reg:DI 185 [ D.26024 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -80 [0xffffffffffffffb0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 185 [ D.26024 ]))
                    (nil))))))
(insn 196 195 197 4 (set (reg:SF 187 [ D.26022 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 mag_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:266 157 {*truncdfsf_fast_sse}
     (nil))
(insn 197 196 198 4 (set (reg:DF 243)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) ge2fitman_preproc.cpp:266 128 {*movdf_internal}
     (nil))
(insn 198 197 199 4 (set (reg:DF 21 xmm0)
        (reg:DF 243)) ge2fitman_preproc.cpp:266 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 243)
        (nil)))
(call_insn/u 199 198 200 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:266 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 200 199 201 4 (set (reg:DF 188 [ D.26023 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:266 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 201 200 202 4 (set (reg:SF 189 [ D.26022 ])
        (float_truncate:SF (reg:DF 188 [ D.26023 ]))) ge2fitman_preproc.cpp:266 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 188 [ D.26023 ])
        (nil)))
(insn 202 201 203 4 (set (reg:SF 190 [ D.26022 ])
        (mult:SF (reg:SF 187 [ D.26022 ])
            (reg:SF 189 [ D.26022 ]))) ge2fitman_preproc.cpp:266 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 189 [ D.26022 ])
        (expr_list:REG_DEAD (reg:SF 187 [ D.26022 ])
            (nil))))
(insn 203 202 204 4 (set (mem:SF (reg/f:DI 186 [ D.26021 ]) [0 *_127+0 S4 A32])
        (reg:SF 190 [ D.26022 ])) ge2fitman_preproc.cpp:266 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 190 [ D.26022 ])
        (expr_list:REG_DEAD (reg/f:DI 186 [ D.26021 ])
            (nil))))
(insn 204 203 220 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -52 [0xffffffffffffffcc])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:247 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 220 204 221 4 (set (pc)
        (label_ref 205)) ge2fitman_preproc.cpp:247 654 {jump}
     (nil)
 -> 205)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 221 220 208)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 191 192
(code_label 208 221 209 5 63 "" [1 uses])
(note 209 208 210 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 213 5 (set (reg:SI 191 [ D.26019 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:269 90 {*movsi_internal}
     (nil))
(insn 213 210 217 5 (set (reg:SI 192 [ <retval> ])
        (reg:SI 191 [ D.26019 ])) ge2fitman_preproc.cpp:269 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 191 [ D.26019 ])
        (nil)))
(insn 217 213 218 5 (set (reg/i:SI 0 ax)
        (reg:SI 192 [ <retval> ])) ge2fitman_preproc.cpp:271 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 192 [ <retval> ])
        (nil)))
(insn 218 217 0 5 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:271 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int zero_fill(float*, float*, Procpar_info*, Preprocess*) (_Z9zero_fillPfS_P12Procpar_infoP10Preprocess, funcdef_no=1025, decl_uid=24440, cgraph_uid=230, symbol_order=231)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 9 (    1)
Building IRA IR
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r111: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r111,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a4(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r108,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a11(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a16(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a19(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a20(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 64(l0): point = 0
   Insn 63(l0): point = 2
   Insn 59(l0): point = 4
   Insn 56(l0): point = 7
   Insn 33(l0): point = 10
   Insn 32(l0): point = 12
   Insn 31(l0): point = 14
   Insn 30(l0): point = 16
   Insn 68(l0): point = 19
   Insn 50(l0): point = 21
   Insn 49(l0): point = 23
   Insn 48(l0): point = 25
   Insn 47(l0): point = 27
   Insn 46(l0): point = 29
   Insn 45(l0): point = 31
   Insn 44(l0): point = 33
   Insn 43(l0): point = 35
   Insn 42(l0): point = 37
   Insn 41(l0): point = 39
   Insn 40(l0): point = 41
   Insn 39(l0): point = 43
   Insn 38(l0): point = 45
   Insn 37(l0): point = 47
   Insn 36(l0): point = 49
   Insn 35(l0): point = 51
   Insn 28(l0): point = 54
   Insn 27(l0): point = 56
   Insn 26(l0): point = 58
   Insn 25(l0): point = 60
   Insn 66(l0): point = 63
   Insn 20(l0): point = 65
   Insn 19(l0): point = 67
   Insn 18(l0): point = 69
   Insn 16(l0): point = 72
   Insn 15(l0): point = 74
   Insn 14(l0): point = 76
   Insn 13(l0): point = 78
   Insn 12(l0): point = 80
   Insn 11(l0): point = 82
   Insn 10(l0): point = 84
   Insn 9(l0): point = 86
   Insn 5(l0): point = 88
   Insn 4(l0): point = 90
   Insn 3(l0): point = 92
   Insn 2(l0): point = 94
 a0(r100): [3..4]
 a1(r87): [63..65] [5..7]
 a2(r99): [24..27]
 a3(r111): [24..25]
 a4(r110): [28..29]
 a5(r98): [28..31]
 a6(r97): [32..33]
 a7(r96): [34..35]
 a8(r109): [36..37]
 a9(r95): [40..43]
 a10(r108): [40..41]
 a11(r107): [44..45]
 a12(r94): [44..47]
 a13(r93): [48..49]
 a14(r106): [50..51]
 a15(r92): [13..14]
 a16(r105): [15..16]
 a17(r104): [55..56]
 a18(r91): [57..58]
 a19(r103): [59..60]
 a20(r90): [75..76]
 a21(r88): [75..82]
 a22(r89): [77..78]
 a23(r102): [79..80]
 a24(r101): [83..84]
Compressing live ranges: from 97 to 42 - 43%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r87): [32..33] [2..3]
 a2(r99): [8..9]
 a3(r111): [8..9]
 a4(r110): [10..11]
 a5(r98): [10..11]
 a6(r97): [12..13]
 a7(r96): [14..15]
 a8(r109): [16..17]
 a9(r95): [18..19]
 a10(r108): [18..19]
 a11(r107): [20..21]
 a12(r94): [20..21]
 a13(r93): [22..23]
 a14(r106): [24..25]
 a15(r92): [4..5]
 a16(r105): [6..7]
 a17(r104): [26..27]
 a18(r91): [28..29]
 a19(r103): [30..31]
 a20(r90): [34..35]
 a21(r88): [34..39]
 a22(r89): [36..37]
 a23(r102): [38..39]
 a24(r101): [40..41]
  regions=1, blocks=9, points=42
    allocnos=25 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
    1:r87  l0     0   21:r88  l0     1   22:r89  l0     0   20:r90  l0     0
   18:r91  l0     0   15:r92  l0     0   13:r93  l0     0   12:r94  l0     1
    9:r95  l0     0    7:r96  l0     0    6:r97  l0     0    5:r98  l0     1
    2:r99  l0     0    0:r100 l0     0   24:r101 l0     0   23:r102 l0     0
   19:r103 l0     0   17:r104 l0     0   16:r105 l0     0   14:r106 l0     0
   11:r107 l0     0   10:r108 l0    21    8:r109 l0     0    4:r110 l0     0
    3:r111 l0    21
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int zero_fill(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={11d,2u} r18={1d} r19={1d} r20={1d,25u,2e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={2d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} 
;;    total ref usage 216{129d,83u,4e} in 45{44 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89 90 101 102
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) ge2fitman_preproc.cpp:274 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) ge2fitman_preproc.cpp:274 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_preproc.cpp:274 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) ge2fitman_preproc.cpp:274 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:276 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:280 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 88 [ D.26025 ])
        (mem/j:SI (plus:DI (reg/f:DI 101)
                (const_int 24 [0x18])) [0 preprocess_7(D)->data_zero_fill+0 S4 A32])) ge2fitman_preproc.cpp:280 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:280 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 89 [ D.26025 ])
        (mem/j:SI (plus:DI (reg/f:DI 102)
                (const_int 324 [0x144])) [0 procpar_info_9(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:280 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 90 [ D.26025 ])
                (ashift:SI (reg:SI 89 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:280 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.26025 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.26025 ])
            (reg:SI 90 [ D.26025 ]))) ge2fitman_preproc.cpp:280 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 90 [ D.26025 ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.26025 ])
            (nil))))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ge2fitman_preproc.cpp:280 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fe355cfd7e0 *.LC12>)) ge2fitman_preproc.cpp:281 89 {*movdi_internal}
     (nil))
(call_insn 19 18 20 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fe3570c8000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:281 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 66 3 (set (reg:SI 87 [ D.26025 ])
        (const_int 0 [0])) ge2fitman_preproc.cpp:282 90 {*movsi_internal}
     (nil))
(jump_insn 66 20 67 3 (set (pc)
        (label_ref 57)) ge2fitman_preproc.cpp:282 654 {jump}
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 67 66 23)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 103 104
(code_label 23 67 24 4 67 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:285 89 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:SI 91 [ D.26025 ])
        (mem/j:SI (plus:DI (reg/f:DI 103)
                (const_int 324 [0x144])) [0 procpar_info_9(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:285 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:SI 104)
                (ashift:SI (reg:SI 91 [ D.26025 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:285 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.26025 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 51 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
        (reg:SI 104)) ge2fitman_preproc.cpp:285 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 105
(code_label 51 28 29 5 70 "" [1 uses])
(note 29 51 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:285 89 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:SI 92 [ D.26025 ])
        (mem/j:SI (plus:DI (reg/f:DI 105)
                (const_int 24 [0x18])) [0 preprocess_7(D)->data_zero_fill+0 S4 A32])) ge2fitman_preproc.cpp:285 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (nil)))
(insn 32 31 33 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.26025 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32]))) ge2fitman_preproc.cpp:285 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.26025 ])
        (nil)))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) ge2fitman_preproc.cpp:285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 54)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93 94 95 96 97 98 99 106 107 108 109 110 111
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:287 90 {*movsi_internal}
     (nil))
(insn 36 35 37 6 (set (reg:DI 93 [ D.26026 ])
        (sign_extend:DI (reg:SI 106))) ge2fitman_preproc.cpp:287 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(insn 37 36 38 6 (parallel [
            (set (reg:DI 94 [ D.26026 ])
                (ashift:DI (reg:DI 93 [ D.26026 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:287 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ D.26026 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:287 89 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg/f:DI 95 [ D.26027 ])
                (plus:DI (reg:DI 94 [ D.26026 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:287 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_DEAD (reg:DI 94 [ D.26026 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
                        (reg:DI 94 [ D.26026 ]))
                    (nil))))))
(insn 40 39 41 6 (set (reg:SF 108)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:287 129 {*movsf_internal}
     (nil))
(insn 41 40 42 6 (set (mem:SF (reg/f:DI 95 [ D.26027 ]) [0 *_20+0 S4 A32])
        (reg:SF 108)) ge2fitman_preproc.cpp:287 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 108)
        (expr_list:REG_DEAD (reg/f:DI 95 [ D.26027 ])
            (nil))))
(insn 42 41 43 6 (set (reg:SI 109)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])) ge2fitman_preproc.cpp:288 90 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 96 [ D.26028 ])
        (sign_extend:DI (reg:SI 109))) ge2fitman_preproc.cpp:288 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 109)
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 97 [ D.26028 ])
                (plus:DI (reg:DI 96 [ D.26028 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:288 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.26028 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 98 [ D.26028 ])
                (ashift:DI (reg:DI 97 [ D.26028 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:288 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.26028 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 6 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:288 89 {*movdi_internal}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg/f:DI 99 [ D.26027 ])
                (plus:DI (reg:DI 98 [ D.26028 ])
                    (reg/f:DI 110)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:288 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_DEAD (reg:DI 98 [ D.26028 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 sup_data+0 S8 A64])
                        (reg:DI 98 [ D.26028 ]))
                    (nil))))))
(insn 48 47 49 6 (set (reg:SF 111)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:288 129 {*movsf_internal}
     (nil))
(insn 49 48 50 6 (set (mem:SF (reg/f:DI 99 [ D.26027 ]) [0 *_25+0 S4 A32])
        (reg:SF 111)) ge2fitman_preproc.cpp:288 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 111)
        (expr_list:REG_DEAD (reg/f:DI 99 [ D.26027 ])
            (nil))))
(insn 50 49 68 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 j+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:285 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 68 50 69 6 (set (pc)
        (label_ref 51)) ge2fitman_preproc.cpp:285 654 {jump}
     (nil)
 -> 51)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 69 68 54)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 54 69 55 7 69 "" [1 uses])
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg:SI 87 [ D.26025 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:291 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              3 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 100
(code_label 57 56 58 8 68 "" [1 uses])
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 63 8 (set (reg:SI 100 [ <retval> ])
        (reg:SI 87 [ D.26025 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26025 ])
        (nil)))
(insn 63 59 64 8 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) ge2fitman_preproc.cpp:293 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 100 [ <retval> ])
        (nil)))
(insn 64 63 0 8 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:293 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int normalize(float*, float*, Procpar_info*) (_Z9normalizePfS_P12Procpar_info, funcdef_no=1026, decl_uid=24418, cgraph_uid=231, symbol_order=232)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a33 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a34 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a35 (r146,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a70 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r131,l0) best SSE_REGS, allocno SSE_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a18 (r122,l0) best SSE_REGS, allocno SSE_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r120,l0) best SSE_REGS, allocno SSE_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a36 (r111,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r109,l0) best SSE_REGS, allocno SSE_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r103,l0) best SSE_REGS, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r96,l0) best SSE_REGS, allocno SSE_REGS
    r95: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a57 (r95,l0) best SSE_REGS, allocno SSE_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a56 (r91,l0) best SSE_REGS, allocno SSE_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a63 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r133,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r132,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r131,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a15(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a17(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r122,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a19(r121,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a20(r120,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a21(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a25(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a26(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a28(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a29(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a33(r148,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a34(r147,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a35(r146,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a36(r111,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a37(r110,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a38(r97,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a39(r109,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a40(r103,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a41(r108,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a42(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a45(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r102,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a49(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a50(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a51(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a52(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a53(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a54(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r96,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a56(r91,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a57(r95,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a58(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a59(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a60(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a61(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r90,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a64(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r137,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a70(r136,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 124(l0): point = 0
   Insn 123(l0): point = 2
   Insn 119(l0): point = 4
   Insn 116(l0): point = 6
   Insn 78(l0): point = 9
   Insn 77(l0): point = 11
   Insn 76(l0): point = 13
   Insn 75(l0): point = 15
   Insn 74(l0): point = 17
   Insn 131(l0): point = 20
   Insn 110(l0): point = 22
   Insn 109(l0): point = 24
   Insn 108(l0): point = 26
   Insn 107(l0): point = 28
   Insn 106(l0): point = 30
   Insn 105(l0): point = 32
   Insn 104(l0): point = 34
   Insn 103(l0): point = 36
   Insn 102(l0): point = 38
   Insn 101(l0): point = 40
   Insn 100(l0): point = 42
   Insn 99(l0): point = 44
   Insn 98(l0): point = 46
   Insn 97(l0): point = 48
   Insn 96(l0): point = 50
   Insn 95(l0): point = 52
   Insn 94(l0): point = 54
   Insn 93(l0): point = 56
   Insn 92(l0): point = 58
   Insn 91(l0): point = 60
   Insn 90(l0): point = 62
   Insn 89(l0): point = 64
   Insn 88(l0): point = 66
   Insn 87(l0): point = 68
   Insn 86(l0): point = 70
   Insn 85(l0): point = 72
   Insn 84(l0): point = 74
   Insn 83(l0): point = 76
   Insn 82(l0): point = 78
   Insn 81(l0): point = 80
   Insn 80(l0): point = 82
   Insn 72(l0): point = 85
   Insn 16(l0): point = 88
   Insn 15(l0): point = 90
   Insn 129(l0): point = 93
   Insn 66(l0): point = 95
   Insn 63(l0): point = 98
   Insn 62(l0): point = 100
   Insn 57(l0): point = 103
   Insn 56(l0): point = 105
   Insn 55(l0): point = 107
   Insn 54(l0): point = 109
   Insn 53(l0): point = 111
   Insn 52(l0): point = 113
   Insn 51(l0): point = 115
   Insn 50(l0): point = 117
   Insn 49(l0): point = 119
   Insn 48(l0): point = 121
   Insn 47(l0): point = 123
   Insn 46(l0): point = 125
   Insn 45(l0): point = 127
   Insn 44(l0): point = 129
   Insn 43(l0): point = 131
   Insn 42(l0): point = 133
   Insn 41(l0): point = 135
   Insn 40(l0): point = 137
   Insn 39(l0): point = 139
   Insn 38(l0): point = 141
   Insn 37(l0): point = 143
   Insn 36(l0): point = 145
   Insn 35(l0): point = 147
   Insn 34(l0): point = 149
   Insn 33(l0): point = 151
   Insn 32(l0): point = 153
   Insn 31(l0): point = 155
   Insn 30(l0): point = 157
   Insn 29(l0): point = 159
   Insn 28(l0): point = 161
   Insn 27(l0): point = 163
   Insn 26(l0): point = 165
   Insn 25(l0): point = 167
   Insn 24(l0): point = 169
   Insn 23(l0): point = 171
   Insn 22(l0): point = 173
   Insn 21(l0): point = 175
   Insn 20(l0): point = 177
   Insn 19(l0): point = 179
   Insn 18(l0): point = 181
   Insn 13(l0): point = 184
   Insn 12(l0): point = 186
   Insn 11(l0): point = 188
   Insn 10(l0): point = 190
   Insn 9(l0): point = 192
   Insn 8(l0): point = 194
   Insn 4(l0): point = 196
   Insn 3(l0): point = 198
   Insn 2(l0): point = 200
 a0(r135): [3..4]
 a1(r134): [5..6]
 a2(r126): [25..44]
 a3(r133): [25..26]
 a4(r132): [27..28]
 a5(r131): [27..30]
 a6(r130): [31..32]
 a7(r157): [33..34]
 a8(r129): [33..36]
 a9(r128): [37..38]
 a10(r127): [39..40]
 a11(r156): [41..42]
 a12(r155): [45..46]
 a13(r125): [45..48]
 a14(r124): [49..50]
 a15(r123): [51..52]
 a16(r154): [53..54]
 a17(r116): [57..74]
 a18(r122): [57..58]
 a19(r121): [59..60]
 a20(r120): [59..62]
 a21(r119): [63..64]
 a22(r153): [65..66]
 a23(r118): [65..68]
 a24(r117): [69..70]
 a25(r152): [71..72]
 a26(r151): [75..76]
 a27(r115): [75..78]
 a28(r114): [79..80]
 a29(r150): [81..82]
 a30(r113): [12..13]
 a31(r112): [14..15]
 a32(r149): [16..17]
 a33(r148): [99..100]
 a34(r147): [106..107]
 a35(r146): [110..111]
 a36(r111): [116..117]
 a37(r110): [118..119]
 a38(r97): [118..153]
 a39(r109): [120..121]
 a40(r103): [120..137]
 a41(r108): [122..123]
 a42(r107): [124..125]
 a43(r145): [126..127]
 a44(r106): [126..129]
 a45(r105): [130..131]
 a46(r104): [132..133]
 a47(r144): [134..135]
 a48(r102): [138..139]
 a49(r101): [140..141]
 a50(r143): [142..143]
 a51(r100): [142..145]
 a52(r99): [146..147]
 a53(r98): [148..149]
 a54(r142): [150..151]
 a55(r96): [154..155]
 a56(r91): [154..169]
 a57(r95): [156..157]
 a58(r94): [158..159]
 a59(r141): [160..161]
 a60(r93): [160..163]
 a61(r92): [164..165]
 a62(r140): [166..167]
 a63(r90): [170..171]
 a64(r89): [172..173]
 a65(r139): [174..175]
 a66(r88): [174..177]
 a67(r87): [178..179]
 a68(r138): [180..181]
 a69(r137): [187..188]
 a70(r136): [191..192]
Compressing live ranges: from 203 to 112 - 55%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
 a2(r126): [10..23]
 a3(r133): [10..11]
 a4(r132): [12..13]
 a5(r131): [12..13]
 a6(r130): [14..15]
 a7(r157): [16..17]
 a8(r129): [16..17]
 a9(r128): [18..19]
 a10(r127): [20..21]
 a11(r156): [22..23]
 a12(r155): [24..25]
 a13(r125): [24..25]
 a14(r124): [26..27]
 a15(r123): [28..29]
 a16(r154): [30..31]
 a17(r116): [32..43]
 a18(r122): [32..33]
 a19(r121): [34..35]
 a20(r120): [34..35]
 a21(r119): [36..37]
 a22(r153): [38..39]
 a23(r118): [38..39]
 a24(r117): [40..41]
 a25(r152): [42..43]
 a26(r151): [44..45]
 a27(r115): [44..45]
 a28(r114): [46..47]
 a29(r150): [48..49]
 a30(r113): [4..5]
 a31(r112): [6..7]
 a32(r149): [8..9]
 a33(r148): [50..51]
 a34(r147): [52..53]
 a35(r146): [54..55]
 a36(r111): [56..57]
 a37(r110): [58..59]
 a38(r97): [58..85]
 a39(r109): [60..61]
 a40(r103): [60..73]
 a41(r108): [62..63]
 a42(r107): [64..65]
 a43(r145): [66..67]
 a44(r106): [66..67]
 a45(r105): [68..69]
 a46(r104): [70..71]
 a47(r144): [72..73]
 a48(r102): [74..75]
 a49(r101): [76..77]
 a50(r143): [78..79]
 a51(r100): [78..79]
 a52(r99): [80..81]
 a53(r98): [82..83]
 a54(r142): [84..85]
 a55(r96): [86..87]
 a56(r91): [86..97]
 a57(r95): [88..89]
 a58(r94): [90..91]
 a59(r141): [92..93]
 a60(r93): [92..93]
 a61(r92): [94..95]
 a62(r140): [96..97]
 a63(r90): [98..99]
 a64(r89): [100..101]
 a65(r139): [102..103]
 a66(r88): [102..103]
 a67(r87): [104..105]
 a68(r138): [106..107]
 a69(r137): [108..109]
 a70(r136): [110..111]
  pref0:a35(r146)<-hr21@1
  regions=1, blocks=11, points=112
    allocnos=71 (big 0), copies=0, conflicts=0, ranges=71
Disposition:
   67:r87  l0     0   66:r88  l0     1   64:r89  l0     0   63:r90  l0    21
   56:r91  l0    22   61:r92  l0     0   60:r93  l0     1   58:r94  l0     0
   57:r95  l0    21   55:r96  l0    21   38:r97  l0    22   53:r98  l0     0
   52:r99  l0     0   51:r100 l0     1   49:r101 l0     0   48:r102 l0    21
   40:r103 l0    23   46:r104 l0     0   45:r105 l0     0   44:r106 l0     1
   42:r107 l0     0   41:r108 l0    21   39:r109 l0    21   37:r110 l0    21
   36:r111 l0    21   31:r112 l0     0   30:r113 l0     0   28:r114 l0     0
   27:r115 l0     1   17:r116 l0     0   24:r117 l0     1   23:r118 l0     2
   21:r119 l0     1   20:r120 l0    22   19:r121 l0    21   18:r122 l0    21
   15:r123 l0     0   14:r124 l0     0   13:r125 l0     1    2:r126 l0     0
   10:r127 l0     1    9:r128 l0     1    8:r129 l0     2    6:r130 l0     1
    5:r131 l0    22    4:r132 l0    21    3:r133 l0    21    1:r134 l0     0
    0:r135 l0     0   70:r136 l0    21   69:r137 l0    21   68:r138 l0     0
   65:r139 l0     0   62:r140 l0     0   59:r141 l0     0   54:r142 l0     0
   50:r143 l0     0   47:r144 l0     0   43:r145 l0     0   35:r146 l0     0
   34:r147 l0    21   33:r148 l0    21   32:r149 l0     0   29:r150 l0     0
   26:r151 l0     0   25:r152 l0     1   22:r153 l0     1   16:r154 l0     0
   12:r155 l0     0   11:r156 l0     1    7:r157 l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int normalize(float*, float*, Procpar_info*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={3d,2u} r1={2d,1u} r2={2d} r4={2d,1u} r5={2d,1u} r6={1d,10u} r7={1d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,9u} r17={27d,3u} r18={1d} r19={1d} r20={1d,48u,8e} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u,1e} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u,1e} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} 
;;    total ref usage 365{190d,159u,16e} in 97{96 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 136 137
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
        (reg:DI 5 di [ data ])) ge2fitman_preproc.cpp:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
        (reg:DI 4 si [ scratch ])) ge2fitman_preproc.cpp:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ scratch ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_preproc.cpp:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:297 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DF 136)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:298 128 {*movdf_internal}
     (nil))
(insn 10 9 11 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])
        (reg:DF 136)) ge2fitman_preproc.cpp:298 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 136)
        (nil)))
(insn 11 10 12 2 (set (reg:DF 137)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:299 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64])
        (reg:DF 137)) ge2fitman_preproc.cpp:299 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 137)
        (nil)))
(insn 13 12 67 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:305 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              6 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 67 13 14 3 75 "" [1 uses])
(note 14 67 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
            (const_int 99 [0x63]))) ge2fitman_preproc.cpp:305 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ge2fitman_preproc.cpp:305 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 70)
;;  succ:       7
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 138 139 140 141 142 143 144 145 146 147
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:307 90 {*movsi_internal}
     (nil))
(insn 19 18 20 4 (set (reg:DI 87 [ D.26030 ])
        (sign_extend:DI (reg:SI 138))) ge2fitman_preproc.cpp:307 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 88 [ D.26030 ])
                (ashift:DI (reg:DI 87 [ D.26030 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:307 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.26030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 4 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:307 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 89 [ D.26031 ])
                (plus:DI (reg:DI 88 [ D.26030 ])
                    (reg/f:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 139)
        (expr_list:REG_DEAD (reg:DI 88 [ D.26030 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 88 [ D.26030 ]))
                    (nil))))))
(insn 23 22 24 4 (set (reg:SF 90 [ D.26032 ])
        (mem:SF (reg/f:DI 89 [ D.26031 ]) [0 *_15+0 S4 A32])) ge2fitman_preproc.cpp:307 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.26031 ])
        (nil)))
(insn 24 23 25 4 (set (reg:DF 91 [ D.26033 ])
        (float_extend:DF (reg:SF 90 [ D.26032 ]))) ge2fitman_preproc.cpp:307 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 90 [ D.26032 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:307 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 92 [ D.26030 ])
        (sign_extend:DI (reg:SI 140))) ge2fitman_preproc.cpp:307 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 93 [ D.26030 ])
                (ashift:DI (reg:DI 92 [ D.26030 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:307 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 92 [ D.26030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:307 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (parallel [
            (set (reg/f:DI 94 [ D.26031 ])
                (plus:DI (reg:DI 93 [ D.26030 ])
                    (reg/f:DI 141)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:307 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (expr_list:REG_DEAD (reg:DI 93 [ D.26030 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 93 [ D.26030 ]))
                    (nil))))))
(insn 30 29 31 4 (set (reg:SF 95 [ D.26032 ])
        (mem:SF (reg/f:DI 94 [ D.26031 ]) [0 *_20+0 S4 A32])) ge2fitman_preproc.cpp:307 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.26031 ])
        (nil)))
(insn 31 30 32 4 (set (reg:DF 96 [ D.26033 ])
        (float_extend:DF (reg:SF 95 [ D.26032 ]))) ge2fitman_preproc.cpp:307 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 95 [ D.26032 ])
        (nil)))
(insn 32 31 33 4 (set (reg:DF 97 [ D.26033 ])
        (mult:DF (reg:DF 91 [ D.26033 ])
            (reg:DF 96 [ D.26033 ]))) ge2fitman_preproc.cpp:307 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 96 [ D.26033 ])
        (expr_list:REG_DEAD (reg:DF 91 [ D.26033 ])
            (nil))))
(insn 33 32 34 4 (set (reg:SI 142)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:308 90 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 98 [ D.26034 ])
        (sign_extend:DI (reg:SI 142))) ge2fitman_preproc.cpp:308 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 142)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 99 [ D.26034 ])
                (plus:DI (reg:DI 98 [ D.26034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 100 [ D.26034 ])
                (ashift:DI (reg:DI 99 [ D.26034 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:308 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (parallel [
            (set (reg/f:DI 101 [ D.26031 ])
                (plus:DI (reg:DI 100 [ D.26034 ])
                    (reg/f:DI 143)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 143)
        (expr_list:REG_DEAD (reg:DI 100 [ D.26034 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 100 [ D.26034 ]))
                    (nil))))))
(insn 39 38 40 4 (set (reg:SF 102 [ D.26032 ])
        (mem:SF (reg/f:DI 101 [ D.26031 ]) [0 *_27+0 S4 A32])) ge2fitman_preproc.cpp:308 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.26031 ])
        (nil)))
(insn 40 39 41 4 (set (reg:DF 103 [ D.26033 ])
        (float_extend:DF (reg:SF 102 [ D.26032 ]))) ge2fitman_preproc.cpp:308 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 102 [ D.26032 ])
        (nil)))
(insn 41 40 42 4 (set (reg:SI 144)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:308 90 {*movsi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 104 [ D.26034 ])
        (sign_extend:DI (reg:SI 144))) ge2fitman_preproc.cpp:308 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 105 [ D.26034 ])
                (plus:DI (reg:DI 104 [ D.26034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 104 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 44 43 45 4 (parallel [
            (set (reg:DI 106 [ D.26034 ])
                (ashift:DI (reg:DI 105 [ D.26034 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 105 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 4 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:308 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg/f:DI 107 [ D.26031 ])
                (plus:DI (reg:DI 106 [ D.26034 ])
                    (reg/f:DI 145)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:308 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 145)
        (expr_list:REG_DEAD (reg:DI 106 [ D.26034 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 106 [ D.26034 ]))
                    (nil))))))
(insn 47 46 48 4 (set (reg:SF 108 [ D.26032 ])
        (mem:SF (reg/f:DI 107 [ D.26031 ]) [0 *_33+0 S4 A32])) ge2fitman_preproc.cpp:308 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.26031 ])
        (nil)))
(insn 48 47 49 4 (set (reg:DF 109 [ D.26033 ])
        (float_extend:DF (reg:SF 108 [ D.26032 ]))) ge2fitman_preproc.cpp:308 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 108 [ D.26032 ])
        (nil)))
(insn 49 48 50 4 (set (reg:DF 110 [ D.26033 ])
        (mult:DF (reg:DF 103 [ D.26033 ])
            (reg:DF 109 [ D.26033 ]))) ge2fitman_preproc.cpp:308 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 109 [ D.26033 ])
        (expr_list:REG_DEAD (reg:DF 103 [ D.26033 ])
            (nil))))
(insn 50 49 51 4 (set (reg:DF 111 [ D.26033 ])
        (plus:DF (reg:DF 97 [ D.26033 ])
            (reg:DF 110 [ D.26033 ]))) ge2fitman_preproc.cpp:307 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 110 [ D.26033 ])
        (expr_list:REG_DEAD (reg:DF 97 [ D.26033 ])
            (nil))))
(insn 51 50 52 4 (set (reg:DF 21 xmm0)
        (reg:DF 111 [ D.26033 ])) ge2fitman_preproc.cpp:308 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 111 [ D.26033 ])
        (nil)))
(call_insn 52 51 53 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:308 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 53 52 54 4 (set (reg:DF 146)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:308 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 54 53 55 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])
        (reg:DF 146)) ge2fitman_preproc.cpp:308 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 146)
        (nil)))
(insn 55 54 56 4 (set (reg:DF 147)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])) ge2fitman_preproc.cpp:310 128 {*movdf_internal}
     (nil))
(insn 56 55 57 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 147)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) ge2fitman_preproc.cpp:310 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 147)
        (nil)))
(jump_insn 57 56 61 4 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) ge2fitman_preproc.cpp:310 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 64)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 148
(note 61 57 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 5 (set (reg:DF 148)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 magnitude+0 S8 A64])) ge2fitman_preproc.cpp:310 128 {*movdf_internal}
     (nil))
(insn 63 62 64 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64])
        (reg:DF 148)) ge2fitman_preproc.cpp:310 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 148)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 64 63 65 6 73 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 129 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:305 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 129 66 130 6 (set (pc)
        (label_ref 67)) ge2fitman_preproc.cpp:305 654 {jump}
     (nil)
 -> 67)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 130 129 70)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 70 130 71 7 72 "" [1 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 111 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:314 90 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              9 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 112 113 149
(code_label 111 72 73 8 77 "" [1 uses])
(note 73 111 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 8 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:314 89 {*movdi_internal}
     (nil))
(insn 75 74 76 8 (set (reg:SI 112 [ D.26035 ])
        (mem/j:SI (plus:DI (reg/f:DI 149)
                (const_int 324 [0x144])) [0 procpar_info_43(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:314 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (nil)))
(insn 76 75 77 8 (parallel [
            (set (reg:SI 113 [ D.26035 ])
                (ashift:SI (reg:SI 112 [ D.26035 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:314 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 112 [ D.26035 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 113 [ D.26035 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:314 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.26035 ])
        (nil)))
(jump_insn 78 77 79 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) ge2fitman_preproc.cpp:314 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 114)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 150 151 152 153 154 155 156 157
(note 79 78 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 9 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:316 90 {*movsi_internal}
     (nil))
(insn 81 80 82 9 (set (reg:DI 114 [ D.26030 ])
        (sign_extend:DI (reg:SI 150))) ge2fitman_preproc.cpp:316 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(insn 82 81 83 9 (parallel [
            (set (reg:DI 115 [ D.26030 ])
                (ashift:DI (reg:DI 114 [ D.26030 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:316 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.26030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 9 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:316 89 {*movdi_internal}
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg/f:DI 116 [ D.26031 ])
                (plus:DI (reg:DI 115 [ D.26030 ])
                    (reg/f:DI 151)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:316 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (expr_list:REG_DEAD (reg:DI 115 [ D.26030 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
                        (reg:DI 115 [ D.26030 ]))
                    (nil))))))
(insn 85 84 86 9 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:316 90 {*movsi_internal}
     (nil))
(insn 86 85 87 9 (set (reg:DI 117 [ D.26030 ])
        (sign_extend:DI (reg:SI 152))) ge2fitman_preproc.cpp:316 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 152)
        (nil)))
(insn 87 86 88 9 (parallel [
            (set (reg:DI 118 [ D.26030 ])
                (ashift:DI (reg:DI 117 [ D.26030 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:316 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ D.26030 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 9 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:316 89 {*movdi_internal}
     (nil))
(insn 89 88 90 9 (parallel [
            (set (reg/f:DI 119 [ D.26031 ])
                (plus:DI (reg:DI 118 [ D.26030 ])
                    (reg/f:DI 153)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:316 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 153)
        (expr_list:REG_DEAD (reg:DI 118 [ D.26030 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 118 [ D.26030 ]))
                    (nil))))))
(insn 90 89 91 9 (set (reg:SF 120 [ D.26032 ])
        (mem:SF (reg/f:DI 119 [ D.26031 ]) [0 *_52+0 S4 A32])) ge2fitman_preproc.cpp:316 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.26031 ])
        (nil)))
(insn 91 90 92 9 (set (reg:SF 121 [ D.26032 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) ge2fitman_preproc.cpp:316 157 {*truncdfsf_fast_sse}
     (nil))
(insn 92 91 93 9 (set (reg:SF 122 [ D.26032 ])
        (div:SF (reg:SF 120 [ D.26032 ])
            (reg:SF 121 [ D.26032 ]))) ge2fitman_preproc.cpp:316 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 121 [ D.26032 ])
        (expr_list:REG_DEAD (reg:SF 120 [ D.26032 ])
            (nil))))
(insn 93 92 94 9 (set (mem:SF (reg/f:DI 116 [ D.26031 ]) [0 *_49+0 S4 A32])
        (reg:SF 122 [ D.26032 ])) ge2fitman_preproc.cpp:316 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 122 [ D.26032 ])
        (expr_list:REG_DEAD (reg/f:DI 116 [ D.26031 ])
            (nil))))
(insn 94 93 95 9 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:317 90 {*movsi_internal}
     (nil))
(insn 95 94 96 9 (set (reg:DI 123 [ D.26034 ])
        (sign_extend:DI (reg:SI 154))) ge2fitman_preproc.cpp:317 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(insn 96 95 97 9 (parallel [
            (set (reg:DI 124 [ D.26034 ])
                (plus:DI (reg:DI 123 [ D.26034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 97 96 98 9 (parallel [
            (set (reg:DI 125 [ D.26034 ])
                (ashift:DI (reg:DI 124 [ D.26034 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 98 97 99 9 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:317 89 {*movdi_internal}
     (nil))
(insn 99 98 100 9 (parallel [
            (set (reg/f:DI 126 [ D.26031 ])
                (plus:DI (reg:DI 125 [ D.26034 ])
                    (reg/f:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (expr_list:REG_DEAD (reg:DI 125 [ D.26034 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 scratch+0 S8 A64])
                        (reg:DI 125 [ D.26034 ]))
                    (nil))))))
(insn 100 99 101 9 (set (reg:SI 156)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:317 90 {*movsi_internal}
     (nil))
(insn 101 100 102 9 (set (reg:DI 127 [ D.26034 ])
        (sign_extend:DI (reg:SI 156))) ge2fitman_preproc.cpp:317 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 128 [ D.26034 ])
                (plus:DI (reg:DI 127 [ D.26034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 127 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 9 (parallel [
            (set (reg:DI 129 [ D.26034 ])
                (ashift:DI (reg:DI 128 [ D.26034 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 128 [ D.26034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 9 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])) ge2fitman_preproc.cpp:317 89 {*movdi_internal}
     (nil))
(insn 105 104 106 9 (parallel [
            (set (reg/f:DI 130 [ D.26031 ])
                (plus:DI (reg:DI 129 [ D.26034 ])
                    (reg/f:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:317 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (expr_list:REG_DEAD (reg:DI 129 [ D.26034 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 data+0 S8 A64])
                        (reg:DI 129 [ D.26034 ]))
                    (nil))))))
(insn 106 105 107 9 (set (reg:SF 131 [ D.26032 ])
        (mem:SF (reg/f:DI 130 [ D.26031 ]) [0 *_64+0 S4 A32])) ge2fitman_preproc.cpp:317 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ D.26031 ])
        (nil)))
(insn 107 106 108 9 (set (reg:SF 132 [ D.26032 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 max_magnitude+0 S8 A64]))) ge2fitman_preproc.cpp:317 157 {*truncdfsf_fast_sse}
     (nil))
(insn 108 107 109 9 (set (reg:SF 133 [ D.26032 ])
        (div:SF (reg:SF 131 [ D.26032 ])
            (reg:SF 132 [ D.26032 ]))) ge2fitman_preproc.cpp:317 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 132 [ D.26032 ])
        (expr_list:REG_DEAD (reg:SF 131 [ D.26032 ])
            (nil))))
(insn 109 108 110 9 (set (mem:SF (reg/f:DI 126 [ D.26031 ]) [0 *_60+0 S4 A32])
        (reg:SF 133 [ D.26032 ])) ge2fitman_preproc.cpp:317 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 133 [ D.26032 ])
        (expr_list:REG_DEAD (reg/f:DI 126 [ D.26031 ])
            (nil))))
(insn 110 109 131 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:314 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 131 110 132 9 (set (pc)
        (label_ref 111)) ge2fitman_preproc.cpp:314 654 {jump}
     (nil)
 -> 111)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 132 131 114)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 134 135
(code_label 114 132 115 10 76 "" [1 uses])
(note 115 114 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 119 10 (set (reg:SI 134 [ D.26035 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:321 90 {*movsi_internal}
     (nil))
(insn 119 116 123 10 (set (reg:SI 135 [ <retval> ])
        (reg:SI 134 [ D.26035 ])) ge2fitman_preproc.cpp:321 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 134 [ D.26035 ])
        (nil)))
(insn 123 119 124 10 (set (reg/i:SI 0 ax)
        (reg:SI 135 [ <retval> ])) ge2fitman_preproc.cpp:323 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 135 [ <retval> ])
        (nil)))
(insn 124 123 0 10 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:323 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int quality(float*, float*, float*, Procpar_info*, Preprocess*) (_Z7qualityPfS_S_P12Procpar_infoP10Preprocess, funcdef_no=1027, decl_uid=24429, cgraph_uid=232, symbol_order=233)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 150.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 207.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 238.
verify found no changes in insn with uid = 257.
verify found no changes in insn with uid = 271.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r301: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r301,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r298,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a24 (r295,l0) best SSE_REGS, allocno SSE_REGS
    r294: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a23 (r294,l0) best SSE_REGS, allocno SSE_REGS
    r293: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a25 (r292,l0) best SSE_REGS, allocno SSE_REGS
    r291: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a32 (r291,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a43 (r288,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a48 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a50 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a52 (r281,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a68 (r276,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a102 (r267,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a118 (r262,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a152 (r253,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a168 (r248,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a205 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a206 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a207 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a208 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a209 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a210 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a211 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a212 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a213 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a214 (r229,l0) best SSE_REGS, allocno SSE_REGS
    r228: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r228,l0) best AREG, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r225,l0) best SSE_REGS, allocno SSE_REGS
    r224: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r224,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r223: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r223,l0) best SSE_REGS, allocno SSE_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r217,l0) best SSE_REGS, allocno SSE_REGS
    r216: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r216,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a28 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a29 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a31 (r209,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a30 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a39 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r202,l0) best SSE_REGS, allocno SSE_REGS
    r201: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a42 (r201,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r200: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a41 (r200,l0) best SSE_REGS, allocno SSE_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a53 (r196,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r195: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r195,l0) best SSE_REGS, allocno SSE_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a69 (r185,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r182,l0) best SSE_REGS, allocno SSE_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a73 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a81 (r176,l0) best SSE_REGS, allocno SSE_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a71 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a96 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a103 (r160,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a119 (r149,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a138 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a140 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a153 (r124,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a155 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a169 (r113,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a170 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a174 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a181 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a171 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a189 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a196 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r226,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r225,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r223,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r224,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r301,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r218,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r217,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r215,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r216,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r298,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r294,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a24(r295,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a25(r292,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a26(r293,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a27(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r211,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a29(r210,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a30(r208,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a31(r209,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a32(r291,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a33(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a36(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a37(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a38(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a39(r203,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a40(r202,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a41(r200,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a42(r201,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a43(r288,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a44(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a46(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r284,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a49(r285,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a50(r282,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a51(r283,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a52(r281,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a53(r196,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a54(r190,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a55(r195,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a56(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a57(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a58(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a59(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a60(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a61(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r189,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a63(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a64(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a65(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a66(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a67(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a68(r276,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a69(r185,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a70(r184,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a71(r171,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a72(r183,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a73(r177,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a74(r182,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a75(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a78(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a79(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a80(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r176,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a82(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a83(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a85(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a86(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a89(r165,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a90(r169,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a91(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a92(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r164,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a97(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a98(r269,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a99(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r268,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r267,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a103(r160,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a104(r154,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a105(r159,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a106(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a110(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a113(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a114(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a116(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r263,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r262,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a119(r149,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a120(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a121(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a122(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r141,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r146,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a125(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r260,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r140,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a132(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a135(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a139(r129,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a140(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r128,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r255,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r253,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a153(r124,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a154(r118,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a155(r123,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a156(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a157(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a158(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a159(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a160(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a161(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a162(r117,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a163(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a164(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a165(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a166(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a167(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a168(r248,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a169(r113,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a170(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a171(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a172(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a173(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a174(r110,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a175(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a176(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a177(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a179(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r104,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a182(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a183(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a184(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a185(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a186(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a188(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a189(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a190(r97,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a191(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a192(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a193(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a194(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a195(r242,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a196(r92,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a197(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a198(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a199(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a200(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a201(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a202(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a203(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a205(r238,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a206(r237,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a207(r236,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a208(r235,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a209(r234,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a210(r233,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a211(r232,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a212(r231,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a213(r230,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a214(r229,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 290(l0): point = 0
   Insn 289(l0): point = 2
   Insn 285(l0): point = 4
   Insn 282(l0): point = 6
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 35(l0): point = 13
   Insn 34(l0): point = 15
   Insn 33(l0): point = 17
   Insn 292(l0): point = 20
   Insn 276(l0): point = 22
   Insn 275(l0): point = 24
   Insn 274(l0): point = 26
   Insn 273(l0): point = 28
   Insn 272(l0): point = 30
   Insn 271(l0): point = 32
   Insn 270(l0): point = 34
   Insn 269(l0): point = 36
   Insn 268(l0): point = 38
   Insn 267(l0): point = 40
   Insn 266(l0): point = 42
   Insn 265(l0): point = 44
   Insn 264(l0): point = 46
   Insn 263(l0): point = 48
   Insn 262(l0): point = 50
   Insn 261(l0): point = 52
   Insn 260(l0): point = 54
   Insn 259(l0): point = 56
   Insn 258(l0): point = 58
   Insn 257(l0): point = 60
   Insn 256(l0): point = 62
   Insn 255(l0): point = 64
   Insn 254(l0): point = 66
   Insn 253(l0): point = 68
   Insn 252(l0): point = 70
   Insn 251(l0): point = 72
   Insn 250(l0): point = 74
   Insn 249(l0): point = 76
   Insn 248(l0): point = 78
   Insn 247(l0): point = 80
   Insn 246(l0): point = 82
   Insn 245(l0): point = 84
   Insn 244(l0): point = 86
   Insn 243(l0): point = 88
   Insn 242(l0): point = 90
   Insn 241(l0): point = 92
   Insn 240(l0): point = 94
   Insn 239(l0): point = 96
   Insn 238(l0): point = 98
   Insn 237(l0): point = 100
   Insn 236(l0): point = 102
   Insn 235(l0): point = 104
   Insn 234(l0): point = 106
   Insn 233(l0): point = 108
   Insn 232(l0): point = 110
   Insn 231(l0): point = 112
   Insn 230(l0): point = 114
   Insn 229(l0): point = 116
   Insn 228(l0): point = 118
   Insn 227(l0): point = 120
   Insn 226(l0): point = 122
   Insn 225(l0): point = 124
   Insn 224(l0): point = 126
   Insn 223(l0): point = 128
   Insn 222(l0): point = 130
   Insn 221(l0): point = 132
   Insn 220(l0): point = 134
   Insn 219(l0): point = 136
   Insn 218(l0): point = 138
   Insn 217(l0): point = 140
   Insn 216(l0): point = 142
   Insn 215(l0): point = 144
   Insn 214(l0): point = 146
   Insn 213(l0): point = 148
   Insn 212(l0): point = 150
   Insn 211(l0): point = 152
   Insn 210(l0): point = 154
   Insn 209(l0): point = 156
   Insn 208(l0): point = 158
   Insn 207(l0): point = 160
   Insn 206(l0): point = 162
   Insn 205(l0): point = 164
   Insn 204(l0): point = 166
   Insn 203(l0): point = 168
   Insn 202(l0): point = 170
   Insn 201(l0): point = 172
   Insn 200(l0): point = 174
   Insn 199(l0): point = 176
   Insn 198(l0): point = 178
   Insn 197(l0): point = 180
   Insn 196(l0): point = 182
   Insn 195(l0): point = 184
   Insn 194(l0): point = 186
   Insn 193(l0): point = 188
   Insn 192(l0): point = 190
   Insn 191(l0): point = 192
   Insn 190(l0): point = 194
   Insn 189(l0): point = 196
   Insn 188(l0): point = 198
   Insn 187(l0): point = 200
   Insn 186(l0): point = 202
   Insn 185(l0): point = 204
   Insn 184(l0): point = 206
   Insn 183(l0): point = 208
   Insn 182(l0): point = 210
   Insn 181(l0): point = 212
   Insn 180(l0): point = 214
   Insn 179(l0): point = 216
   Insn 178(l0): point = 218
   Insn 177(l0): point = 220
   Insn 176(l0): point = 222
   Insn 175(l0): point = 224
   Insn 174(l0): point = 226
   Insn 173(l0): point = 228
   Insn 172(l0): point = 230
   Insn 171(l0): point = 232
   Insn 170(l0): point = 234
   Insn 169(l0): point = 236
   Insn 168(l0): point = 238
   Insn 167(l0): point = 240
   Insn 166(l0): point = 242
   Insn 165(l0): point = 244
   Insn 164(l0): point = 246
   Insn 163(l0): point = 248
   Insn 162(l0): point = 250
   Insn 161(l0): point = 252
   Insn 160(l0): point = 254
   Insn 159(l0): point = 256
   Insn 158(l0): point = 258
   Insn 157(l0): point = 260
   Insn 156(l0): point = 262
   Insn 155(l0): point = 264
   Insn 154(l0): point = 266
   Insn 153(l0): point = 268
   Insn 152(l0): point = 270
   Insn 151(l0): point = 272
   Insn 150(l0): point = 274
   Insn 149(l0): point = 276
   Insn 148(l0): point = 278
   Insn 147(l0): point = 280
   Insn 146(l0): point = 282
   Insn 145(l0): point = 284
   Insn 144(l0): point = 286
   Insn 143(l0): point = 288
   Insn 142(l0): point = 290
   Insn 141(l0): point = 292
   Insn 140(l0): point = 294
   Insn 139(l0): point = 296
   Insn 138(l0): point = 298
   Insn 137(l0): point = 300
   Insn 136(l0): point = 302
   Insn 135(l0): point = 304
   Insn 134(l0): point = 306
   Insn 133(l0): point = 308
   Insn 132(l0): point = 310
   Insn 131(l0): point = 312
   Insn 130(l0): point = 314
   Insn 129(l0): point = 316
   Insn 128(l0): point = 318
   Insn 127(l0): point = 320
   Insn 126(l0): point = 322
   Insn 125(l0): point = 324
   Insn 124(l0): point = 326
   Insn 123(l0): point = 328
   Insn 122(l0): point = 330
   Insn 121(l0): point = 332
   Insn 120(l0): point = 334
   Insn 119(l0): point = 336
   Insn 118(l0): point = 338
   Insn 117(l0): point = 340
   Insn 116(l0): point = 342
   Insn 115(l0): point = 344
   Insn 114(l0): point = 346
   Insn 113(l0): point = 348
   Insn 112(l0): point = 350
   Insn 111(l0): point = 352
   Insn 110(l0): point = 354
   Insn 109(l0): point = 356
   Insn 108(l0): point = 358
   Insn 107(l0): point = 360
   Insn 106(l0): point = 362
   Insn 105(l0): point = 364
   Insn 104(l0): point = 366
   Insn 103(l0): point = 368
   Insn 102(l0): point = 370
   Insn 101(l0): point = 372
   Insn 100(l0): point = 374
   Insn 99(l0): point = 376
   Insn 98(l0): point = 378
   Insn 97(l0): point = 380
   Insn 96(l0): point = 382
   Insn 95(l0): point = 384
   Insn 94(l0): point = 386
   Insn 93(l0): point = 388
   Insn 92(l0): point = 390
   Insn 91(l0): point = 392
   Insn 90(l0): point = 394
   Insn 89(l0): point = 396
   Insn 88(l0): point = 398
   Insn 87(l0): point = 400
   Insn 86(l0): point = 402
   Insn 85(l0): point = 404
   Insn 84(l0): point = 406
   Insn 83(l0): point = 408
   Insn 82(l0): point = 410
   Insn 81(l0): point = 412
   Insn 80(l0): point = 414
   Insn 79(l0): point = 416
   Insn 78(l0): point = 418
   Insn 77(l0): point = 420
   Insn 76(l0): point = 422
   Insn 75(l0): point = 424
   Insn 74(l0): point = 426
   Insn 73(l0): point = 428
   Insn 72(l0): point = 430
   Insn 71(l0): point = 432
   Insn 70(l0): point = 434
   Insn 69(l0): point = 436
   Insn 68(l0): point = 438
   Insn 67(l0): point = 440
   Insn 66(l0): point = 442
   Insn 65(l0): point = 444
   Insn 64(l0): point = 446
   Insn 63(l0): point = 448
   Insn 62(l0): point = 450
   Insn 61(l0): point = 452
   Insn 60(l0): point = 454
   Insn 59(l0): point = 456
   Insn 58(l0): point = 458
   Insn 57(l0): point = 460
   Insn 56(l0): point = 462
   Insn 55(l0): point = 464
   Insn 54(l0): point = 466
   Insn 53(l0): point = 468
   Insn 52(l0): point = 470
   Insn 51(l0): point = 472
   Insn 50(l0): point = 474
   Insn 49(l0): point = 476
   Insn 48(l0): point = 478
   Insn 47(l0): point = 480
   Insn 46(l0): point = 482
   Insn 45(l0): point = 484
   Insn 44(l0): point = 486
   Insn 43(l0): point = 488
   Insn 42(l0): point = 490
   Insn 41(l0): point = 492
   Insn 40(l0): point = 494
   Insn 39(l0): point = 496
   Insn 31(l0): point = 499
   Insn 30(l0): point = 501
   Insn 29(l0): point = 503
   Insn 28(l0): point = 505
   Insn 27(l0): point = 507
   Insn 26(l0): point = 509
   Insn 25(l0): point = 511
   Insn 24(l0): point = 513
   Insn 23(l0): point = 515
   Insn 22(l0): point = 517
   Insn 21(l0): point = 519
   Insn 20(l0): point = 521
   Insn 19(l0): point = 523
   Insn 18(l0): point = 525
   Insn 17(l0): point = 527
   Insn 16(l0): point = 529
   Insn 15(l0): point = 531
   Insn 14(l0): point = 533
   Insn 13(l0): point = 535
   Insn 12(l0): point = 537
   Insn 11(l0): point = 539
   Insn 10(l0): point = 541
   Insn 6(l0): point = 543
   Insn 5(l0): point = 545
   Insn 4(l0): point = 547
   Insn 3(l0): point = 549
   Insn 2(l0): point = 551
 a0(r228): [3..4]
 a1(r227): [5..6]
 a2(r222): [25..40]
 a3(r226): [25..26]
 a4(r225): [27..28]
 a5(r223): [27..38]
 a6(r224): [29..30]
 a7(r301): [35..36]
 a8(r300): [41..42]
 a9(r221): [41..44]
 a10(r220): [45..46]
 a11(r219): [47..48]
 a12(r299): [49..50]
 a13(r214): [53..68]
 a14(r218): [53..54]
 a15(r217): [55..56]
 a16(r215): [55..66]
 a17(r216): [57..58]
 a18(r298): [63..64]
 a19(r297): [69..70]
 a20(r213): [69..72]
 a21(r212): [73..74]
 a22(r296): [75..76]
 a23(r294): [79..80]
 a24(r295): [81..82]
 a25(r292): [85..86]
 a26(r293): [87..88]
 a27(r207): [91..106]
 a28(r211): [91..92]
 a29(r210): [93..94]
 a30(r208): [93..104]
 a31(r209): [95..96]
 a32(r291): [101..102]
 a33(r290): [107..108]
 a34(r206): [107..110]
 a35(r205): [111..112]
 a36(r204): [113..114]
 a37(r289): [115..116]
 a38(r199): [119..134]
 a39(r203): [119..120]
 a40(r202): [121..122]
 a41(r200): [121..132]
 a42(r201): [123..124]
 a43(r288): [129..130]
 a44(r287): [135..136]
 a45(r198): [135..138]
 a46(r197): [139..140]
 a47(r286): [141..142]
 a48(r284): [145..146]
 a49(r285): [147..148]
 a50(r282): [151..152]
 a51(r283): [153..154]
 a52(r281): [157..158]
 a53(r196): [163..166]
 a54(r190): [165..182]
 a55(r195): [167..168]
 a56(r194): [169..170]
 a57(r280): [171..172]
 a58(r193): [171..174]
 a59(r192): [175..176]
 a60(r191): [177..178]
 a61(r279): [179..180]
 a62(r189): [183..184]
 a63(r188): [185..186]
 a64(r278): [187..188]
 a65(r187): [187..190]
 a66(r186): [191..192]
 a67(r277): [193..194]
 a68(r276): [197..198]
 a69(r185): [203..204]
 a70(r184): [205..206]
 a71(r171): [205..240]
 a72(r183): [207..208]
 a73(r177): [207..224]
 a74(r182): [209..210]
 a75(r181): [211..212]
 a76(r275): [213..214]
 a77(r180): [213..216]
 a78(r179): [217..218]
 a79(r178): [219..220]
 a80(r274): [221..222]
 a81(r176): [225..226]
 a82(r175): [227..228]
 a83(r273): [229..230]
 a84(r174): [229..232]
 a85(r173): [233..234]
 a86(r172): [235..236]
 a87(r272): [237..238]
 a88(r170): [241..242]
 a89(r165): [241..256]
 a90(r169): [243..244]
 a91(r168): [245..246]
 a92(r271): [247..248]
 a93(r167): [247..250]
 a94(r166): [251..252]
 a95(r270): [253..254]
 a96(r164): [257..258]
 a97(r163): [259..260]
 a98(r269): [261..262]
 a99(r162): [261..264]
 a100(r161): [265..266]
 a101(r268): [267..268]
 a102(r267): [271..272]
 a103(r160): [277..280]
 a104(r154): [279..296]
 a105(r159): [281..282]
 a106(r158): [283..284]
 a107(r266): [285..286]
 a108(r157): [285..288]
 a109(r156): [289..290]
 a110(r155): [291..292]
 a111(r265): [293..294]
 a112(r153): [297..298]
 a113(r152): [299..300]
 a114(r264): [301..302]
 a115(r151): [301..304]
 a116(r150): [305..306]
 a117(r263): [307..308]
 a118(r262): [311..312]
 a119(r149): [317..318]
 a120(r148): [319..320]
 a121(r135): [319..354]
 a122(r147): [321..322]
 a123(r141): [321..338]
 a124(r146): [323..324]
 a125(r145): [325..326]
 a126(r261): [327..328]
 a127(r144): [327..330]
 a128(r143): [331..332]
 a129(r142): [333..334]
 a130(r260): [335..336]
 a131(r140): [339..340]
 a132(r139): [341..342]
 a133(r259): [343..344]
 a134(r138): [343..346]
 a135(r137): [347..348]
 a136(r136): [349..350]
 a137(r258): [351..352]
 a138(r134): [355..356]
 a139(r129): [355..370]
 a140(r133): [357..358]
 a141(r132): [359..360]
 a142(r257): [361..362]
 a143(r131): [361..364]
 a144(r130): [365..366]
 a145(r256): [367..368]
 a146(r128): [371..372]
 a147(r127): [373..374]
 a148(r255): [375..376]
 a149(r126): [375..378]
 a150(r125): [379..380]
 a151(r254): [381..382]
 a152(r253): [385..386]
 a153(r124): [391..394]
 a154(r118): [393..410]
 a155(r123): [395..396]
 a156(r122): [397..398]
 a157(r252): [399..400]
 a158(r121): [399..402]
 a159(r120): [403..404]
 a160(r119): [405..406]
 a161(r251): [407..408]
 a162(r117): [411..412]
 a163(r116): [413..414]
 a164(r250): [415..416]
 a165(r115): [415..418]
 a166(r114): [419..420]
 a167(r249): [421..422]
 a168(r248): [425..426]
 a169(r113): [431..432]
 a170(r112): [433..434]
 a171(r99): [433..468]
 a172(r111): [435..436]
 a173(r105): [435..452]
 a174(r110): [437..438]
 a175(r109): [439..440]
 a176(r247): [441..442]
 a177(r108): [441..444]
 a178(r107): [445..446]
 a179(r106): [447..448]
 a180(r246): [449..450]
 a181(r104): [453..454]
 a182(r103): [455..456]
 a183(r245): [457..458]
 a184(r102): [457..460]
 a185(r101): [461..462]
 a186(r100): [463..464]
 a187(r244): [465..466]
 a188(r98): [469..470]
 a189(r93): [469..484]
 a190(r97): [471..472]
 a191(r96): [473..474]
 a192(r243): [475..476]
 a193(r95): [475..478]
 a194(r94): [479..480]
 a195(r242): [481..482]
 a196(r92): [485..486]
 a197(r91): [487..488]
 a198(r241): [489..490]
 a199(r90): [489..492]
 a200(r89): [493..494]
 a201(r240): [495..496]
 a202(r88): [12..13]
 a203(r87): [14..15]
 a204(r239): [16..17]
 a205(r238): [502..503]
 a206(r237): [506..507]
 a207(r236): [510..511]
 a208(r235): [514..515]
 a209(r234): [518..519]
 a210(r233): [522..523]
 a211(r232): [526..527]
 a212(r231): [530..531]
 a213(r230): [534..535]
 a214(r229): [538..539]
Compressing live ranges: from 554 to 346 - 62%
Ranges after the compression:
 a0(r228): [0..1]
 a1(r227): [2..3]
 a2(r222): [10..17]
 a3(r226): [10..11]
 a4(r225): [12..13]
 a5(r223): [12..17]
 a6(r224): [14..15]
 a7(r301): [16..17]
 a8(r300): [18..19]
 a9(r221): [18..19]
 a10(r220): [20..21]
 a11(r219): [22..23]
 a12(r299): [24..25]
 a13(r214): [26..33]
 a14(r218): [26..27]
 a15(r217): [28..29]
 a16(r215): [28..33]
 a17(r216): [30..31]
 a18(r298): [32..33]
 a19(r297): [34..35]
 a20(r213): [34..35]
 a21(r212): [36..37]
 a22(r296): [38..39]
 a23(r294): [40..41]
 a24(r295): [42..43]
 a25(r292): [44..45]
 a26(r293): [46..47]
 a27(r207): [48..55]
 a28(r211): [48..49]
 a29(r210): [50..51]
 a30(r208): [50..55]
 a31(r209): [52..53]
 a32(r291): [54..55]
 a33(r290): [56..57]
 a34(r206): [56..57]
 a35(r205): [58..59]
 a36(r204): [60..61]
 a37(r289): [62..63]
 a38(r199): [64..71]
 a39(r203): [64..65]
 a40(r202): [66..67]
 a41(r200): [66..71]
 a42(r201): [68..69]
 a43(r288): [70..71]
 a44(r287): [72..73]
 a45(r198): [72..73]
 a46(r197): [74..75]
 a47(r286): [76..77]
 a48(r284): [78..79]
 a49(r285): [80..81]
 a50(r282): [82..83]
 a51(r283): [84..85]
 a52(r281): [86..87]
 a53(r196): [88..89]
 a54(r190): [88..101]
 a55(r195): [90..91]
 a56(r194): [92..93]
 a57(r280): [94..95]
 a58(r193): [94..95]
 a59(r192): [96..97]
 a60(r191): [98..99]
 a61(r279): [100..101]
 a62(r189): [102..103]
 a63(r188): [104..105]
 a64(r278): [106..107]
 a65(r187): [106..107]
 a66(r186): [108..109]
 a67(r277): [110..111]
 a68(r276): [112..113]
 a69(r185): [114..115]
 a70(r184): [116..117]
 a71(r171): [116..143]
 a72(r183): [118..119]
 a73(r177): [118..131]
 a74(r182): [120..121]
 a75(r181): [122..123]
 a76(r275): [124..125]
 a77(r180): [124..125]
 a78(r179): [126..127]
 a79(r178): [128..129]
 a80(r274): [130..131]
 a81(r176): [132..133]
 a82(r175): [134..135]
 a83(r273): [136..137]
 a84(r174): [136..137]
 a85(r173): [138..139]
 a86(r172): [140..141]
 a87(r272): [142..143]
 a88(r170): [144..145]
 a89(r165): [144..155]
 a90(r169): [146..147]
 a91(r168): [148..149]
 a92(r271): [150..151]
 a93(r167): [150..151]
 a94(r166): [152..153]
 a95(r270): [154..155]
 a96(r164): [156..157]
 a97(r163): [158..159]
 a98(r269): [160..161]
 a99(r162): [160..161]
 a100(r161): [162..163]
 a101(r268): [164..165]
 a102(r267): [166..167]
 a103(r160): [168..169]
 a104(r154): [168..181]
 a105(r159): [170..171]
 a106(r158): [172..173]
 a107(r266): [174..175]
 a108(r157): [174..175]
 a109(r156): [176..177]
 a110(r155): [178..179]
 a111(r265): [180..181]
 a112(r153): [182..183]
 a113(r152): [184..185]
 a114(r264): [186..187]
 a115(r151): [186..187]
 a116(r150): [188..189]
 a117(r263): [190..191]
 a118(r262): [192..193]
 a119(r149): [194..195]
 a120(r148): [196..197]
 a121(r135): [196..223]
 a122(r147): [198..199]
 a123(r141): [198..211]
 a124(r146): [200..201]
 a125(r145): [202..203]
 a126(r261): [204..205]
 a127(r144): [204..205]
 a128(r143): [206..207]
 a129(r142): [208..209]
 a130(r260): [210..211]
 a131(r140): [212..213]
 a132(r139): [214..215]
 a133(r259): [216..217]
 a134(r138): [216..217]
 a135(r137): [218..219]
 a136(r136): [220..221]
 a137(r258): [222..223]
 a138(r134): [224..225]
 a139(r129): [224..235]
 a140(r133): [226..227]
 a141(r132): [228..229]
 a142(r257): [230..231]
 a143(r131): [230..231]
 a144(r130): [232..233]
 a145(r256): [234..235]
 a146(r128): [236..237]
 a147(r127): [238..239]
 a148(r255): [240..241]
 a149(r126): [240..241]
 a150(r125): [242..243]
 a151(r254): [244..245]
 a152(r253): [246..247]
 a153(r124): [248..249]
 a154(r118): [248..261]
 a155(r123): [250..251]
 a156(r122): [252..253]
 a157(r252): [254..255]
 a158(r121): [254..255]
 a159(r120): [256..257]
 a160(r119): [258..259]
 a161(r251): [260..261]
 a162(r117): [262..263]
 a163(r116): [264..265]
 a164(r250): [266..267]
 a165(r115): [266..267]
 a166(r114): [268..269]
 a167(r249): [270..271]
 a168(r248): [272..273]
 a169(r113): [274..275]
 a170(r112): [276..277]
 a171(r99): [276..303]
 a172(r111): [278..279]
 a173(r105): [278..291]
 a174(r110): [280..281]
 a175(r109): [282..283]
 a176(r247): [284..285]
 a177(r108): [284..285]
 a178(r107): [286..287]
 a179(r106): [288..289]
 a180(r246): [290..291]
 a181(r104): [292..293]
 a182(r103): [294..295]
 a183(r245): [296..297]
 a184(r102): [296..297]
 a185(r101): [298..299]
 a186(r100): [300..301]
 a187(r244): [302..303]
 a188(r98): [304..305]
 a189(r93): [304..315]
 a190(r97): [306..307]
 a191(r96): [308..309]
 a192(r243): [310..311]
 a193(r95): [310..311]
 a194(r94): [312..313]
 a195(r242): [314..315]
 a196(r92): [316..317]
 a197(r91): [318..319]
 a198(r241): [320..321]
 a199(r90): [320..321]
 a200(r89): [322..323]
 a201(r240): [324..325]
 a202(r88): [4..5]
 a203(r87): [6..7]
 a204(r239): [8..9]
 a205(r238): [326..327]
 a206(r237): [328..329]
 a207(r236): [330..331]
 a208(r235): [332..333]
 a209(r234): [334..335]
 a210(r233): [336..337]
 a211(r232): [338..339]
 a212(r231): [340..341]
 a213(r230): [342..343]
 a214(r229): [344..345]
  pref0:a7(r301)<-hr21@1
  pref1:a18(r298)<-hr21@1
  pref2:a32(r291)<-hr21@1
  pref3:a43(r288)<-hr21@1
  pref4:a52(r281)<-hr21@1
  pref5:a68(r276)<-hr21@1
  pref6:a102(r267)<-hr21@1
  pref7:a118(r262)<-hr21@1
  pref8:a152(r253)<-hr21@1
  pref9:a168(r248)<-hr21@1
  regions=1, blocks=6, points=346
    allocnos=215 (big 0), copies=0, conflicts=0, ranges=215
Disposition:
  203:r87  l0     0  202:r88  l0     0  200:r89  l0     0  199:r90  l0     1
  197:r91  l0     0  196:r92  l0    21  189:r93  l0    22  194:r94  l0     0
  193:r95  l0     1  191:r96  l0     0  190:r97  l0    21  188:r98  l0    21
  171:r99  l0    22  186:r100 l0     0  185:r101 l0     0  184:r102 l0     1
  182:r103 l0     0  181:r104 l0    21  173:r105 l0    23  179:r106 l0     0
  178:r107 l0     0  177:r108 l0     1  175:r109 l0     0  174:r110 l0    21
  172:r111 l0    21  170:r112 l0    21  169:r113 l0    21  166:r114 l0     0
  165:r115 l0     1  163:r116 l0     0  162:r117 l0    21  154:r118 l0    22
  160:r119 l0     0  159:r120 l0     0  158:r121 l0     1  156:r122 l0     0
  155:r123 l0    21  153:r124 l0    21  150:r125 l0     0  149:r126 l0     1
  147:r127 l0     0  146:r128 l0    21  139:r129 l0    22  144:r130 l0     0
  143:r131 l0     1  141:r132 l0     0  140:r133 l0    21  138:r134 l0    21
  121:r135 l0    22  136:r136 l0     0  135:r137 l0     0  134:r138 l0     1
  132:r139 l0     0  131:r140 l0    21  123:r141 l0    23  129:r142 l0     0
  128:r143 l0     0  127:r144 l0     1  125:r145 l0     0  124:r146 l0    21
  122:r147 l0    21  120:r148 l0    21  119:r149 l0    21  116:r150 l0     0
  115:r151 l0     1  113:r152 l0     0  112:r153 l0    21  104:r154 l0    22
  110:r155 l0     0  109:r156 l0     0  108:r157 l0     1  106:r158 l0     0
  105:r159 l0    21  103:r160 l0    21  100:r161 l0     0   99:r162 l0     1
   97:r163 l0     0   96:r164 l0    21   89:r165 l0    22   94:r166 l0     0
   93:r167 l0     1   91:r168 l0     0   90:r169 l0    21   88:r170 l0    21
   71:r171 l0    22   86:r172 l0     0   85:r173 l0     0   84:r174 l0     1
   82:r175 l0     0   81:r176 l0    21   73:r177 l0    23   79:r178 l0     0
   78:r179 l0     0   77:r180 l0     1   75:r181 l0     0   74:r182 l0    21
   72:r183 l0    21   70:r184 l0    21   69:r185 l0    21   66:r186 l0     0
   65:r187 l0     1   63:r188 l0     0   62:r189 l0    21   54:r190 l0    22
   60:r191 l0     0   59:r192 l0     0   58:r193 l0     1   56:r194 l0     0
   55:r195 l0    21   53:r196 l0    21   46:r197 l0     0   45:r198 l0     1
   38:r199 l0     3   41:r200 l0   mem   42:r201 l0    21   40:r202 l0    21
   39:r203 l0    21   36:r204 l0     0   35:r205 l0     0   34:r206 l0     1
   27:r207 l0     3   30:r208 l0   mem   31:r209 l0    21   29:r210 l0    21
   28:r211 l0    21   21:r212 l0     0   20:r213 l0     1   13:r214 l0     3
   16:r215 l0   mem   17:r216 l0    21   15:r217 l0    21   14:r218 l0    21
   11:r219 l0     0   10:r220 l0     0    9:r221 l0     1    2:r222 l0     3
    5:r223 l0   mem    6:r224 l0    21    4:r225 l0    21    3:r226 l0    21
    1:r227 l0     0    0:r228 l0     0  214:r229 l0    21  213:r230 l0    21
  212:r231 l0    21  211:r232 l0    21  210:r233 l0    21  209:r234 l0    21
  208:r235 l0    21  207:r236 l0    21  206:r237 l0    21  205:r238 l0    21
  204:r239 l0     0  201:r240 l0     0  198:r241 l0     0  195:r242 l0     0
  192:r243 l0     0  187:r244 l0     0  183:r245 l0     0  180:r246 l0     0
  176:r247 l0     0  168:r248 l0     0  167:r249 l0     0  164:r250 l0     0
  161:r251 l0     0  157:r252 l0     0  152:r253 l0     0  151:r254 l0     0
  148:r255 l0     0  145:r256 l0     0  142:r257 l0     0  137:r258 l0     0
  133:r259 l0     0  130:r260 l0     0  126:r261 l0     0  118:r262 l0     0
  117:r263 l0     0  114:r264 l0     0  111:r265 l0     0  107:r266 l0     0
  102:r267 l0     0  101:r268 l0     0   98:r269 l0     0   95:r270 l0     0
   92:r271 l0     0   87:r272 l0     0   83:r273 l0     0   80:r274 l0     0
   76:r275 l0     0   68:r276 l0     0   67:r277 l0     0   64:r278 l0     0
   61:r279 l0     0   57:r280 l0     0   52:r281 l0     0   50:r282 l0    21
   51:r283 l0    21   48:r284 l0    21   49:r285 l0    21   47:r286 l0     0
   44:r287 l0     0   43:r288 l0     0   37:r289 l0     0   33:r290 l0     0
   32:r291 l0     0   25:r292 l0    21   26:r293 l0    21   23:r294 l0    21
   24:r295 l0    21   22:r296 l0     0   19:r297 l0     0   18:r298 l0     0
   12:r299 l0     0    8:r300 l0     0    7:r301 l0     0
+++Costs: overall 39, reg -21, mem 60, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int quality(float*, float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8]
;;  ref usage 	r0={12d,2u} r1={11d,1u} r2={11d,1u} r4={11d,1u} r5={11d,1u} r6={1d,5u} r7={1d,15u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,4u} r17={68d,1u} r18={10d} r19={10d} r20={1d,96u,22e} r21={21d,20u} r22={14d,3u} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d,1u} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u,1e} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u,1e} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1e} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u,1e} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u,1e} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u,1e} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u,1e} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u,1e} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u,1e} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u,1e} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u,1e} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u,1e} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u,1e} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} 
;;    total ref usage 1436{1026d,366u,44e} in 275{265 regular + 10 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 229 230 231 232 233 234 235 236 237 238
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) ge2fitman_preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) ge2fitman_preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
        (reg:DI 1 dx [ scratch ])) ge2fitman_preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ scratch ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 procpar_info+0 S8 A64])
        (reg:DI 2 cx [ procpar_info ])) ge2fitman_preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ procpar_info ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 preprocess+0 S8 A64])
        (reg:DI 37 r8 [ preprocess ])) ge2fitman_preproc.cpp:326 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ preprocess ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:328 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DF 229)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 229)) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 229)
        (nil)))
(insn 13 12 14 2 (set (reg:DF 230)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 230)) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 230)
        (nil)))
(insn 15 14 16 2 (set (reg:DF 231)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 231)) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 231)
        (nil)))
(insn 17 16 18 2 (set (reg:DF 232)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 232)) ge2fitman_preproc.cpp:329 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 232)
        (nil)))
(insn 19 18 20 2 (set (reg:DF 233)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])
        (reg:DF 233)) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 233)
        (nil)))
(insn 21 20 22 2 (set (reg:DF 234)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 234)) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 234)
        (nil)))
(insn 23 22 24 2 (set (reg:DF 235)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 235)) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 235)
        (nil)))
(insn 25 24 26 2 (set (reg:DF 236)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (nil))
(insn 26 25 27 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 236)) ge2fitman_preproc.cpp:330 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 236)
        (nil)))
(insn 27 26 28 2 (set (reg:DF 237)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:331 128 {*movdf_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 237)) ge2fitman_preproc.cpp:331 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 237)
        (nil)))
(insn 29 28 30 2 (set (reg:DF 238)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:331 128 {*movdf_internal}
     (nil))
(insn 30 29 31 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 238)) ge2fitman_preproc.cpp:331 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 238)
        (nil)))
(insn 31 30 277 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:333 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 239
(code_label 277 31 32 3 82 "" [1 uses])
(note 32 277 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 3 (set (reg/f:DI 239)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:333 89 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:SI 87 [ D.26036 ])
        (mem/j:SI (plus:DI (reg/f:DI 239)
                (const_int 324 [0x144])) [0 procpar_info_16(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:333 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 239)
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg:SI 88 [ D.26036 ])
                (ashift:SI (reg:SI 87 [ D.26036 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:333 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.26036 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:333 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26036 ])
        (nil)))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) ge2fitman_preproc.cpp:333 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 280)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:335 90 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 89 [ D.26037 ])
        (sign_extend:DI (reg:SI 240))) ge2fitman_preproc.cpp:335 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 90 [ D.26037 ])
                (ashift:DI (reg:DI 89 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:335 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 4 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:335 89 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg/f:DI 91 [ D.26038 ])
                (plus:DI (reg:DI 90 [ D.26037 ])
                    (reg/f:DI 241)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 241)
        (expr_list:REG_DEAD (reg:DI 90 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 90 [ D.26037 ]))
                    (nil))))))
(insn 44 43 45 4 (set (reg:SF 92 [ D.26039 ])
        (mem:SF (reg/f:DI 91 [ D.26038 ]) [0 *_22+0 S4 A32])) ge2fitman_preproc.cpp:335 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.26038 ])
        (nil)))
(insn 45 44 46 4 (set (reg:DF 93 [ D.26040 ])
        (float_extend:DF (reg:SF 92 [ D.26039 ]))) ge2fitman_preproc.cpp:335 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 92 [ D.26039 ])
        (nil)))
(insn 46 45 47 4 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:335 90 {*movsi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:DI 94 [ D.26037 ])
        (sign_extend:DI (reg:SI 242))) ge2fitman_preproc.cpp:335 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 242)
        (nil)))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 95 [ D.26037 ])
                (ashift:DI (reg:DI 94 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:335 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 4 (set (reg/f:DI 243)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:335 89 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 96 [ D.26038 ])
                (plus:DI (reg:DI 95 [ D.26037 ])
                    (reg/f:DI 243)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:335 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 243)
        (expr_list:REG_DEAD (reg:DI 95 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 95 [ D.26037 ]))
                    (nil))))))
(insn 51 50 52 4 (set (reg:SF 97 [ D.26039 ])
        (mem:SF (reg/f:DI 96 [ D.26038 ]) [0 *_27+0 S4 A32])) ge2fitman_preproc.cpp:335 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.26038 ])
        (nil)))
(insn 52 51 53 4 (set (reg:DF 98 [ D.26040 ])
        (float_extend:DF (reg:SF 97 [ D.26039 ]))) ge2fitman_preproc.cpp:335 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 97 [ D.26039 ])
        (nil)))
(insn 53 52 54 4 (set (reg:DF 99 [ D.26040 ])
        (mult:DF (reg:DF 93 [ D.26040 ])
            (reg:DF 98 [ D.26040 ]))) ge2fitman_preproc.cpp:335 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 98 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 93 [ D.26040 ])
            (nil))))
(insn 54 53 55 4 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:336 90 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 100 [ D.26041 ])
        (sign_extend:DI (reg:SI 244))) ge2fitman_preproc.cpp:336 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 244)
        (nil)))
(insn 56 55 57 4 (parallel [
            (set (reg:DI 101 [ D.26041 ])
                (plus:DI (reg:DI 100 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 4 (parallel [
            (set (reg:DI 102 [ D.26041 ])
                (ashift:DI (reg:DI 101 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 4 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:336 89 {*movdi_internal}
     (nil))
(insn 59 58 60 4 (parallel [
            (set (reg/f:DI 103 [ D.26038 ])
                (plus:DI (reg:DI 102 [ D.26041 ])
                    (reg/f:DI 245)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 245)
        (expr_list:REG_DEAD (reg:DI 102 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 102 [ D.26041 ]))
                    (nil))))))
(insn 60 59 61 4 (set (reg:SF 104 [ D.26039 ])
        (mem:SF (reg/f:DI 103 [ D.26038 ]) [0 *_34+0 S4 A32])) ge2fitman_preproc.cpp:336 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.26038 ])
        (nil)))
(insn 61 60 62 4 (set (reg:DF 105 [ D.26040 ])
        (float_extend:DF (reg:SF 104 [ D.26039 ]))) ge2fitman_preproc.cpp:336 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 104 [ D.26039 ])
        (nil)))
(insn 62 61 63 4 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:336 90 {*movsi_internal}
     (nil))
(insn 63 62 64 4 (set (reg:DI 106 [ D.26041 ])
        (sign_extend:DI (reg:SI 246))) ge2fitman_preproc.cpp:336 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 246)
        (nil)))
(insn 64 63 65 4 (parallel [
            (set (reg:DI 107 [ D.26041 ])
                (plus:DI (reg:DI 106 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 4 (parallel [
            (set (reg:DI 108 [ D.26041 ])
                (ashift:DI (reg:DI 107 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 4 (set (reg/f:DI 247)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:336 89 {*movdi_internal}
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg/f:DI 109 [ D.26038 ])
                (plus:DI (reg:DI 108 [ D.26041 ])
                    (reg/f:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 247)
        (expr_list:REG_DEAD (reg:DI 108 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 108 [ D.26041 ]))
                    (nil))))))
(insn 68 67 69 4 (set (reg:SF 110 [ D.26039 ])
        (mem:SF (reg/f:DI 109 [ D.26038 ]) [0 *_40+0 S4 A32])) ge2fitman_preproc.cpp:336 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.26038 ])
        (nil)))
(insn 69 68 70 4 (set (reg:DF 111 [ D.26040 ])
        (float_extend:DF (reg:SF 110 [ D.26039 ]))) ge2fitman_preproc.cpp:336 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 110 [ D.26039 ])
        (nil)))
(insn 70 69 71 4 (set (reg:DF 112 [ D.26040 ])
        (mult:DF (reg:DF 105 [ D.26040 ])
            (reg:DF 111 [ D.26040 ]))) ge2fitman_preproc.cpp:336 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 105 [ D.26040 ])
            (nil))))
(insn 71 70 72 4 (set (reg:DF 113 [ D.26040 ])
        (plus:DF (reg:DF 99 [ D.26040 ])
            (reg:DF 112 [ D.26040 ]))) ge2fitman_preproc.cpp:335 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 112 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 99 [ D.26040 ])
            (nil))))
(insn 72 71 73 4 (set (reg:DF 21 xmm0)
        (reg:DF 113 [ D.26040 ])) ge2fitman_preproc.cpp:336 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 113 [ D.26040 ])
        (nil)))
(call_insn 73 72 74 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:336 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 74 73 75 4 (set (reg:DF 248)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:336 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 75 74 76 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 248)) ge2fitman_preproc.cpp:336 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 248)
        (nil)))
(insn 76 75 77 4 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:338 90 {*movsi_internal}
     (nil))
(insn 77 76 78 4 (set (reg:DI 114 [ D.26037 ])
        (sign_extend:DI (reg:SI 249))) ge2fitman_preproc.cpp:338 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 249)
        (nil)))
(insn 78 77 79 4 (parallel [
            (set (reg:DI 115 [ D.26037 ])
                (ashift:DI (reg:DI 114 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:338 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 4 (set (reg/f:DI 250)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:338 89 {*movdi_internal}
     (nil))
(insn 80 79 81 4 (parallel [
            (set (reg/f:DI 116 [ D.26038 ])
                (plus:DI (reg:DI 115 [ D.26037 ])
                    (reg/f:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:338 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 250)
        (expr_list:REG_DEAD (reg:DI 115 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 115 [ D.26037 ]))
                    (nil))))))
(insn 81 80 82 4 (set (reg:SF 117 [ D.26039 ])
        (mem:SF (reg/f:DI 116 [ D.26038 ]) [0 *_49+0 S4 A32])) ge2fitman_preproc.cpp:338 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.26038 ])
        (nil)))
(insn 82 81 83 4 (set (reg:DF 118 [ D.26040 ])
        (float_extend:DF (reg:SF 117 [ D.26039 ]))) ge2fitman_preproc.cpp:338 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ D.26039 ])
        (nil)))
(insn 83 82 84 4 (set (reg:SI 251)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:338 90 {*movsi_internal}
     (nil))
(insn 84 83 85 4 (set (reg:DI 119 [ D.26041 ])
        (sign_extend:DI (reg:SI 251))) ge2fitman_preproc.cpp:338 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 251)
        (nil)))
(insn 85 84 86 4 (parallel [
            (set (reg:DI 120 [ D.26041 ])
                (plus:DI (reg:DI 119 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:338 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 4 (parallel [
            (set (reg:DI 121 [ D.26041 ])
                (ashift:DI (reg:DI 120 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:338 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 4 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:338 89 {*movdi_internal}
     (nil))
(insn 88 87 89 4 (parallel [
            (set (reg/f:DI 122 [ D.26038 ])
                (plus:DI (reg:DI 121 [ D.26041 ])
                    (reg/f:DI 252)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:338 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 252)
        (expr_list:REG_DEAD (reg:DI 121 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 121 [ D.26041 ]))
                    (nil))))))
(insn 89 88 90 4 (set (reg:SF 123 [ D.26039 ])
        (mem:SF (reg/f:DI 122 [ D.26038 ]) [0 *_55+0 S4 A32])) ge2fitman_preproc.cpp:338 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.26038 ])
        (nil)))
(insn 90 89 91 4 (set (reg:DF 124 [ D.26040 ])
        (float_extend:DF (reg:SF 123 [ D.26039 ]))) ge2fitman_preproc.cpp:338 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 123 [ D.26039 ])
        (nil)))
(insn 91 90 92 4 (set (reg:DF 22 xmm1)
        (reg:DF 118 [ D.26040 ])) ge2fitman_preproc.cpp:338 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 118 [ D.26040 ])
        (nil)))
(insn 92 91 93 4 (set (reg:DF 21 xmm0)
        (reg:DF 124 [ D.26040 ])) ge2fitman_preproc.cpp:338 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 124 [ D.26040 ])
        (nil)))
(call_insn 93 92 94 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:338 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 94 93 95 4 (set (reg:DF 253)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:338 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 95 94 96 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])
        (reg:DF 253)) ge2fitman_preproc.cpp:338 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 253)
        (nil)))
(insn 96 95 97 4 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:340 90 {*movsi_internal}
     (nil))
(insn 97 96 98 4 (set (reg:DI 125 [ D.26037 ])
        (sign_extend:DI (reg:SI 254))) ge2fitman_preproc.cpp:340 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 254)
        (nil)))
(insn 98 97 99 4 (parallel [
            (set (reg:DI 126 [ D.26037 ])
                (ashift:DI (reg:DI 125 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:340 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 4 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:340 89 {*movdi_internal}
     (nil))
(insn 100 99 101 4 (parallel [
            (set (reg/f:DI 127 [ D.26038 ])
                (plus:DI (reg:DI 126 [ D.26037 ])
                    (reg/f:DI 255)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:340 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 255)
        (expr_list:REG_DEAD (reg:DI 126 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 126 [ D.26037 ]))
                    (nil))))))
(insn 101 100 102 4 (set (reg:SF 128 [ D.26039 ])
        (mem:SF (reg/f:DI 127 [ D.26038 ]) [0 *_63+0 S4 A32])) ge2fitman_preproc.cpp:340 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.26038 ])
        (nil)))
(insn 102 101 103 4 (set (reg:DF 129 [ D.26040 ])
        (float_extend:DF (reg:SF 128 [ D.26039 ]))) ge2fitman_preproc.cpp:340 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 128 [ D.26039 ])
        (nil)))
(insn 103 102 104 4 (set (reg:SI 256)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:340 90 {*movsi_internal}
     (nil))
(insn 104 103 105 4 (set (reg:DI 130 [ D.26037 ])
        (sign_extend:DI (reg:SI 256))) ge2fitman_preproc.cpp:340 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 256)
        (nil)))
(insn 105 104 106 4 (parallel [
            (set (reg:DI 131 [ D.26037 ])
                (ashift:DI (reg:DI 130 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:340 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 4 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:340 89 {*movdi_internal}
     (nil))
(insn 107 106 108 4 (parallel [
            (set (reg/f:DI 132 [ D.26038 ])
                (plus:DI (reg:DI 131 [ D.26037 ])
                    (reg/f:DI 257)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:340 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 257)
        (expr_list:REG_DEAD (reg:DI 131 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 131 [ D.26037 ]))
                    (nil))))))
(insn 108 107 109 4 (set (reg:SF 133 [ D.26039 ])
        (mem:SF (reg/f:DI 132 [ D.26038 ]) [0 *_68+0 S4 A32])) ge2fitman_preproc.cpp:340 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.26038 ])
        (nil)))
(insn 109 108 110 4 (set (reg:DF 134 [ D.26040 ])
        (float_extend:DF (reg:SF 133 [ D.26039 ]))) ge2fitman_preproc.cpp:340 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.26039 ])
        (nil)))
(insn 110 109 111 4 (set (reg:DF 135 [ D.26040 ])
        (mult:DF (reg:DF 129 [ D.26040 ])
            (reg:DF 134 [ D.26040 ]))) ge2fitman_preproc.cpp:340 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 129 [ D.26040 ])
            (nil))))
(insn 111 110 112 4 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:341 90 {*movsi_internal}
     (nil))
(insn 112 111 113 4 (set (reg:DI 136 [ D.26041 ])
        (sign_extend:DI (reg:SI 258))) ge2fitman_preproc.cpp:341 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 258)
        (nil)))
(insn 113 112 114 4 (parallel [
            (set (reg:DI 137 [ D.26041 ])
                (plus:DI (reg:DI 136 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 4 (parallel [
            (set (reg:DI 138 [ D.26041 ])
                (ashift:DI (reg:DI 137 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 4 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:341 89 {*movdi_internal}
     (nil))
(insn 116 115 117 4 (parallel [
            (set (reg/f:DI 139 [ D.26038 ])
                (plus:DI (reg:DI 138 [ D.26041 ])
                    (reg/f:DI 259)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 259)
        (expr_list:REG_DEAD (reg:DI 138 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 138 [ D.26041 ]))
                    (nil))))))
(insn 117 116 118 4 (set (reg:SF 140 [ D.26039 ])
        (mem:SF (reg/f:DI 139 [ D.26038 ]) [0 *_75+0 S4 A32])) ge2fitman_preproc.cpp:341 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.26038 ])
        (nil)))
(insn 118 117 119 4 (set (reg:DF 141 [ D.26040 ])
        (float_extend:DF (reg:SF 140 [ D.26039 ]))) ge2fitman_preproc.cpp:341 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 140 [ D.26039 ])
        (nil)))
(insn 119 118 120 4 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:341 90 {*movsi_internal}
     (nil))
(insn 120 119 121 4 (set (reg:DI 142 [ D.26041 ])
        (sign_extend:DI (reg:SI 260))) ge2fitman_preproc.cpp:341 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 260)
        (nil)))
(insn 121 120 122 4 (parallel [
            (set (reg:DI 143 [ D.26041 ])
                (plus:DI (reg:DI 142 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 4 (parallel [
            (set (reg:DI 144 [ D.26041 ])
                (ashift:DI (reg:DI 143 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 4 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:341 89 {*movdi_internal}
     (nil))
(insn 124 123 125 4 (parallel [
            (set (reg/f:DI 145 [ D.26038 ])
                (plus:DI (reg:DI 144 [ D.26041 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:341 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 261)
        (expr_list:REG_DEAD (reg:DI 144 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 144 [ D.26041 ]))
                    (nil))))))
(insn 125 124 126 4 (set (reg:SF 146 [ D.26039 ])
        (mem:SF (reg/f:DI 145 [ D.26038 ]) [0 *_81+0 S4 A32])) ge2fitman_preproc.cpp:341 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.26038 ])
        (nil)))
(insn 126 125 127 4 (set (reg:DF 147 [ D.26040 ])
        (float_extend:DF (reg:SF 146 [ D.26039 ]))) ge2fitman_preproc.cpp:341 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 146 [ D.26039 ])
        (nil)))
(insn 127 126 128 4 (set (reg:DF 148 [ D.26040 ])
        (mult:DF (reg:DF 141 [ D.26040 ])
            (reg:DF 147 [ D.26040 ]))) ge2fitman_preproc.cpp:341 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 141 [ D.26040 ])
            (nil))))
(insn 128 127 129 4 (set (reg:DF 149 [ D.26040 ])
        (plus:DF (reg:DF 135 [ D.26040 ])
            (reg:DF 148 [ D.26040 ]))) ge2fitman_preproc.cpp:340 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 148 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 135 [ D.26040 ])
            (nil))))
(insn 129 128 130 4 (set (reg:DF 21 xmm0)
        (reg:DF 149 [ D.26040 ])) ge2fitman_preproc.cpp:341 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 149 [ D.26040 ])
        (nil)))
(call_insn 130 129 131 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:341 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 131 130 132 4 (set (reg:DF 262)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:341 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 132 131 133 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 262)) ge2fitman_preproc.cpp:341 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 262)
        (nil)))
(insn 133 132 134 4 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:343 90 {*movsi_internal}
     (nil))
(insn 134 133 135 4 (set (reg:DI 150 [ D.26037 ])
        (sign_extend:DI (reg:SI 263))) ge2fitman_preproc.cpp:343 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(insn 135 134 136 4 (parallel [
            (set (reg:DI 151 [ D.26037 ])
                (ashift:DI (reg:DI 150 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:343 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 4 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:343 89 {*movdi_internal}
     (nil))
(insn 137 136 138 4 (parallel [
            (set (reg/f:DI 152 [ D.26038 ])
                (plus:DI (reg:DI 151 [ D.26037 ])
                    (reg/f:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:343 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 264)
        (expr_list:REG_DEAD (reg:DI 151 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 151 [ D.26037 ]))
                    (nil))))))
(insn 138 137 139 4 (set (reg:SF 153 [ D.26039 ])
        (mem:SF (reg/f:DI 152 [ D.26038 ]) [0 *_90+0 S4 A32])) ge2fitman_preproc.cpp:343 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.26038 ])
        (nil)))
(insn 139 138 140 4 (set (reg:DF 154 [ D.26040 ])
        (float_extend:DF (reg:SF 153 [ D.26039 ]))) ge2fitman_preproc.cpp:343 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 153 [ D.26039 ])
        (nil)))
(insn 140 139 141 4 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:343 90 {*movsi_internal}
     (nil))
(insn 141 140 142 4 (set (reg:DI 155 [ D.26041 ])
        (sign_extend:DI (reg:SI 265))) ge2fitman_preproc.cpp:343 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 265)
        (nil)))
(insn 142 141 143 4 (parallel [
            (set (reg:DI 156 [ D.26041 ])
                (plus:DI (reg:DI 155 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:343 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 4 (parallel [
            (set (reg:DI 157 [ D.26041 ])
                (ashift:DI (reg:DI 156 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:343 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 4 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:343 89 {*movdi_internal}
     (nil))
(insn 145 144 146 4 (parallel [
            (set (reg/f:DI 158 [ D.26038 ])
                (plus:DI (reg:DI 157 [ D.26041 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:343 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (expr_list:REG_DEAD (reg:DI 157 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 157 [ D.26041 ]))
                    (nil))))))
(insn 146 145 147 4 (set (reg:SF 159 [ D.26039 ])
        (mem:SF (reg/f:DI 158 [ D.26038 ]) [0 *_96+0 S4 A32])) ge2fitman_preproc.cpp:343 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.26038 ])
        (nil)))
(insn 147 146 148 4 (set (reg:DF 160 [ D.26040 ])
        (float_extend:DF (reg:SF 159 [ D.26039 ]))) ge2fitman_preproc.cpp:343 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 159 [ D.26039 ])
        (nil)))
(insn 148 147 149 4 (set (reg:DF 22 xmm1)
        (reg:DF 154 [ D.26040 ])) ge2fitman_preproc.cpp:343 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 154 [ D.26040 ])
        (nil)))
(insn 149 148 150 4 (set (reg:DF 21 xmm0)
        (reg:DF 160 [ D.26040 ])) ge2fitman_preproc.cpp:343 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 160 [ D.26040 ])
        (nil)))
(call_insn 150 149 151 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:343 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 151 150 152 4 (set (reg:DF 267)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:343 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 152 151 153 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 267)) ge2fitman_preproc.cpp:343 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 267)
        (nil)))
(insn 153 152 154 4 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:345 90 {*movsi_internal}
     (nil))
(insn 154 153 155 4 (set (reg:DI 161 [ D.26037 ])
        (sign_extend:DI (reg:SI 268))) ge2fitman_preproc.cpp:345 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 268)
        (nil)))
(insn 155 154 156 4 (parallel [
            (set (reg:DI 162 [ D.26037 ])
                (ashift:DI (reg:DI 161 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:345 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 156 155 157 4 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:345 89 {*movdi_internal}
     (nil))
(insn 157 156 158 4 (parallel [
            (set (reg/f:DI 163 [ D.26038 ])
                (plus:DI (reg:DI 162 [ D.26037 ])
                    (reg/f:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:345 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 269)
        (expr_list:REG_DEAD (reg:DI 162 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 162 [ D.26037 ]))
                    (nil))))))
(insn 158 157 159 4 (set (reg:SF 164 [ D.26039 ])
        (mem:SF (reg/f:DI 163 [ D.26038 ]) [0 *_104+0 S4 A32])) ge2fitman_preproc.cpp:345 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 163 [ D.26038 ])
        (nil)))
(insn 159 158 160 4 (set (reg:DF 165 [ D.26040 ])
        (float_extend:DF (reg:SF 164 [ D.26039 ]))) ge2fitman_preproc.cpp:345 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 164 [ D.26039 ])
        (nil)))
(insn 160 159 161 4 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:345 90 {*movsi_internal}
     (nil))
(insn 161 160 162 4 (set (reg:DI 166 [ D.26037 ])
        (sign_extend:DI (reg:SI 270))) ge2fitman_preproc.cpp:345 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(insn 162 161 163 4 (parallel [
            (set (reg:DI 167 [ D.26037 ])
                (ashift:DI (reg:DI 166 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:345 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 166 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 4 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:345 89 {*movdi_internal}
     (nil))
(insn 164 163 165 4 (parallel [
            (set (reg/f:DI 168 [ D.26038 ])
                (plus:DI (reg:DI 167 [ D.26037 ])
                    (reg/f:DI 271)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:345 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 271)
        (expr_list:REG_DEAD (reg:DI 167 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 167 [ D.26037 ]))
                    (nil))))))
(insn 165 164 166 4 (set (reg:SF 169 [ D.26039 ])
        (mem:SF (reg/f:DI 168 [ D.26038 ]) [0 *_109+0 S4 A32])) ge2fitman_preproc.cpp:345 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.26038 ])
        (nil)))
(insn 166 165 167 4 (set (reg:DF 170 [ D.26040 ])
        (float_extend:DF (reg:SF 169 [ D.26039 ]))) ge2fitman_preproc.cpp:345 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 169 [ D.26039 ])
        (nil)))
(insn 167 166 168 4 (set (reg:DF 171 [ D.26040 ])
        (mult:DF (reg:DF 165 [ D.26040 ])
            (reg:DF 170 [ D.26040 ]))) ge2fitman_preproc.cpp:345 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 170 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 165 [ D.26040 ])
            (nil))))
(insn 168 167 169 4 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:346 90 {*movsi_internal}
     (nil))
(insn 169 168 170 4 (set (reg:DI 172 [ D.26041 ])
        (sign_extend:DI (reg:SI 272))) ge2fitman_preproc.cpp:346 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 272)
        (nil)))
(insn 170 169 171 4 (parallel [
            (set (reg:DI 173 [ D.26041 ])
                (plus:DI (reg:DI 172 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 4 (parallel [
            (set (reg:DI 174 [ D.26041 ])
                (ashift:DI (reg:DI 173 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 171 173 4 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:346 89 {*movdi_internal}
     (nil))
(insn 173 172 174 4 (parallel [
            (set (reg/f:DI 175 [ D.26038 ])
                (plus:DI (reg:DI 174 [ D.26041 ])
                    (reg/f:DI 273)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 273)
        (expr_list:REG_DEAD (reg:DI 174 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 174 [ D.26041 ]))
                    (nil))))))
(insn 174 173 175 4 (set (reg:SF 176 [ D.26039 ])
        (mem:SF (reg/f:DI 175 [ D.26038 ]) [0 *_116+0 S4 A32])) ge2fitman_preproc.cpp:346 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.26038 ])
        (nil)))
(insn 175 174 176 4 (set (reg:DF 177 [ D.26040 ])
        (float_extend:DF (reg:SF 176 [ D.26039 ]))) ge2fitman_preproc.cpp:346 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 176 [ D.26039 ])
        (nil)))
(insn 176 175 177 4 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:346 90 {*movsi_internal}
     (nil))
(insn 177 176 178 4 (set (reg:DI 178 [ D.26041 ])
        (sign_extend:DI (reg:SI 274))) ge2fitman_preproc.cpp:346 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 274)
        (nil)))
(insn 178 177 179 4 (parallel [
            (set (reg:DI 179 [ D.26041 ])
                (plus:DI (reg:DI 178 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 4 (parallel [
            (set (reg:DI 180 [ D.26041 ])
                (ashift:DI (reg:DI 179 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 4 (set (reg/f:DI 275)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:346 89 {*movdi_internal}
     (nil))
(insn 181 180 182 4 (parallel [
            (set (reg/f:DI 181 [ D.26038 ])
                (plus:DI (reg:DI 180 [ D.26041 ])
                    (reg/f:DI 275)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:346 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 275)
        (expr_list:REG_DEAD (reg:DI 180 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 180 [ D.26041 ]))
                    (nil))))))
(insn 182 181 183 4 (set (reg:SF 182 [ D.26039 ])
        (mem:SF (reg/f:DI 181 [ D.26038 ]) [0 *_122+0 S4 A32])) ge2fitman_preproc.cpp:346 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.26038 ])
        (nil)))
(insn 183 182 184 4 (set (reg:DF 183 [ D.26040 ])
        (float_extend:DF (reg:SF 182 [ D.26039 ]))) ge2fitman_preproc.cpp:346 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 182 [ D.26039 ])
        (nil)))
(insn 184 183 185 4 (set (reg:DF 184 [ D.26040 ])
        (mult:DF (reg:DF 177 [ D.26040 ])
            (reg:DF 183 [ D.26040 ]))) ge2fitman_preproc.cpp:346 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 183 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 177 [ D.26040 ])
            (nil))))
(insn 185 184 186 4 (set (reg:DF 185 [ D.26040 ])
        (plus:DF (reg:DF 171 [ D.26040 ])
            (reg:DF 184 [ D.26040 ]))) ge2fitman_preproc.cpp:345 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 184 [ D.26040 ])
        (expr_list:REG_DEAD (reg:DF 171 [ D.26040 ])
            (nil))))
(insn 186 185 187 4 (set (reg:DF 21 xmm0)
        (reg:DF 185 [ D.26040 ])) ge2fitman_preproc.cpp:346 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 185 [ D.26040 ])
        (nil)))
(call_insn 187 186 188 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:346 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 188 187 189 4 (set (reg:DF 276)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:346 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 189 188 190 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 276)) ge2fitman_preproc.cpp:346 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 276)
        (nil)))
(insn 190 189 191 4 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:348 90 {*movsi_internal}
     (nil))
(insn 191 190 192 4 (set (reg:DI 186 [ D.26037 ])
        (sign_extend:DI (reg:SI 277))) ge2fitman_preproc.cpp:348 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277)
        (nil)))
(insn 192 191 193 4 (parallel [
            (set (reg:DI 187 [ D.26037 ])
                (ashift:DI (reg:DI 186 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:348 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 186 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 4 (set (reg/f:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:348 89 {*movdi_internal}
     (nil))
(insn 194 193 195 4 (parallel [
            (set (reg/f:DI 188 [ D.26038 ])
                (plus:DI (reg:DI 187 [ D.26037 ])
                    (reg/f:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:348 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 278)
        (expr_list:REG_DEAD (reg:DI 187 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 187 [ D.26037 ]))
                    (nil))))))
(insn 195 194 196 4 (set (reg:SF 189 [ D.26039 ])
        (mem:SF (reg/f:DI 188 [ D.26038 ]) [0 *_131+0 S4 A32])) ge2fitman_preproc.cpp:348 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ D.26038 ])
        (nil)))
(insn 196 195 197 4 (set (reg:DF 190 [ D.26040 ])
        (float_extend:DF (reg:SF 189 [ D.26039 ]))) ge2fitman_preproc.cpp:348 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 189 [ D.26039 ])
        (nil)))
(insn 197 196 198 4 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:348 90 {*movsi_internal}
     (nil))
(insn 198 197 199 4 (set (reg:DI 191 [ D.26041 ])
        (sign_extend:DI (reg:SI 279))) ge2fitman_preproc.cpp:348 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 279)
        (nil)))
(insn 199 198 200 4 (parallel [
            (set (reg:DI 192 [ D.26041 ])
                (plus:DI (reg:DI 191 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:348 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 191 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 4 (parallel [
            (set (reg:DI 193 [ D.26041 ])
                (ashift:DI (reg:DI 192 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:348 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 192 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 202 4 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:348 89 {*movdi_internal}
     (nil))
(insn 202 201 203 4 (parallel [
            (set (reg/f:DI 194 [ D.26038 ])
                (plus:DI (reg:DI 193 [ D.26041 ])
                    (reg/f:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:348 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:DI 193 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 scratch+0 S8 A64])
                        (reg:DI 193 [ D.26041 ]))
                    (nil))))))
(insn 203 202 204 4 (set (reg:SF 195 [ D.26039 ])
        (mem:SF (reg/f:DI 194 [ D.26038 ]) [0 *_137+0 S4 A32])) ge2fitman_preproc.cpp:348 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ D.26038 ])
        (nil)))
(insn 204 203 205 4 (set (reg:DF 196 [ D.26040 ])
        (float_extend:DF (reg:SF 195 [ D.26039 ]))) ge2fitman_preproc.cpp:348 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 195 [ D.26039 ])
        (nil)))
(insn 205 204 206 4 (set (reg:DF 22 xmm1)
        (reg:DF 190 [ D.26040 ])) ge2fitman_preproc.cpp:348 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 190 [ D.26040 ])
        (nil)))
(insn 206 205 207 4 (set (reg:DF 21 xmm0)
        (reg:DF 196 [ D.26040 ])) ge2fitman_preproc.cpp:348 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 196 [ D.26040 ])
        (nil)))
(call_insn 207 206 208 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:348 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 208 207 209 4 (set (reg:DF 281)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:348 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 209 208 210 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 281)) ge2fitman_preproc.cpp:348 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 281)
        (nil)))
(insn 210 209 211 4 (set (reg:DF 283)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])) ge2fitman_preproc.cpp:352 128 {*movdf_internal}
     (nil))
(insn 211 210 212 4 (set (reg:DF 282)
        (div:DF (reg:DF 283)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:352 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 283)
        (nil)))
(insn 212 211 213 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 282)) ge2fitman_preproc.cpp:352 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 282)
        (nil)))
(insn 213 212 214 4 (set (reg:DF 285)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 phase_sup+0 S8 A64])) ge2fitman_preproc.cpp:353 128 {*movdf_internal}
     (nil))
(insn 214 213 215 4 (set (reg:DF 284)
        (minus:DF (reg:DF 285)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:353 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 285)
        (nil)))
(insn 215 214 216 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 284)) ge2fitman_preproc.cpp:353 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 284)
        (nil)))
(insn 216 215 217 4 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:355 90 {*movsi_internal}
     (nil))
(insn 217 216 218 4 (set (reg:DI 197 [ D.26037 ])
        (sign_extend:DI (reg:SI 286))) ge2fitman_preproc.cpp:355 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
(insn 218 217 219 4 (parallel [
            (set (reg:DI 198 [ D.26037 ])
                (ashift:DI (reg:DI 197 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:355 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 197 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 4 (set (reg/f:DI 287)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:355 89 {*movdi_internal}
     (nil))
(insn 220 219 221 4 (parallel [
            (set (reg/f:DI 199 [ D.26038 ])
                (plus:DI (reg:DI 198 [ D.26037 ])
                    (reg/f:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:355 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 287)
        (expr_list:REG_DEAD (reg:DI 198 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 198 [ D.26037 ]))
                    (nil))))))
(insn 221 220 222 4 (set (reg:SF 200 [ D.26039 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:355 157 {*truncdfsf_fast_sse}
     (nil))
(insn 222 221 223 4 (set (reg:DF 288)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])) ge2fitman_preproc.cpp:355 128 {*movdf_internal}
     (nil))
(insn 223 222 224 4 (set (reg:DF 21 xmm0)
        (reg:DF 288)) ge2fitman_preproc.cpp:355 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 288)
        (nil)))
(call_insn/u 224 223 225 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:355 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 225 224 226 4 (set (reg:DF 201 [ D.26040 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:355 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 226 225 227 4 (set (reg:SF 202 [ D.26039 ])
        (float_truncate:SF (reg:DF 201 [ D.26040 ]))) ge2fitman_preproc.cpp:355 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 201 [ D.26040 ])
        (nil)))
(insn 227 226 228 4 (set (reg:SF 203 [ D.26039 ])
        (mult:SF (reg:SF 200 [ D.26039 ])
            (reg:SF 202 [ D.26039 ]))) ge2fitman_preproc.cpp:355 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 202 [ D.26039 ])
        (expr_list:REG_DEAD (reg:SF 200 [ D.26039 ])
            (nil))))
(insn 228 227 229 4 (set (mem:SF (reg/f:DI 199 [ D.26038 ]) [0 *_146+0 S4 A32])
        (reg:SF 203 [ D.26039 ])) ge2fitman_preproc.cpp:355 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 203 [ D.26039 ])
        (expr_list:REG_DEAD (reg/f:DI 199 [ D.26038 ])
            (nil))))
(insn 229 228 230 4 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:356 90 {*movsi_internal}
     (nil))
(insn 230 229 231 4 (set (reg:DI 204 [ D.26041 ])
        (sign_extend:DI (reg:SI 289))) ge2fitman_preproc.cpp:356 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 289)
        (nil)))
(insn 231 230 232 4 (parallel [
            (set (reg:DI 205 [ D.26041 ])
                (plus:DI (reg:DI 204 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:356 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 204 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 4 (parallel [
            (set (reg:DI 206 [ D.26041 ])
                (ashift:DI (reg:DI 205 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:356 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 4 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:356 89 {*movdi_internal}
     (nil))
(insn 234 233 235 4 (parallel [
            (set (reg/f:DI 207 [ D.26038 ])
                (plus:DI (reg:DI 206 [ D.26041 ])
                    (reg/f:DI 290)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:356 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 290)
        (expr_list:REG_DEAD (reg:DI 206 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -104 [0xffffffffffffff98])) [0 sup_data+0 S8 A64])
                        (reg:DI 206 [ D.26041 ]))
                    (nil))))))
(insn 235 234 236 4 (set (reg:SF 208 [ D.26039 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [0 div_sup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:356 157 {*truncdfsf_fast_sse}
     (nil))
(insn 236 235 237 4 (set (reg:DF 291)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 div_sup_phase+0 S8 A64])) ge2fitman_preproc.cpp:356 128 {*movdf_internal}
     (nil))
(insn 237 236 238 4 (set (reg:DF 21 xmm0)
        (reg:DF 291)) ge2fitman_preproc.cpp:356 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 291)
        (nil)))
(call_insn/u 238 237 239 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:356 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 239 238 240 4 (set (reg:DF 209 [ D.26040 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:356 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 240 239 241 4 (set (reg:SF 210 [ D.26039 ])
        (float_truncate:SF (reg:DF 209 [ D.26040 ]))) ge2fitman_preproc.cpp:356 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 209 [ D.26040 ])
        (nil)))
(insn 241 240 242 4 (set (reg:SF 211 [ D.26039 ])
        (mult:SF (reg:SF 208 [ D.26039 ])
            (reg:SF 210 [ D.26039 ]))) ge2fitman_preproc.cpp:356 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 210 [ D.26039 ])
        (expr_list:REG_DEAD (reg:SF 208 [ D.26039 ])
            (nil))))
(insn 242 241 243 4 (set (mem:SF (reg/f:DI 207 [ D.26038 ]) [0 *_155+0 S4 A32])
        (reg:SF 211 [ D.26039 ])) ge2fitman_preproc.cpp:356 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 211 [ D.26039 ])
        (expr_list:REG_DEAD (reg/f:DI 207 [ D.26038 ])
            (nil))))
(insn 243 242 244 4 (set (reg:DF 293)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])) ge2fitman_preproc.cpp:360 128 {*movdf_internal}
     (nil))
(insn 244 243 245 4 (set (reg:DF 292)
        (div:DF (reg:DF 293)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:360 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 293)
        (nil)))
(insn 245 244 246 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 292)) ge2fitman_preproc.cpp:360 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 292)
        (nil)))
(insn 246 245 247 4 (set (reg:DF 295)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 phase_unsup+0 S8 A64])) ge2fitman_preproc.cpp:361 128 {*movdf_internal}
     (nil))
(insn 247 246 248 4 (set (reg:DF 294)
        (minus:DF (reg:DF 295)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 phase_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:361 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 295)
        (nil)))
(insn 248 247 249 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 294)) ge2fitman_preproc.cpp:361 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 294)
        (nil)))
(insn 249 248 250 4 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:363 90 {*movsi_internal}
     (nil))
(insn 250 249 251 4 (set (reg:DI 212 [ D.26037 ])
        (sign_extend:DI (reg:SI 296))) ge2fitman_preproc.cpp:363 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 296)
        (nil)))
(insn 251 250 252 4 (parallel [
            (set (reg:DI 213 [ D.26037 ])
                (ashift:DI (reg:DI 212 [ D.26037 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:363 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 212 [ D.26037 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 4 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:363 89 {*movdi_internal}
     (nil))
(insn 253 252 254 4 (parallel [
            (set (reg/f:DI 214 [ D.26038 ])
                (plus:DI (reg:DI 213 [ D.26037 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:363 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (expr_list:REG_DEAD (reg:DI 213 [ D.26037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 213 [ D.26037 ]))
                    (nil))))))
(insn 254 253 255 4 (set (reg:SF 215 [ D.26039 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:363 157 {*truncdfsf_fast_sse}
     (nil))
(insn 255 254 256 4 (set (reg:DF 298)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])) ge2fitman_preproc.cpp:363 128 {*movdf_internal}
     (nil))
(insn 256 255 257 4 (set (reg:DF 21 xmm0)
        (reg:DF 298)) ge2fitman_preproc.cpp:363 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 298)
        (nil)))
(call_insn/u 257 256 258 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:363 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 258 257 259 4 (set (reg:DF 216 [ D.26040 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:363 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 259 258 260 4 (set (reg:SF 217 [ D.26039 ])
        (float_truncate:SF (reg:DF 216 [ D.26040 ]))) ge2fitman_preproc.cpp:363 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 216 [ D.26040 ])
        (nil)))
(insn 260 259 261 4 (set (reg:SF 218 [ D.26039 ])
        (mult:SF (reg:SF 215 [ D.26039 ])
            (reg:SF 217 [ D.26039 ]))) ge2fitman_preproc.cpp:363 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 217 [ D.26039 ])
        (expr_list:REG_DEAD (reg:SF 215 [ D.26039 ])
            (nil))))
(insn 261 260 262 4 (set (mem:SF (reg/f:DI 214 [ D.26038 ]) [0 *_165+0 S4 A32])
        (reg:SF 218 [ D.26039 ])) ge2fitman_preproc.cpp:363 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 218 [ D.26039 ])
        (expr_list:REG_DEAD (reg/f:DI 214 [ D.26038 ])
            (nil))))
(insn 262 261 263 4 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:364 90 {*movsi_internal}
     (nil))
(insn 263 262 264 4 (set (reg:DI 219 [ D.26041 ])
        (sign_extend:DI (reg:SI 299))) ge2fitman_preproc.cpp:364 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 299)
        (nil)))
(insn 264 263 265 4 (parallel [
            (set (reg:DI 220 [ D.26041 ])
                (plus:DI (reg:DI 219 [ D.26041 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 265 264 266 4 (parallel [
            (set (reg:DI 221 [ D.26041 ])
                (ashift:DI (reg:DI 220 [ D.26041 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:364 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.26041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 4 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:364 89 {*movdi_internal}
     (nil))
(insn 267 266 268 4 (parallel [
            (set (reg/f:DI 222 [ D.26038 ])
                (plus:DI (reg:DI 221 [ D.26041 ])
                    (reg/f:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 300)
        (expr_list:REG_DEAD (reg:DI 221 [ D.26041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -112 [0xffffffffffffff90])) [0 unsup_data+0 S8 A64])
                        (reg:DI 221 [ D.26041 ]))
                    (nil))))))
(insn 268 267 269 4 (set (reg:SF 223 [ D.26039 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 div_unsup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:364 157 {*truncdfsf_fast_sse}
     (nil))
(insn 269 268 270 4 (set (reg:DF 301)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 div_unsup_phase+0 S8 A64])) ge2fitman_preproc.cpp:364 128 {*movdf_internal}
     (nil))
(insn 270 269 271 4 (set (reg:DF 21 xmm0)
        (reg:DF 301)) ge2fitman_preproc.cpp:364 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 301)
        (nil)))
(call_insn/u 271 270 272 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:364 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 272 271 273 4 (set (reg:DF 224 [ D.26040 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:364 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 273 272 274 4 (set (reg:SF 225 [ D.26039 ])
        (float_truncate:SF (reg:DF 224 [ D.26040 ]))) ge2fitman_preproc.cpp:364 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 224 [ D.26040 ])
        (nil)))
(insn 274 273 275 4 (set (reg:SF 226 [ D.26039 ])
        (mult:SF (reg:SF 223 [ D.26039 ])
            (reg:SF 225 [ D.26039 ]))) ge2fitman_preproc.cpp:364 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 225 [ D.26039 ])
        (expr_list:REG_DEAD (reg:SF 223 [ D.26039 ])
            (nil))))
(insn 275 274 276 4 (set (mem:SF (reg/f:DI 222 [ D.26038 ]) [0 *_174+0 S4 A32])
        (reg:SF 226 [ D.26039 ])) ge2fitman_preproc.cpp:364 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 226 [ D.26039 ])
        (expr_list:REG_DEAD (reg/f:DI 222 [ D.26038 ])
            (nil))))
(insn 276 275 292 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -84 [0xffffffffffffffac])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:333 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 292 276 293 4 (set (pc)
        (label_ref 277)) ge2fitman_preproc.cpp:333 654 {jump}
     (nil)
 -> 277)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 293 292 280)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 227 228
(code_label 280 293 281 5 81 "" [1 uses])
(note 281 280 282 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 285 5 (set (reg:SI 227 [ D.26036 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:367 90 {*movsi_internal}
     (nil))
(insn 285 282 289 5 (set (reg:SI 228 [ <retval> ])
        (reg:SI 227 [ D.26036 ])) ge2fitman_preproc.cpp:367 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 227 [ D.26036 ])
        (nil)))
(insn 289 285 290 5 (set (reg/i:SI 0 ax)
        (reg:SI 228 [ <retval> ])) ge2fitman_preproc.cpp:369 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228 [ <retval> ])
        (nil)))
(insn 290 289 0 5 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:369 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int filter(float*, float*, Procpar_info*, Preprocess*) (_Z6filterPfS_P12Procpar_infoP10Preprocess, funcdef_no=1028, decl_uid=24445, cgraph_uid=233, symbol_order=234)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 44 count 29 (    1)
Building IRA IR
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 118.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 285.
verify found no changes in insn with uid = 322.
verify found no changes in insn with uid = 397.
verify found no changes in insn with uid = 435.
verify found no changes in insn with uid = 480.
verify found no changes in insn with uid = 518.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r487: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r487,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r486: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a13 (r486,l0) best SSE_REGS, allocno SSE_REGS
    r485: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r485,l0) best SSE_REGS, allocno SSE_REGS
    r484: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r484,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r483: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r483,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r482,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r481,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r480: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r480,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r479,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r478,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r477: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r477,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r476: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r476,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r475: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r475,l0) best SSE_REGS, allocno SSE_REGS
    r474: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r474,l0) best SSE_REGS, allocno SSE_REGS
    r473: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r473,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r472: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r472,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r471: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r471,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r470: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r470,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r469: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r469,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r468: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r468,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r467: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r467,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r466: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r466,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r465: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r465,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r464: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r464,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r463: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a83 (r463,l0) best SSE_REGS, allocno SSE_REGS
    r462: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a86 (r462,l0) best SSE_REGS, allocno SSE_REGS
    r461: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r461,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r460: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r460,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r459: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r459,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r458: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r458,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r457: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r457,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r456: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r456,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r455: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r455,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r454: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r454,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r453: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r453,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r452: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a118 (r452,l0) best SSE_REGS, allocno SSE_REGS
    r451: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r451,l0) best SSE_REGS, allocno SSE_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r449: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r449,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r448,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r447,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r446,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r445,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r444,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r443: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r443,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r442,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r441: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r441,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r440: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r440,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r439: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a147 (r439,l0) best SSE_REGS, allocno SSE_REGS
    r438: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a149 (r438,l0) best SSE_REGS, allocno SSE_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r435: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a162 (r435,l0) best SSE_REGS, allocno SSE_REGS
    r434: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a165 (r434,l0) best SSE_REGS, allocno SSE_REGS
    r433: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r433,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r432,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r430,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r429: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r429,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r428,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r427,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r426,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r425: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r425,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r424: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a196 (r424,l0) best SSE_REGS, allocno SSE_REGS
    r423: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a199 (r423,l0) best SSE_REGS, allocno SSE_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r422,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r421,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r420,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r419,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r417: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r417,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a214 (r416,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r415: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r415,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r414,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r413,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r412: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a230 (r412,l0) best SSE_REGS, allocno SSE_REGS
    r411: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r411,l0) best SSE_REGS, allocno SSE_REGS
    r410: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r410,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a240 (r409,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r408: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a242 (r408,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a241 (r407,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r406,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a248 (r405,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r404,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r403,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r402: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a263 (r402,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a264 (r401,l0) best SSE_REGS, allocno SSE_REGS
    r400: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a267 (r400,l0) best SSE_REGS, allocno SSE_REGS
    r399: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a273 (r399,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r398: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a274 (r398,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a276 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r396: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a275 (r396,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r395: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a278 (r395,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r394: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a281 (r394,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a282 (r393,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a285 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r391: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a287 (r391,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r390: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a289 (r390,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a292 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r388: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a293 (r388,l0) best SSE_REGS, allocno SSE_REGS
    r387: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a295 (r387,l0) best SSE_REGS, allocno SSE_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a296 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r385: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a302 (r385,l0) best SSE_REGS, allocno SSE_REGS
    r384: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a306 (r384,l0) best SSE_REGS, allocno SSE_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a310 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a311 (r382,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r381: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a313 (r381,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a315 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r379: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a317 (r379,l0) best SSE_REGS, allocno SSE_REGS
    r378: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a322 (r378,l0) best SSE_REGS, allocno SSE_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a323 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r376: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a324 (r376,l0) best SSE_REGS, allocno SSE_REGS
    r375: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a326 (r375,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a330 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r373: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a331 (r373,l0) best SSE_REGS, allocno SSE_REGS
    r372: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a333 (r372,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a338 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r370: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a341 (r370,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a343 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r368: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a344 (r368,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r367: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a349 (r367,l0) best SSE_REGS, allocno SSE_REGS
    r366: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a353 (r366,l0) best SSE_REGS, allocno SSE_REGS
    r365: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a357 (r365,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r364: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a358 (r364,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a360 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r362: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a362 (r362,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r361: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a364 (r361,l0) best SSE_REGS, allocno SSE_REGS
    r360: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a369 (r360,l0) best SSE_REGS, allocno SSE_REGS
    r359: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a370 (r359,l0) best SSE_REGS, allocno SSE_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a372 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a376 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r356: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a377 (r356,l0) best SSE_REGS, allocno SSE_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a379 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a384 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a386 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a388 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r351: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a390 (r351,l0) best SSE_REGS, allocno SSE_REGS
    r350: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a389 (r350,l0) best SSE_REGS, allocno SSE_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a392 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a393 (r348,l0) best SSE_REGS, allocno SSE_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a397 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a398 (r346,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r345: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a399 (r345,l0) best SSE_REGS, allocno SSE_REGS
    r344: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a400 (r344,l0) best SSE_REGS, allocno SSE_REGS
    r343: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r343,l0) best AREG, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r341: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r341,l0) best SSE_REGS, allocno SSE_REGS
    r340: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r339,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r338: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a7 (r338,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r337: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a8 (r337,l0) best SSE_REGS, allocno SSE_REGS
    r336: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a10 (r336,l0) best SSE_REGS, allocno SSE_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a9 (r334,l0) best SSE_REGS, allocno SSE_REGS
    r333: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a14 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a17 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a18 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a19 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r327,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r326: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r326,l0) best SSE_REGS, allocno SSE_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r324,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r319: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r319,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a38 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a41 (r315,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r314: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a42 (r314,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r313: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a43 (r313,l0) best SSE_REGS, allocno SSE_REGS
    r312: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r312,l0) best SSE_REGS, allocno SSE_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a44 (r310,l0) best SSE_REGS, allocno SSE_REGS
    r309: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r309,l0) best SSE_REGS, allocno SSE_REGS
    r308: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r308,l0) best SSE_REGS, allocno SSE_REGS
    r307: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a52 (r307,l0) best SSE_REGS, allocno SSE_REGS
    r306: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a53 (r306,l0) best SSE_REGS, allocno SSE_REGS
    r305: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a54 (r305,l0) best SSE_REGS, allocno SSE_REGS
    r304: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a55 (r304,l0) best SSE_REGS, allocno SSE_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a40 (r302,l0) best SSE_REGS, allocno SSE_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r300,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r294,l0) best SSE_REGS, allocno SSE_REGS
    r293: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r293,l0) best SSE_REGS, allocno SSE_REGS
    r292: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a76 (r292,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r291: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a77 (r291,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r290: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r290,l0) best SSE_REGS, allocno SSE_REGS
    r289: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a80 (r289,l0) best SSE_REGS, allocno SSE_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a79 (r287,l0) best SSE_REGS, allocno SSE_REGS
    r286: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a84 (r286,l0) best SSE_REGS, allocno SSE_REGS
    r285: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a85 (r285,l0) best SSE_REGS, allocno SSE_REGS
    r284: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a87 (r284,l0) best SSE_REGS, allocno SSE_REGS
    r283: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r283,l0) best SSE_REGS, allocno SSE_REGS
    r282: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r282,l0) best SSE_REGS, allocno SSE_REGS
    r281: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a90 (r281,l0) best SSE_REGS, allocno SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a75 (r279,l0) best SSE_REGS, allocno SSE_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a108 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a109 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a111 (r268,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r267: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a112 (r267,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r266: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a113 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a115 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a114 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a119 (r262,l0) best SSE_REGS, allocno SSE_REGS
    r261: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r259,l0) best SSE_REGS, allocno SSE_REGS
    r258: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r258,l0) best SSE_REGS, allocno SSE_REGS
    r257: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a125 (r257,l0) best SSE_REGS, allocno SSE_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a110 (r255,l0) best SSE_REGS, allocno SSE_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a148 (r244,l0) best SSE_REGS, allocno SSE_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a153 (r242,l0) best SSE_REGS, allocno SSE_REGS
    r241: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a154 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a156 (r240,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r239: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a157 (r239,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r238: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a158 (r238,l0) best SSE_REGS, allocno SSE_REGS
    r237: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a160 (r237,l0) best SSE_REGS, allocno SSE_REGS
    r236: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a159 (r236,l0) best SSE_REGS, allocno SSE_REGS
    r235: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a163 (r235,l0) best SSE_REGS, allocno SSE_REGS
    r234: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a164 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a166 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a167 (r232,l0) best SSE_REGS, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a168 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a169 (r230,l0) best SSE_REGS, allocno SSE_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a155 (r228,l0) best SSE_REGS, allocno SSE_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a187 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a188 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a190 (r217,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r216: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a191 (r216,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r215: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r215,l0) best SSE_REGS, allocno SSE_REGS
    r214: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a194 (r214,l0) best SSE_REGS, allocno SSE_REGS
    r213: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a193 (r213,l0) best SSE_REGS, allocno SSE_REGS
    r212: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a197 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a200 (r210,l0) best SSE_REGS, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a201 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a202 (r208,l0) best SSE_REGS, allocno SSE_REGS
    r207: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a203 (r207,l0) best SSE_REGS, allocno SSE_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a189 (r205,l0) best SSE_REGS, allocno SSE_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a221 (r197,l0) best SSE_REGS, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a222 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a224 (r195,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r194: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a225 (r194,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r193: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a226 (r193,l0) best SSE_REGS, allocno SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a228 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a227 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a231 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a232 (r189,l0) best SSE_REGS, allocno SSE_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a234 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a235 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a236 (r186,l0) best SSE_REGS, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a237 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a223 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a220 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a255 (r174,l0) best SSE_REGS, allocno SSE_REGS
    r173: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a256 (r173,l0) best SSE_REGS, allocno SSE_REGS
    r172: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a258 (r172,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r171: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a259 (r171,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a260 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a262 (r169,l0) best SSE_REGS, allocno SSE_REGS
    r168: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a261 (r168,l0) best SSE_REGS, allocno SSE_REGS
    r167: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a265 (r167,l0) best SSE_REGS, allocno SSE_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a266 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a268 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a269 (r164,l0) best SSE_REGS, allocno SSE_REGS
    r163: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a270 (r163,l0) best SSE_REGS, allocno SSE_REGS
    r162: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a271 (r162,l0) best SSE_REGS, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a272 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a257 (r160,l0) best SSE_REGS, allocno SSE_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a277 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a279 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a280 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a283 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a284 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a286 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a288 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a290 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a291 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a294 (r149,l0) best SSE_REGS, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a298 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a299 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a300 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a303 (r145,l0) best SSE_REGS, allocno SSE_REGS
    r144: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a304 (r144,l0) best SSE_REGS, allocno SSE_REGS
    r143: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a305 (r143,l0) best SSE_REGS, allocno SSE_REGS
    r142: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a307 (r142,l0) best SSE_REGS, allocno SSE_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a308 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a309 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a312 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a314 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a301 (r137,l0) best SSE_REGS, allocno SSE_REGS
    r136: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a316 (r136,l0) best SSE_REGS, allocno SSE_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a318 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a319 (r134,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r133: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a320 (r133,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r132: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a321 (r132,l0) best SSE_REGS, allocno SSE_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a297 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a325 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a327 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a328 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a329 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a332 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a334 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a335 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a336 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a337 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a339 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a340 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a342 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a345 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a346 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a347 (r116,l0) best SSE_REGS, allocno SSE_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a350 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a351 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a352 (r113,l0) best SSE_REGS, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a354 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a355 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a356 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a359 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a361 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a348 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a363 (r106,l0) best SSE_REGS, allocno SSE_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a365 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a366 (r104,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r103: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a367 (r103,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r102: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a368 (r102,l0) best SSE_REGS, allocno SSE_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a371 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a373 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a374 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a375 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a378 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a380 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a381 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a382 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a383 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a385 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a387 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a391 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a394 (r89,l0) best SSE_REGS, allocno SSE_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a396 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a395 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r343,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r342,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r321,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r341,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r340,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r326,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a6(r339,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r338,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a8(r337,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a9(r334,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a10(r336,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a11(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r487,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r486,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a14(r333,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a15(r332,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a16(r485,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a17(r331,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a18(r330,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a19(r329,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a20(r328,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a21(r327,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a22(r484,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a23(r483,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a24(r481,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a25(r482,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a26(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r480,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a28(r324,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a30(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a31(r479,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r478,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r320,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a34(r319,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a35(r318,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a36(r477,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a37(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a38(r317,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a39(r316,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a40(r302,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a41(r315,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a42(r314,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a43(r313,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a44(r310,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a45(r312,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a46(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a47(r476,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a48(r475,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a49(r309,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a50(r308,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a51(r474,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a52(r307,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a53(r306,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a54(r305,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a55(r304,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a56(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a57(r473,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a58(r472,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a59(r470,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a60(r471,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a61(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a62(r469,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a63(r300,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a64(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a65(r468,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r467,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a69(r466,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a70(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a71(r465,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a72(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a73(r294,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a74(r293,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a75(r279,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a76(r292,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a77(r291,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a78(r290,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a79(r287,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a80(r289,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a81(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a82(r464,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r463,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a84(r286,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a85(r285,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a86(r462,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a87(r284,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a88(r283,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a89(r282,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a90(r281,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a91(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a92(r461,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a93(r460,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r458,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a95(r459,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a96(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a97(r457,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a98(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a99(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a100(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a101(r456,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r455,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a103(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a104(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a105(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r454,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a108(r270,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a109(r269,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a110(r255,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a111(r268,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a112(r267,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a113(r266,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a114(r263,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a115(r265,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a116(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r453,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r452,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a119(r262,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a120(r261,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a121(r451,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a122(r260,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r259,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r258,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a125(r257,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a126(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a127(r450,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r449,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r447,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a130(r448,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a131(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a132(r446,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a133(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a134(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a135(r445,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a136(r444,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a137(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a138(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a139(r443,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a140(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a141(r442,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a142(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a143(r441,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a144(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r440,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a147(r439,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a148(r244,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a149(r438,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a150(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r437,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a153(r242,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a154(r241,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a155(r228,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a156(r240,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a157(r239,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a158(r238,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a159(r236,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a160(r237,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a161(r436,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a162(r435,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a163(r235,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a164(r234,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a165(r434,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a166(r233,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a167(r232,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a168(r231,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a169(r230,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a170(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a171(r433,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a172(r432,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a173(r430,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a174(r431,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a175(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a176(r429,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a177(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a178(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a179(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a180(r428,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a181(r427,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a182(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a183(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a184(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r426,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a187(r219,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a188(r218,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a189(r205,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a190(r217,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a191(r216,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a192(r215,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a193(r213,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a194(r214,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a195(r425,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a196(r424,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a197(r212,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a198(r211,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a199(r423,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a200(r210,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a201(r209,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a202(r208,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a203(r207,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a204(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a205(r422,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a206(r421,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a207(r419,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a208(r420,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a209(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a210(r418,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a211(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a212(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a213(r417,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r416,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a215(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a216(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a217(r415,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a218(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a219(r414,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a220(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a221(r197,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a222(r196,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a223(r183,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a224(r195,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a225(r194,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a226(r193,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a227(r191,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a228(r192,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a229(r413,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a230(r412,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a231(r190,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a232(r189,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a233(r411,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a234(r188,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a235(r187,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a236(r186,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a237(r185,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a238(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a239(r410,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a240(r409,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a241(r407,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a242(r408,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a243(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a244(r406,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a245(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a246(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a247(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a248(r405,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a249(r404,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a250(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a251(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a252(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a253(r403,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a255(r174,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a256(r173,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a257(r160,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a258(r172,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a259(r171,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a260(r170,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a261(r168,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a262(r169,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a263(r402,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a264(r401,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a265(r167,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a266(r166,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a267(r400,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a268(r165,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a269(r164,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a270(r163,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a271(r162,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a272(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a273(r399,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a274(r398,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a275(r396,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:30 NO_REX_SSE_REGS:30 SSE_REGS:30 MMX_REGS:40 INT_SSE_REGS:32 ALL_REGS:522 MEM:12
  a276(r397,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a277(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a278(r395,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a279(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a280(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a281(r394,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a282(r393,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a283(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a284(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a285(r392,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a286(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a287(r391,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a288(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a289(r390,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a290(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a291(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a292(r389,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a293(r388,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a294(r149,l0) costs: AREG:28 DREG:28 CREG:28 BREG:28 SIREG:28 DIREG:28 AD_REGS:28 Q_REGS:28 NON_Q_REGS:28 GENERAL_REGS:28 FP_TOP_REG:54 FP_SECOND_REG:54 FLOAT_REGS:54 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:48 FP_TOP_SSE_REGS:56 FP_SECOND_SSE_REGS:56 FLOAT_SSE_REGS:56 FLOAT_INT_REGS:54 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:56 ALL_REGS:56 MEM:22
  a295(r387,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a296(r386,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a297(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a298(r148,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a299(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a300(r146,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a301(r137,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a302(r385,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a303(r145,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a304(r144,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a305(r143,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a306(r384,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a307(r142,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a308(r141,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a309(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a310(r383,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a311(r382,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a312(r139,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a313(r381,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a314(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a315(r380,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a316(r136,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a317(r379,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a318(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a319(r134,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a320(r133,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a321(r132,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a322(r378,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a323(r377,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a324(r376,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a325(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a326(r375,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a327(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a328(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a329(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a330(r374,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a331(r373,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a332(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a333(r372,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a334(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a335(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a336(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a337(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a338(r371,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a339(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a340(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a341(r370,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a342(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a343(r369,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a344(r368,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a345(r118,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a346(r117,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a347(r116,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a348(r107,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a349(r367,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:13
  a350(r115,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a351(r114,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a352(r113,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a353(r366,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a354(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a355(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:16
  a356(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:16 INT_SSE_REGS:16 ALL_REGS:200 MEM:2
  a357(r365,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a358(r364,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a359(r109,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:31 NO_REX_SSE_REGS:31 SSE_REGS:31 MMX_REGS:41 INT_SSE_REGS:33 ALL_REGS:626 MEM:11
  a360(r363,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 SSE_FIRST_REG:23 NO_REX_SSE_REGS:23 SSE_REGS:23 MMX_REGS:28 INT_SSE_REGS:24 ALL_REGS:418 MEM:8
  a361(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a362(r362,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a363(r106,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:16
  a364(r361,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:15
  a365(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a366(r104,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a367(r103,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a368(r102,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a369(r360,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a370(r359,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a371(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a372(r358,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a373(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a374(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a375(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a376(r357,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a377(r356,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a378(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a379(r355,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a380(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a381(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a382(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a383(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a384(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a385(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a386(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a387(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a388(r352,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a389(r350,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a390(r351,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a391(r90,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a392(r349,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a393(r348,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a394(r89,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a395(r87,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a396(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:20 INT_SSE_REGS:20 ALL_REGS:204 MEM:5
  a397(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a398(r346,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a399(r345,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a400(r344,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 539(l0): point = 0
   Insn 538(l0): point = 2
   Insn 534(l0): point = 4
   Insn 531(l0): point = 6
   Insn 354(l0): point = 9
   Insn 353(l0): point = 11
   Insn 352(l0): point = 13
   Insn 351(l0): point = 15
   Insn 350(l0): point = 17
   Insn 555(l0): point = 20
   Insn 525(l0): point = 22
   Insn 522(l0): point = 25
   Insn 521(l0): point = 27
   Insn 520(l0): point = 29
   Insn 519(l0): point = 31
   Insn 518(l0): point = 33
   Insn 517(l0): point = 35
   Insn 516(l0): point = 37
   Insn 515(l0): point = 39
   Insn 514(l0): point = 41
   Insn 513(l0): point = 43
   Insn 512(l0): point = 45
   Insn 511(l0): point = 47
   Insn 510(l0): point = 49
   Insn 509(l0): point = 51
   Insn 508(l0): point = 53
   Insn 507(l0): point = 55
   Insn 506(l0): point = 57
   Insn 505(l0): point = 59
   Insn 504(l0): point = 61
   Insn 503(l0): point = 63
   Insn 502(l0): point = 65
   Insn 501(l0): point = 67
   Insn 500(l0): point = 69
   Insn 499(l0): point = 71
   Insn 498(l0): point = 73
   Insn 497(l0): point = 75
   Insn 496(l0): point = 77
   Insn 495(l0): point = 79
   Insn 494(l0): point = 81
   Insn 493(l0): point = 83
   Insn 492(l0): point = 85
   Insn 491(l0): point = 87
   Insn 490(l0): point = 89
   Insn 489(l0): point = 91
   Insn 488(l0): point = 93
   Insn 487(l0): point = 95
   Insn 486(l0): point = 97
   Insn 485(l0): point = 99
   Insn 484(l0): point = 101
   Insn 483(l0): point = 103
   Insn 482(l0): point = 105
   Insn 481(l0): point = 107
   Insn 480(l0): point = 109
   Insn 479(l0): point = 111
   Insn 478(l0): point = 113
   Insn 477(l0): point = 115
   Insn 476(l0): point = 117
   Insn 475(l0): point = 119
   Insn 474(l0): point = 121
   Insn 473(l0): point = 123
   Insn 472(l0): point = 125
   Insn 471(l0): point = 127
   Insn 470(l0): point = 129
   Insn 469(l0): point = 131
   Insn 468(l0): point = 133
   Insn 467(l0): point = 135
   Insn 466(l0): point = 137
   Insn 465(l0): point = 139
   Insn 464(l0): point = 141
   Insn 463(l0): point = 143
   Insn 462(l0): point = 145
   Insn 461(l0): point = 147
   Insn 460(l0): point = 149
   Insn 459(l0): point = 151
   Insn 458(l0): point = 153
   Insn 457(l0): point = 155
   Insn 456(l0): point = 157
   Insn 455(l0): point = 159
   Insn 454(l0): point = 161
   Insn 453(l0): point = 163
   Insn 452(l0): point = 165
   Insn 451(l0): point = 167
   Insn 450(l0): point = 169
   Insn 449(l0): point = 171
   Insn 447(l0): point = 174
   Insn 446(l0): point = 176
   Insn 445(l0): point = 178
   Insn 444(l0): point = 180
   Insn 553(l0): point = 183
   Insn 439(l0): point = 185
   Insn 438(l0): point = 187
   Insn 437(l0): point = 189
   Insn 436(l0): point = 191
   Insn 435(l0): point = 193
   Insn 434(l0): point = 195
   Insn 433(l0): point = 197
   Insn 432(l0): point = 199
   Insn 431(l0): point = 201
   Insn 430(l0): point = 203
   Insn 429(l0): point = 205
   Insn 428(l0): point = 207
   Insn 427(l0): point = 209
   Insn 426(l0): point = 211
   Insn 425(l0): point = 213
   Insn 424(l0): point = 215
   Insn 423(l0): point = 217
   Insn 422(l0): point = 219
   Insn 421(l0): point = 221
   Insn 420(l0): point = 223
   Insn 419(l0): point = 225
   Insn 418(l0): point = 227
   Insn 417(l0): point = 229
   Insn 416(l0): point = 231
   Insn 415(l0): point = 233
   Insn 414(l0): point = 235
   Insn 413(l0): point = 237
   Insn 412(l0): point = 239
   Insn 411(l0): point = 241
   Insn 410(l0): point = 243
   Insn 409(l0): point = 245
   Insn 408(l0): point = 247
   Insn 407(l0): point = 249
   Insn 406(l0): point = 251
   Insn 405(l0): point = 253
   Insn 404(l0): point = 255
   Insn 403(l0): point = 257
   Insn 402(l0): point = 259
   Insn 401(l0): point = 261
   Insn 400(l0): point = 263
   Insn 399(l0): point = 265
   Insn 398(l0): point = 267
   Insn 397(l0): point = 269
   Insn 396(l0): point = 271
   Insn 395(l0): point = 273
   Insn 394(l0): point = 275
   Insn 393(l0): point = 277
   Insn 392(l0): point = 279
   Insn 391(l0): point = 281
   Insn 390(l0): point = 283
   Insn 389(l0): point = 285
   Insn 388(l0): point = 287
   Insn 387(l0): point = 289
   Insn 386(l0): point = 291
   Insn 385(l0): point = 293
   Insn 384(l0): point = 295
   Insn 383(l0): point = 297
   Insn 382(l0): point = 299
   Insn 381(l0): point = 301
   Insn 380(l0): point = 303
   Insn 379(l0): point = 305
   Insn 378(l0): point = 307
   Insn 377(l0): point = 309
   Insn 376(l0): point = 311
   Insn 375(l0): point = 313
   Insn 374(l0): point = 315
   Insn 373(l0): point = 317
   Insn 372(l0): point = 319
   Insn 371(l0): point = 321
   Insn 370(l0): point = 323
   Insn 369(l0): point = 325
   Insn 368(l0): point = 327
   Insn 367(l0): point = 329
   Insn 366(l0): point = 331
   Insn 364(l0): point = 334
   Insn 363(l0): point = 336
   Insn 362(l0): point = 338
   Insn 361(l0): point = 340
   Insn 359(l0): point = 343
   Insn 358(l0): point = 345
   Insn 357(l0): point = 347
   Insn 356(l0): point = 349
   Insn 348(l0): point = 352
   Insn 343(l0): point = 355
   Insn 342(l0): point = 357
   Insn 341(l0): point = 359
   Insn 340(l0): point = 362
   Insn 339(l0): point = 364
   Insn 338(l0): point = 366
   Insn 337(l0): point = 368
   Insn 336(l0): point = 370
   Insn 335(l0): point = 372
   Insn 162(l0): point = 375
   Insn 161(l0): point = 377
   Insn 160(l0): point = 379
   Insn 159(l0): point = 381
   Insn 158(l0): point = 383
   Insn 551(l0): point = 386
   Insn 329(l0): point = 388
   Insn 326(l0): point = 391
   Insn 325(l0): point = 393
   Insn 324(l0): point = 395
   Insn 323(l0): point = 397
   Insn 322(l0): point = 399
   Insn 321(l0): point = 401
   Insn 320(l0): point = 403
   Insn 319(l0): point = 405
   Insn 318(l0): point = 407
   Insn 317(l0): point = 409
   Insn 316(l0): point = 411
   Insn 315(l0): point = 413
   Insn 314(l0): point = 415
   Insn 313(l0): point = 417
   Insn 312(l0): point = 419
   Insn 311(l0): point = 421
   Insn 310(l0): point = 423
   Insn 309(l0): point = 425
   Insn 308(l0): point = 427
   Insn 307(l0): point = 429
   Insn 306(l0): point = 431
   Insn 305(l0): point = 433
   Insn 304(l0): point = 435
   Insn 303(l0): point = 437
   Insn 302(l0): point = 439
   Insn 301(l0): point = 441
   Insn 300(l0): point = 443
   Insn 299(l0): point = 445
   Insn 298(l0): point = 447
   Insn 297(l0): point = 449
   Insn 296(l0): point = 451
   Insn 295(l0): point = 453
   Insn 294(l0): point = 455
   Insn 293(l0): point = 457
   Insn 292(l0): point = 459
   Insn 291(l0): point = 461
   Insn 290(l0): point = 463
   Insn 289(l0): point = 465
   Insn 288(l0): point = 467
   Insn 287(l0): point = 469
   Insn 286(l0): point = 471
   Insn 285(l0): point = 473
   Insn 284(l0): point = 475
   Insn 283(l0): point = 477
   Insn 282(l0): point = 479
   Insn 281(l0): point = 481
   Insn 280(l0): point = 483
   Insn 279(l0): point = 485
   Insn 278(l0): point = 487
   Insn 277(l0): point = 489
   Insn 276(l0): point = 491
   Insn 275(l0): point = 493
   Insn 274(l0): point = 495
   Insn 273(l0): point = 497
   Insn 272(l0): point = 499
   Insn 271(l0): point = 501
   Insn 270(l0): point = 503
   Insn 269(l0): point = 505
   Insn 268(l0): point = 507
   Insn 267(l0): point = 509
   Insn 266(l0): point = 511
   Insn 265(l0): point = 513
   Insn 264(l0): point = 515
   Insn 263(l0): point = 517
   Insn 262(l0): point = 519
   Insn 261(l0): point = 521
   Insn 260(l0): point = 523
   Insn 259(l0): point = 525
   Insn 258(l0): point = 527
   Insn 257(l0): point = 529
   Insn 256(l0): point = 531
   Insn 255(l0): point = 533
   Insn 253(l0): point = 536
   Insn 252(l0): point = 538
   Insn 251(l0): point = 540
   Insn 250(l0): point = 542
   Insn 549(l0): point = 545
   Insn 245(l0): point = 547
   Insn 244(l0): point = 549
   Insn 243(l0): point = 551
   Insn 242(l0): point = 553
   Insn 241(l0): point = 555
   Insn 240(l0): point = 557
   Insn 239(l0): point = 559
   Insn 238(l0): point = 561
   Insn 237(l0): point = 563
   Insn 236(l0): point = 565
   Insn 235(l0): point = 567
   Insn 234(l0): point = 569
   Insn 233(l0): point = 571
   Insn 232(l0): point = 573
   Insn 231(l0): point = 575
   Insn 230(l0): point = 577
   Insn 229(l0): point = 579
   Insn 228(l0): point = 581
   Insn 227(l0): point = 583
   Insn 226(l0): point = 585
   Insn 225(l0): point = 587
   Insn 224(l0): point = 589
   Insn 223(l0): point = 591
   Insn 222(l0): point = 593
   Insn 221(l0): point = 595
   Insn 220(l0): point = 597
   Insn 219(l0): point = 599
   Insn 218(l0): point = 601
   Insn 217(l0): point = 603
   Insn 216(l0): point = 605
   Insn 215(l0): point = 607
   Insn 214(l0): point = 609
   Insn 213(l0): point = 611
   Insn 212(l0): point = 613
   Insn 211(l0): point = 615
   Insn 210(l0): point = 617
   Insn 209(l0): point = 619
   Insn 208(l0): point = 621
   Insn 207(l0): point = 623
   Insn 206(l0): point = 625
   Insn 205(l0): point = 627
   Insn 204(l0): point = 629
   Insn 203(l0): point = 631
   Insn 202(l0): point = 633
   Insn 201(l0): point = 635
   Insn 200(l0): point = 637
   Insn 199(l0): point = 639
   Insn 198(l0): point = 641
   Insn 197(l0): point = 643
   Insn 196(l0): point = 645
   Insn 195(l0): point = 647
   Insn 194(l0): point = 649
   Insn 193(l0): point = 651
   Insn 192(l0): point = 653
   Insn 191(l0): point = 655
   Insn 190(l0): point = 657
   Insn 189(l0): point = 659
   Insn 188(l0): point = 661
   Insn 187(l0): point = 663
   Insn 186(l0): point = 665
   Insn 185(l0): point = 667
   Insn 184(l0): point = 669
   Insn 183(l0): point = 671
   Insn 182(l0): point = 673
   Insn 181(l0): point = 675
   Insn 180(l0): point = 677
   Insn 179(l0): point = 679
   Insn 178(l0): point = 681
   Insn 177(l0): point = 683
   Insn 176(l0): point = 685
   Insn 175(l0): point = 687
   Insn 174(l0): point = 689
   Insn 172(l0): point = 692
   Insn 171(l0): point = 694
   Insn 170(l0): point = 696
   Insn 169(l0): point = 698
   Insn 167(l0): point = 701
   Insn 166(l0): point = 703
   Insn 165(l0): point = 705
   Insn 164(l0): point = 707
   Insn 156(l0): point = 710
   Insn 151(l0): point = 713
   Insn 150(l0): point = 715
   Insn 149(l0): point = 717
   Insn 148(l0): point = 720
   Insn 147(l0): point = 722
   Insn 146(l0): point = 724
   Insn 145(l0): point = 726
   Insn 144(l0): point = 728
   Insn 141(l0): point = 731
   Insn 140(l0): point = 733
   Insn 139(l0): point = 735
   Insn 138(l0): point = 737
   Insn 137(l0): point = 739
   Insn 136(l0): point = 741
   Insn 135(l0): point = 743
   Insn 134(l0): point = 745
   Insn 133(l0): point = 747
   Insn 132(l0): point = 749
   Insn 131(l0): point = 751
   Insn 130(l0): point = 753
   Insn 129(l0): point = 755
   Insn 128(l0): point = 757
   Insn 127(l0): point = 759
   Insn 126(l0): point = 761
   Insn 125(l0): point = 763
   Insn 124(l0): point = 765
   Insn 123(l0): point = 767
   Insn 122(l0): point = 769
   Insn 121(l0): point = 771
   Insn 120(l0): point = 773
   Insn 119(l0): point = 775
   Insn 118(l0): point = 777
   Insn 117(l0): point = 779
   Insn 116(l0): point = 781
   Insn 115(l0): point = 783
   Insn 114(l0): point = 785
   Insn 113(l0): point = 787
   Insn 112(l0): point = 789
   Insn 111(l0): point = 791
   Insn 110(l0): point = 793
   Insn 109(l0): point = 795
   Insn 108(l0): point = 797
   Insn 107(l0): point = 799
   Insn 106(l0): point = 801
   Insn 105(l0): point = 803
   Insn 104(l0): point = 805
   Insn 103(l0): point = 807
   Insn 102(l0): point = 809
   Insn 101(l0): point = 811
   Insn 100(l0): point = 813
   Insn 99(l0): point = 815
   Insn 98(l0): point = 817
   Insn 97(l0): point = 819
   Insn 96(l0): point = 821
   Insn 95(l0): point = 823
   Insn 93(l0): point = 826
   Insn 92(l0): point = 828
   Insn 91(l0): point = 830
   Insn 90(l0): point = 832
   Insn 89(l0): point = 834
   Insn 87(l0): point = 837
   Insn 86(l0): point = 839
   Insn 85(l0): point = 841
   Insn 84(l0): point = 843
   Insn 81(l0): point = 846
   Insn 80(l0): point = 848
   Insn 79(l0): point = 850
   Insn 78(l0): point = 852
   Insn 77(l0): point = 854
   Insn 76(l0): point = 856
   Insn 75(l0): point = 858
   Insn 74(l0): point = 860
   Insn 73(l0): point = 862
   Insn 72(l0): point = 864
   Insn 71(l0): point = 866
   Insn 70(l0): point = 868
   Insn 69(l0): point = 870
   Insn 68(l0): point = 872
   Insn 67(l0): point = 874
   Insn 66(l0): point = 876
   Insn 65(l0): point = 878
   Insn 64(l0): point = 880
   Insn 63(l0): point = 882
   Insn 62(l0): point = 884
   Insn 61(l0): point = 886
   Insn 60(l0): point = 888
   Insn 59(l0): point = 890
   Insn 58(l0): point = 892
   Insn 57(l0): point = 894
   Insn 56(l0): point = 896
   Insn 55(l0): point = 898
   Insn 54(l0): point = 900
   Insn 53(l0): point = 902
   Insn 52(l0): point = 904
   Insn 51(l0): point = 906
   Insn 50(l0): point = 908
   Insn 49(l0): point = 910
   Insn 48(l0): point = 912
   Insn 47(l0): point = 914
   Insn 46(l0): point = 916
   Insn 45(l0): point = 918
   Insn 44(l0): point = 920
   Insn 43(l0): point = 922
   Insn 42(l0): point = 924
   Insn 41(l0): point = 926
   Insn 40(l0): point = 928
   Insn 39(l0): point = 930
   Insn 38(l0): point = 932
   Insn 37(l0): point = 934
   Insn 36(l0): point = 936
   Insn 34(l0): point = 939
   Insn 33(l0): point = 941
   Insn 32(l0): point = 943
   Insn 31(l0): point = 945
   Insn 29(l0): point = 948
   Insn 28(l0): point = 950
   Insn 27(l0): point = 952
   Insn 26(l0): point = 954
   Insn 25(l0): point = 956
   Insn 24(l0): point = 958
   Insn 23(l0): point = 960
   Insn 22(l0): point = 962
   Insn 21(l0): point = 964
   Insn 20(l0): point = 966
   Insn 19(l0): point = 968
   Insn 18(l0): point = 970
   Insn 17(l0): point = 972
   Insn 16(l0): point = 974
   Insn 15(l0): point = 976
   Insn 14(l0): point = 978
   Insn 13(l0): point = 980
   Insn 12(l0): point = 982
   Insn 11(l0): point = 984
   Insn 10(l0): point = 986
   Insn 9(l0): point = 988
   Insn 5(l0): point = 990
   Insn 4(l0): point = 992
   Insn 3(l0): point = 994
   Insn 2(l0): point = 996
 a0(r343): [3..4]
 a1(r342): [5..6]
 a2(r321): [26..89]
 a3(r341): [26..27]
 a4(r340): [28..29]
 a5(r326): [28..75]
 a6(r339): [30..31]
 a7(r338): [36..37]
 a8(r337): [38..39]
 a9(r334): [38..47]
 a10(r336): [40..41]
 a11(r335): [42..43]
 a12(r487): [44..45]
 a13(r486): [48..49]
 a14(r333): [48..51]
 a15(r332): [52..55]
 a16(r485): [52..53]
 a17(r331): [56..57]
 a18(r330): [56..59]
 a19(r329): [60..61]
 a20(r328): [60..63]
 a21(r327): [64..65]
 a22(r484): [66..67]
 a23(r483): [68..69]
 a24(r481): [70..73]
 a25(r482): [70..71]
 a26(r325): [76..77]
 a27(r480): [78..79]
 a28(r324): [78..81]
 a29(r323): [82..83]
 a30(r322): [84..85]
 a31(r479): [86..87]
 a32(r478): [90..91]
 a33(r320): [90..93]
 a34(r319): [94..95]
 a35(r318): [96..97]
 a36(r477): [98..99]
 a37(r298): [102..163]
 a38(r317): [102..103]
 a39(r316): [104..105]
 a40(r302): [104..151]
 a41(r315): [106..107]
 a42(r314): [112..113]
 a43(r313): [114..115]
 a44(r310): [114..123]
 a45(r312): [116..117]
 a46(r311): [118..119]
 a47(r476): [120..121]
 a48(r475): [124..125]
 a49(r309): [124..127]
 a50(r308): [128..131]
 a51(r474): [128..129]
 a52(r307): [132..133]
 a53(r306): [132..135]
 a54(r305): [136..137]
 a55(r304): [136..139]
 a56(r303): [140..141]
 a57(r473): [142..143]
 a58(r472): [144..145]
 a59(r470): [146..149]
 a60(r471): [146..147]
 a61(r301): [152..153]
 a62(r469): [154..155]
 a63(r300): [154..157]
 a64(r299): [158..159]
 a65(r468): [160..161]
 a66(r467): [164..165]
 a67(r297): [164..167]
 a68(r296): [168..169]
 a69(r466): [170..171]
 a70(r295): [177..178]
 a71(r465): [179..180]
 a72(r274): [186..249]
 a73(r294): [186..187]
 a74(r293): [188..189]
 a75(r279): [188..235]
 a76(r292): [190..191]
 a77(r291): [196..197]
 a78(r290): [198..199]
 a79(r287): [198..207]
 a80(r289): [200..201]
 a81(r288): [202..203]
 a82(r464): [204..205]
 a83(r463): [208..209]
 a84(r286): [208..211]
 a85(r285): [212..215]
 a86(r462): [212..213]
 a87(r284): [216..217]
 a88(r283): [216..219]
 a89(r282): [220..221]
 a90(r281): [220..223]
 a91(r280): [224..225]
 a92(r461): [226..227]
 a93(r460): [228..229]
 a94(r458): [230..233]
 a95(r459): [230..231]
 a96(r278): [236..237]
 a97(r457): [238..239]
 a98(r277): [238..241]
 a99(r276): [242..243]
 a100(r275): [244..245]
 a101(r456): [246..247]
 a102(r455): [250..251]
 a103(r273): [250..253]
 a104(r272): [254..255]
 a105(r271): [256..257]
 a106(r454): [258..259]
 a107(r251): [262..323]
 a108(r270): [262..263]
 a109(r269): [264..265]
 a110(r255): [264..311]
 a111(r268): [266..267]
 a112(r267): [272..273]
 a113(r266): [274..275]
 a114(r263): [274..283]
 a115(r265): [276..277]
 a116(r264): [278..279]
 a117(r453): [280..281]
 a118(r452): [284..285]
 a119(r262): [284..287]
 a120(r261): [288..291]
 a121(r451): [288..289]
 a122(r260): [292..293]
 a123(r259): [292..295]
 a124(r258): [296..297]
 a125(r257): [296..299]
 a126(r256): [300..301]
 a127(r450): [302..303]
 a128(r449): [304..305]
 a129(r447): [306..309]
 a130(r448): [306..307]
 a131(r254): [312..313]
 a132(r446): [314..315]
 a133(r253): [314..317]
 a134(r252): [318..319]
 a135(r445): [320..321]
 a136(r444): [324..325]
 a137(r250): [324..327]
 a138(r249): [328..329]
 a139(r443): [330..331]
 a140(r248): [337..338]
 a141(r442): [339..340]
 a142(r247): [346..347]
 a143(r441): [348..349]
 a144(r246): [12..13]
 a145(r245): [14..15]
 a146(r440): [16..17]
 a147(r439): [358..359]
 a148(r244): [358..368]
 a149(r438): [365..366]
 a150(r243): [369..370]
 a151(r437): [371..372]
 a152(r223): [392..453]
 a153(r242): [392..393]
 a154(r241): [394..395]
 a155(r228): [394..439]
 a156(r240): [396..397]
 a157(r239): [402..403]
 a158(r238): [404..405]
 a159(r236): [404..411]
 a160(r237): [406..407]
 a161(r436): [408..409]
 a162(r435): [412..413]
 a163(r235): [412..415]
 a164(r234): [416..419]
 a165(r434): [416..417]
 a166(r233): [420..421]
 a167(r232): [420..423]
 a168(r231): [424..425]
 a169(r230): [424..427]
 a170(r229): [428..429]
 a171(r433): [430..431]
 a172(r432): [432..433]
 a173(r430): [434..437]
 a174(r431): [434..435]
 a175(r227): [440..441]
 a176(r429): [442..443]
 a177(r226): [442..445]
 a178(r225): [446..447]
 a179(r224): [448..449]
 a180(r428): [450..451]
 a181(r427): [454..455]
 a182(r222): [454..457]
 a183(r221): [458..459]
 a184(r220): [460..461]
 a185(r426): [462..463]
 a186(r201): [466..525]
 a187(r219): [466..467]
 a188(r218): [468..469]
 a189(r205): [468..513]
 a190(r217): [470..471]
 a191(r216): [476..477]
 a192(r215): [478..479]
 a193(r213): [478..485]
 a194(r214): [480..481]
 a195(r425): [482..483]
 a196(r424): [486..487]
 a197(r212): [486..489]
 a198(r211): [490..493]
 a199(r423): [490..491]
 a200(r210): [494..495]
 a201(r209): [494..497]
 a202(r208): [498..499]
 a203(r207): [498..501]
 a204(r206): [502..503]
 a205(r422): [504..505]
 a206(r421): [506..507]
 a207(r419): [508..511]
 a208(r420): [508..509]
 a209(r204): [514..515]
 a210(r418): [516..517]
 a211(r203): [516..519]
 a212(r202): [520..521]
 a213(r417): [522..523]
 a214(r416): [526..527]
 a215(r200): [526..529]
 a216(r199): [530..531]
 a217(r415): [532..533]
 a218(r198): [539..540]
 a219(r414): [541..542]
 a220(r178): [548..609]
 a221(r197): [548..549]
 a222(r196): [550..551]
 a223(r183): [550..595]
 a224(r195): [552..553]
 a225(r194): [558..559]
 a226(r193): [560..561]
 a227(r191): [560..567]
 a228(r192): [562..563]
 a229(r413): [564..565]
 a230(r412): [568..569]
 a231(r190): [568..571]
 a232(r189): [572..575]
 a233(r411): [572..573]
 a234(r188): [576..577]
 a235(r187): [576..579]
 a236(r186): [580..581]
 a237(r185): [580..583]
 a238(r184): [584..585]
 a239(r410): [586..587]
 a240(r409): [588..589]
 a241(r407): [590..593]
 a242(r408): [590..591]
 a243(r182): [596..597]
 a244(r406): [598..599]
 a245(r181): [598..601]
 a246(r180): [602..603]
 a247(r179): [604..605]
 a248(r405): [606..607]
 a249(r404): [610..611]
 a250(r177): [610..613]
 a251(r176): [614..615]
 a252(r175): [616..617]
 a253(r403): [618..619]
 a254(r156): [622..681]
 a255(r174): [622..623]
 a256(r173): [624..625]
 a257(r160): [624..669]
 a258(r172): [626..627]
 a259(r171): [632..633]
 a260(r170): [634..635]
 a261(r168): [634..641]
 a262(r169): [636..637]
 a263(r402): [638..639]
 a264(r401): [642..643]
 a265(r167): [642..645]
 a266(r166): [646..649]
 a267(r400): [646..647]
 a268(r165): [650..651]
 a269(r164): [650..653]
 a270(r163): [654..655]
 a271(r162): [654..657]
 a272(r161): [658..659]
 a273(r399): [660..661]
 a274(r398): [662..663]
 a275(r396): [664..667]
 a276(r397): [664..665]
 a277(r159): [670..671]
 a278(r395): [672..673]
 a279(r158): [672..675]
 a280(r157): [676..677]
 a281(r394): [678..679]
 a282(r393): [682..683]
 a283(r155): [682..685]
 a284(r154): [686..687]
 a285(r392): [688..689]
 a286(r153): [695..696]
 a287(r391): [697..698]
 a288(r152): [704..705]
 a289(r390): [706..707]
 a290(r151): [378..379]
 a291(r150): [380..381]
 a292(r389): [382..383]
 a293(r388): [716..717]
 a294(r149): [716..726]
 a295(r387): [723..724]
 a296(r386): [727..728]
 a297(r131): [732..787]
 a298(r148): [732..733]
 a299(r147): [734..735]
 a300(r146): [736..737]
 a301(r137): [736..767]
 a302(r385): [738..739]
 a303(r145): [738..741]
 a304(r144): [742..743]
 a305(r143): [744..747]
 a306(r384): [744..745]
 a307(r142): [748..749]
 a308(r141): [750..751]
 a309(r140): [752..753]
 a310(r383): [754..755]
 a311(r382): [756..757]
 a312(r139): [758..761]
 a313(r381): [758..759]
 a314(r138): [762..763]
 a315(r380): [764..765]
 a316(r136): [768..771]
 a317(r379): [768..769]
 a318(r135): [772..773]
 a319(r134): [774..775]
 a320(r133): [780..781]
 a321(r132): [782..783]
 a322(r378): [784..785]
 a323(r377): [788..789]
 a324(r376): [792..793]
 a325(r130): [794..795]
 a326(r375): [796..797]
 a327(r129): [796..799]
 a328(r128): [800..801]
 a329(r127): [802..803]
 a330(r374): [804..805]
 a331(r373): [808..809]
 a332(r126): [810..811]
 a333(r372): [812..813]
 a334(r125): [812..815]
 a335(r124): [816..817]
 a336(r123): [818..819]
 a337(r122): [820..821]
 a338(r371): [822..823]
 a339(r121): [829..830]
 a340(r120): [831..832]
 a341(r370): [833..834]
 a342(r119): [840..841]
 a343(r369): [842..843]
 a344(r368): [847..848]
 a345(r118): [847..850]
 a346(r117): [851..852]
 a347(r116): [853..854]
 a348(r107): [853..884]
 a349(r367): [855..856]
 a350(r115): [855..858]
 a351(r114): [859..860]
 a352(r113): [861..864]
 a353(r366): [861..862]
 a354(r112): [865..866]
 a355(r111): [867..868]
 a356(r110): [869..870]
 a357(r365): [871..872]
 a358(r364): [873..874]
 a359(r109): [875..878]
 a360(r363): [875..876]
 a361(r108): [879..880]
 a362(r362): [881..882]
 a363(r106): [885..888]
 a364(r361): [885..886]
 a365(r105): [889..890]
 a366(r104): [891..892]
 a367(r103): [897..898]
 a368(r102): [899..900]
 a369(r360): [901..902]
 a370(r359): [905..906]
 a371(r101): [907..908]
 a372(r358): [909..910]
 a373(r100): [909..912]
 a374(r99): [913..914]
 a375(r98): [915..916]
 a376(r357): [917..918]
 a377(r356): [921..922]
 a378(r97): [923..924]
 a379(r355): [925..926]
 a380(r96): [925..928]
 a381(r95): [929..930]
 a382(r94): [931..932]
 a383(r93): [933..934]
 a384(r354): [935..936]
 a385(r92): [942..943]
 a386(r353): [944..945]
 a387(r91): [951..952]
 a388(r352): [953..954]
 a389(r350): [957..958]
 a390(r351): [959..960]
 a391(r90): [959..962]
 a392(r349): [963..964]
 a393(r348): [967..968]
 a394(r89): [969..970]
 a395(r87): [969..976]
 a396(r88): [971..972]
 a397(r347): [973..974]
 a398(r346): [977..978]
 a399(r345): [981..982]
 a400(r344): [985..986]
Compressing live ranges: from 999 to 602 - 60%
Ranges after the compression:
 a0(r343): [0..1]
 a1(r342): [2..3]
 a2(r321): [10..51]
 a3(r341): [10..11]
 a4(r340): [12..13]
 a5(r326): [12..41]
 a6(r339): [14..15]
 a7(r338): [16..17]
 a8(r337): [18..19]
 a9(r334): [18..25]
 a10(r336): [20..21]
 a11(r335): [22..23]
 a12(r487): [24..25]
 a13(r486): [26..27]
 a14(r333): [26..27]
 a15(r332): [28..29]
 a16(r485): [28..29]
 a17(r331): [30..31]
 a18(r330): [30..31]
 a19(r329): [32..33]
 a20(r328): [32..33]
 a21(r327): [34..35]
 a22(r484): [36..37]
 a23(r483): [38..39]
 a24(r481): [40..41]
 a25(r482): [40..41]
 a26(r325): [42..43]
 a27(r480): [44..45]
 a28(r324): [44..45]
 a29(r323): [46..47]
 a30(r322): [48..49]
 a31(r479): [50..51]
 a32(r478): [52..53]
 a33(r320): [52..53]
 a34(r319): [54..55]
 a35(r318): [56..57]
 a36(r477): [58..59]
 a37(r298): [60..99]
 a38(r317): [60..61]
 a39(r316): [62..63]
 a40(r302): [62..91]
 a41(r315): [64..65]
 a42(r314): [66..67]
 a43(r313): [68..69]
 a44(r310): [68..75]
 a45(r312): [70..71]
 a46(r311): [72..73]
 a47(r476): [74..75]
 a48(r475): [76..77]
 a49(r309): [76..77]
 a50(r308): [78..79]
 a51(r474): [78..79]
 a52(r307): [80..81]
 a53(r306): [80..81]
 a54(r305): [82..83]
 a55(r304): [82..83]
 a56(r303): [84..85]
 a57(r473): [86..87]
 a58(r472): [88..89]
 a59(r470): [90..91]
 a60(r471): [90..91]
 a61(r301): [92..93]
 a62(r469): [94..95]
 a63(r300): [94..95]
 a64(r299): [96..97]
 a65(r468): [98..99]
 a66(r467): [100..101]
 a67(r297): [100..101]
 a68(r296): [102..103]
 a69(r466): [104..105]
 a70(r295): [106..107]
 a71(r465): [108..109]
 a72(r274): [110..151]
 a73(r294): [110..111]
 a74(r293): [112..113]
 a75(r279): [112..141]
 a76(r292): [114..115]
 a77(r291): [116..117]
 a78(r290): [118..119]
 a79(r287): [118..125]
 a80(r289): [120..121]
 a81(r288): [122..123]
 a82(r464): [124..125]
 a83(r463): [126..127]
 a84(r286): [126..127]
 a85(r285): [128..129]
 a86(r462): [128..129]
 a87(r284): [130..131]
 a88(r283): [130..131]
 a89(r282): [132..133]
 a90(r281): [132..133]
 a91(r280): [134..135]
 a92(r461): [136..137]
 a93(r460): [138..139]
 a94(r458): [140..141]
 a95(r459): [140..141]
 a96(r278): [142..143]
 a97(r457): [144..145]
 a98(r277): [144..145]
 a99(r276): [146..147]
 a100(r275): [148..149]
 a101(r456): [150..151]
 a102(r455): [152..153]
 a103(r273): [152..153]
 a104(r272): [154..155]
 a105(r271): [156..157]
 a106(r454): [158..159]
 a107(r251): [160..199]
 a108(r270): [160..161]
 a109(r269): [162..163]
 a110(r255): [162..191]
 a111(r268): [164..165]
 a112(r267): [166..167]
 a113(r266): [168..169]
 a114(r263): [168..175]
 a115(r265): [170..171]
 a116(r264): [172..173]
 a117(r453): [174..175]
 a118(r452): [176..177]
 a119(r262): [176..177]
 a120(r261): [178..179]
 a121(r451): [178..179]
 a122(r260): [180..181]
 a123(r259): [180..181]
 a124(r258): [182..183]
 a125(r257): [182..183]
 a126(r256): [184..185]
 a127(r450): [186..187]
 a128(r449): [188..189]
 a129(r447): [190..191]
 a130(r448): [190..191]
 a131(r254): [192..193]
 a132(r446): [194..195]
 a133(r253): [194..195]
 a134(r252): [196..197]
 a135(r445): [198..199]
 a136(r444): [200..201]
 a137(r250): [200..201]
 a138(r249): [202..203]
 a139(r443): [204..205]
 a140(r248): [206..207]
 a141(r442): [208..209]
 a142(r247): [210..211]
 a143(r441): [212..213]
 a144(r246): [4..5]
 a145(r245): [6..7]
 a146(r440): [8..9]
 a147(r439): [214..215]
 a148(r244): [214..217]
 a149(r438): [216..217]
 a150(r243): [218..219]
 a151(r437): [220..221]
 a152(r223): [228..267]
 a153(r242): [228..229]
 a154(r241): [230..231]
 a155(r228): [230..257]
 a156(r240): [232..233]
 a157(r239): [234..235]
 a158(r238): [236..237]
 a159(r236): [236..241]
 a160(r237): [238..239]
 a161(r436): [240..241]
 a162(r435): [242..243]
 a163(r235): [242..243]
 a164(r234): [244..245]
 a165(r434): [244..245]
 a166(r233): [246..247]
 a167(r232): [246..247]
 a168(r231): [248..249]
 a169(r230): [248..249]
 a170(r229): [250..251]
 a171(r433): [252..253]
 a172(r432): [254..255]
 a173(r430): [256..257]
 a174(r431): [256..257]
 a175(r227): [258..259]
 a176(r429): [260..261]
 a177(r226): [260..261]
 a178(r225): [262..263]
 a179(r224): [264..265]
 a180(r428): [266..267]
 a181(r427): [268..269]
 a182(r222): [268..269]
 a183(r221): [270..271]
 a184(r220): [272..273]
 a185(r426): [274..275]
 a186(r201): [276..313]
 a187(r219): [276..277]
 a188(r218): [278..279]
 a189(r205): [278..305]
 a190(r217): [280..281]
 a191(r216): [282..283]
 a192(r215): [284..285]
 a193(r213): [284..289]
 a194(r214): [286..287]
 a195(r425): [288..289]
 a196(r424): [290..291]
 a197(r212): [290..291]
 a198(r211): [292..293]
 a199(r423): [292..293]
 a200(r210): [294..295]
 a201(r209): [294..295]
 a202(r208): [296..297]
 a203(r207): [296..297]
 a204(r206): [298..299]
 a205(r422): [300..301]
 a206(r421): [302..303]
 a207(r419): [304..305]
 a208(r420): [304..305]
 a209(r204): [306..307]
 a210(r418): [308..309]
 a211(r203): [308..309]
 a212(r202): [310..311]
 a213(r417): [312..313]
 a214(r416): [314..315]
 a215(r200): [314..315]
 a216(r199): [316..317]
 a217(r415): [318..319]
 a218(r198): [320..321]
 a219(r414): [322..323]
 a220(r178): [324..363]
 a221(r197): [324..325]
 a222(r196): [326..327]
 a223(r183): [326..353]
 a224(r195): [328..329]
 a225(r194): [330..331]
 a226(r193): [332..333]
 a227(r191): [332..337]
 a228(r192): [334..335]
 a229(r413): [336..337]
 a230(r412): [338..339]
 a231(r190): [338..339]
 a232(r189): [340..341]
 a233(r411): [340..341]
 a234(r188): [342..343]
 a235(r187): [342..343]
 a236(r186): [344..345]
 a237(r185): [344..345]
 a238(r184): [346..347]
 a239(r410): [348..349]
 a240(r409): [350..351]
 a241(r407): [352..353]
 a242(r408): [352..353]
 a243(r182): [354..355]
 a244(r406): [356..357]
 a245(r181): [356..357]
 a246(r180): [358..359]
 a247(r179): [360..361]
 a248(r405): [362..363]
 a249(r404): [364..365]
 a250(r177): [364..365]
 a251(r176): [366..367]
 a252(r175): [368..369]
 a253(r403): [370..371]
 a254(r156): [372..409]
 a255(r174): [372..373]
 a256(r173): [374..375]
 a257(r160): [374..401]
 a258(r172): [376..377]
 a259(r171): [378..379]
 a260(r170): [380..381]
 a261(r168): [380..385]
 a262(r169): [382..383]
 a263(r402): [384..385]
 a264(r401): [386..387]
 a265(r167): [386..387]
 a266(r166): [388..389]
 a267(r400): [388..389]
 a268(r165): [390..391]
 a269(r164): [390..391]
 a270(r163): [392..393]
 a271(r162): [392..393]
 a272(r161): [394..395]
 a273(r399): [396..397]
 a274(r398): [398..399]
 a275(r396): [400..401]
 a276(r397): [400..401]
 a277(r159): [402..403]
 a278(r395): [404..405]
 a279(r158): [404..405]
 a280(r157): [406..407]
 a281(r394): [408..409]
 a282(r393): [410..411]
 a283(r155): [410..411]
 a284(r154): [412..413]
 a285(r392): [414..415]
 a286(r153): [416..417]
 a287(r391): [418..419]
 a288(r152): [420..421]
 a289(r390): [422..423]
 a290(r151): [222..223]
 a291(r150): [224..225]
 a292(r389): [226..227]
 a293(r388): [424..425]
 a294(r149): [424..427]
 a295(r387): [426..427]
 a296(r386): [428..429]
 a297(r131): [430..469]
 a298(r148): [430..431]
 a299(r147): [432..433]
 a300(r146): [434..435]
 a301(r137): [434..457]
 a302(r385): [436..437]
 a303(r145): [436..437]
 a304(r144): [438..439]
 a305(r143): [440..441]
 a306(r384): [440..441]
 a307(r142): [442..443]
 a308(r141): [444..445]
 a309(r140): [446..447]
 a310(r383): [448..449]
 a311(r382): [450..451]
 a312(r139): [452..453]
 a313(r381): [452..453]
 a314(r138): [454..455]
 a315(r380): [456..457]
 a316(r136): [458..459]
 a317(r379): [458..459]
 a318(r135): [460..461]
 a319(r134): [462..463]
 a320(r133): [464..465]
 a321(r132): [466..467]
 a322(r378): [468..469]
 a323(r377): [470..471]
 a324(r376): [472..473]
 a325(r130): [474..475]
 a326(r375): [476..477]
 a327(r129): [476..477]
 a328(r128): [478..479]
 a329(r127): [480..481]
 a330(r374): [482..483]
 a331(r373): [484..485]
 a332(r126): [486..487]
 a333(r372): [488..489]
 a334(r125): [488..489]
 a335(r124): [490..491]
 a336(r123): [492..493]
 a337(r122): [494..495]
 a338(r371): [496..497]
 a339(r121): [498..499]
 a340(r120): [500..501]
 a341(r370): [502..503]
 a342(r119): [504..505]
 a343(r369): [506..507]
 a344(r368): [508..509]
 a345(r118): [508..509]
 a346(r117): [510..511]
 a347(r116): [512..513]
 a348(r107): [512..535]
 a349(r367): [514..515]
 a350(r115): [514..515]
 a351(r114): [516..517]
 a352(r113): [518..519]
 a353(r366): [518..519]
 a354(r112): [520..521]
 a355(r111): [522..523]
 a356(r110): [524..525]
 a357(r365): [526..527]
 a358(r364): [528..529]
 a359(r109): [530..531]
 a360(r363): [530..531]
 a361(r108): [532..533]
 a362(r362): [534..535]
 a363(r106): [536..537]
 a364(r361): [536..537]
 a365(r105): [538..539]
 a366(r104): [540..541]
 a367(r103): [542..543]
 a368(r102): [544..545]
 a369(r360): [546..547]
 a370(r359): [548..549]
 a371(r101): [550..551]
 a372(r358): [552..553]
 a373(r100): [552..553]
 a374(r99): [554..555]
 a375(r98): [556..557]
 a376(r357): [558..559]
 a377(r356): [560..561]
 a378(r97): [562..563]
 a379(r355): [564..565]
 a380(r96): [564..565]
 a381(r95): [566..567]
 a382(r94): [568..569]
 a383(r93): [570..571]
 a384(r354): [572..573]
 a385(r92): [574..575]
 a386(r353): [576..577]
 a387(r91): [578..579]
 a388(r352): [580..581]
 a389(r350): [582..583]
 a390(r351): [584..585]
 a391(r90): [584..585]
 a392(r349): [586..587]
 a393(r348): [588..589]
 a394(r89): [590..591]
 a395(r87): [590..595]
 a396(r88): [592..593]
 a397(r347): [594..595]
 a398(r346): [596..597]
 a399(r345): [598..599]
 a400(r344): [600..601]
  regions=1, blocks=29, points=602
    allocnos=401 (big 0), copies=0, conflicts=0, ranges=401
Disposition:
  395:r87  l0    22  396:r88  l0     0  394:r89  l0    21  391:r90  l0    21
  387:r91  l0     0  385:r92  l0     0  383:r93  l0     0  382:r94  l0     0
  381:r95  l0     0  380:r96  l0     1  378:r97  l0     0  375:r98  l0     0
  374:r99  l0     0  373:r100 l0     1  371:r101 l0     0  368:r102 l0    21
  367:r103 l0    21  366:r104 l0    21  365:r105 l0    21  363:r106 l0    21
  348:r107 l0    21  361:r108 l0     0  359:r109 l0     0  356:r110 l0     0
  355:r111 l0    22  354:r112 l0    22  352:r113 l0    22  351:r114 l0    22
  350:r115 l0    22  347:r116 l0    22  346:r117 l0    21  345:r118 l0    21
  342:r119 l0     0  340:r120 l0     0  339:r121 l0     0  337:r122 l0     0
  336:r123 l0     0  335:r124 l0     0  334:r125 l0     1  332:r126 l0     0
  329:r127 l0     0  328:r128 l0     0  327:r129 l0     1  325:r130 l0     0
  297:r131 l0     3  321:r132 l0    21  320:r133 l0    21  319:r134 l0    21
  318:r135 l0    21  316:r136 l0    21  301:r137 l0    21  314:r138 l0     0
  312:r139 l0     0  309:r140 l0     0  308:r141 l0    22  307:r142 l0    22
  305:r143 l0    22  304:r144 l0    22  303:r145 l0    22  300:r146 l0    22
  299:r147 l0    21  298:r148 l0    21  294:r149 l0    21  291:r150 l0     0
  290:r151 l0     0  288:r152 l0     0  286:r153 l0     0  284:r154 l0     0
  283:r155 l0     1  254:r156 l0     3  280:r157 l0     0  279:r158 l0     1
  277:r159 l0     0  257:r160 l0   mem  272:r161 l0     0  271:r162 l0    22
  270:r163 l0    21  269:r164 l0    22  268:r165 l0    21  266:r166 l0    21
  265:r167 l0    21  261:r168 l0    22  262:r169 l0    21  260:r170 l0    21
  259:r171 l0    21  258:r172 l0    21  256:r173 l0    21  255:r174 l0    21
  252:r175 l0     0  251:r176 l0     0  250:r177 l0     1  220:r178 l0     3
  247:r179 l0     0  246:r180 l0     0  245:r181 l0     1  243:r182 l0     0
  223:r183 l0   mem  238:r184 l0     0  237:r185 l0    22  236:r186 l0    21
  235:r187 l0    22  234:r188 l0    21  232:r189 l0    21  231:r190 l0    21
  227:r191 l0    22  228:r192 l0    21  226:r193 l0    21  225:r194 l0    21
  224:r195 l0    21  222:r196 l0    21  221:r197 l0    21  218:r198 l0     0
  216:r199 l0     0  215:r200 l0     1  186:r201 l0     3  212:r202 l0     0
  211:r203 l0     1  209:r204 l0     0  189:r205 l0   mem  204:r206 l0     0
  203:r207 l0    22  202:r208 l0    21  201:r209 l0    22  200:r210 l0    21
  198:r211 l0    21  197:r212 l0    21  193:r213 l0    22  194:r214 l0    21
  192:r215 l0    21  191:r216 l0    21  190:r217 l0    21  188:r218 l0    21
  187:r219 l0    21  184:r220 l0     0  183:r221 l0     0  182:r222 l0     1
  152:r223 l0     3  179:r224 l0     0  178:r225 l0     0  177:r226 l0     1
  175:r227 l0     0  155:r228 l0   mem  170:r229 l0     0  169:r230 l0    22
  168:r231 l0    21  167:r232 l0    22  166:r233 l0    21  164:r234 l0    21
  163:r235 l0    21  159:r236 l0    22  160:r237 l0    21  158:r238 l0    21
  157:r239 l0    21  156:r240 l0    21  154:r241 l0    21  153:r242 l0    21
  150:r243 l0     0  148:r244 l0    21  145:r245 l0     0  144:r246 l0     0
  142:r247 l0     0  140:r248 l0     0  138:r249 l0     0  137:r250 l0     1
  107:r251 l0     3  134:r252 l0     0  133:r253 l0     1  131:r254 l0     0
  110:r255 l0   mem  126:r256 l0     0  125:r257 l0    22  124:r258 l0    21
  123:r259 l0    22  122:r260 l0    21  120:r261 l0    21  119:r262 l0    21
  114:r263 l0    22  116:r264 l0     0  115:r265 l0    21  113:r266 l0    21
  112:r267 l0    21  111:r268 l0    21  109:r269 l0    21  108:r270 l0    21
  105:r271 l0     0  104:r272 l0     0  103:r273 l0     1   72:r274 l0     3
  100:r275 l0     0   99:r276 l0     0   98:r277 l0     1   96:r278 l0     0
   75:r279 l0   mem   91:r280 l0     0   90:r281 l0    22   89:r282 l0    21
   88:r283 l0    22   87:r284 l0    21   85:r285 l0    21   84:r286 l0    21
   79:r287 l0    22   81:r288 l0     0   80:r289 l0    21   78:r290 l0    21
   77:r291 l0    21   76:r292 l0    21   74:r293 l0    21   73:r294 l0    21
   70:r295 l0     0   68:r296 l0     0   67:r297 l0     1   37:r298 l0     3
   64:r299 l0     0   63:r300 l0     1   61:r301 l0     0   40:r302 l0   mem
   56:r303 l0     0   55:r304 l0    22   54:r305 l0    21   53:r306 l0    22
   52:r307 l0    21   50:r308 l0    21   49:r309 l0    21   44:r310 l0    22
   46:r311 l0     0   45:r312 l0    21   43:r313 l0    21   42:r314 l0    21
   41:r315 l0    21   39:r316 l0    21   38:r317 l0    21   35:r318 l0     0
   34:r319 l0     0   33:r320 l0     1    2:r321 l0     3   30:r322 l0     0
   29:r323 l0     0   28:r324 l0     1   26:r325 l0     0    5:r326 l0   mem
   21:r327 l0     0   20:r328 l0    22   19:r329 l0    21   18:r330 l0    22
   17:r331 l0    21   15:r332 l0    21   14:r333 l0    21    9:r334 l0    22
   11:r335 l0     0   10:r336 l0    21    8:r337 l0    21    7:r338 l0    21
    6:r339 l0    21    4:r340 l0    21    3:r341 l0    21    1:r342 l0     0
    0:r343 l0     0  400:r344 l0    21  399:r345 l0    21  398:r346 l0     0
  397:r347 l0     0  393:r348 l0    21  392:r349 l0     0  389:r350 l0    21
  390:r351 l0    22  388:r352 l0     0  386:r353 l0     0  384:r354 l0     0
  379:r355 l0     0  377:r356 l0    21  376:r357 l0     0  372:r358 l0     0
  370:r359 l0    21  369:r360 l0    21  364:r361 l0    22  362:r362 l0     0
  360:r363 l0     1  358:r364 l0     0  357:r365 l0     0  353:r366 l0    23
  349:r367 l0    23  344:r368 l0     0  343:r369 l0     0  341:r370 l0     0
  338:r371 l0     0  333:r372 l0     0  331:r373 l0    21  330:r374 l0     0
  326:r375 l0     0  324:r376 l0    21  323:r377 l0     0  322:r378 l0    21
  317:r379 l0    22  315:r380 l0     0  313:r381 l0     1  311:r382 l0     0
  310:r383 l0     0  306:r384 l0    23  302:r385 l0    23  296:r386 l0     0
  295:r387 l0    22  293:r388 l0    22  292:r389 l0     0  289:r390 l0     0
  287:r391 l0     0  285:r392 l0     0  282:r393 l0     0  281:r394 l0     0
  278:r395 l0     0  275:r396 l0     0  276:r397 l0     1  274:r398 l0     0
  273:r399 l0     0  267:r400 l0    22  264:r401 l0    22  263:r402 l0     0
  253:r403 l0     0  249:r404 l0     0  248:r405 l0     0  244:r406 l0     0
  241:r407 l0     0  242:r408 l0     1  240:r409 l0     0  239:r410 l0     0
  233:r411 l0    22  230:r412 l0    22  229:r413 l0     0  219:r414 l0     0
  217:r415 l0     0  214:r416 l0     0  213:r417 l0     0  210:r418 l0     0
  207:r419 l0     0  208:r420 l0     1  206:r421 l0     0  205:r422 l0     0
  199:r423 l0    22  196:r424 l0    22  195:r425 l0     0  185:r426 l0     0
  181:r427 l0     0  180:r428 l0     0  176:r429 l0     0  173:r430 l0     0
  174:r431 l0     1  172:r432 l0     0  171:r433 l0     0  165:r434 l0    22
  162:r435 l0    22  161:r436 l0     0  151:r437 l0     0  149:r438 l0    22
  147:r439 l0    22  146:r440 l0     0  143:r441 l0     0  141:r442 l0     0
  139:r443 l0     0  136:r444 l0     0  135:r445 l0     0  132:r446 l0     0
  129:r447 l0     0  130:r448 l0     1  128:r449 l0     0  127:r450 l0     0
  121:r451 l0    22  118:r452 l0    22  117:r453 l0     0  106:r454 l0     0
  102:r455 l0     0  101:r456 l0     0   97:r457 l0     0   94:r458 l0     0
   95:r459 l0     1   93:r460 l0     0   92:r461 l0     0   86:r462 l0    22
   83:r463 l0    22   82:r464 l0     0   71:r465 l0     0   69:r466 l0     0
   66:r467 l0     0   65:r468 l0     0   62:r469 l0     0   59:r470 l0     0
   60:r471 l0     1   58:r472 l0     0   57:r473 l0     0   51:r474 l0    22
   48:r475 l0    22   47:r476 l0     0   36:r477 l0     0   32:r478 l0     0
   31:r479 l0     0   27:r480 l0     0   24:r481 l0     0   25:r482 l0     1
   23:r483 l0     0   22:r484 l0     0   16:r485 l0    22   13:r486 l0    22
   12:r487 l0     0
+++Costs: overall 123, reg 19, mem 104, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int filter(float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={12d,2u} r1={11d,1u} r2={11d,1u} r4={11d,1u} r5={11d,1u} r6={1d,28u} r7={1d,38u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,27u} r17={131d,16u} r18={10d} r19={10d} r20={1d,152u,27e} r21={21d,20u} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u,1e} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u,1e} r107={1d,1u} r108={1d,1u} r109={1d,2u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u,1e} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u,1e} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u,1e} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1e} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1e} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1e} r156={1d,1u} r157={1d,1u} r158={1d,1u,1e} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u,1e} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u,1e} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u,1e} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u,1e} r201={1d,1u} r202={1d,1u} r203={1d,1u,1e} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u,1e} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u,1e} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u,1e} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u,1e} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,2u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u,1e} r251={1d,1u} r252={1d,1u} r253={1d,1u,1e} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u,1e} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u,1e} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u,1e} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u,1e} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u,1e} r298={1d,1u} r299={1d,1u} r300={1d,1u,1e} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u,1e} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u,1e} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u,1e} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u,1e} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,2u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,2u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,2u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,2u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={1d,1u} r447={1d,2u} r448={1d,1u} r449={1d,1u} r450={1d,1u} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,2u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={1d,1u} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,2u} r471={1d,1u} r472={1d,1u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r481={1d,2u} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} 
;;    total ref usage 2031{1272d,700u,59e} in 486{476 regular + 10 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 344 345 346 347 348 349 350 351 352
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) ge2fitman_preproc.cpp:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) ge2fitman_preproc.cpp:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_preproc.cpp:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ procpar_info ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
        (reg:DI 2 cx [ preprocess ])) ge2fitman_preproc.cpp:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ preprocess ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:374 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SF 344)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:376 129 {*movsf_internal}
     (nil))
(insn 11 10 12 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 344)) ge2fitman_preproc.cpp:376 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 344)
        (nil)))
(insn 12 11 13 2 (set (reg:SF 345)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:376 129 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 345)) ge2fitman_preproc.cpp:376 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 345)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:378 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SF 87 [ D.26042 ])
        (mem/j:SF (reg/f:DI 346) [0 procpar_info_15(D)->acquision_time+0 S4 A64])) ge2fitman_preproc.cpp:378 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 346)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 347)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:378 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 88 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 347)
                (const_int 324 [0x144])) [0 procpar_info_15(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:378 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 347)
        (nil)))
(insn 18 17 19 2 (set (reg:SF 89 [ D.26042 ])
        (float:SF (reg:SI 88 [ D.26043 ]))) ge2fitman_preproc.cpp:378 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26043 ])
        (nil)))
(insn 19 18 20 2 (set (reg:SF 348)
        (div:SF (reg:SF 87 [ D.26042 ])
            (reg:SF 89 [ D.26042 ]))) ge2fitman_preproc.cpp:378 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 89 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 87 [ D.26042 ])
            (nil))))
(insn 20 19 21 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32])
        (reg:SF 348)) ge2fitman_preproc.cpp:378 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 348)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:379 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SF 90 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 349)
                (const_int 48 [0x30])) [0 preprocess_20(D)->pre_delay_time+0 S4 A32])) ge2fitman_preproc.cpp:379 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 349)
        (nil)))
(insn 23 22 24 2 (set (reg:SF 351)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:379 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+6 [0x0.f424p+20])
        (nil)))
(insn 24 23 25 2 (set (reg:SF 350)
        (div:SF (reg:SF 90 [ D.26042 ])
            (reg:SF 351))) ge2fitman_preproc.cpp:379 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 351)
        (expr_list:REG_DEAD (reg:SF 90 [ D.26042 ])
            (nil))))
(insn 25 24 26 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32])
        (reg:SF 350)) ge2fitman_preproc.cpp:379 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 350)
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 352)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:385 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:SI 91 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 352)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:385 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 352)
        (nil)))
(insn 28 27 29 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:385 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 91 [ D.26043 ])
        (nil)))
(jump_insn 29 28 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) ge2fitman_preproc.cpp:385 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 82)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 353
(note 30 29 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 3 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:385 89 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 92 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 353)
                (const_int 52 [0x34])) [0 preprocess_20(D)->pre_quecc_if+0 S4 A32])) ge2fitman_preproc.cpp:385 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 353)
        (nil)))
(insn 33 32 34 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.26043 ])
            (const_int 1 [0x1]))) ge2fitman_preproc.cpp:385 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.26043 ])
        (nil)))
(jump_insn 34 33 35 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) ge2fitman_preproc.cpp:385 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 82)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:386 89 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:SI 93 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 354)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:386 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (nil)))
(insn 38 37 39 4 (set (reg:DI 94 [ D.26044 ])
        (sign_extend:DI (reg:SI 93 [ D.26043 ]))) ge2fitman_preproc.cpp:386 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93 [ D.26043 ])
        (nil)))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 95 [ D.26044 ])
                (ashift:DI (reg:DI 94 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:386 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 4 (parallel [
            (set (reg:DI 96 [ D.26045 ])
                (plus:DI (reg:DI 95 [ D.26044 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:386 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 95 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 4 (set (reg/f:DI 355)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:386 89 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (parallel [
            (set (reg/f:DI 97 [ D.26046 ])
                (plus:DI (reg:DI 96 [ D.26045 ])
                    (reg/f:DI 355)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:386 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 355)
        (expr_list:REG_DEAD (reg:DI 96 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 96 [ D.26045 ]))
                    (nil))))))
(insn 43 42 44 4 (set (reg:SF 356)
        (mem:SF (reg/f:DI 97 [ D.26046 ]) [0 *_30+0 S4 A32])) ge2fitman_preproc.cpp:386 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.26046 ])
        (nil)))
(insn 44 43 45 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 356)) ge2fitman_preproc.cpp:386 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 356)
        (nil)))
(insn 45 44 46 4 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:387 89 {*movdi_internal}
     (nil))
(insn 46 45 47 4 (set (reg:SI 98 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 357)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:387 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 357)
        (nil)))
(insn 47 46 48 4 (set (reg:DI 99 [ D.26044 ])
        (sign_extend:DI (reg:SI 98 [ D.26043 ]))) ge2fitman_preproc.cpp:387 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98 [ D.26043 ])
        (nil)))
(insn 48 47 49 4 (parallel [
            (set (reg:DI 100 [ D.26044 ])
                (ashift:DI (reg:DI 99 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:387 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 4 (set (reg/f:DI 358)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:387 89 {*movdi_internal}
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 101 [ D.26046 ])
                (plus:DI (reg:DI 100 [ D.26044 ])
                    (reg/f:DI 358)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:387 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 358)
        (expr_list:REG_DEAD (reg:DI 100 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 100 [ D.26044 ]))
                    (nil))))))
(insn 51 50 52 4 (set (reg:SF 359)
        (mem:SF (reg/f:DI 101 [ D.26046 ]) [0 *_35+0 S4 A32])) ge2fitman_preproc.cpp:387 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.26046 ])
        (nil)))
(insn 52 51 53 4 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 359)) ge2fitman_preproc.cpp:387 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 359)
        (nil)))
(insn 53 52 54 4 (set (reg:SF 360)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])) ge2fitman_preproc.cpp:389 129 {*movsf_internal}
     (nil))
(insn 54 53 55 4 (set (reg:SF 102 [ D.26042 ])
        (div:SF (reg:SF 360)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32]))) ge2fitman_preproc.cpp:389 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 360)
        (nil)))
(insn 55 54 56 4 (set (reg:DF 103 [ D.26047 ])
        (float_extend:DF (reg:SF 102 [ D.26042 ]))) ge2fitman_preproc.cpp:389 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 102 [ D.26042 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DF 21 xmm0)
        (reg:DF 103 [ D.26047 ])) ge2fitman_preproc.cpp:389 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 103 [ D.26047 ])
        (nil)))
(call_insn 57 56 58 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7fe357076d80 log>) [0 __builtin_log S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:389 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 58 57 59 4 (set (reg:DF 104 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:389 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 59 58 60 4 (set (reg:SF 105 [ D.26042 ])
        (float_truncate:SF (reg:DF 104 [ D.26047 ]))) ge2fitman_preproc.cpp:389 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 104 [ D.26047 ])
        (nil)))
(insn 60 59 61 4 (set (reg:DF 106 [ D.26047 ])
        (float_extend:DF (reg:SF 105 [ D.26042 ]))) ge2fitman_preproc.cpp:389 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 105 [ D.26042 ])
        (nil)))
(insn 61 60 62 4 (set (reg:V2DF 361)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:389 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 62 61 63 4 (parallel [
            (set (reg:DF 107 [ D.26047 ])
                (neg:DF (reg:DF 106 [ D.26047 ])))
            (use (reg:V2DF 361))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:389 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 361)
        (expr_list:REG_DEAD (reg:DF 106 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:DF (reg:DF 106 [ D.26047 ]))
                    (nil))))))
(insn 63 62 64 4 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:390 89 {*movdi_internal}
     (nil))
(insn 64 63 65 4 (set (reg:SI 108 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 362)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:390 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 362)
        (nil)))
(insn 65 64 66 4 (parallel [
            (set (reg:SI 109 [ D.26043 ])
                (plus:SI (reg:SI 108 [ D.26043 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:390 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.26043 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 4 (parallel [
            (set (reg:SI 363)
                (lshiftrt:SI (reg:SI 109 [ D.26043 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:390 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 67 66 68 4 (parallel [
            (set (reg:SI 364)
                (plus:SI (reg:SI 363)
                    (reg:SI 109 [ D.26043 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:390 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 363)
        (expr_list:REG_DEAD (reg:SI 109 [ D.26043 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 68 67 69 4 (parallel [
            (set (reg:SI 365)
                (ashiftrt:SI (reg:SI 364)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:390 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 364)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (set (reg:SI 110 [ D.26043 ])
        (reg:SI 365)) ge2fitman_preproc.cpp:390 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 365)
        (nil)))
(insn 70 69 71 4 (set (reg:SF 111 [ D.26042 ])
        (float:SF (reg:SI 110 [ D.26043 ]))) ge2fitman_preproc.cpp:390 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 110 [ D.26043 ])
        (nil)))
(insn 71 70 72 4 (set (reg:SF 112 [ D.26042 ])
        (mult:SF (reg:SF 111 [ D.26042 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:390 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 111 [ D.26042 ])
        (nil)))
(insn 72 71 73 4 (set (reg:SF 113 [ D.26042 ])
        (plus:SF (reg:SF 112 [ D.26042 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:390 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 112 [ D.26042 ])
        (nil)))
(insn 73 72 74 4 (set (reg:V4SF 366)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:390 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 74 73 75 4 (parallel [
            (set (reg:SF 114 [ D.26042 ])
                (abs:SF (reg:SF 113 [ D.26042 ])))
            (use (reg:V4SF 366))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:390 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 366)
        (expr_list:REG_DEAD (reg:SF 113 [ D.26042 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 113 [ D.26042 ]))
                    (nil))))))
(insn 75 74 76 4 (set (reg:DF 115 [ D.26047 ])
        (float_extend:DF (reg:SF 114 [ D.26042 ]))) ge2fitman_preproc.cpp:390 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 114 [ D.26042 ])
        (nil)))
(insn 76 75 77 4 (set (reg:DF 367)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:390 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 77 76 78 4 (set (reg:DF 116 [ D.26047 ])
        (mult:DF (reg:DF 115 [ D.26047 ])
            (reg:DF 367))) ge2fitman_preproc.cpp:390 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 367)
        (expr_list:REG_DEAD (reg:DF 115 [ D.26047 ])
            (nil))))
(insn 78 77 79 4 (set (reg:DF 117 [ D.26047 ])
        (div:DF (reg:DF 107 [ D.26047 ])
            (reg:DF 116 [ D.26047 ]))) ge2fitman_preproc.cpp:389 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 116 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 107 [ D.26047 ])
            (nil))))
(insn 79 78 80 4 (set (reg:SF 118 [ D.26042 ])
        (float_truncate:SF (reg:DF 117 [ D.26047 ]))) ge2fitman_preproc.cpp:390 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 117 [ D.26047 ])
        (nil)))
(insn 80 79 81 4 (set (reg/f:DI 368)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:390 89 {*movdi_internal}
     (nil))
(insn 81 80 82 4 (set (mem/j:SF (plus:DI (reg/f:DI 368)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])
        (reg:SF 118 [ D.26042 ])) ge2fitman_preproc.cpp:390 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 368)
        (expr_list:REG_DEAD (reg:SF 118 [ D.26042 ])
            (nil))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 369
(code_label 82 81 83 5 85 "" [2 uses])
(note 83 82 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 5 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:393 89 {*movdi_internal}
     (nil))
(insn 85 84 86 5 (set (reg:SI 119 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 369)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:393 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 369)
        (nil)))
(insn 86 85 87 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:393 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 119 [ D.26043 ])
        (nil)))
(jump_insn 87 86 88 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) ge2fitman_preproc.cpp:393 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       6 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 121 370
(note 88 87 89 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 6 (set (reg/f:DI 370)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:393 89 {*movdi_internal}
     (nil))
(insn 90 89 91 6 (parallel [
            (set (reg/f:DI 120 [ D.26048 ])
                (plus:DI (reg/f:DI 370)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:393 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 370)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 91 90 92 6 (set (reg:SI 121 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 120 [ D.26048 ])
                (const_int 52 [0x34])) [0 _57->pre_quecc_if+0 S4 A32])) ge2fitman_preproc.cpp:393 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.26048 ])
        (nil)))
(insn 92 91 93 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 121 [ D.26043 ])
            (const_int 1 [0x1]))) ge2fitman_preproc.cpp:393 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 121 [ D.26043 ])
        (nil)))
(jump_insn 93 92 94 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) ge2fitman_preproc.cpp:393 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 142)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385
(note 94 93 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 7 (set (reg/f:DI 371)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:394 89 {*movdi_internal}
     (nil))
(insn 96 95 97 7 (set (reg:SI 122 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 371)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:394 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 371)
        (nil)))
(insn 97 96 98 7 (set (reg:DI 123 [ D.26044 ])
        (sign_extend:DI (reg:SI 122 [ D.26043 ]))) ge2fitman_preproc.cpp:394 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 122 [ D.26043 ])
        (nil)))
(insn 98 97 99 7 (parallel [
            (set (reg:DI 124 [ D.26044 ])
                (ashift:DI (reg:DI 123 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:394 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 123 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 7 (parallel [
            (set (reg:DI 125 [ D.26045 ])
                (plus:DI (reg:DI 124 [ D.26044 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:394 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 7 (set (reg/f:DI 372)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:394 89 {*movdi_internal}
     (nil))
(insn 101 100 102 7 (parallel [
            (set (reg/f:DI 126 [ D.26046 ])
                (plus:DI (reg:DI 125 [ D.26045 ])
                    (reg/f:DI 372)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:394 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 372)
        (expr_list:REG_DEAD (reg:DI 125 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 125 [ D.26045 ]))
                    (nil))))))
(insn 102 101 103 7 (set (reg:SF 373)
        (mem:SF (reg/f:DI 126 [ D.26046 ]) [0 *_63+0 S4 A32])) ge2fitman_preproc.cpp:394 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ D.26046 ])
        (nil)))
(insn 103 102 104 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32])
        (reg:SF 373)) ge2fitman_preproc.cpp:394 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 373)
        (nil)))
(insn 104 103 105 7 (set (reg/f:DI 374)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:395 89 {*movdi_internal}
     (nil))
(insn 105 104 106 7 (set (reg:SI 127 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 374)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:395 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 374)
        (nil)))
(insn 106 105 107 7 (set (reg:DI 128 [ D.26044 ])
        (sign_extend:DI (reg:SI 127 [ D.26043 ]))) ge2fitman_preproc.cpp:395 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 127 [ D.26043 ])
        (nil)))
(insn 107 106 108 7 (parallel [
            (set (reg:DI 129 [ D.26044 ])
                (ashift:DI (reg:DI 128 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:395 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 128 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 108 107 109 7 (set (reg/f:DI 375)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:395 89 {*movdi_internal}
     (nil))
(insn 109 108 110 7 (parallel [
            (set (reg/f:DI 130 [ D.26046 ])
                (plus:DI (reg:DI 129 [ D.26044 ])
                    (reg/f:DI 375)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:395 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 375)
        (expr_list:REG_DEAD (reg:DI 129 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 129 [ D.26044 ]))
                    (nil))))))
(insn 110 109 111 7 (set (reg:SF 376)
        (mem:SF (reg/f:DI 130 [ D.26046 ]) [0 *_68+0 S4 A32])) ge2fitman_preproc.cpp:395 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ D.26046 ])
        (nil)))
(insn 111 110 112 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])
        (reg:SF 376)) ge2fitman_preproc.cpp:395 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 376)
        (nil)))
(insn 112 111 113 7 (set (reg/f:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:397 89 {*movdi_internal}
     (nil))
(insn 113 112 114 7 (parallel [
            (set (reg/f:DI 131 [ D.26048 ])
                (plus:DI (reg/f:DI 377)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:397 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 377)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 114 113 115 7 (set (reg:SF 378)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 first_point_ecc_unsup+0 S4 A32])) ge2fitman_preproc.cpp:397 129 {*movsf_internal}
     (nil))
(insn 115 114 116 7 (set (reg:SF 132 [ D.26042 ])
        (div:SF (reg:SF 378)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [0 last_point_quality_unsup+0 S4 A32]))) ge2fitman_preproc.cpp:397 804 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 378)
        (nil)))
(insn 116 115 117 7 (set (reg:DF 133 [ D.26047 ])
        (float_extend:DF (reg:SF 132 [ D.26042 ]))) ge2fitman_preproc.cpp:397 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 132 [ D.26042 ])
        (nil)))
(insn 117 116 118 7 (set (reg:DF 21 xmm0)
        (reg:DF 133 [ D.26047 ])) ge2fitman_preproc.cpp:397 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 133 [ D.26047 ])
        (nil)))
(call_insn 118 117 119 7 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("log") [flags 0x41]  <function_decl 0x7fe357076d80 log>) [0 __builtin_log S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:397 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 119 118 120 7 (set (reg:DF 134 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:397 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 120 119 121 7 (set (reg:SF 135 [ D.26042 ])
        (float_truncate:SF (reg:DF 134 [ D.26047 ]))) ge2fitman_preproc.cpp:397 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.26047 ])
        (nil)))
(insn 121 120 122 7 (set (reg:DF 136 [ D.26047 ])
        (float_extend:DF (reg:SF 135 [ D.26042 ]))) ge2fitman_preproc.cpp:397 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 135 [ D.26042 ])
        (nil)))
(insn 122 121 123 7 (set (reg:V2DF 379)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:397 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 123 122 124 7 (parallel [
            (set (reg:DF 137 [ D.26047 ])
                (neg:DF (reg:DF 136 [ D.26047 ])))
            (use (reg:V2DF 379))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:397 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 379)
        (expr_list:REG_DEAD (reg:DF 136 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (neg:DF (reg:DF 136 [ D.26047 ]))
                    (nil))))))
(insn 124 123 125 7 (set (reg/f:DI 380)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:398 89 {*movdi_internal}
     (nil))
(insn 125 124 126 7 (set (reg:SI 138 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 380)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:398 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 380)
        (nil)))
(insn 126 125 127 7 (parallel [
            (set (reg:SI 139 [ D.26043 ])
                (plus:SI (reg:SI 138 [ D.26043 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:398 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ D.26043 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 7 (parallel [
            (set (reg:SI 381)
                (lshiftrt:SI (reg:SI 139 [ D.26043 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:398 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 128 127 129 7 (parallel [
            (set (reg:SI 382)
                (plus:SI (reg:SI 381)
                    (reg:SI 139 [ D.26043 ])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:398 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 381)
        (expr_list:REG_DEAD (reg:SI 139 [ D.26043 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 7 (parallel [
            (set (reg:SI 383)
                (ashiftrt:SI (reg:SI 382)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:398 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 382)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 7 (set (reg:SI 140 [ D.26043 ])
        (reg:SI 383)) ge2fitman_preproc.cpp:398 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 383)
        (nil)))
(insn 131 130 132 7 (set (reg:SF 141 [ D.26042 ])
        (float:SF (reg:SI 140 [ D.26043 ]))) ge2fitman_preproc.cpp:398 199 {*floatsisf2_sse}
     (expr_list:REG_DEAD (reg:SI 140 [ D.26043 ])
        (nil)))
(insn 132 131 133 7 (set (reg:SF 142 [ D.26042 ])
        (mult:SF (reg:SF 141 [ D.26042 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:398 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 141 [ D.26042 ])
        (nil)))
(insn 133 132 134 7 (set (reg:SF 143 [ D.26042 ])
        (plus:SF (reg:SF 142 [ D.26042 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:398 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 142 [ D.26042 ])
        (nil)))
(insn 134 133 135 7 (set (reg:V4SF 384)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:398 1205 {*movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 135 134 136 7 (parallel [
            (set (reg:SF 144 [ D.26042 ])
                (abs:SF (reg:SF 143 [ D.26042 ])))
            (use (reg:V4SF 384))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:398 469 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:V4SF 384)
        (expr_list:REG_DEAD (reg:SF 143 [ D.26042 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 143 [ D.26042 ]))
                    (nil))))))
(insn 136 135 137 7 (set (reg:DF 145 [ D.26047 ])
        (float_extend:DF (reg:SF 144 [ D.26042 ]))) ge2fitman_preproc.cpp:398 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 144 [ D.26042 ])
        (nil)))
(insn 137 136 138 7 (set (reg:DF 385)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:398 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 3.141592653589793115997963468544185161590576171875e+0 [0x0.c90fdaa22168cp+2])
        (nil)))
(insn 138 137 139 7 (set (reg:DF 146 [ D.26047 ])
        (mult:DF (reg:DF 145 [ D.26047 ])
            (reg:DF 385))) ge2fitman_preproc.cpp:398 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 385)
        (expr_list:REG_DEAD (reg:DF 145 [ D.26047 ])
            (nil))))
(insn 139 138 140 7 (set (reg:DF 147 [ D.26047 ])
        (div:DF (reg:DF 137 [ D.26047 ])
            (reg:DF 146 [ D.26047 ]))) ge2fitman_preproc.cpp:397 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 146 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 137 [ D.26047 ])
            (nil))))
(insn 140 139 141 7 (set (reg:SF 148 [ D.26042 ])
        (float_truncate:SF (reg:DF 147 [ D.26047 ]))) ge2fitman_preproc.cpp:398 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.26047 ])
        (nil)))
(insn 141 140 142 7 (set (mem/j:SF (plus:DI (reg/f:DI 131 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _70->comp_filter+0 S4 A32])
        (reg:SF 148 [ D.26042 ])) ge2fitman_preproc.cpp:398 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 148 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 131 [ D.26048 ])
            (nil))))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 149 386 387
(code_label 142 141 143 8 86 "" [2 uses])
(note 143 142 144 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 8 (set (reg/f:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:403 89 {*movdi_internal}
     (nil))
(insn 145 144 146 8 (set (reg:SF 149 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 386)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:403 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 386)
        (nil)))
(insn 146 145 147 8 (set (reg:SF 387)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:403 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 147 146 148 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 149 [ D.26042 ])
            (reg:SF 387))) ge2fitman_preproc.cpp:403 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 387)
        (nil)))
(jump_insn 148 147 541 8 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 547)
            (pc))) ge2fitman_preproc.cpp:403 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 547)
;;  succ:       10
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149
;; lr  def 	 17 [flags] 388
(note 541 148 149 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 149 541 150 9 (set (reg:SF 388)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:403 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 150 149 151 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 149 [ D.26042 ])
            (reg:SF 388))) ge2fitman_preproc.cpp:403 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 388)
        (expr_list:REG_DEAD (reg:SF 149 [ D.26042 ])
            (nil))))
(jump_insn 151 150 547 9 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 333)
            (pc))) ge2fitman_preproc.cpp:403 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 333)
;;  succ:       10 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 547 151 155 10 98 "" [1 uses])
(note 155 547 156 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 330 10 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:405 90 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              17 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 151 389
(code_label 330 156 157 11 91 "" [1 uses])
(note 157 330 158 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 11 (set (reg/f:DI 389)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:405 89 {*movdi_internal}
     (nil))
(insn 159 158 160 11 (set (reg:SI 150 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 389)
                (const_int 324 [0x144])) [0 procpar_info_15(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:405 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 389)
        (nil)))
(insn 160 159 161 11 (parallel [
            (set (reg:SI 151 [ D.26043 ])
                (ashift:SI (reg:SI 150 [ D.26043 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:405 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 150 [ D.26043 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 151 [ D.26043 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:405 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.26043 ])
        (nil)))
(jump_insn 162 161 163 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) ge2fitman_preproc.cpp:405 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 333)
;;  succ:       18
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 152 390
(note 163 162 164 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 12 (set (reg/f:DI 390)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:406 89 {*movdi_internal}
     (nil))
(insn 165 164 166 12 (set (reg:SI 152 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 390)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:406 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 390)
        (nil)))
(insn 166 165 167 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:406 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 152 [ D.26043 ])
        (nil)))
(jump_insn 167 166 168 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) ge2fitman_preproc.cpp:406 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 248)
;;  succ:       13 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 153 391
(note 168 167 169 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 13 (set (reg/f:DI 391)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:406 89 {*movdi_internal}
     (nil))
(insn 170 169 171 13 (set (reg:SI 153 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 391)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:406 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 391)
        (nil)))
(insn 171 170 172 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 153 [ D.26043 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:406 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 153 [ D.26043 ])
        (nil)))
(jump_insn 172 171 173 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) ge2fitman_preproc.cpp:406 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 248)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413
(note 173 172 174 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 14 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:407 90 {*movsi_internal}
     (nil))
(insn 175 174 176 14 (set (reg:DI 154 [ D.26044 ])
        (sign_extend:DI (reg:SI 392))) ge2fitman_preproc.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 392)
        (nil)))
(insn 176 175 177 14 (parallel [
            (set (reg:DI 155 [ D.26044 ])
                (ashift:DI (reg:DI 154 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 14 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:407 89 {*movdi_internal}
     (nil))
(insn 178 177 179 14 (parallel [
            (set (reg/f:DI 156 [ D.26046 ])
                (plus:DI (reg:DI 155 [ D.26044 ])
                    (reg/f:DI 393)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 393)
        (expr_list:REG_DEAD (reg:DI 155 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 155 [ D.26044 ]))
                    (nil))))))
(insn 179 178 180 14 (set (reg:SI 394)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:407 90 {*movsi_internal}
     (nil))
(insn 180 179 181 14 (set (reg:DI 157 [ D.26044 ])
        (sign_extend:DI (reg:SI 394))) ge2fitman_preproc.cpp:407 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 394)
        (nil)))
(insn 181 180 182 14 (parallel [
            (set (reg:DI 158 [ D.26044 ])
                (ashift:DI (reg:DI 157 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 157 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 182 181 183 14 (set (reg/f:DI 395)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:407 89 {*movdi_internal}
     (nil))
(insn 183 182 184 14 (parallel [
            (set (reg/f:DI 159 [ D.26046 ])
                (plus:DI (reg:DI 158 [ D.26044 ])
                    (reg/f:DI 395)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (expr_list:REG_DEAD (reg:DI 158 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 158 [ D.26044 ]))
                    (nil))))))
(insn 184 183 185 14 (set (reg:SF 160 [ D.26042 ])
        (mem:SF (reg/f:DI 159 [ D.26046 ]) [0 *_102+0 S4 A32])) ge2fitman_preproc.cpp:407 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.26046 ])
        (nil)))
(insn 185 184 186 14 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:407 90 {*movsi_internal}
     (nil))
(insn 186 185 187 14 (parallel [
            (set (reg:SI 397)
                (lshiftrt:SI (reg:SI 396)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 14 (parallel [
            (set (reg:SI 398)
                (plus:SI (reg:SI 397)
                    (reg:SI 396)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 397)
        (expr_list:REG_DEAD (reg:SI 396)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 188 187 189 14 (parallel [
            (set (reg:SI 399)
                (ashiftrt:SI (reg:SI 398)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 398)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 14 (set (reg:SI 161 [ D.26043 ])
        (reg:SI 399)) ge2fitman_preproc.cpp:407 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 399)
        (nil)))
(insn 190 189 191 14 (set (reg:DF 162 [ D.26047 ])
        (float:DF (reg:SI 161 [ D.26043 ]))) ge2fitman_preproc.cpp:407 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 161 [ D.26043 ])
        (nil)))
(insn 191 190 192 14 (set (reg:DF 163 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:407 152 {*extendsfdf2_sse}
     (nil))
(insn 192 191 193 14 (set (reg:DF 164 [ D.26047 ])
        (mult:DF (reg:DF 162 [ D.26047 ])
            (reg:DF 163 [ D.26047 ]))) ge2fitman_preproc.cpp:407 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 163 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 162 [ D.26047 ])
            (nil))))
(insn 193 192 194 14 (set (reg:DF 165 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:407 152 {*extendsfdf2_sse}
     (nil))
(insn 194 193 195 14 (set (reg:DF 166 [ D.26047 ])
        (plus:DF (reg:DF 164 [ D.26047 ])
            (reg:DF 165 [ D.26047 ]))) ge2fitman_preproc.cpp:407 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 165 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 164 [ D.26047 ])
            (nil))))
(insn 195 194 196 14 (set (reg:V2DF 400)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:407 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 196 195 197 14 (parallel [
            (set (reg:DF 167 [ D.26047 ])
                (abs:DF (reg:DF 166 [ D.26047 ])))
            (use (reg:V2DF 400))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:407 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 400)
        (expr_list:REG_DEAD (reg:DF 166 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 166 [ D.26047 ]))
                    (nil))))))
(insn 197 196 198 14 (set (reg:DF 401)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:407 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 198 197 199 14 (set (reg:DF 168 [ D.26047 ])
        (mult:DF (reg:DF 167 [ D.26047 ])
            (reg:DF 401))) ge2fitman_preproc.cpp:407 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 401)
        (expr_list:REG_DEAD (reg:DF 167 [ D.26047 ])
            (nil))))
(insn 199 198 200 14 (set (reg/f:DI 402)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:407 89 {*movdi_internal}
     (nil))
(insn 200 199 201 14 (set (reg:SF 169 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 402)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:407 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 402)
        (nil)))
(insn 201 200 202 14 (set (reg:DF 170 [ D.26047 ])
        (float_extend:DF (reg:SF 169 [ D.26042 ]))) ge2fitman_preproc.cpp:407 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 169 [ D.26042 ])
        (nil)))
(insn 202 201 203 14 (set (reg:DF 171 [ D.26047 ])
        (mult:DF (reg:DF 168 [ D.26047 ])
            (reg:DF 170 [ D.26047 ]))) ge2fitman_preproc.cpp:407 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 170 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 168 [ D.26047 ])
            (nil))))
(insn 203 202 204 14 (set (reg:DF 21 xmm0)
        (reg:DF 171 [ D.26047 ])) ge2fitman_preproc.cpp:407 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 171 [ D.26047 ])
        (nil)))
(call_insn 204 203 205 14 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:407 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 205 204 206 14 (set (reg:DF 172 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:407 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 206 205 207 14 (set (reg:SF 173 [ D.26042 ])
        (float_truncate:SF (reg:DF 172 [ D.26047 ]))) ge2fitman_preproc.cpp:407 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 172 [ D.26047 ])
        (nil)))
(insn 207 206 208 14 (set (reg:SF 174 [ D.26042 ])
        (mult:SF (reg:SF 160 [ D.26042 ])
            (reg:SF 173 [ D.26042 ]))) ge2fitman_preproc.cpp:407 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 173 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 160 [ D.26042 ])
            (nil))))
(insn 208 207 209 14 (set (mem:SF (reg/f:DI 156 [ D.26046 ]) [0 *_99+0 S4 A32])
        (reg:SF 174 [ D.26042 ])) ge2fitman_preproc.cpp:407 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 174 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 156 [ D.26046 ])
            (nil))))
(insn 209 208 210 14 (set (reg:SI 403)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:408 90 {*movsi_internal}
     (nil))
(insn 210 209 211 14 (set (reg:DI 175 [ D.26045 ])
        (sign_extend:DI (reg:SI 403))) ge2fitman_preproc.cpp:408 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 403)
        (nil)))
(insn 211 210 212 14 (parallel [
            (set (reg:DI 176 [ D.26045 ])
                (plus:DI (reg:DI 175 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 175 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 212 211 213 14 (parallel [
            (set (reg:DI 177 [ D.26045 ])
                (ashift:DI (reg:DI 176 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 176 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 213 212 214 14 (set (reg/f:DI 404)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:408 89 {*movdi_internal}
     (nil))
(insn 214 213 215 14 (parallel [
            (set (reg/f:DI 178 [ D.26046 ])
                (plus:DI (reg:DI 177 [ D.26045 ])
                    (reg/f:DI 404)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 404)
        (expr_list:REG_DEAD (reg:DI 177 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 177 [ D.26045 ]))
                    (nil))))))
(insn 215 214 216 14 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:408 90 {*movsi_internal}
     (nil))
(insn 216 215 217 14 (set (reg:DI 179 [ D.26045 ])
        (sign_extend:DI (reg:SI 405))) ge2fitman_preproc.cpp:408 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 405)
        (nil)))
(insn 217 216 218 14 (parallel [
            (set (reg:DI 180 [ D.26045 ])
                (plus:DI (reg:DI 179 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 14 (parallel [
            (set (reg:DI 181 [ D.26045 ])
                (ashift:DI (reg:DI 180 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 14 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:408 89 {*movdi_internal}
     (nil))
(insn 220 219 221 14 (parallel [
            (set (reg/f:DI 182 [ D.26046 ])
                (plus:DI (reg:DI 181 [ D.26045 ])
                    (reg/f:DI 406)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 406)
        (expr_list:REG_DEAD (reg:DI 181 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 181 [ D.26045 ]))
                    (nil))))))
(insn 221 220 222 14 (set (reg:SF 183 [ D.26042 ])
        (mem:SF (reg/f:DI 182 [ D.26046 ]) [0 *_127+0 S4 A32])) ge2fitman_preproc.cpp:408 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.26046 ])
        (nil)))
(insn 222 221 223 14 (set (reg:SI 407)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:408 90 {*movsi_internal}
     (nil))
(insn 223 222 224 14 (parallel [
            (set (reg:SI 408)
                (lshiftrt:SI (reg:SI 407)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 223 225 14 (parallel [
            (set (reg:SI 409)
                (plus:SI (reg:SI 408)
                    (reg:SI 407)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 408)
        (expr_list:REG_DEAD (reg:SI 407)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 225 224 226 14 (parallel [
            (set (reg:SI 410)
                (ashiftrt:SI (reg:SI 409)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 409)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 226 225 227 14 (set (reg:SI 184 [ D.26043 ])
        (reg:SI 410)) ge2fitman_preproc.cpp:408 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 410)
        (nil)))
(insn 227 226 228 14 (set (reg:DF 185 [ D.26047 ])
        (float:DF (reg:SI 184 [ D.26043 ]))) ge2fitman_preproc.cpp:408 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 184 [ D.26043 ])
        (nil)))
(insn 228 227 229 14 (set (reg:DF 186 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:408 152 {*extendsfdf2_sse}
     (nil))
(insn 229 228 230 14 (set (reg:DF 187 [ D.26047 ])
        (mult:DF (reg:DF 185 [ D.26047 ])
            (reg:DF 186 [ D.26047 ]))) ge2fitman_preproc.cpp:408 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 186 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 185 [ D.26047 ])
            (nil))))
(insn 230 229 231 14 (set (reg:DF 188 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:408 152 {*extendsfdf2_sse}
     (nil))
(insn 231 230 232 14 (set (reg:DF 189 [ D.26047 ])
        (plus:DF (reg:DF 187 [ D.26047 ])
            (reg:DF 188 [ D.26047 ]))) ge2fitman_preproc.cpp:408 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 188 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 187 [ D.26047 ])
            (nil))))
(insn 232 231 233 14 (set (reg:V2DF 411)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:408 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 233 232 234 14 (parallel [
            (set (reg:DF 190 [ D.26047 ])
                (abs:DF (reg:DF 189 [ D.26047 ])))
            (use (reg:V2DF 411))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:408 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 411)
        (expr_list:REG_DEAD (reg:DF 189 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 189 [ D.26047 ]))
                    (nil))))))
(insn 234 233 235 14 (set (reg:DF 412)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:408 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 235 234 236 14 (set (reg:DF 191 [ D.26047 ])
        (mult:DF (reg:DF 190 [ D.26047 ])
            (reg:DF 412))) ge2fitman_preproc.cpp:408 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 412)
        (expr_list:REG_DEAD (reg:DF 190 [ D.26047 ])
            (nil))))
(insn 236 235 237 14 (set (reg/f:DI 413)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:408 89 {*movdi_internal}
     (nil))
(insn 237 236 238 14 (set (reg:SF 192 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 413)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:408 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 413)
        (nil)))
(insn 238 237 239 14 (set (reg:DF 193 [ D.26047 ])
        (float_extend:DF (reg:SF 192 [ D.26042 ]))) ge2fitman_preproc.cpp:408 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 192 [ D.26042 ])
        (nil)))
(insn 239 238 240 14 (set (reg:DF 194 [ D.26047 ])
        (mult:DF (reg:DF 191 [ D.26047 ])
            (reg:DF 193 [ D.26047 ]))) ge2fitman_preproc.cpp:408 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 193 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 191 [ D.26047 ])
            (nil))))
(insn 240 239 241 14 (set (reg:DF 21 xmm0)
        (reg:DF 194 [ D.26047 ])) ge2fitman_preproc.cpp:408 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 194 [ D.26047 ])
        (nil)))
(call_insn 241 240 242 14 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:408 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 242 241 243 14 (set (reg:DF 195 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:408 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 243 242 244 14 (set (reg:SF 196 [ D.26042 ])
        (float_truncate:SF (reg:DF 195 [ D.26047 ]))) ge2fitman_preproc.cpp:408 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 195 [ D.26047 ])
        (nil)))
(insn 244 243 245 14 (set (reg:SF 197 [ D.26042 ])
        (mult:SF (reg:SF 183 [ D.26042 ])
            (reg:SF 196 [ D.26042 ]))) ge2fitman_preproc.cpp:408 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 196 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 183 [ D.26042 ])
            (nil))))
(insn 245 244 549 14 (set (mem:SF (reg/f:DI 178 [ D.26046 ]) [0 *_123+0 S4 A32])
        (reg:SF 197 [ D.26042 ])) ge2fitman_preproc.cpp:408 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 197 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 178 [ D.26046 ])
            (nil))))
(jump_insn 549 245 550 14 (set (pc)
        (label_ref 327)) ge2fitman_preproc.cpp:408 654 {jump}
     (nil)
 -> 327)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 550 549 248)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 198 414
(code_label 248 550 249 15 89 "" [2 uses])
(note 249 248 250 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 15 (set (reg/f:DI 414)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:409 89 {*movdi_internal}
     (nil))
(insn 251 250 252 15 (set (reg:SI 198 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 414)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:409 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 414)
        (nil)))
(insn 252 251 253 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:409 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 198 [ D.26043 ])
        (nil)))
(jump_insn 253 252 254 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) ge2fitman_preproc.cpp:409 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 327)
;;  succ:       16 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436
(note 254 253 255 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 16 (set (reg:SI 415)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:410 90 {*movsi_internal}
     (nil))
(insn 256 255 257 16 (set (reg:DI 199 [ D.26044 ])
        (sign_extend:DI (reg:SI 415))) ge2fitman_preproc.cpp:410 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 415)
        (nil)))
(insn 257 256 258 16 (parallel [
            (set (reg:DI 200 [ D.26044 ])
                (ashift:DI (reg:DI 199 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 199 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 258 257 259 16 (set (reg/f:DI 416)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:410 89 {*movdi_internal}
     (nil))
(insn 259 258 260 16 (parallel [
            (set (reg/f:DI 201 [ D.26046 ])
                (plus:DI (reg:DI 200 [ D.26044 ])
                    (reg/f:DI 416)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 416)
        (expr_list:REG_DEAD (reg:DI 200 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 200 [ D.26044 ]))
                    (nil))))))
(insn 260 259 261 16 (set (reg:SI 417)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:410 90 {*movsi_internal}
     (nil))
(insn 261 260 262 16 (set (reg:DI 202 [ D.26044 ])
        (sign_extend:DI (reg:SI 417))) ge2fitman_preproc.cpp:410 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 417)
        (nil)))
(insn 262 261 263 16 (parallel [
            (set (reg:DI 203 [ D.26044 ])
                (ashift:DI (reg:DI 202 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 202 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 263 262 264 16 (set (reg/f:DI 418)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:410 89 {*movdi_internal}
     (nil))
(insn 264 263 265 16 (parallel [
            (set (reg/f:DI 204 [ D.26046 ])
                (plus:DI (reg:DI 203 [ D.26044 ])
                    (reg/f:DI 418)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 418)
        (expr_list:REG_DEAD (reg:DI 203 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 203 [ D.26044 ]))
                    (nil))))))
(insn 265 264 266 16 (set (reg:SF 205 [ D.26042 ])
        (mem:SF (reg/f:DI 204 [ D.26046 ]) [0 *_151+0 S4 A32])) ge2fitman_preproc.cpp:410 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 204 [ D.26046 ])
        (nil)))
(insn 266 265 267 16 (set (reg:SI 419)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:410 90 {*movsi_internal}
     (nil))
(insn 267 266 268 16 (parallel [
            (set (reg:SI 420)
                (lshiftrt:SI (reg:SI 419)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 268 267 269 16 (parallel [
            (set (reg:SI 421)
                (plus:SI (reg:SI 420)
                    (reg:SI 419)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 420)
        (expr_list:REG_DEAD (reg:SI 419)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 269 268 270 16 (parallel [
            (set (reg:SI 422)
                (ashiftrt:SI (reg:SI 421)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 421)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 270 269 271 16 (set (reg:SI 206 [ D.26043 ])
        (reg:SI 422)) ge2fitman_preproc.cpp:410 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 422)
        (nil)))
(insn 271 270 272 16 (set (reg:DF 207 [ D.26047 ])
        (float:DF (reg:SI 206 [ D.26043 ]))) ge2fitman_preproc.cpp:410 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 206 [ D.26043 ])
        (nil)))
(insn 272 271 273 16 (set (reg:DF 208 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:410 152 {*extendsfdf2_sse}
     (nil))
(insn 273 272 274 16 (set (reg:DF 209 [ D.26047 ])
        (mult:DF (reg:DF 207 [ D.26047 ])
            (reg:DF 208 [ D.26047 ]))) ge2fitman_preproc.cpp:410 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 208 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 207 [ D.26047 ])
            (nil))))
(insn 274 273 275 16 (set (reg:DF 210 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:410 152 {*extendsfdf2_sse}
     (nil))
(insn 275 274 276 16 (set (reg:DF 211 [ D.26047 ])
        (plus:DF (reg:DF 209 [ D.26047 ])
            (reg:DF 210 [ D.26047 ]))) ge2fitman_preproc.cpp:410 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 210 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 209 [ D.26047 ])
            (nil))))
(insn 276 275 277 16 (set (reg:V2DF 423)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:410 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 277 276 278 16 (parallel [
            (set (reg:DF 212 [ D.26047 ])
                (abs:DF (reg:DF 211 [ D.26047 ])))
            (use (reg:V2DF 423))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:410 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 423)
        (expr_list:REG_DEAD (reg:DF 211 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 211 [ D.26047 ]))
                    (nil))))))
(insn 278 277 279 16 (set (reg:DF 424)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:410 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 279 278 280 16 (set (reg:DF 213 [ D.26047 ])
        (mult:DF (reg:DF 212 [ D.26047 ])
            (reg:DF 424))) ge2fitman_preproc.cpp:410 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 424)
        (expr_list:REG_DEAD (reg:DF 212 [ D.26047 ])
            (nil))))
(insn 280 279 281 16 (set (reg/f:DI 425)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:410 89 {*movdi_internal}
     (nil))
(insn 281 280 282 16 (set (reg:SF 214 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 425)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:410 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 425)
        (nil)))
(insn 282 281 283 16 (set (reg:DF 215 [ D.26047 ])
        (float_extend:DF (reg:SF 214 [ D.26042 ]))) ge2fitman_preproc.cpp:410 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 214 [ D.26042 ])
        (nil)))
(insn 283 282 284 16 (set (reg:DF 216 [ D.26047 ])
        (mult:DF (reg:DF 213 [ D.26047 ])
            (reg:DF 215 [ D.26047 ]))) ge2fitman_preproc.cpp:410 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 215 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 213 [ D.26047 ])
            (nil))))
(insn 284 283 285 16 (set (reg:DF 21 xmm0)
        (reg:DF 216 [ D.26047 ])) ge2fitman_preproc.cpp:410 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 216 [ D.26047 ])
        (nil)))
(call_insn 285 284 286 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:410 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 286 285 287 16 (set (reg:DF 217 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:410 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 287 286 288 16 (set (reg:SF 218 [ D.26042 ])
        (float_truncate:SF (reg:DF 217 [ D.26047 ]))) ge2fitman_preproc.cpp:410 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 217 [ D.26047 ])
        (nil)))
(insn 288 287 289 16 (set (reg:SF 219 [ D.26042 ])
        (mult:SF (reg:SF 205 [ D.26042 ])
            (reg:SF 218 [ D.26042 ]))) ge2fitman_preproc.cpp:410 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 218 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 205 [ D.26042 ])
            (nil))))
(insn 289 288 290 16 (set (mem:SF (reg/f:DI 201 [ D.26046 ]) [0 *_148+0 S4 A32])
        (reg:SF 219 [ D.26042 ])) ge2fitman_preproc.cpp:410 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 219 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 201 [ D.26046 ])
            (nil))))
(insn 290 289 291 16 (set (reg:SI 426)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:411 90 {*movsi_internal}
     (nil))
(insn 291 290 292 16 (set (reg:DI 220 [ D.26045 ])
        (sign_extend:DI (reg:SI 426))) ge2fitman_preproc.cpp:411 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 426)
        (nil)))
(insn 292 291 293 16 (parallel [
            (set (reg:DI 221 [ D.26045 ])
                (plus:DI (reg:DI 220 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 293 292 294 16 (parallel [
            (set (reg:DI 222 [ D.26045 ])
                (ashift:DI (reg:DI 221 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 221 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 294 293 295 16 (set (reg/f:DI 427)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:411 89 {*movdi_internal}
     (nil))
(insn 295 294 296 16 (parallel [
            (set (reg/f:DI 223 [ D.26046 ])
                (plus:DI (reg:DI 222 [ D.26045 ])
                    (reg/f:DI 427)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 427)
        (expr_list:REG_DEAD (reg:DI 222 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 222 [ D.26045 ]))
                    (nil))))))
(insn 296 295 297 16 (set (reg:SI 428)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:411 90 {*movsi_internal}
     (nil))
(insn 297 296 298 16 (set (reg:DI 224 [ D.26045 ])
        (sign_extend:DI (reg:SI 428))) ge2fitman_preproc.cpp:411 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 428)
        (nil)))
(insn 298 297 299 16 (parallel [
            (set (reg:DI 225 [ D.26045 ])
                (plus:DI (reg:DI 224 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 224 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 299 298 300 16 (parallel [
            (set (reg:DI 226 [ D.26045 ])
                (ashift:DI (reg:DI 225 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 225 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 300 299 301 16 (set (reg/f:DI 429)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:411 89 {*movdi_internal}
     (nil))
(insn 301 300 302 16 (parallel [
            (set (reg/f:DI 227 [ D.26046 ])
                (plus:DI (reg:DI 226 [ D.26045 ])
                    (reg/f:DI 429)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 429)
        (expr_list:REG_DEAD (reg:DI 226 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -40 [0xffffffffffffffd8])) [0 sup_data+0 S8 A64])
                        (reg:DI 226 [ D.26045 ]))
                    (nil))))))
(insn 302 301 303 16 (set (reg:SF 228 [ D.26042 ])
        (mem:SF (reg/f:DI 227 [ D.26046 ]) [0 *_176+0 S4 A32])) ge2fitman_preproc.cpp:411 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 227 [ D.26046 ])
        (nil)))
(insn 303 302 304 16 (set (reg:SI 430)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:411 90 {*movsi_internal}
     (nil))
(insn 304 303 305 16 (parallel [
            (set (reg:SI 431)
                (lshiftrt:SI (reg:SI 430)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 305 304 306 16 (parallel [
            (set (reg:SI 432)
                (plus:SI (reg:SI 431)
                    (reg:SI 430)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 431)
        (expr_list:REG_DEAD (reg:SI 430)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 306 305 307 16 (parallel [
            (set (reg:SI 433)
                (ashiftrt:SI (reg:SI 432)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 432)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 307 306 308 16 (set (reg:SI 229 [ D.26043 ])
        (reg:SI 433)) ge2fitman_preproc.cpp:411 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 433)
        (nil)))
(insn 308 307 309 16 (set (reg:DF 230 [ D.26047 ])
        (float:DF (reg:SI 229 [ D.26043 ]))) ge2fitman_preproc.cpp:411 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 229 [ D.26043 ])
        (nil)))
(insn 309 308 310 16 (set (reg:DF 231 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:411 152 {*extendsfdf2_sse}
     (nil))
(insn 310 309 311 16 (set (reg:DF 232 [ D.26047 ])
        (mult:DF (reg:DF 230 [ D.26047 ])
            (reg:DF 231 [ D.26047 ]))) ge2fitman_preproc.cpp:411 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 231 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 230 [ D.26047 ])
            (nil))))
(insn 311 310 312 16 (set (reg:DF 233 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:411 152 {*extendsfdf2_sse}
     (nil))
(insn 312 311 313 16 (set (reg:DF 234 [ D.26047 ])
        (plus:DF (reg:DF 232 [ D.26047 ])
            (reg:DF 233 [ D.26047 ]))) ge2fitman_preproc.cpp:411 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 233 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 232 [ D.26047 ])
            (nil))))
(insn 313 312 314 16 (set (reg:V2DF 434)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:411 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 314 313 315 16 (parallel [
            (set (reg:DF 235 [ D.26047 ])
                (abs:DF (reg:DF 234 [ D.26047 ])))
            (use (reg:V2DF 434))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:411 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 434)
        (expr_list:REG_DEAD (reg:DF 234 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 234 [ D.26047 ]))
                    (nil))))))
(insn 315 314 316 16 (set (reg:DF 435)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:411 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 316 315 317 16 (set (reg:DF 236 [ D.26047 ])
        (mult:DF (reg:DF 235 [ D.26047 ])
            (reg:DF 435))) ge2fitman_preproc.cpp:411 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 435)
        (expr_list:REG_DEAD (reg:DF 235 [ D.26047 ])
            (nil))))
(insn 317 316 318 16 (set (reg/f:DI 436)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:411 89 {*movdi_internal}
     (nil))
(insn 318 317 319 16 (set (reg:SF 237 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 436)
                (const_int 28 [0x1c])) [0 preprocess_20(D)->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:411 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 436)
        (nil)))
(insn 319 318 320 16 (set (reg:DF 238 [ D.26047 ])
        (float_extend:DF (reg:SF 237 [ D.26042 ]))) ge2fitman_preproc.cpp:411 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 237 [ D.26042 ])
        (nil)))
(insn 320 319 321 16 (set (reg:DF 239 [ D.26047 ])
        (mult:DF (reg:DF 236 [ D.26047 ])
            (reg:DF 238 [ D.26047 ]))) ge2fitman_preproc.cpp:411 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 238 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 236 [ D.26047 ])
            (nil))))
(insn 321 320 322 16 (set (reg:DF 21 xmm0)
        (reg:DF 239 [ D.26047 ])) ge2fitman_preproc.cpp:411 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 239 [ D.26047 ])
        (nil)))
(call_insn 322 321 323 16 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:411 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 323 322 324 16 (set (reg:DF 240 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:411 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 324 323 325 16 (set (reg:SF 241 [ D.26042 ])
        (float_truncate:SF (reg:DF 240 [ D.26047 ]))) ge2fitman_preproc.cpp:411 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 240 [ D.26047 ])
        (nil)))
(insn 325 324 326 16 (set (reg:SF 242 [ D.26042 ])
        (mult:SF (reg:SF 228 [ D.26042 ])
            (reg:SF 241 [ D.26042 ]))) ge2fitman_preproc.cpp:411 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 241 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 228 [ D.26042 ])
            (nil))))
(insn 326 325 327 16 (set (mem:SF (reg/f:DI 223 [ D.26046 ]) [0 *_172+0 S4 A32])
        (reg:SF 242 [ D.26042 ])) ge2fitman_preproc.cpp:411 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 242 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 223 [ D.26046 ])
            (nil))))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              15
;;              14 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 327 326 328 17 90 "" [2 uses])
(note 328 327 329 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 551 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:405 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 551 329 552 17 (set (pc)
        (label_ref 330)) ge2fitman_preproc.cpp:405 654 {jump}
     (nil)
 -> 330)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 552 551 333)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              9
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 243 244 437 438
(code_label 333 552 334 18 87 "" [2 uses])
(note 334 333 335 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 18 (set (reg/f:DI 437)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:417 89 {*movdi_internal}
     (nil))
(insn 336 335 337 18 (parallel [
            (set (reg/f:DI 243 [ D.26048 ])
                (plus:DI (reg/f:DI 437)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:417 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 437)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 337 336 338 18 (set (reg:SF 244 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 243 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _195->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:417 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 243 [ D.26048 ])
        (nil)))
(insn 338 337 339 18 (set (reg:SF 438)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:417 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 339 338 340 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 244 [ D.26042 ])
            (reg:SF 438))) ge2fitman_preproc.cpp:417 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 438)
        (nil)))
(jump_insn 340 339 544 18 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 548)
            (pc))) ge2fitman_preproc.cpp:417 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 548)
;;  succ:       20
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244
;; lr  def 	 17 [flags] 439
(note 544 340 341 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 341 544 342 19 (set (reg:SF 439)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) ge2fitman_preproc.cpp:417 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 342 341 343 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 244 [ D.26042 ])
            (reg:SF 439))) ge2fitman_preproc.cpp:417 55 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 439)
        (expr_list:REG_DEAD (reg:SF 244 [ D.26042 ])
            (nil))))
(jump_insn 343 342 548 19 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 529)
            (pc))) ge2fitman_preproc.cpp:417 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 529)
;;  succ:       20 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              18
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 548 343 347 20 99 "" [1 uses])
(note 347 548 348 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 526 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:419 90 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              27 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 245 246 440
(code_label 526 348 349 21 96 "" [1 uses])
(note 349 526 350 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 21 (set (reg/f:DI 440)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:419 89 {*movdi_internal}
     (nil))
(insn 351 350 352 21 (set (reg:SI 245 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 440)
                (const_int 324 [0x144])) [0 procpar_info_15(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:419 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 440)
        (nil)))
(insn 352 351 353 21 (parallel [
            (set (reg:SI 246 [ D.26043 ])
                (ashift:SI (reg:SI 245 [ D.26043 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:419 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 245 [ D.26043 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 353 352 354 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 246 [ D.26043 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:419 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 246 [ D.26043 ])
        (nil)))
(jump_insn 354 353 355 21 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 529)
            (pc))) ge2fitman_preproc.cpp:419 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 529)
;;  succ:       28
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 247 441
(note 355 354 356 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 22 (set (reg/f:DI 441)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:420 89 {*movdi_internal}
     (nil))
(insn 357 356 358 22 (set (reg:SI 247 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 441)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:420 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 441)
        (nil)))
(insn 358 357 359 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 247 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:420 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 247 [ D.26043 ])
        (nil)))
(jump_insn 359 358 360 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 442)
            (pc))) ge2fitman_preproc.cpp:420 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 442)
;;  succ:       23 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 248 442
(note 360 359 361 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 23 (set (reg/f:DI 442)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:420 89 {*movdi_internal}
     (nil))
(insn 362 361 363 23 (set (reg:SI 248 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 442)
                (const_int 44 [0x2c])) [0 preprocess_20(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:420 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 442)
        (nil)))
(insn 363 362 364 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 248 [ D.26043 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:420 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 248 [ D.26043 ])
        (nil)))
(jump_insn 364 363 365 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 442)
            (pc))) ge2fitman_preproc.cpp:420 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 442)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464
(note 365 364 366 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 24 (set (reg:SI 443)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:421 90 {*movsi_internal}
     (nil))
(insn 367 366 368 24 (set (reg:DI 249 [ D.26044 ])
        (sign_extend:DI (reg:SI 443))) ge2fitman_preproc.cpp:421 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 443)
        (nil)))
(insn 368 367 369 24 (parallel [
            (set (reg:DI 250 [ D.26044 ])
                (ashift:DI (reg:DI 249 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 249 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 369 368 370 24 (set (reg/f:DI 444)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:421 89 {*movdi_internal}
     (nil))
(insn 370 369 371 24 (parallel [
            (set (reg/f:DI 251 [ D.26046 ])
                (plus:DI (reg:DI 250 [ D.26044 ])
                    (reg/f:DI 444)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 444)
        (expr_list:REG_DEAD (reg:DI 250 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 250 [ D.26044 ]))
                    (nil))))))
(insn 371 370 372 24 (set (reg:SI 445)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:421 90 {*movsi_internal}
     (nil))
(insn 372 371 373 24 (set (reg:DI 252 [ D.26044 ])
        (sign_extend:DI (reg:SI 445))) ge2fitman_preproc.cpp:421 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 445)
        (nil)))
(insn 373 372 374 24 (parallel [
            (set (reg:DI 253 [ D.26044 ])
                (ashift:DI (reg:DI 252 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 252 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 374 373 375 24 (set (reg/f:DI 446)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:421 89 {*movdi_internal}
     (nil))
(insn 375 374 376 24 (parallel [
            (set (reg/f:DI 254 [ D.26046 ])
                (plus:DI (reg:DI 253 [ D.26044 ])
                    (reg/f:DI 446)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 446)
        (expr_list:REG_DEAD (reg:DI 253 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 253 [ D.26044 ]))
                    (nil))))))
(insn 376 375 377 24 (set (reg:SF 255 [ D.26042 ])
        (mem:SF (reg/f:DI 254 [ D.26046 ]) [0 *_207+0 S4 A32])) ge2fitman_preproc.cpp:421 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 254 [ D.26046 ])
        (nil)))
(insn 377 376 378 24 (set (reg:SI 447)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:421 90 {*movsi_internal}
     (nil))
(insn 378 377 379 24 (parallel [
            (set (reg:SI 448)
                (lshiftrt:SI (reg:SI 447)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 379 378 380 24 (parallel [
            (set (reg:SI 449)
                (plus:SI (reg:SI 448)
                    (reg:SI 447)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 448)
        (expr_list:REG_DEAD (reg:SI 447)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 380 379 381 24 (parallel [
            (set (reg:SI 450)
                (ashiftrt:SI (reg:SI 449)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 449)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 381 380 382 24 (set (reg:SI 256 [ D.26043 ])
        (reg:SI 450)) ge2fitman_preproc.cpp:421 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 450)
        (nil)))
(insn 382 381 383 24 (set (reg:DF 257 [ D.26047 ])
        (float:DF (reg:SI 256 [ D.26043 ]))) ge2fitman_preproc.cpp:421 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 256 [ D.26043 ])
        (nil)))
(insn 383 382 384 24 (set (reg:DF 258 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:421 152 {*extendsfdf2_sse}
     (nil))
(insn 384 383 385 24 (set (reg:DF 259 [ D.26047 ])
        (mult:DF (reg:DF 257 [ D.26047 ])
            (reg:DF 258 [ D.26047 ]))) ge2fitman_preproc.cpp:421 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 258 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 257 [ D.26047 ])
            (nil))))
(insn 385 384 386 24 (set (reg:DF 260 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:421 152 {*extendsfdf2_sse}
     (nil))
(insn 386 385 387 24 (set (reg:DF 261 [ D.26047 ])
        (plus:DF (reg:DF 259 [ D.26047 ])
            (reg:DF 260 [ D.26047 ]))) ge2fitman_preproc.cpp:421 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 260 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 259 [ D.26047 ])
            (nil))))
(insn 387 386 388 24 (set (reg:V2DF 451)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:421 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 388 387 389 24 (parallel [
            (set (reg:DF 262 [ D.26047 ])
                (abs:DF (reg:DF 261 [ D.26047 ])))
            (use (reg:V2DF 451))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 451)
        (expr_list:REG_DEAD (reg:DF 261 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 261 [ D.26047 ]))
                    (nil))))))
(insn 389 388 390 24 (set (reg:DF 452)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:421 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 390 389 391 24 (set (reg:DF 263 [ D.26047 ])
        (mult:DF (reg:DF 262 [ D.26047 ])
            (reg:DF 452))) ge2fitman_preproc.cpp:421 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 452)
        (expr_list:REG_DEAD (reg:DF 262 [ D.26047 ])
            (nil))))
(insn 391 390 392 24 (set (reg/f:DI 453)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:421 89 {*movdi_internal}
     (nil))
(insn 392 391 393 24 (parallel [
            (set (reg/f:DI 264 [ D.26048 ])
                (plus:DI (reg/f:DI 453)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:421 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 453)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 393 392 394 24 (set (reg:SF 265 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 264 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _217->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:421 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 264 [ D.26048 ])
        (nil)))
(insn 394 393 395 24 (set (reg:DF 266 [ D.26047 ])
        (float_extend:DF (reg:SF 265 [ D.26042 ]))) ge2fitman_preproc.cpp:421 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 265 [ D.26042 ])
        (nil)))
(insn 395 394 396 24 (set (reg:DF 267 [ D.26047 ])
        (mult:DF (reg:DF 263 [ D.26047 ])
            (reg:DF 266 [ D.26047 ]))) ge2fitman_preproc.cpp:421 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 266 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 263 [ D.26047 ])
            (nil))))
(insn 396 395 397 24 (set (reg:DF 21 xmm0)
        (reg:DF 267 [ D.26047 ])) ge2fitman_preproc.cpp:421 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 267 [ D.26047 ])
        (nil)))
(call_insn 397 396 398 24 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:421 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 398 397 399 24 (set (reg:DF 268 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:421 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 399 398 400 24 (set (reg:SF 269 [ D.26042 ])
        (float_truncate:SF (reg:DF 268 [ D.26047 ]))) ge2fitman_preproc.cpp:421 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 268 [ D.26047 ])
        (nil)))
(insn 400 399 401 24 (set (reg:SF 270 [ D.26042 ])
        (mult:SF (reg:SF 255 [ D.26042 ])
            (reg:SF 269 [ D.26042 ]))) ge2fitman_preproc.cpp:421 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 269 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 255 [ D.26042 ])
            (nil))))
(insn 401 400 402 24 (set (mem:SF (reg/f:DI 251 [ D.26046 ]) [0 *_204+0 S4 A32])
        (reg:SF 270 [ D.26042 ])) ge2fitman_preproc.cpp:421 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 270 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 251 [ D.26046 ])
            (nil))))
(insn 402 401 403 24 (set (reg:SI 454)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:422 90 {*movsi_internal}
     (nil))
(insn 403 402 404 24 (set (reg:DI 271 [ D.26045 ])
        (sign_extend:DI (reg:SI 454))) ge2fitman_preproc.cpp:422 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 454)
        (nil)))
(insn 404 403 405 24 (parallel [
            (set (reg:DI 272 [ D.26045 ])
                (plus:DI (reg:DI 271 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 271 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 405 404 406 24 (parallel [
            (set (reg:DI 273 [ D.26045 ])
                (ashift:DI (reg:DI 272 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 272 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 406 405 407 24 (set (reg/f:DI 455)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:422 89 {*movdi_internal}
     (nil))
(insn 407 406 408 24 (parallel [
            (set (reg/f:DI 274 [ D.26046 ])
                (plus:DI (reg:DI 273 [ D.26045 ])
                    (reg/f:DI 455)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 455)
        (expr_list:REG_DEAD (reg:DI 273 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 273 [ D.26045 ]))
                    (nil))))))
(insn 408 407 409 24 (set (reg:SI 456)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:422 90 {*movsi_internal}
     (nil))
(insn 409 408 410 24 (set (reg:DI 275 [ D.26045 ])
        (sign_extend:DI (reg:SI 456))) ge2fitman_preproc.cpp:422 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 456)
        (nil)))
(insn 410 409 411 24 (parallel [
            (set (reg:DI 276 [ D.26045 ])
                (plus:DI (reg:DI 275 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 275 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 411 410 412 24 (parallel [
            (set (reg:DI 277 [ D.26045 ])
                (ashift:DI (reg:DI 276 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 276 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 412 411 413 24 (set (reg/f:DI 457)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:422 89 {*movdi_internal}
     (nil))
(insn 413 412 414 24 (parallel [
            (set (reg/f:DI 278 [ D.26046 ])
                (plus:DI (reg:DI 277 [ D.26045 ])
                    (reg/f:DI 457)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 457)
        (expr_list:REG_DEAD (reg:DI 277 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 277 [ D.26045 ]))
                    (nil))))))
(insn 414 413 415 24 (set (reg:SF 279 [ D.26042 ])
        (mem:SF (reg/f:DI 278 [ D.26046 ]) [0 *_233+0 S4 A32])) ge2fitman_preproc.cpp:422 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 278 [ D.26046 ])
        (nil)))
(insn 415 414 416 24 (set (reg:SI 458)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:422 90 {*movsi_internal}
     (nil))
(insn 416 415 417 24 (parallel [
            (set (reg:SI 459)
                (lshiftrt:SI (reg:SI 458)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 417 416 418 24 (parallel [
            (set (reg:SI 460)
                (plus:SI (reg:SI 459)
                    (reg:SI 458)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 459)
        (expr_list:REG_DEAD (reg:SI 458)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 418 417 419 24 (parallel [
            (set (reg:SI 461)
                (ashiftrt:SI (reg:SI 460)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 460)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 419 418 420 24 (set (reg:SI 280 [ D.26043 ])
        (reg:SI 461)) ge2fitman_preproc.cpp:422 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 461)
        (nil)))
(insn 420 419 421 24 (set (reg:DF 281 [ D.26047 ])
        (float:DF (reg:SI 280 [ D.26043 ]))) ge2fitman_preproc.cpp:422 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 280 [ D.26043 ])
        (nil)))
(insn 421 420 422 24 (set (reg:DF 282 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:422 152 {*extendsfdf2_sse}
     (nil))
(insn 422 421 423 24 (set (reg:DF 283 [ D.26047 ])
        (mult:DF (reg:DF 281 [ D.26047 ])
            (reg:DF 282 [ D.26047 ]))) ge2fitman_preproc.cpp:422 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 282 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 281 [ D.26047 ])
            (nil))))
(insn 423 422 424 24 (set (reg:DF 284 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:422 152 {*extendsfdf2_sse}
     (nil))
(insn 424 423 425 24 (set (reg:DF 285 [ D.26047 ])
        (plus:DF (reg:DF 283 [ D.26047 ])
            (reg:DF 284 [ D.26047 ]))) ge2fitman_preproc.cpp:422 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 284 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 283 [ D.26047 ])
            (nil))))
(insn 425 424 426 24 (set (reg:V2DF 462)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:422 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 426 425 427 24 (parallel [
            (set (reg:DF 286 [ D.26047 ])
                (abs:DF (reg:DF 285 [ D.26047 ])))
            (use (reg:V2DF 462))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 462)
        (expr_list:REG_DEAD (reg:DF 285 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 285 [ D.26047 ]))
                    (nil))))))
(insn 427 426 428 24 (set (reg:DF 463)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:422 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 428 427 429 24 (set (reg:DF 287 [ D.26047 ])
        (mult:DF (reg:DF 286 [ D.26047 ])
            (reg:DF 463))) ge2fitman_preproc.cpp:422 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 463)
        (expr_list:REG_DEAD (reg:DF 286 [ D.26047 ])
            (nil))))
(insn 429 428 430 24 (set (reg/f:DI 464)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:422 89 {*movdi_internal}
     (nil))
(insn 430 429 431 24 (parallel [
            (set (reg/f:DI 288 [ D.26048 ])
                (plus:DI (reg/f:DI 464)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:422 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 464)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 431 430 432 24 (set (reg:SF 289 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 288 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _243->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:422 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 288 [ D.26048 ])
        (nil)))
(insn 432 431 433 24 (set (reg:DF 290 [ D.26047 ])
        (float_extend:DF (reg:SF 289 [ D.26042 ]))) ge2fitman_preproc.cpp:422 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 289 [ D.26042 ])
        (nil)))
(insn 433 432 434 24 (set (reg:DF 291 [ D.26047 ])
        (mult:DF (reg:DF 287 [ D.26047 ])
            (reg:DF 290 [ D.26047 ]))) ge2fitman_preproc.cpp:422 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 290 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 287 [ D.26047 ])
            (nil))))
(insn 434 433 435 24 (set (reg:DF 21 xmm0)
        (reg:DF 291 [ D.26047 ])) ge2fitman_preproc.cpp:422 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 291 [ D.26047 ])
        (nil)))
(call_insn 435 434 436 24 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:422 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 436 435 437 24 (set (reg:DF 292 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:422 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 437 436 438 24 (set (reg:SF 293 [ D.26042 ])
        (float_truncate:SF (reg:DF 292 [ D.26047 ]))) ge2fitman_preproc.cpp:422 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 292 [ D.26047 ])
        (nil)))
(insn 438 437 439 24 (set (reg:SF 294 [ D.26042 ])
        (mult:SF (reg:SF 279 [ D.26042 ])
            (reg:SF 293 [ D.26042 ]))) ge2fitman_preproc.cpp:422 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 293 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 279 [ D.26042 ])
            (nil))))
(insn 439 438 553 24 (set (mem:SF (reg/f:DI 274 [ D.26046 ]) [0 *_229+0 S4 A32])
        (reg:SF 294 [ D.26042 ])) ge2fitman_preproc.cpp:422 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 294 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 274 [ D.26046 ])
            (nil))))
(jump_insn 553 439 554 24 (set (pc)
        (label_ref 523)) ge2fitman_preproc.cpp:422 654 {jump}
     (nil)
 -> 523)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 554 553 442)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 295 465
(code_label 442 554 443 25 94 "" [2 uses])
(note 443 442 444 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 25 (set (reg/f:DI 465)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:423 89 {*movdi_internal}
     (nil))
(insn 445 444 446 25 (set (reg:SI 295 [ D.26043 ])
        (mem/j:SI (plus:DI (reg/f:DI 465)
                (const_int 40 [0x28])) [0 preprocess_20(D)->pre_quecc+0 S4 A32])) ge2fitman_preproc.cpp:423 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 465)
        (nil)))
(insn 446 445 447 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 295 [ D.26043 ])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:423 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 295 [ D.26043 ])
        (nil)))
(jump_insn 447 446 448 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) ge2fitman_preproc.cpp:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 523)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487
(note 448 447 449 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 26 (set (reg:SI 466)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:424 90 {*movsi_internal}
     (nil))
(insn 450 449 451 26 (set (reg:DI 296 [ D.26044 ])
        (sign_extend:DI (reg:SI 466))) ge2fitman_preproc.cpp:424 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 466)
        (nil)))
(insn 451 450 452 26 (parallel [
            (set (reg:DI 297 [ D.26044 ])
                (ashift:DI (reg:DI 296 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 296 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 452 451 453 26 (set (reg/f:DI 467)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:424 89 {*movdi_internal}
     (nil))
(insn 453 452 454 26 (parallel [
            (set (reg/f:DI 298 [ D.26046 ])
                (plus:DI (reg:DI 297 [ D.26044 ])
                    (reg/f:DI 467)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 467)
        (expr_list:REG_DEAD (reg:DI 297 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 297 [ D.26044 ]))
                    (nil))))))
(insn 454 453 455 26 (set (reg:SI 468)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:424 90 {*movsi_internal}
     (nil))
(insn 455 454 456 26 (set (reg:DI 299 [ D.26044 ])
        (sign_extend:DI (reg:SI 468))) ge2fitman_preproc.cpp:424 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 468)
        (nil)))
(insn 456 455 457 26 (parallel [
            (set (reg:DI 300 [ D.26044 ])
                (ashift:DI (reg:DI 299 [ D.26044 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 299 [ D.26044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 457 456 458 26 (set (reg/f:DI 469)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:424 89 {*movdi_internal}
     (nil))
(insn 458 457 459 26 (parallel [
            (set (reg/f:DI 301 [ D.26046 ])
                (plus:DI (reg:DI 300 [ D.26044 ])
                    (reg/f:DI 469)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 469)
        (expr_list:REG_DEAD (reg:DI 300 [ D.26044 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 300 [ D.26044 ]))
                    (nil))))))
(insn 459 458 460 26 (set (reg:SF 302 [ D.26042 ])
        (mem:SF (reg/f:DI 301 [ D.26046 ]) [0 *_258+0 S4 A32])) ge2fitman_preproc.cpp:424 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 301 [ D.26046 ])
        (nil)))
(insn 460 459 461 26 (set (reg:SI 470)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:424 90 {*movsi_internal}
     (nil))
(insn 461 460 462 26 (parallel [
            (set (reg:SI 471)
                (lshiftrt:SI (reg:SI 470)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 462 461 463 26 (parallel [
            (set (reg:SI 472)
                (plus:SI (reg:SI 471)
                    (reg:SI 470)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 471)
        (expr_list:REG_DEAD (reg:SI 470)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 463 462 464 26 (parallel [
            (set (reg:SI 473)
                (ashiftrt:SI (reg:SI 472)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 472)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 464 463 465 26 (set (reg:SI 303 [ D.26043 ])
        (reg:SI 473)) ge2fitman_preproc.cpp:424 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 473)
        (nil)))
(insn 465 464 466 26 (set (reg:DF 304 [ D.26047 ])
        (float:DF (reg:SI 303 [ D.26043 ]))) ge2fitman_preproc.cpp:424 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 303 [ D.26043 ])
        (nil)))
(insn 466 465 467 26 (set (reg:DF 305 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:424 152 {*extendsfdf2_sse}
     (nil))
(insn 467 466 468 26 (set (reg:DF 306 [ D.26047 ])
        (mult:DF (reg:DF 304 [ D.26047 ])
            (reg:DF 305 [ D.26047 ]))) ge2fitman_preproc.cpp:424 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 305 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 304 [ D.26047 ])
            (nil))))
(insn 468 467 469 26 (set (reg:DF 307 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:424 152 {*extendsfdf2_sse}
     (nil))
(insn 469 468 470 26 (set (reg:DF 308 [ D.26047 ])
        (plus:DF (reg:DF 306 [ D.26047 ])
            (reg:DF 307 [ D.26047 ]))) ge2fitman_preproc.cpp:424 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 307 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 306 [ D.26047 ])
            (nil))))
(insn 470 469 471 26 (set (reg:V2DF 474)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:424 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 471 470 472 26 (parallel [
            (set (reg:DF 309 [ D.26047 ])
                (abs:DF (reg:DF 308 [ D.26047 ])))
            (use (reg:V2DF 474))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 474)
        (expr_list:REG_DEAD (reg:DF 308 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 308 [ D.26047 ]))
                    (nil))))))
(insn 472 471 473 26 (set (reg:DF 475)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:424 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 473 472 474 26 (set (reg:DF 310 [ D.26047 ])
        (mult:DF (reg:DF 309 [ D.26047 ])
            (reg:DF 475))) ge2fitman_preproc.cpp:424 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 475)
        (expr_list:REG_DEAD (reg:DF 309 [ D.26047 ])
            (nil))))
(insn 474 473 475 26 (set (reg/f:DI 476)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:424 89 {*movdi_internal}
     (nil))
(insn 475 474 476 26 (parallel [
            (set (reg/f:DI 311 [ D.26048 ])
                (plus:DI (reg/f:DI 476)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:424 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 476)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 476 475 477 26 (set (reg:SF 312 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 311 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _268->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:424 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 311 [ D.26048 ])
        (nil)))
(insn 477 476 478 26 (set (reg:DF 313 [ D.26047 ])
        (float_extend:DF (reg:SF 312 [ D.26042 ]))) ge2fitman_preproc.cpp:424 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 312 [ D.26042 ])
        (nil)))
(insn 478 477 479 26 (set (reg:DF 314 [ D.26047 ])
        (mult:DF (reg:DF 310 [ D.26047 ])
            (reg:DF 313 [ D.26047 ]))) ge2fitman_preproc.cpp:424 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 313 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 310 [ D.26047 ])
            (nil))))
(insn 479 478 480 26 (set (reg:DF 21 xmm0)
        (reg:DF 314 [ D.26047 ])) ge2fitman_preproc.cpp:424 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 314 [ D.26047 ])
        (nil)))
(call_insn 480 479 481 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:424 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 481 480 482 26 (set (reg:DF 315 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:424 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 482 481 483 26 (set (reg:SF 316 [ D.26042 ])
        (float_truncate:SF (reg:DF 315 [ D.26047 ]))) ge2fitman_preproc.cpp:424 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 315 [ D.26047 ])
        (nil)))
(insn 483 482 484 26 (set (reg:SF 317 [ D.26042 ])
        (mult:SF (reg:SF 302 [ D.26042 ])
            (reg:SF 316 [ D.26042 ]))) ge2fitman_preproc.cpp:424 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 316 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 302 [ D.26042 ])
            (nil))))
(insn 484 483 485 26 (set (mem:SF (reg/f:DI 298 [ D.26046 ]) [0 *_255+0 S4 A32])
        (reg:SF 317 [ D.26042 ])) ge2fitman_preproc.cpp:424 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 317 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 298 [ D.26046 ])
            (nil))))
(insn 485 484 486 26 (set (reg:SI 477)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:425 90 {*movsi_internal}
     (nil))
(insn 486 485 487 26 (set (reg:DI 318 [ D.26045 ])
        (sign_extend:DI (reg:SI 477))) ge2fitman_preproc.cpp:425 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 477)
        (nil)))
(insn 487 486 488 26 (parallel [
            (set (reg:DI 319 [ D.26045 ])
                (plus:DI (reg:DI 318 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 318 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 488 487 489 26 (parallel [
            (set (reg:DI 320 [ D.26045 ])
                (ashift:DI (reg:DI 319 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 319 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 489 488 490 26 (set (reg/f:DI 478)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:425 89 {*movdi_internal}
     (nil))
(insn 490 489 491 26 (parallel [
            (set (reg/f:DI 321 [ D.26046 ])
                (plus:DI (reg:DI 320 [ D.26045 ])
                    (reg/f:DI 478)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 478)
        (expr_list:REG_DEAD (reg:DI 320 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 320 [ D.26045 ]))
                    (nil))))))
(insn 491 490 492 26 (set (reg:SI 479)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:425 90 {*movsi_internal}
     (nil))
(insn 492 491 493 26 (set (reg:DI 322 [ D.26045 ])
        (sign_extend:DI (reg:SI 479))) ge2fitman_preproc.cpp:425 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 479)
        (nil)))
(insn 493 492 494 26 (parallel [
            (set (reg:DI 323 [ D.26045 ])
                (plus:DI (reg:DI 322 [ D.26045 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 322 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 494 493 495 26 (parallel [
            (set (reg:DI 324 [ D.26045 ])
                (ashift:DI (reg:DI 323 [ D.26045 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 323 [ D.26045 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 495 494 496 26 (set (reg/f:DI 480)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:425 89 {*movdi_internal}
     (nil))
(insn 496 495 497 26 (parallel [
            (set (reg/f:DI 325 [ D.26046 ])
                (plus:DI (reg:DI 324 [ D.26045 ])
                    (reg/f:DI 480)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 480)
        (expr_list:REG_DEAD (reg:DI 324 [ D.26045 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -48 [0xffffffffffffffd0])) [0 unsup_data+0 S8 A64])
                        (reg:DI 324 [ D.26045 ]))
                    (nil))))))
(insn 497 496 498 26 (set (reg:SF 326 [ D.26042 ])
        (mem:SF (reg/f:DI 325 [ D.26046 ]) [0 *_284+0 S4 A32])) ge2fitman_preproc.cpp:425 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 325 [ D.26046 ])
        (nil)))
(insn 498 497 499 26 (set (reg:SI 481)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:425 90 {*movsi_internal}
     (nil))
(insn 499 498 500 26 (parallel [
            (set (reg:SI 482)
                (lshiftrt:SI (reg:SI 481)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 500 499 501 26 (parallel [
            (set (reg:SI 483)
                (plus:SI (reg:SI 482)
                    (reg:SI 481)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 482)
        (expr_list:REG_DEAD (reg:SI 481)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 501 500 502 26 (parallel [
            (set (reg:SI 484)
                (ashiftrt:SI (reg:SI 483)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 483)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 502 501 503 26 (set (reg:SI 327 [ D.26043 ])
        (reg:SI 484)) ge2fitman_preproc.cpp:425 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 484)
        (nil)))
(insn 503 502 504 26 (set (reg:DF 328 [ D.26047 ])
        (float:DF (reg:SI 327 [ D.26043 ]))) ge2fitman_preproc.cpp:425 201 {*floatsidf2_sse}
     (expr_list:REG_DEAD (reg:SI 327 [ D.26043 ])
        (nil)))
(insn 504 503 505 26 (set (reg:DF 329 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 dwell+0 S4 A32]))) ge2fitman_preproc.cpp:425 152 {*extendsfdf2_sse}
     (nil))
(insn 505 504 506 26 (set (reg:DF 330 [ D.26047 ])
        (mult:DF (reg:DF 328 [ D.26047 ])
            (reg:DF 329 [ D.26047 ]))) ge2fitman_preproc.cpp:425 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 329 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 328 [ D.26047 ])
            (nil))))
(insn 506 505 507 26 (set (reg:DF 331 [ D.26047 ])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 delay+0 S4 A32]))) ge2fitman_preproc.cpp:425 152 {*extendsfdf2_sse}
     (nil))
(insn 507 506 508 26 (set (reg:DF 332 [ D.26047 ])
        (plus:DF (reg:DF 330 [ D.26047 ])
            (reg:DF 331 [ D.26047 ]))) ge2fitman_preproc.cpp:425 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 331 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 330 [ D.26047 ])
            (nil))))
(insn 508 507 509 26 (set (reg:V2DF 485)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S16 A128])) ge2fitman_preproc.cpp:425 1208 {*movv2df_internal}
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 509 508 510 26 (parallel [
            (set (reg:DF 333 [ D.26047 ])
                (abs:DF (reg:DF 332 [ D.26047 ])))
            (use (reg:V2DF 485))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 470 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 485)
        (expr_list:REG_DEAD (reg:DF 332 [ D.26047 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:DF (reg:DF 332 [ D.26047 ]))
                    (nil))))))
(insn 510 509 511 26 (set (reg:DF 486)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:425 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF -3.141592653589793115997963468544185161590576171875e+0 [-0x0.c90fdaa22168cp+2])
        (nil)))
(insn 511 510 512 26 (set (reg:DF 334 [ D.26047 ])
        (mult:DF (reg:DF 333 [ D.26047 ])
            (reg:DF 486))) ge2fitman_preproc.cpp:425 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 486)
        (expr_list:REG_DEAD (reg:DF 333 [ D.26047 ])
            (nil))))
(insn 512 511 513 26 (set (reg/f:DI 487)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:425 89 {*movdi_internal}
     (nil))
(insn 513 512 514 26 (parallel [
            (set (reg/f:DI 335 [ D.26048 ])
                (plus:DI (reg/f:DI 487)
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:425 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 487)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0])) [0 preprocess+0 S8 A64])
                    (const_int 76 [0x4c]))
                (nil)))))
(insn 514 513 515 26 (set (reg:SF 336 [ D.26042 ])
        (mem/j:SF (plus:DI (reg/f:DI 335 [ D.26048 ])
                (const_int 28 [0x1c])) [0 _294->comp_filter+0 S4 A32])) ge2fitman_preproc.cpp:425 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 335 [ D.26048 ])
        (nil)))
(insn 515 514 516 26 (set (reg:DF 337 [ D.26047 ])
        (float_extend:DF (reg:SF 336 [ D.26042 ]))) ge2fitman_preproc.cpp:425 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 336 [ D.26042 ])
        (nil)))
(insn 516 515 517 26 (set (reg:DF 338 [ D.26047 ])
        (mult:DF (reg:DF 334 [ D.26047 ])
            (reg:DF 337 [ D.26047 ]))) ge2fitman_preproc.cpp:425 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 337 [ D.26047 ])
        (expr_list:REG_DEAD (reg:DF 334 [ D.26047 ])
            (nil))))
(insn 517 516 518 26 (set (reg:DF 21 xmm0)
        (reg:DF 338 [ D.26047 ])) ge2fitman_preproc.cpp:425 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 338 [ D.26047 ])
        (nil)))
(call_insn 518 517 519 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("exp") [flags 0x41]  <function_decl 0x7fe357058d80 exp>) [0 __builtin_exp S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:425 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 519 518 520 26 (set (reg:DF 339 [ D.26047 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:425 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 520 519 521 26 (set (reg:SF 340 [ D.26042 ])
        (float_truncate:SF (reg:DF 339 [ D.26047 ]))) ge2fitman_preproc.cpp:425 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 339 [ D.26047 ])
        (nil)))
(insn 521 520 522 26 (set (reg:SF 341 [ D.26042 ])
        (mult:SF (reg:SF 326 [ D.26042 ])
            (reg:SF 340 [ D.26042 ]))) ge2fitman_preproc.cpp:425 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 340 [ D.26042 ])
        (expr_list:REG_DEAD (reg:SF 326 [ D.26042 ])
            (nil))))
(insn 522 521 523 26 (set (mem:SF (reg/f:DI 321 [ D.26046 ]) [0 *_280+0 S4 A32])
        (reg:SF 341 [ D.26042 ])) ge2fitman_preproc.cpp:425 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 341 [ D.26042 ])
        (expr_list:REG_DEAD (reg/f:DI 321 [ D.26046 ])
            (nil))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              25
;;              24 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 523 522 524 27 95 "" [2 uses])
(note 524 523 525 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 555 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -20 [0xffffffffffffffec])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:419 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 555 525 556 27 (set (pc)
        (label_ref 526)) ge2fitman_preproc.cpp:419 654 {jump}
     (nil)
 -> 526)
;;  succ:       21 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 556 555 529)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              19
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 342 343
(code_label 529 556 530 28 92 "" [2 uses])
(note 530 529 531 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 534 28 (set (reg:SI 342 [ D.26043 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:431 90 {*movsi_internal}
     (nil))
(insn 534 531 538 28 (set (reg:SI 343 [ <retval> ])
        (reg:SI 342 [ D.26043 ])) ge2fitman_preproc.cpp:431 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 342 [ D.26043 ])
        (nil)))
(insn 538 534 539 28 (set (reg/i:SI 0 ax)
        (reg:SI 343 [ <retval> ])) ge2fitman_preproc.cpp:433 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 343 [ <retval> ])
        (nil)))
(insn 539 538 0 28 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:433 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int quecc(float*, float*, float*, Procpar_info*, Preprocess*) (_Z5queccPfS_S_P12Procpar_infoP10Preprocess, funcdef_no=1029, decl_uid=24435, cgraph_uid=234, symbol_order=235)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 18 count 15 (    1)
Building IRA IR
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 154.
verify found no changes in insn with uid = 196.
verify found no changes in insn with uid = 216.
verify found no changes in insn with uid = 248.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 296.
verify found no changes in insn with uid = 310.
verify found no changes in insn with uid = 333.
verify found no changes in insn with uid = 347.
verify found no changes in insn with uid = 360.
verify found no changes in insn with uid = 374.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r355: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a7 (r355,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r353: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r353,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r352,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r351: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r351,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r349: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a28 (r349,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r347,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r346: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a39 (r346,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r345: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r345,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r344: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r344,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r343: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a45 (r343,l0) best SSE_REGS, allocno SSE_REGS
    r342: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a44 (r342,l0) best SSE_REGS, allocno SSE_REGS
    r341: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a47 (r341,l0) best SSE_REGS, allocno SSE_REGS
    r340: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a46 (r340,l0) best SSE_REGS, allocno SSE_REGS
    r339: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a53 (r339,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r338: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r338,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r337: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r337,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r336: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a64 (r336,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r335: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r335,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r333: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a70 (r333,l0) best SSE_REGS, allocno SSE_REGS
    r332: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a69 (r332,l0) best SSE_REGS, allocno SSE_REGS
    r331: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a72 (r331,l0) best SSE_REGS, allocno SSE_REGS
    r330: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a71 (r330,l0) best SSE_REGS, allocno SSE_REGS
    r329: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a73 (r329,l0) best SSE_REGS, allocno SSE_REGS
    r328: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a74 (r328,l0) best SSE_REGS, allocno SSE_REGS
    r327: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a80 (r327,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r326: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r326,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r325: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r325,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r324: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a91 (r324,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r323: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r323,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r322: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r322,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r321: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a97 (r321,l0) best SSE_REGS, allocno SSE_REGS
    r320: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a96 (r320,l0) best SSE_REGS, allocno SSE_REGS
    r319: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a99 (r319,l0) best SSE_REGS, allocno SSE_REGS
    r318: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a98 (r318,l0) best SSE_REGS, allocno SSE_REGS
    r317: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a100 (r317,l0) best SSE_REGS, allocno SSE_REGS
    r316: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a101 (r316,l0) best SSE_REGS, allocno SSE_REGS
    r315: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a102 (r315,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r314,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r313,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r312: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r312,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r311,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r310: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a118 (r310,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r309,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r308,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r307,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r306,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r305,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r304: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r304,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r303: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r303,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r302,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r301: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r301,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r300: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a154 (r300,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r299,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r298: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r298,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r296: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r296,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r295: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a170 (r295,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a204 (r286,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a213 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a216 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a219 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a220 (r281,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a228 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a232 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a235 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a239 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a244 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a247 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a250 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a253 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a256 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a257 (r271,l0) best SSE_REGS, allocno SSE_REGS
    r270: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a258 (r270,l0) best SSE_REGS, allocno SSE_REGS
    r269: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a259 (r269,l0) best SSE_REGS, allocno SSE_REGS
    r268: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a260 (r268,l0) best SSE_REGS, allocno SSE_REGS
    r267: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a261 (r267,l0) best SSE_REGS, allocno SSE_REGS
    r266: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a262 (r266,l0) best SSE_REGS, allocno SSE_REGS
    r265: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a263 (r265,l0) best SSE_REGS, allocno SSE_REGS
    r264: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a264 (r264,l0) best SSE_REGS, allocno SSE_REGS
    r263: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a265 (r263,l0) best SSE_REGS, allocno SSE_REGS
    r262: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a266 (r262,l0) best SSE_REGS, allocno SSE_REGS
    r261: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a267 (r261,l0) best SSE_REGS, allocno SSE_REGS
    r260: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a268 (r260,l0) best SSE_REGS, allocno SSE_REGS
    r259: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r259,l0) best AREG, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r257,l0) best SSE_REGS, allocno SSE_REGS
    r256: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r256,l0) best SSE_REGS, allocno SSE_REGS
    r255: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r255,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r254: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r254,l0) best SSE_REGS, allocno SSE_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a14 (r249,l0) best SSE_REGS, allocno SSE_REGS
    r248: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a15 (r248,l0) best SSE_REGS, allocno SSE_REGS
    r247: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a17 (r247,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r246: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a16 (r246,l0) best SSE_REGS, allocno SSE_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r242,l0) best SSE_REGS, allocno SSE_REGS
    r241: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a25 (r241,l0) best SSE_REGS, allocno SSE_REGS
    r240: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a27 (r240,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r239: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a26 (r239,l0) best SSE_REGS, allocno SSE_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a35 (r234,l0) best SSE_REGS, allocno SSE_REGS
    r233: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a36 (r233,l0) best SSE_REGS, allocno SSE_REGS
    r232: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a38 (r232,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r231: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r231,l0) best SSE_REGS, allocno SSE_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a49 (r227,l0) best SSE_REGS, allocno SSE_REGS
    r226: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r226,l0) best SSE_REGS, allocno SSE_REGS
    r225: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a52 (r225,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r224: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r224,l0) best SSE_REGS, allocno SSE_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a60 (r219,l0) best SSE_REGS, allocno SSE_REGS
    r218: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a61 (r218,l0) best SSE_REGS, allocno SSE_REGS
    r217: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a63 (r217,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r216: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a62 (r216,l0) best SSE_REGS, allocno SSE_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a76 (r212,l0) best SSE_REGS, allocno SSE_REGS
    r211: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a77 (r211,l0) best SSE_REGS, allocno SSE_REGS
    r210: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a79 (r210,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r209: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a78 (r209,l0) best SSE_REGS, allocno SSE_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a87 (r204,l0) best SSE_REGS, allocno SSE_REGS
    r203: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a88 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a90 (r202,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r201: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a89 (r201,l0) best SSE_REGS, allocno SSE_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a103 (r197,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r196: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a105 (r196,l0) best SSE_REGS, allocno SSE_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a104 (r191,l0) best SSE_REGS, allocno SSE_REGS
    r190: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a112 (r190,l0) best SSE_REGS, allocno SSE_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a119 (r186,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r185: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a120 (r185,l0) best SSE_REGS, allocno SSE_REGS
    r184: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a122 (r184,l0) best SSE_REGS, allocno SSE_REGS
    r183: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a124 (r183,l0) best SSE_REGS, allocno SSE_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a123 (r178,l0) best SSE_REGS, allocno SSE_REGS
    r177: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a131 (r177,l0) best SSE_REGS, allocno SSE_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a121 (r172,l0) best SSE_REGS, allocno SSE_REGS
    r171: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a138 (r171,l0) best SSE_REGS, allocno SSE_REGS
    r170: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a140 (r170,l0) best SSE_REGS, allocno SSE_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a139 (r166,l0) best SSE_REGS, allocno SSE_REGS
    r165: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a146 (r165,l0) best SSE_REGS, allocno SSE_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a155 (r160,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r159: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a157 (r159,l0) best SSE_REGS, allocno SSE_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a156 (r154,l0) best SSE_REGS, allocno SSE_REGS
    r153: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a164 (r153,l0) best SSE_REGS, allocno SSE_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a171 (r149,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r148: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a172 (r148,l0) best SSE_REGS, allocno SSE_REGS
    r147: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a174 (r147,l0) best SSE_REGS, allocno SSE_REGS
    r146: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a176 (r146,l0) best SSE_REGS, allocno SSE_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a175 (r141,l0) best SSE_REGS, allocno SSE_REGS
    r140: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a183 (r140,l0) best SSE_REGS, allocno SSE_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a173 (r135,l0) best SSE_REGS, allocno SSE_REGS
    r134: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a190 (r134,l0) best SSE_REGS, allocno SSE_REGS
    r133: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a192 (r133,l0) best SSE_REGS, allocno SSE_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a191 (r129,l0) best SSE_REGS, allocno SSE_REGS
    r128: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a198 (r128,l0) best SSE_REGS, allocno SSE_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a205 (r124,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r123: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a207 (r123,l0) best SSE_REGS, allocno SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a206 (r118,l0) best SSE_REGS, allocno SSE_REGS
    r117: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a214 (r117,l0) best SSE_REGS, allocno SSE_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a215 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a217 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a218 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a221 (r113,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r112: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a222 (r112,l0) best SSE_REGS, allocno SSE_REGS
    r111: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a224 (r111,l0) best SSE_REGS, allocno SSE_REGS
    r110: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a226 (r110,l0) best SSE_REGS, allocno SSE_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a227 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a229 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a230 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a231 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a225 (r105,l0) best SSE_REGS, allocno SSE_REGS
    r104: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a233 (r104,l0) best SSE_REGS, allocno SSE_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a234 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a236 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a237 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a238 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a223 (r99,l0) best SSE_REGS, allocno SSE_REGS
    r98: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a240 (r98,l0) best SSE_REGS, allocno SSE_REGS
    r97: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a242 (r97,l0) best SSE_REGS, allocno SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a243 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a245 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a246 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a241 (r93,l0) best SSE_REGS, allocno SSE_REGS
    r92: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a248 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a249 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a251 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a252 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a254 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a255 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r257,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a4(r256,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a5(r254,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a6(r255,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a7(r355,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a8(r354,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r250,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a12(r353,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r245,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a14(r249,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a15(r248,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a16(r246,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a17(r247,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a18(r352,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a19(r351,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a21(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a22(r350,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r242,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a25(r241,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a26(r239,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a27(r240,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a28(r349,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a29(r348,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a33(r347,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a35(r234,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a36(r233,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a37(r231,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a38(r232,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a39(r346,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a40(r345,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a41(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a42(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a43(r344,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r342,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a45(r343,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a46(r340,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a47(r341,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a48(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a49(r227,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a50(r226,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a51(r224,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a52(r225,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a53(r339,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a54(r338,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a55(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a56(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a57(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a58(r337,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a59(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a60(r219,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a61(r218,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a62(r216,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a63(r217,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a64(r336,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a65(r335,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a66(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a67(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a68(r334,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a69(r332,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a70(r333,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a71(r330,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a72(r331,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a73(r329,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a74(r328,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a75(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a76(r212,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a77(r211,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a78(r209,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a79(r210,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a80(r327,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a81(r326,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a82(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a83(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a84(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a85(r325,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a86(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a87(r204,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:32 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 ALL_REGS:40 MEM:14
  a88(r203,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a89(r201,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:34 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 ALL_REGS:42 MEM:15
  a90(r202,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:8
  a91(r324,l0) costs: AREG:6 DREG:6 CREG:6 BREG:6 SIREG:6 DIREG:6 AD_REGS:6 Q_REGS:6 NON_Q_REGS:6 GENERAL_REGS:6 FP_TOP_REG:24 FP_SECOND_REG:24 FLOAT_REGS:24 SSE_FIRST_REG:21 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:26 FP_SECOND_SSE_REGS:26 FLOAT_SSE_REGS:26 FLOAT_INT_REGS:24 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:26 MEM:7
  a92(r323,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a94(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a95(r322,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r320,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a97(r321,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a98(r318,l0) costs: AREG:10 DREG:10 CREG:10 BREG:10 SIREG:10 DIREG:10 AD_REGS:10 Q_REGS:10 NON_Q_REGS:10 GENERAL_REGS:10 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:40 MEM:14
  a99(r319,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a100(r317,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a101(r316,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 MEM:14
  a102(r315,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a103(r197,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a104(r191,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a105(r196,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a106(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a107(r314,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a108(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a110(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a111(r313,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r190,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a113(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a114(r312,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a115(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a116(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a117(r311,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a118(r310,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a119(r186,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a120(r185,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a121(r172,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a122(r184,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a123(r178,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a124(r183,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a125(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a126(r309,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a127(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a128(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a129(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a130(r308,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a131(r177,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a132(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a133(r307,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a134(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a135(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a136(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a137(r306,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a138(r171,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a139(r166,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a140(r170,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a141(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a142(r305,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a143(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a144(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a145(r304,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a146(r165,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a147(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a148(r303,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a149(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a150(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a151(r302,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a152(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a153(r301,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a154(r300,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a155(r160,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a156(r154,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a157(r159,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a158(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a159(r299,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a160(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a161(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a162(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a163(r298,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a164(r153,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a165(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a166(r297,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a167(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a168(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a169(r296,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a170(r295,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a171(r149,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a172(r148,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a173(r135,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a174(r147,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a175(r141,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a176(r146,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a177(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a178(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a179(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a180(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a181(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a182(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a183(r140,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a184(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a185(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a186(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a187(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a188(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a189(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a190(r134,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a191(r129,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a192(r133,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a193(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a194(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a195(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a196(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a197(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a198(r128,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a199(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a200(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a201(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a202(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a203(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a204(r286,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a205(r124,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a206(r118,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a207(r123,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a208(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a209(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a210(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a211(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a212(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a213(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a214(r117,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a215(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a216(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a217(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a218(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a219(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a220(r281,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a221(r113,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a222(r112,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a223(r99,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a224(r111,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a225(r105,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a226(r110,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a227(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a228(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a229(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a230(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a231(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a232(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a233(r104,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a234(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a235(r278,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a236(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a237(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a238(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a239(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a240(r98,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a241(r93,l0) costs: AREG:21 DREG:21 CREG:21 BREG:21 SIREG:21 DIREG:21 AD_REGS:21 Q_REGS:21 NON_Q_REGS:21 GENERAL_REGS:21 FP_TOP_REG:42 FP_SECOND_REG:42 FLOAT_REGS:42 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:42 FP_SECOND_SSE_REGS:42 FLOAT_SSE_REGS:42 FLOAT_INT_REGS:42 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:42 MEM:15
  a242(r97,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a243(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a244(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a245(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a246(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a247(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a248(r92,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:13
  a249(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a250(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a251(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a252(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a253(r273,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a254(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a255(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a256(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a257(r271,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a258(r270,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a259(r269,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a260(r268,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a261(r267,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a262(r266,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a263(r265,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a264(r264,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a265(r263,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a266(r262,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a267(r261,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12
  a268(r260,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 MEM:12

   Insn 395(l0): point = 0
   Insn 394(l0): point = 2
   Insn 390(l0): point = 4
   Insn 387(l0): point = 6
   Insn 41(l0): point = 9
   Insn 40(l0): point = 11
   Insn 39(l0): point = 13
   Insn 38(l0): point = 15
   Insn 37(l0): point = 17
   Insn 411(l0): point = 20
   Insn 381(l0): point = 22
   Insn 378(l0): point = 25
   Insn 377(l0): point = 27
   Insn 376(l0): point = 29
   Insn 375(l0): point = 31
   Insn 374(l0): point = 33
   Insn 373(l0): point = 35
   Insn 372(l0): point = 37
   Insn 371(l0): point = 39
   Insn 370(l0): point = 41
   Insn 369(l0): point = 43
   Insn 368(l0): point = 45
   Insn 367(l0): point = 47
   Insn 366(l0): point = 49
   Insn 365(l0): point = 51
   Insn 364(l0): point = 53
   Insn 363(l0): point = 55
   Insn 362(l0): point = 57
   Insn 361(l0): point = 59
   Insn 360(l0): point = 61
   Insn 359(l0): point = 63
   Insn 358(l0): point = 65
   Insn 357(l0): point = 67
   Insn 356(l0): point = 69
   Insn 355(l0): point = 71
   Insn 354(l0): point = 73
   Insn 353(l0): point = 75
   Insn 352(l0): point = 77
   Insn 351(l0): point = 79
   Insn 350(l0): point = 81
   Insn 349(l0): point = 83
   Insn 348(l0): point = 85
   Insn 347(l0): point = 87
   Insn 346(l0): point = 89
   Insn 345(l0): point = 91
   Insn 344(l0): point = 93
   Insn 343(l0): point = 95
   Insn 342(l0): point = 97
   Insn 341(l0): point = 99
   Insn 340(l0): point = 101
   Insn 339(l0): point = 103
   Insn 338(l0): point = 105
   Insn 337(l0): point = 107
   Insn 336(l0): point = 109
   Insn 335(l0): point = 111
   Insn 334(l0): point = 113
   Insn 333(l0): point = 115
   Insn 332(l0): point = 117
   Insn 331(l0): point = 119
   Insn 330(l0): point = 121
   Insn 329(l0): point = 123
   Insn 328(l0): point = 125
   Insn 327(l0): point = 127
   Insn 326(l0): point = 129
   Insn 325(l0): point = 131
   Insn 324(l0): point = 133
   Insn 323(l0): point = 135
   Insn 322(l0): point = 137
   Insn 321(l0): point = 139
   Insn 320(l0): point = 141
   Insn 319(l0): point = 143
   Insn 409(l0): point = 146
   Insn 314(l0): point = 148
   Insn 313(l0): point = 150
   Insn 312(l0): point = 152
   Insn 311(l0): point = 154
   Insn 310(l0): point = 156
   Insn 309(l0): point = 158
   Insn 308(l0): point = 160
   Insn 307(l0): point = 162
   Insn 306(l0): point = 164
   Insn 305(l0): point = 166
   Insn 304(l0): point = 168
   Insn 303(l0): point = 170
   Insn 302(l0): point = 172
   Insn 301(l0): point = 174
   Insn 300(l0): point = 176
   Insn 299(l0): point = 178
   Insn 298(l0): point = 180
   Insn 297(l0): point = 182
   Insn 296(l0): point = 184
   Insn 295(l0): point = 186
   Insn 294(l0): point = 188
   Insn 293(l0): point = 190
   Insn 292(l0): point = 192
   Insn 291(l0): point = 194
   Insn 290(l0): point = 196
   Insn 289(l0): point = 198
   Insn 288(l0): point = 200
   Insn 287(l0): point = 202
   Insn 286(l0): point = 204
   Insn 285(l0): point = 206
   Insn 282(l0): point = 209
   Insn 281(l0): point = 211
   Insn 280(l0): point = 213
   Insn 407(l0): point = 216
   Insn 275(l0): point = 218
   Insn 274(l0): point = 220
   Insn 269(l0): point = 223
   Insn 268(l0): point = 225
   Insn 267(l0): point = 227
   Insn 266(l0): point = 229
   Insn 265(l0): point = 231
   Insn 264(l0): point = 233
   Insn 263(l0): point = 235
   Insn 262(l0): point = 237
   Insn 261(l0): point = 239
   Insn 260(l0): point = 241
   Insn 259(l0): point = 243
   Insn 258(l0): point = 245
   Insn 257(l0): point = 247
   Insn 256(l0): point = 249
   Insn 255(l0): point = 251
   Insn 254(l0): point = 253
   Insn 253(l0): point = 255
   Insn 252(l0): point = 257
   Insn 251(l0): point = 259
   Insn 250(l0): point = 261
   Insn 249(l0): point = 263
   Insn 248(l0): point = 265
   Insn 247(l0): point = 267
   Insn 246(l0): point = 269
   Insn 245(l0): point = 271
   Insn 244(l0): point = 273
   Insn 243(l0): point = 275
   Insn 242(l0): point = 277
   Insn 241(l0): point = 279
   Insn 240(l0): point = 281
   Insn 239(l0): point = 283
   Insn 238(l0): point = 285
   Insn 237(l0): point = 287
   Insn 234(l0): point = 290
   Insn 233(l0): point = 292
   Insn 232(l0): point = 294
   Insn 404(l0): point = 297
   Insn 227(l0): point = 299
   Insn 226(l0): point = 301
   Insn 221(l0): point = 304
   Insn 220(l0): point = 306
   Insn 219(l0): point = 308
   Insn 218(l0): point = 310
   Insn 217(l0): point = 312
   Insn 216(l0): point = 314
   Insn 215(l0): point = 316
   Insn 214(l0): point = 318
   Insn 213(l0): point = 320
   Insn 212(l0): point = 322
   Insn 211(l0): point = 324
   Insn 210(l0): point = 326
   Insn 209(l0): point = 328
   Insn 208(l0): point = 330
   Insn 207(l0): point = 332
   Insn 206(l0): point = 334
   Insn 205(l0): point = 336
   Insn 204(l0): point = 338
   Insn 203(l0): point = 340
   Insn 202(l0): point = 342
   Insn 201(l0): point = 344
   Insn 200(l0): point = 346
   Insn 199(l0): point = 348
   Insn 198(l0): point = 350
   Insn 197(l0): point = 352
   Insn 196(l0): point = 354
   Insn 195(l0): point = 356
   Insn 194(l0): point = 358
   Insn 193(l0): point = 360
   Insn 192(l0): point = 362
   Insn 191(l0): point = 364
   Insn 190(l0): point = 366
   Insn 189(l0): point = 368
   Insn 188(l0): point = 370
   Insn 187(l0): point = 372
   Insn 186(l0): point = 374
   Insn 185(l0): point = 376
   Insn 184(l0): point = 378
   Insn 183(l0): point = 380
   Insn 182(l0): point = 382
   Insn 181(l0): point = 384
   Insn 180(l0): point = 386
   Insn 179(l0): point = 388
   Insn 178(l0): point = 390
   Insn 177(l0): point = 392
   Insn 176(l0): point = 394
   Insn 175(l0): point = 396
   Insn 174(l0): point = 398
   Insn 173(l0): point = 400
   Insn 172(l0): point = 402
   Insn 171(l0): point = 404
   Insn 170(l0): point = 406
   Insn 169(l0): point = 408
   Insn 168(l0): point = 410
   Insn 167(l0): point = 412
   Insn 166(l0): point = 414
   Insn 165(l0): point = 416
   Insn 164(l0): point = 418
   Insn 163(l0): point = 420
   Insn 162(l0): point = 422
   Insn 160(l0): point = 425
   Insn 159(l0): point = 427
   Insn 158(l0): point = 429
   Insn 157(l0): point = 431
   Insn 156(l0): point = 433
   Insn 155(l0): point = 435
   Insn 154(l0): point = 437
   Insn 153(l0): point = 439
   Insn 152(l0): point = 441
   Insn 151(l0): point = 443
   Insn 150(l0): point = 445
   Insn 149(l0): point = 447
   Insn 148(l0): point = 449
   Insn 147(l0): point = 451
   Insn 146(l0): point = 453
   Insn 145(l0): point = 455
   Insn 144(l0): point = 457
   Insn 143(l0): point = 459
   Insn 142(l0): point = 461
   Insn 141(l0): point = 463
   Insn 140(l0): point = 465
   Insn 139(l0): point = 467
   Insn 138(l0): point = 469
   Insn 137(l0): point = 471
   Insn 136(l0): point = 473
   Insn 135(l0): point = 475
   Insn 134(l0): point = 477
   Insn 133(l0): point = 479
   Insn 132(l0): point = 481
   Insn 131(l0): point = 483
   Insn 130(l0): point = 485
   Insn 129(l0): point = 487
   Insn 128(l0): point = 489
   Insn 127(l0): point = 491
   Insn 126(l0): point = 493
   Insn 125(l0): point = 495
   Insn 124(l0): point = 497
   Insn 123(l0): point = 499
   Insn 122(l0): point = 501
   Insn 121(l0): point = 503
   Insn 120(l0): point = 505
   Insn 119(l0): point = 507
   Insn 118(l0): point = 509
   Insn 117(l0): point = 511
   Insn 116(l0): point = 513
   Insn 115(l0): point = 515
   Insn 114(l0): point = 517
   Insn 113(l0): point = 519
   Insn 112(l0): point = 521
   Insn 111(l0): point = 523
   Insn 110(l0): point = 525
   Insn 109(l0): point = 527
   Insn 108(l0): point = 529
   Insn 107(l0): point = 531
   Insn 106(l0): point = 533
   Insn 105(l0): point = 535
   Insn 104(l0): point = 537
   Insn 103(l0): point = 539
   Insn 102(l0): point = 541
   Insn 101(l0): point = 543
   Insn 100(l0): point = 545
   Insn 99(l0): point = 547
   Insn 98(l0): point = 549
   Insn 97(l0): point = 551
   Insn 96(l0): point = 553
   Insn 95(l0): point = 555
   Insn 94(l0): point = 557
   Insn 93(l0): point = 559
   Insn 92(l0): point = 561
   Insn 91(l0): point = 563
   Insn 90(l0): point = 565
   Insn 89(l0): point = 567
   Insn 88(l0): point = 569
   Insn 87(l0): point = 571
   Insn 86(l0): point = 573
   Insn 85(l0): point = 575
   Insn 84(l0): point = 577
   Insn 83(l0): point = 579
   Insn 82(l0): point = 581
   Insn 81(l0): point = 583
   Insn 80(l0): point = 585
   Insn 79(l0): point = 587
   Insn 78(l0): point = 589
   Insn 77(l0): point = 591
   Insn 76(l0): point = 593
   Insn 75(l0): point = 595
   Insn 74(l0): point = 597
   Insn 73(l0): point = 599
   Insn 72(l0): point = 601
   Insn 71(l0): point = 603
   Insn 70(l0): point = 605
   Insn 69(l0): point = 607
   Insn 68(l0): point = 609
   Insn 67(l0): point = 611
   Insn 66(l0): point = 613
   Insn 65(l0): point = 615
   Insn 64(l0): point = 617
   Insn 63(l0): point = 619
   Insn 62(l0): point = 621
   Insn 61(l0): point = 623
   Insn 60(l0): point = 625
   Insn 59(l0): point = 627
   Insn 58(l0): point = 629
   Insn 57(l0): point = 631
   Insn 56(l0): point = 633
   Insn 55(l0): point = 635
   Insn 54(l0): point = 637
   Insn 53(l0): point = 639
   Insn 52(l0): point = 641
   Insn 51(l0): point = 643
   Insn 50(l0): point = 645
   Insn 49(l0): point = 647
   Insn 48(l0): point = 649
   Insn 47(l0): point = 651
   Insn 46(l0): point = 653
   Insn 45(l0): point = 655
   Insn 44(l0): point = 657
   Insn 43(l0): point = 659
   Insn 35(l0): point = 662
   Insn 34(l0): point = 664
   Insn 33(l0): point = 666
   Insn 32(l0): point = 668
   Insn 31(l0): point = 670
   Insn 30(l0): point = 672
   Insn 29(l0): point = 674
   Insn 28(l0): point = 676
   Insn 27(l0): point = 678
   Insn 26(l0): point = 680
   Insn 25(l0): point = 682
   Insn 24(l0): point = 684
   Insn 23(l0): point = 686
   Insn 22(l0): point = 688
   Insn 21(l0): point = 690
   Insn 20(l0): point = 692
   Insn 19(l0): point = 694
   Insn 18(l0): point = 696
   Insn 17(l0): point = 698
   Insn 16(l0): point = 700
   Insn 15(l0): point = 702
   Insn 14(l0): point = 704
   Insn 13(l0): point = 706
   Insn 12(l0): point = 708
   Insn 11(l0): point = 710
   Insn 10(l0): point = 712
   Insn 6(l0): point = 714
   Insn 5(l0): point = 716
   Insn 4(l0): point = 718
   Insn 3(l0): point = 720
   Insn 2(l0): point = 722
 a0(r259): [3..4]
 a1(r258): [5..6]
 a2(r253): [26..41]
 a3(r257): [26..27]
 a4(r256): [28..29]
 a5(r254): [28..39]
 a6(r255): [30..31]
 a7(r355): [36..37]
 a8(r354): [42..43]
 a9(r252): [42..45]
 a10(r251): [46..47]
 a11(r250): [48..49]
 a12(r353): [50..51]
 a13(r245): [54..69]
 a14(r249): [54..55]
 a15(r248): [56..57]
 a16(r246): [56..67]
 a17(r247): [58..59]
 a18(r352): [64..65]
 a19(r351): [70..71]
 a20(r244): [70..73]
 a21(r243): [74..75]
 a22(r350): [76..77]
 a23(r238): [80..95]
 a24(r242): [80..81]
 a25(r241): [82..83]
 a26(r239): [82..93]
 a27(r240): [84..85]
 a28(r349): [90..91]
 a29(r348): [96..97]
 a30(r237): [96..99]
 a31(r236): [100..101]
 a32(r235): [102..103]
 a33(r347): [104..105]
 a34(r230): [108..123]
 a35(r234): [108..109]
 a36(r233): [110..111]
 a37(r231): [110..121]
 a38(r232): [112..113]
 a39(r346): [118..119]
 a40(r345): [124..125]
 a41(r229): [124..127]
 a42(r228): [128..129]
 a43(r344): [130..131]
 a44(r342): [134..135]
 a45(r343): [136..137]
 a46(r340): [140..141]
 a47(r341): [142..143]
 a48(r223): [149..164]
 a49(r227): [149..150]
 a50(r226): [151..152]
 a51(r224): [151..162]
 a52(r225): [153..154]
 a53(r339): [159..160]
 a54(r338): [165..166]
 a55(r222): [165..168]
 a56(r221): [169..170]
 a57(r220): [171..172]
 a58(r337): [173..174]
 a59(r215): [177..192]
 a60(r219): [177..178]
 a61(r218): [179..180]
 a62(r216): [179..190]
 a63(r217): [181..182]
 a64(r336): [187..188]
 a65(r335): [193..194]
 a66(r214): [193..196]
 a67(r213): [197..198]
 a68(r334): [199..200]
 a69(r332): [203..204]
 a70(r333): [205..206]
 a71(r330): [210..211]
 a72(r331): [212..213]
 a73(r329): [219..220]
 a74(r328): [226..227]
 a75(r208): [230..245]
 a76(r212): [230..231]
 a77(r211): [232..233]
 a78(r209): [232..243]
 a79(r210): [234..235]
 a80(r327): [240..241]
 a81(r326): [246..247]
 a82(r207): [246..249]
 a83(r206): [250..251]
 a84(r205): [252..253]
 a85(r325): [254..255]
 a86(r200): [258..273]
 a87(r204): [258..259]
 a88(r203): [260..261]
 a89(r201): [260..271]
 a90(r202): [262..263]
 a91(r324): [268..269]
 a92(r323): [274..275]
 a93(r199): [274..277]
 a94(r198): [278..279]
 a95(r322): [280..281]
 a96(r320): [284..285]
 a97(r321): [286..287]
 a98(r318): [291..292]
 a99(r319): [293..294]
 a100(r317): [300..301]
 a101(r316): [307..308]
 a102(r315): [311..312]
 a103(r197): [317..320]
 a104(r191): [319..336]
 a105(r196): [321..322]
 a106(r195): [323..324]
 a107(r314): [325..326]
 a108(r194): [325..328]
 a109(r193): [329..330]
 a110(r192): [331..332]
 a111(r313): [333..334]
 a112(r190): [337..338]
 a113(r189): [339..340]
 a114(r312): [341..342]
 a115(r188): [341..344]
 a116(r187): [345..346]
 a117(r311): [347..348]
 a118(r310): [351..352]
 a119(r186): [357..358]
 a120(r185): [359..360]
 a121(r172): [359..394]
 a122(r184): [361..362]
 a123(r178): [361..378]
 a124(r183): [363..364]
 a125(r182): [365..366]
 a126(r309): [367..368]
 a127(r181): [367..370]
 a128(r180): [371..372]
 a129(r179): [373..374]
 a130(r308): [375..376]
 a131(r177): [379..380]
 a132(r176): [381..382]
 a133(r307): [383..384]
 a134(r175): [383..386]
 a135(r174): [387..388]
 a136(r173): [389..390]
 a137(r306): [391..392]
 a138(r171): [395..396]
 a139(r166): [395..410]
 a140(r170): [397..398]
 a141(r169): [399..400]
 a142(r305): [401..402]
 a143(r168): [401..404]
 a144(r167): [405..406]
 a145(r304): [407..408]
 a146(r165): [411..412]
 a147(r164): [413..414]
 a148(r303): [415..416]
 a149(r163): [415..418]
 a150(r162): [419..420]
 a151(r302): [421..422]
 a152(r161): [428..429]
 a153(r301): [430..431]
 a154(r300): [434..435]
 a155(r160): [440..443]
 a156(r154): [442..459]
 a157(r159): [444..445]
 a158(r158): [446..447]
 a159(r299): [448..449]
 a160(r157): [448..451]
 a161(r156): [452..453]
 a162(r155): [454..455]
 a163(r298): [456..457]
 a164(r153): [460..461]
 a165(r152): [462..463]
 a166(r297): [464..465]
 a167(r151): [464..467]
 a168(r150): [468..469]
 a169(r296): [470..471]
 a170(r295): [474..475]
 a171(r149): [480..481]
 a172(r148): [482..483]
 a173(r135): [482..517]
 a174(r147): [484..485]
 a175(r141): [484..501]
 a176(r146): [486..487]
 a177(r145): [488..489]
 a178(r294): [490..491]
 a179(r144): [490..493]
 a180(r143): [494..495]
 a181(r142): [496..497]
 a182(r293): [498..499]
 a183(r140): [502..503]
 a184(r139): [504..505]
 a185(r292): [506..507]
 a186(r138): [506..509]
 a187(r137): [510..511]
 a188(r136): [512..513]
 a189(r291): [514..515]
 a190(r134): [518..519]
 a191(r129): [518..533]
 a192(r133): [520..521]
 a193(r132): [522..523]
 a194(r290): [524..525]
 a195(r131): [524..527]
 a196(r130): [528..529]
 a197(r289): [530..531]
 a198(r128): [534..535]
 a199(r127): [536..537]
 a200(r288): [538..539]
 a201(r126): [538..541]
 a202(r125): [542..543]
 a203(r287): [544..545]
 a204(r286): [548..549]
 a205(r124): [554..557]
 a206(r118): [556..573]
 a207(r123): [558..559]
 a208(r122): [560..561]
 a209(r285): [562..563]
 a210(r121): [562..565]
 a211(r120): [566..567]
 a212(r119): [568..569]
 a213(r284): [570..571]
 a214(r117): [574..575]
 a215(r116): [576..577]
 a216(r283): [578..579]
 a217(r115): [578..581]
 a218(r114): [582..583]
 a219(r282): [584..585]
 a220(r281): [588..589]
 a221(r113): [594..595]
 a222(r112): [596..597]
 a223(r99): [596..631]
 a224(r111): [598..599]
 a225(r105): [598..615]
 a226(r110): [600..601]
 a227(r109): [602..603]
 a228(r280): [604..605]
 a229(r108): [604..607]
 a230(r107): [608..609]
 a231(r106): [610..611]
 a232(r279): [612..613]
 a233(r104): [616..617]
 a234(r103): [618..619]
 a235(r278): [620..621]
 a236(r102): [620..623]
 a237(r101): [624..625]
 a238(r100): [626..627]
 a239(r277): [628..629]
 a240(r98): [632..633]
 a241(r93): [632..647]
 a242(r97): [634..635]
 a243(r96): [636..637]
 a244(r276): [638..639]
 a245(r95): [638..641]
 a246(r94): [642..643]
 a247(r275): [644..645]
 a248(r92): [648..649]
 a249(r91): [650..651]
 a250(r274): [652..653]
 a251(r90): [652..655]
 a252(r89): [656..657]
 a253(r273): [658..659]
 a254(r88): [12..13]
 a255(r87): [14..15]
 a256(r272): [16..17]
 a257(r271): [665..666]
 a258(r270): [669..670]
 a259(r269): [673..674]
 a260(r268): [677..678]
 a261(r267): [681..682]
 a262(r266): [685..686]
 a263(r265): [689..690]
 a264(r264): [693..694]
 a265(r263): [697..698]
 a266(r262): [701..702]
 a267(r261): [705..706]
 a268(r260): [709..710]
Compressing live ranges: from 725 to 430 - 59%
Ranges after the compression:
 a0(r259): [0..1]
 a1(r258): [2..3]
 a2(r253): [10..17]
 a3(r257): [10..11]
 a4(r256): [12..13]
 a5(r254): [12..17]
 a6(r255): [14..15]
 a7(r355): [16..17]
 a8(r354): [18..19]
 a9(r252): [18..19]
 a10(r251): [20..21]
 a11(r250): [22..23]
 a12(r353): [24..25]
 a13(r245): [26..33]
 a14(r249): [26..27]
 a15(r248): [28..29]
 a16(r246): [28..33]
 a17(r247): [30..31]
 a18(r352): [32..33]
 a19(r351): [34..35]
 a20(r244): [34..35]
 a21(r243): [36..37]
 a22(r350): [38..39]
 a23(r238): [40..47]
 a24(r242): [40..41]
 a25(r241): [42..43]
 a26(r239): [42..47]
 a27(r240): [44..45]
 a28(r349): [46..47]
 a29(r348): [48..49]
 a30(r237): [48..49]
 a31(r236): [50..51]
 a32(r235): [52..53]
 a33(r347): [54..55]
 a34(r230): [56..63]
 a35(r234): [56..57]
 a36(r233): [58..59]
 a37(r231): [58..63]
 a38(r232): [60..61]
 a39(r346): [62..63]
 a40(r345): [64..65]
 a41(r229): [64..65]
 a42(r228): [66..67]
 a43(r344): [68..69]
 a44(r342): [70..71]
 a45(r343): [72..73]
 a46(r340): [74..75]
 a47(r341): [76..77]
 a48(r223): [78..85]
 a49(r227): [78..79]
 a50(r226): [80..81]
 a51(r224): [80..85]
 a52(r225): [82..83]
 a53(r339): [84..85]
 a54(r338): [86..87]
 a55(r222): [86..87]
 a56(r221): [88..89]
 a57(r220): [90..91]
 a58(r337): [92..93]
 a59(r215): [94..101]
 a60(r219): [94..95]
 a61(r218): [96..97]
 a62(r216): [96..101]
 a63(r217): [98..99]
 a64(r336): [100..101]
 a65(r335): [102..103]
 a66(r214): [102..103]
 a67(r213): [104..105]
 a68(r334): [106..107]
 a69(r332): [108..109]
 a70(r333): [110..111]
 a71(r330): [112..113]
 a72(r331): [114..115]
 a73(r329): [116..117]
 a74(r328): [118..119]
 a75(r208): [120..127]
 a76(r212): [120..121]
 a77(r211): [122..123]
 a78(r209): [122..127]
 a79(r210): [124..125]
 a80(r327): [126..127]
 a81(r326): [128..129]
 a82(r207): [128..129]
 a83(r206): [130..131]
 a84(r205): [132..133]
 a85(r325): [134..135]
 a86(r200): [136..143]
 a87(r204): [136..137]
 a88(r203): [138..139]
 a89(r201): [138..143]
 a90(r202): [140..141]
 a91(r324): [142..143]
 a92(r323): [144..145]
 a93(r199): [144..145]
 a94(r198): [146..147]
 a95(r322): [148..149]
 a96(r320): [150..151]
 a97(r321): [152..153]
 a98(r318): [154..155]
 a99(r319): [156..157]
 a100(r317): [158..159]
 a101(r316): [160..161]
 a102(r315): [162..163]
 a103(r197): [164..165]
 a104(r191): [164..177]
 a105(r196): [166..167]
 a106(r195): [168..169]
 a107(r314): [170..171]
 a108(r194): [170..171]
 a109(r193): [172..173]
 a110(r192): [174..175]
 a111(r313): [176..177]
 a112(r190): [178..179]
 a113(r189): [180..181]
 a114(r312): [182..183]
 a115(r188): [182..183]
 a116(r187): [184..185]
 a117(r311): [186..187]
 a118(r310): [188..189]
 a119(r186): [190..191]
 a120(r185): [192..193]
 a121(r172): [192..219]
 a122(r184): [194..195]
 a123(r178): [194..207]
 a124(r183): [196..197]
 a125(r182): [198..199]
 a126(r309): [200..201]
 a127(r181): [200..201]
 a128(r180): [202..203]
 a129(r179): [204..205]
 a130(r308): [206..207]
 a131(r177): [208..209]
 a132(r176): [210..211]
 a133(r307): [212..213]
 a134(r175): [212..213]
 a135(r174): [214..215]
 a136(r173): [216..217]
 a137(r306): [218..219]
 a138(r171): [220..221]
 a139(r166): [220..231]
 a140(r170): [222..223]
 a141(r169): [224..225]
 a142(r305): [226..227]
 a143(r168): [226..227]
 a144(r167): [228..229]
 a145(r304): [230..231]
 a146(r165): [232..233]
 a147(r164): [234..235]
 a148(r303): [236..237]
 a149(r163): [236..237]
 a150(r162): [238..239]
 a151(r302): [240..241]
 a152(r161): [242..243]
 a153(r301): [244..245]
 a154(r300): [246..247]
 a155(r160): [248..249]
 a156(r154): [248..261]
 a157(r159): [250..251]
 a158(r158): [252..253]
 a159(r299): [254..255]
 a160(r157): [254..255]
 a161(r156): [256..257]
 a162(r155): [258..259]
 a163(r298): [260..261]
 a164(r153): [262..263]
 a165(r152): [264..265]
 a166(r297): [266..267]
 a167(r151): [266..267]
 a168(r150): [268..269]
 a169(r296): [270..271]
 a170(r295): [272..273]
 a171(r149): [274..275]
 a172(r148): [276..277]
 a173(r135): [276..303]
 a174(r147): [278..279]
 a175(r141): [278..291]
 a176(r146): [280..281]
 a177(r145): [282..283]
 a178(r294): [284..285]
 a179(r144): [284..285]
 a180(r143): [286..287]
 a181(r142): [288..289]
 a182(r293): [290..291]
 a183(r140): [292..293]
 a184(r139): [294..295]
 a185(r292): [296..297]
 a186(r138): [296..297]
 a187(r137): [298..299]
 a188(r136): [300..301]
 a189(r291): [302..303]
 a190(r134): [304..305]
 a191(r129): [304..315]
 a192(r133): [306..307]
 a193(r132): [308..309]
 a194(r290): [310..311]
 a195(r131): [310..311]
 a196(r130): [312..313]
 a197(r289): [314..315]
 a198(r128): [316..317]
 a199(r127): [318..319]
 a200(r288): [320..321]
 a201(r126): [320..321]
 a202(r125): [322..323]
 a203(r287): [324..325]
 a204(r286): [326..327]
 a205(r124): [328..329]
 a206(r118): [328..341]
 a207(r123): [330..331]
 a208(r122): [332..333]
 a209(r285): [334..335]
 a210(r121): [334..335]
 a211(r120): [336..337]
 a212(r119): [338..339]
 a213(r284): [340..341]
 a214(r117): [342..343]
 a215(r116): [344..345]
 a216(r283): [346..347]
 a217(r115): [346..347]
 a218(r114): [348..349]
 a219(r282): [350..351]
 a220(r281): [352..353]
 a221(r113): [354..355]
 a222(r112): [356..357]
 a223(r99): [356..383]
 a224(r111): [358..359]
 a225(r105): [358..371]
 a226(r110): [360..361]
 a227(r109): [362..363]
 a228(r280): [364..365]
 a229(r108): [364..365]
 a230(r107): [366..367]
 a231(r106): [368..369]
 a232(r279): [370..371]
 a233(r104): [372..373]
 a234(r103): [374..375]
 a235(r278): [376..377]
 a236(r102): [376..377]
 a237(r101): [378..379]
 a238(r100): [380..381]
 a239(r277): [382..383]
 a240(r98): [384..385]
 a241(r93): [384..395]
 a242(r97): [386..387]
 a243(r96): [388..389]
 a244(r276): [390..391]
 a245(r95): [390..391]
 a246(r94): [392..393]
 a247(r275): [394..395]
 a248(r92): [396..397]
 a249(r91): [398..399]
 a250(r274): [400..401]
 a251(r90): [400..401]
 a252(r89): [402..403]
 a253(r273): [404..405]
 a254(r88): [4..5]
 a255(r87): [6..7]
 a256(r272): [8..9]
 a257(r271): [406..407]
 a258(r270): [408..409]
 a259(r269): [410..411]
 a260(r268): [412..413]
 a261(r267): [414..415]
 a262(r266): [416..417]
 a263(r265): [418..419]
 a264(r264): [420..421]
 a265(r263): [422..423]
 a266(r262): [424..425]
 a267(r261): [426..427]
 a268(r260): [428..429]
  pref0:a7(r355)<-hr21@1
  pref1:a18(r352)<-hr21@1
  pref2:a28(r349)<-hr21@1
  pref3:a39(r346)<-hr21@1
  pref4:a53(r339)<-hr21@1
  pref5:a64(r336)<-hr21@1
  pref6:a80(r327)<-hr21@1
  pref7:a91(r324)<-hr21@1
  pref8:a102(r315)<-hr21@1
  pref9:a118(r310)<-hr21@1
  pref10:a154(r300)<-hr21@1
  pref11:a170(r295)<-hr21@1
  pref12:a204(r286)<-hr21@1
  pref13:a220(r281)<-hr21@1
  regions=1, blocks=15, points=430
    allocnos=269 (big 0), copies=0, conflicts=0, ranges=269
Disposition:
  255:r87  l0     0  254:r88  l0     0  252:r89  l0     0  251:r90  l0     1
  249:r91  l0     0  248:r92  l0    21  241:r93  l0    22  246:r94  l0     0
  245:r95  l0     1  243:r96  l0     0  242:r97  l0    21  240:r98  l0    21
  223:r99  l0    22  238:r100 l0     0  237:r101 l0     0  236:r102 l0     1
  234:r103 l0     0  233:r104 l0    21  225:r105 l0    23  231:r106 l0     0
  230:r107 l0     0  229:r108 l0     1  227:r109 l0     0  226:r110 l0    21
  224:r111 l0    21  222:r112 l0    21  221:r113 l0    21  218:r114 l0     0
  217:r115 l0     1  215:r116 l0     0  214:r117 l0    21  206:r118 l0    22
  212:r119 l0     0  211:r120 l0     0  210:r121 l0     1  208:r122 l0     0
  207:r123 l0    21  205:r124 l0    21  202:r125 l0     0  201:r126 l0     1
  199:r127 l0     0  198:r128 l0    21  191:r129 l0    22  196:r130 l0     0
  195:r131 l0     1  193:r132 l0     0  192:r133 l0    21  190:r134 l0    21
  173:r135 l0    22  188:r136 l0     0  187:r137 l0     0  186:r138 l0     1
  184:r139 l0     0  183:r140 l0    21  175:r141 l0    23  181:r142 l0     0
  180:r143 l0     0  179:r144 l0     1  177:r145 l0     0  176:r146 l0    21
  174:r147 l0    21  172:r148 l0    21  171:r149 l0    21  168:r150 l0     0
  167:r151 l0     1  165:r152 l0     0  164:r153 l0    21  156:r154 l0    22
  162:r155 l0     0  161:r156 l0     0  160:r157 l0     1  158:r158 l0     0
  157:r159 l0    21  155:r160 l0    21  152:r161 l0     0  150:r162 l0     0
  149:r163 l0     1  147:r164 l0     0  146:r165 l0    21  139:r166 l0    22
  144:r167 l0     0  143:r168 l0     1  141:r169 l0     0  140:r170 l0    21
  138:r171 l0    21  121:r172 l0    22  136:r173 l0     0  135:r174 l0     0
  134:r175 l0     1  132:r176 l0     0  131:r177 l0    21  123:r178 l0    23
  129:r179 l0     0  128:r180 l0     0  127:r181 l0     1  125:r182 l0     0
  124:r183 l0    21  122:r184 l0    21  120:r185 l0    21  119:r186 l0    21
  116:r187 l0     0  115:r188 l0     1  113:r189 l0     0  112:r190 l0    21
  104:r191 l0    22  110:r192 l0     0  109:r193 l0     0  108:r194 l0     1
  106:r195 l0     0  105:r196 l0    21  103:r197 l0    21   94:r198 l0     0
   93:r199 l0     1   86:r200 l0     3   89:r201 l0   mem   90:r202 l0    21
   88:r203 l0    21   87:r204 l0    21   84:r205 l0     0   83:r206 l0     0
   82:r207 l0     1   75:r208 l0     3   78:r209 l0   mem   79:r210 l0    21
   77:r211 l0    21   76:r212 l0    21   67:r213 l0     0   66:r214 l0     1
   59:r215 l0     3   62:r216 l0   mem   63:r217 l0    21   61:r218 l0    21
   60:r219 l0    21   57:r220 l0     0   56:r221 l0     0   55:r222 l0     1
   48:r223 l0     3   51:r224 l0   mem   52:r225 l0    21   50:r226 l0    21
   49:r227 l0    21   42:r228 l0     0   41:r229 l0     1   34:r230 l0     3
   37:r231 l0   mem   38:r232 l0    21   36:r233 l0    21   35:r234 l0    21
   32:r235 l0     0   31:r236 l0     0   30:r237 l0     1   23:r238 l0     3
   26:r239 l0   mem   27:r240 l0    21   25:r241 l0    21   24:r242 l0    21
   21:r243 l0     0   20:r244 l0     1   13:r245 l0     3   16:r246 l0   mem
   17:r247 l0    21   15:r248 l0    21   14:r249 l0    21   11:r250 l0     0
   10:r251 l0     0    9:r252 l0     1    2:r253 l0     3    5:r254 l0   mem
    6:r255 l0    21    4:r256 l0    21    3:r257 l0    21    1:r258 l0     0
    0:r259 l0     0  268:r260 l0    21  267:r261 l0    21  266:r262 l0    21
  265:r263 l0    21  264:r264 l0    21  263:r265 l0    21  262:r266 l0    21
  261:r267 l0    21  260:r268 l0    21  259:r269 l0    21  258:r270 l0    21
  257:r271 l0    21  256:r272 l0     0  253:r273 l0     0  250:r274 l0     0
  247:r275 l0     0  244:r276 l0     0  239:r277 l0     0  235:r278 l0     0
  232:r279 l0     0  228:r280 l0     0  220:r281 l0     0  219:r282 l0     0
  216:r283 l0     0  213:r284 l0     0  209:r285 l0     0  204:r286 l0     0
  203:r287 l0     0  200:r288 l0     0  197:r289 l0     0  194:r290 l0     0
  189:r291 l0     0  185:r292 l0     0  182:r293 l0     0  178:r294 l0     0
  170:r295 l0     0  169:r296 l0     0  166:r297 l0     0  163:r298 l0     0
  159:r299 l0     0  154:r300 l0     0  153:r301 l0     0  151:r302 l0     0
  148:r303 l0     0  145:r304 l0     0  142:r305 l0     0  137:r306 l0     0
  133:r307 l0     0  130:r308 l0     0  126:r309 l0     0  118:r310 l0     0
  117:r311 l0     0  114:r312 l0     0  111:r313 l0     0  107:r314 l0     0
  102:r315 l0     0  101:r316 l0    21  100:r317 l0    21   98:r318 l0    21
   99:r319 l0    21   96:r320 l0    21   97:r321 l0    21   95:r322 l0     0
   92:r323 l0     0   91:r324 l0     0   85:r325 l0     0   81:r326 l0     0
   80:r327 l0     0   74:r328 l0    21   73:r329 l0    21   71:r330 l0    21
   72:r331 l0    21   69:r332 l0    21   70:r333 l0    21   68:r334 l0     0
   65:r335 l0     0   64:r336 l0     0   58:r337 l0     0   54:r338 l0     0
   53:r339 l0     0   46:r340 l0    21   47:r341 l0    21   44:r342 l0    21
   45:r343 l0    21   43:r344 l0     0   40:r345 l0     0   39:r346 l0     0
   33:r347 l0     0   29:r348 l0     0   28:r349 l0     0   22:r350 l0     0
   19:r351 l0     0   18:r352 l0     0   12:r353 l0     0    8:r354 l0     0
    7:r355 l0     0
+++Costs: overall 91, reg -29, mem 120, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int quecc(float*, float*, float*, Procpar_info*, Preprocess*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8]
;;  ref usage 	r0={16d,2u} r1={15d,1u} r2={15d,1u} r4={15d,1u} r5={15d,1u} r6={1d,14u} r7={1d,28u} r8={14d} r9={14d} r10={14d} r11={14d} r12={14d} r13={14d} r14={14d} r15={14d} r16={1d,13u} r17={85d,4u} r18={14d} r19={14d} r20={1d,135u,26e} r21={29d,28u} r22={18d,3u} r23={15d} r24={15d} r25={15d} r26={15d} r27={15d} r28={15d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={15d,1u} r38={15d} r39={14d} r40={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u,1e} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u,1e} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u,1e} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u,1e} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1e} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1e} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u,1e} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u,1e} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u,1e} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u,1e} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u,1e} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u,1e} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u,1e} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u,1e} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u,1e} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u,1e} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u,1e} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u,1e} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u,1e} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} 
;;    total ref usage 1938{1385d,501u,52e} in 356{342 regular + 14 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 260 261 262 263 264 265 266 267 268 269 270 271
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
        (reg:DI 5 di [ sup_data ])) ge2fitman_preproc.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ sup_data ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
        (reg:DI 4 si [ unsup_data ])) ge2fitman_preproc.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ unsup_data ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
        (reg:DI 1 dx [ scratch ])) ge2fitman_preproc.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ scratch ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 procpar_info+0 S8 A64])
        (reg:DI 2 cx [ procpar_info ])) ge2fitman_preproc.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ procpar_info ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 preprocess+0 S8 A64])
        (reg:DI 37 r8 [ preprocess ])) ge2fitman_preproc.cpp:436 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ preprocess ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:438 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DF 260)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 260)) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 260)
        (nil)))
(insn 13 12 14 2 (set (reg:DF 261)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 261)) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 261)
        (nil)))
(insn 15 14 16 2 (set (reg:DF 262)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 262)) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 262)
        (nil)))
(insn 17 16 18 2 (set (reg:DF 263)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 263)) ge2fitman_preproc.cpp:439 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 263)
        (nil)))
(insn 19 18 20 2 (set (reg:DF 264)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])
        (reg:DF 264)) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 264)
        (nil)))
(insn 21 20 22 2 (set (reg:DF 265)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 265)) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 265)
        (nil)))
(insn 23 22 24 2 (set (reg:DF 266)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 266)) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 266)
        (nil)))
(insn 25 24 26 2 (set (reg:DF 267)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (nil))
(insn 26 25 27 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 267)) ge2fitman_preproc.cpp:440 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 267)
        (nil)))
(insn 27 26 28 2 (set (reg:DF 268)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:441 128 {*movdf_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 268)) ge2fitman_preproc.cpp:441 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 268)
        (nil)))
(insn 29 28 30 2 (set (reg:DF 269)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:441 128 {*movdf_internal}
     (nil))
(insn 30 29 31 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 269)) ge2fitman_preproc.cpp:441 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 269)
        (nil)))
(insn 31 30 32 2 (set (reg:DF 270)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:442 128 {*movdf_internal}
     (nil))
(insn 32 31 33 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 270)) ge2fitman_preproc.cpp:442 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 270)
        (nil)))
(insn 33 32 34 2 (set (reg:DF 271)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:442 128 {*movdf_internal}
     (nil))
(insn 34 33 35 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 271)) ge2fitman_preproc.cpp:442 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 271)
        (nil)))
(insn 35 34 382 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_preproc.cpp:444 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              13 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 272
(code_label 382 35 36 3 110 "" [1 uses])
(note 36 382 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 3 (set (reg/f:DI 272)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [0 procpar_info+0 S8 A64])) ge2fitman_preproc.cpp:444 89 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (reg:SI 87 [ D.26049 ])
        (mem/j:SI (plus:DI (reg/f:DI 272)
                (const_int 324 [0x144])) [0 procpar_info_21(D)->num_points+0 S4 A32])) ge2fitman_preproc.cpp:444 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 272)
        (nil)))
(insn 39 38 40 3 (parallel [
            (set (reg:SI 88 [ D.26049 ])
                (ashift:SI (reg:SI 87 [ D.26049 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:444 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.26049 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88 [ D.26049 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:444 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.26049 ])
        (nil)))
(jump_insn 41 40 42 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) ge2fitman_preproc.cpp:444 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 385)
;;  succ:       14
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:447 90 {*movsi_internal}
     (nil))
(insn 44 43 45 4 (set (reg:DI 89 [ D.26050 ])
        (sign_extend:DI (reg:SI 273))) ge2fitman_preproc.cpp:447 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 45 44 46 4 (parallel [
            (set (reg:DI 90 [ D.26050 ])
                (ashift:DI (reg:DI 89 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:447 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 4 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:447 89 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg/f:DI 91 [ D.26051 ])
                (plus:DI (reg:DI 90 [ D.26050 ])
                    (reg/f:DI 274)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:447 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 274)
        (expr_list:REG_DEAD (reg:DI 90 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 90 [ D.26050 ]))
                    (nil))))))
(insn 48 47 49 4 (set (reg:SF 92 [ D.26052 ])
        (mem:SF (reg/f:DI 91 [ D.26051 ]) [0 *_27+0 S4 A32])) ge2fitman_preproc.cpp:447 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.26051 ])
        (nil)))
(insn 49 48 50 4 (set (reg:DF 93 [ D.26053 ])
        (float_extend:DF (reg:SF 92 [ D.26052 ]))) ge2fitman_preproc.cpp:447 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 92 [ D.26052 ])
        (nil)))
(insn 50 49 51 4 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:447 90 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 94 [ D.26050 ])
        (sign_extend:DI (reg:SI 275))) ge2fitman_preproc.cpp:447 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 95 [ D.26050 ])
                (ashift:DI (reg:DI 94 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:447 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 4 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:447 89 {*movdi_internal}
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg/f:DI 96 [ D.26051 ])
                (plus:DI (reg:DI 95 [ D.26050 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:447 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:DI 95 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 95 [ D.26050 ]))
                    (nil))))))
(insn 55 54 56 4 (set (reg:SF 97 [ D.26052 ])
        (mem:SF (reg/f:DI 96 [ D.26051 ]) [0 *_32+0 S4 A32])) ge2fitman_preproc.cpp:447 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.26051 ])
        (nil)))
(insn 56 55 57 4 (set (reg:DF 98 [ D.26053 ])
        (float_extend:DF (reg:SF 97 [ D.26052 ]))) ge2fitman_preproc.cpp:447 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 97 [ D.26052 ])
        (nil)))
(insn 57 56 58 4 (set (reg:DF 99 [ D.26053 ])
        (mult:DF (reg:DF 93 [ D.26053 ])
            (reg:DF 98 [ D.26053 ]))) ge2fitman_preproc.cpp:447 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 98 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 93 [ D.26053 ])
            (nil))))
(insn 58 57 59 4 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:448 90 {*movsi_internal}
     (nil))
(insn 59 58 60 4 (set (reg:DI 100 [ D.26054 ])
        (sign_extend:DI (reg:SI 277))) ge2fitman_preproc.cpp:448 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 277)
        (nil)))
(insn 60 59 61 4 (parallel [
            (set (reg:DI 101 [ D.26054 ])
                (plus:DI (reg:DI 100 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 4 (parallel [
            (set (reg:DI 102 [ D.26054 ])
                (ashift:DI (reg:DI 101 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 101 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 4 (set (reg/f:DI 278)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:448 89 {*movdi_internal}
     (nil))
(insn 63 62 64 4 (parallel [
            (set (reg/f:DI 103 [ D.26051 ])
                (plus:DI (reg:DI 102 [ D.26054 ])
                    (reg/f:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 278)
        (expr_list:REG_DEAD (reg:DI 102 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 102 [ D.26054 ]))
                    (nil))))))
(insn 64 63 65 4 (set (reg:SF 104 [ D.26052 ])
        (mem:SF (reg/f:DI 103 [ D.26051 ]) [0 *_39+0 S4 A32])) ge2fitman_preproc.cpp:448 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.26051 ])
        (nil)))
(insn 65 64 66 4 (set (reg:DF 105 [ D.26053 ])
        (float_extend:DF (reg:SF 104 [ D.26052 ]))) ge2fitman_preproc.cpp:448 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 104 [ D.26052 ])
        (nil)))
(insn 66 65 67 4 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:448 90 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:DI 106 [ D.26054 ])
        (sign_extend:DI (reg:SI 279))) ge2fitman_preproc.cpp:448 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 279)
        (nil)))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 107 [ D.26054 ])
                (plus:DI (reg:DI 106 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 69 68 70 4 (parallel [
            (set (reg:DI 108 [ D.26054 ])
                (ashift:DI (reg:DI 107 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 4 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:448 89 {*movdi_internal}
     (nil))
(insn 71 70 72 4 (parallel [
            (set (reg/f:DI 109 [ D.26051 ])
                (plus:DI (reg:DI 108 [ D.26054 ])
                    (reg/f:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:448 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:DI 108 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 108 [ D.26054 ]))
                    (nil))))))
(insn 72 71 73 4 (set (reg:SF 110 [ D.26052 ])
        (mem:SF (reg/f:DI 109 [ D.26051 ]) [0 *_45+0 S4 A32])) ge2fitman_preproc.cpp:448 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.26051 ])
        (nil)))
(insn 73 72 74 4 (set (reg:DF 111 [ D.26053 ])
        (float_extend:DF (reg:SF 110 [ D.26052 ]))) ge2fitman_preproc.cpp:448 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 110 [ D.26052 ])
        (nil)))
(insn 74 73 75 4 (set (reg:DF 112 [ D.26053 ])
        (mult:DF (reg:DF 105 [ D.26053 ])
            (reg:DF 111 [ D.26053 ]))) ge2fitman_preproc.cpp:448 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 111 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 105 [ D.26053 ])
            (nil))))
(insn 75 74 76 4 (set (reg:DF 113 [ D.26053 ])
        (plus:DF (reg:DF 99 [ D.26053 ])
            (reg:DF 112 [ D.26053 ]))) ge2fitman_preproc.cpp:447 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 112 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 99 [ D.26053 ])
            (nil))))
(insn 76 75 77 4 (set (reg:DF 21 xmm0)
        (reg:DF 113 [ D.26053 ])) ge2fitman_preproc.cpp:448 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 113 [ D.26053 ])
        (nil)))
(call_insn 77 76 78 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:448 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 78 77 79 4 (set (reg:DF 281)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:448 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 79 78 80 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])
        (reg:DF 281)) ge2fitman_preproc.cpp:448 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 281)
        (nil)))
(insn 80 79 81 4 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:450 90 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg:DI 114 [ D.26050 ])
        (sign_extend:DI (reg:SI 282))) ge2fitman_preproc.cpp:450 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))
(insn 82 81 83 4 (parallel [
            (set (reg:DI 115 [ D.26050 ])
                (ashift:DI (reg:DI 114 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:450 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 83 82 84 4 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:450 89 {*movdi_internal}
     (nil))
(insn 84 83 85 4 (parallel [
            (set (reg/f:DI 116 [ D.26051 ])
                (plus:DI (reg:DI 115 [ D.26050 ])
                    (reg/f:DI 283)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:450 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 283)
        (expr_list:REG_DEAD (reg:DI 115 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 115 [ D.26050 ]))
                    (nil))))))
(insn 85 84 86 4 (set (reg:SF 117 [ D.26052 ])
        (mem:SF (reg/f:DI 116 [ D.26051 ]) [0 *_54+0 S4 A32])) ge2fitman_preproc.cpp:450 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.26051 ])
        (nil)))
(insn 86 85 87 4 (set (reg:DF 118 [ D.26053 ])
        (float_extend:DF (reg:SF 117 [ D.26052 ]))) ge2fitman_preproc.cpp:450 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 117 [ D.26052 ])
        (nil)))
(insn 87 86 88 4 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:450 90 {*movsi_internal}
     (nil))
(insn 88 87 89 4 (set (reg:DI 119 [ D.26054 ])
        (sign_extend:DI (reg:SI 284))) ge2fitman_preproc.cpp:450 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
(insn 89 88 90 4 (parallel [
            (set (reg:DI 120 [ D.26054 ])
                (plus:DI (reg:DI 119 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:450 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 4 (parallel [
            (set (reg:DI 121 [ D.26054 ])
                (ashift:DI (reg:DI 120 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:450 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 4 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:450 89 {*movdi_internal}
     (nil))
(insn 92 91 93 4 (parallel [
            (set (reg/f:DI 122 [ D.26051 ])
                (plus:DI (reg:DI 121 [ D.26054 ])
                    (reg/f:DI 285)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:450 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 285)
        (expr_list:REG_DEAD (reg:DI 121 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 121 [ D.26054 ]))
                    (nil))))))
(insn 93 92 94 4 (set (reg:SF 123 [ D.26052 ])
        (mem:SF (reg/f:DI 122 [ D.26051 ]) [0 *_60+0 S4 A32])) ge2fitman_preproc.cpp:450 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.26051 ])
        (nil)))
(insn 94 93 95 4 (set (reg:DF 124 [ D.26053 ])
        (float_extend:DF (reg:SF 123 [ D.26052 ]))) ge2fitman_preproc.cpp:450 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 123 [ D.26052 ])
        (nil)))
(insn 95 94 96 4 (set (reg:DF 22 xmm1)
        (reg:DF 118 [ D.26053 ])) ge2fitman_preproc.cpp:450 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 118 [ D.26053 ])
        (nil)))
(insn 96 95 97 4 (set (reg:DF 21 xmm0)
        (reg:DF 124 [ D.26053 ])) ge2fitman_preproc.cpp:450 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 124 [ D.26053 ])
        (nil)))
(call_insn 97 96 98 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:450 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 98 97 99 4 (set (reg:DF 286)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:450 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 99 98 100 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])
        (reg:DF 286)) ge2fitman_preproc.cpp:450 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 286)
        (nil)))
(insn 100 99 101 4 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:452 90 {*movsi_internal}
     (nil))
(insn 101 100 102 4 (set (reg:DI 125 [ D.26050 ])
        (sign_extend:DI (reg:SI 287))) ge2fitman_preproc.cpp:452 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
(insn 102 101 103 4 (parallel [
            (set (reg:DI 126 [ D.26050 ])
                (ashift:DI (reg:DI 125 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:452 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 4 (set (reg/f:DI 288)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:452 89 {*movdi_internal}
     (nil))
(insn 104 103 105 4 (parallel [
            (set (reg/f:DI 127 [ D.26051 ])
                (plus:DI (reg:DI 126 [ D.26050 ])
                    (reg/f:DI 288)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:452 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 288)
        (expr_list:REG_DEAD (reg:DI 126 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 126 [ D.26050 ]))
                    (nil))))))
(insn 105 104 106 4 (set (reg:SF 128 [ D.26052 ])
        (mem:SF (reg/f:DI 127 [ D.26051 ]) [0 *_68+0 S4 A32])) ge2fitman_preproc.cpp:452 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.26051 ])
        (nil)))
(insn 106 105 107 4 (set (reg:DF 129 [ D.26053 ])
        (float_extend:DF (reg:SF 128 [ D.26052 ]))) ge2fitman_preproc.cpp:452 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 128 [ D.26052 ])
        (nil)))
(insn 107 106 108 4 (set (reg:SI 289)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:452 90 {*movsi_internal}
     (nil))
(insn 108 107 109 4 (set (reg:DI 130 [ D.26050 ])
        (sign_extend:DI (reg:SI 289))) ge2fitman_preproc.cpp:452 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 289)
        (nil)))
(insn 109 108 110 4 (parallel [
            (set (reg:DI 131 [ D.26050 ])
                (ashift:DI (reg:DI 130 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:452 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 4 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:452 89 {*movdi_internal}
     (nil))
(insn 111 110 112 4 (parallel [
            (set (reg/f:DI 132 [ D.26051 ])
                (plus:DI (reg:DI 131 [ D.26050 ])
                    (reg/f:DI 290)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:452 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 290)
        (expr_list:REG_DEAD (reg:DI 131 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 131 [ D.26050 ]))
                    (nil))))))
(insn 112 111 113 4 (set (reg:SF 133 [ D.26052 ])
        (mem:SF (reg/f:DI 132 [ D.26051 ]) [0 *_73+0 S4 A32])) ge2fitman_preproc.cpp:452 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.26051 ])
        (nil)))
(insn 113 112 114 4 (set (reg:DF 134 [ D.26053 ])
        (float_extend:DF (reg:SF 133 [ D.26052 ]))) ge2fitman_preproc.cpp:452 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 133 [ D.26052 ])
        (nil)))
(insn 114 113 115 4 (set (reg:DF 135 [ D.26053 ])
        (mult:DF (reg:DF 129 [ D.26053 ])
            (reg:DF 134 [ D.26053 ]))) ge2fitman_preproc.cpp:452 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 134 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 129 [ D.26053 ])
            (nil))))
(insn 115 114 116 4 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:453 90 {*movsi_internal}
     (nil))
(insn 116 115 117 4 (set (reg:DI 136 [ D.26054 ])
        (sign_extend:DI (reg:SI 291))) ge2fitman_preproc.cpp:453 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 291)
        (nil)))
(insn 117 116 118 4 (parallel [
            (set (reg:DI 137 [ D.26054 ])
                (plus:DI (reg:DI 136 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 117 119 4 (parallel [
            (set (reg:DI 138 [ D.26054 ])
                (ashift:DI (reg:DI 137 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 4 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:453 89 {*movdi_internal}
     (nil))
(insn 120 119 121 4 (parallel [
            (set (reg/f:DI 139 [ D.26051 ])
                (plus:DI (reg:DI 138 [ D.26054 ])
                    (reg/f:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (expr_list:REG_DEAD (reg:DI 138 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 138 [ D.26054 ]))
                    (nil))))))
(insn 121 120 122 4 (set (reg:SF 140 [ D.26052 ])
        (mem:SF (reg/f:DI 139 [ D.26051 ]) [0 *_80+0 S4 A32])) ge2fitman_preproc.cpp:453 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.26051 ])
        (nil)))
(insn 122 121 123 4 (set (reg:DF 141 [ D.26053 ])
        (float_extend:DF (reg:SF 140 [ D.26052 ]))) ge2fitman_preproc.cpp:453 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 140 [ D.26052 ])
        (nil)))
(insn 123 122 124 4 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:453 90 {*movsi_internal}
     (nil))
(insn 124 123 125 4 (set (reg:DI 142 [ D.26054 ])
        (sign_extend:DI (reg:SI 293))) ge2fitman_preproc.cpp:453 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 293)
        (nil)))
(insn 125 124 126 4 (parallel [
            (set (reg:DI 143 [ D.26054 ])
                (plus:DI (reg:DI 142 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 4 (parallel [
            (set (reg:DI 144 [ D.26054 ])
                (ashift:DI (reg:DI 143 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 4 (set (reg/f:DI 294)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:453 89 {*movdi_internal}
     (nil))
(insn 128 127 129 4 (parallel [
            (set (reg/f:DI 145 [ D.26051 ])
                (plus:DI (reg:DI 144 [ D.26054 ])
                    (reg/f:DI 294)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:453 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 294)
        (expr_list:REG_DEAD (reg:DI 144 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 144 [ D.26054 ]))
                    (nil))))))
(insn 129 128 130 4 (set (reg:SF 146 [ D.26052 ])
        (mem:SF (reg/f:DI 145 [ D.26051 ]) [0 *_86+0 S4 A32])) ge2fitman_preproc.cpp:453 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.26051 ])
        (nil)))
(insn 130 129 131 4 (set (reg:DF 147 [ D.26053 ])
        (float_extend:DF (reg:SF 146 [ D.26052 ]))) ge2fitman_preproc.cpp:453 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 146 [ D.26052 ])
        (nil)))
(insn 131 130 132 4 (set (reg:DF 148 [ D.26053 ])
        (mult:DF (reg:DF 141 [ D.26053 ])
            (reg:DF 147 [ D.26053 ]))) ge2fitman_preproc.cpp:453 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 147 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 141 [ D.26053 ])
            (nil))))
(insn 132 131 133 4 (set (reg:DF 149 [ D.26053 ])
        (plus:DF (reg:DF 135 [ D.26053 ])
            (reg:DF 148 [ D.26053 ]))) ge2fitman_preproc.cpp:452 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 148 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 135 [ D.26053 ])
            (nil))))
(insn 133 132 134 4 (set (reg:DF 21 xmm0)
        (reg:DF 149 [ D.26053 ])) ge2fitman_preproc.cpp:453 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 149 [ D.26053 ])
        (nil)))
(call_insn 134 133 135 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:453 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 135 134 136 4 (set (reg:DF 295)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:453 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 136 135 137 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])
        (reg:DF 295)) ge2fitman_preproc.cpp:453 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 295)
        (nil)))
(insn 137 136 138 4 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:455 90 {*movsi_internal}
     (nil))
(insn 138 137 139 4 (set (reg:DI 150 [ D.26050 ])
        (sign_extend:DI (reg:SI 296))) ge2fitman_preproc.cpp:455 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 296)
        (nil)))
(insn 139 138 140 4 (parallel [
            (set (reg:DI 151 [ D.26050 ])
                (ashift:DI (reg:DI 150 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:455 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 4 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:455 89 {*movdi_internal}
     (nil))
(insn 141 140 142 4 (parallel [
            (set (reg/f:DI 152 [ D.26051 ])
                (plus:DI (reg:DI 151 [ D.26050 ])
                    (reg/f:DI 297)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:455 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 297)
        (expr_list:REG_DEAD (reg:DI 151 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 151 [ D.26050 ]))
                    (nil))))))
(insn 142 141 143 4 (set (reg:SF 153 [ D.26052 ])
        (mem:SF (reg/f:DI 152 [ D.26051 ]) [0 *_95+0 S4 A32])) ge2fitman_preproc.cpp:455 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ D.26051 ])
        (nil)))
(insn 143 142 144 4 (set (reg:DF 154 [ D.26053 ])
        (float_extend:DF (reg:SF 153 [ D.26052 ]))) ge2fitman_preproc.cpp:455 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 153 [ D.26052 ])
        (nil)))
(insn 144 143 145 4 (set (reg:SI 298)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:455 90 {*movsi_internal}
     (nil))
(insn 145 144 146 4 (set (reg:DI 155 [ D.26054 ])
        (sign_extend:DI (reg:SI 298))) ge2fitman_preproc.cpp:455 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 298)
        (nil)))
(insn 146 145 147 4 (parallel [
            (set (reg:DI 156 [ D.26054 ])
                (plus:DI (reg:DI 155 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:455 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 155 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 4 (parallel [
            (set (reg:DI 157 [ D.26054 ])
                (ashift:DI (reg:DI 156 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:455 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 4 (set (reg/f:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:455 89 {*movdi_internal}
     (nil))
(insn 149 148 150 4 (parallel [
            (set (reg/f:DI 158 [ D.26051 ])
                (plus:DI (reg:DI 157 [ D.26054 ])
                    (reg/f:DI 299)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:455 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_DEAD (reg:DI 157 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 157 [ D.26054 ]))
                    (nil))))))
(insn 150 149 151 4 (set (reg:SF 159 [ D.26052 ])
        (mem:SF (reg/f:DI 158 [ D.26051 ]) [0 *_101+0 S4 A32])) ge2fitman_preproc.cpp:455 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.26051 ])
        (nil)))
(insn 151 150 152 4 (set (reg:DF 160 [ D.26053 ])
        (float_extend:DF (reg:SF 159 [ D.26052 ]))) ge2fitman_preproc.cpp:455 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 159 [ D.26052 ])
        (nil)))
(insn 152 151 153 4 (set (reg:DF 22 xmm1)
        (reg:DF 154 [ D.26053 ])) ge2fitman_preproc.cpp:455 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 154 [ D.26053 ])
        (nil)))
(insn 153 152 154 4 (set (reg:DF 21 xmm0)
        (reg:DF 160 [ D.26053 ])) ge2fitman_preproc.cpp:455 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 160 [ D.26053 ])
        (nil)))
(call_insn 154 153 155 4 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:455 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 155 154 156 4 (set (reg:DF 300)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:455 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 156 155 157 4 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])
        (reg:DF 300)) ge2fitman_preproc.cpp:455 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 300)
        (nil)))
(insn 157 156 158 4 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -152 [0xffffffffffffff68])) [0 preprocess+0 S8 A64])) ge2fitman_preproc.cpp:457 89 {*movdi_internal}
     (nil))
(insn 158 157 159 4 (set (reg:SI 161 [ D.26049 ])
        (mem/j:SI (plus:DI (reg/f:DI 301)
                (const_int 44 [0x2c])) [0 preprocess_106(D)->pre_quecc_points+0 S4 A32])) ge2fitman_preproc.cpp:457 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 301)
        (nil)))
(insn 159 158 160 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 161 [ D.26049 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32]))) ge2fitman_preproc.cpp:457 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 161 [ D.26049 ])
        (nil)))
(jump_insn 160 159 161 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) ge2fitman_preproc.cpp:457 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 317)
;;  succ:       5 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316
(note 161 160 162 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 5 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:459 90 {*movsi_internal}
     (nil))
(insn 163 162 164 5 (set (reg:DI 162 [ D.26050 ])
        (sign_extend:DI (reg:SI 302))) ge2fitman_preproc.cpp:459 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 302)
        (nil)))
(insn 164 163 165 5 (parallel [
            (set (reg:DI 163 [ D.26050 ])
                (ashift:DI (reg:DI 162 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:459 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 5 (set (reg/f:DI 303)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:459 89 {*movdi_internal}
     (nil))
(insn 166 165 167 5 (parallel [
            (set (reg/f:DI 164 [ D.26051 ])
                (plus:DI (reg:DI 163 [ D.26050 ])
                    (reg/f:DI 303)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 303)
        (expr_list:REG_DEAD (reg:DI 163 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 163 [ D.26050 ]))
                    (nil))))))
(insn 167 166 168 5 (set (reg:SF 165 [ D.26052 ])
        (mem:SF (reg/f:DI 164 [ D.26051 ]) [0 *_111+0 S4 A32])) ge2fitman_preproc.cpp:459 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 164 [ D.26051 ])
        (nil)))
(insn 168 167 169 5 (set (reg:DF 166 [ D.26053 ])
        (float_extend:DF (reg:SF 165 [ D.26052 ]))) ge2fitman_preproc.cpp:459 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 165 [ D.26052 ])
        (nil)))
(insn 169 168 170 5 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:459 90 {*movsi_internal}
     (nil))
(insn 170 169 171 5 (set (reg:DI 167 [ D.26050 ])
        (sign_extend:DI (reg:SI 304))) ge2fitman_preproc.cpp:459 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 304)
        (nil)))
(insn 171 170 172 5 (parallel [
            (set (reg:DI 168 [ D.26050 ])
                (ashift:DI (reg:DI 167 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:459 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 167 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 171 173 5 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:459 89 {*movdi_internal}
     (nil))
(insn 173 172 174 5 (parallel [
            (set (reg/f:DI 169 [ D.26051 ])
                (plus:DI (reg:DI 168 [ D.26050 ])
                    (reg/f:DI 305)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:459 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (expr_list:REG_DEAD (reg:DI 168 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 168 [ D.26050 ]))
                    (nil))))))
(insn 174 173 175 5 (set (reg:SF 170 [ D.26052 ])
        (mem:SF (reg/f:DI 169 [ D.26051 ]) [0 *_116+0 S4 A32])) ge2fitman_preproc.cpp:459 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 169 [ D.26051 ])
        (nil)))
(insn 175 174 176 5 (set (reg:DF 171 [ D.26053 ])
        (float_extend:DF (reg:SF 170 [ D.26052 ]))) ge2fitman_preproc.cpp:459 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 170 [ D.26052 ])
        (nil)))
(insn 176 175 177 5 (set (reg:DF 172 [ D.26053 ])
        (mult:DF (reg:DF 166 [ D.26053 ])
            (reg:DF 171 [ D.26053 ]))) ge2fitman_preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 171 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 166 [ D.26053 ])
            (nil))))
(insn 177 176 178 5 (set (reg:SI 306)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:460 90 {*movsi_internal}
     (nil))
(insn 178 177 179 5 (set (reg:DI 173 [ D.26054 ])
        (sign_extend:DI (reg:SI 306))) ge2fitman_preproc.cpp:460 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 306)
        (nil)))
(insn 179 178 180 5 (parallel [
            (set (reg:DI 174 [ D.26054 ])
                (plus:DI (reg:DI 173 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 5 (parallel [
            (set (reg:DI 175 [ D.26054 ])
                (ashift:DI (reg:DI 174 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 174 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 5 (set (reg/f:DI 307)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:460 89 {*movdi_internal}
     (nil))
(insn 182 181 183 5 (parallel [
            (set (reg/f:DI 176 [ D.26051 ])
                (plus:DI (reg:DI 175 [ D.26054 ])
                    (reg/f:DI 307)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 307)
        (expr_list:REG_DEAD (reg:DI 175 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 175 [ D.26054 ]))
                    (nil))))))
(insn 183 182 184 5 (set (reg:SF 177 [ D.26052 ])
        (mem:SF (reg/f:DI 176 [ D.26051 ]) [0 *_123+0 S4 A32])) ge2fitman_preproc.cpp:460 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 176 [ D.26051 ])
        (nil)))
(insn 184 183 185 5 (set (reg:DF 178 [ D.26053 ])
        (float_extend:DF (reg:SF 177 [ D.26052 ]))) ge2fitman_preproc.cpp:460 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 177 [ D.26052 ])
        (nil)))
(insn 185 184 186 5 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:460 90 {*movsi_internal}
     (nil))
(insn 186 185 187 5 (set (reg:DI 179 [ D.26054 ])
        (sign_extend:DI (reg:SI 308))) ge2fitman_preproc.cpp:460 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 308)
        (nil)))
(insn 187 186 188 5 (parallel [
            (set (reg:DI 180 [ D.26054 ])
                (plus:DI (reg:DI 179 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 5 (parallel [
            (set (reg:DI 181 [ D.26054 ])
                (ashift:DI (reg:DI 180 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 5 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:460 89 {*movdi_internal}
     (nil))
(insn 190 189 191 5 (parallel [
            (set (reg/f:DI 182 [ D.26051 ])
                (plus:DI (reg:DI 181 [ D.26054 ])
                    (reg/f:DI 309)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:460 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 309)
        (expr_list:REG_DEAD (reg:DI 181 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 181 [ D.26054 ]))
                    (nil))))))
(insn 191 190 192 5 (set (reg:SF 183 [ D.26052 ])
        (mem:SF (reg/f:DI 182 [ D.26051 ]) [0 *_129+0 S4 A32])) ge2fitman_preproc.cpp:460 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ D.26051 ])
        (nil)))
(insn 192 191 193 5 (set (reg:DF 184 [ D.26053 ])
        (float_extend:DF (reg:SF 183 [ D.26052 ]))) ge2fitman_preproc.cpp:460 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 183 [ D.26052 ])
        (nil)))
(insn 193 192 194 5 (set (reg:DF 185 [ D.26053 ])
        (mult:DF (reg:DF 178 [ D.26053 ])
            (reg:DF 184 [ D.26053 ]))) ge2fitman_preproc.cpp:460 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 184 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 178 [ D.26053 ])
            (nil))))
(insn 194 193 195 5 (set (reg:DF 186 [ D.26053 ])
        (plus:DF (reg:DF 172 [ D.26053 ])
            (reg:DF 185 [ D.26053 ]))) ge2fitman_preproc.cpp:459 798 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 185 [ D.26053 ])
        (expr_list:REG_DEAD (reg:DF 172 [ D.26053 ])
            (nil))))
(insn 195 194 196 5 (set (reg:DF 21 xmm0)
        (reg:DF 186 [ D.26053 ])) ge2fitman_preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 186 [ D.26053 ])
        (nil)))
(call_insn 196 195 197 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrt") [flags 0x41]  <function_decl 0x7fe357093d80 sqrt>) [0 __builtin_sqrt S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:460 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 197 196 198 5 (set (reg:DF 310)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 198 197 199 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64])
        (reg:DF 310)) ge2fitman_preproc.cpp:460 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 310)
        (nil)))
(insn 199 198 200 5 (set (reg:SI 311)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:462 90 {*movsi_internal}
     (nil))
(insn 200 199 201 5 (set (reg:DI 187 [ D.26050 ])
        (sign_extend:DI (reg:SI 311))) ge2fitman_preproc.cpp:462 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 311)
        (nil)))
(insn 201 200 202 5 (parallel [
            (set (reg:DI 188 [ D.26050 ])
                (ashift:DI (reg:DI 187 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:462 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 187 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 201 203 5 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:462 89 {*movdi_internal}
     (nil))
(insn 203 202 204 5 (parallel [
            (set (reg/f:DI 189 [ D.26051 ])
                (plus:DI (reg:DI 188 [ D.26050 ])
                    (reg/f:DI 312)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 312)
        (expr_list:REG_DEAD (reg:DI 188 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 188 [ D.26050 ]))
                    (nil))))))
(insn 204 203 205 5 (set (reg:SF 190 [ D.26052 ])
        (mem:SF (reg/f:DI 189 [ D.26051 ]) [0 *_138+0 S4 A32])) ge2fitman_preproc.cpp:462 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 189 [ D.26051 ])
        (nil)))
(insn 205 204 206 5 (set (reg:DF 191 [ D.26053 ])
        (float_extend:DF (reg:SF 190 [ D.26052 ]))) ge2fitman_preproc.cpp:462 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 190 [ D.26052 ])
        (nil)))
(insn 206 205 207 5 (set (reg:SI 313)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:462 90 {*movsi_internal}
     (nil))
(insn 207 206 208 5 (set (reg:DI 192 [ D.26054 ])
        (sign_extend:DI (reg:SI 313))) ge2fitman_preproc.cpp:462 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 313)
        (nil)))
(insn 208 207 209 5 (parallel [
            (set (reg:DI 193 [ D.26054 ])
                (plus:DI (reg:DI 192 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 192 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 209 208 210 5 (parallel [
            (set (reg:DI 194 [ D.26054 ])
                (ashift:DI (reg:DI 193 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:462 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 193 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 210 209 211 5 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])) ge2fitman_preproc.cpp:462 89 {*movdi_internal}
     (nil))
(insn 211 210 212 5 (parallel [
            (set (reg/f:DI 195 [ D.26051 ])
                (plus:DI (reg:DI 194 [ D.26054 ])
                    (reg/f:DI 314)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:462 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 314)
        (expr_list:REG_DEAD (reg:DI 194 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -136 [0xffffffffffffff78])) [0 scratch+0 S8 A64])
                        (reg:DI 194 [ D.26054 ]))
                    (nil))))))
(insn 212 211 213 5 (set (reg:SF 196 [ D.26052 ])
        (mem:SF (reg/f:DI 195 [ D.26051 ]) [0 *_144+0 S4 A32])) ge2fitman_preproc.cpp:462 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.26051 ])
        (nil)))
(insn 213 212 214 5 (set (reg:DF 197 [ D.26053 ])
        (float_extend:DF (reg:SF 196 [ D.26052 ]))) ge2fitman_preproc.cpp:462 152 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 196 [ D.26052 ])
        (nil)))
(insn 214 213 215 5 (set (reg:DF 22 xmm1)
        (reg:DF 191 [ D.26053 ])) ge2fitman_preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 191 [ D.26053 ])
        (nil)))
(insn 215 214 216 5 (set (reg:DF 21 xmm0)
        (reg:DF 197 [ D.26053 ])) ge2fitman_preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 197 [ D.26053 ])
        (nil)))
(call_insn 216 215 217 5 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atan2") [flags 0x41]  <function_decl 0x7fe35704f870 atan2>) [0 __builtin_atan2 S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:462 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 217 216 218 5 (set (reg:DF 315)
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 218 217 219 5 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64])
        (reg:DF 315)) ge2fitman_preproc.cpp:462 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 315)
        (nil)))
(insn 219 218 220 5 (set (reg:DF 316)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:468 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 9.9999999999999995474811182588625868561393872369080782e-7 [0x0.8637bd05af6c68p-19])
        (nil)))
(insn 220 219 221 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 316)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:468 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 316)
        (nil)))
(jump_insn 221 220 225 5 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 403)
            (pc))) ge2fitman_preproc.cpp:468 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 403)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 317
(note 225 221 226 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 6 (set (reg:DF 317)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:469 128 {*movdf_internal}
     (nil))
(insn 227 226 404 6 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 317)) ge2fitman_preproc.cpp:469 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 317)
        (nil)))
(jump_insn 404 227 405 6 (set (pc)
        (label_ref 235)) 654 {jump}
     (nil)
 -> 235)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 405 404 403)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 318 319
(code_label 403 405 231 7 114 "" [1 uses])
(note 231 403 232 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 7 (set (reg:DF 319)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64])) ge2fitman_preproc.cpp:471 128 {*movdf_internal}
     (nil))
(insn 233 232 234 7 (set (reg:DF 318)
        (div:DF (reg:DF 319)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:471 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 319)
        (nil)))
(insn 234 233 235 7 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64])
        (reg:DF 318)) ge2fitman_preproc.cpp:471 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 318)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 320 321 322 323 324 325 326 327 328
(code_label 235 234 236 8 105 "" [1 uses])
(note 236 235 237 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 8 (set (reg:DF 321)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])) ge2fitman_preproc.cpp:474 128 {*movdf_internal}
     (nil))
(insn 238 237 239 8 (set (reg:DF 320)
        (minus:DF (reg:DF 321)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:474 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 321)
        (nil)))
(insn 239 238 240 8 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])
        (reg:DF 320)) ge2fitman_preproc.cpp:474 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 320)
        (nil)))
(insn 240 239 241 8 (set (reg:SI 322)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:476 90 {*movsi_internal}
     (nil))
(insn 241 240 242 8 (set (reg:DI 198 [ D.26050 ])
        (sign_extend:DI (reg:SI 322))) ge2fitman_preproc.cpp:476 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 322)
        (nil)))
(insn 242 241 243 8 (parallel [
            (set (reg:DI 199 [ D.26050 ])
                (ashift:DI (reg:DI 198 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:476 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 198 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 8 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:476 89 {*movdi_internal}
     (nil))
(insn 244 243 245 8 (parallel [
            (set (reg/f:DI 200 [ D.26051 ])
                (plus:DI (reg:DI 199 [ D.26050 ])
                    (reg/f:DI 323)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:476 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (expr_list:REG_DEAD (reg:DI 199 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 199 [ D.26050 ]))
                    (nil))))))
(insn 245 244 246 8 (set (reg:SF 201 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:476 157 {*truncdfsf_fast_sse}
     (nil))
(insn 246 245 247 8 (set (reg:DF 324)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])) ge2fitman_preproc.cpp:476 128 {*movdf_internal}
     (nil))
(insn 247 246 248 8 (set (reg:DF 21 xmm0)
        (reg:DF 324)) ge2fitman_preproc.cpp:476 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 324)
        (nil)))
(call_insn/u 248 247 249 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:476 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 249 248 250 8 (set (reg:DF 202 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:476 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 250 249 251 8 (set (reg:SF 203 [ D.26052 ])
        (float_truncate:SF (reg:DF 202 [ D.26053 ]))) ge2fitman_preproc.cpp:476 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 202 [ D.26053 ])
        (nil)))
(insn 251 250 252 8 (set (reg:SF 204 [ D.26052 ])
        (mult:SF (reg:SF 201 [ D.26052 ])
            (reg:SF 203 [ D.26052 ]))) ge2fitman_preproc.cpp:476 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 203 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 201 [ D.26052 ])
            (nil))))
(insn 252 251 253 8 (set (mem:SF (reg/f:DI 200 [ D.26051 ]) [0 *_154+0 S4 A32])
        (reg:SF 204 [ D.26052 ])) ge2fitman_preproc.cpp:476 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 204 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 200 [ D.26051 ])
            (nil))))
(insn 253 252 254 8 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:477 90 {*movsi_internal}
     (nil))
(insn 254 253 255 8 (set (reg:DI 205 [ D.26054 ])
        (sign_extend:DI (reg:SI 325))) ge2fitman_preproc.cpp:477 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 325)
        (nil)))
(insn 255 254 256 8 (parallel [
            (set (reg:DI 206 [ D.26054 ])
                (plus:DI (reg:DI 205 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 256 255 257 8 (parallel [
            (set (reg:DI 207 [ D.26054 ])
                (ashift:DI (reg:DI 206 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:477 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 206 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 257 256 258 8 (set (reg/f:DI 326)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:477 89 {*movdi_internal}
     (nil))
(insn 258 257 259 8 (parallel [
            (set (reg/f:DI 208 [ D.26051 ])
                (plus:DI (reg:DI 207 [ D.26054 ])
                    (reg/f:DI 326)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:477 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 326)
        (expr_list:REG_DEAD (reg:DI 207 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 207 [ D.26054 ]))
                    (nil))))))
(insn 259 258 260 8 (set (reg:SF 209 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [0 div_sup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:477 157 {*truncdfsf_fast_sse}
     (nil))
(insn 260 259 261 8 (set (reg:DF 327)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [0 div_sup_phase+0 S8 A64])) ge2fitman_preproc.cpp:477 128 {*movdf_internal}
     (nil))
(insn 261 260 262 8 (set (reg:DF 21 xmm0)
        (reg:DF 327)) ge2fitman_preproc.cpp:477 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 327)
        (nil)))
(call_insn/u 262 261 263 8 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:477 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 263 262 264 8 (set (reg:DF 210 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:477 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 264 263 265 8 (set (reg:SF 211 [ D.26052 ])
        (float_truncate:SF (reg:DF 210 [ D.26053 ]))) ge2fitman_preproc.cpp:477 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 210 [ D.26053 ])
        (nil)))
(insn 265 264 266 8 (set (reg:SF 212 [ D.26052 ])
        (mult:SF (reg:SF 209 [ D.26052 ])
            (reg:SF 211 [ D.26052 ]))) ge2fitman_preproc.cpp:477 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 211 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 209 [ D.26052 ])
            (nil))))
(insn 266 265 267 8 (set (mem:SF (reg/f:DI 208 [ D.26051 ]) [0 *_163+0 S4 A32])
        (reg:SF 212 [ D.26052 ])) ge2fitman_preproc.cpp:477 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 212 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 208 [ D.26051 ])
            (nil))))
(insn 267 266 268 8 (set (reg:DF 328)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:482 128 {*movdf_internal}
     (expr_list:REG_EQUAL (const_double:DF 9.9999999999999995474811182588625868561393872369080782e-7 [0x0.8637bd05af6c68p-19])
        (nil)))
(insn 268 267 269 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 328)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:482 56 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 328)
        (nil)))
(jump_insn 269 268 273 8 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 406)
            (pc))) ge2fitman_preproc.cpp:482 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCFPU 17 flags)
        (nil))
 -> 406)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 329
(note 273 269 274 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 9 (set (reg:DF 329)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S8 A64])) ge2fitman_preproc.cpp:483 128 {*movdf_internal}
     (nil))
(insn 275 274 407 9 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 329)) ge2fitman_preproc.cpp:483 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 329)
        (nil)))
(jump_insn 407 275 408 9 (set (pc)
        (label_ref 283)) 654 {jump}
     (nil)
 -> 283)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 408 407 406)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 330 331
(code_label 406 408 279 10 115 "" [1 uses])
(note 279 406 280 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 10 (set (reg:DF 331)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64])) ge2fitman_preproc.cpp:485 128 {*movdf_internal}
     (nil))
(insn 281 280 282 10 (set (reg:DF 330)
        (div:DF (reg:DF 331)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [0 mag_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:485 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 331)
        (nil)))
(insn 282 281 283 10 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64])
        (reg:DF 330)) ge2fitman_preproc.cpp:485 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 330)
        (nil)))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 332 333 334 335 336 337 338 339
(code_label 283 282 284 11 108 "" [1 uses])
(note 284 283 285 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 11 (set (reg:DF 333)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])) ge2fitman_preproc.cpp:488 128 {*movdf_internal}
     (nil))
(insn 286 285 287 11 (set (reg:DF 332)
        (minus:DF (reg:DF 333)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 phase_scratch+0 S8 A64]))) ge2fitman_preproc.cpp:488 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 333)
        (nil)))
(insn 287 286 288 11 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])
        (reg:DF 332)) ge2fitman_preproc.cpp:488 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 332)
        (nil)))
(insn 288 287 289 11 (set (reg:SI 334)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:490 90 {*movsi_internal}
     (nil))
(insn 289 288 290 11 (set (reg:DI 213 [ D.26050 ])
        (sign_extend:DI (reg:SI 334))) ge2fitman_preproc.cpp:490 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 334)
        (nil)))
(insn 290 289 291 11 (parallel [
            (set (reg:DI 214 [ D.26050 ])
                (ashift:DI (reg:DI 213 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:490 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 213 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 291 290 292 11 (set (reg/f:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:490 89 {*movdi_internal}
     (nil))
(insn 292 291 293 11 (parallel [
            (set (reg/f:DI 215 [ D.26051 ])
                (plus:DI (reg:DI 214 [ D.26050 ])
                    (reg/f:DI 335)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:490 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 335)
        (expr_list:REG_DEAD (reg:DI 214 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 214 [ D.26050 ]))
                    (nil))))))
(insn 293 292 294 11 (set (reg:SF 216 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:490 157 {*truncdfsf_fast_sse}
     (nil))
(insn 294 293 295 11 (set (reg:DF 336)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])) ge2fitman_preproc.cpp:490 128 {*movdf_internal}
     (nil))
(insn 295 294 296 11 (set (reg:DF 21 xmm0)
        (reg:DF 336)) ge2fitman_preproc.cpp:490 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 336)
        (nil)))
(call_insn/u 296 295 297 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:490 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 297 296 298 11 (set (reg:DF 217 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:490 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 298 297 299 11 (set (reg:SF 218 [ D.26052 ])
        (float_truncate:SF (reg:DF 217 [ D.26053 ]))) ge2fitman_preproc.cpp:490 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 217 [ D.26053 ])
        (nil)))
(insn 299 298 300 11 (set (reg:SF 219 [ D.26052 ])
        (mult:SF (reg:SF 216 [ D.26052 ])
            (reg:SF 218 [ D.26052 ]))) ge2fitman_preproc.cpp:490 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 218 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 216 [ D.26052 ])
            (nil))))
(insn 300 299 301 11 (set (mem:SF (reg/f:DI 215 [ D.26051 ]) [0 *_174+0 S4 A32])
        (reg:SF 219 [ D.26052 ])) ge2fitman_preproc.cpp:490 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 219 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 215 [ D.26051 ])
            (nil))))
(insn 301 300 302 11 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:491 90 {*movsi_internal}
     (nil))
(insn 302 301 303 11 (set (reg:DI 220 [ D.26054 ])
        (sign_extend:DI (reg:SI 337))) ge2fitman_preproc.cpp:491 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 337)
        (nil)))
(insn 303 302 304 11 (parallel [
            (set (reg:DI 221 [ D.26054 ])
                (plus:DI (reg:DI 220 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:491 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 304 303 305 11 (parallel [
            (set (reg:DI 222 [ D.26054 ])
                (ashift:DI (reg:DI 221 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:491 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 221 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 305 304 306 11 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:491 89 {*movdi_internal}
     (nil))
(insn 306 305 307 11 (parallel [
            (set (reg/f:DI 223 [ D.26051 ])
                (plus:DI (reg:DI 222 [ D.26054 ])
                    (reg/f:DI 338)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:491 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 338)
        (expr_list:REG_DEAD (reg:DI 222 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 222 [ D.26054 ]))
                    (nil))))))
(insn 307 306 308 11 (set (reg:SF 224 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [0 div_unsup_mag+0 S8 A64]))) ge2fitman_preproc.cpp:491 157 {*truncdfsf_fast_sse}
     (nil))
(insn 308 307 309 11 (set (reg:DF 339)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [0 div_unsup_phase+0 S8 A64])) ge2fitman_preproc.cpp:491 128 {*movdf_internal}
     (nil))
(insn 309 308 310 11 (set (reg:DF 21 xmm0)
        (reg:DF 339)) ge2fitman_preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 339)
        (nil)))
(call_insn/u 310 309 311 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:491 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 311 310 312 11 (set (reg:DF 225 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:491 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 312 311 313 11 (set (reg:SF 226 [ D.26052 ])
        (float_truncate:SF (reg:DF 225 [ D.26053 ]))) ge2fitman_preproc.cpp:491 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 225 [ D.26053 ])
        (nil)))
(insn 313 312 314 11 (set (reg:SF 227 [ D.26052 ])
        (mult:SF (reg:SF 224 [ D.26052 ])
            (reg:SF 226 [ D.26052 ]))) ge2fitman_preproc.cpp:491 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 226 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 224 [ D.26052 ])
            (nil))))
(insn 314 313 409 11 (set (mem:SF (reg/f:DI 223 [ D.26051 ]) [0 *_183+0 S4 A32])
        (reg:SF 227 [ D.26052 ])) ge2fitman_preproc.cpp:491 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 227 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 223 [ D.26051 ])
            (nil))))
(jump_insn 409 314 410 11 (set (pc)
        (label_ref 379)) 654 {jump}
     (nil)
 -> 379)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 410 409 317)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355
(code_label 317 410 318 12 102 "" [1 uses])
(note 318 317 319 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 12 (set (reg:DF 341)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [0 phase_sup+0 S8 A64])) ge2fitman_preproc.cpp:494 128 {*movdf_internal}
     (nil))
(insn 320 319 321 12 (set (reg:DF 340)
        (minus:DF (reg:DF 341)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:494 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 341)
        (nil)))
(insn 321 320 322 12 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])
        (reg:DF 340)) ge2fitman_preproc.cpp:494 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 340)
        (nil)))
(insn 322 321 323 12 (set (reg:DF 343)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64])) ge2fitman_preproc.cpp:495 128 {*movdf_internal}
     (nil))
(insn 323 322 324 12 (set (reg:DF 342)
        (minus:DF (reg:DF 343)
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [0 phase_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:495 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 343)
        (nil)))
(insn 324 323 325 12 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])
        (reg:DF 342)) ge2fitman_preproc.cpp:495 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 342)
        (nil)))
(insn 325 324 326 12 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:497 90 {*movsi_internal}
     (nil))
(insn 326 325 327 12 (set (reg:DI 228 [ D.26050 ])
        (sign_extend:DI (reg:SI 344))) ge2fitman_preproc.cpp:497 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 344)
        (nil)))
(insn 327 326 328 12 (parallel [
            (set (reg:DI 229 [ D.26050 ])
                (ashift:DI (reg:DI 228 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:497 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 228 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 328 327 329 12 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:497 89 {*movdi_internal}
     (nil))
(insn 329 328 330 12 (parallel [
            (set (reg/f:DI 230 [ D.26051 ])
                (plus:DI (reg:DI 229 [ D.26050 ])
                    (reg/f:DI 345)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:497 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 345)
        (expr_list:REG_DEAD (reg:DI 229 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 229 [ D.26050 ]))
                    (nil))))))
(insn 330 329 331 12 (set (reg:SF 231 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64]))) ge2fitman_preproc.cpp:497 157 {*truncdfsf_fast_sse}
     (nil))
(insn 331 330 332 12 (set (reg:DF 346)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) ge2fitman_preproc.cpp:497 128 {*movdf_internal}
     (nil))
(insn 332 331 333 12 (set (reg:DF 21 xmm0)
        (reg:DF 346)) ge2fitman_preproc.cpp:497 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 346)
        (nil)))
(call_insn/u 333 332 334 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:497 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 334 333 335 12 (set (reg:DF 232 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:497 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 335 334 336 12 (set (reg:SF 233 [ D.26052 ])
        (float_truncate:SF (reg:DF 232 [ D.26053 ]))) ge2fitman_preproc.cpp:497 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 232 [ D.26053 ])
        (nil)))
(insn 336 335 337 12 (set (reg:SF 234 [ D.26052 ])
        (mult:SF (reg:SF 231 [ D.26052 ])
            (reg:SF 233 [ D.26052 ]))) ge2fitman_preproc.cpp:497 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 233 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 231 [ D.26052 ])
            (nil))))
(insn 337 336 338 12 (set (mem:SF (reg/f:DI 230 [ D.26051 ]) [0 *_193+0 S4 A32])
        (reg:SF 234 [ D.26052 ])) ge2fitman_preproc.cpp:497 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 234 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 230 [ D.26051 ])
            (nil))))
(insn 338 337 339 12 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:498 90 {*movsi_internal}
     (nil))
(insn 339 338 340 12 (set (reg:DI 235 [ D.26054 ])
        (sign_extend:DI (reg:SI 347))) ge2fitman_preproc.cpp:498 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 347)
        (nil)))
(insn 340 339 341 12 (parallel [
            (set (reg:DI 236 [ D.26054 ])
                (plus:DI (reg:DI 235 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 235 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 341 340 342 12 (parallel [
            (set (reg:DI 237 [ D.26054 ])
                (ashift:DI (reg:DI 236 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:498 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 236 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 342 341 343 12 (set (reg/f:DI 348)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])) ge2fitman_preproc.cpp:498 89 {*movdi_internal}
     (nil))
(insn 343 342 344 12 (parallel [
            (set (reg/f:DI 238 [ D.26051 ])
                (plus:DI (reg:DI 237 [ D.26054 ])
                    (reg/f:DI 348)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:498 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 348)
        (expr_list:REG_DEAD (reg:DI 237 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -120 [0xffffffffffffff88])) [0 sup_data+0 S8 A64])
                        (reg:DI 237 [ D.26054 ]))
                    (nil))))))
(insn 344 343 345 12 (set (reg:SF 239 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [0 mag_sup+0 S8 A64]))) ge2fitman_preproc.cpp:498 157 {*truncdfsf_fast_sse}
     (nil))
(insn 345 344 346 12 (set (reg:DF 349)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 result_phase_cor_sup+0 S8 A64])) ge2fitman_preproc.cpp:498 128 {*movdf_internal}
     (nil))
(insn 346 345 347 12 (set (reg:DF 21 xmm0)
        (reg:DF 349)) ge2fitman_preproc.cpp:498 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 349)
        (nil)))
(call_insn/u 347 346 348 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:498 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 348 347 349 12 (set (reg:DF 240 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:498 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 349 348 350 12 (set (reg:SF 241 [ D.26052 ])
        (float_truncate:SF (reg:DF 240 [ D.26053 ]))) ge2fitman_preproc.cpp:498 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 240 [ D.26053 ])
        (nil)))
(insn 350 349 351 12 (set (reg:SF 242 [ D.26052 ])
        (mult:SF (reg:SF 239 [ D.26052 ])
            (reg:SF 241 [ D.26052 ]))) ge2fitman_preproc.cpp:498 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 241 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 239 [ D.26052 ])
            (nil))))
(insn 351 350 352 12 (set (mem:SF (reg/f:DI 238 [ D.26051 ]) [0 *_202+0 S4 A32])
        (reg:SF 242 [ D.26052 ])) ge2fitman_preproc.cpp:498 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 242 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 238 [ D.26051 ])
            (nil))))
(insn 352 351 353 12 (set (reg:SI 350)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:500 90 {*movsi_internal}
     (nil))
(insn 353 352 354 12 (set (reg:DI 243 [ D.26050 ])
        (sign_extend:DI (reg:SI 350))) ge2fitman_preproc.cpp:500 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 350)
        (nil)))
(insn 354 353 355 12 (parallel [
            (set (reg:DI 244 [ D.26050 ])
                (ashift:DI (reg:DI 243 [ D.26050 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:500 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 243 [ D.26050 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 355 354 356 12 (set (reg/f:DI 351)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:500 89 {*movdi_internal}
     (nil))
(insn 356 355 357 12 (parallel [
            (set (reg/f:DI 245 [ D.26051 ])
                (plus:DI (reg:DI 244 [ D.26050 ])
                    (reg/f:DI 351)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:500 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (expr_list:REG_DEAD (reg:DI 244 [ D.26050 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 244 [ D.26050 ]))
                    (nil))))))
(insn 357 356 358 12 (set (reg:SF 246 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:500 157 {*truncdfsf_fast_sse}
     (nil))
(insn 358 357 359 12 (set (reg:DF 352)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) ge2fitman_preproc.cpp:500 128 {*movdf_internal}
     (nil))
(insn 359 358 360 12 (set (reg:DF 21 xmm0)
        (reg:DF 352)) ge2fitman_preproc.cpp:500 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 352)
        (nil)))
(call_insn/u 360 359 361 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cos") [flags 0x41]  <function_decl 0x7fe3570545e8 cos>) [0 __builtin_cos S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:500 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 361 360 362 12 (set (reg:DF 247 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:500 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 362 361 363 12 (set (reg:SF 248 [ D.26052 ])
        (float_truncate:SF (reg:DF 247 [ D.26053 ]))) ge2fitman_preproc.cpp:500 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 247 [ D.26053 ])
        (nil)))
(insn 363 362 364 12 (set (reg:SF 249 [ D.26052 ])
        (mult:SF (reg:SF 246 [ D.26052 ])
            (reg:SF 248 [ D.26052 ]))) ge2fitman_preproc.cpp:500 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 248 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 246 [ D.26052 ])
            (nil))))
(insn 364 363 365 12 (set (mem:SF (reg/f:DI 245 [ D.26051 ]) [0 *_210+0 S4 A32])
        (reg:SF 249 [ D.26052 ])) ge2fitman_preproc.cpp:500 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 249 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 245 [ D.26051 ])
            (nil))))
(insn 365 364 366 12 (set (reg:SI 353)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])) ge2fitman_preproc.cpp:501 90 {*movsi_internal}
     (nil))
(insn 366 365 367 12 (set (reg:DI 250 [ D.26054 ])
        (sign_extend:DI (reg:SI 353))) ge2fitman_preproc.cpp:501 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 353)
        (nil)))
(insn 367 366 368 12 (parallel [
            (set (reg:DI 251 [ D.26054 ])
                (plus:DI (reg:DI 250 [ D.26054 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:501 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 250 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 368 367 369 12 (parallel [
            (set (reg:DI 252 [ D.26054 ])
                (ashift:DI (reg:DI 251 [ D.26054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:501 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 251 [ D.26054 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 369 368 370 12 (set (reg/f:DI 354)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])) ge2fitman_preproc.cpp:501 89 {*movdi_internal}
     (nil))
(insn 370 369 371 12 (parallel [
            (set (reg/f:DI 253 [ D.26051 ])
                (plus:DI (reg:DI 252 [ D.26054 ])
                    (reg/f:DI 354)))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:501 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_DEAD (reg:DI 252 [ D.26054 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -128 [0xffffffffffffff80])) [0 unsup_data+0 S8 A64])
                        (reg:DI 252 [ D.26054 ]))
                    (nil))))))
(insn 371 370 372 12 (set (reg:SF 254 [ D.26052 ])
        (float_truncate:SF (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -72 [0xffffffffffffffb8])) [0 mag_unsup+0 S8 A64]))) ge2fitman_preproc.cpp:501 157 {*truncdfsf_fast_sse}
     (nil))
(insn 372 371 373 12 (set (reg:DF 355)
        (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 result_phase_cor_unsup+0 S8 A64])) ge2fitman_preproc.cpp:501 128 {*movdf_internal}
     (nil))
(insn 373 372 374 12 (set (reg:DF 21 xmm0)
        (reg:DF 355)) ge2fitman_preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 355)
        (nil)))
(call_insn/u 374 373 375 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sin") [flags 0x41]  <function_decl 0x7fe3570915e8 sin>) [0 __builtin_sin S1 A8])
            (const_int 0 [0]))) ge2fitman_preproc.cpp:501 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 375 374 376 12 (set (reg:DF 255 [ D.26053 ])
        (reg:DF 21 xmm0)) ge2fitman_preproc.cpp:501 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 376 375 377 12 (set (reg:SF 256 [ D.26052 ])
        (float_truncate:SF (reg:DF 255 [ D.26053 ]))) ge2fitman_preproc.cpp:501 157 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 255 [ D.26053 ])
        (nil)))
(insn 377 376 378 12 (set (reg:SF 257 [ D.26052 ])
        (mult:SF (reg:SF 254 [ D.26052 ])
            (reg:SF 256 [ D.26052 ]))) ge2fitman_preproc.cpp:501 797 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 256 [ D.26052 ])
        (expr_list:REG_DEAD (reg:SF 254 [ D.26052 ])
            (nil))))
(insn 378 377 379 12 (set (mem:SF (reg/f:DI 253 [ D.26051 ]) [0 *_219+0 S4 A32])
        (reg:SF 257 [ D.26052 ])) ge2fitman_preproc.cpp:501 129 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 257 [ D.26052 ])
        (expr_list:REG_DEAD (reg/f:DI 253 [ D.26051 ])
            (nil))))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 379 378 380 13 109 "" [1 uses])
(note 380 379 381 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 411 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -100 [0xffffffffffffff9c])) [0 i+0 S4 A32])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_preproc.cpp:444 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 411 381 412 13 (set (pc)
        (label_ref 382)) ge2fitman_preproc.cpp:444 654 {jump}
     (nil)
 -> 382)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 412 411 385)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 258 259
(code_label 385 412 386 14 101 "" [1 uses])
(note 386 385 387 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 390 14 (set (reg:SI 258 [ D.26049 ])
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:505 90 {*movsi_internal}
     (nil))
(insn 390 387 394 14 (set (reg:SI 259 [ <retval> ])
        (reg:SI 258 [ D.26049 ])) ge2fitman_preproc.cpp:505 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 258 [ D.26049 ])
        (nil)))
(insn 394 390 395 14 (set (reg/i:SI 0 ax)
        (reg:SI 259 [ <retval> ])) ge2fitman_preproc.cpp:506 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 259 [ <retval> ])
        (nil)))
(insn 395 394 0 14 (use (reg/i:SI 0 ax)) ge2fitman_preproc.cpp:506 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1030, decl_uid=24712, cgraph_uid=235, symbol_order=262)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 24(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 11(l0): point = 17
   Insn 10(l0): point = 19
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
Compressing live ranges: from 31 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=7, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={4d,2u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 206{169d,37u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_preproc.cpp:506 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_preproc.cpp:506 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_preproc.cpp:506 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_preproc.cpp:506 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_preproc.cpp:506 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_preproc.cpp:506 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fe355c50000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fe355fc1870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fe355cb51b0 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fe355c50000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fe355fc1a20 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fe355c81e58 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 118 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) ge2fitman_preproc.cpp:506 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 116 "" [0 uses])
(note 22 21 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for ge2fitman_preproc.cpp) (_GLOBAL__sub_I__Z11pre_processPiP10PreprocessP12Procpar_infoPPfS5_, funcdef_no=1031, decl_uid=24718, cgraph_uid=236, symbol_order=366)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for ge2fitman_preproc.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 103{93d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_preproc.cpp:506 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_preproc.cpp:506 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7fe355c81d80 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_preproc.cpp:506 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

