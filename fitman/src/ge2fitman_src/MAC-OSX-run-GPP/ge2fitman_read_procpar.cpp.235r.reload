
;; Function int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*) (_Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header, funcdef_no=1021, decl_uid=24359, cgraph_uid=226, symbol_order=227)

      Creating newreg=825
Removing SCRATCH in insn #9 (nop 2)
rescanning insn with uid = 9.
      Creating newreg=826
Removing SCRATCH in insn #1978 (nop 3)
rescanning insn with uid = 1978.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=192, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r825
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 13:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 14:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) q {*cmpqi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 44:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 55:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 65:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 67:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 82:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 84:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 89:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 98:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 99:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 101:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 118:  (0) m  (1) qn {*movqi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 123:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) x  (1) xm {*cmpiusf_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 130:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 132:  (0) r  (1) i {*movdi_internal}
      Creating newreg=827, assigning class GENERAL_REGS to r827
  132: r827:DI=0x30303630302e3032
    Inserting insn reload after:
 2131: [r107:DI]=r827:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2131:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 133:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 139:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 146:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 147:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 154:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 157:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 158:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 160:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 161:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 162:  (0) r  (1) i {*movdi_internal}
      Creating newreg=828, assigning class GENERAL_REGS to r828
  162: r828:DI=0x30303630302e3032
    Inserting insn reload after:
 2132: [r105:DI]=r828:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2132:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 169:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 170:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 171:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 172:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 178:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 180:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 187:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 189:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 197:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 199:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 200:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 201:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 202:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 203:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 208:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 209:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 210:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 217:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 219:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 227:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 228:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 229:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 230:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 231:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 232:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 233:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 238:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 239:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 240:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 247:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 248:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 249:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 250:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 251:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 252:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 253:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 258:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 259:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 260:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 267:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 268:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 269:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 270:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 271:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 272:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 273:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 278:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 279:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 280:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 287:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 288:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 290:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 292:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 293:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 294:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 295:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 296:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 297:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 298:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 303:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 304:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 305:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 312:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 313:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 314:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 315:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 316:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 317:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 318:  (0) m  (1) re {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 319:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 324:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 325:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 326:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 333:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 334:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 338:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 339:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 342:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 358:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 359:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 360:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 367:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 368:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 372:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 373:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 376:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 380:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 392:  (0) r  (1) rm {*movhi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) r  (1) rm {extendhisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 394:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 395:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 396:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 397:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 398:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 399:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 400:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 407:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 408:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 412:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 413:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 416:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 432:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 434:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 441:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 442:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 446:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 447:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 450:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 466:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =r  (1) x {fix_truncsfsi_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 468:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 469:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 470:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 471:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 472:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 473:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 481:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 485:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 486:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 489:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 505:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 506:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 507:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 514:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 515:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 519:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 520:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 523:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 534:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 539:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =r  (1) rm {extendhidi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 541:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 542:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 543:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 544:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 545:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 546:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 547:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 551:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 554:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 555:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 559:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 560:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 563:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 569:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 574:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 579:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 580:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 581:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 588:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 589:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 590:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 593:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 594:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 597:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 608:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 613:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 615:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 616:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 617:  (0) m  (1) rn {*movhi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 618:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 619:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 620:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 627:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 628:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 631:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 632:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 633:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 636:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 652:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 653:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 654:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 661:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 662:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 666:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 667:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 670:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 686:  (0) r  (1) rm {*movhi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 687:  (0) r  (1) rm {extendhisi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 688:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 689:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 690:  (0) r  (1) rm {*movhi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) rm {extendhidi2}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 692:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 693:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 694:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 697:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 698:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 700
	 Choosing alt 2 in insn 700:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 701:  (0) m  (1) re {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 702:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 703:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 704:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 705:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 707:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 708:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 714:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 715:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 716:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 725:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 727:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 736:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 738:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 741:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 742:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 743:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 745:  (0) =r  (1) %0  (2) rme {*addsi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 746:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
          alt=0,overall=11,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 747:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=829 from oldreg=616, assigning class DREG to r829
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 749:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 750:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 751:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 754:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 758:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 759:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 762:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 763:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 765:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 768:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 769:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 770:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 771:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 774:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 775:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 776:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 777:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 779:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 782:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 784:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 787:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 788:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 789:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 790:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 791:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 792:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 795:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 796:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 799:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 800:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 803:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 807:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 808
	 Choosing alt 0 in insn 808:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 809:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 810:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 811:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 812:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 813:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 814:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 816:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 821:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 822:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 823:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 824:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 826:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 827:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 830:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 836:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 841:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 846:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 847:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 848:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 852:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 855:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 856:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 859:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 860:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 861:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 864:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 868:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 871:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 875:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 880:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 881:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 882:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 884:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 885:  (0) x  (1) xm {*cmpiusf_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 891:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 892:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 893:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 894:  (0) m  (1) v {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 899:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 900:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 901:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 903:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 905:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 906:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 907:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 908:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 909:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 910:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 911:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 915:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 916:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 917:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 918:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 919:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 920:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 921:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 922:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 923:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 924:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 926:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 928:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 931:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 932:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 935:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 936:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 937:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 940:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 944:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 946:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 948:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 951:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 956:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 957:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 958:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 965:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 966:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 968:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 970:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 971:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 974:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 990:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 991:  (0) x  (1) r {*floatsidf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 992:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=9,overall=612,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=615,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=13,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=14,overall=18,losers=2,rld_nregs=1
          alt=15,overall=0,losers=0,rld_nregs=0
	 Choosing alt 15 in insn 993:  (0) m  (1) v {*movdf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 994:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=8,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=625,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=10,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=619,losers=2 -- refuse
            alt=12: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=13,overall=609,losers=1,rld_nregs=1
          alt=14,overall=0,losers=0,rld_nregs=0
	 Choosing alt 14 in insn 995:  (0) v  (1) m {*movdf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=9,overall=612,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=11,overall=615,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=13,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=14,overall=18,losers=2,rld_nregs=1
          alt=15,overall=0,losers=0,rld_nregs=0
	 Choosing alt 15 in insn 996:  (0) m  (1) v {*movdf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 997:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 998:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 999:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1000:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1001:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1003:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1005:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1008:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1009:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1011:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1012:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1013:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1014:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1017:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1021:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1024:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1028:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1033:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1034:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1035:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1037:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1039:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1042:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1043:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1044:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1045:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1046:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1047:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1048:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1051:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1055:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1057:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1058:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1059:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1062:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1067:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1068:  (0) =r  (1) x {fix_truncsfsi_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1069:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1070:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1071:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1072:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1073:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1074:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1075:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1076:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1077:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1082:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1084:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1085:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1086:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1089:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1094:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1095:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1096:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1097:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1098:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1099:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1105:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1107:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1108:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1109:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1117:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1118:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1119:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1120:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1121:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1128:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1130:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1132:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1140:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1141:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1142:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1145:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1146:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1147:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1155:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1157:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1158:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1159:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1162:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1167:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1169:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1172:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1174:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1175:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1177:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1179:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1180:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1184:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1185:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1187:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1190:  (1) rBwBz {*call_value}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1192:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1193:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1194:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1195:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1196:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1197:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1198:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1199:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1200:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1201:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1202:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1203:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1204:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1205:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1206:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1207:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1208:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1209:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1211:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1213:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1216:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1217:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1218:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1220:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1221:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1222:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1223:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1226:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1230:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1232:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1235:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1236:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1237:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1239:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1241:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1244:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1252:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1253:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1254:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1256:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1258:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1261:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1262:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1263:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1264:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1266:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1267:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1268:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1271:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1275:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1278:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1279:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1282:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1287:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1288:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1289:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1290:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1291:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1292:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1293:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1297:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1300:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1301:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1302:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1304:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1305:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1306:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1307:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1310:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1314:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1316:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1317:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1318:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1321:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1326:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1327:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1328:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1330:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1332:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1335:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1336:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1337:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1338:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1339:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1340:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1341:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1342:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1345:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1349:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1351:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1352:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1353:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1361:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1362:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1363:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1364:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1365:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1366:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1367:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1369:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1371:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1374:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1375:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1376:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1377:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1378:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1379:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1380:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1381:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1384:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1388:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1390:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1391:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1392:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1395:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1400:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1401:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1402:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1404:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1409:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1410:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1411:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1412:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1413:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1414:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1415:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1416:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1419:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1423:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1425:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1426:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1427:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1430:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1435:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1436:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1437:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1438:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1439:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1440:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1441:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1442:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1443:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1444:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1445:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1446:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1447:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1448:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1449:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1452:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1456:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1458:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1460:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1463:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1468:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1469:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1470:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1471:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1472:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1473:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1474:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1475:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1476:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1477:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1478:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1479:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1480:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1481:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1484:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1488:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1490:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1492:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1495:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1500:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1501:  (0) x  (1) r {*floatsisf2_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1502:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1503:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1504:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1505:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1506:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1507:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1508:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1509:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1510:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1511:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1512:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1513:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1514:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1515:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1516:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1517:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1518:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1520:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1522:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1525:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1526:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1528:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1529:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1530:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1531:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1532:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1535:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1539:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1541:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1544:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1545:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1546:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1548:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1550:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1553:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1556:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1561:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1562:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1563:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1565:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1567:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1570:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1571:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1572:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1573:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1574:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1575:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1576:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1577:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1580:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1584:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1586:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1587:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1588:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1591:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1596:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1598:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1600:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1602:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1605:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1606:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1607:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1608:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1609:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1610:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1611:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1612:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1615:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1619:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1621:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1622:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1623:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1626:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1631:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1632:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1633:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1635:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1637:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1640:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1641:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1642:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1643:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1644:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1645:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1646:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1647:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1650:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1654:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1656:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1657:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1658:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1661:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1666:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1667:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1668:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1669:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1671:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1673:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1676:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1677:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1678:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1679:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1680:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1681:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1682:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1683:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1686:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1690:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1692:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1695:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1696:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1697:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1699:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1701:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1704:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1707:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1712:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1713:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1714:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1716:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1718:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1721:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1722:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1723:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1724:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1725:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1726:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1727:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1728:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1731:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1735:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1737:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1738:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1739:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1742:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1747:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1748:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1749:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1751:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1753:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1756:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1757:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1758:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1759:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1760:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1761:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1762:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1763:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1766:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1770:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1772:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1773:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1774:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1777:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1782:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1783:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1784:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1786:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1788:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1791:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1792:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1793:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1794:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1795:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1796:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1797:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1798:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1801:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1805:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1808:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1809:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1812:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1817:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1818:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1819:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1820:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1822:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1824:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1827:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1828:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1829:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1830:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1831:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1832:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1833:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1836:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1840:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1842:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1843:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1844:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1847:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1852:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1853:  (0) x  (1) r {*floatsisf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1854:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1855:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1856:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1857:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1858:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1859:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1861:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1863:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1866:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1867:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1868:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1869:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1870:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1871:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1872:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1875:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1879:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1881:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1882:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1883:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1886:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1891:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1892:  (0) x  (1) r {*floatsisf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1893:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1894:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1895:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1896:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1897:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1898:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1900:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1902:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1905:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1906:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1907:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1908:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1909:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1910:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1911:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1914:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1918:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1920:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1921:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1922:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1925:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1930:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1931:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1932:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1934:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1936:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1939:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1940:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1941:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1942:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1943:  (0) =r  (1) g {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1944:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1945:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1948:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1952:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1954:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1955:  (0) =q  (1) q {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1956:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1959:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1964:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1965:  (0) x  (1) r {*floatsisf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1966:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1967:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1968:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1978:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r826
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1980:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166
EBB 167
EBB 168
EBB 169

********** Pseudo live ranges #1: **********

  BB 168
   Insn 1980: point = 0
  BB 169
   Insn 1983: point = 0
  BB 167
   Insn 1979: point = 0
   Insn 1978: point = 0
   Insn 1977: point = 1
   Insn 1973: point = 2
  BB 165
   Insn 2128: point = 5
   Insn 1959: point = 5
  BB 159
   Insn 2124: point = 6
   Insn 1886: point = 6
  BB 156
   Insn 2122: point = 7
   Insn 1847: point = 7
  BB 153
   Insn 2120: point = 8
   Insn 1812: point = 8
  BB 150
   Insn 2118: point = 9
   Insn 1777: point = 9
  BB 147
   Insn 2116: point = 10
   Insn 1742: point = 10
  BB 144
   Insn 2114: point = 11
   Insn 1707: point = 11
  BB 139
   Insn 2112: point = 12
   Insn 1661: point = 12
  BB 136
   Insn 2110: point = 13
   Insn 1626: point = 13
  BB 133
   Insn 2108: point = 14
   Insn 1591: point = 14
  BB 130
   Insn 2106: point = 15
   Insn 1556: point = 15
  BB 125
   Insn 2104: point = 16
   Insn 1495: point = 16
  BB 123
   Insn 2102: point = 17
   Insn 1463: point = 17
  BB 121
   Insn 2100: point = 18
   Insn 1430: point = 18
  BB 118
   Insn 2098: point = 19
   Insn 1395: point = 19
  BB 115
   Insn 2096: point = 20
   Insn 1356: point = 20
  BB 112
   Insn 2094: point = 21
   Insn 1321: point = 21
  BB 109
   Insn 2092: point = 22
   Insn 1282: point = 22
  BB 106
   Insn 2090: point = 23
   Insn 1247: point = 23
  BB 101
   Insn 2088: point = 24
   Insn 1162: point = 24
  BB 99
   Insn 2086: point = 25
   Insn 1135: point = 25
  BB 97
   Insn 2084: point = 26
   Insn 1112: point = 26
  BB 95
   Insn 2082: point = 27
   Insn 1089: point = 27
  BB 93
   Insn 2080: point = 28
   Insn 1062: point = 28
  BB 90
   Insn 2078: point = 29
   Insn 1028: point = 29
  BB 87
   Insn 2076: point = 30
   Insn 985: point = 30
  BB 84
   Insn 2074: point = 31
   Insn 951: point = 31
  BB 77
   Insn 2069: point = 32
   Insn 875: point = 32
  BB 74
   Insn 2067: point = 33
   Insn 841: point = 33
  BB 65
   Insn 2061: point = 34
   Insn 681: point = 34
  BB 62
   Insn 2059: point = 35
   Insn 647: point = 35
  BB 59
   Insn 2057: point = 36
   Insn 608: point = 36
  BB 56
   Insn 2055: point = 37
   Insn 574: point = 37
  BB 53
   Insn 2053: point = 38
   Insn 534: point = 38
  BB 50
   Insn 2051: point = 39
   Insn 500: point = 39
  BB 47
   Insn 2049: point = 40
   Insn 461: point = 40
  BB 44
   Insn 2047: point = 41
   Insn 427: point = 41
  BB 41
   Insn 2045: point = 42
   Insn 387: point = 42
  BB 38
   Insn 2043: point = 43
   Insn 353: point = 43
  BB 21
   Insn 2031: point = 44
   Insn 173: point = 44
   Insn 172: point = 45
   Insn 171: point = 46
   Insn 170: point = 46
   Insn 169: point = 48
  BB 3
   Insn 2016: point = 49
   Insn 50: point = 49
   Insn 49: point = 50
   Insn 48: point = 50
   Insn 47: point = 50
   Insn 46: point = 50
   Insn 45: point = 51
   Insn 44: point = 53
  BB 162
   Insn 2126: point = 54
   Insn 1925: point = 54
  BB 166
   Insn 1968: point = 55
   Insn 1967: point = 56
   Insn 1966: point = 57
   Insn 1965: point = 58
   Insn 1964: point = 60
  BB 164
   Insn 1957: point = 61
   Insn 1956: point = 61
   Insn 1955: point = 62
   Insn 1954: point = 64
   Insn 1953: point = 66
   Insn 1952: point = 67
   Insn 1951: point = 67
   Insn 1950: point = 68
   Insn 1949: point = 69
   Insn 1948: point = 70
   Insn 1947: point = 70
   Insn 1946: point = 71
   Insn 1945: point = 72
   Insn 1944: point = 73
   Insn 1943: point = 74
   Insn 1942: point = 75
   Insn 1941: point = 76
   Insn 1940: point = 78
   Insn 1939: point = 80
  BB 163
   Insn 1937: point = 81
   Insn 1936: point = 81
   Insn 1935: point = 82
   Insn 1934: point = 83
   Insn 1933: point = 83
   Insn 1932: point = 84
   Insn 1931: point = 84
   Insn 1930: point = 86
  BB 161
   Insn 1923: point = 87
   Insn 1922: point = 87
   Insn 1921: point = 88
   Insn 1920: point = 90
   Insn 1919: point = 92
   Insn 1918: point = 93
   Insn 1917: point = 93
   Insn 1916: point = 94
   Insn 1915: point = 95
   Insn 1914: point = 96
   Insn 1913: point = 96
   Insn 1912: point = 97
   Insn 1911: point = 98
   Insn 1910: point = 99
   Insn 1909: point = 100
   Insn 1908: point = 101
   Insn 1907: point = 102
   Insn 1906: point = 104
   Insn 1905: point = 106
  BB 160
   Insn 1903: point = 107
   Insn 1902: point = 107
   Insn 1901: point = 108
   Insn 1900: point = 109
   Insn 1899: point = 109
   Insn 1898: point = 110
   Insn 1897: point = 110
   Insn 1896: point = 112
   Insn 1895: point = 113
   Insn 1894: point = 113
   Insn 1893: point = 114
   Insn 1892: point = 115
   Insn 1891: point = 117
  BB 158
   Insn 1884: point = 118
   Insn 1883: point = 118
   Insn 1882: point = 119
   Insn 1881: point = 121
   Insn 1880: point = 123
   Insn 1879: point = 124
   Insn 1878: point = 124
   Insn 1877: point = 125
   Insn 1876: point = 126
   Insn 1875: point = 127
   Insn 1874: point = 127
   Insn 1873: point = 128
   Insn 1872: point = 129
   Insn 1871: point = 130
   Insn 1870: point = 131
   Insn 1869: point = 132
   Insn 1868: point = 133
   Insn 1867: point = 135
   Insn 1866: point = 137
  BB 157
   Insn 1864: point = 138
   Insn 1863: point = 138
   Insn 1862: point = 139
   Insn 1861: point = 140
   Insn 1860: point = 140
   Insn 1859: point = 141
   Insn 1858: point = 141
   Insn 1857: point = 143
   Insn 1856: point = 144
   Insn 1855: point = 144
   Insn 1854: point = 145
   Insn 1853: point = 146
   Insn 1852: point = 148
  BB 155
   Insn 1845: point = 149
   Insn 1844: point = 149
   Insn 1843: point = 150
   Insn 1842: point = 152
   Insn 1841: point = 154
   Insn 1840: point = 155
   Insn 1839: point = 155
   Insn 1838: point = 156
   Insn 1837: point = 157
   Insn 1836: point = 158
   Insn 1835: point = 158
   Insn 1834: point = 159
   Insn 1833: point = 160
   Insn 1832: point = 161
   Insn 1831: point = 162
   Insn 1830: point = 163
   Insn 1829: point = 164
   Insn 1828: point = 166
   Insn 1827: point = 168
  BB 154
   Insn 1825: point = 169
   Insn 1824: point = 169
   Insn 1823: point = 170
   Insn 1822: point = 171
   Insn 1821: point = 171
   Insn 1820: point = 172
   Insn 1819: point = 172
   Insn 1818: point = 174
   Insn 1817: point = 175
  BB 152
   Insn 1810: point = 175
   Insn 1809: point = 175
   Insn 1808: point = 176
   Insn 1807: point = 178
   Insn 1806: point = 180
   Insn 1805: point = 181
   Insn 1804: point = 181
   Insn 1803: point = 182
   Insn 1802: point = 183
   Insn 1801: point = 184
   Insn 1800: point = 184
   Insn 1799: point = 185
   Insn 1798: point = 186
   Insn 1797: point = 187
   Insn 1796: point = 189
   Insn 1795: point = 190
   Insn 1794: point = 191
   Insn 1793: point = 192
   Insn 1792: point = 194
   Insn 1791: point = 196
  BB 151
   Insn 1789: point = 197
   Insn 1788: point = 197
   Insn 1787: point = 198
   Insn 1786: point = 199
   Insn 1785: point = 199
   Insn 1784: point = 200
   Insn 1783: point = 200
   Insn 1782: point = 202
  BB 149
   Insn 1775: point = 203
   Insn 1774: point = 203
   Insn 1773: point = 204
   Insn 1772: point = 206
   Insn 1771: point = 208
   Insn 1770: point = 209
   Insn 1769: point = 209
   Insn 1768: point = 210
   Insn 1767: point = 211
   Insn 1766: point = 212
   Insn 1765: point = 212
   Insn 1764: point = 213
   Insn 1763: point = 214
   Insn 1762: point = 215
   Insn 1761: point = 217
   Insn 1760: point = 218
   Insn 1759: point = 219
   Insn 1758: point = 220
   Insn 1757: point = 222
   Insn 1756: point = 224
  BB 148
   Insn 1754: point = 225
   Insn 1753: point = 225
   Insn 1752: point = 226
   Insn 1751: point = 227
   Insn 1750: point = 227
   Insn 1749: point = 228
   Insn 1748: point = 228
   Insn 1747: point = 230
  BB 146
   Insn 1740: point = 231
   Insn 1739: point = 231
   Insn 1738: point = 232
   Insn 1737: point = 234
   Insn 1736: point = 236
   Insn 1735: point = 237
   Insn 1734: point = 237
   Insn 1733: point = 238
   Insn 1732: point = 239
   Insn 1731: point = 240
   Insn 1730: point = 240
   Insn 1729: point = 241
   Insn 1728: point = 242
   Insn 1727: point = 243
   Insn 1726: point = 245
   Insn 1725: point = 246
   Insn 1724: point = 247
   Insn 1723: point = 248
   Insn 1722: point = 250
   Insn 1721: point = 252
  BB 145
   Insn 1719: point = 253
   Insn 1718: point = 253
   Insn 1717: point = 254
   Insn 1716: point = 255
   Insn 1715: point = 255
   Insn 1714: point = 256
   Insn 1713: point = 256
   Insn 1712: point = 258
  BB 143
   Insn 1705: point = 259
   Insn 1704: point = 259
  BB 142
   Insn 1702: point = 259
   Insn 1701: point = 259
   Insn 1700: point = 260
   Insn 1699: point = 261
   Insn 1698: point = 261
   Insn 1697: point = 262
   Insn 1696: point = 262
   Insn 1695: point = 264
  BB 141
   Insn 1692: point = 265
   Insn 1691: point = 266
   Insn 1690: point = 267
   Insn 1689: point = 267
   Insn 1688: point = 268
   Insn 1687: point = 269
   Insn 1686: point = 270
   Insn 1685: point = 270
   Insn 1684: point = 271
   Insn 1683: point = 272
   Insn 1682: point = 273
   Insn 1681: point = 275
   Insn 1680: point = 276
   Insn 1679: point = 277
   Insn 1678: point = 278
   Insn 1677: point = 280
   Insn 1676: point = 282
  BB 140
   Insn 1674: point = 283
   Insn 1673: point = 283
   Insn 1672: point = 284
   Insn 1671: point = 285
   Insn 1670: point = 285
   Insn 1669: point = 286
   Insn 1668: point = 286
   Insn 1667: point = 288
   Insn 1666: point = 289
  BB 138
   Insn 1659: point = 289
   Insn 1658: point = 289
   Insn 1657: point = 290
   Insn 1656: point = 292
   Insn 1655: point = 294
   Insn 1654: point = 295
   Insn 1653: point = 295
   Insn 1652: point = 296
   Insn 1651: point = 297
   Insn 1650: point = 298
   Insn 1649: point = 298
   Insn 1648: point = 299
   Insn 1647: point = 300
   Insn 1646: point = 301
   Insn 1645: point = 303
   Insn 1644: point = 304
   Insn 1643: point = 305
   Insn 1642: point = 306
   Insn 1641: point = 308
   Insn 1640: point = 310
  BB 137
   Insn 1638: point = 311
   Insn 1637: point = 311
   Insn 1636: point = 312
   Insn 1635: point = 313
   Insn 1634: point = 313
   Insn 1633: point = 314
   Insn 1632: point = 314
   Insn 1631: point = 316
  BB 135
   Insn 1624: point = 317
   Insn 1623: point = 317
   Insn 1622: point = 318
   Insn 1621: point = 320
   Insn 1620: point = 322
   Insn 1619: point = 323
   Insn 1618: point = 323
   Insn 1617: point = 324
   Insn 1616: point = 325
   Insn 1615: point = 326
   Insn 1614: point = 326
   Insn 1613: point = 327
   Insn 1612: point = 328
   Insn 1611: point = 329
   Insn 1610: point = 331
   Insn 1609: point = 332
   Insn 1608: point = 333
   Insn 1607: point = 334
   Insn 1606: point = 336
   Insn 1605: point = 338
  BB 134
   Insn 1603: point = 339
   Insn 1602: point = 339
   Insn 1601: point = 340
   Insn 1600: point = 341
   Insn 1599: point = 341
   Insn 1598: point = 342
   Insn 1597: point = 342
   Insn 1596: point = 344
  BB 132
   Insn 1589: point = 345
   Insn 1588: point = 345
   Insn 1587: point = 346
   Insn 1586: point = 348
   Insn 1585: point = 350
   Insn 1584: point = 351
   Insn 1583: point = 351
   Insn 1582: point = 352
   Insn 1581: point = 353
   Insn 1580: point = 354
   Insn 1579: point = 354
   Insn 1578: point = 355
   Insn 1577: point = 356
   Insn 1576: point = 357
   Insn 1575: point = 359
   Insn 1574: point = 360
   Insn 1573: point = 361
   Insn 1572: point = 362
   Insn 1571: point = 364
   Insn 1570: point = 366
  BB 131
   Insn 1568: point = 367
   Insn 1567: point = 367
   Insn 1566: point = 368
   Insn 1565: point = 369
   Insn 1564: point = 369
   Insn 1563: point = 370
   Insn 1562: point = 370
   Insn 1561: point = 372
  BB 129
   Insn 1554: point = 373
   Insn 1553: point = 373
  BB 128
   Insn 1551: point = 373
   Insn 1550: point = 373
   Insn 1549: point = 374
   Insn 1548: point = 375
   Insn 1547: point = 375
   Insn 1546: point = 376
   Insn 1545: point = 376
   Insn 1544: point = 378
  BB 127
   Insn 1541: point = 379
   Insn 1540: point = 380
   Insn 1539: point = 381
   Insn 1538: point = 381
   Insn 1537: point = 382
   Insn 1536: point = 383
   Insn 1535: point = 384
   Insn 1534: point = 384
   Insn 1533: point = 385
   Insn 1532: point = 386
   Insn 1531: point = 387
   Insn 1530: point = 389
   Insn 1529: point = 390
   Insn 1528: point = 391
   Insn 1527: point = 392
   Insn 1526: point = 394
   Insn 1525: point = 396
  BB 126
   Insn 1523: point = 397
   Insn 1522: point = 397
   Insn 1521: point = 398
   Insn 1520: point = 399
   Insn 1519: point = 399
   Insn 1518: point = 400
   Insn 1517: point = 400
   Insn 1516: point = 402
   Insn 1515: point = 403
   Insn 1514: point = 403
   Insn 1513: point = 404
   Insn 1512: point = 405
   Insn 1511: point = 406
   Insn 1510: point = 407
   Insn 1509: point = 408
   Insn 1508: point = 409
   Insn 1507: point = 410
   Insn 1506: point = 411
   Insn 1505: point = 412
   Insn 1504: point = 413
   Insn 1503: point = 414
   Insn 1502: point = 416
   Insn 1501: point = 417
   Insn 1500: point = 419
  BB 124
   Insn 1493: point = 420
   Insn 1492: point = 420
   Insn 1491: point = 421
   Insn 1490: point = 423
   Insn 1489: point = 425
   Insn 1488: point = 426
   Insn 1487: point = 426
   Insn 1486: point = 427
   Insn 1485: point = 428
   Insn 1484: point = 429
   Insn 1483: point = 429
   Insn 1482: point = 430
   Insn 1481: point = 431
   Insn 1480: point = 432
   Insn 1479: point = 433
   Insn 1478: point = 434
   Insn 1477: point = 435
   Insn 1476: point = 437
   Insn 1475: point = 439
   Insn 1474: point = 440
   Insn 1473: point = 440
   Insn 1472: point = 441
   Insn 1471: point = 442
   Insn 1470: point = 444
   Insn 1469: point = 445
   Insn 1468: point = 447
  BB 122
   Insn 1461: point = 448
   Insn 1460: point = 448
   Insn 1459: point = 449
   Insn 1458: point = 451
   Insn 1457: point = 453
   Insn 1456: point = 454
   Insn 1455: point = 454
   Insn 1454: point = 455
   Insn 1453: point = 456
   Insn 1452: point = 457
   Insn 1451: point = 457
   Insn 1450: point = 458
   Insn 1449: point = 459
   Insn 1448: point = 460
   Insn 1447: point = 461
   Insn 1446: point = 462
   Insn 1445: point = 463
   Insn 1444: point = 465
   Insn 1443: point = 467
   Insn 1442: point = 468
   Insn 1441: point = 468
   Insn 1440: point = 469
   Insn 1439: point = 470
   Insn 1438: point = 471
   Insn 1437: point = 472
   Insn 1436: point = 473
   Insn 1435: point = 475
  BB 120
   Insn 1428: point = 476
   Insn 1427: point = 476
   Insn 1426: point = 477
   Insn 1425: point = 479
   Insn 1424: point = 481
   Insn 1423: point = 482
   Insn 1422: point = 482
   Insn 1421: point = 483
   Insn 1420: point = 484
   Insn 1419: point = 485
   Insn 1418: point = 485
   Insn 1417: point = 486
   Insn 1416: point = 487
   Insn 1415: point = 488
   Insn 1414: point = 490
   Insn 1413: point = 491
   Insn 1412: point = 492
   Insn 1411: point = 493
   Insn 1410: point = 495
   Insn 1409: point = 497
  BB 119
   Insn 1407: point = 498
   Insn 1406: point = 498
   Insn 1405: point = 499
   Insn 1404: point = 500
   Insn 1403: point = 500
   Insn 1402: point = 501
   Insn 1401: point = 501
   Insn 1400: point = 503
  BB 117
   Insn 1393: point = 504
   Insn 1392: point = 504
   Insn 1391: point = 505
   Insn 1390: point = 507
   Insn 1389: point = 509
   Insn 1388: point = 510
   Insn 1387: point = 510
   Insn 1386: point = 511
   Insn 1385: point = 512
   Insn 1384: point = 513
   Insn 1383: point = 513
   Insn 1382: point = 514
   Insn 1381: point = 515
   Insn 1380: point = 516
   Insn 1379: point = 518
   Insn 1378: point = 519
   Insn 1377: point = 520
   Insn 1376: point = 521
   Insn 1375: point = 523
   Insn 1374: point = 525
  BB 116
   Insn 1372: point = 526
   Insn 1371: point = 526
   Insn 1370: point = 527
   Insn 1369: point = 528
   Insn 1368: point = 528
   Insn 1367: point = 529
   Insn 1366: point = 529
   Insn 1365: point = 531
   Insn 1364: point = 532
   Insn 1363: point = 533
   Insn 1362: point = 534
   Insn 1361: point = 536
  BB 114
   Insn 1354: point = 537
   Insn 1353: point = 537
   Insn 1352: point = 538
   Insn 1351: point = 540
   Insn 1350: point = 542
   Insn 1349: point = 543
   Insn 1348: point = 543
   Insn 1347: point = 544
   Insn 1346: point = 545
   Insn 1345: point = 546
   Insn 1344: point = 546
   Insn 1343: point = 547
   Insn 1342: point = 548
   Insn 1341: point = 549
   Insn 1340: point = 551
   Insn 1339: point = 552
   Insn 1338: point = 553
   Insn 1337: point = 554
   Insn 1336: point = 556
   Insn 1335: point = 558
  BB 113
   Insn 1333: point = 559
   Insn 1332: point = 559
   Insn 1331: point = 560
   Insn 1330: point = 561
   Insn 1329: point = 561
   Insn 1328: point = 562
   Insn 1327: point = 562
   Insn 1326: point = 564
  BB 111
   Insn 1319: point = 565
   Insn 1318: point = 565
   Insn 1317: point = 566
   Insn 1316: point = 568
   Insn 1315: point = 570
   Insn 1314: point = 571
   Insn 1313: point = 571
   Insn 1312: point = 572
   Insn 1311: point = 573
   Insn 1310: point = 574
   Insn 1309: point = 574
   Insn 1308: point = 575
   Insn 1307: point = 576
   Insn 1306: point = 577
   Insn 1305: point = 579
   Insn 1304: point = 580
   Insn 1303: point = 581
   Insn 1302: point = 582
   Insn 1301: point = 584
   Insn 1300: point = 586
  BB 110
   Insn 1298: point = 587
   Insn 1297: point = 587
   Insn 1296: point = 588
   Insn 1295: point = 589
   Insn 1294: point = 589
   Insn 1293: point = 590
   Insn 1292: point = 590
   Insn 1291: point = 592
   Insn 1290: point = 593
   Insn 1289: point = 594
   Insn 1288: point = 595
   Insn 1287: point = 597
  BB 108
   Insn 1280: point = 598
   Insn 1279: point = 598
   Insn 1278: point = 599
   Insn 1277: point = 601
   Insn 1276: point = 603
   Insn 1275: point = 604
   Insn 1274: point = 604
   Insn 1273: point = 605
   Insn 1272: point = 606
   Insn 1271: point = 607
   Insn 1270: point = 607
   Insn 1269: point = 608
   Insn 1268: point = 609
   Insn 1267: point = 610
   Insn 1266: point = 612
   Insn 1265: point = 613
   Insn 1264: point = 614
   Insn 1263: point = 615
   Insn 1262: point = 617
   Insn 1261: point = 619
  BB 107
   Insn 1259: point = 620
   Insn 1258: point = 620
   Insn 1257: point = 621
   Insn 1256: point = 622
   Insn 1255: point = 622
   Insn 1254: point = 623
   Insn 1253: point = 623
   Insn 1252: point = 625
  BB 105
   Insn 1245: point = 626
   Insn 1244: point = 626
  BB 104
   Insn 1242: point = 626
   Insn 1241: point = 626
   Insn 1240: point = 627
   Insn 1239: point = 628
   Insn 1238: point = 628
   Insn 1237: point = 629
   Insn 1236: point = 629
   Insn 1235: point = 631
  BB 103
   Insn 1232: point = 632
   Insn 1231: point = 633
   Insn 1230: point = 634
   Insn 1229: point = 634
   Insn 1228: point = 635
   Insn 1227: point = 636
   Insn 1226: point = 637
   Insn 1225: point = 637
   Insn 1224: point = 638
   Insn 1223: point = 639
   Insn 1222: point = 640
   Insn 1221: point = 642
   Insn 1220: point = 643
   Insn 1219: point = 644
   Insn 1218: point = 645
   Insn 1217: point = 647
   Insn 1216: point = 649
  BB 102
   Insn 1214: point = 650
   Insn 1213: point = 650
   Insn 1212: point = 651
   Insn 1211: point = 652
   Insn 1210: point = 652
   Insn 1209: point = 653
   Insn 1208: point = 653
   Insn 1207: point = 655
   Insn 1206: point = 656
   Insn 1205: point = 656
   Insn 1204: point = 656
   Insn 1203: point = 656
   Insn 1202: point = 657
   Insn 1201: point = 658
   Insn 1200: point = 659
   Insn 1199: point = 660
   Insn 1198: point = 661
   Insn 1197: point = 662
   Insn 1196: point = 663
   Insn 1195: point = 664
   Insn 1194: point = 665
   Insn 1193: point = 666
   Insn 1192: point = 667
   Insn 1191: point = 669
   Insn 1190: point = 670
   Insn 1189: point = 670
   Insn 1188: point = 671
   Insn 1187: point = 672
   Insn 1186: point = 672
   Insn 1185: point = 673
   Insn 1184: point = 674
   Insn 1183: point = 674
   Insn 1182: point = 675
   Insn 1181: point = 676
   Insn 1180: point = 677
   Insn 1179: point = 679
   Insn 1178: point = 680
   Insn 1177: point = 681
   Insn 1176: point = 681
   Insn 1175: point = 682
   Insn 1174: point = 683
   Insn 1173: point = 685
   Insn 1172: point = 686
   Insn 1171: point = 686
   Insn 1170: point = 687
   Insn 1169: point = 688
   Insn 1168: point = 688
   Insn 1167: point = 689
  BB 100
   Insn 1160: point = 690
   Insn 1159: point = 690
   Insn 1158: point = 691
   Insn 1157: point = 693
   Insn 1156: point = 695
   Insn 1155: point = 696
   Insn 1154: point = 696
   Insn 1153: point = 697
   Insn 1152: point = 698
   Insn 1151: point = 699
   Insn 1150: point = 700
   Insn 1149: point = 701
   Insn 1148: point = 702
   Insn 1147: point = 703
   Insn 1146: point = 704
   Insn 1145: point = 705
   Insn 1144: point = 706
   Insn 1143: point = 707
   Insn 1142: point = 709
   Insn 1141: point = 711
   Insn 1140: point = 712
  BB 98
   Insn 1133: point = 712
   Insn 1132: point = 712
   Insn 1131: point = 713
   Insn 1130: point = 715
   Insn 1129: point = 717
   Insn 1128: point = 718
   Insn 1127: point = 718
   Insn 1126: point = 719
   Insn 1125: point = 720
   Insn 1124: point = 721
   Insn 1123: point = 722
   Insn 1122: point = 722
   Insn 1121: point = 722
   Insn 1120: point = 723
   Insn 1119: point = 724
   Insn 1118: point = 726
   Insn 1117: point = 727
  BB 96
   Insn 1110: point = 728
   Insn 1109: point = 728
   Insn 1108: point = 729
   Insn 1107: point = 731
   Insn 1106: point = 733
   Insn 1105: point = 734
   Insn 1104: point = 734
   Insn 1103: point = 735
   Insn 1102: point = 736
   Insn 1101: point = 737
   Insn 1100: point = 738
   Insn 1099: point = 738
   Insn 1098: point = 738
   Insn 1097: point = 739
   Insn 1096: point = 740
   Insn 1095: point = 742
   Insn 1094: point = 743
  BB 94
   Insn 1087: point = 744
   Insn 1086: point = 744
   Insn 1085: point = 745
   Insn 1084: point = 747
   Insn 1083: point = 749
   Insn 1082: point = 750
   Insn 1081: point = 750
   Insn 1080: point = 751
   Insn 1079: point = 752
   Insn 1078: point = 753
   Insn 1077: point = 754
   Insn 1076: point = 754
   Insn 1075: point = 754
   Insn 1074: point = 755
   Insn 1073: point = 756
   Insn 1072: point = 758
   Insn 1071: point = 759
   Insn 1070: point = 760
   Insn 1069: point = 761
   Insn 1068: point = 762
   Insn 1067: point = 764
  BB 92
   Insn 1060: point = 765
   Insn 1059: point = 765
   Insn 1058: point = 766
   Insn 1057: point = 768
   Insn 1056: point = 770
   Insn 1055: point = 771
   Insn 1054: point = 771
   Insn 1053: point = 772
   Insn 1052: point = 773
   Insn 1051: point = 774
   Insn 1050: point = 774
   Insn 1049: point = 775
   Insn 1048: point = 776
   Insn 1047: point = 777
   Insn 1046: point = 778
   Insn 1045: point = 779
   Insn 1044: point = 780
   Insn 1043: point = 782
   Insn 1042: point = 784
  BB 91
   Insn 1040: point = 785
   Insn 1039: point = 785
   Insn 1038: point = 786
   Insn 1037: point = 787
   Insn 1036: point = 787
   Insn 1035: point = 788
   Insn 1034: point = 788
   Insn 1033: point = 790
  BB 89
   Insn 1026: point = 791
   Insn 1025: point = 791
   Insn 1024: point = 792
   Insn 1023: point = 794
   Insn 1022: point = 796
   Insn 1021: point = 797
   Insn 1020: point = 797
   Insn 1019: point = 798
   Insn 1018: point = 799
   Insn 1017: point = 800
   Insn 1016: point = 800
   Insn 1015: point = 801
   Insn 1014: point = 802
   Insn 1013: point = 803
   Insn 1012: point = 804
   Insn 1011: point = 805
   Insn 1010: point = 806
   Insn 1009: point = 808
   Insn 1008: point = 810
  BB 88
   Insn 1006: point = 811
   Insn 1005: point = 811
   Insn 1004: point = 812
   Insn 1003: point = 813
   Insn 1002: point = 813
   Insn 1001: point = 814
   Insn 1000: point = 814
   Insn 999: point = 816
   Insn 998: point = 817
   Insn 997: point = 818
   Insn 996: point = 819
   Insn 995: point = 820
   Insn 994: point = 821
   Insn 993: point = 822
   Insn 992: point = 823
   Insn 991: point = 824
   Insn 990: point = 826
  BB 86
   Insn 983: point = 827
   Insn 982: point = 827
   Insn 981: point = 828
   Insn 980: point = 830
   Insn 979: point = 832
   Insn 978: point = 833
   Insn 977: point = 833
   Insn 976: point = 834
   Insn 975: point = 835
   Insn 974: point = 836
   Insn 973: point = 836
   Insn 972: point = 837
   Insn 971: point = 838
   Insn 970: point = 839
   Insn 969: point = 840
   Insn 968: point = 841
   Insn 967: point = 842
   Insn 966: point = 844
   Insn 965: point = 846
  BB 85
   Insn 963: point = 847
   Insn 962: point = 847
   Insn 961: point = 848
   Insn 960: point = 849
   Insn 959: point = 849
   Insn 958: point = 850
   Insn 957: point = 850
   Insn 956: point = 852
  BB 83
   Insn 949: point = 853
   Insn 948: point = 853
   Insn 947: point = 854
   Insn 946: point = 856
   Insn 945: point = 858
   Insn 944: point = 859
   Insn 943: point = 859
   Insn 942: point = 860
   Insn 941: point = 861
   Insn 940: point = 862
   Insn 939: point = 862
   Insn 938: point = 863
   Insn 937: point = 864
   Insn 936: point = 865
   Insn 935: point = 866
   Insn 934: point = 867
   Insn 933: point = 868
   Insn 932: point = 870
   Insn 931: point = 872
  BB 82
   Insn 929: point = 873
   Insn 928: point = 873
   Insn 927: point = 874
   Insn 926: point = 875
   Insn 925: point = 875
   Insn 924: point = 876
   Insn 923: point = 876
   Insn 922: point = 878
   Insn 921: point = 879
   Insn 920: point = 879
   Insn 919: point = 880
   Insn 918: point = 881
   Insn 917: point = 883
   Insn 916: point = 884
   Insn 915: point = 886
   Insn 914: point = 888
  BB 80
   Insn 2072: point = 889
   Insn 894: point = 889
   Insn 893: point = 890
   Insn 892: point = 892
   Insn 891: point = 893
  BB 81
   Insn 911: point = 894
   Insn 910: point = 895
   Insn 909: point = 897
   Insn 908: point = 898
   Insn 907: point = 899
   Insn 906: point = 899
   Insn 905: point = 899
   Insn 904: point = 899
   Insn 903: point = 900
   Insn 902: point = 901
   Insn 901: point = 901
   Insn 900: point = 901
   Insn 899: point = 901
  BB 79
   Insn 886: point = 901
   Insn 885: point = 901
   Insn 884: point = 902
  BB 78
   Insn 883: point = 904
   Insn 882: point = 904
   Insn 881: point = 905
   Insn 880: point = 906
  BB 76
   Insn 873: point = 907
   Insn 872: point = 907
   Insn 871: point = 908
   Insn 870: point = 910
   Insn 869: point = 912
   Insn 868: point = 913
   Insn 867: point = 913
   Insn 866: point = 914
   Insn 865: point = 915
   Insn 864: point = 916
   Insn 863: point = 916
   Insn 862: point = 917
   Insn 861: point = 918
   Insn 860: point = 919
   Insn 859: point = 920
   Insn 858: point = 921
   Insn 857: point = 922
   Insn 856: point = 924
   Insn 855: point = 926
  BB 75
   Insn 853: point = 927
   Insn 852: point = 927
   Insn 851: point = 928
   Insn 850: point = 929
   Insn 849: point = 929
   Insn 848: point = 930
   Insn 847: point = 930
   Insn 846: point = 932
  BB 73
   Insn 839: point = 933
   Insn 838: point = 933
   Insn 837: point = 934
   Insn 836: point = 936
   Insn 835: point = 938
   Insn 834: point = 939
   Insn 833: point = 939
   Insn 832: point = 940
   Insn 831: point = 941
   Insn 830: point = 942
   Insn 829: point = 942
   Insn 828: point = 943
   Insn 827: point = 944
   Insn 826: point = 945
   Insn 825: point = 946
   Insn 824: point = 947
   Insn 823: point = 948
   Insn 822: point = 950
   Insn 821: point = 952
  BB 72
   Insn 819: point = 953
   Insn 818: point = 953
   Insn 817: point = 954
   Insn 816: point = 955
   Insn 815: point = 955
   Insn 814: point = 956
   Insn 813: point = 956
   Insn 812: point = 958
   Insn 811: point = 959
   Insn 810: point = 960
   Insn 809: point = 961
   Insn 808: point = 962
   Insn 807: point = 964
   Insn 803: point = 965
   Insn 802: point = 967
   Insn 801: point = 969
   Insn 800: point = 971
   Insn 799: point = 972
   Insn 798: point = 974
   Insn 797: point = 976
   Insn 796: point = 978
   Insn 795: point = 979
   Insn 794: point = 981
   Insn 793: point = 983
   Insn 792: point = 985
   Insn 791: point = 986
   Insn 790: point = 988
   Insn 789: point = 990
   Insn 788: point = 991
   Insn 787: point = 992
   Insn 786: point = 993
   Insn 785: point = 995
   Insn 784: point = 996
   Insn 783: point = 996
   Insn 782: point = 997
   Insn 781: point = 998
   Insn 780: point = 998
   Insn 779: point = 999
   Insn 778: point = 999
   Insn 777: point = 999
   Insn 776: point = 1000
   Insn 775: point = 1000
   Insn 774: point = 1000
   Insn 773: point = 1000
   Insn 772: point = 1001
   Insn 771: point = 1003
   Insn 770: point = 1004
   Insn 769: point = 1004
   Insn 768: point = 1004
   Insn 767: point = 1004
   Insn 766: point = 1005
   Insn 765: point = 1007
   Insn 764: point = 1008
   Insn 763: point = 1008
   Insn 762: point = 1008
   Insn 761: point = 1008
   Insn 760: point = 1009
   Insn 759: point = 1010
   Insn 758: point = 1011
   Insn 757: point = 1012
   Insn 756: point = 1013
   Insn 755: point = 1013
   Insn 754: point = 1013
   Insn 753: point = 1013
   Insn 752: point = 1014
   Insn 751: point = 1016
   Insn 750: point = 1017
   Insn 749: point = 1018
   Insn 748: point = 1019
   Insn 747: point = 1021
   Insn 746: point = 1023
   Insn 745: point = 1025
   Insn 744: point = 1027
   Insn 743: point = 1029
   Insn 742: point = 1030
   Insn 741: point = 1032
  BB 69
   Insn 2065: point = 1033
   Insn 727: point = 1033
   Insn 726: point = 1033
   Insn 725: point = 1034
  BB 67
   Insn 2063: point = 1035
   Insn 716: point = 1035
   Insn 715: point = 1035
   Insn 714: point = 1036
  BB 71
   Insn 738: point = 1037
   Insn 737: point = 1037
   Insn 736: point = 1038
  BB 70
   Insn 734: point = 1039
   Insn 733: point = 1039
   Insn 732: point = 1040
  BB 68
   Insn 723: point = 1041
   Insn 722: point = 1041
   Insn 721: point = 1042
  BB 66
   Insn 712: point = 1043
   Insn 711: point = 1043
   Insn 710: point = 1044
   Insn 709: point = 1045
   Insn 708: point = 1045
   Insn 707: point = 1045
   Insn 706: point = 1045
   Insn 705: point = 1046
   Insn 704: point = 1047
   Insn 703: point = 1047
   Insn 702: point = 1047
   Insn 701: point = 1047
   Insn 700: point = 1048
   Insn 699: point = 1050
   Insn 698: point = 1052
   Insn 697: point = 1054
   Insn 696: point = 1055
   Insn 695: point = 1057
   Insn 694: point = 1059
   Insn 693: point = 1060
   Insn 692: point = 1061
   Insn 691: point = 1062
   Insn 690: point = 1064
   Insn 689: point = 1065
   Insn 688: point = 1066
   Insn 687: point = 1067
   Insn 686: point = 1069
  BB 64
   Insn 679: point = 1070
   Insn 678: point = 1070
   Insn 677: point = 1071
   Insn 676: point = 1073
   Insn 675: point = 1075
   Insn 674: point = 1076
   Insn 673: point = 1076
   Insn 672: point = 1077
   Insn 671: point = 1078
   Insn 670: point = 1079
   Insn 669: point = 1079
   Insn 668: point = 1080
   Insn 667: point = 1081
   Insn 666: point = 1082
   Insn 665: point = 1083
   Insn 664: point = 1084
   Insn 663: point = 1085
   Insn 662: point = 1087
   Insn 661: point = 1089
  BB 63
   Insn 659: point = 1090
   Insn 658: point = 1090
   Insn 657: point = 1091
   Insn 656: point = 1092
   Insn 655: point = 1092
   Insn 654: point = 1093
   Insn 653: point = 1093
   Insn 652: point = 1095
  BB 61
   Insn 645: point = 1096
   Insn 644: point = 1096
   Insn 643: point = 1097
   Insn 642: point = 1099
   Insn 641: point = 1101
   Insn 640: point = 1102
   Insn 639: point = 1102
   Insn 638: point = 1103
   Insn 637: point = 1104
   Insn 636: point = 1105
   Insn 635: point = 1105
   Insn 634: point = 1106
   Insn 633: point = 1107
   Insn 632: point = 1108
   Insn 631: point = 1109
   Insn 630: point = 1110
   Insn 629: point = 1111
   Insn 628: point = 1113
   Insn 627: point = 1115
  BB 60
   Insn 625: point = 1116
   Insn 624: point = 1116
   Insn 623: point = 1117
   Insn 622: point = 1118
   Insn 621: point = 1118
   Insn 620: point = 1119
   Insn 619: point = 1119
   Insn 618: point = 1121
   Insn 617: point = 1122
   Insn 616: point = 1122
   Insn 615: point = 1123
   Insn 614: point = 1124
   Insn 613: point = 1126
  BB 58
   Insn 606: point = 1127
   Insn 605: point = 1127
   Insn 604: point = 1128
   Insn 603: point = 1130
   Insn 602: point = 1132
   Insn 601: point = 1133
   Insn 600: point = 1133
   Insn 599: point = 1134
   Insn 598: point = 1135
   Insn 597: point = 1136
   Insn 596: point = 1136
   Insn 595: point = 1137
   Insn 594: point = 1138
   Insn 593: point = 1139
   Insn 592: point = 1140
   Insn 591: point = 1141
   Insn 590: point = 1142
   Insn 589: point = 1144
   Insn 588: point = 1146
  BB 57
   Insn 586: point = 1147
   Insn 585: point = 1147
   Insn 584: point = 1148
   Insn 583: point = 1149
   Insn 582: point = 1149
   Insn 581: point = 1150
   Insn 580: point = 1150
   Insn 579: point = 1152
  BB 55
   Insn 572: point = 1153
   Insn 571: point = 1153
   Insn 570: point = 1154
   Insn 569: point = 1156
   Insn 568: point = 1158
   Insn 567: point = 1159
   Insn 566: point = 1159
   Insn 565: point = 1160
   Insn 564: point = 1161
   Insn 563: point = 1162
   Insn 562: point = 1162
   Insn 561: point = 1163
   Insn 560: point = 1164
   Insn 559: point = 1165
   Insn 558: point = 1166
   Insn 557: point = 1167
   Insn 556: point = 1168
   Insn 555: point = 1170
   Insn 554: point = 1172
  BB 54
   Insn 552: point = 1173
   Insn 551: point = 1173
   Insn 550: point = 1174
   Insn 549: point = 1175
   Insn 548: point = 1175
   Insn 547: point = 1176
   Insn 546: point = 1176
   Insn 545: point = 1178
   Insn 544: point = 1179
   Insn 543: point = 1179
   Insn 542: point = 1180
   Insn 541: point = 1181
   Insn 540: point = 1183
   Insn 539: point = 1185
  BB 52
   Insn 532: point = 1186
   Insn 531: point = 1186
   Insn 530: point = 1187
   Insn 529: point = 1189
   Insn 528: point = 1191
   Insn 527: point = 1192
   Insn 526: point = 1192
   Insn 525: point = 1193
   Insn 524: point = 1194
   Insn 523: point = 1195
   Insn 522: point = 1195
   Insn 521: point = 1196
   Insn 520: point = 1197
   Insn 519: point = 1198
   Insn 518: point = 1199
   Insn 517: point = 1200
   Insn 516: point = 1201
   Insn 515: point = 1203
   Insn 514: point = 1205
  BB 51
   Insn 512: point = 1206
   Insn 511: point = 1206
   Insn 510: point = 1207
   Insn 509: point = 1208
   Insn 508: point = 1208
   Insn 507: point = 1209
   Insn 506: point = 1209
   Insn 505: point = 1211
  BB 49
   Insn 498: point = 1212
   Insn 497: point = 1212
   Insn 496: point = 1213
   Insn 495: point = 1215
   Insn 494: point = 1217
   Insn 493: point = 1218
   Insn 492: point = 1218
   Insn 491: point = 1219
   Insn 490: point = 1220
   Insn 489: point = 1221
   Insn 488: point = 1221
   Insn 487: point = 1222
   Insn 486: point = 1223
   Insn 485: point = 1224
   Insn 484: point = 1225
   Insn 483: point = 1226
   Insn 482: point = 1227
   Insn 481: point = 1229
   Insn 480: point = 1231
  BB 48
   Insn 478: point = 1232
   Insn 477: point = 1232
   Insn 476: point = 1233
   Insn 475: point = 1234
   Insn 474: point = 1234
   Insn 473: point = 1235
   Insn 472: point = 1235
   Insn 471: point = 1237
   Insn 470: point = 1238
   Insn 469: point = 1238
   Insn 468: point = 1239
   Insn 467: point = 1240
   Insn 466: point = 1242
  BB 46
   Insn 459: point = 1243
   Insn 458: point = 1243
   Insn 457: point = 1244
   Insn 456: point = 1246
   Insn 455: point = 1248
   Insn 454: point = 1249
   Insn 453: point = 1249
   Insn 452: point = 1250
   Insn 451: point = 1251
   Insn 450: point = 1252
   Insn 449: point = 1252
   Insn 448: point = 1253
   Insn 447: point = 1254
   Insn 446: point = 1255
   Insn 445: point = 1256
   Insn 444: point = 1257
   Insn 443: point = 1258
   Insn 442: point = 1260
   Insn 441: point = 1262
  BB 45
   Insn 439: point = 1263
   Insn 438: point = 1263
   Insn 437: point = 1264
   Insn 436: point = 1265
   Insn 435: point = 1265
   Insn 434: point = 1266
   Insn 433: point = 1266
   Insn 432: point = 1268
  BB 43
   Insn 425: point = 1269
   Insn 424: point = 1269
   Insn 423: point = 1270
   Insn 422: point = 1272
   Insn 421: point = 1274
   Insn 420: point = 1275
   Insn 419: point = 1275
   Insn 418: point = 1276
   Insn 417: point = 1277
   Insn 416: point = 1278
   Insn 415: point = 1278
   Insn 414: point = 1279
   Insn 413: point = 1280
   Insn 412: point = 1281
   Insn 411: point = 1282
   Insn 410: point = 1283
   Insn 409: point = 1284
   Insn 408: point = 1286
   Insn 407: point = 1288
  BB 42
   Insn 405: point = 1289
   Insn 404: point = 1289
   Insn 403: point = 1290
   Insn 402: point = 1291
   Insn 401: point = 1291
   Insn 400: point = 1292
   Insn 399: point = 1292
   Insn 398: point = 1294
   Insn 397: point = 1295
   Insn 396: point = 1296
   Insn 395: point = 1297
   Insn 394: point = 1298
   Insn 393: point = 1299
   Insn 392: point = 1301
  BB 40
   Insn 385: point = 1302
   Insn 384: point = 1302
   Insn 383: point = 1303
   Insn 382: point = 1305
   Insn 381: point = 1307
   Insn 380: point = 1308
   Insn 379: point = 1308
   Insn 378: point = 1309
   Insn 377: point = 1310
   Insn 376: point = 1311
   Insn 375: point = 1311
   Insn 374: point = 1312
   Insn 373: point = 1313
   Insn 372: point = 1314
   Insn 371: point = 1315
   Insn 370: point = 1316
   Insn 369: point = 1317
   Insn 368: point = 1319
   Insn 367: point = 1321
  BB 39
   Insn 365: point = 1322
   Insn 364: point = 1322
   Insn 363: point = 1323
   Insn 362: point = 1324
   Insn 361: point = 1324
   Insn 360: point = 1325
   Insn 359: point = 1325
   Insn 358: point = 1327
  BB 37
   Insn 351: point = 1328
   Insn 350: point = 1328
   Insn 349: point = 1329
   Insn 348: point = 1331
   Insn 347: point = 1333
   Insn 346: point = 1334
   Insn 345: point = 1334
   Insn 344: point = 1335
   Insn 343: point = 1336
   Insn 342: point = 1337
   Insn 341: point = 1337
   Insn 340: point = 1338
   Insn 339: point = 1339
   Insn 338: point = 1340
   Insn 337: point = 1341
   Insn 336: point = 1342
   Insn 335: point = 1343
   Insn 334: point = 1345
   Insn 333: point = 1347
  BB 36
   Insn 331: point = 1348
   Insn 330: point = 1348
   Insn 329: point = 1349
   Insn 328: point = 1350
   Insn 327: point = 1350
   Insn 326: point = 1351
   Insn 325: point = 1351
   Insn 324: point = 1353
   Insn 323: point = 1354
  BB 33
   Insn 2041: point = 1354
   Insn 298: point = 1354
   Insn 297: point = 1354
   Insn 296: point = 1354
   Insn 295: point = 1354
   Insn 294: point = 1354
   Insn 293: point = 1354
   Insn 292: point = 1354
   Insn 291: point = 1354
   Insn 290: point = 1354
   Insn 289: point = 1354
   Insn 288: point = 1355
   Insn 287: point = 1357
  BB 31
   Insn 2039: point = 1358
   Insn 273: point = 1358
   Insn 272: point = 1358
   Insn 271: point = 1358
   Insn 270: point = 1358
   Insn 269: point = 1358
   Insn 268: point = 1358
   Insn 267: point = 1358
  BB 29
   Insn 2037: point = 1358
   Insn 253: point = 1358
   Insn 252: point = 1358
   Insn 251: point = 1358
   Insn 250: point = 1358
   Insn 249: point = 1358
   Insn 248: point = 1358
   Insn 247: point = 1358
  BB 27
   Insn 2035: point = 1358
   Insn 233: point = 1358
   Insn 232: point = 1358
   Insn 231: point = 1358
   Insn 230: point = 1358
   Insn 229: point = 1358
   Insn 228: point = 1358
   Insn 227: point = 1358
  BB 24
   Insn 2033: point = 1358
   Insn 203: point = 1358
   Insn 202: point = 1358
   Insn 201: point = 1358
   Insn 200: point = 1358
   Insn 199: point = 1358
   Insn 198: point = 1358
   Insn 197: point = 1358
  BB 35
   Insn 320: point = 1358
   Insn 319: point = 1358
   Insn 318: point = 1358
   Insn 317: point = 1358
   Insn 316: point = 1358
   Insn 315: point = 1358
   Insn 314: point = 1358
   Insn 313: point = 1358
   Insn 312: point = 1358
  BB 34
   Insn 310: point = 1358
   Insn 309: point = 1358
   Insn 308: point = 1359
   Insn 307: point = 1360
   Insn 306: point = 1360
   Insn 305: point = 1361
   Insn 304: point = 1361
   Insn 303: point = 1363
  BB 32
   Insn 285: point = 1364
   Insn 284: point = 1364
   Insn 283: point = 1365
   Insn 282: point = 1366
   Insn 281: point = 1366
   Insn 280: point = 1367
   Insn 279: point = 1367
   Insn 278: point = 1369
  BB 30
   Insn 265: point = 1370
   Insn 264: point = 1370
   Insn 263: point = 1371
   Insn 262: point = 1372
   Insn 261: point = 1372
   Insn 260: point = 1373
   Insn 259: point = 1373
   Insn 258: point = 1375
  BB 28
   Insn 245: point = 1376
   Insn 244: point = 1376
   Insn 243: point = 1377
   Insn 242: point = 1378
   Insn 241: point = 1378
   Insn 240: point = 1379
   Insn 239: point = 1379
   Insn 238: point = 1381
  BB 26
   Insn 224: point = 1382
   Insn 223: point = 1382
   Insn 222: point = 1383
   Insn 221: point = 1384
   Insn 220: point = 1384
   Insn 219: point = 1385
   Insn 218: point = 1385
   Insn 217: point = 1387
  BB 25
   Insn 215: point = 1388
   Insn 214: point = 1388
   Insn 213: point = 1389
   Insn 212: point = 1390
   Insn 211: point = 1390
   Insn 210: point = 1391
   Insn 209: point = 1391
   Insn 208: point = 1393
  BB 23
   Insn 194: point = 1394
   Insn 193: point = 1394
   Insn 192: point = 1395
   Insn 191: point = 1396
   Insn 190: point = 1396
   Insn 189: point = 1397
   Insn 188: point = 1397
   Insn 187: point = 1399
  BB 22
   Insn 185: point = 1400
   Insn 184: point = 1400
   Insn 183: point = 1401
   Insn 182: point = 1402
   Insn 181: point = 1402
   Insn 180: point = 1403
   Insn 179: point = 1403
   Insn 178: point = 1405
  BB 20
   Insn 2029: point = 1406
   Insn 164: point = 1406
   Insn 163: point = 1406
   Insn 2132: point = 1407
   Insn 162: point = 1408
   Insn 161: point = 1409
   Insn 160: point = 1411
   Insn 159: point = 1412
   Insn 158: point = 1412
   Insn 157: point = 1412
   Insn 156: point = 1412
   Insn 155: point = 1413
   Insn 154: point = 1415
  BB 19
   Insn 149: point = 1416
   Insn 148: point = 1416
   Insn 147: point = 1417
   Insn 146: point = 1418
  BB 18
   Insn 141: point = 1419
   Insn 140: point = 1419
   Insn 139: point = 1420
  BB 15
   Insn 2024: point = 1421
   Insn 118: point = 1421
   Insn 117: point = 1422
   Insn 116: point = 1422
   Insn 115: point = 1424
  BB 12
   Insn 2022: point = 1425
   Insn 101: point = 1425
   Insn 100: point = 1426
   Insn 99: point = 1426
   Insn 98: point = 1428
  BB 9
   Insn 2020: point = 1429
   Insn 84: point = 1429
   Insn 83: point = 1430
   Insn 82: point = 1430
   Insn 81: point = 1432
  BB 6
   Insn 2018: point = 1433
   Insn 67: point = 1433
   Insn 66: point = 1434
   Insn 65: point = 1434
   Insn 64: point = 1436
  BB 17
   Insn 2027: point = 1437
   Insn 134: point = 1437
   Insn 133: point = 1437
   Insn 2131: point = 1438
   Insn 132: point = 1439
   Insn 131: point = 1440
   Insn 130: point = 1442
  BB 16
   Insn 125: point = 1443
   Insn 124: point = 1443
   Insn 123: point = 1444
  BB 14
   Insn 110: point = 1445
   Insn 109: point = 1445
  BB 13
   Insn 108: point = 1447
   Insn 107: point = 1447
   Insn 106: point = 1447
  BB 11
   Insn 93: point = 1448
   Insn 92: point = 1448
  BB 10
   Insn 91: point = 1450
   Insn 90: point = 1450
   Insn 89: point = 1450
  BB 8
   Insn 76: point = 1451
   Insn 75: point = 1451
  BB 7
   Insn 74: point = 1453
   Insn 73: point = 1453
   Insn 72: point = 1453
  BB 5
   Insn 59: point = 1454
   Insn 58: point = 1454
  BB 4
   Insn 57: point = 1456
   Insn 56: point = 1456
   Insn 55: point = 1456
  BB 2
   Insn 42: point = 1457
   Insn 41: point = 1457
   Insn 40: point = 1458
   Insn 39: point = 1460
   Insn 38: point = 1462
   Insn 37: point = 1463
   Insn 36: point = 1463
   Insn 35: point = 1464
   Insn 34: point = 1465
   Insn 33: point = 1466
   Insn 32: point = 1466
   Insn 31: point = 1467
   Insn 30: point = 1468
   Insn 29: point = 1469
   Insn 28: point = 1470
   Insn 27: point = 1471
   Insn 26: point = 1472
   Insn 25: point = 1474
   Insn 24: point = 1476
   Insn 23: point = 1477
   Insn 22: point = 1477
   Insn 21: point = 1477
   Insn 20: point = 1477
   Insn 19: point = 1477
   Insn 18: point = 1477
   Insn 17: point = 1477
   Insn 16: point = 1477
   Insn 15: point = 1477
   Insn 14: point = 1477
   Insn 13: point = 1478
   Insn 12: point = 1479
   Insn 9: point = 1479
   Insn 7: point = 1481
   Insn 6: point = 1481
   Insn 5: point = 1481
   Insn 4: point = 1481
   Insn 3: point = 1481
   Insn 2: point = 1481
 r87: [54..55] [49..49] [3..44]
 r88: [1473..1474]
 r89: [1467..1472]
 r90: [1466..1471]
 r91: [1465..1470]
 r92: [1461..1462]
 r93: [1457..1458]
 r94: [52..53]
 r95: [50..51]
 r96: [1454..1456]
 r97: [1451..1453]
 r98: [1448..1450]
 r99: [1445..1447]
 r100: [1443..1444]
 r101: [1419..1420]
 r102: [1416..1418]
 r103: [1414..1415]
 r104: [1412..1413]
 r105: [1406..1409]
 r106: [45..46]
 r107: [1437..1440]
 r108: [1421..1422]
 r109: [1425..1426]
 r110: [1429..1430]
 r111: [1433..1434]
 r112: [1402..1403]
 r113: [1400..1401]
 r114: [1396..1397]
 r115: [1394..1395]
 r116: [1390..1391]
 r117: [1388..1389]
 r118: [1384..1385]
 r119: [1382..1383]
 r120: [1378..1379]
 r121: [1376..1377]
 r122: [1372..1373]
 r123: [1370..1371]
 r124: [1366..1367]
 r125: [1364..1365]
 r126: [1354..1355]
 r127: [1360..1361]
 r128: [1358..1359]
 r129: [1350..1351]
 r130: [1348..1349]
 r131: [1344..1345]
 r132: [1338..1343]
 r133: [1337..1342]
 r134: [1336..1341]
 r135: [1332..1333]
 r136: [1328..1329]
 r137: [1324..1325]
 r138: [1322..1323]
 r139: [1318..1319]
 r140: [1312..1317]
 r141: [1311..1316]
 r142: [1310..1315]
 r143: [1306..1307]
 r144: [1302..1303]
 r145: [1300..1301]
 r146: [1297..1299]
 r147: [1291..1292]
 r148: [1289..1290]
 r149: [1285..1286]
 r150: [1279..1284]
 r151: [1278..1283]
 r152: [1277..1282]
 r153: [1273..1274]
 r154: [1269..1270]
 r155: [1265..1266]
 r156: [1263..1264]
 r157: [1259..1260]
 r158: [1253..1258]
 r159: [1252..1257]
 r160: [1251..1256]
 r161: [1247..1248]
 r162: [1243..1244]
 r163: [1241..1242]
 r164: [1238..1240]
 r165: [1234..1235]
 r166: [1232..1233]
 r167: [1228..1229]
 r168: [1222..1227]
 r169: [1221..1226]
 r170: [1220..1225]
 r171: [1216..1217]
 r172: [1212..1213]
 r173: [1208..1209]
 r174: [1206..1207]
 r175: [1202..1203]
 r176: [1196..1201]
 r177: [1195..1200]
 r178: [1194..1199]
 r179: [1190..1191]
 r180: [1186..1187]
 r181: [1184..1185]
 r182: [1182..1183]
 r183: [1179..1181]
 r184: [1175..1176]
 r185: [1173..1174]
 r186: [1169..1170]
 r187: [1163..1168]
 r188: [1162..1167]
 r189: [1161..1166]
 r190: [1157..1158]
 r191: [1153..1154]
 r192: [1149..1150]
 r193: [1147..1148]
 r194: [1143..1144]
 r195: [1137..1142]
 r196: [1136..1141]
 r197: [1135..1140]
 r198: [1131..1132]
 r199: [1127..1128]
 r200: [1125..1126]
 r201: [1122..1124]
 r202: [1118..1119]
 r203: [1116..1117]
 r204: [1112..1113]
 r205: [1106..1111]
 r206: [1105..1110]
 r207: [1104..1109]
 r208: [1100..1101]
 r209: [1096..1097]
 r210: [1092..1093]
 r211: [1090..1091]
 r212: [1086..1087]
 r213: [1080..1085]
 r214: [1079..1084]
 r215: [1078..1083]
 r216: [1074..1075]
 r217: [1070..1071]
 r218: [1068..1069]
 r219: [1065..1067]
 r220: [1063..1064]
 r221: [1060..1062]
 r222: [1056..1057]
 r223: [1049..1055]
 r224: [1051..1052]
 r225: [1049..1050]
 r226: [1047..1048]
 r227: [1043..1044]
 r228: [1041..1042]
 r229: [1039..1040]
 r230: [1022..1030]
 r231: [1026..1027]
 r232: [1024..1025]
 r233: [1022..1023]
 r234: [1017..1019]
 r235: [1013..1014]
 r236: [1010..1012]
 r237: [1004..1005]
 r238: [1000..1001]
 r239: [994..995]
 r240: [991..993]
 r241: [987..988]
 r242: [980..986]
 r243: [982..983]
 r244: [980..981]
 r245: [973..979]
 r246: [975..976]
 r247: [973..974]
 r248: [966..972]
 r249: [968..969]
 r250: [966..967]
 r251: [963..965]
 r252: [955..956]
 r253: [953..954]
 r254: [949..950]
 r255: [943..948]
 r256: [942..947]
 r257: [941..946]
 r258: [937..938]
 r259: [933..934]
 r260: [929..930]
 r261: [927..928]
 r262: [923..924]
 r263: [917..922]
 r264: [916..921]
 r265: [915..920]
 r266: [911..912]
 r267: [907..908]
 r268: [901..906]
 r269: [891..893]
 r270: [889..890]
 r271: [896..898]
 r272: [894..895]
 r273: [885..886]
 r274: [882..884]
 r275: [882..883]
 r276: [879..881]
 r277: [875..876]
 r278: [873..874]
 r279: [869..870]
 r280: [863..868]
 r281: [862..867]
 r282: [861..866]
 r283: [857..858]
 r284: [853..854]
 r285: [849..850]
 r286: [847..848]
 r287: [843..844]
 r288: [837..842]
 r289: [836..841]
 r290: [835..840]
 r291: [831..832]
 r292: [827..828]
 r293: [825..826]
 r294: [822..824]
 r295: [813..814]
 r296: [811..812]
 r297: [807..808]
 r298: [801..806]
 r299: [800..805]
 r300: [799..804]
 r301: [795..796]
 r302: [791..792]
 r303: [787..788]
 r304: [785..786]
 r305: [781..782]
 r306: [775..780]
 r307: [774..779]
 r308: [773..778]
 r309: [769..770]
 r310: [765..766]
 r311: [763..764]
 r312: [760..762]
 r313: [752..759]
 r314: [751..756]
 r315: [748..749]
 r316: [744..745]
 r317: [736..743]
 r318: [735..740]
 r319: [732..733]
 r320: [728..729]
 r321: [720..727]
 r322: [719..724]
 r323: [716..717]
 r324: [712..713]
 r325: [708..709]
 r326: [701..707]
 r327: [700..706]
 r328: [698..705]
 r329: [694..695]
 r330: [690..691]
 r331: [686..687]
 r332: [684..685]
 r333: [676..683]
 r334: [675..680]
 r335: [674..677]
 r336: [670..671]
 r337: [668..669]
 r338: [665..667]
 r339: [652..653]
 r340: [650..651]
 r341: [646..647]
 r342: [638..645]
 r343: [637..644]
 r344: [636..643]
 r345: [635..640]
 r346: [632..633]
 r347: [628..629]
 r348: [626..627]
 r349: [622..623]
 r350: [620..621]
 r351: [616..617]
 r352: [608..615]
 r353: [607..614]
 r354: [606..613]
 r355: [605..610]
 r356: [602..603]
 r357: [598..599]
 r358: [593..595]
 r359: [589..590]
 r360: [587..588]
 r361: [583..584]
 r362: [575..582]
 r363: [574..581]
 r364: [573..580]
 r365: [572..577]
 r366: [569..570]
 r367: [565..566]
 r368: [561..562]
 r369: [559..560]
 r370: [555..556]
 r371: [547..554]
 r372: [546..553]
 r373: [545..552]
 r374: [544..549]
 r375: [541..542]
 r376: [537..538]
 r377: [532..534]
 r378: [528..529]
 r379: [526..527]
 r380: [522..523]
 r381: [514..521]
 r382: [513..520]
 r383: [512..519]
 r384: [511..516]
 r385: [508..509]
 r386: [504..505]
 r387: [500..501]
 r388: [498..499]
 r389: [494..495]
 r390: [486..493]
 r391: [485..492]
 r392: [484..491]
 r393: [483..488]
 r394: [480..481]
 r395: [476..477]
 r396: [471..473]
 r397: [464..465]
 r398: [458..463]
 r399: [457..462]
 r400: [456..461]
 r401: [452..453]
 r402: [448..449]
 r403: [446..447]
 r404: [443..445]
 r405: [440..442]
 r406: [436..437]
 r407: [430..435]
 r408: [429..434]
 r409: [428..433]
 r410: [424..425]
 r411: [420..421]
 r412: [418..419]
 r413: [415..417]
 r414: [412..414]
 r415: [399..400]
 r416: [397..398]
 r417: [393..394]
 r418: [385..392]
 r419: [384..391]
 r420: [383..390]
 r421: [382..387]
 r422: [379..380]
 r423: [375..376]
 r424: [373..374]
 r425: [369..370]
 r426: [367..368]
 r427: [363..364]
 r428: [355..362]
 r429: [354..361]
 r430: [353..360]
 r431: [352..357]
 r432: [349..350]
 r433: [345..346]
 r434: [341..342]
 r435: [339..340]
 r436: [335..336]
 r437: [327..334]
 r438: [326..333]
 r439: [325..332]
 r440: [324..329]
 r441: [321..322]
 r442: [317..318]
 r443: [313..314]
 r444: [311..312]
 r445: [307..308]
 r446: [299..306]
 r447: [298..305]
 r448: [297..304]
 r449: [296..301]
 r450: [293..294]
 r451: [289..290]
 r452: [285..286]
 r453: [283..284]
 r454: [279..280]
 r455: [271..278]
 r456: [270..277]
 r457: [269..276]
 r458: [268..273]
 r459: [265..266]
 r460: [261..262]
 r461: [259..260]
 r462: [255..256]
 r463: [253..254]
 r464: [249..250]
 r465: [241..248]
 r466: [240..247]
 r467: [239..246]
 r468: [238..243]
 r469: [235..236]
 r470: [231..232]
 r471: [227..228]
 r472: [225..226]
 r473: [221..222]
 r474: [213..220]
 r475: [212..219]
 r476: [211..218]
 r477: [210..215]
 r478: [207..208]
 r479: [203..204]
 r480: [199..200]
 r481: [197..198]
 r482: [193..194]
 r483: [185..192]
 r484: [184..191]
 r485: [183..190]
 r486: [182..187]
 r487: [179..180]
 r488: [175..176]
 r489: [171..172]
 r490: [169..170]
 r491: [165..166]
 r492: [159..164]
 r493: [158..163]
 r494: [157..162]
 r495: [153..154]
 r496: [149..150]
 r497: [147..148]
 r498: [144..146]
 r499: [140..141]
 r500: [138..139]
 r501: [134..135]
 r502: [128..133]
 r503: [127..132]
 r504: [126..131]
 r505: [122..123]
 r506: [118..119]
 r507: [116..117]
 r508: [113..115]
 r509: [109..110]
 r510: [107..108]
 r511: [103..104]
 r512: [97..102]
 r513: [96..101]
 r514: [95..100]
 r515: [91..92]
 r516: [87..88]
 r517: [83..84]
 r518: [81..82]
 r519: [77..78]
 r520: [71..76]
 r521: [70..75]
 r522: [69..74]
 r523: [65..66]
 r524: [61..62]
 r525: [59..60]
 r526: [56..58]
 r527: [1..2]
 r528: [1477..1478]
 r529: [1475..1476]
 r530: [1464..1469]
 r531: [1463..1468]
 r532: [1459..1460]
 r533: [1435..1436]
 r534: [1431..1432]
 r535: [1427..1428]
 r536: [1423..1424]
 r537: [1441..1442]
 r538: [1416..1417]
 r539: [1410..1411]
 r540: [47..48]
 r541: [1404..1405]
 r542: [1398..1399]
 r543: [1392..1393]
 r544: [1386..1387]
 r545: [1380..1381]
 r546: [1374..1375]
 r547: [1368..1369]
 r548: [1356..1357]
 r549: [1362..1363]
 r550: [1352..1353]
 r551: [1346..1347]
 r552: [1335..1340]
 r553: [1334..1339]
 r554: [1330..1331]
 r555: [1326..1327]
 r556: [1320..1321]
 r557: [1309..1314]
 r558: [1308..1313]
 r559: [1304..1305]
 r560: [1297..1298]
 r561: [1295..1296]
 r562: [1293..1294]
 r563: [1287..1288]
 r564: [1276..1281]
 r565: [1275..1280]
 r566: [1271..1272]
 r567: [1267..1268]
 r568: [1261..1262]
 r569: [1250..1255]
 r570: [1249..1254]
 r571: [1245..1246]
 r572: [1238..1239]
 r573: [1236..1237]
 r574: [1230..1231]
 r575: [1219..1224]
 r576: [1218..1223]
 r577: [1214..1215]
 r578: [1210..1211]
 r579: [1204..1205]
 r580: [1193..1198]
 r581: [1192..1197]
 r582: [1188..1189]
 r583: [1179..1180]
 r584: [1177..1178]
 r585: [1171..1172]
 r586: [1160..1165]
 r587: [1159..1164]
 r588: [1155..1156]
 r589: [1151..1152]
 r590: [1145..1146]
 r591: [1134..1139]
 r592: [1133..1138]
 r593: [1129..1130]
 r594: [1122..1123]
 r595: [1120..1121]
 r596: [1114..1115]
 r597: [1103..1108]
 r598: [1102..1107]
 r599: [1098..1099]
 r600: [1094..1095]
 r601: [1088..1089]
 r602: [1077..1082]
 r603: [1076..1081]
 r604: [1072..1073]
 r605: [1065..1066]
 r606: [1060..1061]
 r607: [1058..1059]
 r608: [1053..1054]
 r609: [1045..1046]
 r610: [1035..1036]
 r611: [1033..1034]
 r612: [1037..1038]
 r613: [1031..1032]
 r614: [1028..1029]
 r615: [1020..1021]
 r617: [1017..1018]
 r618: [1015..1016]
 r619: [1010..1011]
 r620: [1008..1009]
 r621: [1006..1007]
 r622: [1002..1003]
 r623: [998..999]
 r624: [996..997]
 r625: [991..992]
 r626: [989..990]
 r627: [984..985]
 r628: [977..978]
 r629: [970..971]
 r632: [961..962]
 r633: [963..964]
 r634: [959..960]
 r635: [957..958]
 r636: [951..952]
 r637: [940..945]
 r638: [939..944]
 r639: [935..936]
 r640: [931..932]
 r641: [925..926]
 r642: [914..919]
 r643: [913..918]
 r644: [909..910]
 r645: [904..905]
 r646: [901..902]
 r647: [891..892]
 r648: [899..900]
 r649: [896..897]
 r650: [887..888]
 r651: [879..880]
 r652: [877..878]
 r653: [871..872]
 r654: [860..865]
 r655: [859..864]
 r656: [855..856]
 r657: [851..852]
 r658: [845..846]
 r659: [834..839]
 r660: [833..838]
 r661: [829..830]
 r662: [822..823]
 r663: [819..821]
 r664: [819..820]
 r665: [817..818]
 r666: [815..816]
 r667: [809..810]
 r668: [798..803]
 r669: [797..802]
 r670: [793..794]
 r671: [789..790]
 r672: [783..784]
 r673: [772..777]
 r674: [771..776]
 r675: [767..768]
 r676: [760..761]
 r677: [757..758]
 r678: [753..755]
 r679: [750..754]
 r680: [746..747]
 r681: [741..742]
 r682: [737..739]
 r683: [734..738]
 r684: [730..731]
 r685: [725..726]
 r686: [721..723]
 r687: [718..722]
 r688: [714..715]
 r689: [710..711]
 r690: [699..704]
 r691: [697..703]
 r692: [696..702]
 r693: [692..693]
 r694: [688..689]
 r695: [681..682]
 r696: [678..679]
 r697: [672..673]
 r698: [665..666]
 r699: [662..664]
 r700: [662..663]
 r701: [659..661]
 r702: [659..660]
 r703: [656..658]
 r704: [656..657]
 r705: [654..655]
 r706: [648..649]
 r707: [641..642]
 r708: [634..639]
 r709: [630..631]
 r710: [624..625]
 r711: [618..619]
 r712: [611..612]
 r713: [604..609]
 r714: [600..601]
 r715: [596..597]
 r716: [593..594]
 r717: [591..592]
 r718: [585..586]
 r719: [578..579]
 r720: [571..576]
 r721: [567..568]
 r722: [563..564]
 r723: [557..558]
 r724: [550..551]
 r725: [543..548]
 r726: [539..540]
 r727: [535..536]
 r728: [532..533]
 r729: [530..531]
 r730: [524..525]
 r731: [517..518]
 r732: [510..515]
 r733: [506..507]
 r734: [502..503]
 r735: [496..497]
 r736: [489..490]
 r737: [482..487]
 r738: [478..479]
 r739: [474..475]
 r740: [471..472]
 r741: [468..470]
 r742: [468..469]
 r743: [466..467]
 r744: [455..460]
 r745: [454..459]
 r746: [450..451]
 r747: [443..444]
 r748: [440..441]
 r749: [438..439]
 r750: [427..432]
 r751: [426..431]
 r752: [422..423]
 r753: [415..416]
 r754: [412..413]
 r755: [409..411]
 r756: [409..410]
 r757: [406..408]
 r758: [406..407]
 r759: [403..405]
 r760: [403..404]
 r761: [401..402]
 r762: [395..396]
 r763: [388..389]
 r764: [381..386]
 r765: [377..378]
 r766: [371..372]
 r767: [365..366]
 r768: [358..359]
 r769: [351..356]
 r770: [347..348]
 r771: [343..344]
 r772: [337..338]
 r773: [330..331]
 r774: [323..328]
 r775: [319..320]
 r776: [315..316]
 r777: [309..310]
 r778: [302..303]
 r779: [295..300]
 r780: [291..292]
 r781: [287..288]
 r782: [281..282]
 r783: [274..275]
 r784: [267..272]
 r785: [263..264]
 r786: [257..258]
 r787: [251..252]
 r788: [244..245]
 r789: [237..242]
 r790: [233..234]
 r791: [229..230]
 r792: [223..224]
 r793: [216..217]
 r794: [209..214]
 r795: [205..206]
 r796: [201..202]
 r797: [195..196]
 r798: [188..189]
 r799: [181..186]
 r800: [177..178]
 r801: [173..174]
 r802: [167..168]
 r803: [156..161]
 r804: [155..160]
 r805: [151..152]
 r806: [144..145]
 r807: [142..143]
 r808: [136..137]
 r809: [125..130]
 r810: [124..129]
 r811: [120..121]
 r812: [113..114]
 r813: [111..112]
 r814: [105..106]
 r815: [94..99]
 r816: [93..98]
 r817: [89..90]
 r818: [85..86]
 r819: [79..80]
 r820: [68..73]
 r821: [67..72]
 r822: [63..64]
 r823: [56..57]
 r825: [1479..1480]
 r826: [0..0]
 r827: [1438..1439]
 r828: [1407..1408]
 r829: [1021..1022]
Compressing live ranges: from 1481 to 1062 - 71%
Ranges after the compression:
 r87: [14..15] [9..9] [3..4]
 r88: [1054..1055]
 r89: [1052..1053]
 r90: [1052..1053]
 r91: [1052..1053]
 r92: [1050..1051]
 r93: [1046..1047]
 r94: [12..13]
 r95: [10..11]
 r96: [1044..1045]
 r97: [1042..1043]
 r98: [1040..1041]
 r99: [1038..1039]
 r100: [1036..1037]
 r101: [1014..1015]
 r102: [1012..1013]
 r103: [1010..1011]
 r104: [1008..1009]
 r105: [1004..1005]
 r106: [5..6]
 r107: [1032..1033]
 r108: [1016..1017]
 r109: [1020..1021]
 r110: [1024..1025]
 r111: [1028..1029]
 r112: [1000..1001]
 r113: [998..999]
 r114: [994..995]
 r115: [992..993]
 r116: [988..989]
 r117: [986..987]
 r118: [982..983]
 r119: [980..981]
 r120: [976..977]
 r121: [974..975]
 r122: [970..971]
 r123: [968..969]
 r124: [964..965]
 r125: [962..963]
 r126: [952..953]
 r127: [958..959]
 r128: [956..957]
 r129: [948..949]
 r130: [946..947]
 r131: [942..943]
 r132: [940..941]
 r133: [940..941]
 r134: [940..941]
 r135: [938..939]
 r136: [934..935]
 r137: [930..931]
 r138: [928..929]
 r139: [924..925]
 r140: [922..923]
 r141: [922..923]
 r142: [922..923]
 r143: [920..921]
 r144: [916..917]
 r145: [914..915]
 r146: [912..913]
 r147: [906..907]
 r148: [904..905]
 r149: [900..901]
 r150: [898..899]
 r151: [898..899]
 r152: [898..899]
 r153: [896..897]
 r154: [892..893]
 r155: [888..889]
 r156: [886..887]
 r157: [882..883]
 r158: [880..881]
 r159: [880..881]
 r160: [880..881]
 r161: [878..879]
 r162: [874..875]
 r163: [872..873]
 r164: [870..871]
 r165: [866..867]
 r166: [864..865]
 r167: [860..861]
 r168: [858..859]
 r169: [858..859]
 r170: [858..859]
 r171: [856..857]
 r172: [852..853]
 r173: [848..849]
 r174: [846..847]
 r175: [842..843]
 r176: [840..841]
 r177: [840..841]
 r178: [840..841]
 r179: [838..839]
 r180: [834..835]
 r181: [832..833]
 r182: [830..831]
 r183: [828..829]
 r184: [824..825]
 r185: [822..823]
 r186: [818..819]
 r187: [816..817]
 r188: [816..817]
 r189: [816..817]
 r190: [814..815]
 r191: [810..811]
 r192: [806..807]
 r193: [804..805]
 r194: [800..801]
 r195: [798..799]
 r196: [798..799]
 r197: [798..799]
 r198: [796..797]
 r199: [792..793]
 r200: [790..791]
 r201: [788..789]
 r202: [784..785]
 r203: [782..783]
 r204: [778..779]
 r205: [776..777]
 r206: [776..777]
 r207: [776..777]
 r208: [774..775]
 r209: [770..771]
 r210: [766..767]
 r211: [764..765]
 r212: [760..761]
 r213: [758..759]
 r214: [758..759]
 r215: [758..759]
 r216: [756..757]
 r217: [752..753]
 r218: [750..751]
 r219: [748..749]
 r220: [746..747]
 r221: [744..745]
 r222: [740..741]
 r223: [734..739]
 r224: [736..737]
 r225: [734..735]
 r226: [732..733]
 r227: [728..729]
 r228: [726..727]
 r229: [724..725]
 r230: [708..715]
 r231: [712..713]
 r232: [710..711]
 r233: [708..709]
 r234: [704..705]
 r235: [700..701]
 r236: [698..699]
 r237: [692..693]
 r238: [688..689]
 r239: [682..683]
 r240: [680..681]
 r241: [676..677]
 r242: [670..675]
 r243: [672..673]
 r244: [670..671]
 r245: [664..669]
 r246: [666..667]
 r247: [664..665]
 r248: [658..663]
 r249: [660..661]
 r250: [658..659]
 r251: [656..657]
 r252: [648..649]
 r253: [646..647]
 r254: [642..643]
 r255: [640..641]
 r256: [640..641]
 r257: [640..641]
 r258: [638..639]
 r259: [634..635]
 r260: [630..631]
 r261: [628..629]
 r262: [624..625]
 r263: [622..623]
 r264: [622..623]
 r265: [622..623]
 r266: [620..621]
 r267: [616..617]
 r268: [612..615]
 r269: [604..605]
 r270: [602..603]
 r271: [608..609]
 r272: [606..607]
 r273: [598..599]
 r274: [596..597]
 r275: [596..597]
 r276: [594..595]
 r277: [590..591]
 r278: [588..589]
 r279: [584..585]
 r280: [582..583]
 r281: [582..583]
 r282: [582..583]
 r283: [580..581]
 r284: [576..577]
 r285: [572..573]
 r286: [570..571]
 r287: [566..567]
 r288: [564..565]
 r289: [564..565]
 r290: [564..565]
 r291: [562..563]
 r292: [558..559]
 r293: [556..557]
 r294: [554..555]
 r295: [546..547]
 r296: [544..545]
 r297: [540..541]
 r298: [538..539]
 r299: [538..539]
 r300: [538..539]
 r301: [536..537]
 r302: [532..533]
 r303: [528..529]
 r304: [526..527]
 r305: [522..523]
 r306: [520..521]
 r307: [520..521]
 r308: [520..521]
 r309: [518..519]
 r310: [514..515]
 r311: [512..513]
 r312: [510..511]
 r313: [506..509]
 r314: [506..507]
 r315: [504..505]
 r316: [500..501]
 r317: [496..499]
 r318: [496..497]
 r319: [494..495]
 r320: [490..491]
 r321: [486..489]
 r322: [486..487]
 r323: [484..485]
 r324: [480..481]
 r325: [476..477]
 r326: [474..475]
 r327: [474..475]
 r328: [474..475]
 r329: [472..473]
 r330: [468..469]
 r331: [464..465]
 r332: [462..463]
 r333: [456..461]
 r334: [456..459]
 r335: [456..457]
 r336: [452..453]
 r337: [450..451]
 r338: [448..449]
 r339: [438..439]
 r340: [436..437]
 r341: [432..433]
 r342: [428..431]
 r343: [428..431]
 r344: [428..431]
 r345: [428..429]
 r346: [426..427]
 r347: [422..423]
 r348: [420..421]
 r349: [416..417]
 r350: [414..415]
 r351: [410..411]
 r352: [406..409]
 r353: [406..409]
 r354: [406..409]
 r355: [406..407]
 r356: [404..405]
 r357: [400..401]
 r358: [396..397]
 r359: [392..393]
 r360: [390..391]
 r361: [386..387]
 r362: [382..385]
 r363: [382..385]
 r364: [382..385]
 r365: [382..383]
 r366: [380..381]
 r367: [376..377]
 r368: [372..373]
 r369: [370..371]
 r370: [366..367]
 r371: [362..365]
 r372: [362..365]
 r373: [362..365]
 r374: [362..363]
 r375: [360..361]
 r376: [356..357]
 r377: [352..353]
 r378: [348..349]
 r379: [346..347]
 r380: [342..343]
 r381: [338..341]
 r382: [338..341]
 r383: [338..341]
 r384: [338..339]
 r385: [336..337]
 r386: [332..333]
 r387: [328..329]
 r388: [326..327]
 r389: [322..323]
 r390: [318..321]
 r391: [318..321]
 r392: [318..321]
 r393: [318..319]
 r394: [316..317]
 r395: [312..313]
 r396: [308..309]
 r397: [302..303]
 r398: [300..301]
 r399: [300..301]
 r400: [300..301]
 r401: [298..299]
 r402: [294..295]
 r403: [292..293]
 r404: [290..291]
 r405: [288..289]
 r406: [284..285]
 r407: [282..283]
 r408: [282..283]
 r409: [282..283]
 r410: [280..281]
 r411: [276..277]
 r412: [274..275]
 r413: [272..273]
 r414: [270..271]
 r415: [260..261]
 r416: [258..259]
 r417: [254..255]
 r418: [250..253]
 r419: [250..253]
 r420: [250..253]
 r421: [250..251]
 r422: [248..249]
 r423: [244..245]
 r424: [242..243]
 r425: [238..239]
 r426: [236..237]
 r427: [232..233]
 r428: [228..231]
 r429: [228..231]
 r430: [228..231]
 r431: [228..229]
 r432: [226..227]
 r433: [222..223]
 r434: [218..219]
 r435: [216..217]
 r436: [212..213]
 r437: [208..211]
 r438: [208..211]
 r439: [208..211]
 r440: [208..209]
 r441: [206..207]
 r442: [202..203]
 r443: [198..199]
 r444: [196..197]
 r445: [192..193]
 r446: [188..191]
 r447: [188..191]
 r448: [188..191]
 r449: [188..189]
 r450: [186..187]
 r451: [182..183]
 r452: [178..179]
 r453: [176..177]
 r454: [172..173]
 r455: [168..171]
 r456: [168..171]
 r457: [168..171]
 r458: [168..169]
 r459: [166..167]
 r460: [162..163]
 r461: [160..161]
 r462: [156..157]
 r463: [154..155]
 r464: [150..151]
 r465: [146..149]
 r466: [146..149]
 r467: [146..149]
 r468: [146..147]
 r469: [144..145]
 r470: [140..141]
 r471: [136..137]
 r472: [134..135]
 r473: [130..131]
 r474: [126..129]
 r475: [126..129]
 r476: [126..129]
 r477: [126..127]
 r478: [124..125]
 r479: [120..121]
 r480: [116..117]
 r481: [114..115]
 r482: [110..111]
 r483: [106..109]
 r484: [106..109]
 r485: [106..109]
 r486: [106..107]
 r487: [104..105]
 r488: [100..101]
 r489: [96..97]
 r490: [94..95]
 r491: [90..91]
 r492: [88..89]
 r493: [88..89]
 r494: [88..89]
 r495: [86..87]
 r496: [82..83]
 r497: [80..81]
 r498: [78..79]
 r499: [74..75]
 r500: [72..73]
 r501: [68..69]
 r502: [66..67]
 r503: [66..67]
 r504: [66..67]
 r505: [64..65]
 r506: [60..61]
 r507: [58..59]
 r508: [56..57]
 r509: [52..53]
 r510: [50..51]
 r511: [46..47]
 r512: [44..45]
 r513: [44..45]
 r514: [44..45]
 r515: [42..43]
 r516: [38..39]
 r517: [34..35]
 r518: [32..33]
 r519: [28..29]
 r520: [26..27]
 r521: [26..27]
 r522: [26..27]
 r523: [24..25]
 r524: [20..21]
 r525: [18..19]
 r526: [16..17]
 r527: [1..2]
 r528: [1058..1059]
 r529: [1056..1057]
 r530: [1052..1053]
 r531: [1052..1053]
 r532: [1048..1049]
 r533: [1030..1031]
 r534: [1026..1027]
 r535: [1022..1023]
 r536: [1018..1019]
 r537: [1034..1035]
 r538: [1012..1013]
 r539: [1006..1007]
 r540: [7..8]
 r541: [1002..1003]
 r542: [996..997]
 r543: [990..991]
 r544: [984..985]
 r545: [978..979]
 r546: [972..973]
 r547: [966..967]
 r548: [954..955]
 r549: [960..961]
 r550: [950..951]
 r551: [944..945]
 r552: [940..941]
 r553: [940..941]
 r554: [936..937]
 r555: [932..933]
 r556: [926..927]
 r557: [922..923]
 r558: [922..923]
 r559: [918..919]
 r560: [912..913]
 r561: [910..911]
 r562: [908..909]
 r563: [902..903]
 r564: [898..899]
 r565: [898..899]
 r566: [894..895]
 r567: [890..891]
 r568: [884..885]
 r569: [880..881]
 r570: [880..881]
 r571: [876..877]
 r572: [870..871]
 r573: [868..869]
 r574: [862..863]
 r575: [858..859]
 r576: [858..859]
 r577: [854..855]
 r578: [850..851]
 r579: [844..845]
 r580: [840..841]
 r581: [840..841]
 r582: [836..837]
 r583: [828..829]
 r584: [826..827]
 r585: [820..821]
 r586: [816..817]
 r587: [816..817]
 r588: [812..813]
 r589: [808..809]
 r590: [802..803]
 r591: [798..799]
 r592: [798..799]
 r593: [794..795]
 r594: [788..789]
 r595: [786..787]
 r596: [780..781]
 r597: [776..777]
 r598: [776..777]
 r599: [772..773]
 r600: [768..769]
 r601: [762..763]
 r602: [758..759]
 r603: [758..759]
 r604: [754..755]
 r605: [748..749]
 r606: [744..745]
 r607: [742..743]
 r608: [738..739]
 r609: [730..731]
 r610: [720..721]
 r611: [718..719]
 r612: [722..723]
 r613: [716..717]
 r614: [714..715]
 r615: [706..707]
 r617: [704..705]
 r618: [702..703]
 r619: [698..699]
 r620: [696..697]
 r621: [694..695]
 r622: [690..691]
 r623: [686..687]
 r624: [684..685]
 r625: [680..681]
 r626: [678..679]
 r627: [674..675]
 r628: [668..669]
 r629: [662..663]
 r632: [654..655]
 r633: [656..657]
 r634: [652..653]
 r635: [650..651]
 r636: [644..645]
 r637: [640..641]
 r638: [640..641]
 r639: [636..637]
 r640: [632..633]
 r641: [626..627]
 r642: [622..623]
 r643: [622..623]
 r644: [618..619]
 r645: [614..615]
 r646: [612..613]
 r647: [604..605]
 r648: [610..611]
 r649: [608..609]
 r650: [600..601]
 r651: [594..595]
 r652: [592..593]
 r653: [586..587]
 r654: [582..583]
 r655: [582..583]
 r656: [578..579]
 r657: [574..575]
 r658: [568..569]
 r659: [564..565]
 r660: [564..565]
 r661: [560..561]
 r662: [554..555]
 r663: [552..553]
 r664: [552..553]
 r665: [550..551]
 r666: [548..549]
 r667: [542..543]
 r668: [538..539]
 r669: [538..539]
 r670: [534..535]
 r671: [530..531]
 r672: [524..525]
 r673: [520..521]
 r674: [520..521]
 r675: [516..517]
 r676: [510..511]
 r677: [508..509]
 r678: [506..507]
 r679: [506..507]
 r680: [502..503]
 r681: [498..499]
 r682: [496..497]
 r683: [496..497]
 r684: [492..493]
 r685: [488..489]
 r686: [486..487]
 r687: [486..487]
 r688: [482..483]
 r689: [478..479]
 r690: [474..475]
 r691: [474..475]
 r692: [474..475]
 r693: [470..471]
 r694: [466..467]
 r695: [460..461]
 r696: [458..459]
 r697: [454..455]
 r698: [448..449]
 r699: [446..447]
 r700: [446..447]
 r701: [444..445]
 r702: [444..445]
 r703: [442..443]
 r704: [442..443]
 r705: [440..441]
 r706: [434..435]
 r707: [430..431]
 r708: [428..429]
 r709: [424..425]
 r710: [418..419]
 r711: [412..413]
 r712: [408..409]
 r713: [406..407]
 r714: [402..403]
 r715: [398..399]
 r716: [396..397]
 r717: [394..395]
 r718: [388..389]
 r719: [384..385]
 r720: [382..383]
 r721: [378..379]
 r722: [374..375]
 r723: [368..369]
 r724: [364..365]
 r725: [362..363]
 r726: [358..359]
 r727: [354..355]
 r728: [352..353]
 r729: [350..351]
 r730: [344..345]
 r731: [340..341]
 r732: [338..339]
 r733: [334..335]
 r734: [330..331]
 r735: [324..325]
 r736: [320..321]
 r737: [318..319]
 r738: [314..315]
 r739: [310..311]
 r740: [308..309]
 r741: [306..307]
 r742: [306..307]
 r743: [304..305]
 r744: [300..301]
 r745: [300..301]
 r746: [296..297]
 r747: [290..291]
 r748: [288..289]
 r749: [286..287]
 r750: [282..283]
 r751: [282..283]
 r752: [278..279]
 r753: [272..273]
 r754: [270..271]
 r755: [268..269]
 r756: [268..269]
 r757: [266..267]
 r758: [266..267]
 r759: [264..265]
 r760: [264..265]
 r761: [262..263]
 r762: [256..257]
 r763: [252..253]
 r764: [250..251]
 r765: [246..247]
 r766: [240..241]
 r767: [234..235]
 r768: [230..231]
 r769: [228..229]
 r770: [224..225]
 r771: [220..221]
 r772: [214..215]
 r773: [210..211]
 r774: [208..209]
 r775: [204..205]
 r776: [200..201]
 r777: [194..195]
 r778: [190..191]
 r779: [188..189]
 r780: [184..185]
 r781: [180..181]
 r782: [174..175]
 r783: [170..171]
 r784: [168..169]
 r785: [164..165]
 r786: [158..159]
 r787: [152..153]
 r788: [148..149]
 r789: [146..147]
 r790: [142..143]
 r791: [138..139]
 r792: [132..133]
 r793: [128..129]
 r794: [126..127]
 r795: [122..123]
 r796: [118..119]
 r797: [112..113]
 r798: [108..109]
 r799: [106..107]
 r800: [102..103]
 r801: [98..99]
 r802: [92..93]
 r803: [88..89]
 r804: [88..89]
 r805: [84..85]
 r806: [78..79]
 r807: [76..77]
 r808: [70..71]
 r809: [66..67]
 r810: [66..67]
 r811: [62..63]
 r812: [56..57]
 r813: [54..55]
 r814: [48..49]
 r815: [44..45]
 r816: [44..45]
 r817: [40..41]
 r818: [36..37]
 r819: [30..31]
 r820: [26..27]
 r821: [26..27]
 r822: [22..23]
 r823: [16..17]
 r825: [1060..1061]
 r826: [0..0]
 r827: [1032..1033]
 r828: [1004..1005]
 r829: [707..708]

********** Assignment #1: **********

	 Assigning to 829 (cl=DREG, orig=616, freq=1, tfirst=829, tfreq=1)...
	 Trying 1: spill 233(freq=2)	 Now best 1(cost=1, bad_spills=0, insn_pseudos=1)

      Spill r233(hr=1, freq=2) for r829
	   Assign 1 to reload r829 (freq=1)
	 Assigning to 827 (cl=GENERAL_REGS, orig=827, freq=2, tfirst=827, tfreq=2)...
	   Assign 3 to reload r827 (freq=2)
	 Assigning to 828 (cl=GENERAL_REGS, orig=828, freq=2, tfirst=828, tfreq=2)...
	   Assign 3 to reload r828 (freq=2)
	 Assigning to 825 (cl=INDEX_REGS, orig=825, freq=1, tfirst=825, tfreq=1)...
	   Assign 0 to reload r825 (freq=1)
	 Assigning to 826 (cl=INDEX_REGS, orig=826, freq=1, tfirst=826, tfreq=1)...
	   Assign 3 to reload r826 (freq=1)
  Reassigning non-reload pseudos
	   Assign 3 to r233 (freq=2)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=6,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 746:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=830 from oldreg=233, assigning class GENERAL_REGS to r830
  746: {r830:SI=r830:SI*[frame:DI-0x74];clobber flags:CC;}
      REG_DEAD r232:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 2133: r830:SI=r232:SI
    Inserting insn reload after:
 2134: r233:SI=r830:SI

	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166
EBB 167
EBB 168
EBB 169

********** Pseudo live ranges #2: **********

  BB 168
   Insn 1980: point = 0
  BB 169
   Insn 1983: point = 0
  BB 167
   Insn 1979: point = 0
   Insn 1978: point = 0
   Insn 1977: point = 1
   Insn 1973: point = 2
  BB 165
   Insn 2128: point = 5
   Insn 1959: point = 5
  BB 159
   Insn 2124: point = 6
   Insn 1886: point = 6
  BB 156
   Insn 2122: point = 7
   Insn 1847: point = 7
  BB 153
   Insn 2120: point = 8
   Insn 1812: point = 8
  BB 150
   Insn 2118: point = 9
   Insn 1777: point = 9
  BB 147
   Insn 2116: point = 10
   Insn 1742: point = 10
  BB 144
   Insn 2114: point = 11
   Insn 1707: point = 11
  BB 139
   Insn 2112: point = 12
   Insn 1661: point = 12
  BB 136
   Insn 2110: point = 13
   Insn 1626: point = 13
  BB 133
   Insn 2108: point = 14
   Insn 1591: point = 14
  BB 130
   Insn 2106: point = 15
   Insn 1556: point = 15
  BB 125
   Insn 2104: point = 16
   Insn 1495: point = 16
  BB 123
   Insn 2102: point = 17
   Insn 1463: point = 17
  BB 121
   Insn 2100: point = 18
   Insn 1430: point = 18
  BB 118
   Insn 2098: point = 19
   Insn 1395: point = 19
  BB 115
   Insn 2096: point = 20
   Insn 1356: point = 20
  BB 112
   Insn 2094: point = 21
   Insn 1321: point = 21
  BB 109
   Insn 2092: point = 22
   Insn 1282: point = 22
  BB 106
   Insn 2090: point = 23
   Insn 1247: point = 23
  BB 101
   Insn 2088: point = 24
   Insn 1162: point = 24
  BB 99
   Insn 2086: point = 25
   Insn 1135: point = 25
  BB 97
   Insn 2084: point = 26
   Insn 1112: point = 26
  BB 95
   Insn 2082: point = 27
   Insn 1089: point = 27
  BB 93
   Insn 2080: point = 28
   Insn 1062: point = 28
  BB 90
   Insn 2078: point = 29
   Insn 1028: point = 29
  BB 87
   Insn 2076: point = 30
   Insn 985: point = 30
  BB 84
   Insn 2074: point = 31
   Insn 951: point = 31
  BB 77
   Insn 2069: point = 32
   Insn 875: point = 32
  BB 74
   Insn 2067: point = 33
   Insn 841: point = 33
  BB 65
   Insn 2061: point = 34
   Insn 681: point = 34
  BB 62
   Insn 2059: point = 35
   Insn 647: point = 35
  BB 59
   Insn 2057: point = 36
   Insn 608: point = 36
  BB 56
   Insn 2055: point = 37
   Insn 574: point = 37
  BB 53
   Insn 2053: point = 38
   Insn 534: point = 38
  BB 50
   Insn 2051: point = 39
   Insn 500: point = 39
  BB 47
   Insn 2049: point = 40
   Insn 461: point = 40
  BB 44
   Insn 2047: point = 41
   Insn 427: point = 41
  BB 41
   Insn 2045: point = 42
   Insn 387: point = 42
  BB 38
   Insn 2043: point = 43
   Insn 353: point = 43
  BB 21
   Insn 2031: point = 44
   Insn 173: point = 44
   Insn 172: point = 45
   Insn 171: point = 46
   Insn 170: point = 46
   Insn 169: point = 48
  BB 3
   Insn 2016: point = 49
   Insn 50: point = 49
   Insn 49: point = 50
   Insn 48: point = 50
   Insn 47: point = 50
   Insn 46: point = 50
   Insn 45: point = 51
   Insn 44: point = 53
  BB 162
   Insn 2126: point = 54
   Insn 1925: point = 54
  BB 166
   Insn 1968: point = 55
   Insn 1967: point = 56
   Insn 1966: point = 57
   Insn 1965: point = 58
   Insn 1964: point = 60
  BB 164
   Insn 1957: point = 61
   Insn 1956: point = 61
   Insn 1955: point = 62
   Insn 1954: point = 64
   Insn 1953: point = 66
   Insn 1952: point = 67
   Insn 1951: point = 67
   Insn 1950: point = 68
   Insn 1949: point = 69
   Insn 1948: point = 70
   Insn 1947: point = 70
   Insn 1946: point = 71
   Insn 1945: point = 72
   Insn 1944: point = 73
   Insn 1943: point = 74
   Insn 1942: point = 75
   Insn 1941: point = 76
   Insn 1940: point = 78
   Insn 1939: point = 80
  BB 163
   Insn 1937: point = 81
   Insn 1936: point = 81
   Insn 1935: point = 82
   Insn 1934: point = 83
   Insn 1933: point = 83
   Insn 1932: point = 84
   Insn 1931: point = 84
   Insn 1930: point = 86
  BB 161
   Insn 1923: point = 87
   Insn 1922: point = 87
   Insn 1921: point = 88
   Insn 1920: point = 90
   Insn 1919: point = 92
   Insn 1918: point = 93
   Insn 1917: point = 93
   Insn 1916: point = 94
   Insn 1915: point = 95
   Insn 1914: point = 96
   Insn 1913: point = 96
   Insn 1912: point = 97
   Insn 1911: point = 98
   Insn 1910: point = 99
   Insn 1909: point = 100
   Insn 1908: point = 101
   Insn 1907: point = 102
   Insn 1906: point = 104
   Insn 1905: point = 106
  BB 160
   Insn 1903: point = 107
   Insn 1902: point = 107
   Insn 1901: point = 108
   Insn 1900: point = 109
   Insn 1899: point = 109
   Insn 1898: point = 110
   Insn 1897: point = 110
   Insn 1896: point = 112
   Insn 1895: point = 113
   Insn 1894: point = 113
   Insn 1893: point = 114
   Insn 1892: point = 115
   Insn 1891: point = 117
  BB 158
   Insn 1884: point = 118
   Insn 1883: point = 118
   Insn 1882: point = 119
   Insn 1881: point = 121
   Insn 1880: point = 123
   Insn 1879: point = 124
   Insn 1878: point = 124
   Insn 1877: point = 125
   Insn 1876: point = 126
   Insn 1875: point = 127
   Insn 1874: point = 127
   Insn 1873: point = 128
   Insn 1872: point = 129
   Insn 1871: point = 130
   Insn 1870: point = 131
   Insn 1869: point = 132
   Insn 1868: point = 133
   Insn 1867: point = 135
   Insn 1866: point = 137
  BB 157
   Insn 1864: point = 138
   Insn 1863: point = 138
   Insn 1862: point = 139
   Insn 1861: point = 140
   Insn 1860: point = 140
   Insn 1859: point = 141
   Insn 1858: point = 141
   Insn 1857: point = 143
   Insn 1856: point = 144
   Insn 1855: point = 144
   Insn 1854: point = 145
   Insn 1853: point = 146
   Insn 1852: point = 148
  BB 155
   Insn 1845: point = 149
   Insn 1844: point = 149
   Insn 1843: point = 150
   Insn 1842: point = 152
   Insn 1841: point = 154
   Insn 1840: point = 155
   Insn 1839: point = 155
   Insn 1838: point = 156
   Insn 1837: point = 157
   Insn 1836: point = 158
   Insn 1835: point = 158
   Insn 1834: point = 159
   Insn 1833: point = 160
   Insn 1832: point = 161
   Insn 1831: point = 162
   Insn 1830: point = 163
   Insn 1829: point = 164
   Insn 1828: point = 166
   Insn 1827: point = 168
  BB 154
   Insn 1825: point = 169
   Insn 1824: point = 169
   Insn 1823: point = 170
   Insn 1822: point = 171
   Insn 1821: point = 171
   Insn 1820: point = 172
   Insn 1819: point = 172
   Insn 1818: point = 174
   Insn 1817: point = 175
  BB 152
   Insn 1810: point = 175
   Insn 1809: point = 175
   Insn 1808: point = 176
   Insn 1807: point = 178
   Insn 1806: point = 180
   Insn 1805: point = 181
   Insn 1804: point = 181
   Insn 1803: point = 182
   Insn 1802: point = 183
   Insn 1801: point = 184
   Insn 1800: point = 184
   Insn 1799: point = 185
   Insn 1798: point = 186
   Insn 1797: point = 187
   Insn 1796: point = 189
   Insn 1795: point = 190
   Insn 1794: point = 191
   Insn 1793: point = 192
   Insn 1792: point = 194
   Insn 1791: point = 196
  BB 151
   Insn 1789: point = 197
   Insn 1788: point = 197
   Insn 1787: point = 198
   Insn 1786: point = 199
   Insn 1785: point = 199
   Insn 1784: point = 200
   Insn 1783: point = 200
   Insn 1782: point = 202
  BB 149
   Insn 1775: point = 203
   Insn 1774: point = 203
   Insn 1773: point = 204
   Insn 1772: point = 206
   Insn 1771: point = 208
   Insn 1770: point = 209
   Insn 1769: point = 209
   Insn 1768: point = 210
   Insn 1767: point = 211
   Insn 1766: point = 212
   Insn 1765: point = 212
   Insn 1764: point = 213
   Insn 1763: point = 214
   Insn 1762: point = 215
   Insn 1761: point = 217
   Insn 1760: point = 218
   Insn 1759: point = 219
   Insn 1758: point = 220
   Insn 1757: point = 222
   Insn 1756: point = 224
  BB 148
   Insn 1754: point = 225
   Insn 1753: point = 225
   Insn 1752: point = 226
   Insn 1751: point = 227
   Insn 1750: point = 227
   Insn 1749: point = 228
   Insn 1748: point = 228
   Insn 1747: point = 230
  BB 146
   Insn 1740: point = 231
   Insn 1739: point = 231
   Insn 1738: point = 232
   Insn 1737: point = 234
   Insn 1736: point = 236
   Insn 1735: point = 237
   Insn 1734: point = 237
   Insn 1733: point = 238
   Insn 1732: point = 239
   Insn 1731: point = 240
   Insn 1730: point = 240
   Insn 1729: point = 241
   Insn 1728: point = 242
   Insn 1727: point = 243
   Insn 1726: point = 245
   Insn 1725: point = 246
   Insn 1724: point = 247
   Insn 1723: point = 248
   Insn 1722: point = 250
   Insn 1721: point = 252
  BB 145
   Insn 1719: point = 253
   Insn 1718: point = 253
   Insn 1717: point = 254
   Insn 1716: point = 255
   Insn 1715: point = 255
   Insn 1714: point = 256
   Insn 1713: point = 256
   Insn 1712: point = 258
  BB 143
   Insn 1705: point = 259
   Insn 1704: point = 259
  BB 142
   Insn 1702: point = 259
   Insn 1701: point = 259
   Insn 1700: point = 260
   Insn 1699: point = 261
   Insn 1698: point = 261
   Insn 1697: point = 262
   Insn 1696: point = 262
   Insn 1695: point = 264
  BB 141
   Insn 1692: point = 265
   Insn 1691: point = 266
   Insn 1690: point = 267
   Insn 1689: point = 267
   Insn 1688: point = 268
   Insn 1687: point = 269
   Insn 1686: point = 270
   Insn 1685: point = 270
   Insn 1684: point = 271
   Insn 1683: point = 272
   Insn 1682: point = 273
   Insn 1681: point = 275
   Insn 1680: point = 276
   Insn 1679: point = 277
   Insn 1678: point = 278
   Insn 1677: point = 280
   Insn 1676: point = 282
  BB 140
   Insn 1674: point = 283
   Insn 1673: point = 283
   Insn 1672: point = 284
   Insn 1671: point = 285
   Insn 1670: point = 285
   Insn 1669: point = 286
   Insn 1668: point = 286
   Insn 1667: point = 288
   Insn 1666: point = 289
  BB 138
   Insn 1659: point = 289
   Insn 1658: point = 289
   Insn 1657: point = 290
   Insn 1656: point = 292
   Insn 1655: point = 294
   Insn 1654: point = 295
   Insn 1653: point = 295
   Insn 1652: point = 296
   Insn 1651: point = 297
   Insn 1650: point = 298
   Insn 1649: point = 298
   Insn 1648: point = 299
   Insn 1647: point = 300
   Insn 1646: point = 301
   Insn 1645: point = 303
   Insn 1644: point = 304
   Insn 1643: point = 305
   Insn 1642: point = 306
   Insn 1641: point = 308
   Insn 1640: point = 310
  BB 137
   Insn 1638: point = 311
   Insn 1637: point = 311
   Insn 1636: point = 312
   Insn 1635: point = 313
   Insn 1634: point = 313
   Insn 1633: point = 314
   Insn 1632: point = 314
   Insn 1631: point = 316
  BB 135
   Insn 1624: point = 317
   Insn 1623: point = 317
   Insn 1622: point = 318
   Insn 1621: point = 320
   Insn 1620: point = 322
   Insn 1619: point = 323
   Insn 1618: point = 323
   Insn 1617: point = 324
   Insn 1616: point = 325
   Insn 1615: point = 326
   Insn 1614: point = 326
   Insn 1613: point = 327
   Insn 1612: point = 328
   Insn 1611: point = 329
   Insn 1610: point = 331
   Insn 1609: point = 332
   Insn 1608: point = 333
   Insn 1607: point = 334
   Insn 1606: point = 336
   Insn 1605: point = 338
  BB 134
   Insn 1603: point = 339
   Insn 1602: point = 339
   Insn 1601: point = 340
   Insn 1600: point = 341
   Insn 1599: point = 341
   Insn 1598: point = 342
   Insn 1597: point = 342
   Insn 1596: point = 344
  BB 132
   Insn 1589: point = 345
   Insn 1588: point = 345
   Insn 1587: point = 346
   Insn 1586: point = 348
   Insn 1585: point = 350
   Insn 1584: point = 351
   Insn 1583: point = 351
   Insn 1582: point = 352
   Insn 1581: point = 353
   Insn 1580: point = 354
   Insn 1579: point = 354
   Insn 1578: point = 355
   Insn 1577: point = 356
   Insn 1576: point = 357
   Insn 1575: point = 359
   Insn 1574: point = 360
   Insn 1573: point = 361
   Insn 1572: point = 362
   Insn 1571: point = 364
   Insn 1570: point = 366
  BB 131
   Insn 1568: point = 367
   Insn 1567: point = 367
   Insn 1566: point = 368
   Insn 1565: point = 369
   Insn 1564: point = 369
   Insn 1563: point = 370
   Insn 1562: point = 370
   Insn 1561: point = 372
  BB 129
   Insn 1554: point = 373
   Insn 1553: point = 373
  BB 128
   Insn 1551: point = 373
   Insn 1550: point = 373
   Insn 1549: point = 374
   Insn 1548: point = 375
   Insn 1547: point = 375
   Insn 1546: point = 376
   Insn 1545: point = 376
   Insn 1544: point = 378
  BB 127
   Insn 1541: point = 379
   Insn 1540: point = 380
   Insn 1539: point = 381
   Insn 1538: point = 381
   Insn 1537: point = 382
   Insn 1536: point = 383
   Insn 1535: point = 384
   Insn 1534: point = 384
   Insn 1533: point = 385
   Insn 1532: point = 386
   Insn 1531: point = 387
   Insn 1530: point = 389
   Insn 1529: point = 390
   Insn 1528: point = 391
   Insn 1527: point = 392
   Insn 1526: point = 394
   Insn 1525: point = 396
  BB 126
   Insn 1523: point = 397
   Insn 1522: point = 397
   Insn 1521: point = 398
   Insn 1520: point = 399
   Insn 1519: point = 399
   Insn 1518: point = 400
   Insn 1517: point = 400
   Insn 1516: point = 402
   Insn 1515: point = 403
   Insn 1514: point = 403
   Insn 1513: point = 404
   Insn 1512: point = 405
   Insn 1511: point = 406
   Insn 1510: point = 407
   Insn 1509: point = 408
   Insn 1508: point = 409
   Insn 1507: point = 410
   Insn 1506: point = 411
   Insn 1505: point = 412
   Insn 1504: point = 413
   Insn 1503: point = 414
   Insn 1502: point = 416
   Insn 1501: point = 417
   Insn 1500: point = 419
  BB 124
   Insn 1493: point = 420
   Insn 1492: point = 420
   Insn 1491: point = 421
   Insn 1490: point = 423
   Insn 1489: point = 425
   Insn 1488: point = 426
   Insn 1487: point = 426
   Insn 1486: point = 427
   Insn 1485: point = 428
   Insn 1484: point = 429
   Insn 1483: point = 429
   Insn 1482: point = 430
   Insn 1481: point = 431
   Insn 1480: point = 432
   Insn 1479: point = 433
   Insn 1478: point = 434
   Insn 1477: point = 435
   Insn 1476: point = 437
   Insn 1475: point = 439
   Insn 1474: point = 440
   Insn 1473: point = 440
   Insn 1472: point = 441
   Insn 1471: point = 442
   Insn 1470: point = 444
   Insn 1469: point = 445
   Insn 1468: point = 447
  BB 122
   Insn 1461: point = 448
   Insn 1460: point = 448
   Insn 1459: point = 449
   Insn 1458: point = 451
   Insn 1457: point = 453
   Insn 1456: point = 454
   Insn 1455: point = 454
   Insn 1454: point = 455
   Insn 1453: point = 456
   Insn 1452: point = 457
   Insn 1451: point = 457
   Insn 1450: point = 458
   Insn 1449: point = 459
   Insn 1448: point = 460
   Insn 1447: point = 461
   Insn 1446: point = 462
   Insn 1445: point = 463
   Insn 1444: point = 465
   Insn 1443: point = 467
   Insn 1442: point = 468
   Insn 1441: point = 468
   Insn 1440: point = 469
   Insn 1439: point = 470
   Insn 1438: point = 471
   Insn 1437: point = 472
   Insn 1436: point = 473
   Insn 1435: point = 475
  BB 120
   Insn 1428: point = 476
   Insn 1427: point = 476
   Insn 1426: point = 477
   Insn 1425: point = 479
   Insn 1424: point = 481
   Insn 1423: point = 482
   Insn 1422: point = 482
   Insn 1421: point = 483
   Insn 1420: point = 484
   Insn 1419: point = 485
   Insn 1418: point = 485
   Insn 1417: point = 486
   Insn 1416: point = 487
   Insn 1415: point = 488
   Insn 1414: point = 490
   Insn 1413: point = 491
   Insn 1412: point = 492
   Insn 1411: point = 493
   Insn 1410: point = 495
   Insn 1409: point = 497
  BB 119
   Insn 1407: point = 498
   Insn 1406: point = 498
   Insn 1405: point = 499
   Insn 1404: point = 500
   Insn 1403: point = 500
   Insn 1402: point = 501
   Insn 1401: point = 501
   Insn 1400: point = 503
  BB 117
   Insn 1393: point = 504
   Insn 1392: point = 504
   Insn 1391: point = 505
   Insn 1390: point = 507
   Insn 1389: point = 509
   Insn 1388: point = 510
   Insn 1387: point = 510
   Insn 1386: point = 511
   Insn 1385: point = 512
   Insn 1384: point = 513
   Insn 1383: point = 513
   Insn 1382: point = 514
   Insn 1381: point = 515
   Insn 1380: point = 516
   Insn 1379: point = 518
   Insn 1378: point = 519
   Insn 1377: point = 520
   Insn 1376: point = 521
   Insn 1375: point = 523
   Insn 1374: point = 525
  BB 116
   Insn 1372: point = 526
   Insn 1371: point = 526
   Insn 1370: point = 527
   Insn 1369: point = 528
   Insn 1368: point = 528
   Insn 1367: point = 529
   Insn 1366: point = 529
   Insn 1365: point = 531
   Insn 1364: point = 532
   Insn 1363: point = 533
   Insn 1362: point = 534
   Insn 1361: point = 536
  BB 114
   Insn 1354: point = 537
   Insn 1353: point = 537
   Insn 1352: point = 538
   Insn 1351: point = 540
   Insn 1350: point = 542
   Insn 1349: point = 543
   Insn 1348: point = 543
   Insn 1347: point = 544
   Insn 1346: point = 545
   Insn 1345: point = 546
   Insn 1344: point = 546
   Insn 1343: point = 547
   Insn 1342: point = 548
   Insn 1341: point = 549
   Insn 1340: point = 551
   Insn 1339: point = 552
   Insn 1338: point = 553
   Insn 1337: point = 554
   Insn 1336: point = 556
   Insn 1335: point = 558
  BB 113
   Insn 1333: point = 559
   Insn 1332: point = 559
   Insn 1331: point = 560
   Insn 1330: point = 561
   Insn 1329: point = 561
   Insn 1328: point = 562
   Insn 1327: point = 562
   Insn 1326: point = 564
  BB 111
   Insn 1319: point = 565
   Insn 1318: point = 565
   Insn 1317: point = 566
   Insn 1316: point = 568
   Insn 1315: point = 570
   Insn 1314: point = 571
   Insn 1313: point = 571
   Insn 1312: point = 572
   Insn 1311: point = 573
   Insn 1310: point = 574
   Insn 1309: point = 574
   Insn 1308: point = 575
   Insn 1307: point = 576
   Insn 1306: point = 577
   Insn 1305: point = 579
   Insn 1304: point = 580
   Insn 1303: point = 581
   Insn 1302: point = 582
   Insn 1301: point = 584
   Insn 1300: point = 586
  BB 110
   Insn 1298: point = 587
   Insn 1297: point = 587
   Insn 1296: point = 588
   Insn 1295: point = 589
   Insn 1294: point = 589
   Insn 1293: point = 590
   Insn 1292: point = 590
   Insn 1291: point = 592
   Insn 1290: point = 593
   Insn 1289: point = 594
   Insn 1288: point = 595
   Insn 1287: point = 597
  BB 108
   Insn 1280: point = 598
   Insn 1279: point = 598
   Insn 1278: point = 599
   Insn 1277: point = 601
   Insn 1276: point = 603
   Insn 1275: point = 604
   Insn 1274: point = 604
   Insn 1273: point = 605
   Insn 1272: point = 606
   Insn 1271: point = 607
   Insn 1270: point = 607
   Insn 1269: point = 608
   Insn 1268: point = 609
   Insn 1267: point = 610
   Insn 1266: point = 612
   Insn 1265: point = 613
   Insn 1264: point = 614
   Insn 1263: point = 615
   Insn 1262: point = 617
   Insn 1261: point = 619
  BB 107
   Insn 1259: point = 620
   Insn 1258: point = 620
   Insn 1257: point = 621
   Insn 1256: point = 622
   Insn 1255: point = 622
   Insn 1254: point = 623
   Insn 1253: point = 623
   Insn 1252: point = 625
  BB 105
   Insn 1245: point = 626
   Insn 1244: point = 626
  BB 104
   Insn 1242: point = 626
   Insn 1241: point = 626
   Insn 1240: point = 627
   Insn 1239: point = 628
   Insn 1238: point = 628
   Insn 1237: point = 629
   Insn 1236: point = 629
   Insn 1235: point = 631
  BB 103
   Insn 1232: point = 632
   Insn 1231: point = 633
   Insn 1230: point = 634
   Insn 1229: point = 634
   Insn 1228: point = 635
   Insn 1227: point = 636
   Insn 1226: point = 637
   Insn 1225: point = 637
   Insn 1224: point = 638
   Insn 1223: point = 639
   Insn 1222: point = 640
   Insn 1221: point = 642
   Insn 1220: point = 643
   Insn 1219: point = 644
   Insn 1218: point = 645
   Insn 1217: point = 647
   Insn 1216: point = 649
  BB 102
   Insn 1214: point = 650
   Insn 1213: point = 650
   Insn 1212: point = 651
   Insn 1211: point = 652
   Insn 1210: point = 652
   Insn 1209: point = 653
   Insn 1208: point = 653
   Insn 1207: point = 655
   Insn 1206: point = 656
   Insn 1205: point = 656
   Insn 1204: point = 656
   Insn 1203: point = 656
   Insn 1202: point = 657
   Insn 1201: point = 658
   Insn 1200: point = 659
   Insn 1199: point = 660
   Insn 1198: point = 661
   Insn 1197: point = 662
   Insn 1196: point = 663
   Insn 1195: point = 664
   Insn 1194: point = 665
   Insn 1193: point = 666
   Insn 1192: point = 667
   Insn 1191: point = 669
   Insn 1190: point = 670
   Insn 1189: point = 670
   Insn 1188: point = 671
   Insn 1187: point = 672
   Insn 1186: point = 672
   Insn 1185: point = 673
   Insn 1184: point = 674
   Insn 1183: point = 674
   Insn 1182: point = 675
   Insn 1181: point = 676
   Insn 1180: point = 677
   Insn 1179: point = 679
   Insn 1178: point = 680
   Insn 1177: point = 681
   Insn 1176: point = 681
   Insn 1175: point = 682
   Insn 1174: point = 683
   Insn 1173: point = 685
   Insn 1172: point = 686
   Insn 1171: point = 686
   Insn 1170: point = 687
   Insn 1169: point = 688
   Insn 1168: point = 688
   Insn 1167: point = 689
  BB 100
   Insn 1160: point = 690
   Insn 1159: point = 690
   Insn 1158: point = 691
   Insn 1157: point = 693
   Insn 1156: point = 695
   Insn 1155: point = 696
   Insn 1154: point = 696
   Insn 1153: point = 697
   Insn 1152: point = 698
   Insn 1151: point = 699
   Insn 1150: point = 700
   Insn 1149: point = 701
   Insn 1148: point = 702
   Insn 1147: point = 703
   Insn 1146: point = 704
   Insn 1145: point = 705
   Insn 1144: point = 706
   Insn 1143: point = 707
   Insn 1142: point = 709
   Insn 1141: point = 711
   Insn 1140: point = 712
  BB 98
   Insn 1133: point = 712
   Insn 1132: point = 712
   Insn 1131: point = 713
   Insn 1130: point = 715
   Insn 1129: point = 717
   Insn 1128: point = 718
   Insn 1127: point = 718
   Insn 1126: point = 719
   Insn 1125: point = 720
   Insn 1124: point = 721
   Insn 1123: point = 722
   Insn 1122: point = 722
   Insn 1121: point = 722
   Insn 1120: point = 723
   Insn 1119: point = 724
   Insn 1118: point = 726
   Insn 1117: point = 727
  BB 96
   Insn 1110: point = 728
   Insn 1109: point = 728
   Insn 1108: point = 729
   Insn 1107: point = 731
   Insn 1106: point = 733
   Insn 1105: point = 734
   Insn 1104: point = 734
   Insn 1103: point = 735
   Insn 1102: point = 736
   Insn 1101: point = 737
   Insn 1100: point = 738
   Insn 1099: point = 738
   Insn 1098: point = 738
   Insn 1097: point = 739
   Insn 1096: point = 740
   Insn 1095: point = 742
   Insn 1094: point = 743
  BB 94
   Insn 1087: point = 744
   Insn 1086: point = 744
   Insn 1085: point = 745
   Insn 1084: point = 747
   Insn 1083: point = 749
   Insn 1082: point = 750
   Insn 1081: point = 750
   Insn 1080: point = 751
   Insn 1079: point = 752
   Insn 1078: point = 753
   Insn 1077: point = 754
   Insn 1076: point = 754
   Insn 1075: point = 754
   Insn 1074: point = 755
   Insn 1073: point = 756
   Insn 1072: point = 758
   Insn 1071: point = 759
   Insn 1070: point = 760
   Insn 1069: point = 761
   Insn 1068: point = 762
   Insn 1067: point = 764
  BB 92
   Insn 1060: point = 765
   Insn 1059: point = 765
   Insn 1058: point = 766
   Insn 1057: point = 768
   Insn 1056: point = 770
   Insn 1055: point = 771
   Insn 1054: point = 771
   Insn 1053: point = 772
   Insn 1052: point = 773
   Insn 1051: point = 774
   Insn 1050: point = 774
   Insn 1049: point = 775
   Insn 1048: point = 776
   Insn 1047: point = 777
   Insn 1046: point = 778
   Insn 1045: point = 779
   Insn 1044: point = 780
   Insn 1043: point = 782
   Insn 1042: point = 784
  BB 91
   Insn 1040: point = 785
   Insn 1039: point = 785
   Insn 1038: point = 786
   Insn 1037: point = 787
   Insn 1036: point = 787
   Insn 1035: point = 788
   Insn 1034: point = 788
   Insn 1033: point = 790
  BB 89
   Insn 1026: point = 791
   Insn 1025: point = 791
   Insn 1024: point = 792
   Insn 1023: point = 794
   Insn 1022: point = 796
   Insn 1021: point = 797
   Insn 1020: point = 797
   Insn 1019: point = 798
   Insn 1018: point = 799
   Insn 1017: point = 800
   Insn 1016: point = 800
   Insn 1015: point = 801
   Insn 1014: point = 802
   Insn 1013: point = 803
   Insn 1012: point = 804
   Insn 1011: point = 805
   Insn 1010: point = 806
   Insn 1009: point = 808
   Insn 1008: point = 810
  BB 88
   Insn 1006: point = 811
   Insn 1005: point = 811
   Insn 1004: point = 812
   Insn 1003: point = 813
   Insn 1002: point = 813
   Insn 1001: point = 814
   Insn 1000: point = 814
   Insn 999: point = 816
   Insn 998: point = 817
   Insn 997: point = 818
   Insn 996: point = 819
   Insn 995: point = 820
   Insn 994: point = 821
   Insn 993: point = 822
   Insn 992: point = 823
   Insn 991: point = 824
   Insn 990: point = 826
  BB 86
   Insn 983: point = 827
   Insn 982: point = 827
   Insn 981: point = 828
   Insn 980: point = 830
   Insn 979: point = 832
   Insn 978: point = 833
   Insn 977: point = 833
   Insn 976: point = 834
   Insn 975: point = 835
   Insn 974: point = 836
   Insn 973: point = 836
   Insn 972: point = 837
   Insn 971: point = 838
   Insn 970: point = 839
   Insn 969: point = 840
   Insn 968: point = 841
   Insn 967: point = 842
   Insn 966: point = 844
   Insn 965: point = 846
  BB 85
   Insn 963: point = 847
   Insn 962: point = 847
   Insn 961: point = 848
   Insn 960: point = 849
   Insn 959: point = 849
   Insn 958: point = 850
   Insn 957: point = 850
   Insn 956: point = 852
  BB 83
   Insn 949: point = 853
   Insn 948: point = 853
   Insn 947: point = 854
   Insn 946: point = 856
   Insn 945: point = 858
   Insn 944: point = 859
   Insn 943: point = 859
   Insn 942: point = 860
   Insn 941: point = 861
   Insn 940: point = 862
   Insn 939: point = 862
   Insn 938: point = 863
   Insn 937: point = 864
   Insn 936: point = 865
   Insn 935: point = 866
   Insn 934: point = 867
   Insn 933: point = 868
   Insn 932: point = 870
   Insn 931: point = 872
  BB 82
   Insn 929: point = 873
   Insn 928: point = 873
   Insn 927: point = 874
   Insn 926: point = 875
   Insn 925: point = 875
   Insn 924: point = 876
   Insn 923: point = 876
   Insn 922: point = 878
   Insn 921: point = 879
   Insn 920: point = 879
   Insn 919: point = 880
   Insn 918: point = 881
   Insn 917: point = 883
   Insn 916: point = 884
   Insn 915: point = 886
   Insn 914: point = 888
  BB 80
   Insn 2072: point = 889
   Insn 894: point = 889
   Insn 893: point = 890
   Insn 892: point = 892
   Insn 891: point = 893
  BB 81
   Insn 911: point = 894
   Insn 910: point = 895
   Insn 909: point = 897
   Insn 908: point = 898
   Insn 907: point = 899
   Insn 906: point = 899
   Insn 905: point = 899
   Insn 904: point = 899
   Insn 903: point = 900
   Insn 902: point = 901
   Insn 901: point = 901
   Insn 900: point = 901
   Insn 899: point = 901
  BB 79
   Insn 886: point = 901
   Insn 885: point = 901
   Insn 884: point = 902
  BB 78
   Insn 883: point = 904
   Insn 882: point = 904
   Insn 881: point = 905
   Insn 880: point = 906
  BB 76
   Insn 873: point = 907
   Insn 872: point = 907
   Insn 871: point = 908
   Insn 870: point = 910
   Insn 869: point = 912
   Insn 868: point = 913
   Insn 867: point = 913
   Insn 866: point = 914
   Insn 865: point = 915
   Insn 864: point = 916
   Insn 863: point = 916
   Insn 862: point = 917
   Insn 861: point = 918
   Insn 860: point = 919
   Insn 859: point = 920
   Insn 858: point = 921
   Insn 857: point = 922
   Insn 856: point = 924
   Insn 855: point = 926
  BB 75
   Insn 853: point = 927
   Insn 852: point = 927
   Insn 851: point = 928
   Insn 850: point = 929
   Insn 849: point = 929
   Insn 848: point = 930
   Insn 847: point = 930
   Insn 846: point = 932
  BB 73
   Insn 839: point = 933
   Insn 838: point = 933
   Insn 837: point = 934
   Insn 836: point = 936
   Insn 835: point = 938
   Insn 834: point = 939
   Insn 833: point = 939
   Insn 832: point = 940
   Insn 831: point = 941
   Insn 830: point = 942
   Insn 829: point = 942
   Insn 828: point = 943
   Insn 827: point = 944
   Insn 826: point = 945
   Insn 825: point = 946
   Insn 824: point = 947
   Insn 823: point = 948
   Insn 822: point = 950
   Insn 821: point = 952
  BB 72
   Insn 819: point = 953
   Insn 818: point = 953
   Insn 817: point = 954
   Insn 816: point = 955
   Insn 815: point = 955
   Insn 814: point = 956
   Insn 813: point = 956
   Insn 812: point = 958
   Insn 811: point = 959
   Insn 810: point = 960
   Insn 809: point = 961
   Insn 808: point = 962
   Insn 807: point = 964
   Insn 803: point = 965
   Insn 802: point = 967
   Insn 801: point = 969
   Insn 800: point = 971
   Insn 799: point = 972
   Insn 798: point = 974
   Insn 797: point = 976
   Insn 796: point = 978
   Insn 795: point = 979
   Insn 794: point = 981
   Insn 793: point = 983
   Insn 792: point = 985
   Insn 791: point = 986
   Insn 790: point = 988
   Insn 789: point = 990
   Insn 788: point = 991
   Insn 787: point = 992
   Insn 786: point = 993
   Insn 785: point = 995
   Insn 784: point = 996
   Insn 783: point = 996
   Insn 782: point = 997
   Insn 781: point = 998
   Insn 780: point = 998
   Insn 779: point = 999
   Insn 778: point = 999
   Insn 777: point = 999
   Insn 776: point = 1000
   Insn 775: point = 1000
   Insn 774: point = 1000
   Insn 773: point = 1000
   Insn 772: point = 1001
   Insn 771: point = 1003
   Insn 770: point = 1004
   Insn 769: point = 1004
   Insn 768: point = 1004
   Insn 767: point = 1004
   Insn 766: point = 1005
   Insn 765: point = 1007
   Insn 764: point = 1008
   Insn 763: point = 1008
   Insn 762: point = 1008
   Insn 761: point = 1008
   Insn 760: point = 1009
   Insn 759: point = 1010
   Insn 758: point = 1011
   Insn 757: point = 1012
   Insn 756: point = 1013
   Insn 755: point = 1013
   Insn 754: point = 1013
   Insn 753: point = 1013
   Insn 752: point = 1014
   Insn 751: point = 1016
   Insn 750: point = 1017
   Insn 749: point = 1018
   Insn 748: point = 1019
   Insn 747: point = 1021
   Insn 2134: point = 1023
	Hard reg 3 is preferable by r830 with profit 1
   Insn 746: point = 1025
   Insn 2133: point = 1025
	Hard reg 3 is preferable by r830 with profit 1
	Hard reg 1 is preferable by r830 with profit 1
   Insn 745: point = 1027
   Insn 744: point = 1029
   Insn 743: point = 1031
   Insn 742: point = 1032
   Insn 741: point = 1034
  BB 69
   Insn 2065: point = 1035
   Insn 727: point = 1035
   Insn 726: point = 1035
   Insn 725: point = 1036
  BB 67
   Insn 2063: point = 1037
   Insn 716: point = 1037
   Insn 715: point = 1037
   Insn 714: point = 1038
  BB 71
   Insn 738: point = 1039
   Insn 737: point = 1039
   Insn 736: point = 1040
  BB 70
   Insn 734: point = 1041
   Insn 733: point = 1041
   Insn 732: point = 1042
  BB 68
   Insn 723: point = 1043
   Insn 722: point = 1043
   Insn 721: point = 1044
  BB 66
   Insn 712: point = 1045
   Insn 711: point = 1045
   Insn 710: point = 1046
   Insn 709: point = 1047
   Insn 708: point = 1047
   Insn 707: point = 1047
   Insn 706: point = 1047
   Insn 705: point = 1048
   Insn 704: point = 1049
   Insn 703: point = 1049
   Insn 702: point = 1049
   Insn 701: point = 1049
   Insn 700: point = 1050
   Insn 699: point = 1052
   Insn 698: point = 1054
   Insn 697: point = 1056
   Insn 696: point = 1057
   Insn 695: point = 1059
   Insn 694: point = 1061
   Insn 693: point = 1062
   Insn 692: point = 1063
   Insn 691: point = 1064
   Insn 690: point = 1066
   Insn 689: point = 1067
   Insn 688: point = 1068
   Insn 687: point = 1069
   Insn 686: point = 1071
  BB 64
   Insn 679: point = 1072
   Insn 678: point = 1072
   Insn 677: point = 1073
   Insn 676: point = 1075
   Insn 675: point = 1077
   Insn 674: point = 1078
   Insn 673: point = 1078
   Insn 672: point = 1079
   Insn 671: point = 1080
   Insn 670: point = 1081
   Insn 669: point = 1081
   Insn 668: point = 1082
   Insn 667: point = 1083
   Insn 666: point = 1084
   Insn 665: point = 1085
   Insn 664: point = 1086
   Insn 663: point = 1087
   Insn 662: point = 1089
   Insn 661: point = 1091
  BB 63
   Insn 659: point = 1092
   Insn 658: point = 1092
   Insn 657: point = 1093
   Insn 656: point = 1094
   Insn 655: point = 1094
   Insn 654: point = 1095
   Insn 653: point = 1095
   Insn 652: point = 1097
  BB 61
   Insn 645: point = 1098
   Insn 644: point = 1098
   Insn 643: point = 1099
   Insn 642: point = 1101
   Insn 641: point = 1103
   Insn 640: point = 1104
   Insn 639: point = 1104
   Insn 638: point = 1105
   Insn 637: point = 1106
   Insn 636: point = 1107
   Insn 635: point = 1107
   Insn 634: point = 1108
   Insn 633: point = 1109
   Insn 632: point = 1110
   Insn 631: point = 1111
   Insn 630: point = 1112
   Insn 629: point = 1113
   Insn 628: point = 1115
   Insn 627: point = 1117
  BB 60
   Insn 625: point = 1118
   Insn 624: point = 1118
   Insn 623: point = 1119
   Insn 622: point = 1120
   Insn 621: point = 1120
   Insn 620: point = 1121
   Insn 619: point = 1121
   Insn 618: point = 1123
   Insn 617: point = 1124
   Insn 616: point = 1124
   Insn 615: point = 1125
   Insn 614: point = 1126
   Insn 613: point = 1128
  BB 58
   Insn 606: point = 1129
   Insn 605: point = 1129
   Insn 604: point = 1130
   Insn 603: point = 1132
   Insn 602: point = 1134
   Insn 601: point = 1135
   Insn 600: point = 1135
   Insn 599: point = 1136
   Insn 598: point = 1137
   Insn 597: point = 1138
   Insn 596: point = 1138
   Insn 595: point = 1139
   Insn 594: point = 1140
   Insn 593: point = 1141
   Insn 592: point = 1142
   Insn 591: point = 1143
   Insn 590: point = 1144
   Insn 589: point = 1146
   Insn 588: point = 1148
  BB 57
   Insn 586: point = 1149
   Insn 585: point = 1149
   Insn 584: point = 1150
   Insn 583: point = 1151
   Insn 582: point = 1151
   Insn 581: point = 1152
   Insn 580: point = 1152
   Insn 579: point = 1154
  BB 55
   Insn 572: point = 1155
   Insn 571: point = 1155
   Insn 570: point = 1156
   Insn 569: point = 1158
   Insn 568: point = 1160
   Insn 567: point = 1161
   Insn 566: point = 1161
   Insn 565: point = 1162
   Insn 564: point = 1163
   Insn 563: point = 1164
   Insn 562: point = 1164
   Insn 561: point = 1165
   Insn 560: point = 1166
   Insn 559: point = 1167
   Insn 558: point = 1168
   Insn 557: point = 1169
   Insn 556: point = 1170
   Insn 555: point = 1172
   Insn 554: point = 1174
  BB 54
   Insn 552: point = 1175
   Insn 551: point = 1175
   Insn 550: point = 1176
   Insn 549: point = 1177
   Insn 548: point = 1177
   Insn 547: point = 1178
   Insn 546: point = 1178
   Insn 545: point = 1180
   Insn 544: point = 1181
   Insn 543: point = 1181
   Insn 542: point = 1182
   Insn 541: point = 1183
   Insn 540: point = 1185
   Insn 539: point = 1187
  BB 52
   Insn 532: point = 1188
   Insn 531: point = 1188
   Insn 530: point = 1189
   Insn 529: point = 1191
   Insn 528: point = 1193
   Insn 527: point = 1194
   Insn 526: point = 1194
   Insn 525: point = 1195
   Insn 524: point = 1196
   Insn 523: point = 1197
   Insn 522: point = 1197
   Insn 521: point = 1198
   Insn 520: point = 1199
   Insn 519: point = 1200
   Insn 518: point = 1201
   Insn 517: point = 1202
   Insn 516: point = 1203
   Insn 515: point = 1205
   Insn 514: point = 1207
  BB 51
   Insn 512: point = 1208
   Insn 511: point = 1208
   Insn 510: point = 1209
   Insn 509: point = 1210
   Insn 508: point = 1210
   Insn 507: point = 1211
   Insn 506: point = 1211
   Insn 505: point = 1213
  BB 49
   Insn 498: point = 1214
   Insn 497: point = 1214
   Insn 496: point = 1215
   Insn 495: point = 1217
   Insn 494: point = 1219
   Insn 493: point = 1220
   Insn 492: point = 1220
   Insn 491: point = 1221
   Insn 490: point = 1222
   Insn 489: point = 1223
   Insn 488: point = 1223
   Insn 487: point = 1224
   Insn 486: point = 1225
   Insn 485: point = 1226
   Insn 484: point = 1227
   Insn 483: point = 1228
   Insn 482: point = 1229
   Insn 481: point = 1231
   Insn 480: point = 1233
  BB 48
   Insn 478: point = 1234
   Insn 477: point = 1234
   Insn 476: point = 1235
   Insn 475: point = 1236
   Insn 474: point = 1236
   Insn 473: point = 1237
   Insn 472: point = 1237
   Insn 471: point = 1239
   Insn 470: point = 1240
   Insn 469: point = 1240
   Insn 468: point = 1241
   Insn 467: point = 1242
   Insn 466: point = 1244
  BB 46
   Insn 459: point = 1245
   Insn 458: point = 1245
   Insn 457: point = 1246
   Insn 456: point = 1248
   Insn 455: point = 1250
   Insn 454: point = 1251
   Insn 453: point = 1251
   Insn 452: point = 1252
   Insn 451: point = 1253
   Insn 450: point = 1254
   Insn 449: point = 1254
   Insn 448: point = 1255
   Insn 447: point = 1256
   Insn 446: point = 1257
   Insn 445: point = 1258
   Insn 444: point = 1259
   Insn 443: point = 1260
   Insn 442: point = 1262
   Insn 441: point = 1264
  BB 45
   Insn 439: point = 1265
   Insn 438: point = 1265
   Insn 437: point = 1266
   Insn 436: point = 1267
   Insn 435: point = 1267
   Insn 434: point = 1268
   Insn 433: point = 1268
   Insn 432: point = 1270
  BB 43
   Insn 425: point = 1271
   Insn 424: point = 1271
   Insn 423: point = 1272
   Insn 422: point = 1274
   Insn 421: point = 1276
   Insn 420: point = 1277
   Insn 419: point = 1277
   Insn 418: point = 1278
   Insn 417: point = 1279
   Insn 416: point = 1280
   Insn 415: point = 1280
   Insn 414: point = 1281
   Insn 413: point = 1282
   Insn 412: point = 1283
   Insn 411: point = 1284
   Insn 410: point = 1285
   Insn 409: point = 1286
   Insn 408: point = 1288
   Insn 407: point = 1290
  BB 42
   Insn 405: point = 1291
   Insn 404: point = 1291
   Insn 403: point = 1292
   Insn 402: point = 1293
   Insn 401: point = 1293
   Insn 400: point = 1294
   Insn 399: point = 1294
   Insn 398: point = 1296
   Insn 397: point = 1297
   Insn 396: point = 1298
   Insn 395: point = 1299
   Insn 394: point = 1300
   Insn 393: point = 1301
   Insn 392: point = 1303
  BB 40
   Insn 385: point = 1304
   Insn 384: point = 1304
   Insn 383: point = 1305
   Insn 382: point = 1307
   Insn 381: point = 1309
   Insn 380: point = 1310
   Insn 379: point = 1310
   Insn 378: point = 1311
   Insn 377: point = 1312
   Insn 376: point = 1313
   Insn 375: point = 1313
   Insn 374: point = 1314
   Insn 373: point = 1315
   Insn 372: point = 1316
   Insn 371: point = 1317
   Insn 370: point = 1318
   Insn 369: point = 1319
   Insn 368: point = 1321
   Insn 367: point = 1323
  BB 39
   Insn 365: point = 1324
   Insn 364: point = 1324
   Insn 363: point = 1325
   Insn 362: point = 1326
   Insn 361: point = 1326
   Insn 360: point = 1327
   Insn 359: point = 1327
   Insn 358: point = 1329
  BB 37
   Insn 351: point = 1330
   Insn 350: point = 1330
   Insn 349: point = 1331
   Insn 348: point = 1333
   Insn 347: point = 1335
   Insn 346: point = 1336
   Insn 345: point = 1336
   Insn 344: point = 1337
   Insn 343: point = 1338
   Insn 342: point = 1339
   Insn 341: point = 1339
   Insn 340: point = 1340
   Insn 339: point = 1341
   Insn 338: point = 1342
   Insn 337: point = 1343
   Insn 336: point = 1344
   Insn 335: point = 1345
   Insn 334: point = 1347
   Insn 333: point = 1349
  BB 36
   Insn 331: point = 1350
   Insn 330: point = 1350
   Insn 329: point = 1351
   Insn 328: point = 1352
   Insn 327: point = 1352
   Insn 326: point = 1353
   Insn 325: point = 1353
   Insn 324: point = 1355
   Insn 323: point = 1356
  BB 33
   Insn 2041: point = 1356
   Insn 298: point = 1356
   Insn 297: point = 1356
   Insn 296: point = 1356
   Insn 295: point = 1356
   Insn 294: point = 1356
   Insn 293: point = 1356
   Insn 292: point = 1356
   Insn 291: point = 1356
   Insn 290: point = 1356
   Insn 289: point = 1356
   Insn 288: point = 1357
   Insn 287: point = 1359
  BB 31
   Insn 2039: point = 1360
   Insn 273: point = 1360
   Insn 272: point = 1360
   Insn 271: point = 1360
   Insn 270: point = 1360
   Insn 269: point = 1360
   Insn 268: point = 1360
   Insn 267: point = 1360
  BB 29
   Insn 2037: point = 1360
   Insn 253: point = 1360
   Insn 252: point = 1360
   Insn 251: point = 1360
   Insn 250: point = 1360
   Insn 249: point = 1360
   Insn 248: point = 1360
   Insn 247: point = 1360
  BB 27
   Insn 2035: point = 1360
   Insn 233: point = 1360
   Insn 232: point = 1360
   Insn 231: point = 1360
   Insn 230: point = 1360
   Insn 229: point = 1360
   Insn 228: point = 1360
   Insn 227: point = 1360
  BB 24
   Insn 2033: point = 1360
   Insn 203: point = 1360
   Insn 202: point = 1360
   Insn 201: point = 1360
   Insn 200: point = 1360
   Insn 199: point = 1360
   Insn 198: point = 1360
   Insn 197: point = 1360
  BB 35
   Insn 320: point = 1360
   Insn 319: point = 1360
   Insn 318: point = 1360
   Insn 317: point = 1360
   Insn 316: point = 1360
   Insn 315: point = 1360
   Insn 314: point = 1360
   Insn 313: point = 1360
   Insn 312: point = 1360
  BB 34
   Insn 310: point = 1360
   Insn 309: point = 1360
   Insn 308: point = 1361
   Insn 307: point = 1362
   Insn 306: point = 1362
   Insn 305: point = 1363
   Insn 304: point = 1363
   Insn 303: point = 1365
  BB 32
   Insn 285: point = 1366
   Insn 284: point = 1366
   Insn 283: point = 1367
   Insn 282: point = 1368
   Insn 281: point = 1368
   Insn 280: point = 1369
   Insn 279: point = 1369
   Insn 278: point = 1371
  BB 30
   Insn 265: point = 1372
   Insn 264: point = 1372
   Insn 263: point = 1373
   Insn 262: point = 1374
   Insn 261: point = 1374
   Insn 260: point = 1375
   Insn 259: point = 1375
   Insn 258: point = 1377
  BB 28
   Insn 245: point = 1378
   Insn 244: point = 1378
   Insn 243: point = 1379
   Insn 242: point = 1380
   Insn 241: point = 1380
   Insn 240: point = 1381
   Insn 239: point = 1381
   Insn 238: point = 1383
  BB 26
   Insn 224: point = 1384
   Insn 223: point = 1384
   Insn 222: point = 1385
   Insn 221: point = 1386
   Insn 220: point = 1386
   Insn 219: point = 1387
   Insn 218: point = 1387
   Insn 217: point = 1389
  BB 25
   Insn 215: point = 1390
   Insn 214: point = 1390
   Insn 213: point = 1391
   Insn 212: point = 1392
   Insn 211: point = 1392
   Insn 210: point = 1393
   Insn 209: point = 1393
   Insn 208: point = 1395
  BB 23
   Insn 194: point = 1396
   Insn 193: point = 1396
   Insn 192: point = 1397
   Insn 191: point = 1398
   Insn 190: point = 1398
   Insn 189: point = 1399
   Insn 188: point = 1399
   Insn 187: point = 1401
  BB 22
   Insn 185: point = 1402
   Insn 184: point = 1402
   Insn 183: point = 1403
   Insn 182: point = 1404
   Insn 181: point = 1404
   Insn 180: point = 1405
   Insn 179: point = 1405
   Insn 178: point = 1407
  BB 20
   Insn 2029: point = 1408
   Insn 164: point = 1408
   Insn 163: point = 1408
   Insn 2132: point = 1409
   Insn 162: point = 1410
   Insn 161: point = 1411
   Insn 160: point = 1413
   Insn 159: point = 1414
   Insn 158: point = 1414
   Insn 157: point = 1414
   Insn 156: point = 1414
   Insn 155: point = 1415
   Insn 154: point = 1417
  BB 19
   Insn 149: point = 1418
   Insn 148: point = 1418
   Insn 147: point = 1419
   Insn 146: point = 1420
  BB 18
   Insn 141: point = 1421
   Insn 140: point = 1421
   Insn 139: point = 1422
  BB 15
   Insn 2024: point = 1423
   Insn 118: point = 1423
   Insn 117: point = 1424
   Insn 116: point = 1424
   Insn 115: point = 1426
  BB 12
   Insn 2022: point = 1427
   Insn 101: point = 1427
   Insn 100: point = 1428
   Insn 99: point = 1428
   Insn 98: point = 1430
  BB 9
   Insn 2020: point = 1431
   Insn 84: point = 1431
   Insn 83: point = 1432
   Insn 82: point = 1432
   Insn 81: point = 1434
  BB 6
   Insn 2018: point = 1435
   Insn 67: point = 1435
   Insn 66: point = 1436
   Insn 65: point = 1436
   Insn 64: point = 1438
  BB 17
   Insn 2027: point = 1439
   Insn 134: point = 1439
   Insn 133: point = 1439
   Insn 2131: point = 1440
   Insn 132: point = 1441
   Insn 131: point = 1442
   Insn 130: point = 1444
  BB 16
   Insn 125: point = 1445
   Insn 124: point = 1445
   Insn 123: point = 1446
  BB 14
   Insn 110: point = 1447
   Insn 109: point = 1447
  BB 13
   Insn 108: point = 1449
   Insn 107: point = 1449
   Insn 106: point = 1449
  BB 11
   Insn 93: point = 1450
   Insn 92: point = 1450
  BB 10
   Insn 91: point = 1452
   Insn 90: point = 1452
   Insn 89: point = 1452
  BB 8
   Insn 76: point = 1453
   Insn 75: point = 1453
  BB 7
   Insn 74: point = 1455
   Insn 73: point = 1455
   Insn 72: point = 1455
  BB 5
   Insn 59: point = 1456
   Insn 58: point = 1456
  BB 4
   Insn 57: point = 1458
   Insn 56: point = 1458
   Insn 55: point = 1458
  BB 2
   Insn 42: point = 1459
   Insn 41: point = 1459
   Insn 40: point = 1460
   Insn 39: point = 1462
   Insn 38: point = 1464
   Insn 37: point = 1465
   Insn 36: point = 1465
   Insn 35: point = 1466
   Insn 34: point = 1467
   Insn 33: point = 1468
   Insn 32: point = 1468
   Insn 31: point = 1469
   Insn 30: point = 1470
   Insn 29: point = 1471
   Insn 28: point = 1472
   Insn 27: point = 1473
   Insn 26: point = 1474
   Insn 25: point = 1476
   Insn 24: point = 1478
   Insn 23: point = 1479
   Insn 22: point = 1479
   Insn 21: point = 1479
   Insn 20: point = 1479
   Insn 19: point = 1479
   Insn 18: point = 1479
   Insn 17: point = 1479
   Insn 16: point = 1479
   Insn 15: point = 1479
   Insn 14: point = 1479
   Insn 13: point = 1480
   Insn 12: point = 1481
   Insn 9: point = 1481
   Insn 7: point = 1483
   Insn 6: point = 1483
   Insn 5: point = 1483
   Insn 4: point = 1483
   Insn 3: point = 1483
   Insn 2: point = 1483
 r87: [54..55] [49..49] [3..44]
 r88: [1475..1476]
 r89: [1469..1474]
 r90: [1468..1473]
 r91: [1467..1472]
 r92: [1463..1464]
 r93: [1459..1460]
 r94: [52..53]
 r95: [50..51]
 r96: [1456..1458]
 r97: [1453..1455]
 r98: [1450..1452]
 r99: [1447..1449]
 r100: [1445..1446]
 r101: [1421..1422]
 r102: [1418..1420]
 r103: [1416..1417]
 r104: [1414..1415]
 r105: [1408..1411]
 r106: [45..46]
 r107: [1439..1442]
 r108: [1423..1424]
 r109: [1427..1428]
 r110: [1431..1432]
 r111: [1435..1436]
 r112: [1404..1405]
 r113: [1402..1403]
 r114: [1398..1399]
 r115: [1396..1397]
 r116: [1392..1393]
 r117: [1390..1391]
 r118: [1386..1387]
 r119: [1384..1385]
 r120: [1380..1381]
 r121: [1378..1379]
 r122: [1374..1375]
 r123: [1372..1373]
 r124: [1368..1369]
 r125: [1366..1367]
 r126: [1356..1357]
 r127: [1362..1363]
 r128: [1360..1361]
 r129: [1352..1353]
 r130: [1350..1351]
 r131: [1346..1347]
 r132: [1340..1345]
 r133: [1339..1344]
 r134: [1338..1343]
 r135: [1334..1335]
 r136: [1330..1331]
 r137: [1326..1327]
 r138: [1324..1325]
 r139: [1320..1321]
 r140: [1314..1319]
 r141: [1313..1318]
 r142: [1312..1317]
 r143: [1308..1309]
 r144: [1304..1305]
 r145: [1302..1303]
 r146: [1299..1301]
 r147: [1293..1294]
 r148: [1291..1292]
 r149: [1287..1288]
 r150: [1281..1286]
 r151: [1280..1285]
 r152: [1279..1284]
 r153: [1275..1276]
 r154: [1271..1272]
 r155: [1267..1268]
 r156: [1265..1266]
 r157: [1261..1262]
 r158: [1255..1260]
 r159: [1254..1259]
 r160: [1253..1258]
 r161: [1249..1250]
 r162: [1245..1246]
 r163: [1243..1244]
 r164: [1240..1242]
 r165: [1236..1237]
 r166: [1234..1235]
 r167: [1230..1231]
 r168: [1224..1229]
 r169: [1223..1228]
 r170: [1222..1227]
 r171: [1218..1219]
 r172: [1214..1215]
 r173: [1210..1211]
 r174: [1208..1209]
 r175: [1204..1205]
 r176: [1198..1203]
 r177: [1197..1202]
 r178: [1196..1201]
 r179: [1192..1193]
 r180: [1188..1189]
 r181: [1186..1187]
 r182: [1184..1185]
 r183: [1181..1183]
 r184: [1177..1178]
 r185: [1175..1176]
 r186: [1171..1172]
 r187: [1165..1170]
 r188: [1164..1169]
 r189: [1163..1168]
 r190: [1159..1160]
 r191: [1155..1156]
 r192: [1151..1152]
 r193: [1149..1150]
 r194: [1145..1146]
 r195: [1139..1144]
 r196: [1138..1143]
 r197: [1137..1142]
 r198: [1133..1134]
 r199: [1129..1130]
 r200: [1127..1128]
 r201: [1124..1126]
 r202: [1120..1121]
 r203: [1118..1119]
 r204: [1114..1115]
 r205: [1108..1113]
 r206: [1107..1112]
 r207: [1106..1111]
 r208: [1102..1103]
 r209: [1098..1099]
 r210: [1094..1095]
 r211: [1092..1093]
 r212: [1088..1089]
 r213: [1082..1087]
 r214: [1081..1086]
 r215: [1080..1085]
 r216: [1076..1077]
 r217: [1072..1073]
 r218: [1070..1071]
 r219: [1067..1069]
 r220: [1065..1066]
 r221: [1062..1064]
 r222: [1058..1059]
 r223: [1051..1057]
 r224: [1053..1054]
 r225: [1051..1052]
 r226: [1049..1050]
 r227: [1045..1046]
 r228: [1043..1044]
 r229: [1041..1042]
 r230: [1022..1032]
 r231: [1028..1029]
 r232: [1026..1027]
 r233: [1022..1023]
 r234: [1017..1019]
 r235: [1013..1014]
 r236: [1010..1012]
 r237: [1004..1005]
 r238: [1000..1001]
 r239: [994..995]
 r240: [991..993]
 r241: [987..988]
 r242: [980..986]
 r243: [982..983]
 r244: [980..981]
 r245: [973..979]
 r246: [975..976]
 r247: [973..974]
 r248: [966..972]
 r249: [968..969]
 r250: [966..967]
 r251: [963..965]
 r252: [955..956]
 r253: [953..954]
 r254: [949..950]
 r255: [943..948]
 r256: [942..947]
 r257: [941..946]
 r258: [937..938]
 r259: [933..934]
 r260: [929..930]
 r261: [927..928]
 r262: [923..924]
 r263: [917..922]
 r264: [916..921]
 r265: [915..920]
 r266: [911..912]
 r267: [907..908]
 r268: [901..906]
 r269: [891..893]
 r270: [889..890]
 r271: [896..898]
 r272: [894..895]
 r273: [885..886]
 r274: [882..884]
 r275: [882..883]
 r276: [879..881]
 r277: [875..876]
 r278: [873..874]
 r279: [869..870]
 r280: [863..868]
 r281: [862..867]
 r282: [861..866]
 r283: [857..858]
 r284: [853..854]
 r285: [849..850]
 r286: [847..848]
 r287: [843..844]
 r288: [837..842]
 r289: [836..841]
 r290: [835..840]
 r291: [831..832]
 r292: [827..828]
 r293: [825..826]
 r294: [822..824]
 r295: [813..814]
 r296: [811..812]
 r297: [807..808]
 r298: [801..806]
 r299: [800..805]
 r300: [799..804]
 r301: [795..796]
 r302: [791..792]
 r303: [787..788]
 r304: [785..786]
 r305: [781..782]
 r306: [775..780]
 r307: [774..779]
 r308: [773..778]
 r309: [769..770]
 r310: [765..766]
 r311: [763..764]
 r312: [760..762]
 r313: [752..759]
 r314: [751..756]
 r315: [748..749]
 r316: [744..745]
 r317: [736..743]
 r318: [735..740]
 r319: [732..733]
 r320: [728..729]
 r321: [720..727]
 r322: [719..724]
 r323: [716..717]
 r324: [712..713]
 r325: [708..709]
 r326: [701..707]
 r327: [700..706]
 r328: [698..705]
 r329: [694..695]
 r330: [690..691]
 r331: [686..687]
 r332: [684..685]
 r333: [676..683]
 r334: [675..680]
 r335: [674..677]
 r336: [670..671]
 r337: [668..669]
 r338: [665..667]
 r339: [652..653]
 r340: [650..651]
 r341: [646..647]
 r342: [638..645]
 r343: [637..644]
 r344: [636..643]
 r345: [635..640]
 r346: [632..633]
 r347: [628..629]
 r348: [626..627]
 r349: [622..623]
 r350: [620..621]
 r351: [616..617]
 r352: [608..615]
 r353: [607..614]
 r354: [606..613]
 r355: [605..610]
 r356: [602..603]
 r357: [598..599]
 r358: [593..595]
 r359: [589..590]
 r360: [587..588]
 r361: [583..584]
 r362: [575..582]
 r363: [574..581]
 r364: [573..580]
 r365: [572..577]
 r366: [569..570]
 r367: [565..566]
 r368: [561..562]
 r369: [559..560]
 r370: [555..556]
 r371: [547..554]
 r372: [546..553]
 r373: [545..552]
 r374: [544..549]
 r375: [541..542]
 r376: [537..538]
 r377: [532..534]
 r378: [528..529]
 r379: [526..527]
 r380: [522..523]
 r381: [514..521]
 r382: [513..520]
 r383: [512..519]
 r384: [511..516]
 r385: [508..509]
 r386: [504..505]
 r387: [500..501]
 r388: [498..499]
 r389: [494..495]
 r390: [486..493]
 r391: [485..492]
 r392: [484..491]
 r393: [483..488]
 r394: [480..481]
 r395: [476..477]
 r396: [471..473]
 r397: [464..465]
 r398: [458..463]
 r399: [457..462]
 r400: [456..461]
 r401: [452..453]
 r402: [448..449]
 r403: [446..447]
 r404: [443..445]
 r405: [440..442]
 r406: [436..437]
 r407: [430..435]
 r408: [429..434]
 r409: [428..433]
 r410: [424..425]
 r411: [420..421]
 r412: [418..419]
 r413: [415..417]
 r414: [412..414]
 r415: [399..400]
 r416: [397..398]
 r417: [393..394]
 r418: [385..392]
 r419: [384..391]
 r420: [383..390]
 r421: [382..387]
 r422: [379..380]
 r423: [375..376]
 r424: [373..374]
 r425: [369..370]
 r426: [367..368]
 r427: [363..364]
 r428: [355..362]
 r429: [354..361]
 r430: [353..360]
 r431: [352..357]
 r432: [349..350]
 r433: [345..346]
 r434: [341..342]
 r435: [339..340]
 r436: [335..336]
 r437: [327..334]
 r438: [326..333]
 r439: [325..332]
 r440: [324..329]
 r441: [321..322]
 r442: [317..318]
 r443: [313..314]
 r444: [311..312]
 r445: [307..308]
 r446: [299..306]
 r447: [298..305]
 r448: [297..304]
 r449: [296..301]
 r450: [293..294]
 r451: [289..290]
 r452: [285..286]
 r453: [283..284]
 r454: [279..280]
 r455: [271..278]
 r456: [270..277]
 r457: [269..276]
 r458: [268..273]
 r459: [265..266]
 r460: [261..262]
 r461: [259..260]
 r462: [255..256]
 r463: [253..254]
 r464: [249..250]
 r465: [241..248]
 r466: [240..247]
 r467: [239..246]
 r468: [238..243]
 r469: [235..236]
 r470: [231..232]
 r471: [227..228]
 r472: [225..226]
 r473: [221..222]
 r474: [213..220]
 r475: [212..219]
 r476: [211..218]
 r477: [210..215]
 r478: [207..208]
 r479: [203..204]
 r480: [199..200]
 r481: [197..198]
 r482: [193..194]
 r483: [185..192]
 r484: [184..191]
 r485: [183..190]
 r486: [182..187]
 r487: [179..180]
 r488: [175..176]
 r489: [171..172]
 r490: [169..170]
 r491: [165..166]
 r492: [159..164]
 r493: [158..163]
 r494: [157..162]
 r495: [153..154]
 r496: [149..150]
 r497: [147..148]
 r498: [144..146]
 r499: [140..141]
 r500: [138..139]
 r501: [134..135]
 r502: [128..133]
 r503: [127..132]
 r504: [126..131]
 r505: [122..123]
 r506: [118..119]
 r507: [116..117]
 r508: [113..115]
 r509: [109..110]
 r510: [107..108]
 r511: [103..104]
 r512: [97..102]
 r513: [96..101]
 r514: [95..100]
 r515: [91..92]
 r516: [87..88]
 r517: [83..84]
 r518: [81..82]
 r519: [77..78]
 r520: [71..76]
 r521: [70..75]
 r522: [69..74]
 r523: [65..66]
 r524: [61..62]
 r525: [59..60]
 r526: [56..58]
 r527: [1..2]
 r528: [1479..1480]
 r529: [1477..1478]
 r530: [1466..1471]
 r531: [1465..1470]
 r532: [1461..1462]
 r533: [1437..1438]
 r534: [1433..1434]
 r535: [1429..1430]
 r536: [1425..1426]
 r537: [1443..1444]
 r538: [1418..1419]
 r539: [1412..1413]
 r540: [47..48]
 r541: [1406..1407]
 r542: [1400..1401]
 r543: [1394..1395]
 r544: [1388..1389]
 r545: [1382..1383]
 r546: [1376..1377]
 r547: [1370..1371]
 r548: [1358..1359]
 r549: [1364..1365]
 r550: [1354..1355]
 r551: [1348..1349]
 r552: [1337..1342]
 r553: [1336..1341]
 r554: [1332..1333]
 r555: [1328..1329]
 r556: [1322..1323]
 r557: [1311..1316]
 r558: [1310..1315]
 r559: [1306..1307]
 r560: [1299..1300]
 r561: [1297..1298]
 r562: [1295..1296]
 r563: [1289..1290]
 r564: [1278..1283]
 r565: [1277..1282]
 r566: [1273..1274]
 r567: [1269..1270]
 r568: [1263..1264]
 r569: [1252..1257]
 r570: [1251..1256]
 r571: [1247..1248]
 r572: [1240..1241]
 r573: [1238..1239]
 r574: [1232..1233]
 r575: [1221..1226]
 r576: [1220..1225]
 r577: [1216..1217]
 r578: [1212..1213]
 r579: [1206..1207]
 r580: [1195..1200]
 r581: [1194..1199]
 r582: [1190..1191]
 r583: [1181..1182]
 r584: [1179..1180]
 r585: [1173..1174]
 r586: [1162..1167]
 r587: [1161..1166]
 r588: [1157..1158]
 r589: [1153..1154]
 r590: [1147..1148]
 r591: [1136..1141]
 r592: [1135..1140]
 r593: [1131..1132]
 r594: [1124..1125]
 r595: [1122..1123]
 r596: [1116..1117]
 r597: [1105..1110]
 r598: [1104..1109]
 r599: [1100..1101]
 r600: [1096..1097]
 r601: [1090..1091]
 r602: [1079..1084]
 r603: [1078..1083]
 r604: [1074..1075]
 r605: [1067..1068]
 r606: [1062..1063]
 r607: [1060..1061]
 r608: [1055..1056]
 r609: [1047..1048]
 r610: [1037..1038]
 r611: [1035..1036]
 r612: [1039..1040]
 r613: [1033..1034]
 r614: [1030..1031]
 r615: [1020..1021]
 r617: [1017..1018]
 r618: [1015..1016]
 r619: [1010..1011]
 r620: [1008..1009]
 r621: [1006..1007]
 r622: [1002..1003]
 r623: [998..999]
 r624: [996..997]
 r625: [991..992]
 r626: [989..990]
 r627: [984..985]
 r628: [977..978]
 r629: [970..971]
 r632: [961..962]
 r633: [963..964]
 r634: [959..960]
 r635: [957..958]
 r636: [951..952]
 r637: [940..945]
 r638: [939..944]
 r639: [935..936]
 r640: [931..932]
 r641: [925..926]
 r642: [914..919]
 r643: [913..918]
 r644: [909..910]
 r645: [904..905]
 r646: [901..902]
 r647: [891..892]
 r648: [899..900]
 r649: [896..897]
 r650: [887..888]
 r651: [879..880]
 r652: [877..878]
 r653: [871..872]
 r654: [860..865]
 r655: [859..864]
 r656: [855..856]
 r657: [851..852]
 r658: [845..846]
 r659: [834..839]
 r660: [833..838]
 r661: [829..830]
 r662: [822..823]
 r663: [819..821]
 r664: [819..820]
 r665: [817..818]
 r666: [815..816]
 r667: [809..810]
 r668: [798..803]
 r669: [797..802]
 r670: [793..794]
 r671: [789..790]
 r672: [783..784]
 r673: [772..777]
 r674: [771..776]
 r675: [767..768]
 r676: [760..761]
 r677: [757..758]
 r678: [753..755]
 r679: [750..754]
 r680: [746..747]
 r681: [741..742]
 r682: [737..739]
 r683: [734..738]
 r684: [730..731]
 r685: [725..726]
 r686: [721..723]
 r687: [718..722]
 r688: [714..715]
 r689: [710..711]
 r690: [699..704]
 r691: [697..703]
 r692: [696..702]
 r693: [692..693]
 r694: [688..689]
 r695: [681..682]
 r696: [678..679]
 r697: [672..673]
 r698: [665..666]
 r699: [662..664]
 r700: [662..663]
 r701: [659..661]
 r702: [659..660]
 r703: [656..658]
 r704: [656..657]
 r705: [654..655]
 r706: [648..649]
 r707: [641..642]
 r708: [634..639]
 r709: [630..631]
 r710: [624..625]
 r711: [618..619]
 r712: [611..612]
 r713: [604..609]
 r714: [600..601]
 r715: [596..597]
 r716: [593..594]
 r717: [591..592]
 r718: [585..586]
 r719: [578..579]
 r720: [571..576]
 r721: [567..568]
 r722: [563..564]
 r723: [557..558]
 r724: [550..551]
 r725: [543..548]
 r726: [539..540]
 r727: [535..536]
 r728: [532..533]
 r729: [530..531]
 r730: [524..525]
 r731: [517..518]
 r732: [510..515]
 r733: [506..507]
 r734: [502..503]
 r735: [496..497]
 r736: [489..490]
 r737: [482..487]
 r738: [478..479]
 r739: [474..475]
 r740: [471..472]
 r741: [468..470]
 r742: [468..469]
 r743: [466..467]
 r744: [455..460]
 r745: [454..459]
 r746: [450..451]
 r747: [443..444]
 r748: [440..441]
 r749: [438..439]
 r750: [427..432]
 r751: [426..431]
 r752: [422..423]
 r753: [415..416]
 r754: [412..413]
 r755: [409..411]
 r756: [409..410]
 r757: [406..408]
 r758: [406..407]
 r759: [403..405]
 r760: [403..404]
 r761: [401..402]
 r762: [395..396]
 r763: [388..389]
 r764: [381..386]
 r765: [377..378]
 r766: [371..372]
 r767: [365..366]
 r768: [358..359]
 r769: [351..356]
 r770: [347..348]
 r771: [343..344]
 r772: [337..338]
 r773: [330..331]
 r774: [323..328]
 r775: [319..320]
 r776: [315..316]
 r777: [309..310]
 r778: [302..303]
 r779: [295..300]
 r780: [291..292]
 r781: [287..288]
 r782: [281..282]
 r783: [274..275]
 r784: [267..272]
 r785: [263..264]
 r786: [257..258]
 r787: [251..252]
 r788: [244..245]
 r789: [237..242]
 r790: [233..234]
 r791: [229..230]
 r792: [223..224]
 r793: [216..217]
 r794: [209..214]
 r795: [205..206]
 r796: [201..202]
 r797: [195..196]
 r798: [188..189]
 r799: [181..186]
 r800: [177..178]
 r801: [173..174]
 r802: [167..168]
 r803: [156..161]
 r804: [155..160]
 r805: [151..152]
 r806: [144..145]
 r807: [142..143]
 r808: [136..137]
 r809: [125..130]
 r810: [124..129]
 r811: [120..121]
 r812: [113..114]
 r813: [111..112]
 r814: [105..106]
 r815: [94..99]
 r816: [93..98]
 r817: [89..90]
 r818: [85..86]
 r819: [79..80]
 r820: [68..73]
 r821: [67..72]
 r822: [63..64]
 r823: [56..57]
 r825: [1481..1482]
 r826: [0..0]
 r827: [1440..1441]
 r828: [1409..1410]
 r829: [1021..1022]
 r830: [1024..1025]
Compressing live ranges: from 1483 to 1064 - 71%
Ranges after the compression:
 r87: [14..15] [9..9] [3..4]
 r88: [1056..1057]
 r89: [1054..1055]
 r90: [1054..1055]
 r91: [1054..1055]
 r92: [1052..1053]
 r93: [1048..1049]
 r94: [12..13]
 r95: [10..11]
 r96: [1046..1047]
 r97: [1044..1045]
 r98: [1042..1043]
 r99: [1040..1041]
 r100: [1038..1039]
 r101: [1016..1017]
 r102: [1014..1015]
 r103: [1012..1013]
 r104: [1010..1011]
 r105: [1006..1007]
 r106: [5..6]
 r107: [1034..1035]
 r108: [1018..1019]
 r109: [1022..1023]
 r110: [1026..1027]
 r111: [1030..1031]
 r112: [1002..1003]
 r113: [1000..1001]
 r114: [996..997]
 r115: [994..995]
 r116: [990..991]
 r117: [988..989]
 r118: [984..985]
 r119: [982..983]
 r120: [978..979]
 r121: [976..977]
 r122: [972..973]
 r123: [970..971]
 r124: [966..967]
 r125: [964..965]
 r126: [954..955]
 r127: [960..961]
 r128: [958..959]
 r129: [950..951]
 r130: [948..949]
 r131: [944..945]
 r132: [942..943]
 r133: [942..943]
 r134: [942..943]
 r135: [940..941]
 r136: [936..937]
 r137: [932..933]
 r138: [930..931]
 r139: [926..927]
 r140: [924..925]
 r141: [924..925]
 r142: [924..925]
 r143: [922..923]
 r144: [918..919]
 r145: [916..917]
 r146: [914..915]
 r147: [908..909]
 r148: [906..907]
 r149: [902..903]
 r150: [900..901]
 r151: [900..901]
 r152: [900..901]
 r153: [898..899]
 r154: [894..895]
 r155: [890..891]
 r156: [888..889]
 r157: [884..885]
 r158: [882..883]
 r159: [882..883]
 r160: [882..883]
 r161: [880..881]
 r162: [876..877]
 r163: [874..875]
 r164: [872..873]
 r165: [868..869]
 r166: [866..867]
 r167: [862..863]
 r168: [860..861]
 r169: [860..861]
 r170: [860..861]
 r171: [858..859]
 r172: [854..855]
 r173: [850..851]
 r174: [848..849]
 r175: [844..845]
 r176: [842..843]
 r177: [842..843]
 r178: [842..843]
 r179: [840..841]
 r180: [836..837]
 r181: [834..835]
 r182: [832..833]
 r183: [830..831]
 r184: [826..827]
 r185: [824..825]
 r186: [820..821]
 r187: [818..819]
 r188: [818..819]
 r189: [818..819]
 r190: [816..817]
 r191: [812..813]
 r192: [808..809]
 r193: [806..807]
 r194: [802..803]
 r195: [800..801]
 r196: [800..801]
 r197: [800..801]
 r198: [798..799]
 r199: [794..795]
 r200: [792..793]
 r201: [790..791]
 r202: [786..787]
 r203: [784..785]
 r204: [780..781]
 r205: [778..779]
 r206: [778..779]
 r207: [778..779]
 r208: [776..777]
 r209: [772..773]
 r210: [768..769]
 r211: [766..767]
 r212: [762..763]
 r213: [760..761]
 r214: [760..761]
 r215: [760..761]
 r216: [758..759]
 r217: [754..755]
 r218: [752..753]
 r219: [750..751]
 r220: [748..749]
 r221: [746..747]
 r222: [742..743]
 r223: [736..741]
 r224: [738..739]
 r225: [736..737]
 r226: [734..735]
 r227: [730..731]
 r228: [728..729]
 r229: [726..727]
 r230: [708..717]
 r231: [714..715]
 r232: [712..713]
 r233: [708..709]
 r234: [704..705]
 r235: [700..701]
 r236: [698..699]
 r237: [692..693]
 r238: [688..689]
 r239: [682..683]
 r240: [680..681]
 r241: [676..677]
 r242: [670..675]
 r243: [672..673]
 r244: [670..671]
 r245: [664..669]
 r246: [666..667]
 r247: [664..665]
 r248: [658..663]
 r249: [660..661]
 r250: [658..659]
 r251: [656..657]
 r252: [648..649]
 r253: [646..647]
 r254: [642..643]
 r255: [640..641]
 r256: [640..641]
 r257: [640..641]
 r258: [638..639]
 r259: [634..635]
 r260: [630..631]
 r261: [628..629]
 r262: [624..625]
 r263: [622..623]
 r264: [622..623]
 r265: [622..623]
 r266: [620..621]
 r267: [616..617]
 r268: [612..615]
 r269: [604..605]
 r270: [602..603]
 r271: [608..609]
 r272: [606..607]
 r273: [598..599]
 r274: [596..597]
 r275: [596..597]
 r276: [594..595]
 r277: [590..591]
 r278: [588..589]
 r279: [584..585]
 r280: [582..583]
 r281: [582..583]
 r282: [582..583]
 r283: [580..581]
 r284: [576..577]
 r285: [572..573]
 r286: [570..571]
 r287: [566..567]
 r288: [564..565]
 r289: [564..565]
 r290: [564..565]
 r291: [562..563]
 r292: [558..559]
 r293: [556..557]
 r294: [554..555]
 r295: [546..547]
 r296: [544..545]
 r297: [540..541]
 r298: [538..539]
 r299: [538..539]
 r300: [538..539]
 r301: [536..537]
 r302: [532..533]
 r303: [528..529]
 r304: [526..527]
 r305: [522..523]
 r306: [520..521]
 r307: [520..521]
 r308: [520..521]
 r309: [518..519]
 r310: [514..515]
 r311: [512..513]
 r312: [510..511]
 r313: [506..509]
 r314: [506..507]
 r315: [504..505]
 r316: [500..501]
 r317: [496..499]
 r318: [496..497]
 r319: [494..495]
 r320: [490..491]
 r321: [486..489]
 r322: [486..487]
 r323: [484..485]
 r324: [480..481]
 r325: [476..477]
 r326: [474..475]
 r327: [474..475]
 r328: [474..475]
 r329: [472..473]
 r330: [468..469]
 r331: [464..465]
 r332: [462..463]
 r333: [456..461]
 r334: [456..459]
 r335: [456..457]
 r336: [452..453]
 r337: [450..451]
 r338: [448..449]
 r339: [438..439]
 r340: [436..437]
 r341: [432..433]
 r342: [428..431]
 r343: [428..431]
 r344: [428..431]
 r345: [428..429]
 r346: [426..427]
 r347: [422..423]
 r348: [420..421]
 r349: [416..417]
 r350: [414..415]
 r351: [410..411]
 r352: [406..409]
 r353: [406..409]
 r354: [406..409]
 r355: [406..407]
 r356: [404..405]
 r357: [400..401]
 r358: [396..397]
 r359: [392..393]
 r360: [390..391]
 r361: [386..387]
 r362: [382..385]
 r363: [382..385]
 r364: [382..385]
 r365: [382..383]
 r366: [380..381]
 r367: [376..377]
 r368: [372..373]
 r369: [370..371]
 r370: [366..367]
 r371: [362..365]
 r372: [362..365]
 r373: [362..365]
 r374: [362..363]
 r375: [360..361]
 r376: [356..357]
 r377: [352..353]
 r378: [348..349]
 r379: [346..347]
 r380: [342..343]
 r381: [338..341]
 r382: [338..341]
 r383: [338..341]
 r384: [338..339]
 r385: [336..337]
 r386: [332..333]
 r387: [328..329]
 r388: [326..327]
 r389: [322..323]
 r390: [318..321]
 r391: [318..321]
 r392: [318..321]
 r393: [318..319]
 r394: [316..317]
 r395: [312..313]
 r396: [308..309]
 r397: [302..303]
 r398: [300..301]
 r399: [300..301]
 r400: [300..301]
 r401: [298..299]
 r402: [294..295]
 r403: [292..293]
 r404: [290..291]
 r405: [288..289]
 r406: [284..285]
 r407: [282..283]
 r408: [282..283]
 r409: [282..283]
 r410: [280..281]
 r411: [276..277]
 r412: [274..275]
 r413: [272..273]
 r414: [270..271]
 r415: [260..261]
 r416: [258..259]
 r417: [254..255]
 r418: [250..253]
 r419: [250..253]
 r420: [250..253]
 r421: [250..251]
 r422: [248..249]
 r423: [244..245]
 r424: [242..243]
 r425: [238..239]
 r426: [236..237]
 r427: [232..233]
 r428: [228..231]
 r429: [228..231]
 r430: [228..231]
 r431: [228..229]
 r432: [226..227]
 r433: [222..223]
 r434: [218..219]
 r435: [216..217]
 r436: [212..213]
 r437: [208..211]
 r438: [208..211]
 r439: [208..211]
 r440: [208..209]
 r441: [206..207]
 r442: [202..203]
 r443: [198..199]
 r444: [196..197]
 r445: [192..193]
 r446: [188..191]
 r447: [188..191]
 r448: [188..191]
 r449: [188..189]
 r450: [186..187]
 r451: [182..183]
 r452: [178..179]
 r453: [176..177]
 r454: [172..173]
 r455: [168..171]
 r456: [168..171]
 r457: [168..171]
 r458: [168..169]
 r459: [166..167]
 r460: [162..163]
 r461: [160..161]
 r462: [156..157]
 r463: [154..155]
 r464: [150..151]
 r465: [146..149]
 r466: [146..149]
 r467: [146..149]
 r468: [146..147]
 r469: [144..145]
 r470: [140..141]
 r471: [136..137]
 r472: [134..135]
 r473: [130..131]
 r474: [126..129]
 r475: [126..129]
 r476: [126..129]
 r477: [126..127]
 r478: [124..125]
 r479: [120..121]
 r480: [116..117]
 r481: [114..115]
 r482: [110..111]
 r483: [106..109]
 r484: [106..109]
 r485: [106..109]
 r486: [106..107]
 r487: [104..105]
 r488: [100..101]
 r489: [96..97]
 r490: [94..95]
 r491: [90..91]
 r492: [88..89]
 r493: [88..89]
 r494: [88..89]
 r495: [86..87]
 r496: [82..83]
 r497: [80..81]
 r498: [78..79]
 r499: [74..75]
 r500: [72..73]
 r501: [68..69]
 r502: [66..67]
 r503: [66..67]
 r504: [66..67]
 r505: [64..65]
 r506: [60..61]
 r507: [58..59]
 r508: [56..57]
 r509: [52..53]
 r510: [50..51]
 r511: [46..47]
 r512: [44..45]
 r513: [44..45]
 r514: [44..45]
 r515: [42..43]
 r516: [38..39]
 r517: [34..35]
 r518: [32..33]
 r519: [28..29]
 r520: [26..27]
 r521: [26..27]
 r522: [26..27]
 r523: [24..25]
 r524: [20..21]
 r525: [18..19]
 r526: [16..17]
 r527: [1..2]
 r528: [1060..1061]
 r529: [1058..1059]
 r530: [1054..1055]
 r531: [1054..1055]
 r532: [1050..1051]
 r533: [1032..1033]
 r534: [1028..1029]
 r535: [1024..1025]
 r536: [1020..1021]
 r537: [1036..1037]
 r538: [1014..1015]
 r539: [1008..1009]
 r540: [7..8]
 r541: [1004..1005]
 r542: [998..999]
 r543: [992..993]
 r544: [986..987]
 r545: [980..981]
 r546: [974..975]
 r547: [968..969]
 r548: [956..957]
 r549: [962..963]
 r550: [952..953]
 r551: [946..947]
 r552: [942..943]
 r553: [942..943]
 r554: [938..939]
 r555: [934..935]
 r556: [928..929]
 r557: [924..925]
 r558: [924..925]
 r559: [920..921]
 r560: [914..915]
 r561: [912..913]
 r562: [910..911]
 r563: [904..905]
 r564: [900..901]
 r565: [900..901]
 r566: [896..897]
 r567: [892..893]
 r568: [886..887]
 r569: [882..883]
 r570: [882..883]
 r571: [878..879]
 r572: [872..873]
 r573: [870..871]
 r574: [864..865]
 r575: [860..861]
 r576: [860..861]
 r577: [856..857]
 r578: [852..853]
 r579: [846..847]
 r580: [842..843]
 r581: [842..843]
 r582: [838..839]
 r583: [830..831]
 r584: [828..829]
 r585: [822..823]
 r586: [818..819]
 r587: [818..819]
 r588: [814..815]
 r589: [810..811]
 r590: [804..805]
 r591: [800..801]
 r592: [800..801]
 r593: [796..797]
 r594: [790..791]
 r595: [788..789]
 r596: [782..783]
 r597: [778..779]
 r598: [778..779]
 r599: [774..775]
 r600: [770..771]
 r601: [764..765]
 r602: [760..761]
 r603: [760..761]
 r604: [756..757]
 r605: [750..751]
 r606: [746..747]
 r607: [744..745]
 r608: [740..741]
 r609: [732..733]
 r610: [722..723]
 r611: [720..721]
 r612: [724..725]
 r613: [718..719]
 r614: [716..717]
 r615: [706..707]
 r617: [704..705]
 r618: [702..703]
 r619: [698..699]
 r620: [696..697]
 r621: [694..695]
 r622: [690..691]
 r623: [686..687]
 r624: [684..685]
 r625: [680..681]
 r626: [678..679]
 r627: [674..675]
 r628: [668..669]
 r629: [662..663]
 r632: [654..655]
 r633: [656..657]
 r634: [652..653]
 r635: [650..651]
 r636: [644..645]
 r637: [640..641]
 r638: [640..641]
 r639: [636..637]
 r640: [632..633]
 r641: [626..627]
 r642: [622..623]
 r643: [622..623]
 r644: [618..619]
 r645: [614..615]
 r646: [612..613]
 r647: [604..605]
 r648: [610..611]
 r649: [608..609]
 r650: [600..601]
 r651: [594..595]
 r652: [592..593]
 r653: [586..587]
 r654: [582..583]
 r655: [582..583]
 r656: [578..579]
 r657: [574..575]
 r658: [568..569]
 r659: [564..565]
 r660: [564..565]
 r661: [560..561]
 r662: [554..555]
 r663: [552..553]
 r664: [552..553]
 r665: [550..551]
 r666: [548..549]
 r667: [542..543]
 r668: [538..539]
 r669: [538..539]
 r670: [534..535]
 r671: [530..531]
 r672: [524..525]
 r673: [520..521]
 r674: [520..521]
 r675: [516..517]
 r676: [510..511]
 r677: [508..509]
 r678: [506..507]
 r679: [506..507]
 r680: [502..503]
 r681: [498..499]
 r682: [496..497]
 r683: [496..497]
 r684: [492..493]
 r685: [488..489]
 r686: [486..487]
 r687: [486..487]
 r688: [482..483]
 r689: [478..479]
 r690: [474..475]
 r691: [474..475]
 r692: [474..475]
 r693: [470..471]
 r694: [466..467]
 r695: [460..461]
 r696: [458..459]
 r697: [454..455]
 r698: [448..449]
 r699: [446..447]
 r700: [446..447]
 r701: [444..445]
 r702: [444..445]
 r703: [442..443]
 r704: [442..443]
 r705: [440..441]
 r706: [434..435]
 r707: [430..431]
 r708: [428..429]
 r709: [424..425]
 r710: [418..419]
 r711: [412..413]
 r712: [408..409]
 r713: [406..407]
 r714: [402..403]
 r715: [398..399]
 r716: [396..397]
 r717: [394..395]
 r718: [388..389]
 r719: [384..385]
 r720: [382..383]
 r721: [378..379]
 r722: [374..375]
 r723: [368..369]
 r724: [364..365]
 r725: [362..363]
 r726: [358..359]
 r727: [354..355]
 r728: [352..353]
 r729: [350..351]
 r730: [344..345]
 r731: [340..341]
 r732: [338..339]
 r733: [334..335]
 r734: [330..331]
 r735: [324..325]
 r736: [320..321]
 r737: [318..319]
 r738: [314..315]
 r739: [310..311]
 r740: [308..309]
 r741: [306..307]
 r742: [306..307]
 r743: [304..305]
 r744: [300..301]
 r745: [300..301]
 r746: [296..297]
 r747: [290..291]
 r748: [288..289]
 r749: [286..287]
 r750: [282..283]
 r751: [282..283]
 r752: [278..279]
 r753: [272..273]
 r754: [270..271]
 r755: [268..269]
 r756: [268..269]
 r757: [266..267]
 r758: [266..267]
 r759: [264..265]
 r760: [264..265]
 r761: [262..263]
 r762: [256..257]
 r763: [252..253]
 r764: [250..251]
 r765: [246..247]
 r766: [240..241]
 r767: [234..235]
 r768: [230..231]
 r769: [228..229]
 r770: [224..225]
 r771: [220..221]
 r772: [214..215]
 r773: [210..211]
 r774: [208..209]
 r775: [204..205]
 r776: [200..201]
 r777: [194..195]
 r778: [190..191]
 r779: [188..189]
 r780: [184..185]
 r781: [180..181]
 r782: [174..175]
 r783: [170..171]
 r784: [168..169]
 r785: [164..165]
 r786: [158..159]
 r787: [152..153]
 r788: [148..149]
 r789: [146..147]
 r790: [142..143]
 r791: [138..139]
 r792: [132..133]
 r793: [128..129]
 r794: [126..127]
 r795: [122..123]
 r796: [118..119]
 r797: [112..113]
 r798: [108..109]
 r799: [106..107]
 r800: [102..103]
 r801: [98..99]
 r802: [92..93]
 r803: [88..89]
 r804: [88..89]
 r805: [84..85]
 r806: [78..79]
 r807: [76..77]
 r808: [70..71]
 r809: [66..67]
 r810: [66..67]
 r811: [62..63]
 r812: [56..57]
 r813: [54..55]
 r814: [48..49]
 r815: [44..45]
 r816: [44..45]
 r817: [40..41]
 r818: [36..37]
 r819: [30..31]
 r820: [26..27]
 r821: [26..27]
 r822: [22..23]
 r823: [16..17]
 r825: [1062..1063]
 r826: [0..0]
 r827: [1034..1035]
 r828: [1006..1007]
 r829: [707..708]
 r830: [710..711]

********** Assignment #2: **********

	 Assigning to 830 (cl=GENERAL_REGS, orig=233, freq=3, tfirst=830, tfreq=3)...
	   Assign 3 to reload r830 (freq=3)

********** Undoing inheritance #2: **********


********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=192, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 1968
changing reg in insn 1959
changing reg in insn 1925
changing reg in insn 1886
changing reg in insn 1847
changing reg in insn 1812
changing reg in insn 1777
changing reg in insn 1742
changing reg in insn 1707
changing reg in insn 1661
changing reg in insn 1626
changing reg in insn 1591
changing reg in insn 1556
changing reg in insn 1495
changing reg in insn 1463
changing reg in insn 1430
changing reg in insn 1395
changing reg in insn 1356
changing reg in insn 1321
changing reg in insn 1282
changing reg in insn 1247
changing reg in insn 1162
changing reg in insn 1135
changing reg in insn 1112
changing reg in insn 1089
changing reg in insn 1062
changing reg in insn 1028
changing reg in insn 985
changing reg in insn 951
changing reg in insn 875
changing reg in insn 841
changing reg in insn 681
changing reg in insn 647
changing reg in insn 608
changing reg in insn 574
changing reg in insn 534
changing reg in insn 500
changing reg in insn 461
changing reg in insn 427
changing reg in insn 387
changing reg in insn 353
changing reg in insn 173
changing reg in insn 50
changing reg in insn 1973
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 31
changing reg in insn 27
changing reg in insn 32
changing reg in insn 28
changing reg in insn 34
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 55
changing reg in insn 58
changing reg in insn 56
changing reg in insn 72
changing reg in insn 75
changing reg in insn 73
changing reg in insn 89
changing reg in insn 92
changing reg in insn 90
changing reg in insn 106
changing reg in insn 109
changing reg in insn 107
changing reg in insn 123
changing reg in insn 124
changing reg in insn 139
changing reg in insn 140
changing reg in insn 146
changing reg in insn 148
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 161
changing reg in insn 163
changing reg in insn 162
changing reg in insn 170
changing reg in insn 172
changing reg in insn 171
changing reg in insn 131
changing reg in insn 133
changing reg in insn 132
changing reg in insn 116
changing reg in insn 118
changing reg in insn 117
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 82
changing reg in insn 84
changing reg in insn 83
changing reg in insn 65
changing reg in insn 67
changing reg in insn 66
changing reg in insn 179
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 188
changing reg in insn 190
changing reg in insn 192
changing reg in insn 193
changing reg in insn 209
changing reg in insn 211
changing reg in insn 213
changing reg in insn 214
changing reg in insn 218
changing reg in insn 220
changing reg in insn 222
changing reg in insn 223
changing reg in insn 239
changing reg in insn 241
changing reg in insn 243
changing reg in insn 244
changing reg in insn 259
changing reg in insn 261
changing reg in insn 263
changing reg in insn 264
changing reg in insn 279
changing reg in insn 281
changing reg in insn 283
changing reg in insn 284
changing reg in insn 288
changing reg in insn 289
changing reg in insn 304
changing reg in insn 306
changing reg in insn 308
changing reg in insn 309
changing reg in insn 325
changing reg in insn 327
changing reg in insn 329
changing reg in insn 330
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 340
changing reg in insn 336
changing reg in insn 341
changing reg in insn 337
changing reg in insn 343
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 359
changing reg in insn 361
changing reg in insn 363
changing reg in insn 364
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 374
changing reg in insn 370
changing reg in insn 375
changing reg in insn 371
changing reg in insn 377
changing reg in insn 381
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 392
changing reg in insn 393
changing reg in insn 393
changing reg in insn 395
changing reg in insn 399
changing reg in insn 401
changing reg in insn 403
changing reg in insn 404
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 414
changing reg in insn 410
changing reg in insn 415
changing reg in insn 411
changing reg in insn 417
changing reg in insn 421
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 433
changing reg in insn 435
changing reg in insn 437
changing reg in insn 438
changing reg in insn 442
changing reg in insn 443
changing reg in insn 443
changing reg in insn 448
changing reg in insn 444
changing reg in insn 449
changing reg in insn 445
changing reg in insn 451
changing reg in insn 455
changing reg in insn 456
changing reg in insn 457
changing reg in insn 458
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 469
changing reg in insn 472
changing reg in insn 474
changing reg in insn 476
changing reg in insn 477
changing reg in insn 481
changing reg in insn 482
changing reg in insn 482
changing reg in insn 487
changing reg in insn 483
changing reg in insn 488
changing reg in insn 484
changing reg in insn 490
changing reg in insn 494
changing reg in insn 495
changing reg in insn 496
changing reg in insn 497
changing reg in insn 506
changing reg in insn 508
changing reg in insn 510
changing reg in insn 511
changing reg in insn 515
changing reg in insn 516
changing reg in insn 516
changing reg in insn 521
changing reg in insn 517
changing reg in insn 522
changing reg in insn 518
changing reg in insn 524
changing reg in insn 528
changing reg in insn 529
changing reg in insn 530
changing reg in insn 531
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 541
changing reg in insn 543
changing reg in insn 546
changing reg in insn 548
changing reg in insn 550
changing reg in insn 551
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 561
changing reg in insn 557
changing reg in insn 562
changing reg in insn 558
changing reg in insn 564
changing reg in insn 568
changing reg in insn 569
changing reg in insn 570
changing reg in insn 571
changing reg in insn 580
changing reg in insn 582
changing reg in insn 584
changing reg in insn 585
changing reg in insn 589
changing reg in insn 590
changing reg in insn 590
changing reg in insn 595
changing reg in insn 591
changing reg in insn 596
changing reg in insn 592
changing reg in insn 598
changing reg in insn 602
changing reg in insn 603
changing reg in insn 604
changing reg in insn 605
changing reg in insn 613
changing reg in insn 614
changing reg in insn 616
changing reg in insn 619
changing reg in insn 621
changing reg in insn 623
changing reg in insn 624
changing reg in insn 628
changing reg in insn 629
changing reg in insn 629
changing reg in insn 634
changing reg in insn 630
changing reg in insn 635
changing reg in insn 631
changing reg in insn 637
changing reg in insn 641
changing reg in insn 642
changing reg in insn 643
changing reg in insn 644
changing reg in insn 653
changing reg in insn 655
changing reg in insn 657
changing reg in insn 658
changing reg in insn 662
changing reg in insn 663
changing reg in insn 663
changing reg in insn 668
changing reg in insn 664
changing reg in insn 669
changing reg in insn 665
changing reg in insn 671
changing reg in insn 675
changing reg in insn 676
changing reg in insn 677
changing reg in insn 678
changing reg in insn 686
changing reg in insn 687
changing reg in insn 687
changing reg in insn 689
changing reg in insn 690
changing reg in insn 691
changing reg in insn 691
changing reg in insn 693
changing reg in insn 695
changing reg in insn 696
changing reg in insn 696
changing reg in insn 698
changing reg in insn 699
changing reg in insn 700
changing reg in insn 701
changing reg in insn 710
changing reg in insn 711
changing reg in insn 721
changing reg in insn 722
changing reg in insn 732
changing reg in insn 733
changing reg in insn 742
changing reg in insn 747
changing reg in insn 747
changing reg in insn 744
changing reg in insn 745
changing reg in insn 745
changing reg in insn 747
changing reg in insn 747
changing reg in insn 748
changing reg in insn 750
changing reg in insn 752
changing reg in insn 753
changing reg in insn 757
changing reg in insn 759
changing reg in insn 766
changing reg in insn 767
changing reg in insn 772
changing reg in insn 773
changing reg in insn 785
changing reg in insn 786
changing reg in insn 788
changing reg in insn 790
changing reg in insn 791
changing reg in insn 791
changing reg in insn 795
changing reg in insn 793
changing reg in insn 794
changing reg in insn 794
changing reg in insn 795
changing reg in insn 795
changing reg in insn 799
changing reg in insn 797
changing reg in insn 798
changing reg in insn 798
changing reg in insn 799
changing reg in insn 799
changing reg in insn 803
changing reg in insn 801
changing reg in insn 802
changing reg in insn 802
changing reg in insn 803
changing reg in insn 803
changing reg in insn 808
changing reg in insn 813
changing reg in insn 815
changing reg in insn 817
changing reg in insn 818
changing reg in insn 822
changing reg in insn 823
changing reg in insn 823
changing reg in insn 828
changing reg in insn 824
changing reg in insn 829
changing reg in insn 825
changing reg in insn 831
changing reg in insn 835
changing reg in insn 836
changing reg in insn 837
changing reg in insn 838
changing reg in insn 847
changing reg in insn 849
changing reg in insn 851
changing reg in insn 852
changing reg in insn 856
changing reg in insn 857
changing reg in insn 857
changing reg in insn 862
changing reg in insn 858
changing reg in insn 863
changing reg in insn 859
changing reg in insn 865
changing reg in insn 869
changing reg in insn 870
changing reg in insn 871
changing reg in insn 872
changing reg in insn 880
changing reg in insn 885
changing reg in insn 882
changing reg in insn 891
changing reg in insn 893
changing reg in insn 893
changing reg in insn 894
changing reg in insn 908
changing reg in insn 910
changing reg in insn 910
changing reg in insn 911
changing reg in insn 915
changing reg in insn 916
changing reg in insn 916
changing reg in insn 918
changing reg in insn 917
changing reg in insn 918
changing reg in insn 918
changing reg in insn 920
changing reg in insn 923
changing reg in insn 925
changing reg in insn 927
changing reg in insn 928
changing reg in insn 932
changing reg in insn 933
changing reg in insn 933
changing reg in insn 938
changing reg in insn 934
changing reg in insn 939
changing reg in insn 935
changing reg in insn 941
changing reg in insn 945
changing reg in insn 946
changing reg in insn 947
changing reg in insn 948
changing reg in insn 957
changing reg in insn 959
changing reg in insn 961
changing reg in insn 962
changing reg in insn 966
changing reg in insn 967
changing reg in insn 967
changing reg in insn 972
changing reg in insn 968
changing reg in insn 973
changing reg in insn 969
changing reg in insn 975
changing reg in insn 979
changing reg in insn 980
changing reg in insn 981
changing reg in insn 982
changing reg in insn 990
changing reg in insn 991
changing reg in insn 991
changing reg in insn 993
changing reg in insn 1000
changing reg in insn 1002
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1010
changing reg in insn 1015
changing reg in insn 1011
changing reg in insn 1016
changing reg in insn 1012
changing reg in insn 1018
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1034
changing reg in insn 1036
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1044
changing reg in insn 1049
changing reg in insn 1045
changing reg in insn 1050
changing reg in insn 1046
changing reg in insn 1052
changing reg in insn 1056
changing reg in insn 1057
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1068
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1079
changing reg in insn 1073
changing reg in insn 1080
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1086
changing reg in insn 1094
changing reg in insn 1102
changing reg in insn 1096
changing reg in insn 1103
changing reg in insn 1106
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1109
changing reg in insn 1117
changing reg in insn 1125
changing reg in insn 1119
changing reg in insn 1126
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1143
changing reg in insn 1149
changing reg in insn 1144
changing reg in insn 1150
changing reg in insn 1145
changing reg in insn 1152
changing reg in insn 1156
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1174
changing reg in insn 1181
changing reg in insn 1178
changing reg in insn 1182
changing reg in insn 1180
changing reg in insn 1183
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1192
changing reg in insn 1194
changing reg in insn 1208
changing reg in insn 1210
changing reg in insn 1212
changing reg in insn 1213
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1218
changing reg in insn 1224
changing reg in insn 1219
changing reg in insn 1225
changing reg in insn 1220
changing reg in insn 1227
changing reg in insn 1222
changing reg in insn 1228
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1236
changing reg in insn 1238
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1253
changing reg in insn 1255
changing reg in insn 1257
changing reg in insn 1258
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1263
changing reg in insn 1269
changing reg in insn 1264
changing reg in insn 1270
changing reg in insn 1265
changing reg in insn 1272
changing reg in insn 1267
changing reg in insn 1273
changing reg in insn 1276
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1288
changing reg in insn 1290
changing reg in insn 1292
changing reg in insn 1294
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1301
changing reg in insn 1302
changing reg in insn 1302
changing reg in insn 1308
changing reg in insn 1303
changing reg in insn 1309
changing reg in insn 1304
changing reg in insn 1311
changing reg in insn 1306
changing reg in insn 1312
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1318
changing reg in insn 1327
changing reg in insn 1329
changing reg in insn 1331
changing reg in insn 1332
changing reg in insn 1336
changing reg in insn 1337
changing reg in insn 1337
changing reg in insn 1343
changing reg in insn 1338
changing reg in insn 1344
changing reg in insn 1339
changing reg in insn 1346
changing reg in insn 1341
changing reg in insn 1347
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1352
changing reg in insn 1353
changing reg in insn 1362
changing reg in insn 1364
changing reg in insn 1366
changing reg in insn 1368
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1375
changing reg in insn 1376
changing reg in insn 1376
changing reg in insn 1382
changing reg in insn 1377
changing reg in insn 1383
changing reg in insn 1378
changing reg in insn 1385
changing reg in insn 1380
changing reg in insn 1386
changing reg in insn 1389
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1401
changing reg in insn 1403
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1410
changing reg in insn 1411
changing reg in insn 1411
changing reg in insn 1417
changing reg in insn 1412
changing reg in insn 1418
changing reg in insn 1413
changing reg in insn 1420
changing reg in insn 1415
changing reg in insn 1421
changing reg in insn 1424
changing reg in insn 1425
changing reg in insn 1426
changing reg in insn 1427
changing reg in insn 1436
changing reg in insn 1438
changing reg in insn 1444
changing reg in insn 1445
changing reg in insn 1445
changing reg in insn 1450
changing reg in insn 1446
changing reg in insn 1451
changing reg in insn 1447
changing reg in insn 1453
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1459
changing reg in insn 1460
changing reg in insn 1468
changing reg in insn 1469
changing reg in insn 1469
changing reg in insn 1471
changing reg in insn 1471
changing reg in insn 1473
changing reg in insn 1476
changing reg in insn 1477
changing reg in insn 1477
changing reg in insn 1482
changing reg in insn 1478
changing reg in insn 1483
changing reg in insn 1479
changing reg in insn 1485
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1500
changing reg in insn 1501
changing reg in insn 1501
changing reg in insn 1503
changing reg in insn 1503
changing reg in insn 1505
changing reg in insn 1517
changing reg in insn 1519
changing reg in insn 1521
changing reg in insn 1522
changing reg in insn 1526
changing reg in insn 1527
changing reg in insn 1527
changing reg in insn 1533
changing reg in insn 1528
changing reg in insn 1534
changing reg in insn 1529
changing reg in insn 1536
changing reg in insn 1531
changing reg in insn 1537
changing reg in insn 1540
changing reg in insn 1541
changing reg in insn 1545
changing reg in insn 1547
changing reg in insn 1549
changing reg in insn 1550
changing reg in insn 1562
changing reg in insn 1564
changing reg in insn 1566
changing reg in insn 1567
changing reg in insn 1571
changing reg in insn 1572
changing reg in insn 1572
changing reg in insn 1578
changing reg in insn 1573
changing reg in insn 1579
changing reg in insn 1574
changing reg in insn 1581
changing reg in insn 1576
changing reg in insn 1582
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1588
changing reg in insn 1597
changing reg in insn 1599
changing reg in insn 1601
changing reg in insn 1602
changing reg in insn 1606
changing reg in insn 1607
changing reg in insn 1607
changing reg in insn 1613
changing reg in insn 1608
changing reg in insn 1614
changing reg in insn 1609
changing reg in insn 1616
changing reg in insn 1611
changing reg in insn 1617
changing reg in insn 1620
changing reg in insn 1621
changing reg in insn 1622
changing reg in insn 1623
changing reg in insn 1632
changing reg in insn 1634
changing reg in insn 1636
changing reg in insn 1637
changing reg in insn 1641
changing reg in insn 1642
changing reg in insn 1642
changing reg in insn 1648
changing reg in insn 1643
changing reg in insn 1649
changing reg in insn 1644
changing reg in insn 1651
changing reg in insn 1646
changing reg in insn 1652
changing reg in insn 1655
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1658
changing reg in insn 1668
changing reg in insn 1670
changing reg in insn 1672
changing reg in insn 1673
changing reg in insn 1677
changing reg in insn 1678
changing reg in insn 1678
changing reg in insn 1684
changing reg in insn 1679
changing reg in insn 1685
changing reg in insn 1680
changing reg in insn 1687
changing reg in insn 1682
changing reg in insn 1688
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1696
changing reg in insn 1698
changing reg in insn 1700
changing reg in insn 1701
changing reg in insn 1713
changing reg in insn 1715
changing reg in insn 1717
changing reg in insn 1718
changing reg in insn 1722
changing reg in insn 1723
changing reg in insn 1723
changing reg in insn 1729
changing reg in insn 1724
changing reg in insn 1730
changing reg in insn 1725
changing reg in insn 1732
changing reg in insn 1727
changing reg in insn 1733
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1739
changing reg in insn 1748
changing reg in insn 1750
changing reg in insn 1752
changing reg in insn 1753
changing reg in insn 1757
changing reg in insn 1758
changing reg in insn 1758
changing reg in insn 1764
changing reg in insn 1759
changing reg in insn 1765
changing reg in insn 1760
changing reg in insn 1767
changing reg in insn 1762
changing reg in insn 1768
changing reg in insn 1771
changing reg in insn 1772
changing reg in insn 1773
changing reg in insn 1774
changing reg in insn 1783
changing reg in insn 1785
changing reg in insn 1787
changing reg in insn 1788
changing reg in insn 1792
changing reg in insn 1793
changing reg in insn 1793
changing reg in insn 1799
changing reg in insn 1794
changing reg in insn 1800
changing reg in insn 1795
changing reg in insn 1802
changing reg in insn 1797
changing reg in insn 1803
changing reg in insn 1806
changing reg in insn 1807
changing reg in insn 1808
changing reg in insn 1809
changing reg in insn 1819
changing reg in insn 1821
changing reg in insn 1823
changing reg in insn 1824
changing reg in insn 1828
changing reg in insn 1829
changing reg in insn 1829
changing reg in insn 1834
changing reg in insn 1830
changing reg in insn 1835
changing reg in insn 1831
changing reg in insn 1837
changing reg in insn 1841
changing reg in insn 1842
changing reg in insn 1843
changing reg in insn 1844
changing reg in insn 1852
changing reg in insn 1853
changing reg in insn 1853
changing reg in insn 1855
changing reg in insn 1858
changing reg in insn 1860
changing reg in insn 1862
changing reg in insn 1863
changing reg in insn 1867
changing reg in insn 1868
changing reg in insn 1868
changing reg in insn 1873
changing reg in insn 1869
changing reg in insn 1874
changing reg in insn 1870
changing reg in insn 1876
changing reg in insn 1880
changing reg in insn 1881
changing reg in insn 1882
changing reg in insn 1883
changing reg in insn 1891
changing reg in insn 1892
changing reg in insn 1892
changing reg in insn 1894
changing reg in insn 1897
changing reg in insn 1899
changing reg in insn 1901
changing reg in insn 1902
changing reg in insn 1906
changing reg in insn 1907
changing reg in insn 1907
changing reg in insn 1912
changing reg in insn 1908
changing reg in insn 1913
changing reg in insn 1909
changing reg in insn 1915
changing reg in insn 1919
changing reg in insn 1920
changing reg in insn 1921
changing reg in insn 1922
changing reg in insn 1931
changing reg in insn 1933
changing reg in insn 1935
changing reg in insn 1936
changing reg in insn 1940
changing reg in insn 1941
changing reg in insn 1941
changing reg in insn 1946
changing reg in insn 1942
changing reg in insn 1947
changing reg in insn 1943
changing reg in insn 1949
changing reg in insn 1953
changing reg in insn 1954
changing reg in insn 1955
changing reg in insn 1956
changing reg in insn 1964
changing reg in insn 1965
changing reg in insn 1965
changing reg in insn 1967
changing reg in insn 1973
changing reg in insn 1977
changing reg in insn 13
changing reg in insn 14
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 35
changing reg in insn 30
changing reg in insn 36
changing reg in insn 39
changing reg in insn 64
changing reg in insn 65
changing reg in insn 81
changing reg in insn 82
changing reg in insn 98
changing reg in insn 99
changing reg in insn 115
changing reg in insn 116
changing reg in insn 130
changing reg in insn 131
changing reg in insn 147
changing reg in insn 148
changing reg in insn 160
changing reg in insn 161
changing reg in insn 169
changing reg in insn 170
changing reg in insn 178
changing reg in insn 179
changing reg in insn 187
changing reg in insn 188
changing reg in insn 208
changing reg in insn 209
changing reg in insn 217
changing reg in insn 218
changing reg in insn 238
changing reg in insn 239
changing reg in insn 258
changing reg in insn 259
changing reg in insn 278
changing reg in insn 279
changing reg in insn 287
changing reg in insn 288
changing reg in insn 303
changing reg in insn 304
changing reg in insn 324
changing reg in insn 325
changing reg in insn 333
changing reg in insn 334
changing reg in insn 338
changing reg in insn 344
changing reg in insn 339
changing reg in insn 345
changing reg in insn 348
changing reg in insn 358
changing reg in insn 359
changing reg in insn 367
changing reg in insn 368
changing reg in insn 372
changing reg in insn 378
changing reg in insn 373
changing reg in insn 379
changing reg in insn 382
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 397
changing reg in insn 398
changing reg in insn 399
changing reg in insn 407
changing reg in insn 408
changing reg in insn 412
changing reg in insn 418
changing reg in insn 413
changing reg in insn 419
changing reg in insn 422
changing reg in insn 432
changing reg in insn 433
changing reg in insn 441
changing reg in insn 442
changing reg in insn 446
changing reg in insn 452
changing reg in insn 447
changing reg in insn 453
changing reg in insn 456
changing reg in insn 468
changing reg in insn 469
changing reg in insn 471
changing reg in insn 472
changing reg in insn 480
changing reg in insn 481
changing reg in insn 485
changing reg in insn 491
changing reg in insn 486
changing reg in insn 492
changing reg in insn 495
changing reg in insn 505
changing reg in insn 506
changing reg in insn 514
changing reg in insn 515
changing reg in insn 519
changing reg in insn 525
changing reg in insn 520
changing reg in insn 526
changing reg in insn 529
changing reg in insn 542
changing reg in insn 543
changing reg in insn 545
changing reg in insn 546
changing reg in insn 554
changing reg in insn 555
changing reg in insn 559
changing reg in insn 565
changing reg in insn 560
changing reg in insn 566
changing reg in insn 569
changing reg in insn 579
changing reg in insn 580
changing reg in insn 588
changing reg in insn 589
changing reg in insn 593
changing reg in insn 599
changing reg in insn 594
changing reg in insn 600
changing reg in insn 603
changing reg in insn 615
changing reg in insn 616
changing reg in insn 618
changing reg in insn 619
changing reg in insn 627
changing reg in insn 628
changing reg in insn 632
changing reg in insn 638
changing reg in insn 633
changing reg in insn 639
changing reg in insn 642
changing reg in insn 652
changing reg in insn 653
changing reg in insn 661
changing reg in insn 662
changing reg in insn 666
changing reg in insn 672
changing reg in insn 667
changing reg in insn 673
changing reg in insn 676
changing reg in insn 688
changing reg in insn 689
changing reg in insn 692
changing reg in insn 693
changing reg in insn 694
changing reg in insn 695
changing reg in insn 697
changing reg in insn 698
changing reg in insn 705
changing reg in insn 706
changing reg in insn 714
changing reg in insn 715
changing reg in insn 725
changing reg in insn 726
changing reg in insn 736
changing reg in insn 737
changing reg in insn 741
changing reg in insn 742
changing reg in insn 743
changing reg in insn 744
changing reg in insn 747
changing reg in insn 748
changing reg in insn 749
changing reg in insn 750
changing reg in insn 751
changing reg in insn 752
changing reg in insn 758
changing reg in insn 759
changing reg in insn 760
changing reg in insn 761
changing reg in insn 765
changing reg in insn 766
changing reg in insn 771
changing reg in insn 772
changing reg in insn 777
changing reg in insn 780
changing reg in insn 782
changing reg in insn 783
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 790
changing reg in insn 792
changing reg in insn 793
changing reg in insn 796
changing reg in insn 797
changing reg in insn 800
changing reg in insn 801
changing reg in insn 808
changing reg in insn 809
changing reg in insn 807
changing reg in insn 810
changing reg in insn 811
changing reg in insn 812
changing reg in insn 813
changing reg in insn 821
changing reg in insn 822
changing reg in insn 826
changing reg in insn 832
changing reg in insn 827
changing reg in insn 833
changing reg in insn 836
changing reg in insn 846
changing reg in insn 847
changing reg in insn 855
changing reg in insn 856
changing reg in insn 860
changing reg in insn 866
changing reg in insn 861
changing reg in insn 867
changing reg in insn 870
changing reg in insn 881
changing reg in insn 882
changing reg in insn 884
changing reg in insn 885
changing reg in insn 892
changing reg in insn 893
changing reg in insn 903
changing reg in insn 904
changing reg in insn 909
changing reg in insn 910
changing reg in insn 914
changing reg in insn 915
changing reg in insn 919
changing reg in insn 920
changing reg in insn 922
changing reg in insn 923
changing reg in insn 931
changing reg in insn 932
changing reg in insn 936
changing reg in insn 942
changing reg in insn 937
changing reg in insn 943
changing reg in insn 946
changing reg in insn 956
changing reg in insn 957
changing reg in insn 965
changing reg in insn 966
changing reg in insn 970
changing reg in insn 976
changing reg in insn 971
changing reg in insn 977
changing reg in insn 980
changing reg in insn 992
changing reg in insn 993
changing reg in insn 994
changing reg in insn 996
changing reg in insn 995
changing reg in insn 996
changing reg in insn 997
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1013
changing reg in insn 1019
changing reg in insn 1014
changing reg in insn 1020
changing reg in insn 1023
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1047
changing reg in insn 1053
changing reg in insn 1048
changing reg in insn 1054
changing reg in insn 1057
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1078
changing reg in insn 1075
changing reg in insn 1081
changing reg in insn 1084
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1097
changing reg in insn 1101
changing reg in insn 1098
changing reg in insn 1104
changing reg in insn 1107
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1124
changing reg in insn 1121
changing reg in insn 1127
changing reg in insn 1130
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1146
changing reg in insn 1151
changing reg in insn 1147
changing reg in insn 1153
changing reg in insn 1148
changing reg in insn 1154
changing reg in insn 1157
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 1175
changing reg in insn 1176
changing reg in insn 1179
changing reg in insn 1180
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1197
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1200
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1203
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1223
changing reg in insn 1229
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1252
changing reg in insn 1253
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1268
changing reg in insn 1274
changing reg in insn 1277
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1305
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1313
changing reg in insn 1316
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1335
changing reg in insn 1336
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1348
changing reg in insn 1351
changing reg in insn 1361
changing reg in insn 1362
changing reg in insn 1363
changing reg in insn 1364
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1374
changing reg in insn 1375
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1387
changing reg in insn 1390
changing reg in insn 1400
changing reg in insn 1401
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1422
changing reg in insn 1425
changing reg in insn 1435
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1438
changing reg in insn 1439
changing reg in insn 1441
changing reg in insn 1440
changing reg in insn 1441
changing reg in insn 1443
changing reg in insn 1444
changing reg in insn 1448
changing reg in insn 1454
changing reg in insn 1449
changing reg in insn 1455
changing reg in insn 1458
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1472
changing reg in insn 1473
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1480
changing reg in insn 1486
changing reg in insn 1481
changing reg in insn 1487
changing reg in insn 1490
changing reg in insn 1502
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1505
changing reg in insn 1506
changing reg in insn 1508
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1511
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1512
changing reg in insn 1514
changing reg in insn 1513
changing reg in insn 1514
changing reg in insn 1516
changing reg in insn 1517
changing reg in insn 1525
changing reg in insn 1526
changing reg in insn 1530
changing reg in insn 1531
changing reg in insn 1532
changing reg in insn 1538
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1561
changing reg in insn 1562
changing reg in insn 1570
changing reg in insn 1571
changing reg in insn 1575
changing reg in insn 1576
changing reg in insn 1577
changing reg in insn 1583
changing reg in insn 1586
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1605
changing reg in insn 1606
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1612
changing reg in insn 1618
changing reg in insn 1621
changing reg in insn 1631
changing reg in insn 1632
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1645
changing reg in insn 1646
changing reg in insn 1647
changing reg in insn 1653
changing reg in insn 1656
changing reg in insn 1667
changing reg in insn 1668
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1681
changing reg in insn 1682
changing reg in insn 1683
changing reg in insn 1689
changing reg in insn 1695
changing reg in insn 1696
changing reg in insn 1712
changing reg in insn 1713
changing reg in insn 1721
changing reg in insn 1722
changing reg in insn 1726
changing reg in insn 1727
changing reg in insn 1728
changing reg in insn 1734
changing reg in insn 1737
changing reg in insn 1747
changing reg in insn 1748
changing reg in insn 1756
changing reg in insn 1757
changing reg in insn 1761
changing reg in insn 1762
changing reg in insn 1763
changing reg in insn 1769
changing reg in insn 1772
changing reg in insn 1782
changing reg in insn 1783
changing reg in insn 1791
changing reg in insn 1792
changing reg in insn 1796
changing reg in insn 1797
changing reg in insn 1798
changing reg in insn 1804
changing reg in insn 1807
changing reg in insn 1818
changing reg in insn 1819
changing reg in insn 1827
changing reg in insn 1828
changing reg in insn 1832
changing reg in insn 1838
changing reg in insn 1833
changing reg in insn 1839
changing reg in insn 1842
changing reg in insn 1854
changing reg in insn 1855
changing reg in insn 1857
changing reg in insn 1858
changing reg in insn 1866
changing reg in insn 1867
changing reg in insn 1871
changing reg in insn 1877
changing reg in insn 1872
changing reg in insn 1878
changing reg in insn 1881
changing reg in insn 1893
changing reg in insn 1894
changing reg in insn 1896
changing reg in insn 1897
changing reg in insn 1905
changing reg in insn 1906
changing reg in insn 1910
changing reg in insn 1916
changing reg in insn 1911
changing reg in insn 1917
changing reg in insn 1920
changing reg in insn 1930
changing reg in insn 1931
changing reg in insn 1939
changing reg in insn 1940
changing reg in insn 1944
changing reg in insn 1950
changing reg in insn 1945
changing reg in insn 1951
changing reg in insn 1954
changing reg in insn 1966
changing reg in insn 1967
changing reg in insn 9
changing reg in insn 1978
deleting insn with uid = 35.
deleting insn with uid = 46.
deleting insn with uid = 156.
deleting insn with uid = 344.
deleting insn with uid = 378.
deleting insn with uid = 418.
deleting insn with uid = 452.
deleting insn with uid = 491.
deleting insn with uid = 525.
deleting insn with uid = 565.
deleting insn with uid = 599.
deleting insn with uid = 638.
deleting insn with uid = 672.
deleting insn with uid = 2134.
deleting insn with uid = 832.
deleting insn with uid = 866.
deleting insn with uid = 942.
deleting insn with uid = 976.
deleting insn with uid = 1019.
deleting insn with uid = 1053.
deleting insn with uid = 1080.
deleting insn with uid = 1103.
deleting insn with uid = 1126.
deleting insn with uid = 1150.
deleting insn with uid = 1153.
deleting insn with uid = 1228.
deleting insn with uid = 1273.
deleting insn with uid = 1312.
deleting insn with uid = 1347.
deleting insn with uid = 1386.
deleting insn with uid = 1421.
deleting insn with uid = 1454.
deleting insn with uid = 1486.
deleting insn with uid = 1537.
deleting insn with uid = 1582.
deleting insn with uid = 1617.
deleting insn with uid = 1652.
deleting insn with uid = 1688.
deleting insn with uid = 1733.
deleting insn with uid = 1768.
deleting insn with uid = 1803.
deleting insn with uid = 1838.
deleting insn with uid = 1877.
deleting insn with uid = 1916.
deleting insn with uid = 1950.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 159.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 212.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 262.
verify found no changes in insn with uid = 282.
verify found no changes in insn with uid = 292.
verify found no changes in insn with uid = 307.
verify found no changes in insn with uid = 320.
verify found no changes in insn with uid = 328.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 380.
verify found no changes in insn with uid = 402.
verify found no changes in insn with uid = 420.
verify found no changes in insn with uid = 436.
verify found no changes in insn with uid = 454.
verify found no changes in insn with uid = 475.
verify found no changes in insn with uid = 493.
verify found no changes in insn with uid = 509.
verify found no changes in insn with uid = 527.
verify found no changes in insn with uid = 549.
verify found no changes in insn with uid = 567.
verify found no changes in insn with uid = 583.
verify found no changes in insn with uid = 601.
verify found no changes in insn with uid = 622.
verify found no changes in insn with uid = 640.
verify found no changes in insn with uid = 656.
verify found no changes in insn with uid = 674.
verify found no changes in insn with uid = 704.
verify found no changes in insn with uid = 709.
verify found no changes in insn with uid = 756.
verify found no changes in insn with uid = 764.
verify found no changes in insn with uid = 770.
verify found no changes in insn with uid = 776.
verify found no changes in insn with uid = 781.
verify found no changes in insn with uid = 784.
verify found no changes in insn with uid = 816.
verify found no changes in insn with uid = 834.
verify found no changes in insn with uid = 850.
verify found no changes in insn with uid = 868.
verify found no changes in insn with uid = 900.
verify found no changes in insn with uid = 902.
verify found no changes in insn with uid = 907.
verify found no changes in insn with uid = 926.
verify found no changes in insn with uid = 944.
verify found no changes in insn with uid = 960.
verify found no changes in insn with uid = 978.
verify found no changes in insn with uid = 1003.
verify found no changes in insn with uid = 1021.
verify found no changes in insn with uid = 1037.
verify found no changes in insn with uid = 1055.
verify found no changes in insn with uid = 1082.
verify found no changes in insn with uid = 1105.
verify found no changes in insn with uid = 1128.
verify found no changes in insn with uid = 1155.
verify found no changes in insn with uid = 1169.
verify found no changes in insn with uid = 1172.
verify found no changes in insn with uid = 1177.
verify found no changes in insn with uid = 1184.
verify found no changes in insn with uid = 1187.
verify found no changes in insn with uid = 1190.
verify found no changes in insn with uid = 1211.
verify found no changes in insn with uid = 1230.
verify found no changes in insn with uid = 1239.
verify found no changes in insn with uid = 1256.
verify found no changes in insn with uid = 1275.
verify found no changes in insn with uid = 1295.
verify found no changes in insn with uid = 1314.
verify found no changes in insn with uid = 1330.
verify found no changes in insn with uid = 1349.
verify found no changes in insn with uid = 1369.
verify found no changes in insn with uid = 1388.
verify found no changes in insn with uid = 1404.
verify found no changes in insn with uid = 1423.
verify found no changes in insn with uid = 1456.
verify found no changes in insn with uid = 1488.
verify found no changes in insn with uid = 1520.
verify found no changes in insn with uid = 1539.
verify found no changes in insn with uid = 1548.
verify found no changes in insn with uid = 1565.
verify found no changes in insn with uid = 1584.
verify found no changes in insn with uid = 1600.
verify found no changes in insn with uid = 1619.
verify found no changes in insn with uid = 1635.
verify found no changes in insn with uid = 1654.
verify found no changes in insn with uid = 1671.
verify found no changes in insn with uid = 1690.
verify found no changes in insn with uid = 1699.
verify found no changes in insn with uid = 1716.
verify found no changes in insn with uid = 1735.
verify found no changes in insn with uid = 1751.
verify found no changes in insn with uid = 1770.
verify found no changes in insn with uid = 1786.
verify found no changes in insn with uid = 1805.
verify found no changes in insn with uid = 1822.
verify found no changes in insn with uid = 1840.
verify found no changes in insn with uid = 1861.
verify found no changes in insn with uid = 1879.
verify found no changes in insn with uid = 1900.
verify found no changes in insn with uid = 1918.
verify found no changes in insn with uid = 1934.
verify found no changes in insn with uid = 1952.
verify found no changes in insn with uid = 1980.


int read_procpar(Procpar_info*, char*, FILE*, bool*, InFile_struct*, Data_file_header*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 37[r8] 38[r9]
;;  ref usage 	r0={662d,611u} r1={213d,104u,1e} r2={189d,81u} r3={6d,6u} r4={204d,96u} r5={257d,149u} r6={1d,528u} r7={1d,277u} r8={108d} r9={108d} r10={108d} r11={108d} r12={108d} r13={108d} r14={108d} r15={108d} r17={362d,103u} r18={108d} r19={108d} r20={1d,1u,72e} r21={152d,48u} r22={117d,8u} r23={109d} r24={109d} r25={109d} r26={109d} r27={109d} r28={109d} r29={108d} r30={108d} r31={108d} r32={108d} r33={108d} r34={108d} r35={108d} r36={108d} r37={150d,42u} r38={150d,42u} r39={108d} r40={108d} r45={108d} r46={108d} r47={108d} r48={108d} r49={108d} r50={108d} r51={108d} r52={108d} r53={108d} r54={108d} r55={108d} r56={108d} r57={108d} r58={108d} r59={108d} r60={108d} r61={108d} r62={108d} r63={108d} r64={108d} r65={108d} r66={108d} r67={108d} r68={108d} r69={108d} r70={108d} r71={108d} r72={108d} r73={108d} r74={108d} r75={108d} r76={108d} r77={108d} r78={108d} r79={108d} r80={108d} 
;;    total ref usage 11336{9167d,2096u,73e} in 1623{1515 regular + 108 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 93 528 529 530 531 532
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])
        (reg:DI 5 di [ procpar_info ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 procpar_string+0 S8 A64])
        (reg:DI 4 si [ procpar_string ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])
        (reg:DI 1 dx [ in_file ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])
        (reg:DI 2 cx [ swap_bytes ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])
        (reg:DI 37 r8 [ infile_struct ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])
        (reg:DI 38 r9 [ main_header ])) ge2fitman_read_procpar.cpp:27 89 {*movdi_internal}
     (nil))
(note 8 7 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.25388+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [825])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:27 986 {stack_tls_protect_set_di}
     (nil))
(insn 12 9 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 date_stamp+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:29 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SF 21 xmm0 [528])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:30 129 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])
        (reg:SF 21 xmm0 [528])) ge2fitman_read_procpar.cpp:30 129 {*movsf_internal}
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 calc_filesize+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:31 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:33 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:34 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:35 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:36 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:37 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:38 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:40 89 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 ver+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:53 90 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [529])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:61 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:QI 0 ax [orig:88 D.25373 ] [88])
        (mem:QI (reg/f:DI 0 ax [529]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:61 93 {*movqi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SI 1 dx [orig:89 D.25372 ] [89])
        (zero_extend:SI (reg:QI 0 ax [orig:88 D.25373 ] [88]))) ge2fitman_read_procpar.cpp:61 138 {*zero_extendqisi2}
     (nil))
(insn 27 26 28 2 (set (reg:SI 2 cx [orig:90 D.25372 ] [90])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 5 di [orig:91 D.25372 ] [91])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 4 si [530])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:61 218 {*adddi_1}
     (nil))
(insn 30 29 31 2 (set (reg:DI 0 ax [531])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:61 89 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:89 D.25372 ] [89])) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:90 D.25372 ] [90])) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:DI 2 cx)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:61 89 {*movdi_internal}
     (nil))
(insn 34 33 36 2 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:91 D.25372 ] [91])) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 36 34 37 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [531])) ge2fitman_read_procpar.cpp:61 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:61 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 38 37 39 2 (set (reg:SI 0 ax [orig:92 D.25372 ] [92])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:61 90 {*movsi_internal}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:SI 0 ax [532])
                (lshiftrt:SI (reg:SI 0 ax [orig:92 D.25372 ] [92])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:61 544 {*lshrsi3_1}
     (nil))
(insn 40 39 41 2 (set (reg:QI 0 ax [orig:93 D.25373 ] [93])
        (reg:QI 0 ax [532])) ge2fitman_read_procpar.cpp:61 93 {*movqi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:93 D.25373 ] [93])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:61 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 42 41 43 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) ge2fitman_read_procpar.cpp:61 612 {*jcc_1}
     (nil)
 -> 53)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95
(note 43 42 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg:SF 21 xmm0 [orig:94 D.25374 ] [94])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:65 129 {*movsf_internal}
     (nil))
(insn 45 44 47 3 (set (reg:DF 21 xmm0 [orig:95 D.25375 ] [95])
        (float_extend:DF (reg:SF 21 xmm0 [orig:94 D.25374 ] [94]))) ge2fitman_read_procpar.cpp:65 152 {*extendsfdf2_sse}
     (nil))
(insn 47 45 48 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f5c1040f480 *.LC1>)) ge2fitman_read_procpar.cpp:65 89 {*movdi_internal}
     (nil))
(insn 48 47 49 3 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:65 93 {*movqi_internal}
     (nil))
(call_insn 49 48 50 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:65 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 50 49 2016 3 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:67 90 {*movsi_internal}
     (nil))
(jump_insn 2016 50 2017 3 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:67 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2017 2016 53)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96
(code_label 53 2017 54 4 2 "" [1 uses])
(note 54 53 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 4 (set (reg:SF 21 xmm0 [orig:96 D.25374 ] [96])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:71 129 {*movsf_internal}
     (nil))
(insn 56 55 57 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:96 D.25374 ] [96])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:71 55 {*cmpiusf_sse}
     (nil))
(jump_insn 57 56 1985 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ge2fitman_read_procpar.cpp:71 612 {*jcc_1}
     (nil)
 -> 70)
;;  succ:       7
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
(note 1985 57 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 1985 59 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:96 D.25374 ] [96])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:71 55 {*cmpiusf_sse}
     (nil))
(jump_insn 59 58 63 5 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) ge2fitman_read_procpar.cpp:71 612 {*jcc_1}
     (nil)
 -> 70)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 111 533
(note 63 59 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 6 (set (reg/f:DI 0 ax [533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:73 89 {*movdi_internal}
     (nil))
(insn 65 64 66 6 (parallel [
            (set (reg/f:DI 0 ax [orig:111 D.25376 ] [111])
                (plus:DI (reg/f:DI 0 ax [533])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:73 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 66 65 67 6 (set (mem:HI (reg/f:DI 0 ax [orig:111 D.25376 ] [111]) [0 MEM[(void *)_90]+0 S2 A8])
        (const_int 14384 [0x3830])) ge2fitman_read_procpar.cpp:73 92 {*movhi_internal}
     (nil))
(insn 67 66 2018 6 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:111 D.25376 ] [111])
                (const_int 2 [0x2])) [0 MEM[(void *)_90]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:73 93 {*movqi_internal}
     (nil))
(jump_insn 2018 67 2019 6 (set (pc)
        (label_ref 176)) 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2019 2018 70)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97
(code_label 70 2019 71 7 4 "" [2 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg:SF 21 xmm0 [orig:97 D.25374 ] [97])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:74 129 {*movsf_internal}
     (nil))
(insn 73 72 74 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:97 D.25374 ] [97])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:74 55 {*cmpiusf_sse}
     (nil))
(jump_insn 74 73 1988 7 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) ge2fitman_read_procpar.cpp:74 612 {*jcc_1}
     (nil)
 -> 87)
;;  succ:       10
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
(note 1988 74 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 1988 76 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:97 D.25374 ] [97])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:74 55 {*cmpiusf_sse}
     (nil))
(jump_insn 76 75 80 8 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 87)
            (pc))) ge2fitman_read_procpar.cpp:74 612 {*jcc_1}
     (nil)
 -> 87)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 534
(note 80 76 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/f:DI 0 ax [534])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:76 89 {*movdi_internal}
     (nil))
(insn 82 81 83 9 (parallel [
            (set (reg/f:DI 0 ax [orig:110 D.25376 ] [110])
                (plus:DI (reg/f:DI 0 ax [534])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:76 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 83 82 84 9 (set (mem:HI (reg/f:DI 0 ax [orig:110 D.25376 ] [110]) [0 MEM[(void *)_88]+0 S2 A8])
        (const_int 14640 [0x3930])) ge2fitman_read_procpar.cpp:76 92 {*movhi_internal}
     (nil))
(insn 84 83 2020 9 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:110 D.25376 ] [110])
                (const_int 2 [0x2])) [0 MEM[(void *)_88]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:76 93 {*movqi_internal}
     (nil))
(jump_insn 2020 84 2021 9 (set (pc)
        (label_ref 176)) 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2021 2020 87)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 98
(code_label 87 2021 88 10 7 "" [2 uses])
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:SF 21 xmm0 [orig:98 D.25374 ] [98])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:77 129 {*movsf_internal}
     (nil))
(insn 90 89 91 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:98 D.25374 ] [98])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:77 55 {*cmpiusf_sse}
     (nil))
(jump_insn 91 90 1991 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) ge2fitman_read_procpar.cpp:77 612 {*jcc_1}
     (nil)
 -> 104)
;;  succ:       13
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 17 [flags]
(note 1991 91 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 1991 93 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:98 D.25374 ] [98])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:77 55 {*cmpiusf_sse}
     (nil))
(jump_insn 93 92 97 11 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) ge2fitman_read_procpar.cpp:77 612 {*jcc_1}
     (nil)
 -> 104)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 535
(note 97 93 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 12 (set (reg/f:DI 0 ax [535])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:79 89 {*movdi_internal}
     (nil))
(insn 99 98 100 12 (parallel [
            (set (reg/f:DI 0 ax [orig:109 D.25376 ] [109])
                (plus:DI (reg/f:DI 0 ax [535])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:79 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 100 99 101 12 (set (mem:HI (reg/f:DI 0 ax [orig:109 D.25376 ] [109]) [0 MEM[(void *)_86]+0 S2 A8])
        (const_int 12593 [0x3131])) ge2fitman_read_procpar.cpp:79 92 {*movhi_internal}
     (nil))
(insn 101 100 2022 12 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:109 D.25376 ] [109])
                (const_int 2 [0x2])) [0 MEM[(void *)_86]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:79 93 {*movqi_internal}
     (nil))
(jump_insn 2022 101 2023 12 (set (pc)
        (label_ref 176)) 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2023 2022 104)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99
(code_label 104 2023 105 13 9 "" [2 uses])
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 13 (set (reg:SF 21 xmm0 [orig:99 D.25374 ] [99])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:80 129 {*movsf_internal}
     (nil))
(insn 107 106 108 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:99 D.25374 ] [99])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:80 55 {*cmpiusf_sse}
     (nil))
(jump_insn 108 107 1994 13 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) ge2fitman_read_procpar.cpp:80 612 {*jcc_1}
     (nil)
 -> 121)
;;  succ:       16
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 17 [flags]
(note 1994 108 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 109 1994 110 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:99 D.25374 ] [99])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:80 55 {*cmpiusf_sse}
     (nil))
(jump_insn 110 109 114 14 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 121)
            (pc))) ge2fitman_read_procpar.cpp:80 612 {*jcc_1}
     (nil)
 -> 121)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 108 536
(note 114 110 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 15 (set (reg/f:DI 0 ax [536])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:82 89 {*movdi_internal}
     (nil))
(insn 116 115 117 15 (parallel [
            (set (reg/f:DI 0 ax [orig:108 D.25376 ] [108])
                (plus:DI (reg/f:DI 0 ax [536])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:82 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 117 116 118 15 (set (mem:HI (reg/f:DI 0 ax [orig:108 D.25376 ] [108]) [0 MEM[(void *)_84]+0 S2 A8])
        (const_int 12849 [0x3231])) ge2fitman_read_procpar.cpp:82 92 {*movhi_internal}
     (nil))
(insn 118 117 2024 15 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:108 D.25376 ] [108])
                (const_int 2 [0x2])) [0 MEM[(void *)_84]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:82 93 {*movqi_internal}
     (nil))
(jump_insn 2024 118 2025 15 (set (pc)
        (label_ref 176)) 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2025 2024 121)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100
(code_label 121 2025 122 16 11 "" [2 uses])
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 16 (set (reg:SF 21 xmm0 [orig:100 D.25374 ] [100])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:85 129 {*movsf_internal}
     (nil))
(insn 124 123 125 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:100 D.25374 ] [100])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:85 55 {*cmpiusf_sse}
     (nil))
(jump_insn 125 124 129 16 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2026)
            (pc))) ge2fitman_read_procpar.cpp:85 612 {*jcc_1}
     (nil)
 -> 2026)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107 537
(note 129 125 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 17 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 131 130 132 17 (parallel [
            (set (reg/f:DI 0 ax [orig:107 D.25376 ] [107])
                (plus:DI (reg/f:DI 0 ax [537])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:89 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 132 131 2131 17 (set (reg:DI 3 bx [827])
        (const_int 3472334893297315890 [0x30303630302e3032])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 2131 132 133 17 (set (mem:DI (reg/f:DI 0 ax [orig:107 D.25376 ] [107]) [0 MEM[(void *)_81]+0 S8 A8])
        (reg:DI 3 bx [827])) ge2fitman_read_procpar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 133 2131 134 17 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:107 D.25376 ] [107])
                (const_int 8 [0x8])) [0 MEM[(void *)_81]+8 S2 A8])
        (const_int 49 [0x31])) ge2fitman_read_procpar.cpp:89 92 {*movhi_internal}
     (nil))
(insn 134 133 2027 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 ver+0 S4 A32])
        (const_int 20 [0x14])) ge2fitman_read_procpar.cpp:90 90 {*movsi_internal}
     (nil))
(jump_insn 2027 134 2028 17 (set (pc)
        (label_ref 176)) 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2028 2027 2026)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 101
(code_label 2026 2028 138 18 85 "" [1 uses])
(note 138 2026 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (set (reg:SF 21 xmm0 [orig:101 D.25374 ] [101])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (nil))
(insn 140 139 141 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:101 D.25374 ] [101])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32]))) ge2fitman_read_procpar.cpp:92 55 {*cmpiusf_sse}
     (nil))
(jump_insn 141 140 145 18 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 167)
            (pc))) ge2fitman_read_procpar.cpp:92 612 {*jcc_1}
     (nil)
 -> 167)
;;  succ:       19 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 102 538
(note 145 141 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 19 (set (reg:SF 22 xmm1 [orig:102 D.25374 ] [102])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (nil))
(insn 147 146 148 19 (set (reg:SF 21 xmm0 [538])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:92 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+1 [0x0.ap+5])
        (nil)))
(insn 148 147 149 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [538])
            (reg:SF 22 xmm1 [orig:102 D.25374 ] [102]))) ge2fitman_read_procpar.cpp:92 55 {*cmpiusf_sse}
     (nil))
(jump_insn 149 148 153 19 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 167)
            (pc))) ge2fitman_read_procpar.cpp:92 612 {*jcc_1}
     (nil)
 -> 167)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 539
(note 153 149 154 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 20 (set (reg:SF 21 xmm0 [orig:103 D.25374 ] [103])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:95 129 {*movsf_internal}
     (nil))
(insn 155 154 157 20 (set (reg:DF 21 xmm0 [orig:104 D.25375 ] [104])
        (float_extend:DF (reg:SF 21 xmm0 [orig:103 D.25374 ] [103]))) ge2fitman_read_procpar.cpp:95 152 {*extendsfdf2_sse}
     (nil))
(insn 157 155 158 20 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f5c1040f510 *.LC8>)) ge2fitman_read_procpar.cpp:95 89 {*movdi_internal}
     (nil))
(insn 158 157 159 20 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:95 93 {*movqi_internal}
     (nil))
(call_insn 159 158 160 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:95 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 160 159 161 20 (set (reg/f:DI 0 ax [539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg/f:DI 0 ax [orig:105 D.25376 ] [105])
                (plus:DI (reg/f:DI 0 ax [539])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:96 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 162 161 2132 20 (set (reg:DI 3 bx [828])
        (const_int 3472334893297315890 [0x30303630302e3032])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 2132 162 163 20 (set (mem:DI (reg/f:DI 0 ax [orig:105 D.25376 ] [105]) [0 MEM[(void *)_75]+0 S8 A8])
        (reg:DI 3 bx [828])) ge2fitman_read_procpar.cpp:96 89 {*movdi_internal}
     (nil))
(insn 163 2132 164 20 (set (mem:HI (plus:DI (reg/f:DI 0 ax [orig:105 D.25376 ] [105])
                (const_int 8 [0x8])) [0 MEM[(void *)_75]+8 S2 A8])
        (const_int 49 [0x31])) ge2fitman_read_procpar.cpp:96 92 {*movhi_internal}
     (nil))
(insn 164 163 2029 20 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 ver+0 S4 A32])
        (const_int 14 [0xe])) ge2fitman_read_procpar.cpp:97 90 {*movsi_internal}
     (nil))
(jump_insn 2029 164 2030 20 (set (pc)
        (label_ref 176)) ge2fitman_read_procpar.cpp:97 654 {jump}
     (nil)
 -> 176)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2030 2029 167)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;;              19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 106 540
(code_label 167 2030 168 21 15 "" [2 uses])
(note 168 167 169 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 21 (set (reg/f:DI 0 ax [540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 170 169 171 21 (parallel [
            (set (reg/f:DI 0 ax [orig:106 D.25376 ] [106])
                (plus:DI (reg/f:DI 0 ax [540])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:100 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 171 170 172 21 (set (mem:HI (reg/f:DI 0 ax [orig:106 D.25376 ] [106]) [0 MEM[(void *)_78]+0 S2 A8])
        (const_int 16718 [0x414e])) ge2fitman_read_procpar.cpp:100 92 {*movhi_internal}
     (nil))
(insn 172 171 173 21 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:106 D.25376 ] [106])
                (const_int 2 [0x2])) [0 MEM[(void *)_78]+2 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:100 93 {*movqi_internal}
     (nil))
(insn 173 172 2031 21 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -2 [0xfffffffffffffffe])) ge2fitman_read_procpar.cpp:101 90 {*movsi_internal}
     (nil))
(jump_insn 2031 173 2032 21 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:101 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2032 2031 176)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%] 
;;              6 [100.0%] 
;;              9 [100.0%] 
;;              12 [100.0%] 
;;              15 [100.0%] 
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 112 113 541
(code_label 176 2032 177 22 6 "" [6 uses])
(note 177 176 178 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 22 (set (reg/f:DI 0 ax [541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 179 178 180 22 (parallel [
            (set (reg/f:DI 0 ax [orig:112 D.25376 ] [112])
                (plus:DI (reg/f:DI 0 ax [541])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:106 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 180 179 181 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f5c1040f5a0 *.LC9>)) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(insn 181 180 182 22 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 D.25376 ] [112])) ge2fitman_read_procpar.cpp:106 89 {*movdi_internal}
     (nil))
(call_insn/i 182 181 183 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 183 182 184 22 (set (reg:SI 0 ax [orig:113 D.25372 ] [113])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:106 90 {*movsi_internal}
     (nil))
(insn 184 183 185 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:113 D.25372 ] [113])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 185 184 186 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) ge2fitman_read_procpar.cpp:106 612 {*jcc_1}
     (nil)
 -> 195)
;;  succ:       24
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 114 115 542
(note 186 185 187 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 23 (set (reg/f:DI 0 ax [542])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 188 187 189 23 (parallel [
            (set (reg/f:DI 0 ax [orig:114 D.25376 ] [114])
                (plus:DI (reg/f:DI 0 ax [542])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:107 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 189 188 190 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f5c1040f630 *.LC10>)) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 190 189 191 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:114 D.25376 ] [114])) ge2fitman_read_procpar.cpp:107 89 {*movdi_internal}
     (nil))
(call_insn/i 191 190 192 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:107 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 192 191 193 23 (set (reg:SI 0 ax [orig:115 D.25372 ] [115])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:107 90 {*movsi_internal}
     (nil))
(insn 193 192 194 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:115 D.25372 ] [115])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:106 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 194 193 195 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) ge2fitman_read_procpar.cpp:106 612 {*jcc_1}
     (nil)
 -> 206)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 195 194 196 24 18 "" [1 uses])
(note 196 195 197 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 39984 [0x9c30])) ge2fitman_read_procpar.cpp:108 89 {*movdi_internal}
     (nil))
(insn 198 197 199 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 36882 [0x9012])) ge2fitman_read_procpar.cpp:109 89 {*movdi_internal}
     (nil))
(insn 199 198 200 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 36973 [0x906d])) ge2fitman_read_procpar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 200 199 201 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 37084 [0x90dc])) ge2fitman_read_procpar.cpp:111 89 {*movdi_internal}
     (nil))
(insn 201 200 202 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 39148 [0x98ec])) ge2fitman_read_procpar.cpp:112 89 {*movdi_internal}
     (nil))
(insn 202 201 203 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 39140 [0x98e4])) ge2fitman_read_procpar.cpp:113 89 {*movdi_internal}
     (nil))
(insn 203 202 2033 24 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 39260 [0x995c])) ge2fitman_read_procpar.cpp:114 89 {*movdi_internal}
     (nil))
(jump_insn 2033 203 2034 24 (set (pc)
        (label_ref 321)) ge2fitman_read_procpar.cpp:114 654 {jump}
     (nil)
 -> 321)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2034 2033 206)
;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116 117 543
(code_label 206 2034 207 25 19 "" [1 uses])
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 25 (set (reg/f:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 209 208 210 25 (parallel [
            (set (reg/f:DI 0 ax [orig:116 D.25376 ] [116])
                (plus:DI (reg/f:DI 0 ax [543])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:115 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 210 209 211 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f5c1040f6c0 *.LC11>)) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(insn 211 210 212 25 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:116 D.25376 ] [116])) ge2fitman_read_procpar.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn/i 212 211 213 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 213 212 214 25 (set (reg:SI 0 ax [orig:117 D.25372 ] [117])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:115 90 {*movsi_internal}
     (nil))
(insn 214 213 215 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:117 D.25372 ] [117])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 215 214 216 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) ge2fitman_read_procpar.cpp:115 612 {*jcc_1}
     (nil)
 -> 225)
;;  succ:       27
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 544
(note 216 215 217 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 26 (set (reg/f:DI 0 ax [544])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(insn 218 217 219 26 (parallel [
            (set (reg/f:DI 0 ax [orig:118 D.25376 ] [118])
                (plus:DI (reg/f:DI 0 ax [544])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:116 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 219 218 220 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f5c1040f750 *.LC12>)) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(insn 220 219 221 26 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:118 D.25376 ] [118])) ge2fitman_read_procpar.cpp:116 89 {*movdi_internal}
     (nil))
(call_insn/i 221 220 222 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:116 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 222 221 223 26 (set (reg:SI 0 ax [orig:119 D.25372 ] [119])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:116 90 {*movsi_internal}
     (nil))
(insn 223 222 224 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:119 D.25372 ] [119])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 224 223 225 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) ge2fitman_read_procpar.cpp:115 612 {*jcc_1}
     (nil)
 -> 236)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 225 224 226 27 21 "" [1 uses])
(note 226 225 227 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 60464 [0xec30])) ge2fitman_read_procpar.cpp:117 89 {*movdi_internal}
     (nil))
(insn 228 227 229 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 57362 [0xe012])) ge2fitman_read_procpar.cpp:118 89 {*movdi_internal}
     (nil))
(insn 229 228 230 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 57453 [0xe06d])) ge2fitman_read_procpar.cpp:119 89 {*movdi_internal}
     (nil))
(insn 230 229 231 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 57564 [0xe0dc])) ge2fitman_read_procpar.cpp:120 89 {*movdi_internal}
     (nil))
(insn 231 230 232 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 59628 [0xe8ec])) ge2fitman_read_procpar.cpp:121 89 {*movdi_internal}
     (nil))
(insn 232 231 233 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 59620 [0xe8e4])) ge2fitman_read_procpar.cpp:122 89 {*movdi_internal}
     (nil))
(insn 233 232 2035 27 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 59740 [0xe95c])) ge2fitman_read_procpar.cpp:123 89 {*movdi_internal}
     (nil))
(jump_insn 2035 233 2036 27 (set (pc)
        (label_ref 321)) ge2fitman_read_procpar.cpp:123 654 {jump}
     (nil)
 -> 321)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2036 2035 236)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120 121 545
(code_label 236 2036 237 28 22 "" [1 uses])
(note 237 236 238 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 28 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(insn 239 238 240 28 (parallel [
            (set (reg/f:DI 0 ax [orig:120 D.25376 ] [120])
                (plus:DI (reg/f:DI 0 ax [545])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:124 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 240 239 241 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f5c1040f7e0 *.LC13>)) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(insn 241 240 242 28 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:120 D.25376 ] [120])) ge2fitman_read_procpar.cpp:124 89 {*movdi_internal}
     (nil))
(call_insn/i 242 241 243 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:124 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 243 242 244 28 (set (reg:SI 0 ax [orig:121 D.25372 ] [121])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:124 90 {*movsi_internal}
     (nil))
(insn 244 243 245 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:121 D.25372 ] [121])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:124 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 245 244 246 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) ge2fitman_read_procpar.cpp:124 612 {*jcc_1}
     (nil)
 -> 256)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 246 245 247 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 61464 [0xf018])) ge2fitman_read_procpar.cpp:125 89 {*movdi_internal}
     (nil))
(insn 248 247 249 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 57362 [0xe012])) ge2fitman_read_procpar.cpp:126 89 {*movdi_internal}
     (nil))
(insn 249 248 250 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 57453 [0xe06d])) ge2fitman_read_procpar.cpp:127 89 {*movdi_internal}
     (nil))
(insn 250 249 251 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 57564 [0xe0dc])) ge2fitman_read_procpar.cpp:128 89 {*movdi_internal}
     (nil))
(insn 251 250 252 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 60136 [0xeae8])) ge2fitman_read_procpar.cpp:129 89 {*movdi_internal}
     (nil))
(insn 252 251 253 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 60128 [0xeae0])) ge2fitman_read_procpar.cpp:130 89 {*movdi_internal}
     (nil))
(insn 253 252 2037 29 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 60248 [0xeb58])) ge2fitman_read_procpar.cpp:131 89 {*movdi_internal}
     (nil))
(jump_insn 2037 253 2038 29 (set (pc)
        (label_ref 321)) 654 {jump}
     (nil)
 -> 321)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2038 2037 256)
;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 123 546
(code_label 256 2038 257 30 23 "" [1 uses])
(note 257 256 258 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 30 (set (reg/f:DI 0 ax [546])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 259 258 260 30 (parallel [
            (set (reg/f:DI 0 ax [orig:122 D.25376 ] [122])
                (plus:DI (reg/f:DI 0 ax [546])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:132 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 260 259 261 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f5c1040f870 *.LC14>)) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(insn 261 260 262 30 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:122 D.25376 ] [122])) ge2fitman_read_procpar.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn/i 262 261 263 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:132 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 263 262 264 30 (set (reg:SI 0 ax [orig:123 D.25372 ] [123])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:132 90 {*movsi_internal}
     (nil))
(insn 264 263 265 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:123 D.25372 ] [123])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:132 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 265 264 266 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ge2fitman_read_procpar.cpp:132 612 {*jcc_1}
     (nil)
 -> 276)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 266 265 267 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 66072 [0x10218])) ge2fitman_read_procpar.cpp:133 89 {*movdi_internal}
     (nil))
(insn 268 267 269 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 61851 [0xf19b])) ge2fitman_read_procpar.cpp:134 89 {*movdi_internal}
     (nil))
(insn 269 268 270 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 62062 [0xf26e])) ge2fitman_read_procpar.cpp:135 89 {*movdi_internal}
     (nil))
(insn 270 269 271 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 61568 [0xf080])) ge2fitman_read_procpar.cpp:136 89 {*movdi_internal}
     (nil))
(insn 271 270 272 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 65032 [0xfe08])) ge2fitman_read_procpar.cpp:137 89 {*movdi_internal}
     (nil))
(insn 272 271 273 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 65024 [0xfe00])) ge2fitman_read_procpar.cpp:138 89 {*movdi_internal}
     (nil))
(insn 273 272 2039 31 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 65374 [0xff5e])) ge2fitman_read_procpar.cpp:139 89 {*movdi_internal}
     (nil))
(jump_insn 2039 273 2040 31 (set (pc)
        (label_ref 321)) 654 {jump}
     (nil)
 -> 321)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2040 2039 276)
;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 124 125 547
(code_label 276 2040 277 32 24 "" [1 uses])
(note 277 276 278 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 32 (set (reg/f:DI 0 ax [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 279 278 280 32 (parallel [
            (set (reg/f:DI 0 ax [orig:124 D.25376 ] [124])
                (plus:DI (reg/f:DI 0 ax [547])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:143 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 280 279 281 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(insn 281 280 282 32 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:124 D.25376 ] [124])) ge2fitman_read_procpar.cpp:143 89 {*movdi_internal}
     (nil))
(call_insn/i 282 281 283 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:143 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 283 282 284 32 (set (reg:SI 0 ax [orig:125 D.25372 ] [125])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:143 90 {*movsi_internal}
     (nil))
(insn 284 283 285 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:125 D.25372 ] [125])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:143 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 285 284 286 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) ge2fitman_read_procpar.cpp:143 612 {*jcc_1}
     (nil)
 -> 301)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 126 548
(note 286 285 287 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 33 (set (reg/f:DI 0 ax [548])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 288 287 289 33 (parallel [
            (set (reg/f:DI 0 ax [orig:126 D.25376 ] [126])
                (plus:DI (reg/f:DI 0 ax [548])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:150 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 289 288 290 33 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:126 D.25376 ] [126])) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 290 289 291 33 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f5c1040f990 *.LC16>)) ge2fitman_read_procpar.cpp:150 89 {*movdi_internal}
     (nil))
(insn 291 290 292 33 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:150 93 {*movqi_internal}
     (nil))
(call_insn 292 291 293 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:150 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 293 292 294 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 144175 [0x2332f])) ge2fitman_read_procpar.cpp:157 89 {*movdi_internal}
     (nil))
(insn 294 293 295 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 144348 [0x233dc])) ge2fitman_read_procpar.cpp:158 89 {*movdi_internal}
     (nil))
(insn 295 294 296 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 143412 [0x23034])) ge2fitman_read_procpar.cpp:159 89 {*movdi_internal}
     (nil))
(insn 296 295 297 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:160 89 {*movdi_internal}
     (nil))
(insn 297 296 298 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:161 89 {*movdi_internal}
     (nil))
(insn 298 297 2041 33 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 148988 [0x245fc])) ge2fitman_read_procpar.cpp:162 89 {*movdi_internal}
     (nil))
(jump_insn 2041 298 2042 33 (set (pc)
        (label_ref 321)) 654 {jump}
     (nil)
 -> 321)
;;  succ:       36 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2042 2041 301)
;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127 128 549
(code_label 301 2042 302 34 25 "" [1 uses])
(note 302 301 303 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 34 (set (reg/f:DI 0 ax [549])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 304 303 305 34 (parallel [
            (set (reg/f:DI 0 ax [orig:127 D.25376 ] [127])
                (plus:DI (reg/f:DI 0 ax [549])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:165 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 305 304 306 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f5c1040fa20 *.LC17>)) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(insn 306 305 307 34 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:127 D.25376 ] [127])) ge2fitman_read_procpar.cpp:165 89 {*movdi_internal}
     (nil))
(call_insn/i 307 306 308 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:165 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 308 307 309 34 (set (reg:SI 0 ax [orig:128 D.25372 ] [128])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:165 90 {*movsi_internal}
     (nil))
(insn 309 308 310 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:128 D.25372 ] [128])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:165 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 310 309 311 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) ge2fitman_read_procpar.cpp:165 612 {*jcc_1}
     (nil)
 -> 321)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 311 310 312 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 145908 [0x239f4])) ge2fitman_read_procpar.cpp:171 89 {*movdi_internal}
     (nil))
(insn 313 312 314 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])
        (const_int 144175 [0x2332f])) ge2fitman_read_procpar.cpp:173 89 {*movdi_internal}
     (nil))
(insn 314 313 315 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])
        (const_int 144348 [0x233dc])) ge2fitman_read_procpar.cpp:174 89 {*movdi_internal}
     (nil))
(insn 315 314 316 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])
        (const_int 143412 [0x23034])) ge2fitman_read_procpar.cpp:175 89 {*movdi_internal}
     (nil))
(insn 316 315 317 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 te_offset+0 S8 A64])
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:176 89 {*movdi_internal}
     (nil))
(insn 317 316 318 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 tr_offset+0 S8 A64])
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:177 89 {*movdi_internal}
     (nil))
(insn 318 317 319 35 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])
        (const_int 148988 [0x245fc])) ge2fitman_read_procpar.cpp:178 89 {*movdi_internal}
     (nil))
(insn 319 318 320 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f5c1040fab0 *.LC18>)) ge2fitman_read_procpar.cpp:179 89 {*movdi_internal}
     (nil))
(call_insn 320 319 321 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5c11b96000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:179 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;;              24 [100.0%] 
;;              27 [100.0%] 
;;              29 [100.0%] 
;;              31 [100.0%] 
;;              34
;;              33 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 130 550
(code_label 321 320 322 36 20 "" [6 uses])
(note 322 321 323 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 36 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:183 92 {*movhi_internal}
     (nil))
(insn 324 323 325 36 (set (reg/f:DI 0 ax [550])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 325 324 326 36 (parallel [
            (set (reg/f:DI 0 ax [orig:129 D.25376 ] [129])
                (plus:DI (reg/f:DI 0 ax [550])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:185 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 326 325 327 36 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(insn 327 326 328 36 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:129 D.25376 ] [129])) ge2fitman_read_procpar.cpp:185 89 {*movdi_internal}
     (nil))
(call_insn/i 328 327 329 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:185 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 329 328 330 36 (set (reg:SI 0 ax [orig:130 D.25372 ] [130])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:185 90 {*movsi_internal}
     (nil))
(insn 330 329 331 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:130 D.25372 ] [130])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:185 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 331 330 332 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) ge2fitman_read_procpar.cpp:185 612 {*jcc_1}
     (nil)
 -> 356)
;;  succ:       37 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 131 132 133 134 135 136 551 552 553 554
(note 332 331 333 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 37 (set (reg/f:DI 0 ax [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 334 333 335 37 (set (reg:QI 0 ax [orig:131 D.25373 ] [131])
        (mem:QI (reg/f:DI 0 ax [551]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:188 93 {*movqi_internal}
     (nil))
(insn 335 334 336 37 (set (reg:SI 1 dx [orig:132 D.25372 ] [132])
        (zero_extend:SI (reg:QI 0 ax [orig:131 D.25373 ] [131]))) ge2fitman_read_procpar.cpp:188 138 {*zero_extendqisi2}
     (nil))
(insn 336 335 337 37 (set (reg:SI 2 cx [orig:133 D.25372 ] [133])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 337 336 338 37 (set (reg:SI 5 di [orig:134 D.25372 ] [134])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 338 337 339 37 (parallel [
            (set (reg:DI 4 si [552])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:188 218 {*adddi_1}
     (nil))
(insn 339 338 340 37 (set (reg:DI 0 ax [553])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 340 339 341 37 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:132 D.25372 ] [132])) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 341 340 342 37 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:133 D.25372 ] [133])) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 342 341 343 37 (set (reg:DI 2 cx)
        (const_int 74 [0x4a])) ge2fitman_read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(insn 343 342 345 37 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:134 D.25372 ] [134])) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 345 343 346 37 (set (reg:DI 5 di)
        (reg:DI 0 ax [553])) ge2fitman_read_procpar.cpp:188 89 {*movdi_internal}
     (nil))
(call_insn 346 345 347 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:188 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 347 346 348 37 (set (reg:SI 0 ax [orig:135 D.25372 ] [135])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:188 90 {*movsi_internal}
     (nil))
(insn 348 347 349 37 (parallel [
            (set (reg:SI 0 ax [554])
                (lshiftrt:SI (reg:SI 0 ax [orig:135 D.25372 ] [135])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:188 544 {*lshrsi3_1}
     (nil))
(insn 349 348 350 37 (set (reg:QI 0 ax [orig:136 D.25373 ] [136])
        (reg:QI 0 ax [554])) ge2fitman_read_procpar.cpp:188 93 {*movqi_internal}
     (nil))
(insn 350 349 351 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:136 D.25373 ] [136])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:188 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 351 350 352 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) ge2fitman_read_procpar.cpp:188 612 {*jcc_1}
     (nil)
 -> 390)
;;  succ:       38 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 352 351 353 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 2043 38 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:191 90 {*movsi_internal}
     (nil))
(jump_insn 2043 353 2044 38 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:191 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2044 2043 356)
;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       36
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137 138 555
(code_label 356 2044 357 39 26 "" [1 uses])
(note 357 356 358 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 39 (set (reg/f:DI 0 ax [555])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 359 358 360 39 (parallel [
            (set (reg/f:DI 0 ax [orig:137 D.25376 ] [137])
                (plus:DI (reg/f:DI 0 ax [555])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:194 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 360 359 361 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(insn 361 360 362 39 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:137 D.25376 ] [137])) ge2fitman_read_procpar.cpp:194 89 {*movdi_internal}
     (nil))
(call_insn/i 362 361 363 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:194 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 363 362 364 39 (set (reg:SI 0 ax [orig:138 D.25372 ] [138])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:194 90 {*movsi_internal}
     (nil))
(insn 364 363 365 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:138 D.25372 ] [138])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:194 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 365 364 366 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) ge2fitman_read_procpar.cpp:194 612 {*jcc_1}
     (nil)
 -> 390)
;;  succ:       40 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 140 141 142 143 144 556 557 558 559
(note 366 365 367 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 40 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 368 367 369 40 (set (reg:QI 0 ax [orig:139 D.25373 ] [139])
        (mem:QI (reg/f:DI 0 ax [556]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:197 93 {*movqi_internal}
     (nil))
(insn 369 368 370 40 (set (reg:SI 1 dx [orig:140 D.25372 ] [140])
        (zero_extend:SI (reg:QI 0 ax [orig:139 D.25373 ] [139]))) ge2fitman_read_procpar.cpp:197 138 {*zero_extendqisi2}
     (nil))
(insn 370 369 371 40 (set (reg:SI 2 cx [orig:141 D.25372 ] [141])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 371 370 372 40 (set (reg:SI 5 di [orig:142 D.25372 ] [142])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 372 371 373 40 (parallel [
            (set (reg:DI 4 si [557])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:197 218 {*adddi_1}
     (nil))
(insn 373 372 374 40 (set (reg:DI 0 ax [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 374 373 375 40 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:140 D.25372 ] [140])) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 375 374 376 40 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:141 D.25372 ] [141])) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 376 375 377 40 (set (reg:DI 2 cx)
        (const_int 74 [0x4a])) ge2fitman_read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(insn 377 376 379 40 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:142 D.25372 ] [142])) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 379 377 380 40 (set (reg:DI 5 di)
        (reg:DI 0 ax [558])) ge2fitman_read_procpar.cpp:197 89 {*movdi_internal}
     (nil))
(call_insn 380 379 381 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:197 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 381 380 382 40 (set (reg:SI 0 ax [orig:143 D.25372 ] [143])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:197 90 {*movsi_internal}
     (nil))
(insn 382 381 383 40 (parallel [
            (set (reg:SI 0 ax [559])
                (lshiftrt:SI (reg:SI 0 ax [orig:143 D.25372 ] [143])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:197 544 {*lshrsi3_1}
     (nil))
(insn 383 382 384 40 (set (reg:QI 0 ax [orig:144 D.25373 ] [144])
        (reg:QI 0 ax [559])) ge2fitman_read_procpar.cpp:197 93 {*movqi_internal}
     (nil))
(insn 384 383 385 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:144 D.25373 ] [144])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:197 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 385 384 386 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) ge2fitman_read_procpar.cpp:197 612 {*jcc_1}
     (nil)
 -> 390)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 386 385 387 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 2045 41 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:201 90 {*movsi_internal}
     (nil))
(jump_insn 2045 387 2046 41 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:201 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2046 2045 390)
;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;;              39
;;              40
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 145 146 147 148 560 561 562
(code_label 390 2046 391 42 27 "" [3 uses])
(note 391 390 392 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 42 (set (reg:HI 0 ax [orig:145 D.25377 ] [145])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:204 92 {*movhi_internal}
     (nil))
(insn 393 392 394 42 (set (reg:SI 1 dx [orig:146 D.25372 ] [146])
        (sign_extend:SI (reg:HI 0 ax [orig:145 D.25377 ] [145]))) ge2fitman_read_procpar.cpp:204 146 {extendhisi2}
     (nil))
(insn 394 393 395 42 (set (reg/f:DI 0 ax [560])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:204 89 {*movdi_internal}
     (nil))
(insn 395 394 396 42 (set (mem/j:SI (reg/f:DI 0 ax [560]) [0 infile_struct_74(D)->num_datasets+0 S4 A32])
        (reg:SI 1 dx [orig:146 D.25372 ] [146])) ge2fitman_read_procpar.cpp:204 90 {*movsi_internal}
     (nil))
(insn 396 395 397 42 (set (reg:SF 21 xmm0 [561])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:209 129 {*movsf_internal}
     (nil))
(insn 397 396 398 42 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])
        (reg:SF 21 xmm0 [561])) ge2fitman_read_procpar.cpp:209 129 {*movsf_internal}
     (nil))
(insn 398 397 399 42 (set (reg/f:DI 0 ax [562])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 399 398 400 42 (parallel [
            (set (reg/f:DI 0 ax [orig:147 D.25376 ] [147])
                (plus:DI (reg/f:DI 0 ax [562])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:212 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 400 399 401 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(insn 401 400 402 42 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:147 D.25376 ] [147])) ge2fitman_read_procpar.cpp:212 89 {*movdi_internal}
     (nil))
(call_insn/i 402 401 403 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:212 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 403 402 404 42 (set (reg:SI 0 ax [orig:148 D.25372 ] [148])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:212 90 {*movsi_internal}
     (nil))
(insn 404 403 405 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:148 D.25372 ] [148])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:212 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 405 404 406 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 430)
            (pc))) ge2fitman_read_procpar.cpp:212 612 {*jcc_1}
     (nil)
 -> 430)
;;  succ:       43 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 149 150 151 152 153 154 563 564 565 566
(note 406 405 407 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 43 (set (reg/f:DI 0 ax [563])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 408 407 409 43 (set (reg:QI 0 ax [orig:149 D.25373 ] [149])
        (mem:QI (reg/f:DI 0 ax [563]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:214 93 {*movqi_internal}
     (nil))
(insn 409 408 410 43 (set (reg:SI 1 dx [orig:150 D.25372 ] [150])
        (zero_extend:SI (reg:QI 0 ax [orig:149 D.25373 ] [149]))) ge2fitman_read_procpar.cpp:214 138 {*zero_extendqisi2}
     (nil))
(insn 410 409 411 43 (set (reg:SI 2 cx [orig:151 D.25372 ] [151])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 411 410 412 43 (set (reg:SI 5 di [orig:152 D.25372 ] [152])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 412 411 413 43 (parallel [
            (set (reg:DI 4 si [564])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:214 218 {*adddi_1}
     (nil))
(insn 413 412 414 43 (set (reg:DI 0 ax [565])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 414 413 415 43 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:150 D.25372 ] [150])) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 415 414 416 43 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:151 D.25372 ] [151])) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 416 415 417 43 (set (reg:DI 2 cx)
        (const_int 292 [0x124])) ge2fitman_read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(insn 417 416 419 43 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:152 D.25372 ] [152])) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 419 417 420 43 (set (reg:DI 5 di)
        (reg:DI 0 ax [565])) ge2fitman_read_procpar.cpp:214 89 {*movdi_internal}
     (nil))
(call_insn 420 419 421 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:214 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 421 420 422 43 (set (reg:SI 0 ax [orig:153 D.25372 ] [153])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:214 90 {*movsi_internal}
     (nil))
(insn 422 421 423 43 (parallel [
            (set (reg:SI 0 ax [566])
                (lshiftrt:SI (reg:SI 0 ax [orig:153 D.25372 ] [153])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:214 544 {*lshrsi3_1}
     (nil))
(insn 423 422 424 43 (set (reg:QI 0 ax [orig:154 D.25373 ] [154])
        (reg:QI 0 ax [566])) ge2fitman_read_procpar.cpp:214 93 {*movqi_internal}
     (nil))
(insn 424 423 425 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:154 D.25373 ] [154])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:214 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 425 424 426 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) ge2fitman_read_procpar.cpp:214 612 {*jcc_1}
     (nil)
 -> 464)
;;  succ:       44 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 426 425 427 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 2047 44 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:217 90 {*movsi_internal}
     (nil))
(jump_insn 2047 427 2048 44 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:217 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2048 2047 430)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 155 156 567
(code_label 430 2048 431 45 28 "" [1 uses])
(note 431 430 432 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 45 (set (reg/f:DI 0 ax [567])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(insn 433 432 434 45 (parallel [
            (set (reg/f:DI 0 ax [orig:155 D.25376 ] [155])
                (plus:DI (reg/f:DI 0 ax [567])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:220 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 434 433 435 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(insn 435 434 436 45 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:155 D.25376 ] [155])) ge2fitman_read_procpar.cpp:220 89 {*movdi_internal}
     (nil))
(call_insn/i 436 435 437 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:220 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 437 436 438 45 (set (reg:SI 0 ax [orig:156 D.25372 ] [156])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:220 90 {*movsi_internal}
     (nil))
(insn 438 437 439 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:156 D.25372 ] [156])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:220 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 439 438 440 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) ge2fitman_read_procpar.cpp:220 612 {*jcc_1}
     (nil)
 -> 464)
;;  succ:       46 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 157 158 159 160 161 162 568 569 570 571
(note 440 439 441 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 46 (set (reg/f:DI 0 ax [568])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:222 89 {*movdi_internal}
     (nil))
(insn 442 441 443 46 (set (reg:QI 0 ax [orig:157 D.25373 ] [157])
        (mem:QI (reg/f:DI 0 ax [568]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:222 93 {*movqi_internal}
     (nil))
(insn 443 442 444 46 (set (reg:SI 1 dx [orig:158 D.25372 ] [158])
        (zero_extend:SI (reg:QI 0 ax [orig:157 D.25373 ] [157]))) ge2fitman_read_procpar.cpp:222 138 {*zero_extendqisi2}
     (nil))
(insn 444 443 445 46 (set (reg:SI 2 cx [orig:159 D.25372 ] [159])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 445 444 446 46 (set (reg:SI 5 di [orig:160 D.25372 ] [160])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 446 445 447 46 (parallel [
            (set (reg:DI 4 si [569])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:222 218 {*adddi_1}
     (nil))
(insn 447 446 448 46 (set (reg:DI 0 ax [570])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:222 89 {*movdi_internal}
     (nil))
(insn 448 447 449 46 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:158 D.25372 ] [158])) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 449 448 450 46 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:159 D.25372 ] [159])) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 450 449 451 46 (set (reg:DI 2 cx)
        (const_int 292 [0x124])) ge2fitman_read_procpar.cpp:222 89 {*movdi_internal}
     (nil))
(insn 451 450 453 46 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:160 D.25372 ] [160])) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 453 451 454 46 (set (reg:DI 5 di)
        (reg:DI 0 ax [570])) ge2fitman_read_procpar.cpp:222 89 {*movdi_internal}
     (nil))
(call_insn 454 453 455 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:222 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 455 454 456 46 (set (reg:SI 0 ax [orig:161 D.25372 ] [161])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:222 90 {*movsi_internal}
     (nil))
(insn 456 455 457 46 (parallel [
            (set (reg:SI 0 ax [571])
                (lshiftrt:SI (reg:SI 0 ax [orig:161 D.25372 ] [161])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:222 544 {*lshrsi3_1}
     (nil))
(insn 457 456 458 46 (set (reg:QI 0 ax [orig:162 D.25373 ] [162])
        (reg:QI 0 ax [571])) ge2fitman_read_procpar.cpp:222 93 {*movqi_internal}
     (nil))
(insn 458 457 459 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:162 D.25373 ] [162])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:222 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 459 458 460 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) ge2fitman_read_procpar.cpp:222 612 {*jcc_1}
     (nil)
 -> 464)
;;  succ:       47 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 460 459 461 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 2049 47 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:225 90 {*movsi_internal}
     (nil))
(jump_insn 2049 461 2050 47 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:225 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2050 2049 464)
;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              45
;;              46
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 163 164 165 166 572 573
(code_label 464 2050 465 48 29 "" [3 uses])
(note 465 464 466 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 48 (set (reg:SF 21 xmm0 [orig:163 D.25374 ] [163])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:233 129 {*movsf_internal}
     (nil))
(insn 467 466 468 48 (set (reg:SI 1 dx [orig:164 D.25372 ] [164])
        (fix:SI (reg:SF 21 xmm0 [orig:163 D.25374 ] [163]))) ge2fitman_read_procpar.cpp:233 170 {fix_truncsfsi_sse}
     (nil))
(insn 468 467 469 48 (set (reg/f:DI 0 ax [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:233 89 {*movdi_internal}
     (nil))
(insn 469 468 470 48 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [572])
                (const_int 4 [0x4])) [0 infile_struct_74(D)->num_unsup_sets+0 S4 A32])
        (reg:SI 1 dx [orig:164 D.25372 ] [164])) ge2fitman_read_procpar.cpp:233 90 {*movsi_internal}
     (nil))
(insn 470 469 471 48 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:240 92 {*movhi_internal}
     (nil))
(insn 471 470 472 48 (set (reg/f:DI 0 ax [573])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 472 471 473 48 (parallel [
            (set (reg/f:DI 0 ax [orig:165 D.25376 ] [165])
                (plus:DI (reg/f:DI 0 ax [573])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:242 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 473 472 474 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(insn 474 473 475 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:165 D.25376 ] [165])) ge2fitman_read_procpar.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn/i 475 474 476 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:242 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 476 475 477 48 (set (reg:SI 0 ax [orig:166 D.25372 ] [166])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:242 90 {*movsi_internal}
     (nil))
(insn 477 476 478 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:166 D.25372 ] [166])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:242 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 478 477 479 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) ge2fitman_read_procpar.cpp:242 612 {*jcc_1}
     (nil)
 -> 503)
;;  succ:       49 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 167 168 169 170 171 172 574 575 576 577
(note 479 478 480 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 49 (set (reg/f:DI 0 ax [574])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(insn 481 480 482 49 (set (reg:QI 0 ax [orig:167 D.25373 ] [167])
        (mem:QI (reg/f:DI 0 ax [574]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:244 93 {*movqi_internal}
     (nil))
(insn 482 481 483 49 (set (reg:SI 1 dx [orig:168 D.25372 ] [168])
        (zero_extend:SI (reg:QI 0 ax [orig:167 D.25373 ] [167]))) ge2fitman_read_procpar.cpp:244 138 {*zero_extendqisi2}
     (nil))
(insn 483 482 484 49 (set (reg:SI 2 cx [orig:169 D.25372 ] [169])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 484 483 485 49 (set (reg:SI 5 di [orig:170 D.25372 ] [170])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 485 484 486 49 (parallel [
            (set (reg:DI 4 si [575])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:244 218 {*adddi_1}
     (nil))
(insn 486 485 487 49 (set (reg:DI 0 ax [576])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(insn 487 486 488 49 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:168 D.25372 ] [168])) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 488 487 489 49 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:169 D.25372 ] [169])) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 489 488 490 49 (set (reg:DI 2 cx)
        (const_int 82 [0x52])) ge2fitman_read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(insn 490 489 492 49 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:170 D.25372 ] [170])) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 492 490 493 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [576])) ge2fitman_read_procpar.cpp:244 89 {*movdi_internal}
     (nil))
(call_insn 493 492 494 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:244 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 494 493 495 49 (set (reg:SI 0 ax [orig:171 D.25372 ] [171])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:244 90 {*movsi_internal}
     (nil))
(insn 495 494 496 49 (parallel [
            (set (reg:SI 0 ax [577])
                (lshiftrt:SI (reg:SI 0 ax [orig:171 D.25372 ] [171])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:244 544 {*lshrsi3_1}
     (nil))
(insn 496 495 497 49 (set (reg:QI 0 ax [orig:172 D.25373 ] [172])
        (reg:QI 0 ax [577])) ge2fitman_read_procpar.cpp:244 93 {*movqi_internal}
     (nil))
(insn 497 496 498 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:172 D.25373 ] [172])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:244 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 498 497 499 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) ge2fitman_read_procpar.cpp:244 612 {*jcc_1}
     (nil)
 -> 537)
;;  succ:       50 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 499 498 500 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 2051 50 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:247 90 {*movsi_internal}
     (nil))
(jump_insn 2051 500 2052 50 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:247 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2052 2051 503)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 173 174 578
(code_label 503 2052 504 51 30 "" [1 uses])
(note 504 503 505 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 51 (set (reg/f:DI 0 ax [578])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 506 505 507 51 (parallel [
            (set (reg/f:DI 0 ax [orig:173 D.25376 ] [173])
                (plus:DI (reg/f:DI 0 ax [578])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:250 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 507 506 508 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(insn 508 507 509 51 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:173 D.25376 ] [173])) ge2fitman_read_procpar.cpp:250 89 {*movdi_internal}
     (nil))
(call_insn/i 509 508 510 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:250 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 510 509 511 51 (set (reg:SI 0 ax [orig:174 D.25372 ] [174])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:250 90 {*movsi_internal}
     (nil))
(insn 511 510 512 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:174 D.25372 ] [174])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:250 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 512 511 513 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) ge2fitman_read_procpar.cpp:250 612 {*jcc_1}
     (nil)
 -> 537)
;;  succ:       52 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 177 178 179 180 579 580 581 582
(note 513 512 514 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 52 (set (reg/f:DI 0 ax [579])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:252 89 {*movdi_internal}
     (nil))
(insn 515 514 516 52 (set (reg:QI 0 ax [orig:175 D.25373 ] [175])
        (mem:QI (reg/f:DI 0 ax [579]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:252 93 {*movqi_internal}
     (nil))
(insn 516 515 517 52 (set (reg:SI 1 dx [orig:176 D.25372 ] [176])
        (zero_extend:SI (reg:QI 0 ax [orig:175 D.25373 ] [175]))) ge2fitman_read_procpar.cpp:252 138 {*zero_extendqisi2}
     (nil))
(insn 517 516 518 52 (set (reg:SI 2 cx [orig:177 D.25372 ] [177])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 518 517 519 52 (set (reg:SI 5 di [orig:178 D.25372 ] [178])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 519 518 520 52 (parallel [
            (set (reg:DI 4 si [580])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:252 218 {*adddi_1}
     (nil))
(insn 520 519 521 52 (set (reg:DI 0 ax [581])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:252 89 {*movdi_internal}
     (nil))
(insn 521 520 522 52 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:176 D.25372 ] [176])) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 522 521 523 52 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:177 D.25372 ] [177])) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 523 522 524 52 (set (reg:DI 2 cx)
        (const_int 82 [0x52])) ge2fitman_read_procpar.cpp:252 89 {*movdi_internal}
     (nil))
(insn 524 523 526 52 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:178 D.25372 ] [178])) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 526 524 527 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [581])) ge2fitman_read_procpar.cpp:252 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:252 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 528 527 529 52 (set (reg:SI 0 ax [orig:179 D.25372 ] [179])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:252 90 {*movsi_internal}
     (nil))
(insn 529 528 530 52 (parallel [
            (set (reg:SI 0 ax [582])
                (lshiftrt:SI (reg:SI 0 ax [orig:179 D.25372 ] [179])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:252 544 {*lshrsi3_1}
     (nil))
(insn 530 529 531 52 (set (reg:QI 0 ax [orig:180 D.25373 ] [180])
        (reg:QI 0 ax [582])) ge2fitman_read_procpar.cpp:252 93 {*movqi_internal}
     (nil))
(insn 531 530 532 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:180 D.25373 ] [180])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:252 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 532 531 533 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) ge2fitman_read_procpar.cpp:252 612 {*jcc_1}
     (nil)
 -> 537)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 533 532 534 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 2053 53 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:255 90 {*movsi_internal}
     (nil))
(jump_insn 2053 534 2054 53 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:255 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2054 2053 537)
;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              51
;;              52
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 181 182 183 184 185 583 584
(code_label 537 2054 538 54 31 "" [3 uses])
(note 538 537 539 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 54 (set (reg:HI 0 ax [orig:181 D.25377 ] [181])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:261 92 {*movhi_internal}
     (nil))
(insn 540 539 541 54 (set (reg:DI 0 ax [orig:182 D.25378 ] [182])
        (sign_extend:DI (reg:HI 0 ax [orig:181 D.25377 ] [181]))) ge2fitman_read_procpar.cpp:261 145 {extendhidi2}
     (nil))
(insn 541 540 542 54 (parallel [
            (set (reg:DI 1 dx [orig:183 D.25378 ] [183])
                (ashift:DI (reg:DI 0 ax [orig:182 D.25378 ] [182])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:261 512 {*ashldi3_1}
     (nil))
(insn 542 541 543 54 (set (reg/f:DI 0 ax [583])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:261 89 {*movdi_internal}
     (nil))
(insn 543 542 544 54 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [583])
                (const_int 24 [0x18])) [0 main_header_230(D)->ebytes.number+0 S8 A64])
        (reg:DI 1 dx [orig:183 D.25378 ] [183])) ge2fitman_read_procpar.cpp:261 89 {*movdi_internal}
     (nil))
(insn 544 543 545 54 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 temp_long2+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:282 89 {*movdi_internal}
     (nil))
(insn 545 544 546 54 (set (reg/f:DI 0 ax [584])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(insn 546 545 547 54 (parallel [
            (set (reg/f:DI 0 ax [orig:184 D.25376 ] [184])
                (plus:DI (reg/f:DI 0 ax [584])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:284 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 547 546 548 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(insn 548 547 549 54 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:184 D.25376 ] [184])) ge2fitman_read_procpar.cpp:284 89 {*movdi_internal}
     (nil))
(call_insn/i 549 548 550 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:284 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 550 549 551 54 (set (reg:SI 0 ax [orig:185 D.25372 ] [185])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:284 90 {*movsi_internal}
     (nil))
(insn 551 550 552 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:185 D.25372 ] [185])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 552 551 553 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) ge2fitman_read_procpar.cpp:284 612 {*jcc_1}
     (nil)
 -> 577)
;;  succ:       55 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 186 187 188 189 190 191 585 586 587 588
(note 553 552 554 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 55 (set (reg/f:DI 0 ax [585])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:286 89 {*movdi_internal}
     (nil))
(insn 555 554 556 55 (set (reg:QI 0 ax [orig:186 D.25373 ] [186])
        (mem:QI (reg/f:DI 0 ax [585]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:286 93 {*movqi_internal}
     (nil))
(insn 556 555 557 55 (set (reg:SI 1 dx [orig:187 D.25372 ] [187])
        (zero_extend:SI (reg:QI 0 ax [orig:186 D.25373 ] [186]))) ge2fitman_read_procpar.cpp:286 138 {*zero_extendqisi2}
     (nil))
(insn 557 556 558 55 (set (reg:SI 2 cx [orig:188 D.25372 ] [188])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 558 557 559 55 (set (reg:SI 5 di [orig:189 D.25372 ] [189])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 559 558 560 55 (parallel [
            (set (reg:DI 4 si [586])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:286 218 {*adddi_1}
     (nil))
(insn 560 559 561 55 (set (reg:DI 0 ax [587])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:286 89 {*movdi_internal}
     (nil))
(insn 561 560 562 55 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:187 D.25372 ] [187])) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 562 561 563 55 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:188 D.25372 ] [188])) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 563 562 564 55 (set (reg:DI 2 cx)
        (const_int 1664 [0x680])) ge2fitman_read_procpar.cpp:286 89 {*movdi_internal}
     (nil))
(insn 564 563 566 55 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:189 D.25372 ] [189])) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 566 564 567 55 (set (reg:DI 5 di)
        (reg:DI 0 ax [587])) ge2fitman_read_procpar.cpp:286 89 {*movdi_internal}
     (nil))
(call_insn 567 566 568 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:286 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 568 567 569 55 (set (reg:SI 0 ax [orig:190 D.25372 ] [190])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:286 90 {*movsi_internal}
     (nil))
(insn 569 568 570 55 (parallel [
            (set (reg:SI 0 ax [588])
                (lshiftrt:SI (reg:SI 0 ax [orig:190 D.25372 ] [190])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:286 544 {*lshrsi3_1}
     (nil))
(insn 570 569 571 55 (set (reg:QI 0 ax [orig:191 D.25373 ] [191])
        (reg:QI 0 ax [588])) ge2fitman_read_procpar.cpp:286 93 {*movqi_internal}
     (nil))
(insn 571 570 572 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:191 D.25373 ] [191])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:286 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 572 571 573 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 611)
            (pc))) ge2fitman_read_procpar.cpp:286 612 {*jcc_1}
     (nil)
 -> 611)
;;  succ:       56 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 573 572 574 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 2055 56 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:289 90 {*movsi_internal}
     (nil))
(jump_insn 2055 574 2056 56 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:289 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2056 2055 577)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 192 193 589
(code_label 577 2056 578 57 32 "" [1 uses])
(note 578 577 579 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 57 (set (reg/f:DI 0 ax [589])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 580 579 581 57 (parallel [
            (set (reg/f:DI 0 ax [orig:192 D.25376 ] [192])
                (plus:DI (reg/f:DI 0 ax [589])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:292 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 581 580 582 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(insn 582 581 583 57 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:192 D.25376 ] [192])) ge2fitman_read_procpar.cpp:292 89 {*movdi_internal}
     (nil))
(call_insn/i 583 582 584 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:292 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 584 583 585 57 (set (reg:SI 0 ax [orig:193 D.25372 ] [193])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:292 90 {*movsi_internal}
     (nil))
(insn 585 584 586 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:193 D.25372 ] [193])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:292 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 586 585 587 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 611)
            (pc))) ge2fitman_read_procpar.cpp:292 612 {*jcc_1}
     (nil)
 -> 611)
;;  succ:       58 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 194 195 196 197 198 199 590 591 592 593
(note 587 586 588 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 58 (set (reg/f:DI 0 ax [590])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 589 588 590 58 (set (reg:QI 0 ax [orig:194 D.25373 ] [194])
        (mem:QI (reg/f:DI 0 ax [590]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:294 93 {*movqi_internal}
     (nil))
(insn 590 589 591 58 (set (reg:SI 1 dx [orig:195 D.25372 ] [195])
        (zero_extend:SI (reg:QI 0 ax [orig:194 D.25373 ] [194]))) ge2fitman_read_procpar.cpp:294 138 {*zero_extendqisi2}
     (nil))
(insn 591 590 592 58 (set (reg:SI 2 cx [orig:196 D.25372 ] [196])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 592 591 593 58 (set (reg:SI 5 di [orig:197 D.25372 ] [197])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 593 592 594 58 (parallel [
            (set (reg:DI 4 si [591])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:294 218 {*adddi_1}
     (nil))
(insn 594 593 595 58 (set (reg:DI 0 ax [592])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 595 594 596 58 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:195 D.25372 ] [195])) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 596 595 597 58 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:196 D.25372 ] [196])) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 597 596 598 58 (set (reg:DI 2 cx)
        (const_int 116 [0x74])) ge2fitman_read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(insn 598 597 600 58 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:197 D.25372 ] [197])) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 600 598 601 58 (set (reg:DI 5 di)
        (reg:DI 0 ax [592])) ge2fitman_read_procpar.cpp:294 89 {*movdi_internal}
     (nil))
(call_insn 601 600 602 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:294 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 602 601 603 58 (set (reg:SI 0 ax [orig:198 D.25372 ] [198])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:294 90 {*movsi_internal}
     (nil))
(insn 603 602 604 58 (parallel [
            (set (reg:SI 0 ax [593])
                (lshiftrt:SI (reg:SI 0 ax [orig:198 D.25372 ] [198])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:294 544 {*lshrsi3_1}
     (nil))
(insn 604 603 605 58 (set (reg:QI 0 ax [orig:199 D.25373 ] [199])
        (reg:QI 0 ax [593])) ge2fitman_read_procpar.cpp:294 93 {*movqi_internal}
     (nil))
(insn 605 604 606 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:199 D.25373 ] [199])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:294 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 606 605 607 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 611)
            (pc))) ge2fitman_read_procpar.cpp:294 612 {*jcc_1}
     (nil)
 -> 611)
;;  succ:       59 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 607 606 608 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 2057 59 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:297 90 {*movsi_internal}
     (nil))
(jump_insn 2057 608 2058 59 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:297 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2058 2057 611)
;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55
;;              57
;;              58
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 200 201 202 203 594 595
(code_label 611 2058 612 60 33 "" [3 uses])
(note 612 611 613 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 60 (set (reg:DI 0 ax [orig:200 D.25379 ] [200])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 temp_long2+0 S8 A64])) ge2fitman_read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 614 613 615 60 (set (reg:SI 1 dx [orig:201 D.25372 ] [201])
        (reg:SI 0 ax [orig:200 D.25379 ] [200])) ge2fitman_read_procpar.cpp:301 90 {*movsi_internal}
     (nil))
(insn 615 614 616 60 (set (reg/f:DI 0 ax [594])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:301 89 {*movdi_internal}
     (nil))
(insn 616 615 617 60 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [594])
                (const_int 12 [0xc])) [0 infile_struct_74(D)->total_data_size+0 S4 A32])
        (reg:SI 1 dx [orig:201 D.25372 ] [201])) ge2fitman_read_procpar.cpp:301 90 {*movsi_internal}
     (nil))
(insn 617 616 618 60 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:347 92 {*movhi_internal}
     (nil))
(insn 618 617 619 60 (set (reg/f:DI 0 ax [595])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(insn 619 618 620 60 (parallel [
            (set (reg/f:DI 0 ax [orig:202 D.25376 ] [202])
                (plus:DI (reg/f:DI 0 ax [595])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:349 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 620 619 621 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(insn 621 620 622 60 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:202 D.25376 ] [202])) ge2fitman_read_procpar.cpp:349 89 {*movdi_internal}
     (nil))
(call_insn/i 622 621 623 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:349 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 623 622 624 60 (set (reg:SI 0 ax [orig:203 D.25372 ] [203])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:349 90 {*movsi_internal}
     (nil))
(insn 624 623 625 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:203 D.25372 ] [203])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:349 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 625 624 626 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 650)
            (pc))) ge2fitman_read_procpar.cpp:349 612 {*jcc_1}
     (nil)
 -> 650)
;;  succ:       61 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 204 205 206 207 208 209 596 597 598 599
(note 626 625 627 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 61 (set (reg/f:DI 0 ax [596])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:351 89 {*movdi_internal}
     (nil))
(insn 628 627 629 61 (set (reg:QI 0 ax [orig:204 D.25373 ] [204])
        (mem:QI (reg/f:DI 0 ax [596]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:351 93 {*movqi_internal}
     (nil))
(insn 629 628 630 61 (set (reg:SI 1 dx [orig:205 D.25372 ] [205])
        (zero_extend:SI (reg:QI 0 ax [orig:204 D.25373 ] [204]))) ge2fitman_read_procpar.cpp:351 138 {*zero_extendqisi2}
     (nil))
(insn 630 629 631 61 (set (reg:SI 2 cx [orig:206 D.25372 ] [206])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 631 630 632 61 (set (reg:SI 5 di [orig:207 D.25372 ] [207])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 632 631 633 61 (parallel [
            (set (reg:DI 4 si [597])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:351 218 {*adddi_1}
     (nil))
(insn 633 632 634 61 (set (reg:DI 0 ax [598])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:351 89 {*movdi_internal}
     (nil))
(insn 634 633 635 61 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:205 D.25372 ] [205])) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 635 634 636 61 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:206 D.25372 ] [206])) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 636 635 637 61 (set (reg:DI 2 cx)
        (const_int 102 [0x66])) ge2fitman_read_procpar.cpp:351 89 {*movdi_internal}
     (nil))
(insn 637 636 639 61 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:207 D.25372 ] [207])) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 639 637 640 61 (set (reg:DI 5 di)
        (reg:DI 0 ax [598])) ge2fitman_read_procpar.cpp:351 89 {*movdi_internal}
     (nil))
(call_insn 640 639 641 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:351 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 641 640 642 61 (set (reg:SI 0 ax [orig:208 D.25372 ] [208])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:351 90 {*movsi_internal}
     (nil))
(insn 642 641 643 61 (parallel [
            (set (reg:SI 0 ax [599])
                (lshiftrt:SI (reg:SI 0 ax [orig:208 D.25372 ] [208])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:351 544 {*lshrsi3_1}
     (nil))
(insn 643 642 644 61 (set (reg:QI 0 ax [orig:209 D.25373 ] [209])
        (reg:QI 0 ax [599])) ge2fitman_read_procpar.cpp:351 93 {*movqi_internal}
     (nil))
(insn 644 643 645 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:209 D.25373 ] [209])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:351 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 645 644 646 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) ge2fitman_read_procpar.cpp:351 612 {*jcc_1}
     (nil)
 -> 684)
;;  succ:       62 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 646 645 647 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 2059 62 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:354 90 {*movsi_internal}
     (nil))
(jump_insn 2059 647 2060 62 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:354 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2060 2059 650)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 210 211 600
(code_label 650 2060 651 63 34 "" [1 uses])
(note 651 650 652 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 652 651 653 63 (set (reg/f:DI 0 ax [600])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 653 652 654 63 (parallel [
            (set (reg/f:DI 0 ax [orig:210 D.25376 ] [210])
                (plus:DI (reg/f:DI 0 ax [600])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:357 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 654 653 655 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(insn 655 654 656 63 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:210 D.25376 ] [210])) ge2fitman_read_procpar.cpp:357 89 {*movdi_internal}
     (nil))
(call_insn/i 656 655 657 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:357 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 657 656 658 63 (set (reg:SI 0 ax [orig:211 D.25372 ] [211])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:357 90 {*movsi_internal}
     (nil))
(insn 658 657 659 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:211 D.25372 ] [211])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:357 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 659 658 660 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) ge2fitman_read_procpar.cpp:357 612 {*jcc_1}
     (nil)
 -> 684)
;;  succ:       64 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 212 213 214 215 216 217 601 602 603 604
(note 660 659 661 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 661 660 662 64 (set (reg/f:DI 0 ax [601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:359 89 {*movdi_internal}
     (nil))
(insn 662 661 663 64 (set (reg:QI 0 ax [orig:212 D.25373 ] [212])
        (mem:QI (reg/f:DI 0 ax [601]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:359 93 {*movqi_internal}
     (nil))
(insn 663 662 664 64 (set (reg:SI 1 dx [orig:213 D.25372 ] [213])
        (zero_extend:SI (reg:QI 0 ax [orig:212 D.25373 ] [212]))) ge2fitman_read_procpar.cpp:359 138 {*zero_extendqisi2}
     (nil))
(insn 664 663 665 64 (set (reg:SI 2 cx [orig:214 D.25372 ] [214])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 665 664 666 64 (set (reg:SI 5 di [orig:215 D.25372 ] [215])
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 666 665 667 64 (parallel [
            (set (reg:DI 4 si [602])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -158 [0xffffffffffffff62])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:359 218 {*adddi_1}
     (nil))
(insn 667 666 668 64 (set (reg:DI 0 ax [603])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:359 89 {*movdi_internal}
     (nil))
(insn 668 667 669 64 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:213 D.25372 ] [213])) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 669 668 670 64 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:214 D.25372 ] [214])) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 670 669 671 64 (set (reg:DI 2 cx)
        (const_int 102 [0x66])) ge2fitman_read_procpar.cpp:359 89 {*movdi_internal}
     (nil))
(insn 671 670 673 64 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:215 D.25372 ] [215])) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 673 671 674 64 (set (reg:DI 5 di)
        (reg:DI 0 ax [603])) ge2fitman_read_procpar.cpp:359 89 {*movdi_internal}
     (nil))
(call_insn 674 673 675 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:359 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 675 674 676 64 (set (reg:SI 0 ax [orig:216 D.25372 ] [216])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:359 90 {*movsi_internal}
     (nil))
(insn 676 675 677 64 (parallel [
            (set (reg:SI 0 ax [604])
                (lshiftrt:SI (reg:SI 0 ax [orig:216 D.25372 ] [216])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:359 544 {*lshrsi3_1}
     (nil))
(insn 677 676 678 64 (set (reg:QI 0 ax [orig:217 D.25373 ] [217])
        (reg:QI 0 ax [604])) ge2fitman_read_procpar.cpp:359 93 {*movqi_internal}
     (nil))
(insn 678 677 679 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:217 D.25373 ] [217])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:359 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 679 678 680 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) ge2fitman_read_procpar.cpp:359 612 {*jcc_1}
     (nil)
 -> 684)
;;  succ:       65 (FALLTHRU)
;;              66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 680 679 681 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 2061 65 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:362 90 {*movsi_internal}
     (nil))
(jump_insn 2061 681 2062 65 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:362 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2062 2061 684)
;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              63
;;              64
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 218 219 220 221 222 223 224 225 226 227 605 606 607 608 609
(code_label 684 2062 685 66 35 "" [3 uses])
(note 685 684 686 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 686 685 687 66 (set (reg:HI 0 ax [orig:218 D.25377 ] [218])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:366 92 {*movhi_internal}
     (nil))
(insn 687 686 688 66 (set (reg:SI 1 dx [orig:219 D.25372 ] [219])
        (sign_extend:SI (reg:HI 0 ax [orig:218 D.25377 ] [218]))) ge2fitman_read_procpar.cpp:366 146 {extendhisi2}
     (nil))
(insn 688 687 689 66 (set (reg/f:DI 0 ax [605])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:366 89 {*movdi_internal}
     (nil))
(insn 689 688 690 66 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [605])
                (const_int 324 [0x144])) [0 procpar_info_283(D)->num_points+0 S4 A32])
        (reg:SI 1 dx [orig:219 D.25372 ] [219])) ge2fitman_read_procpar.cpp:366 90 {*movsi_internal}
     (nil))
(insn 690 689 691 66 (set (reg:HI 0 ax [orig:220 D.25377 ] [220])
        (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -158 [0xffffffffffffff62])) [0 temp_short+0 S2 A16])) ge2fitman_read_procpar.cpp:367 92 {*movhi_internal}
     (nil))
(insn 691 690 692 66 (set (reg:DI 1 dx [orig:221 D.25378 ] [221])
        (sign_extend:DI (reg:HI 0 ax [orig:220 D.25377 ] [220]))) ge2fitman_read_procpar.cpp:367 145 {extendhidi2}
     (nil))
(insn 692 691 693 66 (set (reg/f:DI 0 ax [606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:367 89 {*movdi_internal}
     (nil))
(insn 693 692 694 66 (set (mem/j:DI (plus:DI (reg/f:DI 0 ax [606])
                (const_int 16 [0x10])) [0 main_header_230(D)->np.number+0 S8 A64])
        (reg:DI 1 dx [orig:221 D.25378 ] [221])) ge2fitman_read_procpar.cpp:367 89 {*movdi_internal}
     (nil))
(insn 694 693 695 66 (set (reg/f:DI 0 ax [607])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 695 694 696 66 (set (reg:SI 0 ax [orig:222 D.25372 ] [222])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [607])
                (const_int 324 [0x144])) [0 procpar_info_283(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 696 695 697 66 (set (reg:SI 1 dx [orig:223 D.25380 ] [223])
        (reg:SI 0 ax [orig:222 D.25372 ] [222])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 697 696 698 66 (set (reg/f:DI 0 ax [608])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 698 697 699 66 (set (reg:DI 0 ax [orig:224 D.25378 ] [224])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [608])
                (const_int 24 [0x18])) [0 main_header_230(D)->ebytes.number+0 S8 A64])) ge2fitman_read_procpar.cpp:368 89 {*movdi_internal}
     (nil))
(insn 699 698 700 66 (set (reg:SI 0 ax [orig:225 D.25380 ] [225])
        (reg:SI 0 ax [orig:224 D.25378 ] [224])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 700 699 701 66 (parallel [
            (set (reg:SI 0 ax [orig:226 D.25380 ] [226])
                (mult:SI (reg:SI 0 ax [orig:225 D.25380 ] [225])
                    (reg:SI 1 dx [orig:223 D.25380 ] [223])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:368 305 {*mulsi3_1}
     (nil))
(insn 701 700 702 66 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 fid_set_size+0 S4 A32])
        (reg:SI 0 ax [orig:226 D.25380 ] [226])) ge2fitman_read_procpar.cpp:368 90 {*movsi_internal}
     (nil))
(insn 702 701 703 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f5c1040fb40 *.LC19>)) ge2fitman_read_procpar.cpp:434 89 {*movdi_internal}
     (nil))
(insn 703 702 704 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:434 93 {*movqi_internal}
     (nil))
(call_insn 704 703 705 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:434 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 705 704 706 66 (parallel [
            (set (reg:DI 0 ax [609])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:435 218 {*adddi_1}
     (nil))
(insn 706 705 707 66 (set (reg:DI 4 si)
        (reg:DI 0 ax [609])) ge2fitman_read_procpar.cpp:435 89 {*movdi_internal}
     (nil))
(insn 707 706 708 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f5c1040fbd0 *.LC20>)) ge2fitman_read_procpar.cpp:435 89 {*movdi_internal}
     (nil))
(insn 708 707 709 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:435 93 {*movqi_internal}
     (nil))
(call_insn 709 708 710 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("scanf") [flags 0x41]  <function_decl 0x7f5c11b965e8 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:435 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 710 709 711 66 (set (reg:SI 0 ax [orig:227 D.25372 ] [227])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:437 90 {*movsi_internal}
     (nil))
(insn 711 710 712 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:227 D.25372 ] [227])
            (const_int 2 [0x2]))) ge2fitman_read_procpar.cpp:437 7 {*cmpsi_1}
     (nil))
(jump_insn 712 711 713 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 719)
            (pc))) ge2fitman_read_procpar.cpp:437 612 {*jcc_1}
     (nil)
 -> 719)
;;  succ:       67 (FALLTHRU)
;;              68
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 610
(note 713 712 714 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 67 (set (reg/f:DI 0 ax [610])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:439 89 {*movdi_internal}
     (nil))
(insn 715 714 716 67 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [610])
                (const_int 12 [0xc])) [0 infile_struct_74(D)->total_data_size+0 S4 A32])
        (const_int 131072 [0x20000])) ge2fitman_read_procpar.cpp:439 90 {*movsi_internal}
     (nil))
(insn 716 715 2063 67 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_read_procpar.cpp:440 89 {*movdi_internal}
     (nil))
(jump_insn 2063 716 2064 67 (set (pc)
        (label_ref 739)) 654 {jump}
     (nil)
 -> 739)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2064 2063 719)
;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 228
(code_label 719 2064 720 68 36 "" [1 uses])
(note 720 719 721 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 721 720 722 68 (set (reg:SI 0 ax [orig:228 D.25372 ] [228])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:442 90 {*movsi_internal}
     (nil))
(insn 722 721 723 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:228 D.25372 ] [228])
            (const_int 8 [0x8]))) ge2fitman_read_procpar.cpp:442 7 {*cmpsi_1}
     (nil))
(jump_insn 723 722 724 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 730)
            (pc))) ge2fitman_read_procpar.cpp:442 612 {*jcc_1}
     (nil)
 -> 730)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 611
(note 724 723 725 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 69 (set (reg/f:DI 0 ax [611])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:444 89 {*movdi_internal}
     (nil))
(insn 726 725 727 69 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [611])
                (const_int 12 [0xc])) [0 infile_struct_74(D)->total_data_size+0 S4 A32])
        (const_int 262144 [0x40000])) ge2fitman_read_procpar.cpp:444 90 {*movsi_internal}
     (nil))
(insn 727 726 2065 69 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 145908 [0x239f4])) ge2fitman_read_procpar.cpp:446 89 {*movdi_internal}
     (nil))
(jump_insn 2065 727 2066 69 (set (pc)
        (label_ref 739)) 654 {jump}
     (nil)
 -> 739)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2066 2065 730)
;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 229
(code_label 730 2066 731 70 38 "" [1 uses])
(note 731 730 732 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 732 731 733 70 (set (reg:SI 0 ax [orig:229 D.25372 ] [229])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:448 90 {*movsi_internal}
     (nil))
(insn 733 732 734 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:229 D.25372 ] [229])
            (const_int 1 [0x1]))) ge2fitman_read_procpar.cpp:448 7 {*cmpsi_1}
     (nil))
(jump_insn 734 733 735 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 739)
            (pc))) ge2fitman_read_procpar.cpp:448 612 {*jcc_1}
     (nil)
 -> 739)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 612
(note 735 734 736 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 71 (set (reg/f:DI 0 ax [612])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:451 89 {*movdi_internal}
     (nil))
(insn 737 736 738 71 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [612])
                (const_int 12 [0xc])) [0 infile_struct_74(D)->total_data_size+0 S4 A32])
        (const_int 4202496 [0x402000])) ge2fitman_read_procpar.cpp:451 90 {*movsi_internal}
     (nil))
(insn 738 737 739 71 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])
        (const_int 149788 [0x2491c])) ge2fitman_read_procpar.cpp:452 89 {*movdi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              67 [100.0%] 
;;              70
;;              69 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 632 633 634 635
(code_label 739 738 740 72 37 "" [3 uses])
(note 740 739 741 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 741 740 742 72 (set (reg/f:DI 0 ax [613])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:456 89 {*movdi_internal}
     (nil))
(insn 742 741 743 72 (set (reg:SI 0 ax [orig:230 D.25372 ] [230])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [613])
                (const_int 12 [0xc])) [0 infile_struct_74(D)->total_data_size+0 S4 A32])) ge2fitman_read_procpar.cpp:456 90 {*movsi_internal}
     (nil))
(insn 743 742 744 72 (set (reg/f:DI 1 dx [614])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:457 89 {*movdi_internal}
     (nil))
(insn 744 743 745 72 (set (reg:SI 1 dx [orig:231 D.25372 ] [231])
        (mem/j:SI (reg/f:DI 1 dx [614]) [0 infile_struct_74(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 745 744 2133 72 (parallel [
            (set (reg:SI 1 dx [orig:232 D.25372 ] [232])
                (plus:SI (reg:SI 1 dx [orig:231 D.25372 ] [231])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:457 217 {*addsi_1}
     (nil))
(insn 2133 745 746 72 (set (reg:SI 3 bx [orig:233 D.25372 ] [233])
        (reg:SI 1 dx [orig:232 D.25372 ] [232])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 746 2133 747 72 (parallel [
            (set (reg:SI 3 bx [orig:233 D.25372 ] [233])
                (mult:SI (reg:SI 3 bx [orig:233 D.25372 ] [233])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -116 [0xffffffffffffff8c])) [0 fid_set_size+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:457 305 {*mulsi3_1}
     (nil))
(insn 747 746 748 72 (parallel [
            (set (reg:SI 0 ax [615])
                (div:SI (reg:SI 0 ax [orig:230 D.25372 ] [230])
                    (reg:SI 3 bx [orig:233 D.25372 ] [233])))
            (set (reg:SI 1 dx [616])
                (mod:SI (reg:SI 0 ax [orig:230 D.25372 ] [230])
                    (reg:SI 3 bx [orig:233 D.25372 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:456 341 {*divmodsi4}
     (nil))
(insn 748 747 749 72 (set (reg:SI 1 dx [orig:234 D.25372 ] [234])
        (reg:SI 0 ax [615])) ge2fitman_read_procpar.cpp:456 90 {*movsi_internal}
     (nil))
(insn 749 748 750 72 (set (reg/f:DI 0 ax [617])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:457 89 {*movdi_internal}
     (nil))
(insn 750 749 751 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [617])
                (const_int 508 [0x1fc])) [0 procpar_info_283(D)->num_channels+0 S4 A32])
        (reg:SI 1 dx [orig:234 D.25372 ] [234])) ge2fitman_read_procpar.cpp:457 90 {*movsi_internal}
     (nil))
(insn 751 750 752 72 (set (reg/f:DI 0 ax [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:459 89 {*movdi_internal}
     (nil))
(insn 752 751 753 72 (set (reg:SI 0 ax [orig:235 D.25372 ] [235])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [618])
                (const_int 508 [0x1fc])) [0 procpar_info_283(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:459 90 {*movsi_internal}
     (nil))
(insn 753 752 754 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:235 D.25372 ] [235])) ge2fitman_read_procpar.cpp:459 90 {*movsi_internal}
     (nil))
(insn 754 753 755 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f5c1040fc60 *.LC21>)) ge2fitman_read_procpar.cpp:459 89 {*movdi_internal}
     (nil))
(insn 755 754 756 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:459 93 {*movqi_internal}
     (nil))
(call_insn 756 755 757 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:459 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 757 756 758 72 (set (reg:SI 1 dx [orig:236 D.25372 ] [236])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [0 numchan+0 S4 A32])) ge2fitman_read_procpar.cpp:461 90 {*movsi_internal}
     (nil))
(insn 758 757 759 72 (set (reg/f:DI 0 ax [619])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:461 89 {*movdi_internal}
     (nil))
(insn 759 758 760 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [619])
                (const_int 508 [0x1fc])) [0 procpar_info_283(D)->num_channels+0 S4 A32])
        (reg:SI 1 dx [orig:236 D.25372 ] [236])) ge2fitman_read_procpar.cpp:461 90 {*movsi_internal}
     (nil))
(insn 760 759 761 72 (set (reg:SI 0 ax [620])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [0 fid_set_size+0 S4 A32])) ge2fitman_read_procpar.cpp:463 90 {*movsi_internal}
     (nil))
(insn 761 760 762 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [620])) ge2fitman_read_procpar.cpp:463 90 {*movsi_internal}
     (nil))
(insn 762 761 763 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f5c1040fcf0 *.LC22>)) ge2fitman_read_procpar.cpp:463 89 {*movdi_internal}
     (nil))
(insn 763 762 764 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:463 93 {*movqi_internal}
     (nil))
(call_insn 764 763 765 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:463 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 765 764 766 72 (set (reg/f:DI 0 ax [621])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:464 89 {*movdi_internal}
     (nil))
(insn 766 765 767 72 (set (reg:SI 0 ax [orig:237 D.25372 ] [237])
        (mem/j:SI (reg/f:DI 0 ax [621]) [0 infile_struct_74(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:464 90 {*movsi_internal}
     (nil))
(insn 767 766 768 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:237 D.25372 ] [237])) ge2fitman_read_procpar.cpp:464 90 {*movsi_internal}
     (nil))
(insn 768 767 769 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f5c1040fd80 *.LC23>)) ge2fitman_read_procpar.cpp:464 89 {*movdi_internal}
     (nil))
(insn 769 768 770 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:464 93 {*movqi_internal}
     (nil))
(call_insn 770 769 771 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:464 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 771 770 772 72 (set (reg/f:DI 0 ax [622])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:465 89 {*movdi_internal}
     (nil))
(insn 772 771 773 72 (set (reg:SI 0 ax [orig:238 D.25372 ] [238])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [622])
                (const_int 508 [0x1fc])) [0 procpar_info_283(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:465 90 {*movsi_internal}
     (nil))
(insn 773 772 774 72 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:238 D.25372 ] [238])) ge2fitman_read_procpar.cpp:465 90 {*movsi_internal}
     (nil))
(insn 774 773 775 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f5c1040fc60 *.LC21>)) ge2fitman_read_procpar.cpp:465 89 {*movdi_internal}
     (nil))
(insn 775 774 776 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:465 93 {*movqi_internal}
     (nil))
(call_insn 776 775 777 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f5c11b955e8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:465 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 777 776 778 72 (set (reg:DI 0 ax [623])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(insn 778 777 779 72 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) ge2fitman_read_procpar.cpp:478 90 {*movsi_internal}
     (nil))
(insn 779 778 780 72 (set (reg:DI 4 si)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(insn 780 779 781 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [623])) ge2fitman_read_procpar.cpp:478 89 {*movdi_internal}
     (nil))
(call_insn 781 780 782 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f5c119d6798 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:478 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 782 781 783 72 (set (reg:DI 0 ax [624])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 783 782 784 72 (set (reg:DI 5 di)
        (reg:DI 0 ax [624])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(call_insn 784 783 785 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftell") [flags 0x41]  <function_decl 0x7f5c119d6870 ftell>) [0 ftell S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:479 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 785 784 786 72 (set (reg:DI 0 ax [orig:239 D.25378 ] [239])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 786 785 787 72 (set (reg:SI 1 dx [orig:240 D.25372 ] [240])
        (reg:SI 0 ax [orig:239 D.25378 ] [239])) ge2fitman_read_procpar.cpp:479 90 {*movsi_internal}
     (nil))
(insn 787 786 788 72 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:479 89 {*movdi_internal}
     (nil))
(insn 788 787 789 72 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [625])
                (const_int 8 [0x8])) [0 infile_struct_74(D)->file_size+0 S4 A32])
        (reg:SI 1 dx [orig:240 D.25372 ] [240])) ge2fitman_read_procpar.cpp:479 90 {*movsi_internal}
     (nil))
(insn 789 788 790 72 (set (reg/f:DI 0 ax [626])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [0 main_header+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 790 789 791 72 (set (reg:DI 0 ax [orig:241 D.25378 ] [241])
        (mem/j:DI (plus:DI (reg/f:DI 0 ax [626])
                (const_int 24 [0x18])) [0 main_header_230(D)->ebytes.number+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 791 790 792 72 (parallel [
            (set (reg:DI 1 dx [orig:242 D.25378 ] [242])
                (ashift:DI (reg:DI 0 ax [orig:241 D.25378 ] [241])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:502 512 {*ashldi3_1}
     (nil))
(insn 792 791 793 72 (set (reg/f:DI 0 ax [627])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:502 89 {*movdi_internal}
     (nil))
(insn 793 792 794 72 (set (reg:SI 0 ax [orig:243 D.25372 ] [243])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [627])
                (const_int 324 [0x144])) [0 procpar_info_283(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:502 90 {*movsi_internal}
     (nil))
(insn 794 793 795 72 (set (reg:DI 0 ax [orig:244 D.25378 ] [244])
        (sign_extend:DI (reg:SI 0 ax [orig:243 D.25372 ] [243]))) ge2fitman_read_procpar.cpp:502 142 {*extendsidi2_rex64}
     (nil))
(insn 795 794 796 72 (parallel [
            (set (reg:DI 1 dx [orig:245 D.25378 ] [245])
                (mult:DI (reg:DI 1 dx [orig:242 D.25378 ] [242])
                    (reg:DI 0 ax [orig:244 D.25378 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:502 306 {*muldi3_1}
     (nil))
(insn 796 795 797 72 (set (reg/f:DI 0 ax [628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:503 89 {*movdi_internal}
     (nil))
(insn 797 796 798 72 (set (reg:SI 0 ax [orig:246 D.25372 ] [246])
        (mem/j:SI (reg/f:DI 0 ax [628]) [0 infile_struct_74(D)->num_datasets+0 S4 A32])) ge2fitman_read_procpar.cpp:503 90 {*movsi_internal}
     (nil))
(insn 798 797 799 72 (set (reg:DI 0 ax [orig:247 D.25378 ] [247])
        (sign_extend:DI (reg:SI 0 ax [orig:246 D.25372 ] [246]))) ge2fitman_read_procpar.cpp:503 142 {*extendsidi2_rex64}
     (nil))
(insn 799 798 800 72 (parallel [
            (set (reg:DI 1 dx [orig:248 D.25378 ] [248])
                (mult:DI (reg:DI 1 dx [orig:245 D.25378 ] [245])
                    (reg:DI 0 ax [orig:247 D.25378 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:503 306 {*muldi3_1}
     (nil))
(insn 800 799 801 72 (set (reg/f:DI 0 ax [629])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:503 89 {*movdi_internal}
     (nil))
(insn 801 800 802 72 (set (reg:SI 0 ax [orig:249 D.25372 ] [249])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [629])
                (const_int 508 [0x1fc])) [0 procpar_info_283(D)->num_channels+0 S4 A32])) ge2fitman_read_procpar.cpp:503 90 {*movsi_internal}
     (nil))
(insn 802 801 803 72 (set (reg:DI 0 ax [orig:250 D.25378 ] [250])
        (sign_extend:DI (reg:SI 0 ax [orig:249 D.25372 ] [249]))) ge2fitman_read_procpar.cpp:503 142 {*extendsidi2_rex64}
     (nil))
(insn 803 802 807 72 (parallel [
            (set (reg:DI 1 dx [orig:251 D.25378 ] [251])
                (mult:DI (reg:DI 1 dx [orig:248 D.25378 ] [248])
                    (reg:DI 0 ax [orig:250 D.25378 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:503 306 {*muldi3_1}
     (nil))
(insn 807 803 808 72 (set (reg:DI 0 ax [633])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 header_size+0 S8 A64])) ge2fitman_read_procpar.cpp:504 89 {*movdi_internal}
     (nil))
(insn 808 807 809 72 (parallel [
            (set (reg:DI 0 ax [632])
                (plus:DI (reg:DI 0 ax [633])
                    (reg:DI 1 dx [orig:251 D.25378 ] [251])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:504 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg:DI 1 dx [orig:251 D.25378 ] [251])
            (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [0 header_size+0 S8 A64]))
        (nil)))
(insn 809 808 810 72 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [0 calc_filesize+0 S8 A64])
        (reg:DI 0 ax [632])) ge2fitman_read_procpar.cpp:504 89 {*movdi_internal}
     (nil))
(insn 810 809 811 72 (set (reg:SF 21 xmm0 [634])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:550 129 {*movsf_internal}
     (nil))
(insn 811 810 812 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])
        (reg:SF 21 xmm0 [634])) ge2fitman_read_procpar.cpp:550 129 {*movsf_internal}
     (nil))
(insn 812 811 813 72 (set (reg/f:DI 0 ax [635])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(insn 813 812 814 72 (parallel [
            (set (reg/f:DI 0 ax [orig:252 D.25376 ] [252])
                (plus:DI (reg/f:DI 0 ax [635])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:552 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 814 813 815 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(insn 815 814 816 72 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:252 D.25376 ] [252])) ge2fitman_read_procpar.cpp:552 89 {*movdi_internal}
     (nil))
(call_insn/i 816 815 817 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:552 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 817 816 818 72 (set (reg:SI 0 ax [orig:253 D.25372 ] [253])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:552 90 {*movsi_internal}
     (nil))
(insn 818 817 819 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:253 D.25372 ] [253])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:552 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 819 818 820 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 844)
            (pc))) ge2fitman_read_procpar.cpp:552 612 {*jcc_1}
     (nil)
 -> 844)
;;  succ:       73 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 254 255 256 257 258 259 636 637 638 639
(note 820 819 821 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 73 (set (reg/f:DI 0 ax [636])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:554 89 {*movdi_internal}
     (nil))
(insn 822 821 823 73 (set (reg:QI 0 ax [orig:254 D.25373 ] [254])
        (mem:QI (reg/f:DI 0 ax [636]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:554 93 {*movqi_internal}
     (nil))
(insn 823 822 824 73 (set (reg:SI 1 dx [orig:255 D.25372 ] [255])
        (zero_extend:SI (reg:QI 0 ax [orig:254 D.25373 ] [254]))) ge2fitman_read_procpar.cpp:554 138 {*zero_extendqisi2}
     (nil))
(insn 824 823 825 73 (set (reg:SI 2 cx [orig:256 D.25372 ] [256])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 825 824 826 73 (set (reg:SI 5 di [orig:257 D.25372 ] [257])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 826 825 827 73 (parallel [
            (set (reg:DI 4 si [637])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:554 218 {*adddi_1}
     (nil))
(insn 827 826 828 73 (set (reg:DI 0 ax [638])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:554 89 {*movdi_internal}
     (nil))
(insn 828 827 829 73 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:255 D.25372 ] [255])) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 829 828 830 73 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:256 D.25372 ] [256])) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 830 829 831 73 (set (reg:DI 2 cx)
        (const_int 368 [0x170])) ge2fitman_read_procpar.cpp:554 89 {*movdi_internal}
     (nil))
(insn 831 830 833 73 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:257 D.25372 ] [257])) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 833 831 834 73 (set (reg:DI 5 di)
        (reg:DI 0 ax [638])) ge2fitman_read_procpar.cpp:554 89 {*movdi_internal}
     (nil))
(call_insn 834 833 835 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:554 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 835 834 836 73 (set (reg:SI 0 ax [orig:258 D.25372 ] [258])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:554 90 {*movsi_internal}
     (nil))
(insn 836 835 837 73 (parallel [
            (set (reg:SI 0 ax [639])
                (lshiftrt:SI (reg:SI 0 ax [orig:258 D.25372 ] [258])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:554 544 {*lshrsi3_1}
     (nil))
(insn 837 836 838 73 (set (reg:QI 0 ax [orig:259 D.25373 ] [259])
        (reg:QI 0 ax [639])) ge2fitman_read_procpar.cpp:554 93 {*movqi_internal}
     (nil))
(insn 838 837 839 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:259 D.25373 ] [259])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:554 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 839 838 840 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 878)
            (pc))) ge2fitman_read_procpar.cpp:554 612 {*jcc_1}
     (nil)
 -> 878)
;;  succ:       74 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 840 839 841 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 2067 74 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:557 90 {*movsi_internal}
     (nil))
(jump_insn 2067 841 2068 74 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:557 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2068 2067 844)
;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 260 261 640
(code_label 844 2068 845 75 39 "" [1 uses])
(note 845 844 846 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 846 845 847 75 (set (reg/f:DI 0 ax [640])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(insn 847 846 848 75 (parallel [
            (set (reg/f:DI 0 ax [orig:260 D.25376 ] [260])
                (plus:DI (reg/f:DI 0 ax [640])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:560 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 848 847 849 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(insn 849 848 850 75 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:260 D.25376 ] [260])) ge2fitman_read_procpar.cpp:560 89 {*movdi_internal}
     (nil))
(call_insn/i 850 849 851 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:560 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 851 850 852 75 (set (reg:SI 0 ax [orig:261 D.25372 ] [261])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:560 90 {*movsi_internal}
     (nil))
(insn 852 851 853 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:261 D.25372 ] [261])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:560 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 853 852 854 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 878)
            (pc))) ge2fitman_read_procpar.cpp:560 612 {*jcc_1}
     (nil)
 -> 878)
;;  succ:       76 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 262 263 264 265 266 267 641 642 643 644
(note 854 853 855 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 855 854 856 76 (set (reg/f:DI 0 ax [641])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:561 89 {*movdi_internal}
     (nil))
(insn 856 855 857 76 (set (reg:QI 0 ax [orig:262 D.25373 ] [262])
        (mem:QI (reg/f:DI 0 ax [641]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:561 93 {*movqi_internal}
     (nil))
(insn 857 856 858 76 (set (reg:SI 1 dx [orig:263 D.25372 ] [263])
        (zero_extend:SI (reg:QI 0 ax [orig:262 D.25373 ] [262]))) ge2fitman_read_procpar.cpp:561 138 {*zero_extendqisi2}
     (nil))
(insn 858 857 859 76 (set (reg:SI 2 cx [orig:264 D.25372 ] [264])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 859 858 860 76 (set (reg:SI 5 di [orig:265 D.25372 ] [265])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 860 859 861 76 (parallel [
            (set (reg:DI 4 si [642])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:561 218 {*adddi_1}
     (nil))
(insn 861 860 862 76 (set (reg:DI 0 ax [643])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:561 89 {*movdi_internal}
     (nil))
(insn 862 861 863 76 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:263 D.25372 ] [263])) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 863 862 864 76 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:264 D.25372 ] [264])) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 864 863 865 76 (set (reg:DI 2 cx)
        (const_int 368 [0x170])) ge2fitman_read_procpar.cpp:561 89 {*movdi_internal}
     (nil))
(insn 865 864 867 76 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:265 D.25372 ] [265])) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 867 865 868 76 (set (reg:DI 5 di)
        (reg:DI 0 ax [643])) ge2fitman_read_procpar.cpp:561 89 {*movdi_internal}
     (nil))
(call_insn 868 867 869 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:561 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 869 868 870 76 (set (reg:SI 0 ax [orig:266 D.25372 ] [266])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:561 90 {*movsi_internal}
     (nil))
(insn 870 869 871 76 (parallel [
            (set (reg:SI 0 ax [644])
                (lshiftrt:SI (reg:SI 0 ax [orig:266 D.25372 ] [266])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:561 544 {*lshrsi3_1}
     (nil))
(insn 871 870 872 76 (set (reg:QI 0 ax [orig:267 D.25373 ] [267])
        (reg:QI 0 ax [644])) ge2fitman_read_procpar.cpp:561 93 {*movqi_internal}
     (nil))
(insn 872 871 873 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:267 D.25373 ] [267])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:561 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 873 872 874 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 878)
            (pc))) ge2fitman_read_procpar.cpp:561 612 {*jcc_1}
     (nil)
 -> 878)
;;  succ:       77 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 874 873 875 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 875 874 2069 77 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:564 90 {*movsi_internal}
     (nil))
(jump_insn 2069 875 2070 77 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:564 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2070 2069 878)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              75
;;              76
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 268 645
(code_label 878 2070 879 78 40 "" [3 uses])
(note 879 878 880 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 78 (set (reg:SF 21 xmm0 [orig:268 D.25374 ] [268])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (nil))
(insn 881 880 882 78 (set (reg:SF 22 xmm1 [645])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 882 881 883 78 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:268 D.25374 ] [268])
            (reg:SF 22 xmm1 [645]))) ge2fitman_read_procpar.cpp:574 55 {*cmpiusf_sse}
     (nil))
(jump_insn 883 882 2003 78 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2015)
            (pc))) ge2fitman_read_procpar.cpp:574 612 {*jcc_1}
     (nil)
 -> 2015)
;;  succ:       80
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 268

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 268
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 268
;; lr  def 	 17 [flags] 646
(note 2003 883 884 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 884 2003 885 79 (set (reg:SF 22 xmm1 [646])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:574 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 885 884 886 79 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:268 D.25374 ] [268])
            (reg:SF 22 xmm1 [646]))) ge2fitman_read_procpar.cpp:574 55 {*cmpiusf_sse}
     (nil))
(jump_insn 886 885 2015 79 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2071)
            (pc))) ge2fitman_read_procpar.cpp:574 612 {*jcc_1}
     (nil)
 -> 2071)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;;              78
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 269 270 647
(code_label 2015 886 890 80 84 "" [1 uses])
(note 890 2015 891 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 891 890 892 80 (set (reg:SF 22 xmm1 [orig:269 D.25374 ] [269])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (nil))
(insn 892 891 893 80 (set (reg:SF 21 xmm0 [647])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC24") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 893 892 894 80 (set (reg:SF 21 xmm0 [orig:270 D.25374 ] [270])
        (div:SF (reg:SF 21 xmm0 [647])
            (reg:SF 22 xmm1 [orig:269 D.25374 ] [269]))) ge2fitman_read_procpar.cpp:575 804 {*fop_sf_1_sse}
     (nil))
(insn 894 893 2072 80 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])
        (reg:SF 21 xmm0 [orig:270 D.25374 ] [270])) ge2fitman_read_procpar.cpp:575 129 {*movsf_internal}
     (nil))
(jump_insn 2072 894 2073 80 (set (pc)
        (label_ref 912)) 654 {jump}
     (nil)
 -> 912)
;;  succ:       82 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 2073 2072 2071)
;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 271 272 648 649
(code_label 2071 2073 898 81 86 "" [1 uses])
(note 898 2071 899 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 900 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f5c1040fe10 *.LC25>)) ge2fitman_read_procpar.cpp:577 89 {*movdi_internal}
     (nil))
(call_insn 900 899 901 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5c11b96000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:577 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 901 900 902 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f5c1040fea0 *.LC26>)) ge2fitman_read_procpar.cpp:578 89 {*movdi_internal}
     (nil))
(call_insn 902 901 903 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5c11b96000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:578 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 903 902 904 81 (parallel [
            (set (reg:DI 0 ax [648])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:579 218 {*adddi_1}
     (nil))
(insn 904 903 905 81 (set (reg:DI 4 si)
        (reg:DI 0 ax [648])) ge2fitman_read_procpar.cpp:579 89 {*movdi_internal}
     (nil))
(insn 905 904 906 81 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f5c1040ff30 *.LC27>)) ge2fitman_read_procpar.cpp:579 89 {*movdi_internal}
     (nil))
(insn 906 905 907 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:579 93 {*movqi_internal}
     (nil))
(call_insn 907 906 908 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("scanf") [flags 0x41]  <function_decl 0x7f5c11b965e8 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:579 669 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 908 907 909 81 (set (reg:SF 22 xmm1 [orig:271 D.25374 ] [271])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 dwellin+0 S4 A64])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (nil))
(insn 909 908 910 81 (set (reg:SF 21 xmm0 [649])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC24") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 910 909 911 81 (set (reg:SF 21 xmm0 [orig:272 D.25374 ] [272])
        (div:SF (reg:SF 21 xmm0 [649])
            (reg:SF 22 xmm1 [orig:271 D.25374 ] [271]))) ge2fitman_read_procpar.cpp:580 804 {*fop_sf_1_sse}
     (nil))
(insn 911 910 912 81 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])
        (reg:SF 21 xmm0 [orig:272 D.25374 ] [272])) ge2fitman_read_procpar.cpp:580 129 {*movsf_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              80 [100.0%] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 273 274 275 276 277 278 650 651 652
(code_label 912 911 913 82 43 "" [1 uses])
(note 913 912 914 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 82 (set (reg/f:DI 0 ax [650])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:588 89 {*movdi_internal}
     (nil))
(insn 915 914 916 82 (set (reg:SI 0 ax [orig:273 D.25372 ] [273])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [650])
                (const_int 324 [0x144])) [0 procpar_info_283(D)->num_points+0 S4 A32])) ge2fitman_read_procpar.cpp:588 90 {*movsi_internal}
     (nil))
(insn 916 915 917 82 (set (reg:SF 21 xmm0 [orig:274 D.25374 ] [274])
        (float:SF (reg:SI 0 ax [orig:273 D.25372 ] [273]))) ge2fitman_read_procpar.cpp:588 199 {*floatsisf2_sse}
     (nil))
(insn 917 916 918 82 (set (reg:SF 22 xmm1 [orig:275 D.25374 ] [275])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [0 dwell+0 S4 A32])) ge2fitman_read_procpar.cpp:588 129 {*movsf_internal}
     (nil))
(insn 918 917 919 82 (set (reg:SF 21 xmm0 [orig:276 D.25374 ] [276])
        (mult:SF (reg:SF 21 xmm0 [orig:274 D.25374 ] [274])
            (reg:SF 22 xmm1 [orig:275 D.25374 ] [275]))) ge2fitman_read_procpar.cpp:588 797 {*fop_sf_comm_sse}
     (nil))
(insn 919 918 920 82 (set (reg/f:DI 0 ax [651])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:588 89 {*movdi_internal}
     (nil))
(insn 920 919 921 82 (set (mem/j:SF (reg/f:DI 0 ax [651]) [0 procpar_info_283(D)->acquision_time+0 S4 A64])
        (reg:SF 21 xmm0 [orig:276 D.25374 ] [276])) ge2fitman_read_procpar.cpp:588 129 {*movsf_internal}
     (nil))
(insn 921 920 922 82 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:594 90 {*movsi_internal}
     (nil))
(insn 922 921 923 82 (set (reg/f:DI 0 ax [652])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(insn 923 922 924 82 (parallel [
            (set (reg/f:DI 0 ax [orig:277 D.25376 ] [277])
                (plus:DI (reg/f:DI 0 ax [652])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:596 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 924 923 925 82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(insn 925 924 926 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:277 D.25376 ] [277])) ge2fitman_read_procpar.cpp:596 89 {*movdi_internal}
     (nil))
(call_insn/i 926 925 927 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:596 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 927 926 928 82 (set (reg:SI 0 ax [orig:278 D.25372 ] [278])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:596 90 {*movsi_internal}
     (nil))
(insn 928 927 929 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:278 D.25372 ] [278])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:596 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 929 928 930 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 954)
            (pc))) ge2fitman_read_procpar.cpp:596 612 {*jcc_1}
     (nil)
 -> 954)
;;  succ:       83 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 279 280 281 282 283 284 653 654 655 656
(note 930 929 931 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 931 930 932 83 (set (reg/f:DI 0 ax [653])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:598 89 {*movdi_internal}
     (nil))
(insn 932 931 933 83 (set (reg:QI 0 ax [orig:279 D.25373 ] [279])
        (mem:QI (reg/f:DI 0 ax [653]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:598 93 {*movqi_internal}
     (nil))
(insn 933 932 934 83 (set (reg:SI 1 dx [orig:280 D.25372 ] [280])
        (zero_extend:SI (reg:QI 0 ax [orig:279 D.25373 ] [279]))) ge2fitman_read_procpar.cpp:598 138 {*zero_extendqisi2}
     (nil))
(insn 934 933 935 83 (set (reg:SI 2 cx [orig:281 D.25372 ] [281])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 935 934 936 83 (set (reg:SI 5 di [orig:282 D.25372 ] [282])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 936 935 937 83 (parallel [
            (set (reg:DI 4 si [654])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:598 218 {*adddi_1}
     (nil))
(insn 937 936 938 83 (set (reg:DI 0 ax [655])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:598 89 {*movdi_internal}
     (nil))
(insn 938 937 939 83 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:280 D.25372 ] [280])) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 939 938 940 83 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:281 D.25372 ] [281])) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 940 939 941 83 (set (reg:DI 2 cx)
        (const_int 424 [0x1a8])) ge2fitman_read_procpar.cpp:598 89 {*movdi_internal}
     (nil))
(insn 941 940 943 83 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:282 D.25372 ] [282])) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 943 941 944 83 (set (reg:DI 5 di)
        (reg:DI 0 ax [655])) ge2fitman_read_procpar.cpp:598 89 {*movdi_internal}
     (nil))
(call_insn 944 943 945 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:598 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 945 944 946 83 (set (reg:SI 0 ax [orig:283 D.25372 ] [283])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:598 90 {*movsi_internal}
     (nil))
(insn 946 945 947 83 (parallel [
            (set (reg:SI 0 ax [656])
                (lshiftrt:SI (reg:SI 0 ax [orig:283 D.25372 ] [283])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:598 544 {*lshrsi3_1}
     (nil))
(insn 947 946 948 83 (set (reg:QI 0 ax [orig:284 D.25373 ] [284])
        (reg:QI 0 ax [656])) ge2fitman_read_procpar.cpp:598 93 {*movqi_internal}
     (nil))
(insn 948 947 949 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:284 D.25373 ] [284])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:598 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 949 948 950 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) ge2fitman_read_procpar.cpp:598 612 {*jcc_1}
     (nil)
 -> 988)
;;  succ:       84 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 950 949 951 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 951 950 2074 84 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:601 90 {*movsi_internal}
     (nil))
(jump_insn 2074 951 2075 84 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:601 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2075 2074 954)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 285 286 657
(code_label 954 2075 955 85 44 "" [1 uses])
(note 955 954 956 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 956 955 957 85 (set (reg/f:DI 0 ax [657])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(insn 957 956 958 85 (parallel [
            (set (reg/f:DI 0 ax [orig:285 D.25376 ] [285])
                (plus:DI (reg/f:DI 0 ax [657])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:604 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 958 957 959 85 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(insn 959 958 960 85 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:285 D.25376 ] [285])) ge2fitman_read_procpar.cpp:604 89 {*movdi_internal}
     (nil))
(call_insn/i 960 959 961 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:604 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 961 960 962 85 (set (reg:SI 0 ax [orig:286 D.25372 ] [286])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:604 90 {*movsi_internal}
     (nil))
(insn 962 961 963 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:286 D.25372 ] [286])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:604 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 963 962 964 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) ge2fitman_read_procpar.cpp:604 612 {*jcc_1}
     (nil)
 -> 988)
;;  succ:       86 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 287 288 289 290 291 292 658 659 660 661
(note 964 963 965 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 966 86 (set (reg/f:DI 0 ax [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:605 89 {*movdi_internal}
     (nil))
(insn 966 965 967 86 (set (reg:QI 0 ax [orig:287 D.25373 ] [287])
        (mem:QI (reg/f:DI 0 ax [658]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:605 93 {*movqi_internal}
     (nil))
(insn 967 966 968 86 (set (reg:SI 1 dx [orig:288 D.25372 ] [288])
        (zero_extend:SI (reg:QI 0 ax [orig:287 D.25373 ] [287]))) ge2fitman_read_procpar.cpp:605 138 {*zero_extendqisi2}
     (nil))
(insn 968 967 969 86 (set (reg:SI 2 cx [orig:289 D.25372 ] [289])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 969 968 970 86 (set (reg:SI 5 di [orig:290 D.25372 ] [290])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 970 969 971 86 (parallel [
            (set (reg:DI 4 si [659])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:605 218 {*adddi_1}
     (nil))
(insn 971 970 972 86 (set (reg:DI 0 ax [660])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:605 89 {*movdi_internal}
     (nil))
(insn 972 971 973 86 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:288 D.25372 ] [288])) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 973 972 974 86 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:289 D.25372 ] [289])) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 974 973 975 86 (set (reg:DI 2 cx)
        (const_int 424 [0x1a8])) ge2fitman_read_procpar.cpp:605 89 {*movdi_internal}
     (nil))
(insn 975 974 977 86 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:290 D.25372 ] [290])) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 977 975 978 86 (set (reg:DI 5 di)
        (reg:DI 0 ax [660])) ge2fitman_read_procpar.cpp:605 89 {*movdi_internal}
     (nil))
(call_insn 978 977 979 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:605 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 979 978 980 86 (set (reg:SI 0 ax [orig:291 D.25372 ] [291])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:605 90 {*movsi_internal}
     (nil))
(insn 980 979 981 86 (parallel [
            (set (reg:SI 0 ax [661])
                (lshiftrt:SI (reg:SI 0 ax [orig:291 D.25372 ] [291])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:605 544 {*lshrsi3_1}
     (nil))
(insn 981 980 982 86 (set (reg:QI 0 ax [orig:292 D.25373 ] [292])
        (reg:QI 0 ax [661])) ge2fitman_read_procpar.cpp:605 93 {*movqi_internal}
     (nil))
(insn 982 981 983 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:292 D.25373 ] [292])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:605 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 983 982 984 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) ge2fitman_read_procpar.cpp:605 612 {*jcc_1}
     (nil)
 -> 988)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 984 983 985 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 2076 87 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:608 90 {*movsi_internal}
     (nil))
(jump_insn 2076 985 2077 87 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:608 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2077 2076 988)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       83
;;              85
;;              86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 293 294 295 296 662 663 664 665 666
(code_label 988 2077 989 88 45 "" [3 uses])
(note 989 988 990 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 990 989 991 88 (set (reg:SI 0 ax [orig:293 D.25372 ] [293])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:612 90 {*movsi_internal}
     (nil))
(insn 991 990 992 88 (set (reg:DF 21 xmm0 [orig:294 D.25375 ] [294])
        (float:DF (reg:SI 0 ax [orig:293 D.25372 ] [293]))) ge2fitman_read_procpar.cpp:612 201 {*floatsidf2_sse}
     (nil))
(insn 992 991 993 88 (set (reg/f:DI 0 ax [662])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:612 89 {*movdi_internal}
     (nil))
(insn 993 992 994 88 (set (mem/j:DF (plus:DI (reg/f:DI 0 ax [662])
                (const_int 328 [0x148])) [0 procpar_info_283(D)->main_frequency+0 S8 A64])
        (reg:DF 21 xmm0 [orig:294 D.25375 ] [294])) ge2fitman_read_procpar.cpp:612 128 {*movdf_internal}
     (nil))
(insn 994 993 995 88 (set (reg/f:DI 0 ax [663])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:620 89 {*movdi_internal}
     (nil))
(insn 995 994 996 88 (set (reg:DF 21 xmm0 [664])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC28") [flags 0x2]) [0  S8 A64])) ge2fitman_read_procpar.cpp:620 128 {*movdf_internal}
     (nil))
(insn 996 995 997 88 (set (mem/j:DF (plus:DI (reg/f:DI 0 ax [663])
                (const_int 336 [0x150])) [0 procpar_info_283(D)->offset_frequency+0 S8 A64])
        (reg:DF 21 xmm0 [664])) ge2fitman_read_procpar.cpp:620 128 {*movdf_internal}
     (nil))
(insn 997 996 998 88 (set (reg:SF 21 xmm0 [665])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:624 129 {*movsf_internal}
     (nil))
(insn 998 997 999 88 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])
        (reg:SF 21 xmm0 [665])) ge2fitman_read_procpar.cpp:624 129 {*movsf_internal}
     (nil))
(insn 999 998 1000 88 (set (reg/f:DI 0 ax [666])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(insn 1000 999 1001 88 (parallel [
            (set (reg/f:DI 0 ax [orig:295 D.25376 ] [295])
                (plus:DI (reg/f:DI 0 ax [666])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:626 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1001 1000 1002 88 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(insn 1002 1001 1003 88 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:295 D.25376 ] [295])) ge2fitman_read_procpar.cpp:626 89 {*movdi_internal}
     (nil))
(call_insn/i 1003 1002 1004 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:626 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1004 1003 1005 88 (set (reg:SI 0 ax [orig:296 D.25372 ] [296])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:626 90 {*movsi_internal}
     (nil))
(insn 1005 1004 1006 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:296 D.25372 ] [296])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:626 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1006 1005 1007 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1031)
            (pc))) ge2fitman_read_procpar.cpp:626 612 {*jcc_1}
     (nil)
 -> 1031)
;;  succ:       89 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 297 298 299 300 301 302 667 668 669 670
(note 1007 1006 1008 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1008 1007 1009 89 (set (reg/f:DI 0 ax [667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:628 89 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 89 (set (reg:QI 0 ax [orig:297 D.25373 ] [297])
        (mem:QI (reg/f:DI 0 ax [667]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:628 93 {*movqi_internal}
     (nil))
(insn 1010 1009 1011 89 (set (reg:SI 1 dx [orig:298 D.25372 ] [298])
        (zero_extend:SI (reg:QI 0 ax [orig:297 D.25373 ] [297]))) ge2fitman_read_procpar.cpp:628 138 {*zero_extendqisi2}
     (nil))
(insn 1011 1010 1012 89 (set (reg:SI 2 cx [orig:299 D.25372 ] [299])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 89 (set (reg:SI 5 di [orig:300 D.25372 ] [300])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 89 (parallel [
            (set (reg:DI 4 si [668])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:628 218 {*adddi_1}
     (nil))
(insn 1014 1013 1015 89 (set (reg:DI 0 ax [669])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:628 89 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 89 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:298 D.25372 ] [298])) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1016 1015 1017 89 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:299 D.25372 ] [299])) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 89 (set (reg:DI 2 cx)
        (const_int 232 [0xe8])) ge2fitman_read_procpar.cpp:628 89 {*movdi_internal}
     (nil))
(insn 1018 1017 1020 89 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:300 D.25372 ] [300])) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1020 1018 1021 89 (set (reg:DI 5 di)
        (reg:DI 0 ax [669])) ge2fitman_read_procpar.cpp:628 89 {*movdi_internal}
     (nil))
(call_insn 1021 1020 1022 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:628 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1022 1021 1023 89 (set (reg:SI 0 ax [orig:301 D.25372 ] [301])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:628 90 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 89 (parallel [
            (set (reg:SI 0 ax [670])
                (lshiftrt:SI (reg:SI 0 ax [orig:301 D.25372 ] [301])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:628 544 {*lshrsi3_1}
     (nil))
(insn 1024 1023 1025 89 (set (reg:QI 0 ax [orig:302 D.25373 ] [302])
        (reg:QI 0 ax [670])) ge2fitman_read_procpar.cpp:628 93 {*movqi_internal}
     (nil))
(insn 1025 1024 1026 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:302 D.25373 ] [302])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:628 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1026 1025 1027 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1065)
            (pc))) ge2fitman_read_procpar.cpp:628 612 {*jcc_1}
     (nil)
 -> 1065)
;;  succ:       90 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1027 1026 1028 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1028 1027 2078 90 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:631 90 {*movsi_internal}
     (nil))
(jump_insn 2078 1028 2079 90 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:631 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2079 2078 1031)
;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       88
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 303 304 671
(code_label 1031 2079 1032 91 46 "" [1 uses])
(note 1032 1031 1033 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1034 91 (set (reg/f:DI 0 ax [671])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(insn 1034 1033 1035 91 (parallel [
            (set (reg/f:DI 0 ax [orig:303 D.25376 ] [303])
                (plus:DI (reg/f:DI 0 ax [671])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:634 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1035 1034 1036 91 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(insn 1036 1035 1037 91 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:303 D.25376 ] [303])) ge2fitman_read_procpar.cpp:634 89 {*movdi_internal}
     (nil))
(call_insn/i 1037 1036 1038 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:634 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1038 1037 1039 91 (set (reg:SI 0 ax [orig:304 D.25372 ] [304])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:634 90 {*movsi_internal}
     (nil))
(insn 1039 1038 1040 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:304 D.25372 ] [304])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:634 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1040 1039 1041 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1065)
            (pc))) ge2fitman_read_procpar.cpp:634 612 {*jcc_1}
     (nil)
 -> 1065)
;;  succ:       92 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 305 306 307 308 309 310 672 673 674 675
(note 1041 1040 1042 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1042 1041 1043 92 (set (reg/f:DI 0 ax [672])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:635 89 {*movdi_internal}
     (nil))
(insn 1043 1042 1044 92 (set (reg:QI 0 ax [orig:305 D.25373 ] [305])
        (mem:QI (reg/f:DI 0 ax [672]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:635 93 {*movqi_internal}
     (nil))
(insn 1044 1043 1045 92 (set (reg:SI 1 dx [orig:306 D.25372 ] [306])
        (zero_extend:SI (reg:QI 0 ax [orig:305 D.25373 ] [305]))) ge2fitman_read_procpar.cpp:635 138 {*zero_extendqisi2}
     (nil))
(insn 1045 1044 1046 92 (set (reg:SI 2 cx [orig:307 D.25372 ] [307])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1046 1045 1047 92 (set (reg:SI 5 di [orig:308 D.25372 ] [308])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1047 1046 1048 92 (parallel [
            (set (reg:DI 4 si [673])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:635 218 {*adddi_1}
     (nil))
(insn 1048 1047 1049 92 (set (reg:DI 0 ax [674])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:635 89 {*movdi_internal}
     (nil))
(insn 1049 1048 1050 92 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:306 D.25372 ] [306])) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1050 1049 1051 92 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:307 D.25372 ] [307])) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1051 1050 1052 92 (set (reg:DI 2 cx)
        (const_int 232 [0xe8])) ge2fitman_read_procpar.cpp:635 89 {*movdi_internal}
     (nil))
(insn 1052 1051 1054 92 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:308 D.25372 ] [308])) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1054 1052 1055 92 (set (reg:DI 5 di)
        (reg:DI 0 ax [674])) ge2fitman_read_procpar.cpp:635 89 {*movdi_internal}
     (nil))
(call_insn 1055 1054 1056 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:635 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1056 1055 1057 92 (set (reg:SI 0 ax [orig:309 D.25372 ] [309])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:635 90 {*movsi_internal}
     (nil))
(insn 1057 1056 1058 92 (parallel [
            (set (reg:SI 0 ax [675])
                (lshiftrt:SI (reg:SI 0 ax [orig:309 D.25372 ] [309])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:635 544 {*lshrsi3_1}
     (nil))
(insn 1058 1057 1059 92 (set (reg:QI 0 ax [orig:310 D.25373 ] [310])
        (reg:QI 0 ax [675])) ge2fitman_read_procpar.cpp:635 93 {*movqi_internal}
     (nil))
(insn 1059 1058 1060 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:310 D.25373 ] [310])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:635 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1060 1059 1061 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1065)
            (pc))) ge2fitman_read_procpar.cpp:635 612 {*jcc_1}
     (nil)
 -> 1065)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1061 1060 1062 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1062 1061 2080 93 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:638 90 {*movsi_internal}
     (nil))
(jump_insn 2080 1062 2081 93 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:638 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2081 2080 1065)
;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89
;;              91
;;              92
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 311 312 313 314 315 316 676 677 678 679 680
(code_label 1065 2081 1066 94 47 "" [3 uses])
(note 1066 1065 1067 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1067 1066 1068 94 (set (reg:SF 21 xmm0 [orig:311 D.25374 ] [311])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 temp_float+0 S4 A64])) ge2fitman_read_procpar.cpp:642 129 {*movsf_internal}
     (nil))
(insn 1068 1067 1069 94 (set (reg:SI 1 dx [orig:312 D.25372 ] [312])
        (fix:SI (reg:SF 21 xmm0 [orig:311 D.25374 ] [311]))) ge2fitman_read_procpar.cpp:642 170 {fix_truncsfsi_sse}
     (nil))
(insn 1069 1068 1070 94 (set (reg/f:DI 0 ax [676])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:642 89 {*movdi_internal}
     (nil))
(insn 1070 1069 1071 94 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [676])
                (const_int 320 [0x140])) [0 procpar_info_283(D)->num_transients+0 S4 A64])
        (reg:SI 1 dx [orig:312 D.25372 ] [312])) ge2fitman_read_procpar.cpp:642 90 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 94 (set (reg:SI 5 di [orig:313 D.25372 ] [313])
        (const_int 36 [0x24])) ge2fitman_read_procpar.cpp:647 90 {*movsi_internal}
     (nil))
(insn 1072 1071 1073 94 (set (reg/f:DI 0 ax [677])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:647 89 {*movdi_internal}
     (nil))
(insn 1073 1072 1074 94 (parallel [
            (set (reg/f:DI 4 si [orig:314 D.25381 ] [314])
                (plus:DI (reg/f:DI 0 ax [677])
                    (const_int 404 [0x194])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:647 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 404 [0x194]))
        (nil)))
(insn 1074 1073 1075 94 (set (reg:DI 1 dx [678])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 hospname_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:647 89 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 94 (set (reg:DI 0 ax [679])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:647 89 {*movdi_internal}
     (nil))
(insn 1076 1075 1077 94 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:647 90 {*movsi_internal}
     (nil))
(insn 1077 1076 1078 94 (set (reg:SI 37 r8)
        (const_int 33 [0x21])) ge2fitman_read_procpar.cpp:647 90 {*movsi_internal}
     (nil))
(insn 1078 1077 1079 94 (set (reg:DI 2 cx)
        (reg:DI 1 dx [678])) ge2fitman_read_procpar.cpp:647 89 {*movdi_internal}
     (nil))
(insn 1079 1078 1081 94 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:313 D.25372 ] [313])) ge2fitman_read_procpar.cpp:647 90 {*movsi_internal}
     (nil))
(insn 1081 1079 1082 94 (set (reg:DI 5 di)
        (reg:DI 0 ax [679])) ge2fitman_read_procpar.cpp:647 89 {*movdi_internal}
     (nil))
(call_insn 1082 1081 1083 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:647 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1083 1082 1084 94 (set (reg:SI 0 ax [orig:315 D.25372 ] [315])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:647 90 {*movsi_internal}
     (nil))
(insn 1084 1083 1085 94 (parallel [
            (set (reg:SI 0 ax [680])
                (lshiftrt:SI (reg:SI 0 ax [orig:315 D.25372 ] [315])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:647 544 {*lshrsi3_1}
     (nil))
(insn 1085 1084 1086 94 (set (reg:QI 0 ax [orig:316 D.25373 ] [316])
        (reg:QI 0 ax [680])) ge2fitman_read_procpar.cpp:647 93 {*movqi_internal}
     (nil))
(insn 1086 1085 1087 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:316 D.25373 ] [316])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:647 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1087 1086 1088 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1092)
            (pc))) ge2fitman_read_procpar.cpp:647 612 {*jcc_1}
     (nil)
 -> 1092)
;;  succ:       95 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1088 1087 1089 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 2082 95 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:650 90 {*movsi_internal}
     (nil))
(jump_insn 2082 1089 2083 95 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:650 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2083 2082 1092)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 317 318 319 320 681 682 683 684
(code_label 1092 2083 1093 96 48 "" [1 uses])
(note 1093 1092 1094 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1094 1093 1095 96 (set (reg:SI 5 di [orig:317 D.25372 ] [317])
        (const_int 28 [0x1c])) ge2fitman_read_procpar.cpp:656 90 {*movsi_internal}
     (nil))
(insn 1095 1094 1096 96 (set (reg/f:DI 0 ax [681])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:656 89 {*movdi_internal}
     (nil))
(insn 1096 1095 1097 96 (parallel [
            (set (reg/f:DI 4 si [orig:318 D.25382 ] [318])
                (plus:DI (reg/f:DI 0 ax [681])
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:656 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 440 [0x1b8]))
        (nil)))
(insn 1097 1096 1098 96 (set (reg:DI 1 dx [682])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 patname_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:656 89 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 96 (set (reg:DI 0 ax [683])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:656 89 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 96 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:656 90 {*movsi_internal}
     (nil))
(insn 1100 1099 1101 96 (set (reg:SI 37 r8)
        (const_int 25 [0x19])) ge2fitman_read_procpar.cpp:656 90 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 96 (set (reg:DI 2 cx)
        (reg:DI 1 dx [682])) ge2fitman_read_procpar.cpp:656 89 {*movdi_internal}
     (nil))
(insn 1102 1101 1104 96 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:317 D.25372 ] [317])) ge2fitman_read_procpar.cpp:656 90 {*movsi_internal}
     (nil))
(insn 1104 1102 1105 96 (set (reg:DI 5 di)
        (reg:DI 0 ax [683])) ge2fitman_read_procpar.cpp:656 89 {*movdi_internal}
     (nil))
(call_insn 1105 1104 1106 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:656 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1106 1105 1107 96 (set (reg:SI 0 ax [orig:319 D.25372 ] [319])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:656 90 {*movsi_internal}
     (nil))
(insn 1107 1106 1108 96 (parallel [
            (set (reg:SI 0 ax [684])
                (lshiftrt:SI (reg:SI 0 ax [orig:319 D.25372 ] [319])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:656 544 {*lshrsi3_1}
     (nil))
(insn 1108 1107 1109 96 (set (reg:QI 0 ax [orig:320 D.25373 ] [320])
        (reg:QI 0 ax [684])) ge2fitman_read_procpar.cpp:656 93 {*movqi_internal}
     (nil))
(insn 1109 1108 1110 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:320 D.25373 ] [320])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:656 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1110 1109 1111 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1115)
            (pc))) ge2fitman_read_procpar.cpp:656 612 {*jcc_1}
     (nil)
 -> 1115)
;;  succ:       97 (FALLTHRU)
;;              98
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1111 1110 1112 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1112 1111 2084 97 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:659 90 {*movsi_internal}
     (nil))
(jump_insn 2084 1112 2085 97 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:659 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2085 2084 1115)
;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       96
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 321 322 323 324 685 686 687 688
(code_label 1115 2085 1116 98 49 "" [1 uses])
(note 1116 1115 1117 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1117 1116 1118 98 (set (reg:SI 5 di [orig:321 D.25372 ] [321])
        (const_int 40 [0x28])) ge2fitman_read_procpar.cpp:665 90 {*movsi_internal}
     (nil))
(insn 1118 1117 1119 98 (set (reg/f:DI 0 ax [685])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:665 89 {*movdi_internal}
     (nil))
(insn 1119 1118 1120 98 (parallel [
            (set (reg/f:DI 4 si [orig:322 D.25383 ] [322])
                (plus:DI (reg/f:DI 0 ax [685])
                    (const_int 468 [0x1d4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:665 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 468 [0x1d4]))
        (nil)))
(insn 1120 1119 1121 98 (set (reg:DI 1 dx [686])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 pulse_name_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:665 89 {*movdi_internal}
     (nil))
(insn 1121 1120 1122 98 (set (reg:DI 0 ax [687])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:665 89 {*movdi_internal}
     (nil))
(insn 1122 1121 1123 98 (set (reg:SI 38 r9)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:665 90 {*movsi_internal}
     (nil))
(insn 1123 1122 1124 98 (set (reg:SI 37 r8)
        (const_int 33 [0x21])) ge2fitman_read_procpar.cpp:665 90 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 98 (set (reg:DI 2 cx)
        (reg:DI 1 dx [686])) ge2fitman_read_procpar.cpp:665 89 {*movdi_internal}
     (nil))
(insn 1125 1124 1127 98 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:321 D.25372 ] [321])) ge2fitman_read_procpar.cpp:665 90 {*movsi_internal}
     (nil))
(insn 1127 1125 1128 98 (set (reg:DI 5 di)
        (reg:DI 0 ax [687])) ge2fitman_read_procpar.cpp:665 89 {*movdi_internal}
     (nil))
(call_insn 1128 1127 1129 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:665 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1129 1128 1130 98 (set (reg:SI 0 ax [orig:323 D.25372 ] [323])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:665 90 {*movsi_internal}
     (nil))
(insn 1130 1129 1131 98 (parallel [
            (set (reg:SI 0 ax [688])
                (lshiftrt:SI (reg:SI 0 ax [orig:323 D.25372 ] [323])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:665 544 {*lshrsi3_1}
     (nil))
(insn 1131 1130 1132 98 (set (reg:QI 0 ax [orig:324 D.25373 ] [324])
        (reg:QI 0 ax [688])) ge2fitman_read_procpar.cpp:665 93 {*movqi_internal}
     (nil))
(insn 1132 1131 1133 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:324 D.25373 ] [324])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:665 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1133 1132 1134 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1138)
            (pc))) ge2fitman_read_procpar.cpp:665 612 {*jcc_1}
     (nil)
 -> 1138)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1134 1133 1135 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1135 1134 2086 99 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:668 90 {*movsi_internal}
     (nil))
(jump_insn 2086 1135 2087 99 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:668 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2087 2086 1138)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 325 326 327 328 329 330 689 690 691 692 693
(code_label 1138 2087 1139 100 50 "" [1 uses])
(note 1139 1138 1140 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1140 1139 1141 100 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 date_stamp+0 S8 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:674 89 {*movdi_internal}
     (nil))
(insn 1141 1140 1142 100 (set (reg/f:DI 0 ax [689])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:675 89 {*movdi_internal}
     (nil))
(insn 1142 1141 1143 100 (set (reg:QI 0 ax [orig:325 D.25373 ] [325])
        (mem:QI (reg/f:DI 0 ax [689]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:675 93 {*movqi_internal}
     (nil))
(insn 1143 1142 1144 100 (set (reg:SI 2 cx [orig:326 D.25372 ] [326])
        (zero_extend:SI (reg:QI 0 ax [orig:325 D.25373 ] [325]))) ge2fitman_read_procpar.cpp:675 138 {*zero_extendqisi2}
     (nil))
(insn 1144 1143 1145 100 (set (reg:SI 37 r8 [orig:327 D.25372 ] [327])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:675 90 {*movsi_internal}
     (nil))
(insn 1145 1144 1146 100 (set (reg:SI 5 di [orig:328 D.25372 ] [328])
        (const_int 8 [0x8])) ge2fitman_read_procpar.cpp:675 90 {*movsi_internal}
     (nil))
(insn 1146 1145 1147 100 (set (reg:DI 1 dx [690])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 ex_datetime_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:675 89 {*movdi_internal}
     (nil))
(insn 1147 1146 1148 100 (parallel [
            (set (reg:DI 4 si [691])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:675 218 {*adddi_1}
     (nil))
(insn 1148 1147 1149 100 (set (reg:DI 0 ax [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:675 89 {*movdi_internal}
     (nil))
(insn 1149 1148 1151 100 (set (reg:SI 38 r9)
        (reg:SI 2 cx [orig:326 D.25372 ] [326])) ge2fitman_read_procpar.cpp:675 90 {*movsi_internal}
     (nil))
(insn 1151 1149 1152 100 (set (reg:DI 2 cx)
        (reg:DI 1 dx [690])) ge2fitman_read_procpar.cpp:675 89 {*movdi_internal}
     (nil))
(insn 1152 1151 1154 100 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:328 D.25372 ] [328])) ge2fitman_read_procpar.cpp:675 90 {*movsi_internal}
     (nil))
(insn 1154 1152 1155 100 (set (reg:DI 5 di)
        (reg:DI 0 ax [692])) ge2fitman_read_procpar.cpp:675 89 {*movdi_internal}
     (nil))
(call_insn 1155 1154 1156 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:675 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1156 1155 1157 100 (set (reg:SI 0 ax [orig:329 D.25372 ] [329])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:675 90 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 100 (parallel [
            (set (reg:SI 0 ax [693])
                (lshiftrt:SI (reg:SI 0 ax [orig:329 D.25372 ] [329])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:675 544 {*lshrsi3_1}
     (nil))
(insn 1158 1157 1159 100 (set (reg:QI 0 ax [orig:330 D.25373 ] [330])
        (reg:QI 0 ax [693])) ge2fitman_read_procpar.cpp:675 93 {*movqi_internal}
     (nil))
(insn 1159 1158 1160 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:330 D.25373 ] [330])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:675 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1160 1159 1161 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1165)
            (pc))) ge2fitman_read_procpar.cpp:675 612 {*jcc_1}
     (nil)
 -> 1165)
;;  succ:       101 (FALLTHRU)
;;              102
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1161 1160 1162 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1162 1161 2088 101 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:678 90 {*movsi_internal}
     (nil))
(jump_insn 2088 1162 2089 101 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:678 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2089 2088 1165)
;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       100
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 331 332 333 334 335 336 337 338 339 340 694 695 696 697 698 699 700 701 702 703 704 705
(code_label 1165 2089 1166 102 51 "" [1 uses])
(note 1166 1165 1167 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1167 1166 1168 102 (parallel [
            (set (reg:DI 0 ax [694])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:681 218 {*adddi_1}
     (nil))
(insn 1168 1167 1169 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [694])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn 1169 1168 1170 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x7f5c11ace5e8 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1170 1169 1171 102 (set (reg/f:DI 0 ax [orig:331 D.25384 ] [331])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1171 1170 1172 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:331 D.25384 ] [331])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn/i 1172 1171 1173 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f5c11b8c0d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1173 1172 1174 102 (set (reg:DI 0 ax [orig:332 D.25385 ] [332])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1174 1173 1175 102 (parallel [
            (set (reg:DI 3 bx [orig:333 D.25385 ] [333])
                (plus:DI (reg:DI 0 ax [orig:332 D.25385 ] [332])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:680 218 {*adddi_1}
     (nil))
(insn 1175 1174 1176 102 (parallel [
            (set (reg:DI 0 ax [695])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:680 218 {*adddi_1}
     (nil))
(insn 1176 1175 1177 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [695])) ge2fitman_read_procpar.cpp:680 89 {*movdi_internal}
     (nil))
(call_insn 1177 1176 1178 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x7f5c11ace5e8 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:680 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1178 1177 1179 102 (set (reg/f:DI 2 cx [orig:334 D.25384 ] [334])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:680 89 {*movdi_internal}
     (nil))
(insn 1179 1178 1180 102 (set (reg/f:DI 0 ax [696])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:680 89 {*movdi_internal}
     (nil))
(insn 1180 1179 1181 102 (parallel [
            (set (reg/f:DI 0 ax [orig:335 D.25386 ] [335])
                (plus:DI (reg/f:DI 0 ax [696])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:680 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1181 1180 1182 102 (set (reg:DI 1 dx)
        (reg:DI 3 bx [orig:333 D.25385 ] [333])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1182 1181 1183 102 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:334 D.25384 ] [334])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(insn 1183 1182 1184 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:335 D.25386 ] [335])) ge2fitman_read_procpar.cpp:681 89 {*movdi_internal}
     (nil))
(call_insn 1184 1183 1185 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strncpy") [flags 0x41]  <function_decl 0x7f5c11b8caf8 strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:681 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1185 1184 1186 102 (parallel [
            (set (reg:DI 0 ax [697])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -104 [0xffffffffffffff98])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:682 218 {*adddi_1}
     (nil))
(insn 1186 1185 1187 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [697])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(call_insn 1187 1186 1188 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ctime") [flags 0x41]  <function_decl 0x7f5c11ace5e8 ctime>) [0 ctime S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:682 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1188 1187 1189 102 (set (reg/f:DI 0 ax [orig:336 D.25384 ] [336])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1189 1188 1190 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:336 D.25384 ] [336])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(call_insn/i 1190 1189 1191 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f5c11b8c0d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:682 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1191 1190 1192 102 (set (reg:DI 0 ax [orig:337 D.25385 ] [337])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 102 (parallel [
            (set (reg:DI 1 dx [orig:338 D.25385 ] [338])
                (plus:DI (reg:DI 0 ax [orig:337 D.25385 ] [337])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:682 218 {*adddi_1}
     (nil))
(insn 1193 1192 1194 102 (set (reg/f:DI 0 ax [698])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:682 89 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 102 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 0 ax [698])
                    (reg:DI 1 dx [orig:338 D.25385 ] [338]))
                (const_int 4 [0x4])) [0 procpar_info_283(D)->ex_datetime S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:682 93 {*movqi_internal}
     (nil))
(insn 1195 1194 1196 102 (set (reg/f:DI 0 ax [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:688 89 {*movdi_internal}
     (nil))
(insn 1196 1195 1197 102 (set (reg:SF 21 xmm0 [700])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:688 129 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 102 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [699])
                (const_int 376 [0x178])) [0 procpar_info_283(D)->vox1+0 S4 A64])
        (reg:SF 21 xmm0 [700])) ge2fitman_read_procpar.cpp:688 129 {*movsf_internal}
     (nil))
(insn 1198 1197 1199 102 (set (reg/f:DI 0 ax [701])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:689 89 {*movdi_internal}
     (nil))
(insn 1199 1198 1200 102 (set (reg:SF 21 xmm0 [702])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:689 129 {*movsf_internal}
     (nil))
(insn 1200 1199 1201 102 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [701])
                (const_int 380 [0x17c])) [0 procpar_info_283(D)->vox2+0 S4 A32])
        (reg:SF 21 xmm0 [702])) ge2fitman_read_procpar.cpp:689 129 {*movsf_internal}
     (nil))
(insn 1201 1200 1202 102 (set (reg/f:DI 0 ax [703])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:690 89 {*movdi_internal}
     (nil))
(insn 1202 1201 1203 102 (set (reg:SF 21 xmm0 [704])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:690 129 {*movsf_internal}
     (nil))
(insn 1203 1202 1204 102 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [703])
                (const_int 384 [0x180])) [0 procpar_info_283(D)->vox3+0 S4 A64])
        (reg:SF 21 xmm0 [704])) ge2fitman_read_procpar.cpp:690 129 {*movsf_internal}
     (nil))
(insn 1204 1203 1205 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 vox1index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:694 90 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 vox2index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:695 90 {*movsi_internal}
     (nil))
(insn 1206 1205 1207 102 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [0 vox3index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:696 90 {*movsi_internal}
     (nil))
(insn 1207 1206 1208 102 (set (reg/f:DI 0 ax [705])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(insn 1208 1207 1209 102 (parallel [
            (set (reg/f:DI 0 ax [orig:339 D.25376 ] [339])
                (plus:DI (reg/f:DI 0 ax [705])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:700 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1209 1208 1210 102 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(insn 1210 1209 1211 102 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:339 D.25376 ] [339])) ge2fitman_read_procpar.cpp:700 89 {*movdi_internal}
     (nil))
(call_insn/i 1211 1210 1212 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:700 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1212 1211 1213 102 (set (reg:SI 0 ax [orig:340 D.25372 ] [340])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:700 90 {*movsi_internal}
     (nil))
(insn 1213 1212 1214 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:340 D.25372 ] [340])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:700 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1214 1213 1215 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1233)
            (pc))) ge2fitman_read_procpar.cpp:700 612 {*jcc_1}
     (nil)
 -> 1233)
;;  succ:       103 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 341 342 343 344 345 346 706 707 708
(note 1215 1214 1216 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1216 1215 1217 103 (set (reg/f:DI 0 ax [706])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:701 89 {*movdi_internal}
     (nil))
(insn 1217 1216 1218 103 (set (reg:QI 0 ax [orig:341 D.25373 ] [341])
        (mem:QI (reg/f:DI 0 ax [706]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:701 93 {*movqi_internal}
     (nil))
(insn 1218 1217 1219 103 (set (reg:SI 1 dx [orig:342 D.25372 ] [342])
        (zero_extend:SI (reg:QI 0 ax [orig:341 D.25373 ] [341]))) ge2fitman_read_procpar.cpp:701 138 {*zero_extendqisi2}
     (nil))
(insn 1219 1218 1220 103 (set (reg:SI 2 cx [orig:343 D.25372 ] [343])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:701 90 {*movsi_internal}
     (nil))
(insn 1220 1219 1221 103 (set (reg:SI 5 di [orig:344 D.25372 ] [344])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:701 90 {*movsi_internal}
     (nil))
(insn 1221 1220 1222 103 (set (reg/f:DI 0 ax [707])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:701 89 {*movdi_internal}
     (nil))
(insn 1222 1221 1223 103 (parallel [
            (set (reg/f:DI 4 si [orig:345 D.25387 ] [345])
                (plus:DI (reg/f:DI 0 ax [707])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:701 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 376 [0x178]))
        (nil)))
(insn 1223 1222 1224 103 (set (reg:DI 0 ax [708])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1224 1223 1225 103 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:342 D.25372 ] [342])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 103 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:343 D.25372 ] [343])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1226 1225 1227 103 (set (reg:DI 2 cx)
        (const_int 380 [0x17c])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(insn 1227 1226 1229 103 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:344 D.25372 ] [344])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1229 1227 1230 103 (set (reg:DI 5 di)
        (reg:DI 0 ax [708])) ge2fitman_read_procpar.cpp:703 89 {*movdi_internal}
     (nil))
(call_insn 1230 1229 1231 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:703 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1231 1230 1232 103 (set (reg:SI 0 ax [orig:346 D.25372 ] [346])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
(insn 1232 1231 1233 103 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 vox1index+0 S4 A32])
        (reg:SI 0 ax [orig:346 D.25372 ] [346])) ge2fitman_read_procpar.cpp:703 90 {*movsi_internal}
     (nil))
;;  succ:       104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 347 348 709
(code_label 1233 1232 1234 104 52 "" [1 uses])
(note 1234 1233 1235 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1235 1234 1236 104 (set (reg/f:DI 0 ax [709])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(insn 1236 1235 1237 104 (parallel [
            (set (reg/f:DI 0 ax [orig:347 D.25376 ] [347])
                (plus:DI (reg/f:DI 0 ax [709])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:711 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1237 1236 1238 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(insn 1238 1237 1239 104 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:347 D.25376 ] [347])) ge2fitman_read_procpar.cpp:711 89 {*movdi_internal}
     (nil))
(call_insn/i 1239 1238 1240 104 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:711 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1240 1239 1241 104 (set (reg:SI 0 ax [orig:348 D.25372 ] [348])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:711 90 {*movsi_internal}
     (nil))
(insn 1241 1240 1242 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:348 D.25372 ] [348])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:711 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1242 1241 1243 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) ge2fitman_read_procpar.cpp:711 612 {*jcc_1}
     (nil)
 -> 1250)
;;  succ:       105 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1243 1242 1244 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1244 1243 1245 105 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [0 vox1index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:714 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1245 1244 1246 105 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1285)
            (pc))) ge2fitman_read_procpar.cpp:714 612 {*jcc_1}
     (nil)
 -> 1285)
;;  succ:       106 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1246 1245 1247 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1247 1246 2090 106 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:715 90 {*movsi_internal}
     (nil))
(jump_insn 2090 1247 2091 106 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:715 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2091 2090 1250)
;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       104
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 349 350 710
(code_label 1250 2091 1251 107 53 "" [1 uses])
(note 1251 1250 1252 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1252 1251 1253 107 (set (reg/f:DI 0 ax [710])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(insn 1253 1252 1254 107 (parallel [
            (set (reg/f:DI 0 ax [orig:349 D.25376 ] [349])
                (plus:DI (reg/f:DI 0 ax [710])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:720 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1254 1253 1255 107 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(insn 1255 1254 1256 107 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:349 D.25376 ] [349])) ge2fitman_read_procpar.cpp:720 89 {*movdi_internal}
     (nil))
(call_insn/i 1256 1255 1257 107 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:720 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1257 1256 1258 107 (set (reg:SI 0 ax [orig:350 D.25372 ] [350])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:720 90 {*movsi_internal}
     (nil))
(insn 1258 1257 1259 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:350 D.25372 ] [350])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:720 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1259 1258 1260 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1285)
            (pc))) ge2fitman_read_procpar.cpp:720 612 {*jcc_1}
     (nil)
 -> 1285)
;;  succ:       108 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 351 352 353 354 355 356 357 711 712 713 714
(note 1260 1259 1261 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1261 1260 1262 108 (set (reg/f:DI 0 ax [711])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:721 89 {*movdi_internal}
     (nil))
(insn 1262 1261 1263 108 (set (reg:QI 0 ax [orig:351 D.25373 ] [351])
        (mem:QI (reg/f:DI 0 ax [711]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:721 93 {*movqi_internal}
     (nil))
(insn 1263 1262 1264 108 (set (reg:SI 1 dx [orig:352 D.25372 ] [352])
        (zero_extend:SI (reg:QI 0 ax [orig:351 D.25373 ] [351]))) ge2fitman_read_procpar.cpp:721 138 {*zero_extendqisi2}
     (nil))
(insn 1264 1263 1265 108 (set (reg:SI 2 cx [orig:353 D.25372 ] [353])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1265 1264 1266 108 (set (reg:SI 5 di [orig:354 D.25372 ] [354])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1266 1265 1267 108 (set (reg/f:DI 0 ax [712])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:721 89 {*movdi_internal}
     (nil))
(insn 1267 1266 1268 108 (parallel [
            (set (reg/f:DI 4 si [orig:355 D.25387 ] [355])
                (plus:DI (reg/f:DI 0 ax [712])
                    (const_int 376 [0x178])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:721 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 376 [0x178]))
        (nil)))
(insn 1268 1267 1269 108 (set (reg:DI 0 ax [713])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:721 89 {*movdi_internal}
     (nil))
(insn 1269 1268 1270 108 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:352 D.25372 ] [352])) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1270 1269 1271 108 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:353 D.25372 ] [353])) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1271 1270 1272 108 (set (reg:DI 2 cx)
        (const_int 380 [0x17c])) ge2fitman_read_procpar.cpp:721 89 {*movdi_internal}
     (nil))
(insn 1272 1271 1274 108 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:354 D.25372 ] [354])) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1274 1272 1275 108 (set (reg:DI 5 di)
        (reg:DI 0 ax [713])) ge2fitman_read_procpar.cpp:721 89 {*movdi_internal}
     (nil))
(call_insn 1275 1274 1276 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:721 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1276 1275 1277 108 (set (reg:SI 0 ax [orig:356 D.25372 ] [356])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:721 90 {*movsi_internal}
     (nil))
(insn 1277 1276 1278 108 (parallel [
            (set (reg:SI 0 ax [714])
                (lshiftrt:SI (reg:SI 0 ax [orig:356 D.25372 ] [356])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:721 544 {*lshrsi3_1}
     (nil))
(insn 1278 1277 1279 108 (set (reg:QI 0 ax [orig:357 D.25373 ] [357])
        (reg:QI 0 ax [714])) ge2fitman_read_procpar.cpp:721 93 {*movqi_internal}
     (nil))
(insn 1279 1278 1280 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:357 D.25373 ] [357])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:721 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1280 1279 1281 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1285)
            (pc))) ge2fitman_read_procpar.cpp:721 612 {*jcc_1}
     (nil)
 -> 1285)
;;  succ:       109 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1281 1280 1282 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1282 1281 2092 109 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:724 90 {*movsi_internal}
     (nil))
(jump_insn 2092 1282 2093 109 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:724 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2093 2092 1285)
;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;;              107
;;              108
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 358 359 360 715 716 717
(code_label 1285 2093 1286 110 54 "" [3 uses])
(note 1286 1285 1287 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1287 1286 1288 110 (set (reg/f:DI 0 ax [715])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:730 89 {*movdi_internal}
     (nil))
(insn 1288 1287 1289 110 (set (reg:SF 21 xmm0 [orig:358 D.25374 ] [358])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [715])
                (const_int 376 [0x178])) [0 procpar_info_283(D)->vox1+0 S4 A64])) ge2fitman_read_procpar.cpp:730 129 {*movsf_internal}
     (nil))
(insn 1289 1288 1290 110 (set (reg/f:DI 0 ax [716])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:730 89 {*movdi_internal}
     (nil))
(insn 1290 1289 1291 110 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [716])
                (const_int 376 [0x178])) [0 procpar_info_283(D)->vox1+0 S4 A64])
        (reg:SF 21 xmm0 [orig:358 D.25374 ] [358])) ge2fitman_read_procpar.cpp:730 129 {*movsf_internal}
     (nil))
(insn 1291 1290 1292 110 (set (reg/f:DI 0 ax [717])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(insn 1292 1291 1293 110 (parallel [
            (set (reg/f:DI 0 ax [orig:359 D.25376 ] [359])
                (plus:DI (reg/f:DI 0 ax [717])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:734 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1293 1292 1294 110 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(insn 1294 1293 1295 110 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:359 D.25376 ] [359])) ge2fitman_read_procpar.cpp:734 89 {*movdi_internal}
     (nil))
(call_insn/i 1295 1294 1296 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:734 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1296 1295 1297 110 (set (reg:SI 0 ax [orig:360 D.25372 ] [360])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:734 90 {*movsi_internal}
     (nil))
(insn 1297 1296 1298 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:360 D.25372 ] [360])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:734 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1298 1297 1299 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) ge2fitman_read_procpar.cpp:734 612 {*jcc_1}
     (nil)
 -> 1324)
;;  succ:       111 (FALLTHRU)
;;              113
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 361 362 363 364 365 366 367 718 719 720 721
(note 1299 1298 1300 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1300 1299 1301 111 (set (reg/f:DI 0 ax [718])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:736 89 {*movdi_internal}
     (nil))
(insn 1301 1300 1302 111 (set (reg:QI 0 ax [orig:361 D.25373 ] [361])
        (mem:QI (reg/f:DI 0 ax [718]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:736 93 {*movqi_internal}
     (nil))
(insn 1302 1301 1303 111 (set (reg:SI 1 dx [orig:362 D.25372 ] [362])
        (zero_extend:SI (reg:QI 0 ax [orig:361 D.25373 ] [361]))) ge2fitman_read_procpar.cpp:736 138 {*zero_extendqisi2}
     (nil))
(insn 1303 1302 1304 111 (set (reg:SI 2 cx [orig:363 D.25372 ] [363])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 111 (set (reg:SI 5 di [orig:364 D.25372 ] [364])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1305 1304 1306 111 (set (reg/f:DI 0 ax [719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:736 89 {*movdi_internal}
     (nil))
(insn 1306 1305 1307 111 (parallel [
            (set (reg/f:DI 4 si [orig:365 D.25387 ] [365])
                (plus:DI (reg/f:DI 0 ax [719])
                    (const_int 380 [0x17c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:736 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 380 [0x17c]))
        (nil)))
(insn 1307 1306 1308 111 (set (reg:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:736 89 {*movdi_internal}
     (nil))
(insn 1308 1307 1309 111 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:362 D.25372 ] [362])) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1309 1308 1310 111 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:363 D.25372 ] [363])) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1310 1309 1311 111 (set (reg:DI 2 cx)
        (const_int 384 [0x180])) ge2fitman_read_procpar.cpp:736 89 {*movdi_internal}
     (nil))
(insn 1311 1310 1313 111 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:364 D.25372 ] [364])) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1313 1311 1314 111 (set (reg:DI 5 di)
        (reg:DI 0 ax [720])) ge2fitman_read_procpar.cpp:736 89 {*movdi_internal}
     (nil))
(call_insn 1314 1313 1315 111 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:736 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1315 1314 1316 111 (set (reg:SI 0 ax [orig:366 D.25372 ] [366])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:736 90 {*movsi_internal}
     (nil))
(insn 1316 1315 1317 111 (parallel [
            (set (reg:SI 0 ax [721])
                (lshiftrt:SI (reg:SI 0 ax [orig:366 D.25372 ] [366])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:736 544 {*lshrsi3_1}
     (nil))
(insn 1317 1316 1318 111 (set (reg:QI 0 ax [orig:367 D.25373 ] [367])
        (reg:QI 0 ax [721])) ge2fitman_read_procpar.cpp:736 93 {*movqi_internal}
     (nil))
(insn 1318 1317 1319 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:367 D.25373 ] [367])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:736 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1319 1318 1320 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1359)
            (pc))) ge2fitman_read_procpar.cpp:736 612 {*jcc_1}
     (nil)
 -> 1359)
;;  succ:       112 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1320 1319 1321 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1321 1320 2094 112 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:742 90 {*movsi_internal}
     (nil))
(jump_insn 2094 1321 2095 112 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:742 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2095 2094 1324)
;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 368 369 722
(code_label 1324 2095 1325 113 55 "" [1 uses])
(note 1325 1324 1326 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1325 1327 113 (set (reg/f:DI 0 ax [722])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(insn 1327 1326 1328 113 (parallel [
            (set (reg/f:DI 0 ax [orig:368 D.25376 ] [368])
                (plus:DI (reg/f:DI 0 ax [722])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:745 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1328 1327 1329 113 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(insn 1329 1328 1330 113 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:368 D.25376 ] [368])) ge2fitman_read_procpar.cpp:745 89 {*movdi_internal}
     (nil))
(call_insn/i 1330 1329 1331 113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:745 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1331 1330 1332 113 (set (reg:SI 0 ax [orig:369 D.25372 ] [369])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:745 90 {*movsi_internal}
     (nil))
(insn 1332 1331 1333 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:369 D.25372 ] [369])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:745 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1333 1332 1334 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1359)
            (pc))) ge2fitman_read_procpar.cpp:745 612 {*jcc_1}
     (nil)
 -> 1359)
;;  succ:       114 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 370 371 372 373 374 375 376 723 724 725 726
(note 1334 1333 1335 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1335 1334 1336 114 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:746 89 {*movdi_internal}
     (nil))
(insn 1336 1335 1337 114 (set (reg:QI 0 ax [orig:370 D.25373 ] [370])
        (mem:QI (reg/f:DI 0 ax [723]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:746 93 {*movqi_internal}
     (nil))
(insn 1337 1336 1338 114 (set (reg:SI 1 dx [orig:371 D.25372 ] [371])
        (zero_extend:SI (reg:QI 0 ax [orig:370 D.25373 ] [370]))) ge2fitman_read_procpar.cpp:746 138 {*zero_extendqisi2}
     (nil))
(insn 1338 1337 1339 114 (set (reg:SI 2 cx [orig:372 D.25372 ] [372])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1339 1338 1340 114 (set (reg:SI 5 di [orig:373 D.25372 ] [373])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1340 1339 1341 114 (set (reg/f:DI 0 ax [724])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:746 89 {*movdi_internal}
     (nil))
(insn 1341 1340 1342 114 (parallel [
            (set (reg/f:DI 4 si [orig:374 D.25387 ] [374])
                (plus:DI (reg/f:DI 0 ax [724])
                    (const_int 380 [0x17c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:746 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 380 [0x17c]))
        (nil)))
(insn 1342 1341 1343 114 (set (reg:DI 0 ax [725])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:746 89 {*movdi_internal}
     (nil))
(insn 1343 1342 1344 114 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:371 D.25372 ] [371])) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1344 1343 1345 114 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:372 D.25372 ] [372])) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1345 1344 1346 114 (set (reg:DI 2 cx)
        (const_int 384 [0x180])) ge2fitman_read_procpar.cpp:746 89 {*movdi_internal}
     (nil))
(insn 1346 1345 1348 114 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:373 D.25372 ] [373])) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1348 1346 1349 114 (set (reg:DI 5 di)
        (reg:DI 0 ax [725])) ge2fitman_read_procpar.cpp:746 89 {*movdi_internal}
     (nil))
(call_insn 1349 1348 1350 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:746 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1350 1349 1351 114 (set (reg:SI 0 ax [orig:375 D.25372 ] [375])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:746 90 {*movsi_internal}
     (nil))
(insn 1351 1350 1352 114 (parallel [
            (set (reg:SI 0 ax [726])
                (lshiftrt:SI (reg:SI 0 ax [orig:375 D.25372 ] [375])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:746 544 {*lshrsi3_1}
     (nil))
(insn 1352 1351 1353 114 (set (reg:QI 0 ax [orig:376 D.25373 ] [376])
        (reg:QI 0 ax [726])) ge2fitman_read_procpar.cpp:746 93 {*movqi_internal}
     (nil))
(insn 1353 1352 1354 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:376 D.25373 ] [376])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:746 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1354 1353 1355 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1359)
            (pc))) ge2fitman_read_procpar.cpp:746 612 {*jcc_1}
     (nil)
 -> 1359)
;;  succ:       115 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1355 1354 1356 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1356 1355 2096 115 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:749 90 {*movsi_internal}
     (nil))
(jump_insn 2096 1356 2097 115 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:749 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2097 2096 1359)
;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;;              113
;;              114
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 377 378 379 727 728 729
(code_label 1359 2097 1360 116 56 "" [3 uses])
(note 1360 1359 1361 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1361 1360 1362 116 (set (reg/f:DI 0 ax [727])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:754 89 {*movdi_internal}
     (nil))
(insn 1362 1361 1363 116 (set (reg:SF 21 xmm0 [orig:377 D.25374 ] [377])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [727])
                (const_int 380 [0x17c])) [0 procpar_info_283(D)->vox2+0 S4 A32])) ge2fitman_read_procpar.cpp:754 129 {*movsf_internal}
     (nil))
(insn 1363 1362 1364 116 (set (reg/f:DI 0 ax [728])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:754 89 {*movdi_internal}
     (nil))
(insn 1364 1363 1365 116 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [728])
                (const_int 380 [0x17c])) [0 procpar_info_283(D)->vox2+0 S4 A32])
        (reg:SF 21 xmm0 [orig:377 D.25374 ] [377])) ge2fitman_read_procpar.cpp:754 129 {*movsf_internal}
     (nil))
(insn 1365 1364 1366 116 (set (reg/f:DI 0 ax [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(insn 1366 1365 1367 116 (parallel [
            (set (reg/f:DI 0 ax [orig:378 D.25376 ] [378])
                (plus:DI (reg/f:DI 0 ax [729])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:757 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1367 1366 1368 116 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(insn 1368 1367 1369 116 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:378 D.25376 ] [378])) ge2fitman_read_procpar.cpp:757 89 {*movdi_internal}
     (nil))
(call_insn/i 1369 1368 1370 116 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:757 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1370 1369 1371 116 (set (reg:SI 0 ax [orig:379 D.25372 ] [379])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:757 90 {*movsi_internal}
     (nil))
(insn 1371 1370 1372 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:379 D.25372 ] [379])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:757 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1372 1371 1373 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1398)
            (pc))) ge2fitman_read_procpar.cpp:757 612 {*jcc_1}
     (nil)
 -> 1398)
;;  succ:       117 (FALLTHRU)
;;              119
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 380 381 382 383 384 385 386 730 731 732 733
(note 1373 1372 1374 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1374 1373 1375 117 (set (reg/f:DI 0 ax [730])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:759 89 {*movdi_internal}
     (nil))
(insn 1375 1374 1376 117 (set (reg:QI 0 ax [orig:380 D.25373 ] [380])
        (mem:QI (reg/f:DI 0 ax [730]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:759 93 {*movqi_internal}
     (nil))
(insn 1376 1375 1377 117 (set (reg:SI 1 dx [orig:381 D.25372 ] [381])
        (zero_extend:SI (reg:QI 0 ax [orig:380 D.25373 ] [380]))) ge2fitman_read_procpar.cpp:759 138 {*zero_extendqisi2}
     (nil))
(insn 1377 1376 1378 117 (set (reg:SI 2 cx [orig:382 D.25372 ] [382])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1378 1377 1379 117 (set (reg:SI 5 di [orig:383 D.25372 ] [383])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1379 1378 1380 117 (set (reg/f:DI 0 ax [731])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:759 89 {*movdi_internal}
     (nil))
(insn 1380 1379 1381 117 (parallel [
            (set (reg/f:DI 4 si [orig:384 D.25387 ] [384])
                (plus:DI (reg/f:DI 0 ax [731])
                    (const_int 384 [0x180])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:759 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 384 [0x180]))
        (nil)))
(insn 1381 1380 1382 117 (set (reg:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:759 89 {*movdi_internal}
     (nil))
(insn 1382 1381 1383 117 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:381 D.25372 ] [381])) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1383 1382 1384 117 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:382 D.25372 ] [382])) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1384 1383 1385 117 (set (reg:DI 2 cx)
        (const_int 388 [0x184])) ge2fitman_read_procpar.cpp:759 89 {*movdi_internal}
     (nil))
(insn 1385 1384 1387 117 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:383 D.25372 ] [383])) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1387 1385 1388 117 (set (reg:DI 5 di)
        (reg:DI 0 ax [732])) ge2fitman_read_procpar.cpp:759 89 {*movdi_internal}
     (nil))
(call_insn 1388 1387 1389 117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:759 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1389 1388 1390 117 (set (reg:SI 0 ax [orig:385 D.25372 ] [385])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:759 90 {*movsi_internal}
     (nil))
(insn 1390 1389 1391 117 (parallel [
            (set (reg:SI 0 ax [733])
                (lshiftrt:SI (reg:SI 0 ax [orig:385 D.25372 ] [385])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:759 544 {*lshrsi3_1}
     (nil))
(insn 1391 1390 1392 117 (set (reg:QI 0 ax [orig:386 D.25373 ] [386])
        (reg:QI 0 ax [733])) ge2fitman_read_procpar.cpp:759 93 {*movqi_internal}
     (nil))
(insn 1392 1391 1393 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:386 D.25373 ] [386])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:759 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1393 1392 1394 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1433)
            (pc))) ge2fitman_read_procpar.cpp:759 612 {*jcc_1}
     (nil)
 -> 1433)
;;  succ:       118 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1394 1393 1395 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1395 1394 2098 118 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:762 90 {*movsi_internal}
     (nil))
(jump_insn 2098 1395 2099 118 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:762 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2099 2098 1398)
;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       116
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 387 388 734
(code_label 1398 2099 1399 119 57 "" [1 uses])
(note 1399 1398 1400 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1400 1399 1401 119 (set (reg/f:DI 0 ax [734])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(insn 1401 1400 1402 119 (parallel [
            (set (reg/f:DI 0 ax [orig:387 D.25376 ] [387])
                (plus:DI (reg/f:DI 0 ax [734])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:765 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1402 1401 1403 119 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(insn 1403 1402 1404 119 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:387 D.25376 ] [387])) ge2fitman_read_procpar.cpp:765 89 {*movdi_internal}
     (nil))
(call_insn/i 1404 1403 1405 119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:765 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1405 1404 1406 119 (set (reg:SI 0 ax [orig:388 D.25372 ] [388])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:765 90 {*movsi_internal}
     (nil))
(insn 1406 1405 1407 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:388 D.25372 ] [388])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:765 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1407 1406 1408 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1433)
            (pc))) ge2fitman_read_procpar.cpp:765 612 {*jcc_1}
     (nil)
 -> 1433)
;;  succ:       120 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 389 390 391 392 393 394 395 735 736 737 738
(note 1408 1407 1409 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1409 1408 1410 120 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:766 89 {*movdi_internal}
     (nil))
(insn 1410 1409 1411 120 (set (reg:QI 0 ax [orig:389 D.25373 ] [389])
        (mem:QI (reg/f:DI 0 ax [735]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:766 93 {*movqi_internal}
     (nil))
(insn 1411 1410 1412 120 (set (reg:SI 1 dx [orig:390 D.25372 ] [390])
        (zero_extend:SI (reg:QI 0 ax [orig:389 D.25373 ] [389]))) ge2fitman_read_procpar.cpp:766 138 {*zero_extendqisi2}
     (nil))
(insn 1412 1411 1413 120 (set (reg:SI 2 cx [orig:391 D.25372 ] [391])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1413 1412 1414 120 (set (reg:SI 5 di [orig:392 D.25372 ] [392])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1414 1413 1415 120 (set (reg/f:DI 0 ax [736])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:766 89 {*movdi_internal}
     (nil))
(insn 1415 1414 1416 120 (parallel [
            (set (reg/f:DI 4 si [orig:393 D.25387 ] [393])
                (plus:DI (reg/f:DI 0 ax [736])
                    (const_int 384 [0x180])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:766 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 384 [0x180]))
        (nil)))
(insn 1416 1415 1417 120 (set (reg:DI 0 ax [737])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:766 89 {*movdi_internal}
     (nil))
(insn 1417 1416 1418 120 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:390 D.25372 ] [390])) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1418 1417 1419 120 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:391 D.25372 ] [391])) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1419 1418 1420 120 (set (reg:DI 2 cx)
        (const_int 388 [0x184])) ge2fitman_read_procpar.cpp:766 89 {*movdi_internal}
     (nil))
(insn 1420 1419 1422 120 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:392 D.25372 ] [392])) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1422 1420 1423 120 (set (reg:DI 5 di)
        (reg:DI 0 ax [737])) ge2fitman_read_procpar.cpp:766 89 {*movdi_internal}
     (nil))
(call_insn 1423 1422 1424 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:766 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1424 1423 1425 120 (set (reg:SI 0 ax [orig:394 D.25372 ] [394])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:766 90 {*movsi_internal}
     (nil))
(insn 1425 1424 1426 120 (parallel [
            (set (reg:SI 0 ax [738])
                (lshiftrt:SI (reg:SI 0 ax [orig:394 D.25372 ] [394])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:766 544 {*lshrsi3_1}
     (nil))
(insn 1426 1425 1427 120 (set (reg:QI 0 ax [orig:395 D.25373 ] [395])
        (reg:QI 0 ax [738])) ge2fitman_read_procpar.cpp:766 93 {*movqi_internal}
     (nil))
(insn 1427 1426 1428 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:395 D.25373 ] [395])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:766 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1428 1427 1429 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1433)
            (pc))) ge2fitman_read_procpar.cpp:766 612 {*jcc_1}
     (nil)
 -> 1433)
;;  succ:       121 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1429 1428 1430 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1430 1429 2100 121 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:769 90 {*movsi_internal}
     (nil))
(jump_insn 2100 1430 2101 121 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:769 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2101 2100 1433)
;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;;              119
;;              120
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 396 397 398 399 400 401 402 739 740 741 742 743 744 745 746
(code_label 1433 2101 1434 122 58 "" [3 uses])
(note 1434 1433 1435 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1435 1434 1436 122 (set (reg/f:DI 0 ax [739])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:776 89 {*movdi_internal}
     (nil))
(insn 1436 1435 1437 122 (set (reg:SF 21 xmm0 [orig:396 D.25374 ] [396])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [739])
                (const_int 384 [0x180])) [0 procpar_info_283(D)->vox3+0 S4 A64])) ge2fitman_read_procpar.cpp:776 129 {*movsf_internal}
     (nil))
(insn 1437 1436 1438 122 (set (reg/f:DI 0 ax [740])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:776 89 {*movdi_internal}
     (nil))
(insn 1438 1437 1439 122 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [740])
                (const_int 384 [0x180])) [0 procpar_info_283(D)->vox3+0 S4 A64])
        (reg:SF 21 xmm0 [orig:396 D.25374 ] [396])) ge2fitman_read_procpar.cpp:776 129 {*movsf_internal}
     (nil))
(insn 1439 1438 1440 122 (set (reg/f:DI 0 ax [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:780 89 {*movdi_internal}
     (nil))
(insn 1440 1439 1441 122 (set (reg:SF 21 xmm0 [742])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:780 129 {*movsf_internal}
     (nil))
(insn 1441 1440 1442 122 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [741])
                (const_int 400 [0x190])) [0 procpar_info_283(D)->vtheta+0 S4 A64])
        (reg:SF 21 xmm0 [742])) ge2fitman_read_procpar.cpp:780 129 {*movsf_internal}
     (nil))
(insn 1442 1441 1443 122 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 temp_int+0 S4 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:783 90 {*movsi_internal}
     (nil))
(insn 1443 1442 1444 122 (set (reg/f:DI 0 ax [743])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:793 89 {*movdi_internal}
     (nil))
(insn 1444 1443 1445 122 (set (reg:QI 0 ax [orig:397 D.25373 ] [397])
        (mem:QI (reg/f:DI 0 ax [743]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:793 93 {*movqi_internal}
     (nil))
(insn 1445 1444 1446 122 (set (reg:SI 1 dx [orig:398 D.25372 ] [398])
        (zero_extend:SI (reg:QI 0 ax [orig:397 D.25373 ] [397]))) ge2fitman_read_procpar.cpp:793 138 {*zero_extendqisi2}
     (nil))
(insn 1446 1445 1447 122 (set (reg:SI 2 cx [orig:399 D.25372 ] [399])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1447 1446 1448 122 (set (reg:SI 5 di [orig:400 D.25372 ] [400])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1448 1447 1449 122 (parallel [
            (set (reg:DI 4 si [744])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:793 218 {*adddi_1}
     (nil))
(insn 1449 1448 1450 122 (set (reg:DI 0 ax [745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:793 89 {*movdi_internal}
     (nil))
(insn 1450 1449 1451 122 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:398 D.25372 ] [398])) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1451 1450 1452 122 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:399 D.25372 ] [399])) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1452 1451 1453 122 (set (reg:DI 2 cx)
        (const_int 148416 [0x243c0])) ge2fitman_read_procpar.cpp:793 89 {*movdi_internal}
     (nil))
(insn 1453 1452 1455 122 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:400 D.25372 ] [400])) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1455 1453 1456 122 (set (reg:DI 5 di)
        (reg:DI 0 ax [745])) ge2fitman_read_procpar.cpp:793 89 {*movdi_internal}
     (nil))
(call_insn 1456 1455 1457 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:793 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1457 1456 1458 122 (set (reg:SI 0 ax [orig:401 D.25372 ] [401])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:793 90 {*movsi_internal}
     (nil))
(insn 1458 1457 1459 122 (parallel [
            (set (reg:SI 0 ax [746])
                (lshiftrt:SI (reg:SI 0 ax [orig:401 D.25372 ] [401])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:793 544 {*lshrsi3_1}
     (nil))
(insn 1459 1458 1460 122 (set (reg:QI 0 ax [orig:402 D.25373 ] [402])
        (reg:QI 0 ax [746])) ge2fitman_read_procpar.cpp:793 93 {*movqi_internal}
     (nil))
(insn 1460 1459 1461 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:402 D.25373 ] [402])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:793 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1461 1460 1462 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1466)
            (pc))) ge2fitman_read_procpar.cpp:793 612 {*jcc_1}
     (nil)
 -> 1466)
;;  succ:       123 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1462 1461 1463 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1463 1462 2102 123 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:796 90 {*movsi_internal}
     (nil))
(jump_insn 2102 1463 2103 123 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:796 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2103 2102 1466)
;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 403 404 405 406 407 408 409 410 411 747 748 749 750 751 752
(code_label 1466 2103 1467 124 59 "" [1 uses])
(note 1467 1466 1468 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1468 1467 1469 124 (set (reg:SI 0 ax [orig:403 D.25372 ] [403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 temp_int+0 S4 A64])) ge2fitman_read_procpar.cpp:800 90 {*movsi_internal}
     (nil))
(insn 1469 1468 1470 124 (set (reg:SF 21 xmm0 [orig:404 D.25374 ] [404])
        (float:SF (reg:SI 0 ax [orig:403 D.25372 ] [403]))) ge2fitman_read_procpar.cpp:800 199 {*floatsisf2_sse}
     (nil))
(insn 1470 1469 1471 124 (set (reg:SF 22 xmm1 [747])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC29") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:800 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 1471 1470 1472 124 (set (reg:SF 21 xmm0 [orig:405 D.25374 ] [405])
        (div:SF (reg:SF 21 xmm0 [orig:404 D.25374 ] [404])
            (reg:SF 22 xmm1 [747]))) ge2fitman_read_procpar.cpp:800 804 {*fop_sf_1_sse}
     (nil))
(insn 1472 1471 1473 124 (set (reg/f:DI 0 ax [748])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:800 89 {*movdi_internal}
     (nil))
(insn 1473 1472 1474 124 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [748])
                (const_int 344 [0x158])) [0 procpar_info_283(D)->te+0 S4 A64])
        (reg:SF 21 xmm0 [orig:405 D.25374 ] [405])) ge2fitman_read_procpar.cpp:800 129 {*movsf_internal}
     (nil))
(insn 1474 1473 1475 124 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 temp_int+0 S4 A64])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:805 90 {*movsi_internal}
     (nil))
(insn 1475 1474 1476 124 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:815 89 {*movdi_internal}
     (nil))
(insn 1476 1475 1477 124 (set (reg:QI 0 ax [orig:406 D.25373 ] [406])
        (mem:QI (reg/f:DI 0 ax [749]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:815 93 {*movqi_internal}
     (nil))
(insn 1477 1476 1478 124 (set (reg:SI 1 dx [orig:407 D.25372 ] [407])
        (zero_extend:SI (reg:QI 0 ax [orig:406 D.25373 ] [406]))) ge2fitman_read_procpar.cpp:815 138 {*zero_extendqisi2}
     (nil))
(insn 1478 1477 1479 124 (set (reg:SI 2 cx [orig:408 D.25372 ] [408])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1479 1478 1480 124 (set (reg:SI 5 di [orig:409 D.25372 ] [409])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1480 1479 1481 124 (parallel [
            (set (reg:DI 4 si [750])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:815 218 {*adddi_1}
     (nil))
(insn 1481 1480 1482 124 (set (reg:DI 0 ax [751])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:815 89 {*movdi_internal}
     (nil))
(insn 1482 1481 1483 124 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:407 D.25372 ] [407])) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1483 1482 1484 124 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:408 D.25372 ] [408])) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1484 1483 1485 124 (set (reg:DI 2 cx)
        (const_int 148408 [0x243b8])) ge2fitman_read_procpar.cpp:815 89 {*movdi_internal}
     (nil))
(insn 1485 1484 1487 124 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:409 D.25372 ] [409])) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1487 1485 1488 124 (set (reg:DI 5 di)
        (reg:DI 0 ax [751])) ge2fitman_read_procpar.cpp:815 89 {*movdi_internal}
     (nil))
(call_insn 1488 1487 1489 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:815 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1489 1488 1490 124 (set (reg:SI 0 ax [orig:410 D.25372 ] [410])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:815 90 {*movsi_internal}
     (nil))
(insn 1490 1489 1491 124 (parallel [
            (set (reg:SI 0 ax [752])
                (lshiftrt:SI (reg:SI 0 ax [orig:410 D.25372 ] [410])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:815 544 {*lshrsi3_1}
     (nil))
(insn 1491 1490 1492 124 (set (reg:QI 0 ax [orig:411 D.25373 ] [411])
        (reg:QI 0 ax [752])) ge2fitman_read_procpar.cpp:815 93 {*movqi_internal}
     (nil))
(insn 1492 1491 1493 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:411 D.25373 ] [411])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:815 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1493 1492 1494 124 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1498)
            (pc))) ge2fitman_read_procpar.cpp:815 612 {*jcc_1}
     (nil)
 -> 1498)
;;  succ:       125 (FALLTHRU)
;;              126
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1494 1493 1495 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1495 1494 2104 125 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:818 90 {*movsi_internal}
     (nil))
(jump_insn 2104 1495 2105 125 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:818 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2105 2104 1498)
;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 412 413 414 415 416 753 754 755 756 757 758 759 760 761
(code_label 1498 2105 1499 126 60 "" [1 uses])
(note 1499 1498 1500 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1499 1501 126 (set (reg:SI 0 ax [orig:412 D.25372 ] [412])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 temp_int+0 S4 A64])) ge2fitman_read_procpar.cpp:822 90 {*movsi_internal}
     (nil))
(insn 1501 1500 1502 126 (set (reg:SF 21 xmm0 [orig:413 D.25374 ] [413])
        (float:SF (reg:SI 0 ax [orig:412 D.25372 ] [412]))) ge2fitman_read_procpar.cpp:822 199 {*floatsisf2_sse}
     (nil))
(insn 1502 1501 1503 126 (set (reg:SF 22 xmm1 [753])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC29") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:822 129 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 1503 1502 1504 126 (set (reg:SF 21 xmm0 [orig:414 D.25374 ] [414])
        (div:SF (reg:SF 21 xmm0 [orig:413 D.25374 ] [413])
            (reg:SF 22 xmm1 [753]))) ge2fitman_read_procpar.cpp:822 804 {*fop_sf_1_sse}
     (nil))
(insn 1504 1503 1505 126 (set (reg/f:DI 0 ax [754])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:822 89 {*movdi_internal}
     (nil))
(insn 1505 1504 1506 126 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [754])
                (const_int 348 [0x15c])) [0 procpar_info_283(D)->tr+0 S4 A32])
        (reg:SF 21 xmm0 [orig:414 D.25374 ] [414])) ge2fitman_read_procpar.cpp:822 129 {*movsf_internal}
     (nil))
(insn 1506 1505 1507 126 (set (reg/f:DI 0 ax [755])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:828 89 {*movdi_internal}
     (nil))
(insn 1507 1506 1508 126 (set (reg:SF 21 xmm0 [756])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:828 129 {*movsf_internal}
     (nil))
(insn 1508 1507 1509 126 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [755])
                (const_int 364 [0x16c])) [0 procpar_info_283(D)->pos1+0 S4 A32])
        (reg:SF 21 xmm0 [756])) ge2fitman_read_procpar.cpp:828 129 {*movsf_internal}
     (nil))
(insn 1509 1508 1510 126 (set (reg/f:DI 0 ax [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:829 89 {*movdi_internal}
     (nil))
(insn 1510 1509 1511 126 (set (reg:SF 21 xmm0 [758])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:829 129 {*movsf_internal}
     (nil))
(insn 1511 1510 1512 126 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [757])
                (const_int 368 [0x170])) [0 procpar_info_283(D)->pos2+0 S4 A64])
        (reg:SF 21 xmm0 [758])) ge2fitman_read_procpar.cpp:829 129 {*movsf_internal}
     (nil))
(insn 1512 1511 1513 126 (set (reg/f:DI 0 ax [759])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:830 89 {*movdi_internal}
     (nil))
(insn 1513 1512 1514 126 (set (reg:SF 21 xmm0 [760])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_read_procpar.cpp:830 129 {*movsf_internal}
     (nil))
(insn 1514 1513 1515 126 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [759])
                (const_int 372 [0x174])) [0 procpar_info_283(D)->pos3+0 S4 A32])
        (reg:SF 21 xmm0 [760])) ge2fitman_read_procpar.cpp:830 129 {*movsf_internal}
     (nil))
(insn 1515 1514 1516 126 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 pos1index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:834 90 {*movsi_internal}
     (nil))
(insn 1516 1515 1517 126 (set (reg/f:DI 0 ax [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(insn 1517 1516 1518 126 (parallel [
            (set (reg/f:DI 0 ax [orig:415 D.25376 ] [415])
                (plus:DI (reg/f:DI 0 ax [761])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:836 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1518 1517 1519 126 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(insn 1519 1518 1520 126 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:415 D.25376 ] [415])) ge2fitman_read_procpar.cpp:836 89 {*movdi_internal}
     (nil))
(call_insn/i 1520 1519 1521 126 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:836 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1521 1520 1522 126 (set (reg:SI 0 ax [orig:416 D.25372 ] [416])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:836 90 {*movsi_internal}
     (nil))
(insn 1522 1521 1523 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:416 D.25372 ] [416])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:836 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1523 1522 1524 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1542)
            (pc))) ge2fitman_read_procpar.cpp:836 612 {*jcc_1}
     (nil)
 -> 1542)
;;  succ:       127 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 417 418 419 420 421 422 762 763 764
(note 1524 1523 1525 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1525 1524 1526 127 (set (reg/f:DI 0 ax [762])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:837 89 {*movdi_internal}
     (nil))
(insn 1526 1525 1527 127 (set (reg:QI 0 ax [orig:417 D.25373 ] [417])
        (mem:QI (reg/f:DI 0 ax [762]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:837 93 {*movqi_internal}
     (nil))
(insn 1527 1526 1528 127 (set (reg:SI 1 dx [orig:418 D.25372 ] [418])
        (zero_extend:SI (reg:QI 0 ax [orig:417 D.25373 ] [417]))) ge2fitman_read_procpar.cpp:837 138 {*zero_extendqisi2}
     (nil))
(insn 1528 1527 1529 127 (set (reg:SI 2 cx [orig:419 D.25372 ] [419])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:837 90 {*movsi_internal}
     (nil))
(insn 1529 1528 1530 127 (set (reg:SI 5 di [orig:420 D.25372 ] [420])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:837 90 {*movsi_internal}
     (nil))
(insn 1530 1529 1531 127 (set (reg/f:DI 0 ax [763])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:837 89 {*movdi_internal}
     (nil))
(insn 1531 1530 1532 127 (parallel [
            (set (reg/f:DI 4 si [orig:421 D.25387 ] [421])
                (plus:DI (reg/f:DI 0 ax [763])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:837 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1532 1531 1533 127 (set (reg:DI 0 ax [764])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1533 1532 1534 127 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:418 D.25372 ] [418])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1534 1533 1535 127 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:419 D.25372 ] [419])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1535 1534 1536 127 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(insn 1536 1535 1538 127 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:420 D.25372 ] [420])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1538 1536 1539 127 (set (reg:DI 5 di)
        (reg:DI 0 ax [764])) ge2fitman_read_procpar.cpp:839 89 {*movdi_internal}
     (nil))
(call_insn 1539 1538 1540 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:839 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1540 1539 1541 127 (set (reg:SI 0 ax [orig:422 D.25372 ] [422])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
(insn 1541 1540 1542 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 pos1index+0 S4 A32])
        (reg:SI 0 ax [orig:422 D.25372 ] [422])) ge2fitman_read_procpar.cpp:839 90 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       126
;;              127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 423 424 765
(code_label 1542 1541 1543 128 61 "" [1 uses])
(note 1543 1542 1544 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1544 1543 1545 128 (set (reg/f:DI 0 ax [765])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(insn 1545 1544 1546 128 (parallel [
            (set (reg/f:DI 0 ax [orig:423 D.25376 ] [423])
                (plus:DI (reg/f:DI 0 ax [765])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:842 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1546 1545 1547 128 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(insn 1547 1546 1548 128 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:423 D.25376 ] [423])) ge2fitman_read_procpar.cpp:842 89 {*movdi_internal}
     (nil))
(call_insn/i 1548 1547 1549 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:842 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1549 1548 1550 128 (set (reg:SI 0 ax [orig:424 D.25372 ] [424])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:842 90 {*movsi_internal}
     (nil))
(insn 1550 1549 1551 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:424 D.25372 ] [424])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:842 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1551 1550 1552 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1559)
            (pc))) ge2fitman_read_procpar.cpp:842 612 {*jcc_1}
     (nil)
 -> 1559)
;;  succ:       129 (FALLTHRU)
;;              131
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1552 1551 1553 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1553 1552 1554 129 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [0 pos1index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:843 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1554 1553 1555 129 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1594)
            (pc))) ge2fitman_read_procpar.cpp:843 612 {*jcc_1}
     (nil)
 -> 1594)
;;  succ:       130 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1555 1554 1556 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1556 1555 2106 130 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:844 90 {*movsi_internal}
     (nil))
(jump_insn 2106 1556 2107 130 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:844 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2107 2106 1559)
;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       128
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 425 426 766
(code_label 1559 2107 1560 131 62 "" [1 uses])
(note 1560 1559 1561 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1561 1560 1562 131 (set (reg/f:DI 0 ax [766])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(insn 1562 1561 1563 131 (parallel [
            (set (reg/f:DI 0 ax [orig:425 D.25376 ] [425])
                (plus:DI (reg/f:DI 0 ax [766])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:847 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1563 1562 1564 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(insn 1564 1563 1565 131 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:425 D.25376 ] [425])) ge2fitman_read_procpar.cpp:847 89 {*movdi_internal}
     (nil))
(call_insn/i 1565 1564 1566 131 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:847 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1566 1565 1567 131 (set (reg:SI 0 ax [orig:426 D.25372 ] [426])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:847 90 {*movsi_internal}
     (nil))
(insn 1567 1566 1568 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:426 D.25372 ] [426])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:847 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1568 1567 1569 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1594)
            (pc))) ge2fitman_read_procpar.cpp:847 612 {*jcc_1}
     (nil)
 -> 1594)
;;  succ:       132 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 427 428 429 430 431 432 433 767 768 769 770
(note 1569 1568 1570 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1570 1569 1571 132 (set (reg/f:DI 0 ax [767])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:848 89 {*movdi_internal}
     (nil))
(insn 1571 1570 1572 132 (set (reg:QI 0 ax [orig:427 D.25373 ] [427])
        (mem:QI (reg/f:DI 0 ax [767]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:848 93 {*movqi_internal}
     (nil))
(insn 1572 1571 1573 132 (set (reg:SI 1 dx [orig:428 D.25372 ] [428])
        (zero_extend:SI (reg:QI 0 ax [orig:427 D.25373 ] [427]))) ge2fitman_read_procpar.cpp:848 138 {*zero_extendqisi2}
     (nil))
(insn 1573 1572 1574 132 (set (reg:SI 2 cx [orig:429 D.25372 ] [429])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1574 1573 1575 132 (set (reg:SI 5 di [orig:430 D.25372 ] [430])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1575 1574 1576 132 (set (reg/f:DI 0 ax [768])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:848 89 {*movdi_internal}
     (nil))
(insn 1576 1575 1577 132 (parallel [
            (set (reg/f:DI 4 si [orig:431 D.25387 ] [431])
                (plus:DI (reg/f:DI 0 ax [768])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:848 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1577 1576 1578 132 (set (reg:DI 0 ax [769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:848 89 {*movdi_internal}
     (nil))
(insn 1578 1577 1579 132 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:428 D.25372 ] [428])) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1579 1578 1580 132 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:429 D.25372 ] [429])) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1580 1579 1581 132 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:848 89 {*movdi_internal}
     (nil))
(insn 1581 1580 1583 132 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:430 D.25372 ] [430])) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1583 1581 1584 132 (set (reg:DI 5 di)
        (reg:DI 0 ax [769])) ge2fitman_read_procpar.cpp:848 89 {*movdi_internal}
     (nil))
(call_insn 1584 1583 1585 132 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:848 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1585 1584 1586 132 (set (reg:SI 0 ax [orig:432 D.25372 ] [432])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:848 90 {*movsi_internal}
     (nil))
(insn 1586 1585 1587 132 (parallel [
            (set (reg:SI 0 ax [770])
                (lshiftrt:SI (reg:SI 0 ax [orig:432 D.25372 ] [432])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:848 544 {*lshrsi3_1}
     (nil))
(insn 1587 1586 1588 132 (set (reg:QI 0 ax [orig:433 D.25373 ] [433])
        (reg:QI 0 ax [770])) ge2fitman_read_procpar.cpp:848 93 {*movqi_internal}
     (nil))
(insn 1588 1587 1589 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:433 D.25373 ] [433])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:848 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1589 1588 1590 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1594)
            (pc))) ge2fitman_read_procpar.cpp:848 612 {*jcc_1}
     (nil)
 -> 1594)
;;  succ:       133 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1590 1589 1591 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1591 1590 2108 133 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:851 90 {*movsi_internal}
     (nil))
(jump_insn 2108 1591 2109 133 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:851 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2109 2108 1594)
;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129
;;              131
;;              132
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 434 435 771
(code_label 1594 2109 1595 134 63 "" [3 uses])
(note 1595 1594 1596 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1596 1595 1597 134 (set (reg/f:DI 0 ax [771])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(insn 1597 1596 1598 134 (parallel [
            (set (reg/f:DI 0 ax [orig:434 D.25376 ] [434])
                (plus:DI (reg/f:DI 0 ax [771])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:861 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1598 1597 1599 134 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(insn 1599 1598 1600 134 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:434 D.25376 ] [434])) ge2fitman_read_procpar.cpp:861 89 {*movdi_internal}
     (nil))
(call_insn/i 1600 1599 1601 134 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:861 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1601 1600 1602 134 (set (reg:SI 0 ax [orig:435 D.25372 ] [435])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:861 90 {*movsi_internal}
     (nil))
(insn 1602 1601 1603 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:435 D.25372 ] [435])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:861 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1603 1602 1604 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1629)
            (pc))) ge2fitman_read_procpar.cpp:861 612 {*jcc_1}
     (nil)
 -> 1629)
;;  succ:       135 (FALLTHRU)
;;              137
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 436 437 438 439 440 441 442 772 773 774 775
(note 1604 1603 1605 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1605 1604 1606 135 (set (reg/f:DI 0 ax [772])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:863 89 {*movdi_internal}
     (nil))
(insn 1606 1605 1607 135 (set (reg:QI 0 ax [orig:436 D.25373 ] [436])
        (mem:QI (reg/f:DI 0 ax [772]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:863 93 {*movqi_internal}
     (nil))
(insn 1607 1606 1608 135 (set (reg:SI 1 dx [orig:437 D.25372 ] [437])
        (zero_extend:SI (reg:QI 0 ax [orig:436 D.25373 ] [436]))) ge2fitman_read_procpar.cpp:863 138 {*zero_extendqisi2}
     (nil))
(insn 1608 1607 1609 135 (set (reg:SI 2 cx [orig:438 D.25372 ] [438])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1609 1608 1610 135 (set (reg:SI 5 di [orig:439 D.25372 ] [439])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1610 1609 1611 135 (set (reg/f:DI 0 ax [773])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:863 89 {*movdi_internal}
     (nil))
(insn 1611 1610 1612 135 (parallel [
            (set (reg/f:DI 4 si [orig:440 D.25387 ] [440])
                (plus:DI (reg/f:DI 0 ax [773])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:863 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1612 1611 1613 135 (set (reg:DI 0 ax [774])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:863 89 {*movdi_internal}
     (nil))
(insn 1613 1612 1614 135 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:437 D.25372 ] [437])) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1614 1613 1615 135 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:438 D.25372 ] [438])) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1615 1614 1616 135 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:863 89 {*movdi_internal}
     (nil))
(insn 1616 1615 1618 135 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:439 D.25372 ] [439])) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1618 1616 1619 135 (set (reg:DI 5 di)
        (reg:DI 0 ax [774])) ge2fitman_read_procpar.cpp:863 89 {*movdi_internal}
     (nil))
(call_insn 1619 1618 1620 135 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:863 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1620 1619 1621 135 (set (reg:SI 0 ax [orig:441 D.25372 ] [441])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:863 90 {*movsi_internal}
     (nil))
(insn 1621 1620 1622 135 (parallel [
            (set (reg:SI 0 ax [775])
                (lshiftrt:SI (reg:SI 0 ax [orig:441 D.25372 ] [441])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:863 544 {*lshrsi3_1}
     (nil))
(insn 1622 1621 1623 135 (set (reg:QI 0 ax [orig:442 D.25373 ] [442])
        (reg:QI 0 ax [775])) ge2fitman_read_procpar.cpp:863 93 {*movqi_internal}
     (nil))
(insn 1623 1622 1624 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:442 D.25373 ] [442])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:863 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1624 1623 1625 135 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1664)
            (pc))) ge2fitman_read_procpar.cpp:863 612 {*jcc_1}
     (nil)
 -> 1664)
;;  succ:       136 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1625 1624 1626 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1626 1625 2110 136 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:866 90 {*movsi_internal}
     (nil))
(jump_insn 2110 1626 2111 136 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:866 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2111 2110 1629)
;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 443 444 776
(code_label 1629 2111 1630 137 64 "" [1 uses])
(note 1630 1629 1631 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1631 1630 1632 137 (set (reg/f:DI 0 ax [776])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(insn 1632 1631 1633 137 (parallel [
            (set (reg/f:DI 0 ax [orig:443 D.25376 ] [443])
                (plus:DI (reg/f:DI 0 ax [776])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:869 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1633 1632 1634 137 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(insn 1634 1633 1635 137 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:443 D.25376 ] [443])) ge2fitman_read_procpar.cpp:869 89 {*movdi_internal}
     (nil))
(call_insn/i 1635 1634 1636 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:869 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1636 1635 1637 137 (set (reg:SI 0 ax [orig:444 D.25372 ] [444])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:869 90 {*movsi_internal}
     (nil))
(insn 1637 1636 1638 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:444 D.25372 ] [444])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:869 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1638 1637 1639 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1664)
            (pc))) ge2fitman_read_procpar.cpp:869 612 {*jcc_1}
     (nil)
 -> 1664)
;;  succ:       138 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 445 446 447 448 449 450 451 777 778 779 780
(note 1639 1638 1640 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1640 1639 1641 138 (set (reg/f:DI 0 ax [777])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:870 89 {*movdi_internal}
     (nil))
(insn 1641 1640 1642 138 (set (reg:QI 0 ax [orig:445 D.25373 ] [445])
        (mem:QI (reg/f:DI 0 ax [777]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:870 93 {*movqi_internal}
     (nil))
(insn 1642 1641 1643 138 (set (reg:SI 1 dx [orig:446 D.25372 ] [446])
        (zero_extend:SI (reg:QI 0 ax [orig:445 D.25373 ] [445]))) ge2fitman_read_procpar.cpp:870 138 {*zero_extendqisi2}
     (nil))
(insn 1643 1642 1644 138 (set (reg:SI 2 cx [orig:447 D.25372 ] [447])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1644 1643 1645 138 (set (reg:SI 5 di [orig:448 D.25372 ] [448])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1645 1644 1646 138 (set (reg/f:DI 0 ax [778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:870 89 {*movdi_internal}
     (nil))
(insn 1646 1645 1647 138 (parallel [
            (set (reg/f:DI 4 si [orig:449 D.25387 ] [449])
                (plus:DI (reg/f:DI 0 ax [778])
                    (const_int 364 [0x16c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:870 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 364 [0x16c]))
        (nil)))
(insn 1647 1646 1648 138 (set (reg:DI 0 ax [779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:870 89 {*movdi_internal}
     (nil))
(insn 1648 1647 1649 138 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:446 D.25372 ] [446])) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1649 1648 1650 138 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:447 D.25372 ] [447])) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1650 1649 1651 138 (set (reg:DI 2 cx)
        (const_int 392 [0x188])) ge2fitman_read_procpar.cpp:870 89 {*movdi_internal}
     (nil))
(insn 1651 1650 1653 138 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:448 D.25372 ] [448])) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1653 1651 1654 138 (set (reg:DI 5 di)
        (reg:DI 0 ax [779])) ge2fitman_read_procpar.cpp:870 89 {*movdi_internal}
     (nil))
(call_insn 1654 1653 1655 138 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:870 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1655 1654 1656 138 (set (reg:SI 0 ax [orig:450 D.25372 ] [450])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:870 90 {*movsi_internal}
     (nil))
(insn 1656 1655 1657 138 (parallel [
            (set (reg:SI 0 ax [780])
                (lshiftrt:SI (reg:SI 0 ax [orig:450 D.25372 ] [450])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:870 544 {*lshrsi3_1}
     (nil))
(insn 1657 1656 1658 138 (set (reg:QI 0 ax [orig:451 D.25373 ] [451])
        (reg:QI 0 ax [780])) ge2fitman_read_procpar.cpp:870 93 {*movqi_internal}
     (nil))
(insn 1658 1657 1659 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:451 D.25373 ] [451])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:870 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1659 1658 1660 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1664)
            (pc))) ge2fitman_read_procpar.cpp:870 612 {*jcc_1}
     (nil)
 -> 1664)
;;  succ:       139 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1660 1659 1661 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1661 1660 2112 139 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:873 90 {*movsi_internal}
     (nil))
(jump_insn 2112 1661 2113 139 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:873 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2113 2112 1664)
;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       135
;;              137
;;              138
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 452 453 781
(code_label 1664 2113 1665 140 65 "" [3 uses])
(note 1665 1664 1666 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1666 1665 1667 140 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 pos2index+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:880 90 {*movsi_internal}
     (nil))
(insn 1667 1666 1668 140 (set (reg/f:DI 0 ax [781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(insn 1668 1667 1669 140 (parallel [
            (set (reg/f:DI 0 ax [orig:452 D.25376 ] [452])
                (plus:DI (reg/f:DI 0 ax [781])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:882 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1669 1668 1670 140 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(insn 1670 1669 1671 140 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:452 D.25376 ] [452])) ge2fitman_read_procpar.cpp:882 89 {*movdi_internal}
     (nil))
(call_insn/i 1671 1670 1672 140 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:882 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1672 1671 1673 140 (set (reg:SI 0 ax [orig:453 D.25372 ] [453])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:882 90 {*movsi_internal}
     (nil))
(insn 1673 1672 1674 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:453 D.25372 ] [453])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:882 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1674 1673 1675 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1693)
            (pc))) ge2fitman_read_procpar.cpp:882 612 {*jcc_1}
     (nil)
 -> 1693)
;;  succ:       141 (FALLTHRU)
;;              142
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 454 455 456 457 458 459 782 783 784
(note 1675 1674 1676 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1676 1675 1677 141 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:883 89 {*movdi_internal}
     (nil))
(insn 1677 1676 1678 141 (set (reg:QI 0 ax [orig:454 D.25373 ] [454])
        (mem:QI (reg/f:DI 0 ax [782]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:883 93 {*movqi_internal}
     (nil))
(insn 1678 1677 1679 141 (set (reg:SI 1 dx [orig:455 D.25372 ] [455])
        (zero_extend:SI (reg:QI 0 ax [orig:454 D.25373 ] [454]))) ge2fitman_read_procpar.cpp:883 138 {*zero_extendqisi2}
     (nil))
(insn 1679 1678 1680 141 (set (reg:SI 2 cx [orig:456 D.25372 ] [456])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:883 90 {*movsi_internal}
     (nil))
(insn 1680 1679 1681 141 (set (reg:SI 5 di [orig:457 D.25372 ] [457])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:883 90 {*movsi_internal}
     (nil))
(insn 1681 1680 1682 141 (set (reg/f:DI 0 ax [783])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:883 89 {*movdi_internal}
     (nil))
(insn 1682 1681 1683 141 (parallel [
            (set (reg/f:DI 4 si [orig:458 D.25387 ] [458])
                (plus:DI (reg/f:DI 0 ax [783])
                    (const_int 368 [0x170])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:883 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 368 [0x170]))
        (nil)))
(insn 1683 1682 1684 141 (set (reg:DI 0 ax [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1684 1683 1685 141 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:455 D.25372 ] [455])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1685 1684 1686 141 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:456 D.25372 ] [456])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1686 1685 1687 141 (set (reg:DI 2 cx)
        (const_int 396 [0x18c])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(insn 1687 1686 1689 141 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:457 D.25372 ] [457])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1689 1687 1690 141 (set (reg:DI 5 di)
        (reg:DI 0 ax [784])) ge2fitman_read_procpar.cpp:885 89 {*movdi_internal}
     (nil))
(call_insn 1690 1689 1691 141 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:885 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1691 1690 1692 141 (set (reg:SI 0 ax [orig:459 D.25372 ] [459])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
(insn 1692 1691 1693 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [0 pos2index+0 S4 A32])
        (reg:SI 0 ax [orig:459 D.25372 ] [459])) ge2fitman_read_procpar.cpp:885 90 {*movsi_internal}
     (nil))
;;  succ:       142 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140
;;              141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 460 461 785
(code_label 1693 1692 1694 142 66 "" [1 uses])
(note 1694 1693 1695 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1695 1694 1696 142 (set (reg/f:DI 0 ax [785])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(insn 1696 1695 1697 142 (parallel [
            (set (reg/f:DI 0 ax [orig:460 D.25376 ] [460])
                (plus:DI (reg/f:DI 0 ax [785])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:888 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1697 1696 1698 142 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(insn 1698 1697 1699 142 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:460 D.25376 ] [460])) ge2fitman_read_procpar.cpp:888 89 {*movdi_internal}
     (nil))
(call_insn/i 1699 1698 1700 142 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:888 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1700 1699 1701 142 (set (reg:SI 0 ax [orig:461 D.25372 ] [461])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:888 90 {*movsi_internal}
     (nil))
(insn 1701 1700 1702 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:461 D.25372 ] [461])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:888 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1702 1701 1703 142 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1710)
            (pc))) ge2fitman_read_procpar.cpp:888 612 {*jcc_1}
     (nil)
 -> 1710)
;;  succ:       143 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1703 1702 1704 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1704 1703 1705 143 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [0 pos2index+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:889 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1705 1704 1706 143 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1745)
            (pc))) ge2fitman_read_procpar.cpp:889 612 {*jcc_1}
     (nil)
 -> 1745)
;;  succ:       144 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1706 1705 1707 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1707 1706 2114 144 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:890 90 {*movsi_internal}
     (nil))
(jump_insn 2114 1707 2115 144 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:890 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2115 2114 1710)
;; basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 462 463 786
(code_label 1710 2115 1711 145 67 "" [1 uses])
(note 1711 1710 1712 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1712 1711 1713 145 (set (reg/f:DI 0 ax [786])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(insn 1713 1712 1714 145 (parallel [
            (set (reg/f:DI 0 ax [orig:462 D.25376 ] [462])
                (plus:DI (reg/f:DI 0 ax [786])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:893 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1714 1713 1715 145 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(insn 1715 1714 1716 145 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:462 D.25376 ] [462])) ge2fitman_read_procpar.cpp:893 89 {*movdi_internal}
     (nil))
(call_insn/i 1716 1715 1717 145 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:893 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1717 1716 1718 145 (set (reg:SI 0 ax [orig:463 D.25372 ] [463])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:893 90 {*movsi_internal}
     (nil))
(insn 1718 1717 1719 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:463 D.25372 ] [463])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:893 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1719 1718 1720 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1745)
            (pc))) ge2fitman_read_procpar.cpp:893 612 {*jcc_1}
     (nil)
 -> 1745)
;;  succ:       146 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 464 465 466 467 468 469 470 787 788 789 790
(note 1720 1719 1721 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1721 1720 1722 146 (set (reg/f:DI 0 ax [787])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:894 89 {*movdi_internal}
     (nil))
(insn 1722 1721 1723 146 (set (reg:QI 0 ax [orig:464 D.25373 ] [464])
        (mem:QI (reg/f:DI 0 ax [787]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:894 93 {*movqi_internal}
     (nil))
(insn 1723 1722 1724 146 (set (reg:SI 1 dx [orig:465 D.25372 ] [465])
        (zero_extend:SI (reg:QI 0 ax [orig:464 D.25373 ] [464]))) ge2fitman_read_procpar.cpp:894 138 {*zero_extendqisi2}
     (nil))
(insn 1724 1723 1725 146 (set (reg:SI 2 cx [orig:466 D.25372 ] [466])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1725 1724 1726 146 (set (reg:SI 5 di [orig:467 D.25372 ] [467])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1726 1725 1727 146 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:894 89 {*movdi_internal}
     (nil))
(insn 1727 1726 1728 146 (parallel [
            (set (reg/f:DI 4 si [orig:468 D.25387 ] [468])
                (plus:DI (reg/f:DI 0 ax [788])
                    (const_int 368 [0x170])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:894 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 368 [0x170]))
        (nil)))
(insn 1728 1727 1729 146 (set (reg:DI 0 ax [789])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:894 89 {*movdi_internal}
     (nil))
(insn 1729 1728 1730 146 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:465 D.25372 ] [465])) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1730 1729 1731 146 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:466 D.25372 ] [466])) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1731 1730 1732 146 (set (reg:DI 2 cx)
        (const_int 396 [0x18c])) ge2fitman_read_procpar.cpp:894 89 {*movdi_internal}
     (nil))
(insn 1732 1731 1734 146 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:467 D.25372 ] [467])) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1734 1732 1735 146 (set (reg:DI 5 di)
        (reg:DI 0 ax [789])) ge2fitman_read_procpar.cpp:894 89 {*movdi_internal}
     (nil))
(call_insn 1735 1734 1736 146 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:894 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1736 1735 1737 146 (set (reg:SI 0 ax [orig:469 D.25372 ] [469])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:894 90 {*movsi_internal}
     (nil))
(insn 1737 1736 1738 146 (parallel [
            (set (reg:SI 0 ax [790])
                (lshiftrt:SI (reg:SI 0 ax [orig:469 D.25372 ] [469])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:894 544 {*lshrsi3_1}
     (nil))
(insn 1738 1737 1739 146 (set (reg:QI 0 ax [orig:470 D.25373 ] [470])
        (reg:QI 0 ax [790])) ge2fitman_read_procpar.cpp:894 93 {*movqi_internal}
     (nil))
(insn 1739 1738 1740 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:470 D.25373 ] [470])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:894 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1740 1739 1741 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1745)
            (pc))) ge2fitman_read_procpar.cpp:894 612 {*jcc_1}
     (nil)
 -> 1745)
;;  succ:       147 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1741 1740 1742 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1742 1741 2116 147 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:897 90 {*movsi_internal}
     (nil))
(jump_insn 2116 1742 2117 147 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:897 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2117 2116 1745)
;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143
;;              145
;;              146
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 471 472 791
(code_label 1745 2117 1746 148 68 "" [3 uses])
(note 1746 1745 1747 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1747 1746 1748 148 (set (reg/f:DI 0 ax [791])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(insn 1748 1747 1749 148 (parallel [
            (set (reg/f:DI 0 ax [orig:471 D.25376 ] [471])
                (plus:DI (reg/f:DI 0 ax [791])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:928 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1749 1748 1750 148 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(insn 1750 1749 1751 148 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:471 D.25376 ] [471])) ge2fitman_read_procpar.cpp:928 89 {*movdi_internal}
     (nil))
(call_insn/i 1751 1750 1752 148 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:928 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1752 1751 1753 148 (set (reg:SI 0 ax [orig:472 D.25372 ] [472])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:928 90 {*movsi_internal}
     (nil))
(insn 1753 1752 1754 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:472 D.25372 ] [472])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:928 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1754 1753 1755 148 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1780)
            (pc))) ge2fitman_read_procpar.cpp:928 612 {*jcc_1}
     (nil)
 -> 1780)
;;  succ:       149 (FALLTHRU)
;;              151
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148 (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 473 474 475 476 477 478 479 792 793 794 795
(note 1755 1754 1756 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1756 1755 1757 149 (set (reg/f:DI 0 ax [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:930 89 {*movdi_internal}
     (nil))
(insn 1757 1756 1758 149 (set (reg:QI 0 ax [orig:473 D.25373 ] [473])
        (mem:QI (reg/f:DI 0 ax [792]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:930 93 {*movqi_internal}
     (nil))
(insn 1758 1757 1759 149 (set (reg:SI 1 dx [orig:474 D.25372 ] [474])
        (zero_extend:SI (reg:QI 0 ax [orig:473 D.25373 ] [473]))) ge2fitman_read_procpar.cpp:930 138 {*zero_extendqisi2}
     (nil))
(insn 1759 1758 1760 149 (set (reg:SI 2 cx [orig:475 D.25372 ] [475])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 149 (set (reg:SI 5 di [orig:476 D.25372 ] [476])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1761 1760 1762 149 (set (reg/f:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:930 89 {*movdi_internal}
     (nil))
(insn 1762 1761 1763 149 (parallel [
            (set (reg/f:DI 4 si [orig:477 D.25387 ] [477])
                (plus:DI (reg/f:DI 0 ax [793])
                    (const_int 372 [0x174])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:930 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 372 [0x174]))
        (nil)))
(insn 1763 1762 1764 149 (set (reg:DI 0 ax [794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:930 89 {*movdi_internal}
     (nil))
(insn 1764 1763 1765 149 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:474 D.25372 ] [474])) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1765 1764 1766 149 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:475 D.25372 ] [475])) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1766 1765 1767 149 (set (reg:DI 2 cx)
        (const_int 400 [0x190])) ge2fitman_read_procpar.cpp:930 89 {*movdi_internal}
     (nil))
(insn 1767 1766 1769 149 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:476 D.25372 ] [476])) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1769 1767 1770 149 (set (reg:DI 5 di)
        (reg:DI 0 ax [794])) ge2fitman_read_procpar.cpp:930 89 {*movdi_internal}
     (nil))
(call_insn 1770 1769 1771 149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:930 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1771 1770 1772 149 (set (reg:SI 0 ax [orig:478 D.25372 ] [478])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:930 90 {*movsi_internal}
     (nil))
(insn 1772 1771 1773 149 (parallel [
            (set (reg:SI 0 ax [795])
                (lshiftrt:SI (reg:SI 0 ax [orig:478 D.25372 ] [478])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:930 544 {*lshrsi3_1}
     (nil))
(insn 1773 1772 1774 149 (set (reg:QI 0 ax [orig:479 D.25373 ] [479])
        (reg:QI 0 ax [795])) ge2fitman_read_procpar.cpp:930 93 {*movqi_internal}
     (nil))
(insn 1774 1773 1775 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:479 D.25373 ] [479])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:930 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1775 1774 1776 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1815)
            (pc))) ge2fitman_read_procpar.cpp:930 612 {*jcc_1}
     (nil)
 -> 1815)
;;  succ:       150 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1776 1775 1777 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1777 1776 2118 150 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:933 90 {*movsi_internal}
     (nil))
(jump_insn 2118 1777 2119 150 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:933 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2119 2118 1780)
;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       148
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 480 481 796
(code_label 1780 2119 1781 151 69 "" [1 uses])
(note 1781 1780 1782 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1782 1781 1783 151 (set (reg/f:DI 0 ax [796])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(insn 1783 1782 1784 151 (parallel [
            (set (reg/f:DI 0 ax [orig:480 D.25376 ] [480])
                (plus:DI (reg/f:DI 0 ax [796])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:936 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1784 1783 1785 151 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(insn 1785 1784 1786 151 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:480 D.25376 ] [480])) ge2fitman_read_procpar.cpp:936 89 {*movdi_internal}
     (nil))
(call_insn/i 1786 1785 1787 151 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:936 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1787 1786 1788 151 (set (reg:SI 0 ax [orig:481 D.25372 ] [481])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:936 90 {*movsi_internal}
     (nil))
(insn 1788 1787 1789 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:481 D.25372 ] [481])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:936 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1789 1788 1790 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1815)
            (pc))) ge2fitman_read_procpar.cpp:936 612 {*jcc_1}
     (nil)
 -> 1815)
;;  succ:       152 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 482 483 484 485 486 487 488 797 798 799 800
(note 1790 1789 1791 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1791 1790 1792 152 (set (reg/f:DI 0 ax [797])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:937 89 {*movdi_internal}
     (nil))
(insn 1792 1791 1793 152 (set (reg:QI 0 ax [orig:482 D.25373 ] [482])
        (mem:QI (reg/f:DI 0 ax [797]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:937 93 {*movqi_internal}
     (nil))
(insn 1793 1792 1794 152 (set (reg:SI 1 dx [orig:483 D.25372 ] [483])
        (zero_extend:SI (reg:QI 0 ax [orig:482 D.25373 ] [482]))) ge2fitman_read_procpar.cpp:937 138 {*zero_extendqisi2}
     (nil))
(insn 1794 1793 1795 152 (set (reg:SI 2 cx [orig:484 D.25372 ] [484])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1795 1794 1796 152 (set (reg:SI 5 di [orig:485 D.25372 ] [485])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1796 1795 1797 152 (set (reg/f:DI 0 ax [798])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:937 89 {*movdi_internal}
     (nil))
(insn 1797 1796 1798 152 (parallel [
            (set (reg/f:DI 4 si [orig:486 D.25387 ] [486])
                (plus:DI (reg/f:DI 0 ax [798])
                    (const_int 372 [0x174])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:937 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -152 [0xffffffffffffff68])) [0 procpar_info+0 S8 A64])
            (const_int 372 [0x174]))
        (nil)))
(insn 1798 1797 1799 152 (set (reg:DI 0 ax [799])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:937 89 {*movdi_internal}
     (nil))
(insn 1799 1798 1800 152 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:483 D.25372 ] [483])) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1800 1799 1801 152 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:484 D.25372 ] [484])) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1801 1800 1802 152 (set (reg:DI 2 cx)
        (const_int 400 [0x190])) ge2fitman_read_procpar.cpp:937 89 {*movdi_internal}
     (nil))
(insn 1802 1801 1804 152 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:485 D.25372 ] [485])) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1804 1802 1805 152 (set (reg:DI 5 di)
        (reg:DI 0 ax [799])) ge2fitman_read_procpar.cpp:937 89 {*movdi_internal}
     (nil))
(call_insn 1805 1804 1806 152 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:937 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1806 1805 1807 152 (set (reg:SI 0 ax [orig:487 D.25372 ] [487])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:937 90 {*movsi_internal}
     (nil))
(insn 1807 1806 1808 152 (parallel [
            (set (reg:SI 0 ax [800])
                (lshiftrt:SI (reg:SI 0 ax [orig:487 D.25372 ] [487])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:937 544 {*lshrsi3_1}
     (nil))
(insn 1808 1807 1809 152 (set (reg:QI 0 ax [orig:488 D.25373 ] [488])
        (reg:QI 0 ax [800])) ge2fitman_read_procpar.cpp:937 93 {*movqi_internal}
     (nil))
(insn 1809 1808 1810 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:488 D.25373 ] [488])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:937 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1810 1809 1811 152 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1815)
            (pc))) ge2fitman_read_procpar.cpp:937 612 {*jcc_1}
     (nil)
 -> 1815)
;;  succ:       153 (FALLTHRU)
;;              154
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1811 1810 1812 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1812 1811 2120 153 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:940 90 {*movsi_internal}
     (nil))
(jump_insn 2120 1812 2121 153 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:940 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2121 2120 1815)
;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       149
;;              151
;;              152
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 489 490 801
(code_label 1815 2121 1816 154 70 "" [3 uses])
(note 1816 1815 1817 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1817 1816 1818 154 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:947 90 {*movsi_internal}
     (nil))
(insn 1818 1817 1819 154 (set (reg/f:DI 0 ax [801])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(insn 1819 1818 1820 154 (parallel [
            (set (reg/f:DI 0 ax [orig:489 D.25376 ] [489])
                (plus:DI (reg/f:DI 0 ax [801])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:949 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1820 1819 1821 154 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(insn 1821 1820 1822 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:489 D.25376 ] [489])) ge2fitman_read_procpar.cpp:949 89 {*movdi_internal}
     (nil))
(call_insn/i 1822 1821 1823 154 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:949 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1823 1822 1824 154 (set (reg:SI 0 ax [orig:490 D.25372 ] [490])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:949 90 {*movsi_internal}
     (nil))
(insn 1824 1823 1825 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:490 D.25372 ] [490])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:949 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1825 1824 1826 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1850)
            (pc))) ge2fitman_read_procpar.cpp:949 612 {*jcc_1}
     (nil)
 -> 1850)
;;  succ:       155 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 491 492 493 494 495 496 802 803 804 805
(note 1826 1825 1827 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1827 1826 1828 155 (set (reg/f:DI 0 ax [802])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:950 89 {*movdi_internal}
     (nil))
(insn 1828 1827 1829 155 (set (reg:QI 0 ax [orig:491 D.25373 ] [491])
        (mem:QI (reg/f:DI 0 ax [802]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:950 93 {*movqi_internal}
     (nil))
(insn 1829 1828 1830 155 (set (reg:SI 1 dx [orig:492 D.25372 ] [492])
        (zero_extend:SI (reg:QI 0 ax [orig:491 D.25373 ] [491]))) ge2fitman_read_procpar.cpp:950 138 {*zero_extendqisi2}
     (nil))
(insn 1830 1829 1831 155 (set (reg:SI 2 cx [orig:493 D.25372 ] [493])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1831 1830 1832 155 (set (reg:SI 5 di [orig:494 D.25372 ] [494])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1832 1831 1833 155 (parallel [
            (set (reg:DI 4 si [803])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:950 218 {*adddi_1}
     (nil))
(insn 1833 1832 1834 155 (set (reg:DI 0 ax [804])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:950 89 {*movdi_internal}
     (nil))
(insn 1834 1833 1835 155 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:492 D.25372 ] [492])) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1835 1834 1836 155 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:493 D.25372 ] [493])) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1836 1835 1837 155 (set (reg:DI 2 cx)
        (const_int 412 [0x19c])) ge2fitman_read_procpar.cpp:950 89 {*movdi_internal}
     (nil))
(insn 1837 1836 1839 155 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:494 D.25372 ] [494])) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1839 1837 1840 155 (set (reg:DI 5 di)
        (reg:DI 0 ax [804])) ge2fitman_read_procpar.cpp:950 89 {*movdi_internal}
     (nil))
(call_insn 1840 1839 1841 155 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:950 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1841 1840 1842 155 (set (reg:SI 0 ax [orig:495 D.25372 ] [495])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:950 90 {*movsi_internal}
     (nil))
(insn 1842 1841 1843 155 (parallel [
            (set (reg:SI 0 ax [805])
                (lshiftrt:SI (reg:SI 0 ax [orig:495 D.25372 ] [495])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:950 544 {*lshrsi3_1}
     (nil))
(insn 1843 1842 1844 155 (set (reg:QI 0 ax [orig:496 D.25373 ] [496])
        (reg:QI 0 ax [805])) ge2fitman_read_procpar.cpp:950 93 {*movqi_internal}
     (nil))
(insn 1844 1843 1845 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:496 D.25373 ] [496])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:950 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1845 1844 1846 155 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1850)
            (pc))) ge2fitman_read_procpar.cpp:950 612 {*jcc_1}
     (nil)
 -> 1850)
;;  succ:       156 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1846 1845 1847 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1847 1846 2122 156 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:953 90 {*movsi_internal}
     (nil))
(jump_insn 2122 1847 2123 156 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:953 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2123 2122 1850)
;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       154
;;              155
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 497 498 499 500 806 807
(code_label 1850 2123 1851 157 71 "" [2 uses])
(note 1851 1850 1852 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1852 1851 1853 157 (set (reg:SI 0 ax [orig:497 D.25372 ] [497])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:956 90 {*movsi_internal}
     (nil))
(insn 1853 1852 1854 157 (set (reg:SF 21 xmm0 [orig:498 D.25374 ] [498])
        (float:SF (reg:SI 0 ax [orig:497 D.25372 ] [497]))) ge2fitman_read_procpar.cpp:956 199 {*floatsisf2_sse}
     (nil))
(insn 1854 1853 1855 157 (set (reg/f:DI 0 ax [806])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:956 89 {*movdi_internal}
     (nil))
(insn 1855 1854 1856 157 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [806])
                (const_int 352 [0x160])) [0 procpar_info_283(D)->R1+0 S4 A64])
        (reg:SF 21 xmm0 [orig:498 D.25374 ] [498])) ge2fitman_read_procpar.cpp:956 129 {*movsf_internal}
     (nil))
(insn 1856 1855 1857 157 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:961 90 {*movsi_internal}
     (nil))
(insn 1857 1856 1858 157 (set (reg/f:DI 0 ax [807])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(insn 1858 1857 1859 157 (parallel [
            (set (reg/f:DI 0 ax [orig:499 D.25376 ] [499])
                (plus:DI (reg/f:DI 0 ax [807])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:963 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1859 1858 1860 157 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(insn 1860 1859 1861 157 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:499 D.25376 ] [499])) ge2fitman_read_procpar.cpp:963 89 {*movdi_internal}
     (nil))
(call_insn/i 1861 1860 1862 157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:963 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1862 1861 1863 157 (set (reg:SI 0 ax [orig:500 D.25372 ] [500])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:963 90 {*movsi_internal}
     (nil))
(insn 1863 1862 1864 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:500 D.25372 ] [500])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:963 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1864 1863 1865 157 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1889)
            (pc))) ge2fitman_read_procpar.cpp:963 612 {*jcc_1}
     (nil)
 -> 1889)
;;  succ:       158 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 501 502 503 504 505 506 808 809 810 811
(note 1865 1864 1866 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1866 1865 1867 158 (set (reg/f:DI 0 ax [808])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:964 89 {*movdi_internal}
     (nil))
(insn 1867 1866 1868 158 (set (reg:QI 0 ax [orig:501 D.25373 ] [501])
        (mem:QI (reg/f:DI 0 ax [808]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:964 93 {*movqi_internal}
     (nil))
(insn 1868 1867 1869 158 (set (reg:SI 1 dx [orig:502 D.25372 ] [502])
        (zero_extend:SI (reg:QI 0 ax [orig:501 D.25373 ] [501]))) ge2fitman_read_procpar.cpp:964 138 {*zero_extendqisi2}
     (nil))
(insn 1869 1868 1870 158 (set (reg:SI 2 cx [orig:503 D.25372 ] [503])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1870 1869 1871 158 (set (reg:SI 5 di [orig:504 D.25372 ] [504])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1871 1870 1872 158 (parallel [
            (set (reg:DI 4 si [809])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:964 218 {*adddi_1}
     (nil))
(insn 1872 1871 1873 158 (set (reg:DI 0 ax [810])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:964 89 {*movdi_internal}
     (nil))
(insn 1873 1872 1874 158 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:502 D.25372 ] [502])) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1874 1873 1875 158 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:503 D.25372 ] [503])) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1875 1874 1876 158 (set (reg:DI 2 cx)
        (const_int 416 [0x1a0])) ge2fitman_read_procpar.cpp:964 89 {*movdi_internal}
     (nil))
(insn 1876 1875 1878 158 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:504 D.25372 ] [504])) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1878 1876 1879 158 (set (reg:DI 5 di)
        (reg:DI 0 ax [810])) ge2fitman_read_procpar.cpp:964 89 {*movdi_internal}
     (nil))
(call_insn 1879 1878 1880 158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:964 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1880 1879 1881 158 (set (reg:SI 0 ax [orig:505 D.25372 ] [505])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:964 90 {*movsi_internal}
     (nil))
(insn 1881 1880 1882 158 (parallel [
            (set (reg:SI 0 ax [811])
                (lshiftrt:SI (reg:SI 0 ax [orig:505 D.25372 ] [505])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:964 544 {*lshrsi3_1}
     (nil))
(insn 1882 1881 1883 158 (set (reg:QI 0 ax [orig:506 D.25373 ] [506])
        (reg:QI 0 ax [811])) ge2fitman_read_procpar.cpp:964 93 {*movqi_internal}
     (nil))
(insn 1883 1882 1884 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:506 D.25373 ] [506])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:964 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1884 1883 1885 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1889)
            (pc))) ge2fitman_read_procpar.cpp:964 612 {*jcc_1}
     (nil)
 -> 1889)
;;  succ:       159 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1885 1884 1886 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1886 1885 2124 159 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:967 90 {*movsi_internal}
     (nil))
(jump_insn 2124 1886 2125 159 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:967 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2125 2124 1889)
;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       157
;;              158
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 507 508 509 510 812 813
(code_label 1889 2125 1890 160 72 "" [2 uses])
(note 1890 1889 1891 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1891 1890 1892 160 (set (reg:SI 0 ax [orig:507 D.25372 ] [507])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:970 90 {*movsi_internal}
     (nil))
(insn 1892 1891 1893 160 (set (reg:SF 21 xmm0 [orig:508 D.25374 ] [508])
        (float:SF (reg:SI 0 ax [orig:507 D.25372 ] [507]))) ge2fitman_read_procpar.cpp:970 199 {*floatsisf2_sse}
     (nil))
(insn 1893 1892 1894 160 (set (reg/f:DI 0 ax [812])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:970 89 {*movdi_internal}
     (nil))
(insn 1894 1893 1895 160 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [812])
                (const_int 356 [0x164])) [0 procpar_info_283(D)->R2+0 S4 A32])
        (reg:SF 21 xmm0 [orig:508 D.25374 ] [508])) ge2fitman_read_procpar.cpp:970 129 {*movsf_internal}
     (nil))
(insn 1895 1894 1896 160 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:975 90 {*movsi_internal}
     (nil))
(insn 1896 1895 1897 160 (set (reg/f:DI 0 ax [813])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(insn 1897 1896 1898 160 (parallel [
            (set (reg/f:DI 0 ax [orig:509 D.25376 ] [509])
                (plus:DI (reg/f:DI 0 ax [813])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:977 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1898 1897 1899 160 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(insn 1899 1898 1900 160 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:509 D.25376 ] [509])) ge2fitman_read_procpar.cpp:977 89 {*movdi_internal}
     (nil))
(call_insn/i 1900 1899 1901 160 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:977 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1901 1900 1902 160 (set (reg:SI 0 ax [orig:510 D.25372 ] [510])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:977 90 {*movsi_internal}
     (nil))
(insn 1902 1901 1903 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:510 D.25372 ] [510])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:977 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1903 1902 1904 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1928)
            (pc))) ge2fitman_read_procpar.cpp:977 612 {*jcc_1}
     (nil)
 -> 1928)
;;  succ:       161 (FALLTHRU)
;;              163
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 511 512 513 514 515 516 814 815 816 817
(note 1904 1903 1905 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1905 1904 1906 161 (set (reg/f:DI 0 ax [814])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:979 89 {*movdi_internal}
     (nil))
(insn 1906 1905 1907 161 (set (reg:QI 0 ax [orig:511 D.25373 ] [511])
        (mem:QI (reg/f:DI 0 ax [814]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:979 93 {*movqi_internal}
     (nil))
(insn 1907 1906 1908 161 (set (reg:SI 1 dx [orig:512 D.25372 ] [512])
        (zero_extend:SI (reg:QI 0 ax [orig:511 D.25373 ] [511]))) ge2fitman_read_procpar.cpp:979 138 {*zero_extendqisi2}
     (nil))
(insn 1908 1907 1909 161 (set (reg:SI 2 cx [orig:513 D.25372 ] [513])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1909 1908 1910 161 (set (reg:SI 5 di [orig:514 D.25372 ] [514])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1910 1909 1911 161 (parallel [
            (set (reg:DI 4 si [815])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:979 218 {*adddi_1}
     (nil))
(insn 1911 1910 1912 161 (set (reg:DI 0 ax [816])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:979 89 {*movdi_internal}
     (nil))
(insn 1912 1911 1913 161 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:512 D.25372 ] [512])) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1913 1912 1914 161 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:513 D.25372 ] [513])) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1914 1913 1915 161 (set (reg:DI 2 cx)
        (const_int 420 [0x1a4])) ge2fitman_read_procpar.cpp:979 89 {*movdi_internal}
     (nil))
(insn 1915 1914 1917 161 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:514 D.25372 ] [514])) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1917 1915 1918 161 (set (reg:DI 5 di)
        (reg:DI 0 ax [816])) ge2fitman_read_procpar.cpp:979 89 {*movdi_internal}
     (nil))
(call_insn 1918 1917 1919 161 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:979 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1919 1918 1920 161 (set (reg:SI 0 ax [orig:515 D.25372 ] [515])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:979 90 {*movsi_internal}
     (nil))
(insn 1920 1919 1921 161 (parallel [
            (set (reg:SI 0 ax [817])
                (lshiftrt:SI (reg:SI 0 ax [orig:515 D.25372 ] [515])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:979 544 {*lshrsi3_1}
     (nil))
(insn 1921 1920 1922 161 (set (reg:QI 0 ax [orig:516 D.25373 ] [516])
        (reg:QI 0 ax [817])) ge2fitman_read_procpar.cpp:979 93 {*movqi_internal}
     (nil))
(insn 1922 1921 1923 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:516 D.25373 ] [516])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:979 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1923 1922 1924 161 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1962)
            (pc))) ge2fitman_read_procpar.cpp:979 612 {*jcc_1}
     (nil)
 -> 1962)
;;  succ:       162 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1924 1923 1925 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1925 1924 2126 162 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:982 90 {*movsi_internal}
     (nil))
(jump_insn 2126 1925 2127 162 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:982 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2127 2126 1928)
;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 517 518 818
(code_label 1928 2127 1929 163 73 "" [1 uses])
(note 1929 1928 1930 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1930 1929 1931 163 (set (reg/f:DI 0 ax [818])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [0 infile_struct+0 S8 A64])) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(insn 1931 1930 1932 163 (parallel [
            (set (reg/f:DI 0 ax [orig:517 D.25376 ] [517])
                (plus:DI (reg/f:DI 0 ax [818])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:985 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [0 infile_struct+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1932 1931 1933 163 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f5c1040f900 *.LC15>)) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(insn 1933 1932 1934 163 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:517 D.25376 ] [517])) ge2fitman_read_procpar.cpp:985 89 {*movdi_internal}
     (nil))
(call_insn/i 1934 1933 1935 163 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f5c11b8a360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:985 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1935 1934 1936 163 (set (reg:SI 0 ax [orig:518 D.25372 ] [518])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:985 90 {*movsi_internal}
     (nil))
(insn 1936 1935 1937 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:518 D.25372 ] [518])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:985 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1937 1936 1938 163 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1962)
            (pc))) ge2fitman_read_procpar.cpp:985 612 {*jcc_1}
     (nil)
 -> 1962)
;;  succ:       164 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 519 520 521 522 523 524 819 820 821 822
(note 1938 1937 1939 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1939 1938 1940 164 (set (reg/f:DI 0 ax [819])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [0 swap_bytes+0 S8 A64])) ge2fitman_read_procpar.cpp:986 89 {*movdi_internal}
     (nil))
(insn 1940 1939 1941 164 (set (reg:QI 0 ax [orig:519 D.25373 ] [519])
        (mem:QI (reg/f:DI 0 ax [819]) [0 *swap_bytes_50(D)+0 S1 A8])) ge2fitman_read_procpar.cpp:986 93 {*movqi_internal}
     (nil))
(insn 1941 1940 1942 164 (set (reg:SI 1 dx [orig:520 D.25372 ] [520])
        (zero_extend:SI (reg:QI 0 ax [orig:519 D.25373 ] [519]))) ge2fitman_read_procpar.cpp:986 138 {*zero_extendqisi2}
     (nil))
(insn 1942 1941 1943 164 (set (reg:SI 2 cx [orig:521 D.25372 ] [521])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1943 1942 1944 164 (set (reg:SI 5 di [orig:522 D.25372 ] [522])
        (const_int 4 [0x4])) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1944 1943 1945 164 (parallel [
            (set (reg:DI 4 si [820])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:986 218 {*adddi_1}
     (nil))
(insn 1945 1944 1946 164 (set (reg:DI 0 ax [821])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:986 89 {*movdi_internal}
     (nil))
(insn 1946 1945 1947 164 (set (reg:SI 38 r9)
        (reg:SI 1 dx [orig:520 D.25372 ] [520])) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1947 1946 1948 164 (set (reg:SI 37 r8)
        (reg:SI 2 cx [orig:521 D.25372 ] [521])) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1948 1947 1949 164 (set (reg:DI 2 cx)
        (const_int 420 [0x1a4])) ge2fitman_read_procpar.cpp:986 89 {*movdi_internal}
     (nil))
(insn 1949 1948 1951 164 (set (reg:SI 1 dx)
        (reg:SI 5 di [orig:522 D.25372 ] [522])) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1951 1949 1952 164 (set (reg:DI 5 di)
        (reg:DI 0 ax [821])) ge2fitman_read_procpar.cpp:986 89 {*movdi_internal}
     (nil))
(call_insn 1952 1951 1953 164 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z10read_fieldP8_IO_FILEPcilib") [flags 0x3]  <function_decl 0x7f5c10720510 read_field>) [0 read_field S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:986 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1953 1952 1954 164 (set (reg:SI 0 ax [orig:523 D.25372 ] [523])
        (reg:SI 0 ax)) ge2fitman_read_procpar.cpp:986 90 {*movsi_internal}
     (nil))
(insn 1954 1953 1955 164 (parallel [
            (set (reg:SI 0 ax [822])
                (lshiftrt:SI (reg:SI 0 ax [orig:523 D.25372 ] [523])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_read_procpar.cpp:986 544 {*lshrsi3_1}
     (nil))
(insn 1955 1954 1956 164 (set (reg:QI 0 ax [orig:524 D.25373 ] [524])
        (reg:QI 0 ax [822])) ge2fitman_read_procpar.cpp:986 93 {*movqi_internal}
     (nil))
(insn 1956 1955 1957 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:524 D.25373 ] [524])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:986 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1957 1956 1958 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1962)
            (pc))) ge2fitman_read_procpar.cpp:986 612 {*jcc_1}
     (nil)
 -> 1962)
;;  succ:       165 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1958 1957 1959 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1959 1958 2128 165 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:989 90 {*movsi_internal}
     (nil))
(jump_insn 2128 1959 2129 165 (set (pc)
        (label_ref 1971)) ge2fitman_read_procpar.cpp:989 654 {jump}
     (nil)
 -> 1971)
;;  succ:       167 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 2129 2128 1962)
;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       161
;;              163
;;              164
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 525 526 823
(code_label 1962 2129 1963 166 74 "" [3 uses])
(note 1963 1962 1964 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1964 1963 1965 166 (set (reg:SI 0 ax [orig:525 D.25372 ] [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 temp_long+0 S4 A32])) ge2fitman_read_procpar.cpp:993 90 {*movsi_internal}
     (nil))
(insn 1965 1964 1966 166 (set (reg:SF 21 xmm0 [orig:526 D.25374 ] [526])
        (float:SF (reg:SI 0 ax [orig:525 D.25372 ] [525]))) ge2fitman_read_procpar.cpp:993 199 {*floatsisf2_sse}
     (nil))
(insn 1966 1965 1967 166 (set (reg/f:DI 0 ax [823])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 procpar_info+0 S8 A64])) ge2fitman_read_procpar.cpp:993 89 {*movdi_internal}
     (nil))
(insn 1967 1966 1968 166 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [823])
                (const_int 360 [0x168])) [0 procpar_info_283(D)->gain+0 S4 A64])
        (reg:SF 21 xmm0 [orig:526 D.25374 ] [526])) ge2fitman_read_procpar.cpp:993 129 {*movsf_internal}
     (nil))
(insn 1968 1967 1971 166 (set (reg:SI 0 ax [orig:87 D.25372 ] [87])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1001 90 {*movsi_internal}
     (nil))
;;  succ:       167 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 168, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       166 (FALLTHRU)
;;              162 [100.0%] 
;;              3 [100.0%] 
;;              21 [100.0%] 
;;              38 [100.0%] 
;;              41 [100.0%] 
;;              44 [100.0%] 
;;              47 [100.0%] 
;;              50 [100.0%] 
;;              53 [100.0%] 
;;              56 [100.0%] 
;;              59 [100.0%] 
;;              62 [100.0%] 
;;              65 [100.0%] 
;;              74 [100.0%] 
;;              77 [100.0%] 
;;              84 [100.0%] 
;;              87 [100.0%] 
;;              90 [100.0%] 
;;              93 [100.0%] 
;;              95 [100.0%] 
;;              97 [100.0%] 
;;              99 [100.0%] 
;;              101 [100.0%] 
;;              106 [100.0%] 
;;              109 [100.0%] 
;;              112 [100.0%] 
;;              115 [100.0%] 
;;              118 [100.0%] 
;;              121 [100.0%] 
;;              123 [100.0%] 
;;              125 [100.0%] 
;;              130 [100.0%] 
;;              133 [100.0%] 
;;              136 [100.0%] 
;;              139 [100.0%] 
;;              144 [100.0%] 
;;              147 [100.0%] 
;;              150 [100.0%] 
;;              153 [100.0%] 
;;              156 [100.0%] 
;;              159 [100.0%] 
;;              165 [100.0%] 
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 527
(code_label 1971 1968 1972 167 75 "" [42 uses])
(note 1972 1971 1973 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1973 1972 1977 167 (set (reg:SI 0 ax [orig:527 <retval> ] [527])
        (reg:SI 0 ax [orig:87 D.25372 ] [87])) 90 {*movsi_internal}
     (nil))
(insn 1977 1973 1978 167 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:527 <retval> ] [527])) ge2fitman_read_procpar.cpp:1003 90 {*movsi_internal}
     (nil))
(insn 1978 1977 1979 167 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.25388+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [826]))
        ]) ge2fitman_read_procpar.cpp:1003 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1979 1978 2006 167 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1982)
            (pc))) ge2fitman_read_procpar.cpp:1003 612 {*jcc_1}
     (nil)
 -> 1982)
;;  succ:       169
;;              168 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 167, next block 169, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 2006 1979 1980 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(call_insn 1980 2006 1981 168 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f5c107c8798 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1003 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1981 1980 1982)
;; basic block 169, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 168, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       167
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1982 1981 2007 169 76 "" [1 uses])
(note 2007 1982 1983 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1983 2007 2130 169 (use (reg/i:SI 0 ax)) ge2fitman_read_procpar.cpp:1003 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 2130 1983 0 NOTE_INSN_DELETED)

;; Function int read_field(FILE*, char*, int, long int, int, bool) (_Z10read_fieldP8_IO_FILEPcilib, funcdef_no=1022, decl_uid=24366, cgraph_uid=227, symbol_order=228)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=609,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=5,overall=615,losers=1,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) q {*cmpqi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 35:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =r  (1) g {*movsi_internal}

********** Pseudo live ranges #1: **********

  BB 7
   Insn 60: point = 0
   Insn 59: point = 0
   Insn 55: point = 1
  BB 3
   Insn 62: point = 4
   Insn 37: point = 4
   Insn 36: point = 5
   Insn 35: point = 5
  BB 6
   Insn 52: point = 5
  BB 5
   Insn 49: point = 6
   Insn 48: point = 6
   Insn 47: point = 7
   Insn 46: point = 8
   Insn 45: point = 9
  BB 4
   Insn 43: point = 10
   Insn 42: point = 10
  BB 2
   Insn 33: point = 10
   Insn 32: point = 10
   Insn 31: point = 11
   Insn 30: point = 12
   Insn 29: point = 13
   Insn 28: point = 15
   Insn 27: point = 16
   Insn 26: point = 17
   Insn 25: point = 17
   Insn 24: point = 18
   Insn 23: point = 18
   Insn 22: point = 19
   Insn 21: point = 20
   Insn 20: point = 21
   Insn 19: point = 22
   Insn 18: point = 24
   Insn 17: point = 25
   Insn 16: point = 25
   Insn 15: point = 26
   Insn 14: point = 27
   Insn 13: point = 27
   Insn 12: point = 28
   Insn 8: point = 29
   Insn 7: point = 30
   Insn 6: point = 31
   Insn 5: point = 31
   Insn 4: point = 31
   Insn 3: point = 31
   Insn 2: point = 31
Compressing live ranges: from 31 to 0 - 0%
Ranges after the compression:
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=48, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 52
changing reg in insn 37
changing reg in insn 55
changing reg in insn 19
changing reg in insn 23
changing reg in insn 27
changing reg in insn 30
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 55
changing reg in insn 59
changing reg in insn 7
changing reg in insn 12
changing reg in insn 15
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 25
changing reg in insn 28
changing reg in insn 29
changing reg in insn 45
changing reg in insn 47
changing reg in insn 46
changing reg in insn 48
deleting insn with uid = 22.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns


int read_field(FILE*, char*, int, long int, int, bool)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={17d,13u} r1={9d,5u} r2={7d,3u} r4={8d,4u} r5={9d,5u} r6={1d,22u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={7d,3u} r18={4d} r19={4d} r20={1d,1u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 403{334d,69u,0e} in 42{38 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 93 94 95 96 97 98 99
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])
        (reg:DI 5 di [ in_file ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])
        (reg:DI 4 si [ var_pointer ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])
        (reg:SI 1 dx [ var_size ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])
        (reg:DI 2 cx [ hdr_field_offset ])) ge2fitman_read_procpar.cpp:1008 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])
        (reg:SI 37 r8 [ hdr_field_size ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SI 0 ax [93])
        (reg:SI 38 r9 [ swap_bytes ])) ge2fitman_read_procpar.cpp:1008 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
        (reg:QI 0 ax [93])) ge2fitman_read_procpar.cpp:1008 93 {*movqi_internal}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg:DI 2 cx [94])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 hdr_field_offset+0 S8 A64])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1014 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 2 cx [94])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [95])) ge2fitman_read_procpar.cpp:1014 89 {*movdi_internal}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fseek") [flags 0x41]  <function_decl 0x7f5c119d6798 fseek>) [0 fseek S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1014 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg:SI 0 ax [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1015 90 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 1 dx [orig:88 D.25412 ] [88])
        (sign_extend:DI (reg:SI 0 ax [96]))) ge2fitman_read_procpar.cpp:1015 142 {*extendsidi2_rex64}
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 in_file+0 S8 A64])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 21 20 24 2 (set (reg:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 24 21 25 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [98])) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(call_insn 26 25 27 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fread") [flags 0x41]  <function_decl 0x7f5c119d6360 fread>) [0 fread S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 27 26 28 2 (set (reg:DI 1 dx [orig:89 D.25412 ] [89])
        (reg:DI 0 ax)) ge2fitman_read_procpar.cpp:1015 89 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SI 0 ax [99])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 hdr_field_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1015 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:DI 0 ax [orig:90 D.25412 ] [90])
        (sign_extend:DI (reg:SI 0 ax [99]))) ge2fitman_read_procpar.cpp:1015 142 {*extendsidi2_rex64}
     (nil))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1 dx [orig:89 D.25412 ] [89])
            (reg:DI 0 ax [orig:90 D.25412 ] [90]))) ge2fitman_read_procpar.cpp:1015 8 {*cmpdi_1}
     (nil))
(insn 31 30 32 2 (set (reg:QI 0 ax [orig:91 D.25413 ] [91])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 607 {*setcc_qi}
     (nil))
(insn 32 31 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:91 D.25413 ] [91])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1015 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) ge2fitman_read_procpar.cpp:1015 612 {*jcc_1}
     (nil)
 -> 40)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f5c1048a240 *.LC30>)) ge2fitman_read_procpar.cpp:1017 89 {*movdi_internal}
     (nil))
(call_insn 36 35 37 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f5c11b96000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1017 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 62 3 (set (reg:SI 0 ax [orig:87 D.25411 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_read_procpar.cpp:1021 90 {*movsi_internal}
     (nil))
(jump_insn 62 37 63 3 (set (pc)
        (label_ref 53)) ge2fitman_read_procpar.cpp:1021 654 {jump}
     (nil)
 -> 53)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 63 62 40)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 40 63 41 4 88 "" [1 uses])
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 swap_bytes+0 S1 A32])
            (const_int 0 [0]))) ge2fitman_read_procpar.cpp:1031 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ge2fitman_read_procpar.cpp:1031 612 {*jcc_1}
     (nil)
 -> 50)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100 101
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:SI 1 dx [100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 var_size+0 S4 A32])) ge2fitman_read_procpar.cpp:1032 90 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 var_pointer+0 S8 A64])) ge2fitman_read_procpar.cpp:1032 89 {*movdi_internal}
     (nil))
(insn 47 46 48 5 (set (reg:SI 4 si)
        (reg:SI 1 dx [100])) ge2fitman_read_procpar.cpp:1032 90 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [101])) ge2fitman_read_procpar.cpp:1032 89 {*movdi_internal}
     (nil))
(call_insn 49 48 50 5 (call (mem:QI (symbol_ref:DI ("_Z9swapBytesPci") [flags 0x41]  <function_decl 0x7f5c10746510 swapBytes>) [0 swapBytes S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1032 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 50 49 51 6 90 "" [1 uses])
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg:SI 0 ax [orig:87 D.25411 ] [87])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1039 90 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 92
(code_label 53 52 54 7 89 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 7 (set (reg:SI 0 ax [orig:92 <retval> ] [92])
        (reg:SI 0 ax [orig:87 D.25411 ] [87])) 90 {*movsi_internal}
     (nil))
(insn 59 55 60 7 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:92 <retval> ] [92])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 60 59 64 7 (use (reg/i:SI 0 ax)) ge2fitman_read_procpar.cpp:1041 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 64 60 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1023, decl_uid=24615, cgraph_uid=228, symbol_order=255)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,10u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 195{168d,27u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_read_procpar.cpp:1041 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_read_procpar.cpp:1041 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_read_procpar.cpp:1041 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_read_procpar.cpp:1041 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f5c1071f000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f5c10a8f870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f5c1076dea0 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f5c1071f000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f5c10a8fa20 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f5c1074fd80 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 93 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) ge2fitman_read_procpar.cpp:1041 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 91 "" [0 uses])
(note 22 21 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 26 22 0 NOTE_INSN_DELETED)

;; Function (static initializers for ge2fitman_read_procpar.cpp) (_GLOBAL__sub_I__Z12read_procparP12Procpar_infoPcP8_IO_FILEPbP13InFile_structP16Data_file_header, funcdef_no=1024, decl_uid=24621, cgraph_uid=229, symbol_order=359)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rBwBz {*call}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for ge2fitman_read_procpar.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 100{92d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_read_procpar.cpp:1041 90 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f5c1074fbd0 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_read_procpar.cpp:1041 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 10 7 0 NOTE_INSN_DELETED)
