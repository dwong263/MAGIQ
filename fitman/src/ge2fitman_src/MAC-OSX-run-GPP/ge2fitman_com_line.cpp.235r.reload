
;; Function int command_line(Preprocess*, IOFiles*, Procpar_info*, int, char**, int*, int*, int*, bool*, bool*) (_Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_, funcdef_no=1021, decl_uid=24349, cgraph_uid=226, symbol_order=227)

      Creating newreg=828
Removing SCRATCH in insn #17 (nop 2)
rescanning insn with uid = 17.
      Creating newreg=829
Removing SCRATCH in insn #1817 (nop 3)
rescanning insn with uid = 1817.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=944, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=912, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) m  (1) re {*movdi_internal}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r828
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 21:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 22:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 24:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 25:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 26:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 28:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
      Creating newreg=830, assigning class GENERAL_REGS to r830
   33: r830:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1956: [r501:DI]=r830:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1956:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
      Creating newreg=831, assigning class GENERAL_REGS to r831
   34: r831:DI=0x6961764120656d61
    Inserting insn reload after:
 1957: [r501:DI+0x8]=r831:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1957:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) m  (1) rn {*movhi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 37:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 38:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 39:  (0) r  (1) i {*movdi_internal}
      Creating newreg=832, assigning class GENERAL_REGS to r832
   39: r832:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1958: [r503:DI]=r832:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1958:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 40:  (0) r  (1) i {*movdi_internal}
      Creating newreg=833, assigning class GENERAL_REGS to r833
   40: r833:DI=0x6961764120656d61
    Inserting insn reload after:
 1959: [r503:DI+0x8]=r833:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1959:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) m  (1) rn {*movhi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 43:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 45:  (0) r  (1) i {*movdi_internal}
      Creating newreg=834, assigning class GENERAL_REGS to r834
   45: r834:DI=0x6e656c6946206f4e
    Inserting insn reload after:
 1960: [r505:DI]=r834:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1960:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=16,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=16,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=18: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=19: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            alt=21: Bad operand -- refuse
            alt=22: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=23,overall=10,losers=1 -- refuse
            alt=24: Bad operand -- refuse
	 Choosing alt 4 in insn 46:  (0) r  (1) i {*movdi_internal}
      Creating newreg=835, assigning class GENERAL_REGS to r835
   46: r835:DI=0x6961764120656d61
    Inserting insn reload after:
 1961: [r505:DI+0x8]=r835:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1961:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 47:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 65
	 Choosing alt 0 in insn 65:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 78
	 Choosing alt 0 in insn 78:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 91
	 Choosing alt 0 in insn 91:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 93:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 105
	 Choosing alt 0 in insn 105:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 0 in insn 118:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 119:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 130:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 131
	 Choosing alt 0 in insn 131:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 132:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 143:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 144
	 Choosing alt 0 in insn 144:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 157
	 Choosing alt 0 in insn 157:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 159:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 170:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 0 in insn 171:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 172:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 174:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 183:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 0 in insn 184:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 196:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 197
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 209:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 210
	 Choosing alt 0 in insn 210:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 211:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 223
	 Choosing alt 0 in insn 223:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 225:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 227:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 236:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 237
	 Choosing alt 0 in insn 237:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 240:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 249:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 250
	 Choosing alt 0 in insn 250:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 253:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 262:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 263
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 264:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 275:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 0 in insn 276:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 277:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 279:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 288:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 289
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 290:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 302
	 Choosing alt 0 in insn 302:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 303:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 310:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 311:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 320:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 321:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 322
	 Choosing alt 0 in insn 322:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 323:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 324:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) qm  (1) qn {*cmpqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 339:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 340
	 Choosing alt 0 in insn 340:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 341:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 342:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 344:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 350:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 357:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 358:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 359
	 Choosing alt 0 in insn 359:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 360:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 361:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 370:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 371:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 372
	 Choosing alt 0 in insn 372:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 373:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 374:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 383:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 385
	 Choosing alt 0 in insn 385:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 386:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 387:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 395:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 396:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 405:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 406:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 409:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 410:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 411
	 Choosing alt 0 in insn 411:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 412:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 413:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 420:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 422:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 431:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 432
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 433:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 434:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 435:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 436:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 438:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 447:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 448
	 Choosing alt 0 in insn 448:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 449:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 454:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 455:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 456
	 Choosing alt 0 in insn 456:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 457:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 458:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 465:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 467:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 476:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 477
	 Choosing alt 0 in insn 477:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 478:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 479:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 484
	 Choosing alt 0 in insn 484:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 492:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 494:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 503:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 504:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 508:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 509
	 Choosing alt 0 in insn 509:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 510:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =x  (1) xm {*truncdfsf_fast_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 515:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 516:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 518:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 520:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 525:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 529:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 530:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 534:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 535
	 Choosing alt 0 in insn 535:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 536:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =x  (1) xm {*truncdfsf_fast_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 541:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 542:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 544:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 553:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 554
	 Choosing alt 0 in insn 554:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 555:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 565:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 567:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 568:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 569
	 Choosing alt 0 in insn 569:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 570:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 571:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 578:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 579:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 580:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 589:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 590
	 Choosing alt 0 in insn 590:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 591:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 592:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 595:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 596:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 597
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 598:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 605:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 607:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 611:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 616:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 617:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 620:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 621:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 622
	 Choosing alt 0 in insn 622:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 623:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 627:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 628:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 638:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 641:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 642:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 643
	 Choosing alt 0 in insn 643:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 644:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 633:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 651:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 662:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 663:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 666:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 667:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 668
	 Choosing alt 0 in insn 668:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 669:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =x  (1) xm {*truncdfsf_fast_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 674:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 675:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 676:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 677:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 679:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 684:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 688:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 690:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 692:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 693:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 700:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 704:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 705:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 707:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 708:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 709:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 710
	 Choosing alt 0 in insn 710:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 711:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (0) =x  (1) xm {*truncdfsf_fast_sse}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 716:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 717:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 723:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 728:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 729
	 Choosing alt 0 in insn 729:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 730:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 745:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 746:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 747:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 748
	 Choosing alt 0 in insn 748:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 749:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 750:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 754:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 757:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 766:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 767:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 768
	 Choosing alt 0 in insn 768:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 769:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 770:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 780:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 784:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 786:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 787:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 788
	 Choosing alt 0 in insn 788:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 789:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 790:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 792:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 797:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 798:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 803:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 804:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 805:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 806:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 807:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 812:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 819:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 820:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 821
	 Choosing alt 0 in insn 821:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 822:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 823:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 827:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 830:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 831:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 832:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 833:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 837:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 838:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 839:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 840:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 841:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 842:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 843:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 844:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 849:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 854:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 855:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 856:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 857:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 858
	 Choosing alt 0 in insn 858:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 859:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 860:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 862:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 867:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 868:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 873:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 874:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 875:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 876:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 877:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 878:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 879:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 880
	 Choosing alt 0 in insn 880:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 881:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 883:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 885:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 888:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 889:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 890:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 891:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 892:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 893:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 894
	 Choosing alt 0 in insn 894:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 895:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 897:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 899:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 900:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 910:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 915:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 916:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 917:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 919
	 Choosing alt 0 in insn 919:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 920:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 921:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 923:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 925:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 928:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 929:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 930:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 931:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 932:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 935:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 936:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 937:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 938:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 939:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 940:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 941:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 942:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 943:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 944
	 Choosing alt 0 in insn 944:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 945:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 949:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 952:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 953:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 954:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 955:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 956:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 957:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 958:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 959
	 Choosing alt 0 in insn 959:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 960:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 962:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 964:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 970:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 975:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 982:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 983:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 984
	 Choosing alt 0 in insn 984:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 985:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 986:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 990:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 993:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 994:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 996:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 997:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 998
	 Choosing alt 0 in insn 998:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 999:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1001:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1003:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1006:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1007:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1008:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1010:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1011:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1012
	 Choosing alt 0 in insn 1012:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1013:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1015:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1017:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1028:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1029:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1030:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1031:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1032
	 Choosing alt 0 in insn 1032:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1033:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1034:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1041:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1042:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1043:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1044:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1049:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1050:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1051:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1052:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1053
	 Choosing alt 0 in insn 1053:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1054:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1055:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1057:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1059:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1062:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1063:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1064:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1070:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1071:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1072:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1073
	 Choosing alt 0 in insn 1073:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1074:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1075:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1077:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1079:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1082:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1083:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1084:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1085:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1086:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1091:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1092:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1093:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1094:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1095
	 Choosing alt 0 in insn 1095:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1096:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1097:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1099:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1101:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1104:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1105:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1106:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1111:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1113:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1114:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1115
	 Choosing alt 0 in insn 1115:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1116:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1117:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1121:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1124:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1125:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1126:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1127:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1128:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1133:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1134:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1135:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1136:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1137
	 Choosing alt 0 in insn 1137:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1138:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1139:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1141:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1146:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1149:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1153:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1158:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1159:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1160:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1162:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1164:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1167:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1172:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1173:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1176:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1179:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1183:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1186:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1187:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1188:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1189:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1190:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1191:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1192:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1193:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1194:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1195:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1196:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1197:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1198:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1199:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1200:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1201:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1202:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1203:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1204:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1205:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1206:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1207:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1208:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1209:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1210:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1211:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1212:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1213:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1214:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1215:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1220:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1221:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1222:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1223:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1224
	 Choosing alt 0 in insn 1224:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1225:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1226:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1228:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1230:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1233:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1236:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1240:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1245:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1246:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1247:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1249:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1251:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1254:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1259:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1264:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1266:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1267:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1268
	 Choosing alt 0 in insn 1268:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1269:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1270:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1272:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1274:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1277:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1278:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1279:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1280:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1283:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1288:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1289:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1296:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1297:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1298
	 Choosing alt 0 in insn 1298:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1299:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1300:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1302:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1304:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1307:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1308:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1309:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1310:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1311:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1314:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1319:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1320:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1321:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1326:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1327:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1328:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1329:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1330
	 Choosing alt 0 in insn 1330:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1331:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1332:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1334:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1336:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1339:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1340:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1341:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1342:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1345:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1350:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1351:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1357:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1358:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1359:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1360
	 Choosing alt 0 in insn 1360:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1361:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1362:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1364:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1366:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1369:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1370:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1371:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1372:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1373:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1376:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1381:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1382:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1383:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1388:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1389:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1390:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1391:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1392
	 Choosing alt 0 in insn 1392:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1393:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1394:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1396:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1398:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1401:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1402:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1407:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1408:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1409:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1410:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1411
	 Choosing alt 0 in insn 1411:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1412:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1413:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1415:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1417:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1420:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1421:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1426:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1427:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1428:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1429:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1430
	 Choosing alt 0 in insn 1430:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1431:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1432:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1434:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1436:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1439:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1440:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1441:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1445:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1446:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1447:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1448:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1453:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1462:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1465:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1469:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1474:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1475:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1476:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1479:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1480:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1481:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1484:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1485:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1486:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1487:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1490:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1495:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1498:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1499:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1500:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1503:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1504:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1505:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1508:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1509:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1510:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1511:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1514:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1515:  (0) m  (1) re {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1516:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1517:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1518:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1521:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1524:  (0) m  (1) qn {*movqi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1525:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1531:  (0) ?mq {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1534:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1535:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1536:  (0) q {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1539:  (0) m  (1) qn {*movqi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1540:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1541:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1546:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1548:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1549:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1552:  (0) m  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1557:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 1560:  (0) m  (1) qn {*movqi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1567:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1568:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1569:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1572:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1573:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1574:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1577:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1578:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1579:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1582:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1587:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1590:  (0) ?mq {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1594:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1595:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1596:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1597:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1600:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1609:  (0) rm  (1) re {*cmpsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1612:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1613:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1614:  (0) q {*cmpqi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1617:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1618:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1619:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1622:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1623:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1624:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1627:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1632:  (0) ?mq {*cmpqi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1635:  (0) ?mq {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1639:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=609,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1640:  (0) q  (1) qm {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=3: Bad operand -- refuse
	 Choosing alt 0 in insn 1641:  (0) =q  (1) %0  (2) qmn {*xorqi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1642:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1645:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1650:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1655:  (0) ?mr {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1658:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1659:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1662:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1663:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1664:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1665:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1668:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1669:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1670:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1671:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1674:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1675:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1676:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1679:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1682:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1685:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1686:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1687:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1690:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1691:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1692:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1693:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1694:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1697:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1698:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1699:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1700:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1701:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1702:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1705:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1706:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1707:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1708:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1709:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1712:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1713:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1714:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1715:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1716:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1719:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1724:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1725:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1726:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1727:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1730:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1731:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1732:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1733:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1734:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1737:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1738:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1739:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1740:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1741:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1742:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1745:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1746:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1747:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1748:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1749:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1752:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1753:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1754:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1755:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1756:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1759:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1764:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1765:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1767:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1769:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1772:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1777:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1778:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1779:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1781:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1783:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1786:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1791:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1794:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1799:  (0) ?mq {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1802:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1817:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r829
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1819:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51
EBB 52
EBB 53
EBB 54
EBB 55
EBB 56
EBB 57
EBB 58
EBB 59
EBB 60
EBB 61
EBB 62
EBB 63
EBB 64
EBB 65
EBB 66
EBB 67
EBB 68
EBB 69
EBB 70
EBB 71
EBB 72
EBB 73
EBB 74
EBB 75
EBB 76
EBB 77
EBB 78
EBB 79
EBB 80
EBB 81
EBB 82
EBB 83
EBB 84
EBB 85
EBB 86
EBB 87
EBB 88
EBB 89
EBB 90
EBB 91
EBB 92
EBB 93
EBB 94
EBB 95
EBB 96
EBB 97
EBB 98
EBB 99
EBB 100
EBB 101
EBB 102
EBB 103
EBB 104
EBB 105
EBB 106
EBB 107
EBB 108
EBB 109
EBB 110
EBB 111
EBB 112
EBB 113
EBB 114
EBB 115
EBB 116
EBB 117
EBB 118
EBB 119
EBB 120
EBB 121
EBB 122
EBB 123
EBB 124
EBB 125
EBB 126
EBB 127
EBB 128
EBB 129
EBB 130
EBB 131
EBB 132
EBB 133
EBB 134
EBB 135
EBB 136
EBB 137
EBB 138
EBB 139
EBB 140
EBB 141
EBB 142
EBB 143
EBB 144
EBB 145
EBB 146
EBB 147
EBB 148
EBB 149
EBB 168
EBB 150
EBB 151
EBB 152
EBB 153
EBB 154
EBB 155
EBB 156
EBB 157
EBB 158
EBB 159
EBB 160
EBB 161
EBB 162
EBB 163
EBB 164
EBB 165
EBB 166
EBB 167

********** Pseudo live ranges #1: **********

  BB 30
   Insn 760: point = 0
   Insn 759: point = 0
   Insn 758: point = 0
   Insn 757: point = 0
  BB 32
   Insn 780: point = 0
   Insn 779: point = 0
   Insn 778: point = 0
   Insn 777: point = 0
  BB 106
   Insn 1441: point = 0
   Insn 1440: point = 0
   Insn 1439: point = 0
  BB 166
   Insn 1819: point = 0
  BB 167
   Insn 1822: point = 0
  BB 165
   Insn 1818: point = 0
   Insn 1817: point = 0
   Insn 1816: point = 1
   Insn 1812: point = 2
  BB 163
   Insn 1950: point = 5
   Insn 1802: point = 5
  BB 159
   Insn 1946: point = 6
   Insn 1786: point = 6
  BB 157
   Insn 1944: point = 7
   Insn 1772: point = 7
  BB 149
   Insn 1940: point = 8
   Insn 1650: point = 8
  BB 148
   Insn 1938: point = 9
   Insn 1645: point = 9
  BB 147
   Insn 1643: point = 10
   Insn 1642: point = 10
   Insn 1641: point = 11
   Insn 1640: point = 13
   Insn 1639: point = 15
  BB 146
   Insn 1636: point = 16
   Insn 1635: point = 16
  BB 145
   Insn 1633: point = 16
   Insn 1632: point = 16
  BB 144
   Insn 1936: point = 16
   Insn 1627: point = 16
  BB 143
   Insn 1625: point = 17
   Insn 1624: point = 17
   Insn 1623: point = 18
   Insn 1622: point = 20
  BB 142
   Insn 1620: point = 21
   Insn 1619: point = 21
   Insn 1618: point = 22
   Insn 1617: point = 24
  BB 141
   Insn 1615: point = 25
   Insn 1614: point = 25
   Insn 1613: point = 26
   Insn 1612: point = 28
  BB 139
   Insn 1934: point = 29
   Insn 1600: point = 29
  BB 135
   Insn 1932: point = 30
   Insn 1582: point = 30
  BB 116
   Insn 1920: point = 31
   Insn 1490: point = 31
  BB 112
   Insn 1918: point = 32
   Insn 1469: point = 32
  BB 107
   Insn 1914: point = 33
   Insn 1448: point = 33
   Insn 1447: point = 34
   Insn 1446: point = 35
   Insn 1445: point = 36
  BB 105
   Insn 1437: point = 37
   Insn 1436: point = 37
   Insn 1435: point = 38
   Insn 1434: point = 39
   Insn 1433: point = 39
   Insn 1432: point = 40
   Insn 1431: point = 40
   Insn 1430: point = 42
   Insn 1429: point = 44
   Insn 1428: point = 45
   Insn 1427: point = 47
   Insn 1426: point = 49
  BB 99
   Insn 1906: point = 50
   Insn 1376: point = 50
  BB 95
   Insn 1902: point = 51
   Insn 1345: point = 51
  BB 91
   Insn 1898: point = 52
   Insn 1314: point = 52
  BB 87
   Insn 1894: point = 53
   Insn 1283: point = 53
  BB 83
   Insn 1890: point = 54
   Insn 1254: point = 54
  BB 81
   Insn 1888: point = 55
   Insn 1240: point = 55
  BB 72
   Insn 1884: point = 56
   Insn 1167: point = 56
  BB 70
   Insn 1882: point = 57
   Insn 1153: point = 57
  BB 56
   Insn 1870: point = 58
   Insn 1023: point = 58
  BB 52
   Insn 1866: point = 59
   Insn 975: point = 59
  BB 51
   Insn 1864: point = 60
   Insn 970: point = 60
  BB 46
   Insn 1860: point = 61
   Insn 910: point = 61
  BB 45
   Insn 1858: point = 62
   Insn 905: point = 62
  BB 40
   Insn 1854: point = 63
   Insn 849: point = 63
  BB 36
   Insn 1850: point = 64
   Insn 812: point = 64
  BB 28
   Insn 1846: point = 65
   Insn 735: point = 65
  BB 26
   Insn 1842: point = 66
   Insn 633: point = 66
  BB 21
   Insn 1836: point = 67
   Insn 560: point = 67
  BB 15
   Insn 1832: point = 68
   Insn 400: point = 68
  BB 9
   Insn 1828: point = 69
   Insn 331: point = 69
  BB 161
   Insn 1948: point = 70
   Insn 1794: point = 70
  BB 164
   Insn 1807: point = 71
  BB 162
   Insn 1800: point = 72
   Insn 1799: point = 72
  BB 160
   Insn 1792: point = 72
   Insn 1791: point = 72
  BB 158
   Insn 1784: point = 72
   Insn 1783: point = 72
   Insn 1782: point = 73
   Insn 1781: point = 74
   Insn 1780: point = 74
   Insn 1779: point = 75
   Insn 1778: point = 75
   Insn 1777: point = 77
  BB 156
   Insn 1770: point = 78
   Insn 1769: point = 78
   Insn 1768: point = 79
   Insn 1767: point = 80
   Insn 1766: point = 80
   Insn 1765: point = 81
   Insn 1764: point = 81
  BB 154
   Insn 1942: point = 82
   Insn 1719: point = 82
   Insn 1718: point = 82
   Insn 1717: point = 83
   Insn 1716: point = 84
   Insn 1715: point = 86
   Insn 1714: point = 87
   Insn 1713: point = 89
   Insn 1712: point = 90
   Insn 1711: point = 90
   Insn 1710: point = 91
   Insn 1709: point = 92
   Insn 1708: point = 94
   Insn 1707: point = 95
   Insn 1706: point = 97
   Insn 1705: point = 98
   Insn 1704: point = 98
   Insn 1703: point = 99
   Insn 1702: point = 100
   Insn 1701: point = 102
   Insn 1700: point = 104
   Insn 1699: point = 105
   Insn 1698: point = 107
   Insn 1697: point = 108
   Insn 1696: point = 108
   Insn 1695: point = 109
   Insn 1694: point = 110
   Insn 1693: point = 112
   Insn 1692: point = 113
   Insn 1691: point = 115
   Insn 1690: point = 116
   Insn 1689: point = 116
   Insn 1688: point = 117
   Insn 1687: point = 118
   Insn 1686: point = 120
   Insn 1685: point = 121
  BB 155
   Insn 1759: point = 122
   Insn 1758: point = 122
   Insn 1757: point = 123
   Insn 1756: point = 124
   Insn 1755: point = 126
   Insn 1754: point = 127
   Insn 1753: point = 129
   Insn 1752: point = 130
   Insn 1751: point = 130
   Insn 1750: point = 131
   Insn 1749: point = 132
   Insn 1748: point = 134
   Insn 1747: point = 135
   Insn 1746: point = 137
   Insn 1745: point = 138
   Insn 1744: point = 138
   Insn 1743: point = 139
   Insn 1742: point = 140
   Insn 1741: point = 142
   Insn 1740: point = 143
   Insn 1739: point = 145
   Insn 1738: point = 147
   Insn 1737: point = 148
   Insn 1736: point = 148
   Insn 1735: point = 149
   Insn 1734: point = 150
   Insn 1733: point = 152
   Insn 1732: point = 153
   Insn 1731: point = 155
   Insn 1730: point = 156
   Insn 1729: point = 156
   Insn 1728: point = 157
   Insn 1727: point = 158
   Insn 1726: point = 160
   Insn 1725: point = 161
   Insn 1724: point = 163
  BB 153
   Insn 1683: point = 164
   Insn 1682: point = 164
  BB 152
   Insn 1679: point = 164
   Insn 1678: point = 164
   Insn 1677: point = 165
   Insn 1676: point = 166
   Insn 1675: point = 167
   Insn 1674: point = 169
  BB 151
   Insn 1672: point = 170
   Insn 1671: point = 170
   Insn 1670: point = 171
   Insn 1669: point = 173
   Insn 1668: point = 174
   Insn 1667: point = 174
   Insn 1666: point = 175
   Insn 1665: point = 176
   Insn 1664: point = 177
   Insn 1663: point = 179
   Insn 1662: point = 180
   Insn 1661: point = 180
   Insn 1660: point = 181
   Insn 1659: point = 182
   Insn 1658: point = 183
  BB 150
   Insn 1656: point = 184
   Insn 1655: point = 184
  BB 168
   Insn 1954: point = 184
  BB 130
   Insn 1928: point = 184
   Insn 1560: point = 184
  BB 131
   Insn 1930: point = 184
  BB 126
   Insn 1924: point = 184
   Insn 1541: point = 184
   Insn 1540: point = 184
   Insn 1539: point = 184
  BB 123
   Insn 1922: point = 184
   Insn 1526: point = 184
   Insn 1525: point = 184
   Insn 1524: point = 184
  BB 128
   Insn 1926: point = 184
   Insn 1552: point = 184
  BB 129
   Insn 1558: point = 184
   Insn 1557: point = 184
  BB 127
   Insn 1550: point = 184
   Insn 1549: point = 184
   Insn 1548: point = 184
   Insn 1547: point = 185
   Insn 1546: point = 186
  BB 125
   Insn 1537: point = 186
   Insn 1536: point = 186
   Insn 1535: point = 187
   Insn 1534: point = 189
  BB 124
   Insn 1532: point = 190
   Insn 1531: point = 190
  BB 122
   Insn 1522: point = 190
   Insn 1521: point = 190
  BB 121
   Insn 1519: point = 190
   Insn 1518: point = 190
   Insn 1517: point = 191
   Insn 1516: point = 193
   Insn 1515: point = 194
   Insn 1514: point = 195
  BB 115
   Insn 1488: point = 196
   Insn 1487: point = 196
   Insn 1486: point = 197
   Insn 1485: point = 199
   Insn 1484: point = 201
  BB 140
   Insn 1610: point = 202
   Insn 1609: point = 202
  BB 138
   Insn 1598: point = 202
   Insn 1597: point = 202
   Insn 1596: point = 203
   Insn 1595: point = 205
   Insn 1594: point = 207
  BB 137
   Insn 1591: point = 208
   Insn 1590: point = 208
  BB 136
   Insn 1588: point = 208
   Insn 1587: point = 208
  BB 134
   Insn 1580: point = 208
   Insn 1579: point = 208
   Insn 1578: point = 209
   Insn 1577: point = 211
  BB 133
   Insn 1575: point = 212
   Insn 1574: point = 212
   Insn 1573: point = 213
   Insn 1572: point = 215
  BB 132
   Insn 1570: point = 216
   Insn 1569: point = 216
   Insn 1568: point = 217
   Insn 1567: point = 219
  BB 120
   Insn 1512: point = 220
   Insn 1511: point = 220
   Insn 1510: point = 221
   Insn 1509: point = 223
   Insn 1508: point = 225
  BB 119
   Insn 1506: point = 226
   Insn 1505: point = 226
   Insn 1504: point = 227
   Insn 1503: point = 229
  BB 118
   Insn 1501: point = 230
   Insn 1500: point = 230
   Insn 1499: point = 231
   Insn 1498: point = 233
  BB 117
   Insn 1496: point = 234
   Insn 1495: point = 234
  BB 114
   Insn 1482: point = 234
   Insn 1481: point = 234
   Insn 1480: point = 235
   Insn 1479: point = 237
  BB 113
   Insn 1477: point = 238
   Insn 1476: point = 238
   Insn 1475: point = 239
   Insn 1474: point = 241
  BB 111
   Insn 1466: point = 242
   Insn 1465: point = 242
  BB 110
   Insn 1463: point = 242
   Insn 1462: point = 242
  BB 109
   Insn 1460: point = 242
   Insn 1459: point = 242
  BB 6
   Insn 316: point = 242
   Insn 315: point = 242
   Insn 314: point = 243
  BB 108
   Insn 1916: point = 244
   Insn 1453: point = 244
  BB 104
   Insn 1912: point = 244
   Insn 1421: point = 244
   Insn 1420: point = 245
  BB 103
   Insn 1418: point = 246
   Insn 1417: point = 246
   Insn 1416: point = 247
   Insn 1415: point = 248
   Insn 1414: point = 248
   Insn 1413: point = 249
   Insn 1412: point = 249
   Insn 1411: point = 251
   Insn 1410: point = 253
   Insn 1409: point = 254
   Insn 1408: point = 256
   Insn 1407: point = 258
  BB 102
   Insn 1910: point = 259
   Insn 1402: point = 259
   Insn 1401: point = 260
  BB 101
   Insn 1399: point = 261
   Insn 1398: point = 261
   Insn 1397: point = 262
   Insn 1396: point = 263
   Insn 1395: point = 263
   Insn 1394: point = 264
   Insn 1393: point = 264
   Insn 1392: point = 266
   Insn 1391: point = 268
   Insn 1390: point = 269
   Insn 1389: point = 271
   Insn 1388: point = 273
  BB 100
   Insn 1908: point = 274
   Insn 1383: point = 274
   Insn 1382: point = 275
   Insn 1381: point = 277
  BB 98
   Insn 1374: point = 278
   Insn 1373: point = 278
   Insn 1372: point = 279
   Insn 1371: point = 281
   Insn 1370: point = 283
   Insn 1369: point = 284
  BB 97
   Insn 1367: point = 284
   Insn 1366: point = 284
   Insn 1365: point = 285
   Insn 1364: point = 286
   Insn 1363: point = 286
   Insn 1362: point = 287
   Insn 1361: point = 287
   Insn 1360: point = 289
   Insn 1359: point = 291
   Insn 1358: point = 292
   Insn 1357: point = 294
   Insn 1356: point = 296
  BB 96
   Insn 1904: point = 297
   Insn 1351: point = 297
   Insn 1350: point = 298
  BB 94
   Insn 1343: point = 299
   Insn 1342: point = 299
   Insn 1341: point = 300
   Insn 1340: point = 302
   Insn 1339: point = 303
  BB 93
   Insn 1337: point = 303
   Insn 1336: point = 303
   Insn 1335: point = 304
   Insn 1334: point = 305
   Insn 1333: point = 305
   Insn 1332: point = 306
   Insn 1331: point = 306
   Insn 1330: point = 308
   Insn 1329: point = 310
   Insn 1328: point = 311
   Insn 1327: point = 313
   Insn 1326: point = 315
  BB 92
   Insn 1900: point = 316
   Insn 1321: point = 316
   Insn 1320: point = 317
   Insn 1319: point = 319
  BB 90
   Insn 1312: point = 320
   Insn 1311: point = 320
   Insn 1310: point = 321
   Insn 1309: point = 323
   Insn 1308: point = 325
   Insn 1307: point = 326
  BB 89
   Insn 1305: point = 326
   Insn 1304: point = 326
   Insn 1303: point = 327
   Insn 1302: point = 328
   Insn 1301: point = 328
   Insn 1300: point = 329
   Insn 1299: point = 329
   Insn 1298: point = 331
   Insn 1297: point = 333
   Insn 1296: point = 334
   Insn 1295: point = 336
   Insn 1294: point = 338
  BB 88
   Insn 1896: point = 339
   Insn 1289: point = 339
   Insn 1288: point = 340
  BB 86
   Insn 1281: point = 341
   Insn 1280: point = 341
   Insn 1279: point = 342
   Insn 1278: point = 344
   Insn 1277: point = 345
  BB 85
   Insn 1275: point = 345
   Insn 1274: point = 345
   Insn 1273: point = 346
   Insn 1272: point = 347
   Insn 1271: point = 347
   Insn 1270: point = 348
   Insn 1269: point = 348
   Insn 1268: point = 350
   Insn 1267: point = 352
   Insn 1266: point = 353
   Insn 1265: point = 355
   Insn 1264: point = 357
  BB 84
   Insn 1892: point = 358
   Insn 1259: point = 358
  BB 82
   Insn 1252: point = 358
   Insn 1251: point = 358
   Insn 1250: point = 359
   Insn 1249: point = 360
   Insn 1248: point = 360
   Insn 1247: point = 361
   Insn 1246: point = 361
   Insn 1245: point = 363
  BB 80
   Insn 1237: point = 364
   Insn 1236: point = 364
  BB 79
   Insn 1234: point = 364
   Insn 1233: point = 364
  BB 78
   Insn 1231: point = 364
   Insn 1230: point = 364
   Insn 1229: point = 365
   Insn 1228: point = 366
   Insn 1227: point = 366
   Insn 1226: point = 367
   Insn 1225: point = 367
   Insn 1224: point = 369
   Insn 1223: point = 371
   Insn 1222: point = 372
   Insn 1221: point = 374
   Insn 1220: point = 376
  BB 77
   Insn 1886: point = 377
   Insn 1215: point = 377
   Insn 1214: point = 378
   Insn 1213: point = 380
   Insn 1212: point = 381
   Insn 1211: point = 383
   Insn 1210: point = 384
   Insn 1209: point = 385
   Insn 1208: point = 387
   Insn 1207: point = 388
   Insn 1206: point = 390
   Insn 1205: point = 391
   Insn 1204: point = 392
   Insn 1203: point = 394
   Insn 1202: point = 395
   Insn 1201: point = 397
   Insn 1200: point = 398
   Insn 1199: point = 399
   Insn 1198: point = 401
   Insn 1197: point = 402
   Insn 1196: point = 404
   Insn 1195: point = 405
   Insn 1194: point = 406
   Insn 1193: point = 408
   Insn 1192: point = 409
   Insn 1191: point = 411
   Insn 1190: point = 412
   Insn 1189: point = 413
   Insn 1188: point = 415
   Insn 1187: point = 416
   Insn 1186: point = 418
  BB 76
   Insn 1183: point = 419
  BB 75
   Insn 1180: point = 419
   Insn 1179: point = 419
  BB 74
   Insn 1177: point = 419
   Insn 1176: point = 419
  BB 73
   Insn 1174: point = 419
   Insn 1173: point = 419
   Insn 1172: point = 419
  BB 71
   Insn 1165: point = 419
   Insn 1164: point = 419
   Insn 1163: point = 420
   Insn 1162: point = 421
   Insn 1161: point = 421
   Insn 1160: point = 422
   Insn 1159: point = 422
   Insn 1158: point = 424
  BB 69
   Insn 1150: point = 425
   Insn 1149: point = 425
  BB 68
   Insn 1147: point = 425
   Insn 1146: point = 425
  BB 67
   Insn 1144: point = 425
   Insn 1143: point = 425
   Insn 1142: point = 426
   Insn 1141: point = 427
   Insn 1140: point = 427
   Insn 1139: point = 428
   Insn 1138: point = 428
   Insn 1137: point = 430
   Insn 1136: point = 432
   Insn 1135: point = 433
   Insn 1134: point = 435
   Insn 1133: point = 437
  BB 66
   Insn 1880: point = 438
   Insn 1128: point = 438
   Insn 1127: point = 439
   Insn 1126: point = 441
   Insn 1125: point = 442
   Insn 1124: point = 442
  BB 65
   Insn 1122: point = 442
   Insn 1121: point = 442
   Insn 1120: point = 443
   Insn 1119: point = 444
   Insn 1118: point = 444
   Insn 1117: point = 445
   Insn 1116: point = 445
   Insn 1115: point = 447
   Insn 1114: point = 449
   Insn 1113: point = 450
   Insn 1112: point = 452
   Insn 1111: point = 454
  BB 64
   Insn 1878: point = 455
   Insn 1106: point = 455
   Insn 1105: point = 456
   Insn 1104: point = 457
  BB 63
   Insn 1102: point = 457
   Insn 1101: point = 457
   Insn 1100: point = 458
   Insn 1099: point = 459
   Insn 1098: point = 459
   Insn 1097: point = 460
   Insn 1096: point = 460
   Insn 1095: point = 462
   Insn 1094: point = 464
   Insn 1093: point = 465
   Insn 1092: point = 467
   Insn 1091: point = 469
  BB 62
   Insn 1876: point = 470
   Insn 1086: point = 470
   Insn 1085: point = 471
   Insn 1084: point = 473
   Insn 1083: point = 474
   Insn 1082: point = 474
  BB 61
   Insn 1080: point = 474
   Insn 1079: point = 474
   Insn 1078: point = 475
   Insn 1077: point = 476
   Insn 1076: point = 476
   Insn 1075: point = 477
   Insn 1074: point = 477
   Insn 1073: point = 479
   Insn 1072: point = 481
   Insn 1071: point = 482
   Insn 1070: point = 484
   Insn 1069: point = 486
  BB 60
   Insn 1874: point = 487
   Insn 1064: point = 487
   Insn 1063: point = 488
   Insn 1062: point = 489
  BB 59
   Insn 1060: point = 489
   Insn 1059: point = 489
   Insn 1058: point = 490
   Insn 1057: point = 491
   Insn 1056: point = 491
   Insn 1055: point = 492
   Insn 1054: point = 492
   Insn 1053: point = 494
   Insn 1052: point = 496
   Insn 1051: point = 497
   Insn 1050: point = 499
   Insn 1049: point = 501
  BB 58
   Insn 1872: point = 502
   Insn 1044: point = 502
   Insn 1043: point = 503
   Insn 1042: point = 505
   Insn 1041: point = 506
  BB 57
   Insn 1039: point = 506
   Insn 1038: point = 506
   Insn 1037: point = 507
   Insn 1036: point = 508
   Insn 1035: point = 508
   Insn 1034: point = 509
   Insn 1033: point = 509
   Insn 1032: point = 511
   Insn 1031: point = 513
   Insn 1030: point = 514
   Insn 1029: point = 516
   Insn 1028: point = 518
  BB 55
   Insn 1868: point = 519
   Insn 1018: point = 519
   Insn 1017: point = 519
   Insn 1016: point = 519
   Insn 1015: point = 520
   Insn 1014: point = 520
   Insn 1013: point = 521
   Insn 1012: point = 523
   Insn 1011: point = 525
   Insn 1010: point = 526
   Insn 1009: point = 528
   Insn 1008: point = 530
   Insn 1007: point = 531
   Insn 1006: point = 533
  BB 54
   Insn 1004: point = 534
   Insn 1003: point = 534
   Insn 1002: point = 535
   Insn 1001: point = 536
   Insn 1000: point = 536
   Insn 999: point = 537
   Insn 998: point = 539
   Insn 997: point = 541
   Insn 996: point = 542
   Insn 995: point = 544
   Insn 994: point = 546
   Insn 993: point = 547
  BB 53
   Insn 991: point = 547
   Insn 990: point = 547
   Insn 989: point = 548
   Insn 988: point = 549
   Insn 987: point = 549
   Insn 986: point = 550
   Insn 985: point = 550
   Insn 984: point = 552
   Insn 983: point = 554
   Insn 982: point = 555
   Insn 981: point = 557
   Insn 980: point = 559
  BB 50
   Insn 1862: point = 560
   Insn 965: point = 560
   Insn 964: point = 560
   Insn 963: point = 560
   Insn 962: point = 561
   Insn 961: point = 561
   Insn 960: point = 562
   Insn 959: point = 564
   Insn 958: point = 566
   Insn 957: point = 567
   Insn 956: point = 569
   Insn 955: point = 571
   Insn 954: point = 572
   Insn 953: point = 574
   Insn 952: point = 576
  BB 49
   Insn 950: point = 577
   Insn 949: point = 577
   Insn 948: point = 578
   Insn 947: point = 579
   Insn 946: point = 579
   Insn 945: point = 580
   Insn 944: point = 582
   Insn 943: point = 584
   Insn 942: point = 585
   Insn 941: point = 587
   Insn 940: point = 589
   Insn 939: point = 590
   Insn 938: point = 590
   Insn 937: point = 591
   Insn 936: point = 593
   Insn 935: point = 594
  BB 48
   Insn 933: point = 594
   Insn 932: point = 594
   Insn 931: point = 595
   Insn 930: point = 597
   Insn 929: point = 599
   Insn 928: point = 600
  BB 47
   Insn 926: point = 600
   Insn 925: point = 600
   Insn 924: point = 601
   Insn 923: point = 602
   Insn 922: point = 602
   Insn 921: point = 603
   Insn 920: point = 603
   Insn 919: point = 605
   Insn 918: point = 607
   Insn 917: point = 608
   Insn 916: point = 610
   Insn 915: point = 612
  BB 44
   Insn 1856: point = 613
   Insn 900: point = 613
   Insn 899: point = 613
   Insn 898: point = 613
   Insn 897: point = 614
   Insn 896: point = 614
   Insn 895: point = 615
   Insn 894: point = 617
   Insn 893: point = 619
   Insn 892: point = 620
   Insn 891: point = 622
   Insn 890: point = 624
   Insn 889: point = 625
   Insn 888: point = 627
  BB 43
   Insn 886: point = 628
   Insn 885: point = 628
   Insn 884: point = 629
   Insn 883: point = 630
   Insn 882: point = 630
   Insn 881: point = 631
   Insn 880: point = 633
   Insn 879: point = 635
   Insn 878: point = 636
   Insn 877: point = 638
   Insn 876: point = 640
   Insn 875: point = 641
   Insn 874: point = 641
   Insn 873: point = 642
  BB 42
   Insn 871: point = 643
   Insn 870: point = 643
   Insn 869: point = 644
   Insn 868: point = 646
   Insn 867: point = 647
  BB 41
   Insn 865: point = 647
   Insn 864: point = 647
   Insn 863: point = 648
   Insn 862: point = 649
   Insn 861: point = 649
   Insn 860: point = 650
   Insn 859: point = 650
   Insn 858: point = 652
   Insn 857: point = 654
   Insn 856: point = 655
   Insn 855: point = 657
   Insn 854: point = 659
  BB 39
   Insn 1852: point = 660
   Insn 844: point = 660
   Insn 843: point = 661
   Insn 842: point = 662
   Insn 841: point = 664
   Insn 840: point = 665
   Insn 839: point = 666
   Insn 838: point = 668
   Insn 837: point = 669
  BB 38
   Insn 835: point = 669
   Insn 834: point = 669
   Insn 833: point = 670
   Insn 832: point = 672
   Insn 831: point = 674
   Insn 830: point = 675
  BB 37
   Insn 828: point = 675
   Insn 827: point = 675
   Insn 826: point = 676
   Insn 825: point = 677
   Insn 824: point = 677
   Insn 823: point = 678
   Insn 822: point = 678
   Insn 821: point = 680
   Insn 820: point = 682
   Insn 819: point = 683
   Insn 818: point = 685
   Insn 817: point = 687
  BB 35
   Insn 1848: point = 688
   Insn 807: point = 688
   Insn 806: point = 689
   Insn 805: point = 690
   Insn 804: point = 691
   Insn 803: point = 692
  BB 34
   Insn 801: point = 693
   Insn 800: point = 693
   Insn 799: point = 694
   Insn 798: point = 696
   Insn 797: point = 697
  BB 33
   Insn 795: point = 697
   Insn 794: point = 697
   Insn 793: point = 698
   Insn 792: point = 699
   Insn 791: point = 699
   Insn 790: point = 700
   Insn 789: point = 700
   Insn 788: point = 702
   Insn 787: point = 704
   Insn 786: point = 705
   Insn 785: point = 707
   Insn 784: point = 709
  BB 31
   Insn 775: point = 710
   Insn 774: point = 710
   Insn 773: point = 711
   Insn 772: point = 712
   Insn 771: point = 712
   Insn 770: point = 713
   Insn 769: point = 713
   Insn 768: point = 715
   Insn 767: point = 717
   Insn 766: point = 718
   Insn 765: point = 720
   Insn 764: point = 722
  BB 29
   Insn 755: point = 723
   Insn 754: point = 723
   Insn 753: point = 724
   Insn 752: point = 725
   Insn 751: point = 725
   Insn 750: point = 726
   Insn 749: point = 726
   Insn 748: point = 728
   Insn 747: point = 730
   Insn 746: point = 731
   Insn 745: point = 733
   Insn 744: point = 735
  BB 27
   Insn 1844: point = 736
   Insn 730: point = 736
   Insn 729: point = 737
   Insn 728: point = 739
   Insn 727: point = 740
   Insn 726: point = 742
   Insn 725: point = 744
   Insn 724: point = 746
   Insn 723: point = 747
   Insn 722: point = 747
   Insn 721: point = 747
   Insn 720: point = 747
   Insn 719: point = 748
   Insn 718: point = 750
   Insn 717: point = 752
   Insn 716: point = 753
   Insn 715: point = 754
   Insn 714: point = 756
   Insn 713: point = 757
   Insn 712: point = 757
   Insn 711: point = 758
   Insn 710: point = 760
   Insn 709: point = 762
   Insn 708: point = 763
   Insn 707: point = 765
   Insn 706: point = 767
   Insn 705: point = 768
   Insn 704: point = 770
   Insn 703: point = 771
   Insn 702: point = 773
   Insn 701: point = 775
   Insn 700: point = 777
   Insn 699: point = 778
   Insn 698: point = 778
   Insn 697: point = 778
   Insn 696: point = 778
   Insn 695: point = 779
   Insn 694: point = 781
   Insn 693: point = 783
   Insn 692: point = 784
   Insn 691: point = 785
   Insn 690: point = 787
   Insn 689: point = 788
   Insn 688: point = 790
   Insn 687: point = 791
   Insn 686: point = 793
   Insn 685: point = 795
   Insn 684: point = 797
   Insn 683: point = 798
   Insn 682: point = 798
   Insn 681: point = 798
   Insn 680: point = 798
   Insn 679: point = 799
   Insn 678: point = 801
   Insn 677: point = 803
   Insn 676: point = 804
   Insn 675: point = 805
   Insn 674: point = 806
   Insn 673: point = 807
   Insn 672: point = 809
   Insn 671: point = 810
   Insn 670: point = 810
   Insn 669: point = 811
   Insn 668: point = 813
   Insn 667: point = 815
   Insn 666: point = 816
   Insn 665: point = 818
   Insn 664: point = 820
   Insn 663: point = 821
   Insn 662: point = 823
   Insn 661: point = 824
   Insn 660: point = 826
   Insn 659: point = 828
   Insn 658: point = 830
   Insn 657: point = 831
   Insn 656: point = 831
   Insn 655: point = 831
   Insn 654: point = 831
   Insn 653: point = 832
   Insn 652: point = 834
   Insn 651: point = 836
  BB 25
   Insn 1840: point = 837
  BB 24
   Insn 649: point = 837
   Insn 648: point = 837
   Insn 647: point = 838
   Insn 646: point = 839
   Insn 645: point = 839
   Insn 644: point = 840
   Insn 643: point = 842
   Insn 642: point = 844
   Insn 641: point = 845
   Insn 640: point = 847
   Insn 639: point = 849
   Insn 638: point = 850
   Insn 628: point = 850
   Insn 627: point = 851
   Insn 626: point = 853
   Insn 625: point = 854
   Insn 624: point = 854
   Insn 623: point = 855
   Insn 622: point = 857
   Insn 621: point = 859
   Insn 620: point = 860
   Insn 619: point = 862
   Insn 618: point = 864
   Insn 617: point = 865
   Insn 616: point = 867
   Insn 615: point = 868
   Insn 614: point = 870
   Insn 613: point = 872
   Insn 612: point = 874
   Insn 611: point = 875
   Insn 610: point = 875
   Insn 609: point = 875
   Insn 608: point = 875
   Insn 607: point = 876
   Insn 606: point = 878
   Insn 605: point = 880
  BB 23
   Insn 603: point = 881
   Insn 602: point = 881
   Insn 601: point = 882
   Insn 600: point = 883
   Insn 599: point = 883
   Insn 598: point = 884
   Insn 597: point = 886
   Insn 596: point = 888
   Insn 595: point = 889
   Insn 594: point = 891
   Insn 593: point = 893
   Insn 592: point = 894
   Insn 591: point = 894
   Insn 590: point = 895
   Insn 589: point = 897
   Insn 588: point = 898
   Insn 587: point = 900
   Insn 586: point = 902
   Insn 585: point = 904
   Insn 584: point = 905
   Insn 583: point = 905
   Insn 582: point = 905
   Insn 581: point = 905
   Insn 580: point = 906
   Insn 579: point = 908
   Insn 578: point = 910
  BB 10
   Insn 1830: point = 911
   Insn 350: point = 911
   Insn 349: point = 911
   Insn 348: point = 911
   Insn 347: point = 912
   Insn 346: point = 913
   Insn 345: point = 915
   Insn 344: point = 917
   Insn 343: point = 919
   Insn 342: point = 920
   Insn 341: point = 921
   Insn 340: point = 923
   Insn 339: point = 925
   Insn 338: point = 926
   Insn 337: point = 928
   Insn 336: point = 930
  BB 8
   Insn 329: point = 931
   Insn 328: point = 931
  BB 22
   Insn 576: point = 931
   Insn 575: point = 931
   Insn 574: point = 932
   Insn 573: point = 933
   Insn 572: point = 933
   Insn 571: point = 934
   Insn 570: point = 934
   Insn 569: point = 936
   Insn 568: point = 938
   Insn 567: point = 939
   Insn 566: point = 941
   Insn 565: point = 943
  BB 20
   Insn 1834: point = 944
   Insn 555: point = 944
   Insn 554: point = 945
   Insn 553: point = 947
   Insn 552: point = 948
   Insn 551: point = 950
   Insn 550: point = 952
   Insn 549: point = 954
   Insn 548: point = 955
   Insn 547: point = 955
   Insn 546: point = 955
   Insn 545: point = 955
   Insn 544: point = 956
   Insn 543: point = 958
   Insn 542: point = 960
   Insn 541: point = 961
   Insn 540: point = 962
   Insn 539: point = 964
   Insn 538: point = 965
   Insn 537: point = 965
   Insn 536: point = 966
   Insn 535: point = 968
   Insn 534: point = 970
   Insn 533: point = 971
   Insn 532: point = 973
   Insn 531: point = 975
   Insn 530: point = 976
   Insn 529: point = 978
   Insn 528: point = 979
   Insn 527: point = 981
   Insn 526: point = 983
   Insn 525: point = 985
   Insn 524: point = 986
   Insn 523: point = 986
   Insn 522: point = 986
   Insn 521: point = 986
   Insn 520: point = 987
   Insn 519: point = 989
   Insn 518: point = 991
   Insn 517: point = 992
   Insn 516: point = 993
   Insn 515: point = 994
   Insn 514: point = 995
   Insn 513: point = 997
   Insn 512: point = 998
   Insn 511: point = 998
   Insn 510: point = 999
   Insn 509: point = 1001
   Insn 508: point = 1003
   Insn 507: point = 1004
   Insn 506: point = 1006
   Insn 505: point = 1008
   Insn 504: point = 1009
   Insn 503: point = 1011
   Insn 502: point = 1012
   Insn 501: point = 1014
   Insn 500: point = 1016
   Insn 499: point = 1018
   Insn 498: point = 1019
   Insn 497: point = 1019
   Insn 496: point = 1019
   Insn 495: point = 1019
   Insn 494: point = 1020
   Insn 493: point = 1022
   Insn 492: point = 1024
  BB 19
   Insn 490: point = 1025
   Insn 489: point = 1025
   Insn 488: point = 1026
   Insn 487: point = 1027
   Insn 486: point = 1027
   Insn 485: point = 1028
   Insn 484: point = 1030
   Insn 483: point = 1032
   Insn 482: point = 1033
   Insn 481: point = 1035
   Insn 480: point = 1037
   Insn 479: point = 1038
   Insn 478: point = 1038
   Insn 477: point = 1039
   Insn 476: point = 1041
   Insn 475: point = 1042
   Insn 474: point = 1044
   Insn 473: point = 1046
   Insn 472: point = 1048
   Insn 471: point = 1049
   Insn 470: point = 1049
   Insn 469: point = 1049
   Insn 468: point = 1049
   Insn 467: point = 1050
   Insn 466: point = 1052
   Insn 465: point = 1054
  BB 18
   Insn 463: point = 1055
   Insn 462: point = 1055
   Insn 461: point = 1056
   Insn 460: point = 1057
   Insn 459: point = 1057
   Insn 458: point = 1058
   Insn 457: point = 1058
   Insn 456: point = 1060
   Insn 455: point = 1062
   Insn 454: point = 1063
   Insn 453: point = 1065
   Insn 452: point = 1067
  BB 17
   Insn 449: point = 1068
   Insn 448: point = 1069
   Insn 447: point = 1071
   Insn 446: point = 1072
   Insn 445: point = 1074
   Insn 444: point = 1076
   Insn 443: point = 1078
   Insn 442: point = 1079
   Insn 441: point = 1079
   Insn 440: point = 1079
   Insn 439: point = 1079
   Insn 438: point = 1080
   Insn 437: point = 1082
   Insn 436: point = 1084
   Insn 435: point = 1085
   Insn 434: point = 1086
   Insn 433: point = 1087
   Insn 432: point = 1088
   Insn 431: point = 1090
   Insn 430: point = 1091
   Insn 429: point = 1093
   Insn 428: point = 1095
   Insn 427: point = 1097
   Insn 426: point = 1098
   Insn 425: point = 1098
   Insn 424: point = 1098
   Insn 423: point = 1098
   Insn 422: point = 1099
   Insn 421: point = 1101
   Insn 420: point = 1103
  BB 16
   Insn 418: point = 1104
   Insn 417: point = 1104
   Insn 416: point = 1105
   Insn 415: point = 1106
   Insn 414: point = 1106
   Insn 413: point = 1107
   Insn 412: point = 1107
   Insn 411: point = 1109
   Insn 410: point = 1111
   Insn 409: point = 1112
   Insn 408: point = 1114
   Insn 407: point = 1116
   Insn 406: point = 1117
   Insn 405: point = 1118
  BB 14
   Insn 398: point = 1119
   Insn 397: point = 1119
   Insn 396: point = 1120
   Insn 395: point = 1122
  BB 13
   Insn 392: point = 1123
   Insn 391: point = 1123
   Insn 390: point = 1124
   Insn 389: point = 1125
   Insn 388: point = 1125
   Insn 387: point = 1126
   Insn 386: point = 1126
   Insn 385: point = 1128
   Insn 384: point = 1130
   Insn 383: point = 1131
   Insn 382: point = 1133
   Insn 381: point = 1135
  BB 12
   Insn 379: point = 1136
   Insn 378: point = 1136
   Insn 377: point = 1137
   Insn 376: point = 1138
   Insn 375: point = 1138
   Insn 374: point = 1139
   Insn 373: point = 1139
   Insn 372: point = 1141
   Insn 371: point = 1143
   Insn 370: point = 1144
   Insn 369: point = 1146
   Insn 368: point = 1148
  BB 11
   Insn 366: point = 1149
   Insn 365: point = 1149
   Insn 364: point = 1150
   Insn 363: point = 1151
   Insn 362: point = 1151
   Insn 361: point = 1152
   Insn 360: point = 1152
   Insn 359: point = 1154
   Insn 358: point = 1156
   Insn 357: point = 1157
   Insn 356: point = 1159
   Insn 355: point = 1161
  BB 7
   Insn 326: point = 1162
   Insn 325: point = 1162
   Insn 324: point = 1163
   Insn 323: point = 1165
   Insn 322: point = 1167
   Insn 321: point = 1169
   Insn 320: point = 1170
   Insn 319: point = 1172
   Insn 318: point = 1174
  BB 5
   Insn 312: point = 1175
   Insn 311: point = 1176
   Insn 310: point = 1177
  BB 3
   Insn 52: point = 1177
   Insn 51: point = 1177
  BB 4
   Insn 1826: point = 1177
   Insn 304: point = 1177
   Insn 303: point = 1177
   Insn 302: point = 1178
   Insn 301: point = 1180
   Insn 300: point = 1181
   Insn 299: point = 1183
   Insn 298: point = 1185
   Insn 297: point = 1187
   Insn 296: point = 1188
   Insn 295: point = 1188
   Insn 294: point = 1188
   Insn 293: point = 1188
   Insn 292: point = 1189
   Insn 291: point = 1191
   Insn 290: point = 1192
   Insn 289: point = 1193
   Insn 288: point = 1195
   Insn 287: point = 1196
   Insn 286: point = 1198
   Insn 285: point = 1200
   Insn 284: point = 1202
   Insn 283: point = 1203
   Insn 282: point = 1203
   Insn 281: point = 1203
   Insn 280: point = 1203
   Insn 279: point = 1204
   Insn 278: point = 1206
   Insn 277: point = 1207
   Insn 276: point = 1208
   Insn 275: point = 1210
   Insn 274: point = 1211
   Insn 273: point = 1213
   Insn 272: point = 1215
   Insn 271: point = 1217
   Insn 270: point = 1218
   Insn 269: point = 1218
   Insn 268: point = 1218
   Insn 267: point = 1218
   Insn 266: point = 1219
   Insn 265: point = 1221
   Insn 264: point = 1222
   Insn 263: point = 1223
   Insn 262: point = 1225
   Insn 261: point = 1226
   Insn 260: point = 1228
   Insn 259: point = 1230
   Insn 258: point = 1232
   Insn 257: point = 1233
   Insn 256: point = 1233
   Insn 255: point = 1233
   Insn 254: point = 1233
   Insn 253: point = 1234
   Insn 252: point = 1236
   Insn 251: point = 1237
   Insn 250: point = 1238
   Insn 249: point = 1240
   Insn 248: point = 1241
   Insn 247: point = 1243
   Insn 246: point = 1245
   Insn 245: point = 1247
   Insn 244: point = 1248
   Insn 243: point = 1248
   Insn 242: point = 1248
   Insn 241: point = 1248
   Insn 240: point = 1249
   Insn 239: point = 1251
   Insn 238: point = 1252
   Insn 237: point = 1253
   Insn 236: point = 1255
   Insn 235: point = 1256
   Insn 234: point = 1258
   Insn 233: point = 1260
   Insn 232: point = 1262
   Insn 231: point = 1263
   Insn 230: point = 1263
   Insn 229: point = 1263
   Insn 228: point = 1263
   Insn 227: point = 1264
   Insn 226: point = 1266
   Insn 225: point = 1267
   Insn 224: point = 1268
   Insn 223: point = 1269
   Insn 222: point = 1271
   Insn 221: point = 1272
   Insn 220: point = 1274
   Insn 219: point = 1276
   Insn 218: point = 1278
   Insn 217: point = 1279
   Insn 216: point = 1279
   Insn 215: point = 1279
   Insn 214: point = 1279
   Insn 213: point = 1280
   Insn 212: point = 1282
   Insn 211: point = 1283
   Insn 210: point = 1284
   Insn 209: point = 1286
   Insn 208: point = 1287
   Insn 207: point = 1289
   Insn 206: point = 1291
   Insn 205: point = 1293
   Insn 204: point = 1294
   Insn 203: point = 1294
   Insn 202: point = 1294
   Insn 201: point = 1294
   Insn 200: point = 1295
   Insn 199: point = 1297
   Insn 198: point = 1298
   Insn 197: point = 1299
   Insn 196: point = 1301
   Insn 195: point = 1302
   Insn 194: point = 1304
   Insn 193: point = 1306
   Insn 192: point = 1308
   Insn 191: point = 1309
   Insn 190: point = 1309
   Insn 189: point = 1309
   Insn 188: point = 1309
   Insn 187: point = 1310
   Insn 186: point = 1312
   Insn 185: point = 1313
   Insn 184: point = 1314
   Insn 183: point = 1316
   Insn 182: point = 1317
   Insn 181: point = 1319
   Insn 180: point = 1321
   Insn 179: point = 1323
   Insn 178: point = 1324
   Insn 177: point = 1324
   Insn 176: point = 1324
   Insn 175: point = 1324
   Insn 174: point = 1325
   Insn 173: point = 1327
   Insn 172: point = 1328
   Insn 171: point = 1329
   Insn 170: point = 1331
   Insn 169: point = 1332
   Insn 168: point = 1334
   Insn 167: point = 1336
   Insn 166: point = 1338
   Insn 165: point = 1339
   Insn 164: point = 1339
   Insn 163: point = 1339
   Insn 162: point = 1339
   Insn 161: point = 1340
   Insn 160: point = 1342
   Insn 159: point = 1343
   Insn 158: point = 1344
   Insn 157: point = 1345
   Insn 156: point = 1347
   Insn 155: point = 1348
   Insn 154: point = 1350
   Insn 153: point = 1352
   Insn 152: point = 1354
   Insn 151: point = 1355
   Insn 150: point = 1355
   Insn 149: point = 1355
   Insn 148: point = 1355
   Insn 147: point = 1356
   Insn 146: point = 1358
   Insn 145: point = 1359
   Insn 144: point = 1360
   Insn 143: point = 1362
   Insn 142: point = 1363
   Insn 141: point = 1365
   Insn 140: point = 1367
   Insn 139: point = 1369
   Insn 138: point = 1370
   Insn 137: point = 1370
   Insn 136: point = 1370
   Insn 135: point = 1370
   Insn 134: point = 1371
   Insn 133: point = 1373
   Insn 132: point = 1374
   Insn 131: point = 1375
   Insn 130: point = 1377
   Insn 129: point = 1378
   Insn 128: point = 1380
   Insn 127: point = 1382
   Insn 126: point = 1384
   Insn 125: point = 1385
   Insn 124: point = 1385
   Insn 123: point = 1385
   Insn 122: point = 1385
   Insn 121: point = 1386
   Insn 120: point = 1388
   Insn 119: point = 1389
   Insn 118: point = 1390
   Insn 117: point = 1392
   Insn 116: point = 1393
   Insn 115: point = 1395
   Insn 114: point = 1397
   Insn 113: point = 1399
   Insn 112: point = 1400
   Insn 111: point = 1400
   Insn 110: point = 1400
   Insn 109: point = 1400
   Insn 108: point = 1401
   Insn 107: point = 1403
   Insn 106: point = 1404
   Insn 105: point = 1405
   Insn 104: point = 1407
   Insn 103: point = 1408
   Insn 102: point = 1410
   Insn 101: point = 1412
   Insn 100: point = 1414
   Insn 99: point = 1415
   Insn 98: point = 1415
   Insn 97: point = 1415
   Insn 96: point = 1415
   Insn 95: point = 1416
   Insn 94: point = 1418
   Insn 93: point = 1419
   Insn 92: point = 1420
   Insn 91: point = 1421
   Insn 90: point = 1423
   Insn 89: point = 1424
   Insn 88: point = 1426
   Insn 87: point = 1428
   Insn 86: point = 1430
   Insn 85: point = 1431
   Insn 84: point = 1431
   Insn 83: point = 1431
   Insn 82: point = 1431
   Insn 81: point = 1432
   Insn 80: point = 1434
   Insn 79: point = 1435
   Insn 78: point = 1436
   Insn 77: point = 1438
   Insn 76: point = 1439
   Insn 75: point = 1441
   Insn 74: point = 1443
   Insn 73: point = 1445
   Insn 72: point = 1446
   Insn 71: point = 1446
   Insn 70: point = 1446
   Insn 69: point = 1446
   Insn 68: point = 1447
   Insn 67: point = 1449
   Insn 66: point = 1450
   Insn 65: point = 1451
   Insn 64: point = 1453
   Insn 63: point = 1454
   Insn 62: point = 1456
   Insn 61: point = 1458
   Insn 60: point = 1460
   Insn 59: point = 1461
   Insn 58: point = 1461
   Insn 57: point = 1461
   Insn 56: point = 1461
   Insn 55: point = 1462
   Insn 54: point = 1464
  BB 2
   Insn 49: point = 1465
   Insn 48: point = 1465
   Insn 47: point = 1466
   Insn 1961: point = 1466
   Insn 46: point = 1467
   Insn 1960: point = 1468
   Insn 45: point = 1469
   Insn 44: point = 1470
   Insn 43: point = 1472
   Insn 42: point = 1473
   Insn 41: point = 1474
   Insn 1959: point = 1474
   Insn 40: point = 1475
   Insn 1958: point = 1476
   Insn 39: point = 1477
   Insn 38: point = 1478
   Insn 37: point = 1480
   Insn 36: point = 1481
   Insn 35: point = 1482
   Insn 1957: point = 1482
   Insn 34: point = 1483
   Insn 1956: point = 1484
   Insn 33: point = 1485
   Insn 32: point = 1486
   Insn 31: point = 1487
   Insn 30: point = 1487
   Insn 29: point = 1487
   Insn 28: point = 1487
   Insn 27: point = 1487
   Insn 26: point = 1487
   Insn 25: point = 1487
   Insn 24: point = 1487
   Insn 23: point = 1487
   Insn 22: point = 1487
   Insn 21: point = 1487
   Insn 20: point = 1487
   Insn 17: point = 1487
   Insn 15: point = 1489
   Insn 14: point = 1490
   Insn 13: point = 1491
   Insn 12: point = 1492
   Insn 11: point = 1493
   Insn 10: point = 1494
   Insn 9: point = 1495
   Insn 8: point = 1496
   Insn 7: point = 1497
   Insn 6: point = 1497
   Insn 5: point = 1497
   Insn 4: point = 1497
   Insn 3: point = 1497
   Insn 2: point = 1497
 r87: [50..71] [29..33] [16..16] [3..9]
 r88: [1460..1462]
 r89: [1452..1454]
 r90: [1450..1451]
 r91: [1445..1447]
 r92: [1437..1439]
 r93: [1435..1436]
 r94: [1430..1432]
 r95: [1422..1424]
 r96: [1419..1421]
 r97: [1414..1416]
 r98: [1406..1408]
 r99: [1404..1405]
 r100: [1399..1401]
 r101: [1391..1393]
 r102: [1389..1390]
 r103: [1384..1386]
 r104: [1376..1378]
 r105: [1374..1375]
 r106: [1369..1371]
 r107: [1361..1363]
 r108: [1359..1360]
 r109: [1354..1356]
 r110: [1346..1348]
 r111: [1343..1345]
 r112: [1338..1340]
 r113: [1330..1332]
 r114: [1328..1329]
 r115: [1323..1325]
 r116: [1315..1317]
 r117: [1313..1314]
 r118: [1308..1310]
 r119: [1300..1302]
 r120: [1298..1299]
 r121: [1293..1295]
 r122: [1285..1287]
 r123: [1283..1284]
 r124: [1278..1280]
 r125: [1270..1272]
 r126: [1267..1269]
 r127: [1262..1264]
 r128: [1254..1256]
 r129: [1252..1253]
 r130: [1247..1249]
 r131: [1239..1241]
 r132: [1237..1238]
 r133: [1232..1234]
 r134: [1224..1226]
 r135: [1222..1223]
 r136: [1217..1219]
 r137: [1209..1211]
 r138: [1207..1208]
 r139: [1202..1204]
 r140: [1194..1196]
 r141: [1192..1193]
 r142: [1187..1189]
 r143: [1179..1181]
 r144: [1177..1178]
 r145: [1171..1172]
 r146: [1168..1170]
 r147: [1166..1167]
 r148: [1164..1165]
 r149: [1162..1163]
 r150: [1158..1159]
 r151: [1155..1157]
 r152: [1153..1154]
 r153: [1151..1152]
 r154: [1149..1150]
 r155: [1145..1146]
 r156: [1142..1144]
 r157: [1140..1141]
 r158: [1138..1139]
 r159: [1136..1137]
 r160: [1132..1133]
 r161: [1129..1131]
 r162: [1127..1128]
 r163: [1125..1126]
 r164: [1123..1124]
 r165: [732..733]
 r166: [729..731]
 r167: [727..728]
 r168: [725..726]
 r169: [723..724]
 r170: [719..720]
 r171: [716..718]
 r172: [714..715]
 r173: [712..713]
 r174: [710..711]
 r175: [706..707]
 r176: [703..705]
 r177: [701..702]
 r178: [699..700]
 r179: [697..698]
 r180: [693..694]
 r181: [684..685]
 r182: [681..683]
 r183: [679..680]
 r184: [677..678]
 r185: [675..676]
 r186: [671..672]
 r187: [669..670]
 r188: [665..666]
 r189: [660..662]
 r190: [656..657]
 r191: [653..655]
 r192: [651..652]
 r193: [649..650]
 r194: [647..648]
 r195: [643..644]
 r196: [637..638]
 r197: [634..636]
 r198: [632..633]
 r199: [630..631]
 r200: [628..629]
 r201: [614..625]
 r202: [621..622]
 r203: [618..620]
 r204: [616..617]
 r205: [613..615]
 r206: [609..610]
 r207: [606..608]
 r208: [604..605]
 r209: [602..603]
 r210: [600..601]
 r211: [596..597]
 r212: [594..595]
 r213: [590..591]
 r214: [586..587]
 r215: [583..585]
 r216: [581..582]
 r217: [579..580]
 r218: [577..578]
 r219: [573..574]
 r220: [561..572]
 r221: [568..569]
 r222: [565..567]
 r223: [563..564]
 r224: [560..562]
 r225: [556..557]
 r226: [553..555]
 r227: [551..552]
 r228: [549..550]
 r229: [547..548]
 r230: [543..544]
 r231: [540..542]
 r232: [538..539]
 r233: [536..537]
 r234: [534..535]
 r235: [520..531]
 r236: [527..528]
 r237: [524..526]
 r238: [522..523]
 r239: [519..521]
 r240: [515..516]
 r241: [512..514]
 r242: [510..511]
 r243: [508..509]
 r244: [506..507]
 r245: [502..503]
 r246: [498..499]
 r247: [495..497]
 r248: [493..494]
 r249: [491..492]
 r250: [489..490]
 r251: [483..484]
 r252: [480..482]
 r253: [478..479]
 r254: [476..477]
 r255: [474..475]
 r256: [470..471]
 r257: [466..467]
 r258: [463..465]
 r259: [461..462]
 r260: [459..460]
 r261: [457..458]
 r262: [451..452]
 r263: [448..450]
 r264: [446..447]
 r265: [444..445]
 r266: [442..443]
 r267: [438..439]
 r268: [434..435]
 r269: [431..433]
 r270: [429..430]
 r271: [427..428]
 r272: [425..426]
 r273: [421..422]
 r274: [419..420]
 r275: [412..416]
 r276: [412..413]
 r277: [405..409]
 r278: [405..406]
 r279: [398..402]
 r280: [398..399]
 r281: [391..395]
 r282: [391..392]
 r283: [384..388]
 r284: [384..385]
 r285: [377..381]
 r286: [377..378]
 r287: [373..374]
 r288: [370..372]
 r289: [368..369]
 r290: [366..367]
 r291: [364..365]
 r292: [360..361]
 r293: [358..359]
 r294: [354..355]
 r295: [351..353]
 r296: [349..350]
 r297: [347..348]
 r298: [345..346]
 r299: [341..342]
 r300: [335..336]
 r301: [332..334]
 r302: [330..331]
 r303: [328..329]
 r304: [326..327]
 r305: [322..323]
 r306: [320..321]
 r307: [316..317]
 r308: [312..313]
 r309: [309..311]
 r310: [307..308]
 r311: [305..306]
 r312: [303..304]
 r313: [299..300]
 r314: [293..294]
 r315: [290..292]
 r316: [288..289]
 r317: [286..287]
 r318: [284..285]
 r319: [280..281]
 r320: [278..279]
 r321: [274..275]
 r322: [270..271]
 r323: [267..269]
 r324: [265..266]
 r325: [263..264]
 r326: [261..262]
 r327: [255..256]
 r328: [252..254]
 r329: [250..251]
 r330: [248..249]
 r331: [246..247]
 r332: [46..47]
 r333: [43..45]
 r334: [41..42]
 r335: [39..40]
 r336: [37..38]
 r337: [1119..1120]
 r338: [1113..1114]
 r339: [1110..1112]
 r340: [1108..1109]
 r341: [1106..1107]
 r342: [1104..1105]
 r343: [1100..1101]
 r344: [1097..1099]
 r345: [1089..1091]
 r346: [1087..1088]
 r347: [1081..1082]
 r348: [1078..1080]
 r349: [1070..1072]
 r350: [1068..1069]
 r351: [1064..1065]
 r352: [1061..1063]
 r353: [1059..1060]
 r354: [1057..1058]
 r355: [1055..1056]
 r356: [1051..1052]
 r357: [1048..1050]
 r358: [1040..1042]
 r359: [1038..1039]
 r360: [1034..1035]
 r361: [1031..1033]
 r362: [1029..1030]
 r363: [1027..1028]
 r364: [1025..1026]
 r365: [1021..1022]
 r366: [1018..1020]
 r367: [1010..1012]
 r368: [994..1009]
 r369: [1005..1006]
 r370: [1002..1004]
 r371: [1000..1001]
 r372: [998..999]
 r373: [996..997]
 r374: [994..995]
 r375: [988..989]
 r376: [985..987]
 r377: [977..979]
 r378: [961..976]
 r379: [972..973]
 r380: [969..971]
 r381: [967..968]
 r382: [965..966]
 r383: [963..964]
 r384: [961..962]
 r385: [957..958]
 r386: [954..956]
 r387: [946..948]
 r388: [944..945]
 r389: [940..941]
 r390: [937..939]
 r391: [935..936]
 r392: [933..934]
 r393: [931..932]
 r394: [907..908]
 r395: [904..906]
 r396: [896..898]
 r397: [894..895]
 r398: [890..891]
 r399: [887..889]
 r400: [885..886]
 r401: [883..884]
 r402: [881..882]
 r403: [877..878]
 r404: [874..876]
 r405: [866..868]
 r406: [850..865]
 r407: [861..862]
 r408: [858..860]
 r409: [856..857]
 r410: [854..855]
 r411: [852..853]
 r412: [850..851]
 r413: [846..847]
 r414: [843..845]
 r415: [841..842]
 r416: [839..840]
 r417: [837..838]
 r418: [833..834]
 r419: [830..832]
 r420: [822..824]
 r421: [806..821]
 r422: [817..818]
 r423: [814..816]
 r424: [812..813]
 r425: [810..811]
 r426: [808..809]
 r427: [806..807]
 r428: [800..801]
 r429: [797..799]
 r430: [789..791]
 r431: [784..788]
 r432: [784..785]
 r433: [780..781]
 r434: [777..779]
 r435: [769..771]
 r436: [753..768]
 r437: [764..765]
 r438: [761..763]
 r439: [759..760]
 r440: [757..758]
 r441: [755..756]
 r442: [753..754]
 r443: [749..750]
 r444: [746..748]
 r445: [738..740]
 r446: [736..737]
 r447: [927..928]
 r448: [924..926]
 r449: [922..923]
 r450: [912..921]
 r451: [911..913]
 r452: [238..239]
 r453: [234..235]
 r454: [198..199]
 r455: [196..197]
 r456: [230..231]
 r457: [226..227]
 r458: [222..223]
 r459: [220..221]
 r460: [190..191]
 r461: [186..187]
 r462: [184..185]
 r463: [216..217]
 r464: [212..213]
 r465: [208..209]
 r466: [204..205]
 r467: [202..203]
 r468: [25..26]
 r469: [21..22]
 r470: [17..18]
 r471: [12..13]
 r472: [10..11]
 r473: [180..183]
 r474: [174..177]
 r475: [170..171]
 r476: [164..167]
 r477: [117..121]
 r478: [116..118]
 r479: [109..113]
 r480: [108..110]
 r481: [99..105]
 r482: [101..102]
 r483: [98..100]
 r484: [90..95]
 r485: [82..87]
 r486: [156..161]
 r487: [148..153]
 r488: [144..145]
 r489: [138..143]
 r490: [130..135]
 r491: [122..127]
 r492: [80..81]
 r493: [78..79]
 r494: [74..75]
 r495: [72..73]
 r496: [1..2]
 r497: [1495..1496]
 r498: [1493..1494]
 r499: [1491..1492]
 r500: [1489..1490]
 r501: [1481..1486]
 r502: [1479..1480]
 r503: [1473..1478]
 r504: [1471..1472]
 r505: [1465..1470]
 r506: [1463..1464]
 r507: [1459..1461] [1455..1456]
 r508: [1457..1458]
 r509: [1452..1453]
 r510: [1448..1449]
 r511: [1444..1446] [1440..1441]
 r512: [1442..1443]
 r513: [1437..1438]
 r514: [1433..1434]
 r515: [1429..1431] [1425..1426]
 r516: [1427..1428]
 r517: [1422..1423]
 r518: [1419..1420]
 r519: [1417..1418]
 r520: [1413..1415] [1409..1410]
 r521: [1411..1412]
 r522: [1406..1407]
 r523: [1402..1403]
 r524: [1398..1400] [1394..1395]
 r525: [1396..1397]
 r526: [1391..1392]
 r527: [1387..1388]
 r528: [1383..1385] [1379..1380]
 r529: [1381..1382]
 r530: [1376..1377]
 r531: [1372..1373]
 r532: [1368..1370] [1364..1365]
 r533: [1366..1367]
 r534: [1361..1362]
 r535: [1357..1358]
 r536: [1353..1355] [1349..1350]
 r537: [1351..1352]
 r538: [1346..1347]
 r539: [1343..1344]
 r540: [1341..1342]
 r541: [1337..1339] [1333..1334]
 r542: [1335..1336]
 r543: [1330..1331]
 r544: [1326..1327]
 r545: [1322..1324] [1318..1319]
 r546: [1320..1321]
 r547: [1315..1316]
 r548: [1311..1312]
 r549: [1307..1309] [1303..1304]
 r550: [1305..1306]
 r551: [1300..1301]
 r552: [1296..1297]
 r553: [1292..1294] [1288..1289]
 r554: [1290..1291]
 r555: [1285..1286]
 r556: [1281..1282]
 r557: [1277..1279] [1273..1274]
 r558: [1275..1276]
 r559: [1270..1271]
 r560: [1267..1268]
 r561: [1265..1266]
 r562: [1261..1263] [1257..1258]
 r563: [1259..1260]
 r564: [1254..1255]
 r565: [1250..1251]
 r566: [1246..1248] [1242..1243]
 r567: [1244..1245]
 r568: [1239..1240]
 r569: [1235..1236]
 r570: [1231..1233] [1227..1228]
 r571: [1229..1230]
 r572: [1224..1225]
 r573: [1220..1221]
 r574: [1216..1218] [1212..1213]
 r575: [1214..1215]
 r576: [1209..1210]
 r577: [1205..1206]
 r578: [1201..1203] [1197..1198]
 r579: [1199..1200]
 r580: [1194..1195]
 r581: [1190..1191]
 r582: [1186..1188] [1182..1183]
 r583: [1184..1185]
 r584: [1179..1180]
 r585: [1175..1176]
 r586: [242..243]
 r587: [1173..1174]
 r588: [1168..1169]
 r589: [929..930]
 r590: [924..925]
 r591: [914..920]
 r592: [916..917]
 r593: [918..919]
 r594: [914..915]
 r595: [1160..1161]
 r596: [1155..1156]
 r597: [1147..1148]
 r598: [1142..1143]
 r599: [1134..1135]
 r600: [1129..1130]
 r601: [1121..1122]
 r602: [1117..1118]
 r603: [1115..1116]
 r604: [1110..1111]
 r605: [1102..1103]
 r606: [1096..1098] [1092..1093]
 r607: [1094..1095]
 r608: [1089..1090]
 r609: [1085..1086]
 r610: [1083..1084]
 r611: [1077..1079] [1073..1074]
 r612: [1075..1076]
 r613: [1070..1071]
 r614: [1066..1067]
 r615: [1061..1062]
 r616: [1053..1054]
 r617: [1047..1049] [1043..1044]
 r618: [1045..1046]
 r619: [1040..1041]
 r620: [1036..1037]
 r621: [1031..1032]
 r622: [1023..1024]
 r623: [1017..1019] [1013..1014]
 r624: [1015..1016]
 r625: [1010..1011]
 r626: [1007..1008]
 r627: [1002..1003]
 r628: [992..993]
 r629: [990..991]
 r630: [984..986] [980..981]
 r631: [982..983]
 r632: [977..978]
 r633: [974..975]
 r634: [969..970]
 r635: [959..960]
 r636: [953..955] [949..950]
 r637: [951..952]
 r638: [946..947]
 r639: [942..943]
 r640: [937..938]
 r641: [909..910]
 r642: [903..905] [899..900]
 r643: [901..902]
 r644: [896..897]
 r645: [892..893]
 r646: [887..888]
 r647: [879..880]
 r648: [873..875] [869..870]
 r649: [871..872]
 r650: [866..867]
 r651: [863..864]
 r652: [858..859]
 r653: [848..849]
 r654: [843..844]
 r655: [835..836]
 r656: [829..831] [825..826]
 r657: [827..828]
 r658: [822..823]
 r659: [819..820]
 r660: [814..815]
 r661: [804..805]
 r662: [802..803]
 r663: [796..798] [792..793]
 r664: [794..795]
 r665: [789..790]
 r666: [786..787]
 r667: [782..783]
 r668: [776..778] [772..773]
 r669: [774..775]
 r670: [769..770]
 r671: [766..767]
 r672: [761..762]
 r673: [751..752]
 r674: [745..747] [741..742]
 r675: [743..744]
 r676: [738..739]
 r677: [734..735]
 r678: [729..730]
 r679: [721..722]
 r680: [716..717]
 r681: [708..709]
 r682: [703..704]
 r683: [695..696]
 r684: [691..692]
 r685: [688..690]
 r686: [688..689]
 r687: [686..687]
 r688: [681..682]
 r689: [673..674]
 r690: [667..668]
 r691: [663..664]
 r692: [660..661]
 r693: [658..659]
 r694: [653..654]
 r695: [645..646]
 r696: [641..642]
 r697: [639..640]
 r698: [634..635]
 r699: [626..627]
 r700: [623..624]
 r701: [618..619]
 r702: [611..612]
 r703: [606..607]
 r704: [598..599]
 r705: [592..593]
 r706: [588..589]
 r707: [583..584]
 r708: [575..576]
 r709: [570..571]
 r710: [565..566]
 r711: [558..559]
 r712: [553..554]
 r713: [545..546]
 r714: [540..541]
 r715: [532..533]
 r716: [529..530]
 r717: [524..525]
 r718: [517..518]
 r719: [512..513]
 r720: [504..505]
 r721: [500..501]
 r722: [495..496]
 r723: [487..488]
 r724: [485..486]
 r725: [480..481]
 r726: [472..473]
 r727: [468..469]
 r728: [463..464]
 r729: [455..456]
 r730: [453..454]
 r731: [448..449]
 r732: [440..441]
 r733: [436..437]
 r734: [431..432]
 r735: [423..424]
 r736: [417..418]
 r737: [414..415]
 r738: [410..411]
 r739: [407..408]
 r740: [403..404]
 r741: [400..401]
 r742: [396..397]
 r743: [393..394]
 r744: [389..390]
 r745: [386..387]
 r746: [382..383]
 r747: [379..380]
 r748: [375..376]
 r749: [370..371]
 r750: [362..363]
 r751: [356..357]
 r752: [351..352]
 r753: [343..344]
 r754: [339..340]
 r755: [337..338]
 r756: [332..333]
 r757: [324..325]
 r758: [318..319]
 r759: [314..315]
 r760: [309..310]
 r761: [301..302]
 r762: [297..298]
 r763: [295..296]
 r764: [290..291]
 r765: [282..283]
 r766: [276..277]
 r767: [272..273]
 r768: [267..268]
 r769: [259..260]
 r770: [257..258]
 r771: [252..253]
 r772: [244..245]
 r773: [48..49]
 r774: [43..44]
 r775: [34..36]
 r776: [34..35]
 r777: [240..241]
 r778: [236..237]
 r779: [200..201]
 r780: [232..233]
 r781: [228..229]
 r782: [224..225]
 r783: [194..195]
 r784: [192..193]
 r785: [188..189]
 r786: [218..219]
 r787: [214..215]
 r788: [210..211]
 r789: [206..207]
 r790: [27..28]
 r791: [23..24]
 r792: [19..20]
 r793: [14..15]
 r794: [181..182]
 r795: [178..179]
 r796: [175..176]
 r797: [172..173]
 r798: [168..169]
 r799: [165..166]
 r800: [119..120]
 r801: [114..115]
 r802: [111..112]
 r803: [106..107]
 r804: [103..104]
 r805: [96..97]
 r806: [93..94]
 r807: [91..92]
 r808: [88..89]
 r809: [85..86]
 r810: [83..84]
 r811: [162..163]
 r812: [159..160]
 r813: [157..158]
 r814: [154..155]
 r815: [151..152]
 r816: [149..150]
 r817: [146..147]
 r818: [141..142]
 r819: [139..140]
 r820: [136..137]
 r821: [133..134]
 r822: [131..132]
 r823: [128..129]
 r824: [125..126]
 r825: [123..124]
 r826: [76..77]
 r828: [1487..1488]
 r829: [0..0]
 r830: [1484..1485]
 r831: [1482..1483]
 r832: [1476..1477]
 r833: [1474..1475]
 r834: [1468..1469]
 r835: [1466..1467]
Compressing live ranges: from 1497 to 1274 - 85%
Ranges after the compression:
 r87: [40..41] [24..25] [11..11] [3..4]
 r88: [1244..1245]
 r89: [1238..1239]
 r90: [1236..1237]
 r91: [1232..1233]
 r92: [1226..1227]
 r93: [1224..1225]
 r94: [1220..1221]
 r95: [1214..1215]
 r96: [1212..1213]
 r97: [1208..1209]
 r98: [1202..1203]
 r99: [1200..1201]
 r100: [1196..1197]
 r101: [1190..1191]
 r102: [1188..1189]
 r103: [1184..1185]
 r104: [1178..1179]
 r105: [1176..1177]
 r106: [1172..1173]
 r107: [1166..1167]
 r108: [1164..1165]
 r109: [1160..1161]
 r110: [1154..1155]
 r111: [1152..1153]
 r112: [1148..1149]
 r113: [1142..1143]
 r114: [1140..1141]
 r115: [1136..1137]
 r116: [1130..1131]
 r117: [1128..1129]
 r118: [1124..1125]
 r119: [1118..1119]
 r120: [1116..1117]
 r121: [1112..1113]
 r122: [1106..1107]
 r123: [1104..1105]
 r124: [1100..1101]
 r125: [1094..1095]
 r126: [1092..1093]
 r127: [1088..1089]
 r128: [1082..1083]
 r129: [1080..1081]
 r130: [1076..1077]
 r131: [1070..1071]
 r132: [1068..1069]
 r133: [1064..1065]
 r134: [1058..1059]
 r135: [1056..1057]
 r136: [1052..1053]
 r137: [1046..1047]
 r138: [1044..1045]
 r139: [1040..1041]
 r140: [1034..1035]
 r141: [1032..1033]
 r142: [1028..1029]
 r143: [1022..1023]
 r144: [1020..1021]
 r145: [1014..1015]
 r146: [1012..1013]
 r147: [1010..1011]
 r148: [1008..1009]
 r149: [1006..1007]
 r150: [1002..1003]
 r151: [1000..1001]
 r152: [998..999]
 r153: [996..997]
 r154: [994..995]
 r155: [990..991]
 r156: [988..989]
 r157: [986..987]
 r158: [984..985]
 r159: [982..983]
 r160: [978..979]
 r161: [976..977]
 r162: [974..975]
 r163: [972..973]
 r164: [970..971]
 r165: [636..637]
 r166: [634..635]
 r167: [632..633]
 r168: [630..631]
 r169: [628..629]
 r170: [624..625]
 r171: [622..623]
 r172: [620..621]
 r173: [618..619]
 r174: [616..617]
 r175: [612..613]
 r176: [610..611]
 r177: [608..609]
 r178: [606..607]
 r179: [604..605]
 r180: [600..601]
 r181: [592..593]
 r182: [590..591]
 r183: [588..589]
 r184: [586..587]
 r185: [584..585]
 r186: [580..581]
 r187: [578..579]
 r188: [574..575]
 r189: [570..571]
 r190: [566..567]
 r191: [564..565]
 r192: [562..563]
 r193: [560..561]
 r194: [558..559]
 r195: [554..555]
 r196: [548..549]
 r197: [546..547]
 r198: [544..545]
 r199: [542..543]
 r200: [540..541]
 r201: [528..537]
 r202: [534..535]
 r203: [532..533]
 r204: [530..531]
 r205: [528..529]
 r206: [524..525]
 r207: [522..523]
 r208: [520..521]
 r209: [518..519]
 r210: [516..517]
 r211: [512..513]
 r212: [510..511]
 r213: [506..507]
 r214: [502..503]
 r215: [500..501]
 r216: [498..499]
 r217: [496..497]
 r218: [494..495]
 r219: [490..491]
 r220: [480..489]
 r221: [486..487]
 r222: [484..485]
 r223: [482..483]
 r224: [480..481]
 r225: [476..477]
 r226: [474..475]
 r227: [472..473]
 r228: [470..471]
 r229: [468..469]
 r230: [464..465]
 r231: [462..463]
 r232: [460..461]
 r233: [458..459]
 r234: [456..457]
 r235: [444..453]
 r236: [450..451]
 r237: [448..449]
 r238: [446..447]
 r239: [444..445]
 r240: [440..441]
 r241: [438..439]
 r242: [436..437]
 r243: [434..435]
 r244: [432..433]
 r245: [428..429]
 r246: [424..425]
 r247: [422..423]
 r248: [420..421]
 r249: [418..419]
 r250: [416..417]
 r251: [410..411]
 r252: [408..409]
 r253: [406..407]
 r254: [404..405]
 r255: [402..403]
 r256: [398..399]
 r257: [394..395]
 r258: [392..393]
 r259: [390..391]
 r260: [388..389]
 r261: [386..387]
 r262: [380..381]
 r263: [378..379]
 r264: [376..377]
 r265: [374..375]
 r266: [372..373]
 r267: [368..369]
 r268: [364..365]
 r269: [362..363]
 r270: [360..361]
 r271: [358..359]
 r272: [356..357]
 r273: [352..353]
 r274: [350..351]
 r275: [344..347]
 r276: [344..345]
 r277: [338..341]
 r278: [338..339]
 r279: [332..335]
 r280: [332..333]
 r281: [326..329]
 r282: [326..327]
 r283: [320..323]
 r284: [320..321]
 r285: [314..317]
 r286: [314..315]
 r287: [310..311]
 r288: [308..309]
 r289: [306..307]
 r290: [304..305]
 r291: [302..303]
 r292: [298..299]
 r293: [296..297]
 r294: [292..293]
 r295: [290..291]
 r296: [288..289]
 r297: [286..287]
 r298: [284..285]
 r299: [280..281]
 r300: [274..275]
 r301: [272..273]
 r302: [270..271]
 r303: [268..269]
 r304: [266..267]
 r305: [262..263]
 r306: [260..261]
 r307: [256..257]
 r308: [252..253]
 r309: [250..251]
 r310: [248..249]
 r311: [246..247]
 r312: [244..245]
 r313: [240..241]
 r314: [234..235]
 r315: [232..233]
 r316: [230..231]
 r317: [228..229]
 r318: [226..227]
 r319: [222..223]
 r320: [220..221]
 r321: [216..217]
 r322: [212..213]
 r323: [210..211]
 r324: [208..209]
 r325: [206..207]
 r326: [204..205]
 r327: [198..199]
 r328: [196..197]
 r329: [194..195]
 r330: [192..193]
 r331: [190..191]
 r332: [36..37]
 r333: [34..35]
 r334: [32..33]
 r335: [30..31]
 r336: [28..29]
 r337: [966..967]
 r338: [960..961]
 r339: [958..959]
 r340: [956..957]
 r341: [954..955]
 r342: [952..953]
 r343: [948..949]
 r344: [946..947]
 r345: [940..941]
 r346: [938..939]
 r347: [932..933]
 r348: [930..931]
 r349: [924..925]
 r350: [922..923]
 r351: [918..919]
 r352: [916..917]
 r353: [914..915]
 r354: [912..913]
 r355: [910..911]
 r356: [906..907]
 r357: [904..905]
 r358: [898..899]
 r359: [896..897]
 r360: [892..893]
 r361: [890..891]
 r362: [888..889]
 r363: [886..887]
 r364: [884..885]
 r365: [880..881]
 r366: [878..879]
 r367: [872..873]
 r368: [858..871]
 r369: [868..869]
 r370: [866..867]
 r371: [864..865]
 r372: [862..863]
 r373: [860..861]
 r374: [858..859]
 r375: [852..853]
 r376: [850..851]
 r377: [844..845]
 r378: [830..843]
 r379: [840..841]
 r380: [838..839]
 r381: [836..837]
 r382: [834..835]
 r383: [832..833]
 r384: [830..831]
 r385: [826..827]
 r386: [824..825]
 r387: [818..819]
 r388: [816..817]
 r389: [812..813]
 r390: [810..811]
 r391: [808..809]
 r392: [806..807]
 r393: [804..805]
 r394: [784..785]
 r395: [782..783]
 r396: [776..777]
 r397: [774..775]
 r398: [770..771]
 r399: [768..769]
 r400: [766..767]
 r401: [764..765]
 r402: [762..763]
 r403: [758..759]
 r404: [756..757]
 r405: [750..751]
 r406: [736..749]
 r407: [746..747]
 r408: [744..745]
 r409: [742..743]
 r410: [740..741]
 r411: [738..739]
 r412: [736..737]
 r413: [732..733]
 r414: [730..731]
 r415: [728..729]
 r416: [726..727]
 r417: [724..725]
 r418: [720..721]
 r419: [718..719]
 r420: [712..713]
 r421: [698..711]
 r422: [708..709]
 r423: [706..707]
 r424: [704..705]
 r425: [702..703]
 r426: [700..701]
 r427: [698..699]
 r428: [692..693]
 r429: [690..691]
 r430: [684..685]
 r431: [680..683]
 r432: [680..681]
 r433: [676..677]
 r434: [674..675]
 r435: [668..669]
 r436: [654..667]
 r437: [664..665]
 r438: [662..663]
 r439: [660..661]
 r440: [658..659]
 r441: [656..657]
 r442: [654..655]
 r443: [650..651]
 r444: [648..649]
 r445: [642..643]
 r446: [640..641]
 r447: [800..801]
 r448: [798..799]
 r449: [796..797]
 r450: [788..795]
 r451: [788..789]
 r452: [182..183]
 r453: [178..179]
 r454: [142..143]
 r455: [140..141]
 r456: [174..175]
 r457: [170..171]
 r458: [166..167]
 r459: [164..165]
 r460: [134..135]
 r461: [130..131]
 r462: [128..129]
 r463: [160..161]
 r464: [156..157]
 r465: [152..153]
 r466: [148..149]
 r467: [146..147]
 r468: [20..21]
 r469: [16..17]
 r470: [12..13]
 r471: [7..8]
 r472: [5..6]
 r473: [126..127]
 r474: [122..123]
 r475: [118..119]
 r476: [114..115]
 r477: [78..81]
 r478: [78..79]
 r479: [72..75]
 r480: [72..73]
 r481: [64..69]
 r482: [66..67]
 r483: [64..65]
 r484: [58..61]
 r485: [52..55]
 r486: [108..111]
 r487: [102..105]
 r488: [98..99]
 r489: [94..97]
 r490: [88..91]
 r491: [82..85]
 r492: [50..51]
 r493: [48..49]
 r494: [44..45]
 r495: [42..43]
 r496: [1..2]
 r497: [1272..1273]
 r498: [1270..1271]
 r499: [1268..1269]
 r500: [1266..1267]
 r501: [1260..1263]
 r502: [1258..1259]
 r503: [1254..1257]
 r504: [1252..1253]
 r505: [1248..1251]
 r506: [1246..1247]
 r507: [1244..1245] [1240..1241]
 r508: [1242..1243]
 r509: [1238..1239]
 r510: [1234..1235]
 r511: [1232..1233] [1228..1229]
 r512: [1230..1231]
 r513: [1226..1227]
 r514: [1222..1223]
 r515: [1220..1221] [1216..1217]
 r516: [1218..1219]
 r517: [1214..1215]
 r518: [1212..1213]
 r519: [1210..1211]
 r520: [1208..1209] [1204..1205]
 r521: [1206..1207]
 r522: [1202..1203]
 r523: [1198..1199]
 r524: [1196..1197] [1192..1193]
 r525: [1194..1195]
 r526: [1190..1191]
 r527: [1186..1187]
 r528: [1184..1185] [1180..1181]
 r529: [1182..1183]
 r530: [1178..1179]
 r531: [1174..1175]
 r532: [1172..1173] [1168..1169]
 r533: [1170..1171]
 r534: [1166..1167]
 r535: [1162..1163]
 r536: [1160..1161] [1156..1157]
 r537: [1158..1159]
 r538: [1154..1155]
 r539: [1152..1153]
 r540: [1150..1151]
 r541: [1148..1149] [1144..1145]
 r542: [1146..1147]
 r543: [1142..1143]
 r544: [1138..1139]
 r545: [1136..1137] [1132..1133]
 r546: [1134..1135]
 r547: [1130..1131]
 r548: [1126..1127]
 r549: [1124..1125] [1120..1121]
 r550: [1122..1123]
 r551: [1118..1119]
 r552: [1114..1115]
 r553: [1112..1113] [1108..1109]
 r554: [1110..1111]
 r555: [1106..1107]
 r556: [1102..1103]
 r557: [1100..1101] [1096..1097]
 r558: [1098..1099]
 r559: [1094..1095]
 r560: [1092..1093]
 r561: [1090..1091]
 r562: [1088..1089] [1084..1085]
 r563: [1086..1087]
 r564: [1082..1083]
 r565: [1078..1079]
 r566: [1076..1077] [1072..1073]
 r567: [1074..1075]
 r568: [1070..1071]
 r569: [1066..1067]
 r570: [1064..1065] [1060..1061]
 r571: [1062..1063]
 r572: [1058..1059]
 r573: [1054..1055]
 r574: [1052..1053] [1048..1049]
 r575: [1050..1051]
 r576: [1046..1047]
 r577: [1042..1043]
 r578: [1040..1041] [1036..1037]
 r579: [1038..1039]
 r580: [1034..1035]
 r581: [1030..1031]
 r582: [1028..1029] [1024..1025]
 r583: [1026..1027]
 r584: [1022..1023]
 r585: [1018..1019]
 r586: [186..187]
 r587: [1016..1017]
 r588: [1012..1013]
 r589: [802..803]
 r590: [798..799]
 r591: [790..795]
 r592: [792..793]
 r593: [794..795]
 r594: [790..791]
 r595: [1004..1005]
 r596: [1000..1001]
 r597: [992..993]
 r598: [988..989]
 r599: [980..981]
 r600: [976..977]
 r601: [968..969]
 r602: [964..965]
 r603: [962..963]
 r604: [958..959]
 r605: [950..951]
 r606: [946..947] [942..943]
 r607: [944..945]
 r608: [940..941]
 r609: [936..937]
 r610: [934..935]
 r611: [930..931] [926..927]
 r612: [928..929]
 r613: [924..925]
 r614: [920..921]
 r615: [916..917]
 r616: [908..909]
 r617: [904..905] [900..901]
 r618: [902..903]
 r619: [898..899]
 r620: [894..895]
 r621: [890..891]
 r622: [882..883]
 r623: [878..879] [874..875]
 r624: [876..877]
 r625: [872..873]
 r626: [870..871]
 r627: [866..867]
 r628: [856..857]
 r629: [854..855]
 r630: [850..851] [846..847]
 r631: [848..849]
 r632: [844..845]
 r633: [842..843]
 r634: [838..839]
 r635: [828..829]
 r636: [824..825] [820..821]
 r637: [822..823]
 r638: [818..819]
 r639: [814..815]
 r640: [810..811]
 r641: [786..787]
 r642: [782..783] [778..779]
 r643: [780..781]
 r644: [776..777]
 r645: [772..773]
 r646: [768..769]
 r647: [760..761]
 r648: [756..757] [752..753]
 r649: [754..755]
 r650: [750..751]
 r651: [748..749]
 r652: [744..745]
 r653: [734..735]
 r654: [730..731]
 r655: [722..723]
 r656: [718..719] [714..715]
 r657: [716..717]
 r658: [712..713]
 r659: [710..711]
 r660: [706..707]
 r661: [696..697]
 r662: [694..695]
 r663: [690..691] [686..687]
 r664: [688..689]
 r665: [684..685]
 r666: [682..683]
 r667: [678..679]
 r668: [674..675] [670..671]
 r669: [672..673]
 r670: [668..669]
 r671: [666..667]
 r672: [662..663]
 r673: [652..653]
 r674: [648..649] [644..645]
 r675: [646..647]
 r676: [642..643]
 r677: [638..639]
 r678: [634..635]
 r679: [626..627]
 r680: [622..623]
 r681: [614..615]
 r682: [610..611]
 r683: [602..603]
 r684: [598..599]
 r685: [596..597]
 r686: [596..597]
 r687: [594..595]
 r688: [590..591]
 r689: [582..583]
 r690: [576..577]
 r691: [572..573]
 r692: [570..571]
 r693: [568..569]
 r694: [564..565]
 r695: [556..557]
 r696: [552..553]
 r697: [550..551]
 r698: [546..547]
 r699: [538..539]
 r700: [536..537]
 r701: [532..533]
 r702: [526..527]
 r703: [522..523]
 r704: [514..515]
 r705: [508..509]
 r706: [504..505]
 r707: [500..501]
 r708: [492..493]
 r709: [488..489]
 r710: [484..485]
 r711: [478..479]
 r712: [474..475]
 r713: [466..467]
 r714: [462..463]
 r715: [454..455]
 r716: [452..453]
 r717: [448..449]
 r718: [442..443]
 r719: [438..439]
 r720: [430..431]
 r721: [426..427]
 r722: [422..423]
 r723: [414..415]
 r724: [412..413]
 r725: [408..409]
 r726: [400..401]
 r727: [396..397]
 r728: [392..393]
 r729: [384..385]
 r730: [382..383]
 r731: [378..379]
 r732: [370..371]
 r733: [366..367]
 r734: [362..363]
 r735: [354..355]
 r736: [348..349]
 r737: [346..347]
 r738: [342..343]
 r739: [340..341]
 r740: [336..337]
 r741: [334..335]
 r742: [330..331]
 r743: [328..329]
 r744: [324..325]
 r745: [322..323]
 r746: [318..319]
 r747: [316..317]
 r748: [312..313]
 r749: [308..309]
 r750: [300..301]
 r751: [294..295]
 r752: [290..291]
 r753: [282..283]
 r754: [278..279]
 r755: [276..277]
 r756: [272..273]
 r757: [264..265]
 r758: [258..259]
 r759: [254..255]
 r760: [250..251]
 r761: [242..243]
 r762: [238..239]
 r763: [236..237]
 r764: [232..233]
 r765: [224..225]
 r766: [218..219]
 r767: [214..215]
 r768: [210..211]
 r769: [202..203]
 r770: [200..201]
 r771: [196..197]
 r772: [188..189]
 r773: [38..39]
 r774: [34..35]
 r775: [26..27]
 r776: [26..27]
 r777: [184..185]
 r778: [180..181]
 r779: [144..145]
 r780: [176..177]
 r781: [172..173]
 r782: [168..169]
 r783: [138..139]
 r784: [136..137]
 r785: [132..133]
 r786: [162..163]
 r787: [158..159]
 r788: [154..155]
 r789: [150..151]
 r790: [22..23]
 r791: [18..19]
 r792: [14..15]
 r793: [9..10]
 r794: [126..127]
 r795: [124..125]
 r796: [122..123]
 r797: [120..121]
 r798: [116..117]
 r799: [114..115]
 r800: [80..81]
 r801: [76..77]
 r802: [74..75]
 r803: [70..71]
 r804: [68..69]
 r805: [62..63]
 r806: [60..61]
 r807: [58..59]
 r808: [56..57]
 r809: [54..55]
 r810: [52..53]
 r811: [112..113]
 r812: [110..111]
 r813: [108..109]
 r814: [106..107]
 r815: [104..105]
 r816: [102..103]
 r817: [100..101]
 r818: [96..97]
 r819: [94..95]
 r820: [92..93]
 r821: [90..91]
 r822: [88..89]
 r823: [86..87]
 r824: [84..85]
 r825: [82..83]
 r826: [46..47]
 r828: [1264..1265]
 r829: [0..0]
 r830: [1262..1263]
 r831: [1260..1261]
 r832: [1256..1257]
 r833: [1254..1255]
 r834: [1250..1251]
 r835: [1248..1249]

********** Assignment #1: **********

	 Assigning to 830 (cl=GENERAL_REGS, orig=830, freq=2, tfirst=830, tfreq=2)...
	   Assign 3 to reload r830 (freq=2)
	 Assigning to 831 (cl=GENERAL_REGS, orig=831, freq=2, tfirst=831, tfreq=2)...
	   Assign 3 to reload r831 (freq=2)
	 Assigning to 832 (cl=GENERAL_REGS, orig=832, freq=2, tfirst=832, tfreq=2)...
	   Assign 2 to reload r832 (freq=2)
	 Assigning to 833 (cl=GENERAL_REGS, orig=833, freq=2, tfirst=833, tfreq=2)...
	   Assign 3 to reload r833 (freq=2)
	 Assigning to 834 (cl=GENERAL_REGS, orig=834, freq=2, tfirst=834, tfreq=2)...
	   Assign 2 to reload r834 (freq=2)
	 Assigning to 835 (cl=GENERAL_REGS, orig=835, freq=2, tfirst=835, tfreq=2)...
	   Assign 3 to reload r835 (freq=2)
	 Assigning to 828 (cl=INDEX_REGS, orig=828, freq=1, tfirst=828, tfreq=1)...
	   Assign 0 to reload r828 (freq=1)
	 Assigning to 829 (cl=INDEX_REGS, orig=829, freq=1, tfirst=829, tfreq=1)...
	   Assign 2 to reload r829 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=944, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=912, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 1807
changing reg in insn 1802
changing reg in insn 1794
changing reg in insn 1786
changing reg in insn 1772
changing reg in insn 1650
changing reg in insn 1645
changing reg in insn 1627
changing reg in insn 1600
changing reg in insn 1582
changing reg in insn 1490
changing reg in insn 1469
changing reg in insn 1448
changing reg in insn 1376
changing reg in insn 1345
changing reg in insn 1314
changing reg in insn 1283
changing reg in insn 1254
changing reg in insn 1240
changing reg in insn 1167
changing reg in insn 1153
changing reg in insn 1023
changing reg in insn 975
changing reg in insn 970
changing reg in insn 910
changing reg in insn 905
changing reg in insn 849
changing reg in insn 812
changing reg in insn 735
changing reg in insn 633
changing reg in insn 560
changing reg in insn 400
changing reg in insn 331
changing reg in insn 1812
changing reg in insn 55
changing reg in insn 60
changing reg in insn 58
changing reg in insn 56
changing reg in insn 60
changing reg in insn 58
changing reg in insn 63
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 73
changing reg in insn 71
changing reg in insn 69
changing reg in insn 73
changing reg in insn 71
changing reg in insn 76
changing reg in insn 78
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 86
changing reg in insn 84
changing reg in insn 82
changing reg in insn 86
changing reg in insn 84
changing reg in insn 89
changing reg in insn 91
changing reg in insn 91
changing reg in insn 93
changing reg in insn 95
changing reg in insn 100
changing reg in insn 98
changing reg in insn 96
changing reg in insn 100
changing reg in insn 98
changing reg in insn 103
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 108
changing reg in insn 113
changing reg in insn 111
changing reg in insn 109
changing reg in insn 113
changing reg in insn 111
changing reg in insn 116
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 121
changing reg in insn 126
changing reg in insn 124
changing reg in insn 122
changing reg in insn 126
changing reg in insn 124
changing reg in insn 129
changing reg in insn 131
changing reg in insn 131
changing reg in insn 132
changing reg in insn 134
changing reg in insn 139
changing reg in insn 137
changing reg in insn 135
changing reg in insn 139
changing reg in insn 137
changing reg in insn 142
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 147
changing reg in insn 152
changing reg in insn 150
changing reg in insn 148
changing reg in insn 152
changing reg in insn 150
changing reg in insn 155
changing reg in insn 157
changing reg in insn 157
changing reg in insn 159
changing reg in insn 161
changing reg in insn 166
changing reg in insn 164
changing reg in insn 162
changing reg in insn 166
changing reg in insn 164
changing reg in insn 169
changing reg in insn 171
changing reg in insn 171
changing reg in insn 172
changing reg in insn 174
changing reg in insn 179
changing reg in insn 177
changing reg in insn 175
changing reg in insn 179
changing reg in insn 177
changing reg in insn 182
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 187
changing reg in insn 192
changing reg in insn 190
changing reg in insn 188
changing reg in insn 192
changing reg in insn 190
changing reg in insn 195
changing reg in insn 197
changing reg in insn 197
changing reg in insn 198
changing reg in insn 200
changing reg in insn 205
changing reg in insn 203
changing reg in insn 201
changing reg in insn 205
changing reg in insn 203
changing reg in insn 208
changing reg in insn 210
changing reg in insn 210
changing reg in insn 211
changing reg in insn 213
changing reg in insn 218
changing reg in insn 216
changing reg in insn 214
changing reg in insn 218
changing reg in insn 216
changing reg in insn 221
changing reg in insn 223
changing reg in insn 223
changing reg in insn 225
changing reg in insn 227
changing reg in insn 232
changing reg in insn 230
changing reg in insn 228
changing reg in insn 232
changing reg in insn 230
changing reg in insn 235
changing reg in insn 237
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 245
changing reg in insn 243
changing reg in insn 241
changing reg in insn 245
changing reg in insn 243
changing reg in insn 248
changing reg in insn 250
changing reg in insn 250
changing reg in insn 251
changing reg in insn 253
changing reg in insn 258
changing reg in insn 256
changing reg in insn 254
changing reg in insn 258
changing reg in insn 256
changing reg in insn 261
changing reg in insn 263
changing reg in insn 263
changing reg in insn 264
changing reg in insn 266
changing reg in insn 271
changing reg in insn 269
changing reg in insn 267
changing reg in insn 271
changing reg in insn 269
changing reg in insn 274
changing reg in insn 276
changing reg in insn 276
changing reg in insn 277
changing reg in insn 279
changing reg in insn 284
changing reg in insn 282
changing reg in insn 280
changing reg in insn 284
changing reg in insn 282
changing reg in insn 287
changing reg in insn 289
changing reg in insn 289
changing reg in insn 290
changing reg in insn 292
changing reg in insn 297
changing reg in insn 295
changing reg in insn 293
changing reg in insn 297
changing reg in insn 295
changing reg in insn 300
changing reg in insn 302
changing reg in insn 302
changing reg in insn 303
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 322
changing reg in insn 322
changing reg in insn 323
changing reg in insn 323
changing reg in insn 324
changing reg in insn 324
changing reg in insn 325
changing reg in insn 356
changing reg in insn 357
changing reg in insn 357
changing reg in insn 359
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 362
changing reg in insn 364
changing reg in insn 365
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 372
changing reg in insn 372
changing reg in insn 373
changing reg in insn 373
changing reg in insn 375
changing reg in insn 377
changing reg in insn 378
changing reg in insn 382
changing reg in insn 383
changing reg in insn 383
changing reg in insn 385
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 388
changing reg in insn 390
changing reg in insn 391
changing reg in insn 745
changing reg in insn 746
changing reg in insn 746
changing reg in insn 748
changing reg in insn 748
changing reg in insn 749
changing reg in insn 749
changing reg in insn 751
changing reg in insn 753
changing reg in insn 754
changing reg in insn 765
changing reg in insn 766
changing reg in insn 766
changing reg in insn 768
changing reg in insn 768
changing reg in insn 769
changing reg in insn 769
changing reg in insn 771
changing reg in insn 773
changing reg in insn 774
changing reg in insn 785
changing reg in insn 786
changing reg in insn 786
changing reg in insn 788
changing reg in insn 788
changing reg in insn 789
changing reg in insn 789
changing reg in insn 791
changing reg in insn 793
changing reg in insn 794
changing reg in insn 799
changing reg in insn 800
changing reg in insn 818
changing reg in insn 819
changing reg in insn 819
changing reg in insn 821
changing reg in insn 821
changing reg in insn 822
changing reg in insn 822
changing reg in insn 824
changing reg in insn 826
changing reg in insn 827
changing reg in insn 832
changing reg in insn 833
changing reg in insn 833
changing reg in insn 834
changing reg in insn 839
changing reg in insn 840
changing reg in insn 842
changing reg in insn 844
changing reg in insn 855
changing reg in insn 856
changing reg in insn 856
changing reg in insn 858
changing reg in insn 858
changing reg in insn 859
changing reg in insn 859
changing reg in insn 861
changing reg in insn 863
changing reg in insn 864
changing reg in insn 869
changing reg in insn 870
changing reg in insn 877
changing reg in insn 878
changing reg in insn 878
changing reg in insn 880
changing reg in insn 880
changing reg in insn 881
changing reg in insn 881
changing reg in insn 882
changing reg in insn 884
changing reg in insn 885
changing reg in insn 889
changing reg in insn 896
changing reg in insn 891
changing reg in insn 892
changing reg in insn 892
changing reg in insn 894
changing reg in insn 894
changing reg in insn 895
changing reg in insn 895
changing reg in insn 898
changing reg in insn 916
changing reg in insn 917
changing reg in insn 917
changing reg in insn 919
changing reg in insn 919
changing reg in insn 920
changing reg in insn 920
changing reg in insn 922
changing reg in insn 924
changing reg in insn 925
changing reg in insn 930
changing reg in insn 931
changing reg in insn 931
changing reg in insn 932
changing reg in insn 937
changing reg in insn 938
changing reg in insn 941
changing reg in insn 942
changing reg in insn 942
changing reg in insn 944
changing reg in insn 944
changing reg in insn 945
changing reg in insn 945
changing reg in insn 946
changing reg in insn 948
changing reg in insn 949
changing reg in insn 953
changing reg in insn 954
changing reg in insn 954
changing reg in insn 961
changing reg in insn 956
changing reg in insn 957
changing reg in insn 957
changing reg in insn 959
changing reg in insn 959
changing reg in insn 960
changing reg in insn 960
changing reg in insn 963
changing reg in insn 981
changing reg in insn 982
changing reg in insn 982
changing reg in insn 984
changing reg in insn 984
changing reg in insn 985
changing reg in insn 985
changing reg in insn 987
changing reg in insn 989
changing reg in insn 990
changing reg in insn 995
changing reg in insn 996
changing reg in insn 996
changing reg in insn 998
changing reg in insn 998
changing reg in insn 999
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1007
changing reg in insn 1014
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1010
changing reg in insn 1012
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1013
changing reg in insn 1016
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1030
changing reg in insn 1032
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1033
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1051
changing reg in insn 1053
changing reg in insn 1053
changing reg in insn 1054
changing reg in insn 1054
changing reg in insn 1056
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1071
changing reg in insn 1073
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1074
changing reg in insn 1076
changing reg in insn 1078
changing reg in insn 1079
changing reg in insn 1085
changing reg in insn 1086
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1095
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1096
changing reg in insn 1098
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1113
changing reg in insn 1115
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1116
changing reg in insn 1118
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1127
changing reg in insn 1128
changing reg in insn 1134
changing reg in insn 1135
changing reg in insn 1135
changing reg in insn 1137
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1138
changing reg in insn 1140
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1159
changing reg in insn 1161
changing reg in insn 1163
changing reg in insn 1164
changing reg in insn 1187
changing reg in insn 1190
changing reg in insn 1189
changing reg in insn 1190
changing reg in insn 1192
changing reg in insn 1195
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1197
changing reg in insn 1200
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1202
changing reg in insn 1205
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1207
changing reg in insn 1210
changing reg in insn 1209
changing reg in insn 1210
changing reg in insn 1212
changing reg in insn 1215
changing reg in insn 1214
changing reg in insn 1215
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1222
changing reg in insn 1224
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1225
changing reg in insn 1227
changing reg in insn 1229
changing reg in insn 1230
changing reg in insn 1246
changing reg in insn 1248
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1265
changing reg in insn 1266
changing reg in insn 1266
changing reg in insn 1268
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1269
changing reg in insn 1271
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1279
changing reg in insn 1280
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1296
changing reg in insn 1298
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1299
changing reg in insn 1301
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1309
changing reg in insn 1310
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1327
changing reg in insn 1328
changing reg in insn 1328
changing reg in insn 1330
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1331
changing reg in insn 1333
changing reg in insn 1335
changing reg in insn 1336
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1357
changing reg in insn 1358
changing reg in insn 1358
changing reg in insn 1360
changing reg in insn 1360
changing reg in insn 1361
changing reg in insn 1361
changing reg in insn 1363
changing reg in insn 1365
changing reg in insn 1366
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1372
changing reg in insn 1373
changing reg in insn 1382
changing reg in insn 1383
changing reg in insn 1389
changing reg in insn 1390
changing reg in insn 1390
changing reg in insn 1392
changing reg in insn 1392
changing reg in insn 1393
changing reg in insn 1393
changing reg in insn 1395
changing reg in insn 1397
changing reg in insn 1398
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 1409
changing reg in insn 1411
changing reg in insn 1411
changing reg in insn 1412
changing reg in insn 1412
changing reg in insn 1414
changing reg in insn 1416
changing reg in insn 1417
changing reg in insn 1427
changing reg in insn 1428
changing reg in insn 1428
changing reg in insn 1430
changing reg in insn 1430
changing reg in insn 1431
changing reg in insn 1431
changing reg in insn 1433
changing reg in insn 1435
changing reg in insn 1436
changing reg in insn 396
changing reg in insn 397
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 411
changing reg in insn 411
changing reg in insn 412
changing reg in insn 412
changing reg in insn 414
changing reg in insn 416
changing reg in insn 417
changing reg in insn 421
changing reg in insn 422
changing reg in insn 422
changing reg in insn 427
changing reg in insn 425
changing reg in insn 423
changing reg in insn 427
changing reg in insn 425
changing reg in insn 430
changing reg in insn 432
changing reg in insn 432
changing reg in insn 433
changing reg in insn 437
changing reg in insn 438
changing reg in insn 438
changing reg in insn 443
changing reg in insn 441
changing reg in insn 439
changing reg in insn 443
changing reg in insn 441
changing reg in insn 446
changing reg in insn 448
changing reg in insn 448
changing reg in insn 449
changing reg in insn 453
changing reg in insn 454
changing reg in insn 454
changing reg in insn 456
changing reg in insn 456
changing reg in insn 457
changing reg in insn 457
changing reg in insn 459
changing reg in insn 461
changing reg in insn 462
changing reg in insn 466
changing reg in insn 467
changing reg in insn 467
changing reg in insn 472
changing reg in insn 470
changing reg in insn 468
changing reg in insn 472
changing reg in insn 470
changing reg in insn 475
changing reg in insn 477
changing reg in insn 477
changing reg in insn 478
changing reg in insn 481
changing reg in insn 482
changing reg in insn 482
changing reg in insn 484
changing reg in insn 484
changing reg in insn 485
changing reg in insn 485
changing reg in insn 486
changing reg in insn 488
changing reg in insn 489
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 499
changing reg in insn 497
changing reg in insn 495
changing reg in insn 499
changing reg in insn 497
changing reg in insn 502
changing reg in insn 504
changing reg in insn 504
changing reg in insn 504
changing reg in insn 515
changing reg in insn 506
changing reg in insn 507
changing reg in insn 507
changing reg in insn 509
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 511
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 515
changing reg in insn 519
changing reg in insn 520
changing reg in insn 520
changing reg in insn 525
changing reg in insn 523
changing reg in insn 521
changing reg in insn 525
changing reg in insn 523
changing reg in insn 528
changing reg in insn 530
changing reg in insn 530
changing reg in insn 530
changing reg in insn 541
changing reg in insn 532
changing reg in insn 533
changing reg in insn 533
changing reg in insn 535
changing reg in insn 535
changing reg in insn 536
changing reg in insn 536
changing reg in insn 537
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 543
changing reg in insn 544
changing reg in insn 544
changing reg in insn 549
changing reg in insn 547
changing reg in insn 545
changing reg in insn 549
changing reg in insn 547
changing reg in insn 552
changing reg in insn 554
changing reg in insn 554
changing reg in insn 555
changing reg in insn 566
changing reg in insn 567
changing reg in insn 567
changing reg in insn 569
changing reg in insn 569
changing reg in insn 570
changing reg in insn 570
changing reg in insn 572
changing reg in insn 574
changing reg in insn 575
changing reg in insn 579
changing reg in insn 580
changing reg in insn 580
changing reg in insn 585
changing reg in insn 583
changing reg in insn 581
changing reg in insn 585
changing reg in insn 583
changing reg in insn 588
changing reg in insn 590
changing reg in insn 590
changing reg in insn 591
changing reg in insn 594
changing reg in insn 595
changing reg in insn 595
changing reg in insn 597
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 599
changing reg in insn 601
changing reg in insn 602
changing reg in insn 606
changing reg in insn 607
changing reg in insn 607
changing reg in insn 612
changing reg in insn 610
changing reg in insn 608
changing reg in insn 612
changing reg in insn 610
changing reg in insn 615
changing reg in insn 617
changing reg in insn 617
changing reg in insn 617
changing reg in insn 628
changing reg in insn 619
changing reg in insn 620
changing reg in insn 620
changing reg in insn 622
changing reg in insn 622
changing reg in insn 623
changing reg in insn 623
changing reg in insn 624
changing reg in insn 626
changing reg in insn 627
changing reg in insn 627
changing reg in insn 628
changing reg in insn 640
changing reg in insn 641
changing reg in insn 641
changing reg in insn 643
changing reg in insn 643
changing reg in insn 644
changing reg in insn 644
changing reg in insn 645
changing reg in insn 647
changing reg in insn 648
changing reg in insn 652
changing reg in insn 653
changing reg in insn 653
changing reg in insn 658
changing reg in insn 656
changing reg in insn 654
changing reg in insn 658
changing reg in insn 656
changing reg in insn 661
changing reg in insn 663
changing reg in insn 663
changing reg in insn 663
changing reg in insn 674
changing reg in insn 665
changing reg in insn 666
changing reg in insn 666
changing reg in insn 668
changing reg in insn 668
changing reg in insn 669
changing reg in insn 669
changing reg in insn 670
changing reg in insn 672
changing reg in insn 673
changing reg in insn 673
changing reg in insn 674
changing reg in insn 678
changing reg in insn 679
changing reg in insn 679
changing reg in insn 684
changing reg in insn 682
changing reg in insn 680
changing reg in insn 684
changing reg in insn 682
changing reg in insn 687
changing reg in insn 689
changing reg in insn 689
changing reg in insn 689
changing reg in insn 692
changing reg in insn 691
changing reg in insn 692
changing reg in insn 694
changing reg in insn 695
changing reg in insn 695
changing reg in insn 700
changing reg in insn 698
changing reg in insn 696
changing reg in insn 700
changing reg in insn 698
changing reg in insn 703
changing reg in insn 705
changing reg in insn 705
changing reg in insn 705
changing reg in insn 716
changing reg in insn 707
changing reg in insn 708
changing reg in insn 708
changing reg in insn 710
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 712
changing reg in insn 714
changing reg in insn 715
changing reg in insn 715
changing reg in insn 716
changing reg in insn 718
changing reg in insn 719
changing reg in insn 719
changing reg in insn 724
changing reg in insn 722
changing reg in insn 720
changing reg in insn 724
changing reg in insn 722
changing reg in insn 727
changing reg in insn 729
changing reg in insn 729
changing reg in insn 730
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 340
changing reg in insn 340
changing reg in insn 341
changing reg in insn 341
changing reg in insn 347
changing reg in insn 346
changing reg in insn 348
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1480
changing reg in insn 1481
changing reg in insn 1485
changing reg in insn 1486
changing reg in insn 1486
changing reg in insn 1487
changing reg in insn 1499
changing reg in insn 1500
changing reg in insn 1504
changing reg in insn 1505
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1517
changing reg in insn 1518
changing reg in insn 1535
changing reg in insn 1536
changing reg in insn 1547
changing reg in insn 1548
changing reg in insn 1568
changing reg in insn 1569
changing reg in insn 1573
changing reg in insn 1574
changing reg in insn 1578
changing reg in insn 1579
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1613
changing reg in insn 1614
changing reg in insn 1618
changing reg in insn 1619
changing reg in insn 1623
changing reg in insn 1624
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1641
changing reg in insn 1642
changing reg in insn 1658
changing reg in insn 1661
changing reg in insn 1664
changing reg in insn 1667
changing reg in insn 1670
changing reg in insn 1671
changing reg in insn 1675
changing reg in insn 1678
changing reg in insn 1685
changing reg in insn 1688
changing reg in insn 1687
changing reg in insn 1689
changing reg in insn 1692
changing reg in insn 1695
changing reg in insn 1694
changing reg in insn 1696
changing reg in insn 1699
changing reg in insn 1703
changing reg in insn 1701
changing reg in insn 1702
changing reg in insn 1702
changing reg in insn 1704
changing reg in insn 1707
changing reg in insn 1711
changing reg in insn 1714
changing reg in insn 1718
changing reg in insn 1725
changing reg in insn 1729
changing reg in insn 1732
changing reg in insn 1736
changing reg in insn 1739
changing reg in insn 1740
changing reg in insn 1740
changing reg in insn 1744
changing reg in insn 1747
changing reg in insn 1751
changing reg in insn 1754
changing reg in insn 1758
changing reg in insn 1764
changing reg in insn 1766
changing reg in insn 1768
changing reg in insn 1769
changing reg in insn 1778
changing reg in insn 1780
changing reg in insn 1782
changing reg in insn 1783
changing reg in insn 1812
changing reg in insn 1816
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 32
changing reg in insn 36
changing reg in insn 35
changing reg in insn 34
changing reg in insn 33
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 42
changing reg in insn 41
changing reg in insn 40
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 48
changing reg in insn 47
changing reg in insn 46
changing reg in insn 45
changing reg in insn 54
changing reg in insn 55
changing reg in insn 62
changing reg in insn 60
changing reg in insn 59
changing reg in insn 58
changing reg in insn 57
changing reg in insn 56
changing reg in insn 63
changing reg in insn 61
changing reg in insn 60
changing reg in insn 59
changing reg in insn 58
changing reg in insn 57
changing reg in insn 61
changing reg in insn 62
changing reg in insn 64
changing reg in insn 67
changing reg in insn 68
changing reg in insn 75
changing reg in insn 73
changing reg in insn 72
changing reg in insn 71
changing reg in insn 70
changing reg in insn 69
changing reg in insn 76
changing reg in insn 74
changing reg in insn 73
changing reg in insn 72
changing reg in insn 71
changing reg in insn 70
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 80
changing reg in insn 81
changing reg in insn 88
changing reg in insn 86
changing reg in insn 85
changing reg in insn 84
changing reg in insn 83
changing reg in insn 82
changing reg in insn 89
changing reg in insn 87
changing reg in insn 86
changing reg in insn 85
changing reg in insn 84
changing reg in insn 83
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 102
changing reg in insn 100
changing reg in insn 99
changing reg in insn 98
changing reg in insn 97
changing reg in insn 96
changing reg in insn 103
changing reg in insn 101
changing reg in insn 100
changing reg in insn 99
changing reg in insn 98
changing reg in insn 97
changing reg in insn 101
changing reg in insn 102
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 115
changing reg in insn 113
changing reg in insn 112
changing reg in insn 111
changing reg in insn 110
changing reg in insn 109
changing reg in insn 116
changing reg in insn 114
changing reg in insn 113
changing reg in insn 112
changing reg in insn 111
changing reg in insn 110
changing reg in insn 114
changing reg in insn 115
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
changing reg in insn 128
changing reg in insn 126
changing reg in insn 125
changing reg in insn 124
changing reg in insn 123
changing reg in insn 122
changing reg in insn 129
changing reg in insn 127
changing reg in insn 126
changing reg in insn 125
changing reg in insn 124
changing reg in insn 123
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 133
changing reg in insn 134
changing reg in insn 141
changing reg in insn 139
changing reg in insn 138
changing reg in insn 137
changing reg in insn 136
changing reg in insn 135
changing reg in insn 142
changing reg in insn 140
changing reg in insn 139
changing reg in insn 138
changing reg in insn 137
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 154
changing reg in insn 152
changing reg in insn 151
changing reg in insn 150
changing reg in insn 149
changing reg in insn 148
changing reg in insn 155
changing reg in insn 153
changing reg in insn 152
changing reg in insn 151
changing reg in insn 150
changing reg in insn 149
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 168
changing reg in insn 166
changing reg in insn 165
changing reg in insn 164
changing reg in insn 163
changing reg in insn 162
changing reg in insn 169
changing reg in insn 167
changing reg in insn 166
changing reg in insn 165
changing reg in insn 164
changing reg in insn 163
changing reg in insn 167
changing reg in insn 168
changing reg in insn 170
changing reg in insn 173
changing reg in insn 174
changing reg in insn 181
changing reg in insn 179
changing reg in insn 178
changing reg in insn 177
changing reg in insn 176
changing reg in insn 175
changing reg in insn 182
changing reg in insn 180
changing reg in insn 179
changing reg in insn 178
changing reg in insn 177
changing reg in insn 176
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 194
changing reg in insn 192
changing reg in insn 191
changing reg in insn 190
changing reg in insn 189
changing reg in insn 188
changing reg in insn 195
changing reg in insn 193
changing reg in insn 192
changing reg in insn 191
changing reg in insn 190
changing reg in insn 189
changing reg in insn 193
changing reg in insn 194
changing reg in insn 196
changing reg in insn 199
changing reg in insn 200
changing reg in insn 207
changing reg in insn 205
changing reg in insn 204
changing reg in insn 203
changing reg in insn 202
changing reg in insn 201
changing reg in insn 208
changing reg in insn 206
changing reg in insn 205
changing reg in insn 204
changing reg in insn 203
changing reg in insn 202
changing reg in insn 206
changing reg in insn 207
changing reg in insn 209
changing reg in insn 212
changing reg in insn 213
changing reg in insn 220
changing reg in insn 218
changing reg in insn 217
changing reg in insn 216
changing reg in insn 215
changing reg in insn 214
changing reg in insn 221
changing reg in insn 219
changing reg in insn 218
changing reg in insn 217
changing reg in insn 216
changing reg in insn 215
changing reg in insn 219
changing reg in insn 220
changing reg in insn 222
changing reg in insn 224
changing reg in insn 225
changing reg in insn 226
changing reg in insn 227
changing reg in insn 234
changing reg in insn 232
changing reg in insn 231
changing reg in insn 230
changing reg in insn 229
changing reg in insn 228
changing reg in insn 235
changing reg in insn 233
changing reg in insn 232
changing reg in insn 231
changing reg in insn 230
changing reg in insn 229
changing reg in insn 233
changing reg in insn 234
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 247
changing reg in insn 245
changing reg in insn 244
changing reg in insn 243
changing reg in insn 242
changing reg in insn 241
changing reg in insn 248
changing reg in insn 246
changing reg in insn 245
changing reg in insn 244
changing reg in insn 243
changing reg in insn 242
changing reg in insn 246
changing reg in insn 247
changing reg in insn 249
changing reg in insn 252
changing reg in insn 253
changing reg in insn 260
changing reg in insn 258
changing reg in insn 257
changing reg in insn 256
changing reg in insn 255
changing reg in insn 254
changing reg in insn 261
changing reg in insn 259
changing reg in insn 258
changing reg in insn 257
changing reg in insn 256
changing reg in insn 255
changing reg in insn 259
changing reg in insn 260
changing reg in insn 262
changing reg in insn 265
changing reg in insn 266
changing reg in insn 273
changing reg in insn 271
changing reg in insn 270
changing reg in insn 269
changing reg in insn 268
changing reg in insn 267
changing reg in insn 274
changing reg in insn 272
changing reg in insn 271
changing reg in insn 270
changing reg in insn 269
changing reg in insn 268
changing reg in insn 272
changing reg in insn 273
changing reg in insn 275
changing reg in insn 278
changing reg in insn 279
changing reg in insn 286
changing reg in insn 284
changing reg in insn 283
changing reg in insn 282
changing reg in insn 281
changing reg in insn 280
changing reg in insn 287
changing reg in insn 285
changing reg in insn 284
changing reg in insn 283
changing reg in insn 282
changing reg in insn 281
changing reg in insn 285
changing reg in insn 286
changing reg in insn 288
changing reg in insn 291
changing reg in insn 292
changing reg in insn 299
changing reg in insn 297
changing reg in insn 296
changing reg in insn 295
changing reg in insn 294
changing reg in insn 293
changing reg in insn 300
changing reg in insn 298
changing reg in insn 297
changing reg in insn 296
changing reg in insn 295
changing reg in insn 294
changing reg in insn 298
changing reg in insn 299
changing reg in insn 301
changing reg in insn 311
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 318
changing reg in insn 319
changing reg in insn 321
changing reg in insn 336
changing reg in insn 337
changing reg in insn 339
changing reg in insn 342
changing reg in insn 346
changing reg in insn 344
changing reg in insn 345
changing reg in insn 343
changing reg in insn 344
changing reg in insn 345
changing reg in insn 346
changing reg in insn 355
changing reg in insn 356
changing reg in insn 358
changing reg in insn 368
changing reg in insn 369
changing reg in insn 371
changing reg in insn 381
changing reg in insn 382
changing reg in insn 384
changing reg in insn 395
changing reg in insn 396
changing reg in insn 405
changing reg in insn 406
changing reg in insn 407
changing reg in insn 408
changing reg in insn 410
changing reg in insn 420
changing reg in insn 421
changing reg in insn 429
changing reg in insn 427
changing reg in insn 426
changing reg in insn 425
changing reg in insn 424
changing reg in insn 423
changing reg in insn 430
changing reg in insn 428
changing reg in insn 427
changing reg in insn 426
changing reg in insn 425
changing reg in insn 424
changing reg in insn 428
changing reg in insn 429
changing reg in insn 431
changing reg in insn 434
changing reg in insn 435
changing reg in insn 436
changing reg in insn 437
changing reg in insn 445
changing reg in insn 443
changing reg in insn 442
changing reg in insn 441
changing reg in insn 440
changing reg in insn 439
changing reg in insn 446
changing reg in insn 444
changing reg in insn 443
changing reg in insn 442
changing reg in insn 441
changing reg in insn 440
changing reg in insn 444
changing reg in insn 445
changing reg in insn 447
changing reg in insn 452
changing reg in insn 453
changing reg in insn 455
changing reg in insn 465
changing reg in insn 466
changing reg in insn 474
changing reg in insn 472
changing reg in insn 471
changing reg in insn 470
changing reg in insn 469
changing reg in insn 468
changing reg in insn 475
changing reg in insn 473
changing reg in insn 472
changing reg in insn 471
changing reg in insn 470
changing reg in insn 469
changing reg in insn 473
changing reg in insn 474
changing reg in insn 476
changing reg in insn 480
changing reg in insn 481
changing reg in insn 483
changing reg in insn 492
changing reg in insn 493
changing reg in insn 501
changing reg in insn 499
changing reg in insn 498
changing reg in insn 497
changing reg in insn 496
changing reg in insn 495
changing reg in insn 502
changing reg in insn 500
changing reg in insn 499
changing reg in insn 498
changing reg in insn 497
changing reg in insn 496
changing reg in insn 500
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 505
changing reg in insn 506
changing reg in insn 508
changing reg in insn 516
changing reg in insn 517
changing reg in insn 518
changing reg in insn 519
changing reg in insn 527
changing reg in insn 525
changing reg in insn 524
changing reg in insn 523
changing reg in insn 522
changing reg in insn 521
changing reg in insn 528
changing reg in insn 526
changing reg in insn 525
changing reg in insn 524
changing reg in insn 523
changing reg in insn 522
changing reg in insn 526
changing reg in insn 527
changing reg in insn 529
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 534
changing reg in insn 542
changing reg in insn 543
changing reg in insn 551
changing reg in insn 549
changing reg in insn 548
changing reg in insn 547
changing reg in insn 546
changing reg in insn 545
changing reg in insn 552
changing reg in insn 550
changing reg in insn 549
changing reg in insn 548
changing reg in insn 547
changing reg in insn 546
changing reg in insn 550
changing reg in insn 551
changing reg in insn 553
changing reg in insn 565
changing reg in insn 566
changing reg in insn 568
changing reg in insn 578
changing reg in insn 579
changing reg in insn 587
changing reg in insn 585
changing reg in insn 584
changing reg in insn 583
changing reg in insn 582
changing reg in insn 581
changing reg in insn 588
changing reg in insn 586
changing reg in insn 585
changing reg in insn 584
changing reg in insn 583
changing reg in insn 582
changing reg in insn 586
changing reg in insn 587
changing reg in insn 589
changing reg in insn 593
changing reg in insn 594
changing reg in insn 596
changing reg in insn 605
changing reg in insn 606
changing reg in insn 614
changing reg in insn 612
changing reg in insn 611
changing reg in insn 610
changing reg in insn 609
changing reg in insn 608
changing reg in insn 615
changing reg in insn 613
changing reg in insn 612
changing reg in insn 611
changing reg in insn 610
changing reg in insn 609
changing reg in insn 613
changing reg in insn 614
changing reg in insn 616
changing reg in insn 617
changing reg in insn 618
changing reg in insn 619
changing reg in insn 621
changing reg in insn 639
changing reg in insn 640
changing reg in insn 642
changing reg in insn 651
changing reg in insn 652
changing reg in insn 660
changing reg in insn 658
changing reg in insn 657
changing reg in insn 656
changing reg in insn 655
changing reg in insn 654
changing reg in insn 661
changing reg in insn 659
changing reg in insn 658
changing reg in insn 657
changing reg in insn 656
changing reg in insn 655
changing reg in insn 659
changing reg in insn 660
changing reg in insn 662
changing reg in insn 663
changing reg in insn 664
changing reg in insn 665
changing reg in insn 667
changing reg in insn 675
changing reg in insn 676
changing reg in insn 677
changing reg in insn 678
changing reg in insn 686
changing reg in insn 684
changing reg in insn 683
changing reg in insn 682
changing reg in insn 681
changing reg in insn 680
changing reg in insn 687
changing reg in insn 685
changing reg in insn 684
changing reg in insn 683
changing reg in insn 682
changing reg in insn 681
changing reg in insn 685
changing reg in insn 686
changing reg in insn 688
changing reg in insn 689
changing reg in insn 690
changing reg in insn 691
changing reg in insn 693
changing reg in insn 694
changing reg in insn 702
changing reg in insn 700
changing reg in insn 699
changing reg in insn 698
changing reg in insn 697
changing reg in insn 696
changing reg in insn 703
changing reg in insn 701
changing reg in insn 700
changing reg in insn 699
changing reg in insn 698
changing reg in insn 697
changing reg in insn 701
changing reg in insn 702
changing reg in insn 704
changing reg in insn 705
changing reg in insn 706
changing reg in insn 707
changing reg in insn 709
changing reg in insn 717
changing reg in insn 718
changing reg in insn 726
changing reg in insn 724
changing reg in insn 723
changing reg in insn 722
changing reg in insn 721
changing reg in insn 720
changing reg in insn 727
changing reg in insn 725
changing reg in insn 724
changing reg in insn 723
changing reg in insn 722
changing reg in insn 721
changing reg in insn 725
changing reg in insn 726
changing reg in insn 728
changing reg in insn 744
changing reg in insn 745
changing reg in insn 747
changing reg in insn 764
changing reg in insn 765
changing reg in insn 767
changing reg in insn 784
changing reg in insn 785
changing reg in insn 787
changing reg in insn 798
changing reg in insn 799
changing reg in insn 803
changing reg in insn 804
changing reg in insn 805
changing reg in insn 807
changing reg in insn 806
changing reg in insn 807
changing reg in insn 817
changing reg in insn 818
changing reg in insn 820
changing reg in insn 831
changing reg in insn 832
changing reg in insn 838
changing reg in insn 839
changing reg in insn 841
changing reg in insn 842
changing reg in insn 843
changing reg in insn 844
changing reg in insn 854
changing reg in insn 855
changing reg in insn 857
changing reg in insn 868
changing reg in insn 869
changing reg in insn 873
changing reg in insn 874
changing reg in insn 876
changing reg in insn 877
changing reg in insn 879
changing reg in insn 888
changing reg in insn 889
changing reg in insn 890
changing reg in insn 891
changing reg in insn 893
changing reg in insn 915
changing reg in insn 916
changing reg in insn 918
changing reg in insn 929
changing reg in insn 930
changing reg in insn 936
changing reg in insn 937
changing reg in insn 940
changing reg in insn 941
changing reg in insn 943
changing reg in insn 952
changing reg in insn 953
changing reg in insn 955
changing reg in insn 956
changing reg in insn 958
changing reg in insn 980
changing reg in insn 981
changing reg in insn 983
changing reg in insn 994
changing reg in insn 995
changing reg in insn 997
changing reg in insn 1006
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1011
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1031
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1049
changing reg in insn 1050
changing reg in insn 1052
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1072
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1094
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1111
changing reg in insn 1112
changing reg in insn 1114
changing reg in insn 1126
changing reg in insn 1127
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1136
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1209
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1223
changing reg in insn 1245
changing reg in insn 1246
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1267
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1294
changing reg in insn 1295
changing reg in insn 1297
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1319
changing reg in insn 1320
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1329
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1356
changing reg in insn 1357
changing reg in insn 1359
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1381
changing reg in insn 1382
changing reg in insn 1388
changing reg in insn 1389
changing reg in insn 1391
changing reg in insn 1401
changing reg in insn 1402
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1410
changing reg in insn 1420
changing reg in insn 1421
changing reg in insn 1426
changing reg in insn 1427
changing reg in insn 1429
changing reg in insn 1445
changing reg in insn 1447
changing reg in insn 1446
changing reg in insn 1447
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1479
changing reg in insn 1480
changing reg in insn 1484
changing reg in insn 1485
changing reg in insn 1498
changing reg in insn 1499
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1514
changing reg in insn 1515
changing reg in insn 1516
changing reg in insn 1517
changing reg in insn 1534
changing reg in insn 1535
changing reg in insn 1567
changing reg in insn 1568
changing reg in insn 1572
changing reg in insn 1573
changing reg in insn 1577
changing reg in insn 1578
changing reg in insn 1594
changing reg in insn 1595
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1617
changing reg in insn 1618
changing reg in insn 1622
changing reg in insn 1623
changing reg in insn 1639
changing reg in insn 1640
changing reg in insn 1659
changing reg in insn 1660
changing reg in insn 1663
changing reg in insn 1664
changing reg in insn 1665
changing reg in insn 1666
changing reg in insn 1669
changing reg in insn 1670
changing reg in insn 1674
changing reg in insn 1675
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1693
changing reg in insn 1694
changing reg in insn 1698
changing reg in insn 1699
changing reg in insn 1700
changing reg in insn 1701
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1709
changing reg in insn 1709
changing reg in insn 1710
changing reg in insn 1713
changing reg in insn 1714
changing reg in insn 1715
changing reg in insn 1716
changing reg in insn 1716
changing reg in insn 1717
changing reg in insn 1724
changing reg in insn 1725
changing reg in insn 1726
changing reg in insn 1727
changing reg in insn 1727
changing reg in insn 1728
changing reg in insn 1731
changing reg in insn 1732
changing reg in insn 1733
changing reg in insn 1734
changing reg in insn 1734
changing reg in insn 1735
changing reg in insn 1738
changing reg in insn 1739
changing reg in insn 1741
changing reg in insn 1742
changing reg in insn 1742
changing reg in insn 1743
changing reg in insn 1746
changing reg in insn 1747
changing reg in insn 1748
changing reg in insn 1749
changing reg in insn 1749
changing reg in insn 1750
changing reg in insn 1753
changing reg in insn 1754
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1756
changing reg in insn 1757
changing reg in insn 1777
changing reg in insn 1778
changing reg in insn 17
changing reg in insn 1817
deleting insn with uid = 513.
deleting insn with uid = 539.
deleting insn with uid = 672.
deleting insn with uid = 714.
deleting insn with uid = 896.
deleting insn with uid = 961.
deleting insn with uid = 1014.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 349.
verify found no changes in insn with uid = 363.
verify found no changes in insn with uid = 376.
verify found no changes in insn with uid = 389.
verify found no changes in insn with uid = 415.
verify found no changes in insn with uid = 460.
verify found no changes in insn with uid = 487.
verify found no changes in insn with uid = 512.
verify found no changes in insn with uid = 538.
verify found no changes in insn with uid = 573.
verify found no changes in insn with uid = 600.
verify found no changes in insn with uid = 625.
verify found no changes in insn with uid = 646.
verify found no changes in insn with uid = 671.
verify found no changes in insn with uid = 713.
verify found no changes in insn with uid = 752.
verify found no changes in insn with uid = 758.
verify found no changes in insn with uid = 760.
verify found no changes in insn with uid = 772.
verify found no changes in insn with uid = 778.
verify found no changes in insn with uid = 780.
verify found no changes in insn with uid = 792.
verify found no changes in insn with uid = 825.
verify found no changes in insn with uid = 862.
verify found no changes in insn with uid = 883.
verify found no changes in insn with uid = 900.
verify found no changes in insn with uid = 923.
verify found no changes in insn with uid = 947.
verify found no changes in insn with uid = 965.
verify found no changes in insn with uid = 988.
verify found no changes in insn with uid = 1001.
verify found no changes in insn with uid = 1018.
verify found no changes in insn with uid = 1036.
verify found no changes in insn with uid = 1057.
verify found no changes in insn with uid = 1077.
verify found no changes in insn with uid = 1099.
verify found no changes in insn with uid = 1119.
verify found no changes in insn with uid = 1141.
verify found no changes in insn with uid = 1162.
verify found no changes in insn with uid = 1183.
verify found no changes in insn with uid = 1228.
verify found no changes in insn with uid = 1249.
verify found no changes in insn with uid = 1272.
verify found no changes in insn with uid = 1302.
verify found no changes in insn with uid = 1334.
verify found no changes in insn with uid = 1364.
verify found no changes in insn with uid = 1396.
verify found no changes in insn with uid = 1415.
verify found no changes in insn with uid = 1434.
verify found no changes in insn with uid = 1439.
verify found no changes in insn with uid = 1441.
verify found no changes in insn with uid = 1526.
verify found no changes in insn with uid = 1541.
verify found no changes in insn with uid = 1546.
verify found no changes in insn with uid = 1662.
verify found no changes in insn with uid = 1668.
verify found no changes in insn with uid = 1679.
verify found no changes in insn with uid = 1690.
verify found no changes in insn with uid = 1697.
verify found no changes in insn with uid = 1705.
verify found no changes in insn with uid = 1712.
verify found no changes in insn with uid = 1719.
verify found no changes in insn with uid = 1730.
verify found no changes in insn with uid = 1737.
verify found no changes in insn with uid = 1745.
verify found no changes in insn with uid = 1752.
verify found no changes in insn with uid = 1759.
verify found no changes in insn with uid = 1767.
verify found no changes in insn with uid = 1781.
verify found no changes in insn with uid = 1819.


int command_line(Preprocess*, IOFiles*, Procpar_info*, int, char**, int*, int*, int*, bool*, bool*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9]
;;  ref usage 	r0={841d,786u} r1={207d,199u,133e} r2={80d,9u,3e} r3={9d,9u} r4={119d,49u} r5={137d,67u} r6={1d,518u} r7={1d,238u} r8={70d} r9={70d} r10={70d} r11={70d} r12={70d} r13={70d} r14={70d} r15={70d} r17={525d,92u} r18={70d} r19={70d} r20={1d,1u,122e} r21={82d,15u} r22={71d} r23={71d} r24={71d} r25={71d} r26={71d} r27={71d} r28={71d} r29={70d} r30={70d} r31={70d} r32={70d} r33={70d} r34={70d} r35={70d} r36={70d} r37={71d,1u} r38={71d,1u} r39={70d} r40={70d} r45={70d} r46={70d} r47={70d} r48={70d} r49={70d} r50={70d} r51={70d} r52={70d} r53={70d} r54={70d} r55={70d} r56={70d} r57={70d} r58={70d} r59={70d} r60={70d} r61={70d} r62={70d} r63={70d} r64={70d} r65={70d} r66={70d} r67={70d} r68={70d} r69={70d} r70={70d} r71={70d} r72={70d} r73={70d} r74={70d} r75={70d} r76={70d} r77={70d} r78={70d} r79={70d} r80={70d} 
;;    total ref usage 8805{6562d,1985u,258e} in 1496{1426 regular + 70 call} insns.
(note 1 0 18 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 497 498 499 500 501 502 503 504 505
(note 18 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 18 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])
        (reg:DI 5 di [ preprocess ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])
        (reg:DI 4 si [ io_filenames ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 procpar_info+0 S8 A64])
        (reg:DI 1 dx [ procpar_info ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -876 [0xfffffffffffffc94])) [0 argc+0 S4 A32])
        (reg:SI 2 cx [ argc ])) ge2fitman_com_line.cpp:48 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])
        (reg:DI 37 r8 [ argv ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])
        (reg:DI 38 r9 [ fid ])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [497])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [0 arg_read+0 S8 A64])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -904 [0xfffffffffffffc78])) [0 arg_read+0 S8 A64])
        (reg/f:DI 0 ax [497])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 0 ax [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])
        (reg/f:DI 0 ax [498])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [0 overwrite+0 S8 A64])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -920 [0xfffffffffffffc68])) [0 overwrite+0 S8 A64])
        (reg/f:DI 0 ax [499])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [0 verbose+0 S8 A64])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -928 [0xfffffffffffffc60])) [0 verbose+0 S8 A64])
        (reg/f:DI 0 ax [500])) ge2fitman_com_line.cpp:48 89 {*movdi_internal}
     (nil))
(note 16 15 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 16 20 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [0 D.25271+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [828])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:48 986 {stack_tls_protect_set_di}
     (nil))
(insn 20 17 21 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:52 93 {*movqi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:53 93 {*movqi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:54 93 {*movqi_internal}
     (nil))
(insn 23 22 24 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -830 [0xfffffffffffffcc2])) [0 rscale_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:56 93 {*movqi_internal}
     (nil))
(insn 24 23 25 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -829 [0xfffffffffffffcc3])) [0 rbc_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:57 93 {*movqi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -828 [0xfffffffffffffcc4])) [0 rif_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:58 93 {*movqi_internal}
     (nil))
(insn 26 25 27 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:59 93 {*movqi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -826 [0xfffffffffffffcc6])) [0 only_suppressed+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:61 93 {*movqi_internal}
     (nil))
(insn 28 27 29 2 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -825 [0xfffffffffffffcc7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:62 93 {*movqi_internal}
     (nil))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [0 temp_long+0 S8 A64])
        (const_int 0 [0])) ge2fitman_com_line.cpp:64 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:65 90 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [0 s_u_out+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:66 90 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:DI 0 ax [501])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:69 218 {*adddi_1}
     (nil))
(insn 33 32 1956 2 (set (reg:DI 3 bx [830])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 1956 33 34 2 (set (mem/c:DI (reg:DI 0 ax [501]) [0 MEM[(void *)&filename]+0 S8 A64])
        (reg:DI 3 bx [830])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 34 1956 1957 2 (set (reg:DI 3 bx [831])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 1957 34 35 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [501])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename]+8 S8 A64])
        (reg:DI 3 bx [831])) ge2fitman_com_line.cpp:69 89 {*movdi_internal}
     (nil))
(insn 35 1957 36 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [501])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:69 90 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [501])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:69 92 {*movhi_internal}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg:DI 0 ax [502])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:70 218 {*adddi_1}
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 0 ax [503])
                (plus:DI (reg:DI 0 ax [502])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:70 218 {*adddi_1}
     (nil))
(insn 39 38 1958 2 (set (reg:DI 2 cx [832])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 1958 39 40 2 (set (mem/c:DI (reg:DI 0 ax [503]) [0 MEM[(void *)&filename + 256B]+0 S8 A64])
        (reg:DI 2 cx [832])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 40 1958 1959 2 (set (reg:DI 3 bx [833])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 1959 40 41 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [503])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename + 256B]+8 S8 A64])
        (reg:DI 3 bx [833])) ge2fitman_com_line.cpp:70 89 {*movdi_internal}
     (nil))
(insn 41 1959 42 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [503])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename + 256B]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:70 90 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [503])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename + 256B]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:70 92 {*movhi_internal}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:DI 0 ax [504])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:71 218 {*adddi_1}
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg:DI 0 ax [505])
                (plus:DI (reg:DI 0 ax [504])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:71 218 {*adddi_1}
     (nil))
(insn 45 44 1960 2 (set (reg:DI 2 cx [834])
        (const_int 7954883516223745870 [0x6e656c6946206f4e])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 1960 45 46 2 (set (mem/c:DI (reg:DI 0 ax [505]) [0 MEM[(void *)&filename + 512B]+0 S8 A64])
        (reg:DI 2 cx [834])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 46 1960 1961 2 (set (reg:DI 3 bx [835])
        (const_int 7593480468811836769 [0x6961764120656d61])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 1961 46 47 2 (set (mem/c:DI (plus:DI (reg:DI 0 ax [505])
                (const_int 8 [0x8])) [0 MEM[(void *)&filename + 512B]+8 S8 A64])
        (reg:DI 3 bx [835])) ge2fitman_com_line.cpp:71 89 {*movdi_internal}
     (nil))
(insn 47 1961 48 2 (set (mem/c:SI (plus:DI (reg:DI 0 ax [505])
                (const_int 16 [0x10])) [0 MEM[(void *)&filename + 512B]+16 S4 A64])
        (const_int 1818386796 [0x6c62616c])) ge2fitman_com_line.cpp:71 90 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (mem/c:HI (plus:DI (reg:DI 0 ax [505])
                (const_int 20 [0x14])) [0 MEM[(void *)&filename + 512B]+20 S2 A32])
        (const_int 101 [0x65])) ge2fitman_com_line.cpp:71 92 {*movhi_internal}
     (nil))
(insn 49 48 305 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:74 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 305 49 50 3 3 "" [1 uses])
(note 50 305 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:74 7 {*cmpsi_1}
     (nil))
(jump_insn 52 51 53 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) ge2fitman_com_line.cpp:74 612 {*jcc_1}
     (nil)
 -> 308)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 53 52 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 4 (set (reg:SI 0 ax [506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:75 90 {*movsi_internal}
     (nil))
(insn 55 54 56 4 (set (reg:DI 1 dx [orig:88 D.25258 ] [88])
        (sign_extend:DI (reg:SI 0 ax [506]))) ge2fitman_com_line.cpp:75 142 {*extendsidi2_rex64}
     (nil))
(insn 56 55 57 4 (set (reg:DI 0 ax [507])
        (reg:DI 1 dx [orig:88 D.25258 ] [88])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg:DI 0 ax [507])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 512 {*ashldi3_1}
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg:DI 0 ax [507])
                (plus:DI (reg:DI 0 ax [507])
                    (reg:DI 1 dx [orig:88 D.25258 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:88 D.25258 ] [88])
            (const_int 9 [0x9]))
        (nil)))
(insn 59 58 60 4 (parallel [
            (set (reg:DI 0 ax [507])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 512 {*ashldi3_1}
     (nil))
(insn 60 59 61 4 (parallel [
            (set (reg:DI 0 ax [507])
                (plus:DI (reg:DI 0 ax [507])
                    (reg:DI 1 dx [orig:88 D.25258 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:88 D.25258 ] [88])
            (const_int 19 [0x13]))
        (nil)))
(insn 61 60 62 4 (parallel [
            (set (reg:DI 0 ax [508])
                (ashift:DI (reg:DI 0 ax [507])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 512 {*ashldi3_1}
     (nil))
(insn 62 61 63 4 (set (reg:DI 0 ax [507])
        (reg:DI 0 ax [508])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 63 62 64 4 (set (reg:DI 1 dx [orig:89 D.25258 ] [89])
        (reg:DI 0 ax [507])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 64 63 65 4 (set (reg/f:DI 0 ax [509])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:75 89 {*movdi_internal}
     (nil))
(insn 65 64 66 4 (parallel [
            (set (reg/f:DI 0 ax [orig:90 D.25259 ] [90])
                (plus:DI (reg/f:DI 0 ax [509])
                    (reg:DI 1 dx [orig:89 D.25258 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:75 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:89 D.25258 ] [89]))
        (nil)))
(insn 66 65 67 4 (set (mem/j:SI (reg/f:DI 0 ax [orig:90 D.25259 ] [90]) [0 _64->fid_scale+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:75 90 {*movsi_internal}
     (nil))
(insn 67 66 68 4 (set (reg:SI 0 ax [510])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:76 90 {*movsi_internal}
     (nil))
(insn 68 67 69 4 (set (reg:DI 1 dx [orig:91 D.25258 ] [91])
        (sign_extend:DI (reg:SI 0 ax [510]))) ge2fitman_com_line.cpp:76 142 {*extendsidi2_rex64}
     (nil))
(insn 69 68 70 4 (set (reg:DI 0 ax [511])
        (reg:DI 1 dx [orig:91 D.25258 ] [91])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 70 69 71 4 (parallel [
            (set (reg:DI 0 ax [511])
                (ashift:DI (reg:DI 0 ax [511])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 512 {*ashldi3_1}
     (nil))
(insn 71 70 72 4 (parallel [
            (set (reg:DI 0 ax [511])
                (plus:DI (reg:DI 0 ax [511])
                    (reg:DI 1 dx [orig:91 D.25258 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:91 D.25258 ] [91])
            (const_int 9 [0x9]))
        (nil)))
(insn 72 71 73 4 (parallel [
            (set (reg:DI 0 ax [511])
                (ashift:DI (reg:DI 0 ax [511])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 512 {*ashldi3_1}
     (nil))
(insn 73 72 74 4 (parallel [
            (set (reg:DI 0 ax [511])
                (plus:DI (reg:DI 0 ax [511])
                    (reg:DI 1 dx [orig:91 D.25258 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:91 D.25258 ] [91])
            (const_int 19 [0x13]))
        (nil)))
(insn 74 73 75 4 (parallel [
            (set (reg:DI 0 ax [512])
                (ashift:DI (reg:DI 0 ax [511])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 512 {*ashldi3_1}
     (nil))
(insn 75 74 76 4 (set (reg:DI 0 ax [511])
        (reg:DI 0 ax [512])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 76 75 77 4 (set (reg:DI 1 dx [orig:92 D.25258 ] [92])
        (reg:DI 0 ax [511])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 77 76 78 4 (set (reg/f:DI 0 ax [513])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:76 89 {*movdi_internal}
     (nil))
(insn 78 77 79 4 (parallel [
            (set (reg/f:DI 0 ax [orig:93 D.25259 ] [93])
                (plus:DI (reg/f:DI 0 ax [513])
                    (reg:DI 1 dx [orig:92 D.25258 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:76 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:92 D.25258 ] [92]))
        (nil)))
(insn 79 78 80 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:93 D.25259 ] [93])
                (const_int 8 [0x8])) [0 _68->scaleby+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:76 90 {*movsi_internal}
     (nil))
(insn 80 79 81 4 (set (reg:SI 0 ax [514])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:77 90 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg:DI 1 dx [orig:94 D.25258 ] [94])
        (sign_extend:DI (reg:SI 0 ax [514]))) ge2fitman_com_line.cpp:77 142 {*extendsidi2_rex64}
     (nil))
(insn 82 81 83 4 (set (reg:DI 0 ax [515])
        (reg:DI 1 dx [orig:94 D.25258 ] [94])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 83 82 84 4 (parallel [
            (set (reg:DI 0 ax [515])
                (ashift:DI (reg:DI 0 ax [515])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 512 {*ashldi3_1}
     (nil))
(insn 84 83 85 4 (parallel [
            (set (reg:DI 0 ax [515])
                (plus:DI (reg:DI 0 ax [515])
                    (reg:DI 1 dx [orig:94 D.25258 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:94 D.25258 ] [94])
            (const_int 9 [0x9]))
        (nil)))
(insn 85 84 86 4 (parallel [
            (set (reg:DI 0 ax [515])
                (ashift:DI (reg:DI 0 ax [515])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 512 {*ashldi3_1}
     (nil))
(insn 86 85 87 4 (parallel [
            (set (reg:DI 0 ax [515])
                (plus:DI (reg:DI 0 ax [515])
                    (reg:DI 1 dx [orig:94 D.25258 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:94 D.25258 ] [94])
            (const_int 19 [0x13]))
        (nil)))
(insn 87 86 88 4 (parallel [
            (set (reg:DI 0 ax [516])
                (ashift:DI (reg:DI 0 ax [515])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 512 {*ashldi3_1}
     (nil))
(insn 88 87 89 4 (set (reg:DI 0 ax [515])
        (reg:DI 0 ax [516])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 89 88 90 4 (set (reg:DI 1 dx [orig:95 D.25258 ] [95])
        (reg:DI 0 ax [515])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 90 89 91 4 (set (reg/f:DI 0 ax [517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:77 89 {*movdi_internal}
     (nil))
(insn 91 90 92 4 (parallel [
            (set (reg/f:DI 0 ax [orig:96 D.25259 ] [96])
                (plus:DI (reg/f:DI 0 ax [517])
                    (reg:DI 1 dx [orig:95 D.25258 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:77 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:95 D.25258 ] [95]))
        (nil)))
(insn 92 91 93 4 (set (reg:SF 21 xmm0 [518])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:77 129 {*movsf_internal}
     (nil))
(insn 93 92 94 4 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:96 D.25259 ] [96])
                (const_int 4 [0x4])) [0 _72->scale_factor+0 S4 A32])
        (reg:SF 21 xmm0 [518])) ge2fitman_com_line.cpp:77 129 {*movsf_internal}
     (nil))
(insn 94 93 95 4 (set (reg:SI 0 ax [519])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:78 90 {*movsi_internal}
     (nil))
(insn 95 94 96 4 (set (reg:DI 1 dx [orig:97 D.25258 ] [97])
        (sign_extend:DI (reg:SI 0 ax [519]))) ge2fitman_com_line.cpp:78 142 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 4 (set (reg:DI 0 ax [520])
        (reg:DI 1 dx [orig:97 D.25258 ] [97])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 97 96 98 4 (parallel [
            (set (reg:DI 0 ax [520])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 512 {*ashldi3_1}
     (nil))
(insn 98 97 99 4 (parallel [
            (set (reg:DI 0 ax [520])
                (plus:DI (reg:DI 0 ax [520])
                    (reg:DI 1 dx [orig:97 D.25258 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:97 D.25258 ] [97])
            (const_int 9 [0x9]))
        (nil)))
(insn 99 98 100 4 (parallel [
            (set (reg:DI 0 ax [520])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 512 {*ashldi3_1}
     (nil))
(insn 100 99 101 4 (parallel [
            (set (reg:DI 0 ax [520])
                (plus:DI (reg:DI 0 ax [520])
                    (reg:DI 1 dx [orig:97 D.25258 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:97 D.25258 ] [97])
            (const_int 19 [0x13]))
        (nil)))
(insn 101 100 102 4 (parallel [
            (set (reg:DI 0 ax [521])
                (ashift:DI (reg:DI 0 ax [520])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 512 {*ashldi3_1}
     (nil))
(insn 102 101 103 4 (set (reg:DI 0 ax [520])
        (reg:DI 0 ax [521])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 103 102 104 4 (set (reg:DI 1 dx [orig:98 D.25258 ] [98])
        (reg:DI 0 ax [520])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 104 103 105 4 (set (reg/f:DI 0 ax [522])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:78 89 {*movdi_internal}
     (nil))
(insn 105 104 106 4 (parallel [
            (set (reg/f:DI 0 ax [orig:99 D.25259 ] [99])
                (plus:DI (reg/f:DI 0 ax [522])
                    (reg:DI 1 dx [orig:98 D.25258 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:78 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:98 D.25258 ] [98]))
        (nil)))
(insn 106 105 107 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:99 D.25259 ] [99])
                (const_int 12 [0xc])) [0 _76->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:78 90 {*movsi_internal}
     (nil))
(insn 107 106 108 4 (set (reg:SI 0 ax [523])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:79 90 {*movsi_internal}
     (nil))
(insn 108 107 109 4 (set (reg:DI 1 dx [orig:100 D.25258 ] [100])
        (sign_extend:DI (reg:SI 0 ax [523]))) ge2fitman_com_line.cpp:79 142 {*extendsidi2_rex64}
     (nil))
(insn 109 108 110 4 (set (reg:DI 0 ax [524])
        (reg:DI 1 dx [orig:100 D.25258 ] [100])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 110 109 111 4 (parallel [
            (set (reg:DI 0 ax [524])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 512 {*ashldi3_1}
     (nil))
(insn 111 110 112 4 (parallel [
            (set (reg:DI 0 ax [524])
                (plus:DI (reg:DI 0 ax [524])
                    (reg:DI 1 dx [orig:100 D.25258 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:100 D.25258 ] [100])
            (const_int 9 [0x9]))
        (nil)))
(insn 112 111 113 4 (parallel [
            (set (reg:DI 0 ax [524])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 512 {*ashldi3_1}
     (nil))
(insn 113 112 114 4 (parallel [
            (set (reg:DI 0 ax [524])
                (plus:DI (reg:DI 0 ax [524])
                    (reg:DI 1 dx [orig:100 D.25258 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:100 D.25258 ] [100])
            (const_int 19 [0x13]))
        (nil)))
(insn 114 113 115 4 (parallel [
            (set (reg:DI 0 ax [525])
                (ashift:DI (reg:DI 0 ax [524])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 512 {*ashldi3_1}
     (nil))
(insn 115 114 116 4 (set (reg:DI 0 ax [524])
        (reg:DI 0 ax [525])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 116 115 117 4 (set (reg:DI 1 dx [orig:101 D.25258 ] [101])
        (reg:DI 0 ax [524])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 117 116 118 4 (set (reg/f:DI 0 ax [526])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:79 89 {*movdi_internal}
     (nil))
(insn 118 117 119 4 (parallel [
            (set (reg/f:DI 0 ax [orig:102 D.25259 ] [102])
                (plus:DI (reg/f:DI 0 ax [526])
                    (reg:DI 1 dx [orig:101 D.25258 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:79 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:101 D.25258 ] [101]))
        (nil)))
(insn 119 118 120 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:102 D.25259 ] [102])
                (const_int 16 [0x10])) [0 _80->bc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:79 90 {*movsi_internal}
     (nil))
(insn 120 119 121 4 (set (reg:SI 0 ax [527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:80 90 {*movsi_internal}
     (nil))
(insn 121 120 122 4 (set (reg:DI 1 dx [orig:103 D.25258 ] [103])
        (sign_extend:DI (reg:SI 0 ax [527]))) ge2fitman_com_line.cpp:80 142 {*extendsidi2_rex64}
     (nil))
(insn 122 121 123 4 (set (reg:DI 0 ax [528])
        (reg:DI 1 dx [orig:103 D.25258 ] [103])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 123 122 124 4 (parallel [
            (set (reg:DI 0 ax [528])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 512 {*ashldi3_1}
     (nil))
(insn 124 123 125 4 (parallel [
            (set (reg:DI 0 ax [528])
                (plus:DI (reg:DI 0 ax [528])
                    (reg:DI 1 dx [orig:103 D.25258 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:103 D.25258 ] [103])
            (const_int 9 [0x9]))
        (nil)))
(insn 125 124 126 4 (parallel [
            (set (reg:DI 0 ax [528])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 512 {*ashldi3_1}
     (nil))
(insn 126 125 127 4 (parallel [
            (set (reg:DI 0 ax [528])
                (plus:DI (reg:DI 0 ax [528])
                    (reg:DI 1 dx [orig:103 D.25258 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:103 D.25258 ] [103])
            (const_int 19 [0x13]))
        (nil)))
(insn 127 126 128 4 (parallel [
            (set (reg:DI 0 ax [529])
                (ashift:DI (reg:DI 0 ax [528])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 512 {*ashldi3_1}
     (nil))
(insn 128 127 129 4 (set (reg:DI 0 ax [528])
        (reg:DI 0 ax [529])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 129 128 130 4 (set (reg:DI 1 dx [orig:104 D.25258 ] [104])
        (reg:DI 0 ax [528])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 130 129 131 4 (set (reg/f:DI 0 ax [530])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:80 89 {*movdi_internal}
     (nil))
(insn 131 130 132 4 (parallel [
            (set (reg/f:DI 0 ax [orig:105 D.25259 ] [105])
                (plus:DI (reg/f:DI 0 ax [530])
                    (reg:DI 1 dx [orig:104 D.25258 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:80 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:104 D.25258 ] [104]))
        (nil)))
(insn 132 131 133 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:105 D.25259 ] [105])
                (const_int 20 [0x14])) [0 _84->file_type+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:80 90 {*movsi_internal}
     (nil))
(insn 133 132 134 4 (set (reg:SI 0 ax [531])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:81 90 {*movsi_internal}
     (nil))
(insn 134 133 135 4 (set (reg:DI 1 dx [orig:106 D.25258 ] [106])
        (sign_extend:DI (reg:SI 0 ax [531]))) ge2fitman_com_line.cpp:81 142 {*extendsidi2_rex64}
     (nil))
(insn 135 134 136 4 (set (reg:DI 0 ax [532])
        (reg:DI 1 dx [orig:106 D.25258 ] [106])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 136 135 137 4 (parallel [
            (set (reg:DI 0 ax [532])
                (ashift:DI (reg:DI 0 ax [532])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 512 {*ashldi3_1}
     (nil))
(insn 137 136 138 4 (parallel [
            (set (reg:DI 0 ax [532])
                (plus:DI (reg:DI 0 ax [532])
                    (reg:DI 1 dx [orig:106 D.25258 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:106 D.25258 ] [106])
            (const_int 9 [0x9]))
        (nil)))
(insn 138 137 139 4 (parallel [
            (set (reg:DI 0 ax [532])
                (ashift:DI (reg:DI 0 ax [532])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 512 {*ashldi3_1}
     (nil))
(insn 139 138 140 4 (parallel [
            (set (reg:DI 0 ax [532])
                (plus:DI (reg:DI 0 ax [532])
                    (reg:DI 1 dx [orig:106 D.25258 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:106 D.25258 ] [106])
            (const_int 19 [0x13]))
        (nil)))
(insn 140 139 141 4 (parallel [
            (set (reg:DI 0 ax [533])
                (ashift:DI (reg:DI 0 ax [532])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 512 {*ashldi3_1}
     (nil))
(insn 141 140 142 4 (set (reg:DI 0 ax [532])
        (reg:DI 0 ax [533])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 142 141 143 4 (set (reg:DI 1 dx [orig:107 D.25258 ] [107])
        (reg:DI 0 ax [532])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 143 142 144 4 (set (reg/f:DI 0 ax [534])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:81 89 {*movdi_internal}
     (nil))
(insn 144 143 145 4 (parallel [
            (set (reg/f:DI 0 ax [orig:108 D.25259 ] [108])
                (plus:DI (reg/f:DI 0 ax [534])
                    (reg:DI 1 dx [orig:107 D.25258 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:81 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:107 D.25258 ] [107]))
        (nil)))
(insn 145 144 146 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:108 D.25259 ] [108])
                (const_int 24 [0x18])) [0 _88->data_zero_fill+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:81 90 {*movsi_internal}
     (nil))
(insn 146 145 147 4 (set (reg:SI 0 ax [535])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:82 90 {*movsi_internal}
     (nil))
(insn 147 146 148 4 (set (reg:DI 1 dx [orig:109 D.25258 ] [109])
        (sign_extend:DI (reg:SI 0 ax [535]))) ge2fitman_com_line.cpp:82 142 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 4 (set (reg:DI 0 ax [536])
        (reg:DI 1 dx [orig:109 D.25258 ] [109])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 149 148 150 4 (parallel [
            (set (reg:DI 0 ax [536])
                (ashift:DI (reg:DI 0 ax [536])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 512 {*ashldi3_1}
     (nil))
(insn 150 149 151 4 (parallel [
            (set (reg:DI 0 ax [536])
                (plus:DI (reg:DI 0 ax [536])
                    (reg:DI 1 dx [orig:109 D.25258 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:109 D.25258 ] [109])
            (const_int 9 [0x9]))
        (nil)))
(insn 151 150 152 4 (parallel [
            (set (reg:DI 0 ax [536])
                (ashift:DI (reg:DI 0 ax [536])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 512 {*ashldi3_1}
     (nil))
(insn 152 151 153 4 (parallel [
            (set (reg:DI 0 ax [536])
                (plus:DI (reg:DI 0 ax [536])
                    (reg:DI 1 dx [orig:109 D.25258 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:109 D.25258 ] [109])
            (const_int 19 [0x13]))
        (nil)))
(insn 153 152 154 4 (parallel [
            (set (reg:DI 0 ax [537])
                (ashift:DI (reg:DI 0 ax [536])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 512 {*ashldi3_1}
     (nil))
(insn 154 153 155 4 (set (reg:DI 0 ax [536])
        (reg:DI 0 ax [537])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 155 154 156 4 (set (reg:DI 1 dx [orig:110 D.25258 ] [110])
        (reg:DI 0 ax [536])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 156 155 157 4 (set (reg/f:DI 0 ax [538])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:82 89 {*movdi_internal}
     (nil))
(insn 157 156 158 4 (parallel [
            (set (reg/f:DI 0 ax [orig:111 D.25259 ] [111])
                (plus:DI (reg/f:DI 0 ax [538])
                    (reg:DI 1 dx [orig:110 D.25258 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:82 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:110 D.25258 ] [110]))
        (nil)))
(insn 158 157 159 4 (set (reg:SF 21 xmm0 [539])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:82 129 {*movsf_internal}
     (nil))
(insn 159 158 160 4 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:111 D.25259 ] [111])
                (const_int 28 [0x1c])) [0 _92->comp_filter+0 S4 A32])
        (reg:SF 21 xmm0 [539])) ge2fitman_com_line.cpp:82 129 {*movsf_internal}
     (nil))
(insn 160 159 161 4 (set (reg:SI 0 ax [540])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:83 90 {*movsi_internal}
     (nil))
(insn 161 160 162 4 (set (reg:DI 1 dx [orig:112 D.25258 ] [112])
        (sign_extend:DI (reg:SI 0 ax [540]))) ge2fitman_com_line.cpp:83 142 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 4 (set (reg:DI 0 ax [541])
        (reg:DI 1 dx [orig:112 D.25258 ] [112])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 163 162 164 4 (parallel [
            (set (reg:DI 0 ax [541])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 512 {*ashldi3_1}
     (nil))
(insn 164 163 165 4 (parallel [
            (set (reg:DI 0 ax [541])
                (plus:DI (reg:DI 0 ax [541])
                    (reg:DI 1 dx [orig:112 D.25258 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:112 D.25258 ] [112])
            (const_int 9 [0x9]))
        (nil)))
(insn 165 164 166 4 (parallel [
            (set (reg:DI 0 ax [541])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 512 {*ashldi3_1}
     (nil))
(insn 166 165 167 4 (parallel [
            (set (reg:DI 0 ax [541])
                (plus:DI (reg:DI 0 ax [541])
                    (reg:DI 1 dx [orig:112 D.25258 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:112 D.25258 ] [112])
            (const_int 19 [0x13]))
        (nil)))
(insn 167 166 168 4 (parallel [
            (set (reg:DI 0 ax [542])
                (ashift:DI (reg:DI 0 ax [541])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 512 {*ashldi3_1}
     (nil))
(insn 168 167 169 4 (set (reg:DI 0 ax [541])
        (reg:DI 0 ax [542])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 169 168 170 4 (set (reg:DI 1 dx [orig:113 D.25258 ] [113])
        (reg:DI 0 ax [541])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 170 169 171 4 (set (reg/f:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:83 89 {*movdi_internal}
     (nil))
(insn 171 170 172 4 (parallel [
            (set (reg/f:DI 0 ax [orig:114 D.25259 ] [114])
                (plus:DI (reg/f:DI 0 ax [543])
                    (reg:DI 1 dx [orig:113 D.25258 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:83 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:113 D.25258 ] [113]))
        (nil)))
(insn 172 171 173 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:114 D.25259 ] [114])
                (const_int 32 [0x20])) [0 _96->max_normalize+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:83 90 {*movsi_internal}
     (nil))
(insn 173 172 174 4 (set (reg:SI 0 ax [544])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:84 90 {*movsi_internal}
     (nil))
(insn 174 173 175 4 (set (reg:DI 1 dx [orig:115 D.25258 ] [115])
        (sign_extend:DI (reg:SI 0 ax [544]))) ge2fitman_com_line.cpp:84 142 {*extendsidi2_rex64}
     (nil))
(insn 175 174 176 4 (set (reg:DI 0 ax [545])
        (reg:DI 1 dx [orig:115 D.25258 ] [115])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 176 175 177 4 (parallel [
            (set (reg:DI 0 ax [545])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 177 176 178 4 (parallel [
            (set (reg:DI 0 ax [545])
                (plus:DI (reg:DI 0 ax [545])
                    (reg:DI 1 dx [orig:115 D.25258 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:115 D.25258 ] [115])
            (const_int 9 [0x9]))
        (nil)))
(insn 178 177 179 4 (parallel [
            (set (reg:DI 0 ax [545])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 179 178 180 4 (parallel [
            (set (reg:DI 0 ax [545])
                (plus:DI (reg:DI 0 ax [545])
                    (reg:DI 1 dx [orig:115 D.25258 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:115 D.25258 ] [115])
            (const_int 19 [0x13]))
        (nil)))
(insn 180 179 181 4 (parallel [
            (set (reg:DI 0 ax [546])
                (ashift:DI (reg:DI 0 ax [545])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 512 {*ashldi3_1}
     (nil))
(insn 181 180 182 4 (set (reg:DI 0 ax [545])
        (reg:DI 0 ax [546])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 182 181 183 4 (set (reg:DI 1 dx [orig:116 D.25258 ] [116])
        (reg:DI 0 ax [545])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 183 182 184 4 (set (reg/f:DI 0 ax [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:84 89 {*movdi_internal}
     (nil))
(insn 184 183 185 4 (parallel [
            (set (reg/f:DI 0 ax [orig:117 D.25259 ] [117])
                (plus:DI (reg/f:DI 0 ax [547])
                    (reg:DI 1 dx [orig:116 D.25258 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:84 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:116 D.25258 ] [116]))
        (nil)))
(insn 185 184 186 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:117 D.25259 ] [117])
                (const_int 36 [0x24])) [0 _100->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:84 90 {*movsi_internal}
     (nil))
(insn 186 185 187 4 (set (reg:SI 0 ax [548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:85 90 {*movsi_internal}
     (nil))
(insn 187 186 188 4 (set (reg:DI 1 dx [orig:118 D.25258 ] [118])
        (sign_extend:DI (reg:SI 0 ax [548]))) ge2fitman_com_line.cpp:85 142 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 4 (set (reg:DI 0 ax [549])
        (reg:DI 1 dx [orig:118 D.25258 ] [118])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 189 188 190 4 (parallel [
            (set (reg:DI 0 ax [549])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 190 189 191 4 (parallel [
            (set (reg:DI 0 ax [549])
                (plus:DI (reg:DI 0 ax [549])
                    (reg:DI 1 dx [orig:118 D.25258 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:118 D.25258 ] [118])
            (const_int 9 [0x9]))
        (nil)))
(insn 191 190 192 4 (parallel [
            (set (reg:DI 0 ax [549])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 192 191 193 4 (parallel [
            (set (reg:DI 0 ax [549])
                (plus:DI (reg:DI 0 ax [549])
                    (reg:DI 1 dx [orig:118 D.25258 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:118 D.25258 ] [118])
            (const_int 19 [0x13]))
        (nil)))
(insn 193 192 194 4 (parallel [
            (set (reg:DI 0 ax [550])
                (ashift:DI (reg:DI 0 ax [549])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 512 {*ashldi3_1}
     (nil))
(insn 194 193 195 4 (set (reg:DI 0 ax [549])
        (reg:DI 0 ax [550])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 195 194 196 4 (set (reg:DI 1 dx [orig:119 D.25258 ] [119])
        (reg:DI 0 ax [549])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 196 195 197 4 (set (reg/f:DI 0 ax [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:85 89 {*movdi_internal}
     (nil))
(insn 197 196 198 4 (parallel [
            (set (reg/f:DI 0 ax [orig:120 D.25259 ] [120])
                (plus:DI (reg/f:DI 0 ax [551])
                    (reg:DI 1 dx [orig:119 D.25258 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:85 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:119 D.25258 ] [119]))
        (nil)))
(insn 198 197 199 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:120 D.25259 ] [120])
                (const_int 40 [0x28])) [0 _104->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:85 90 {*movsi_internal}
     (nil))
(insn 199 198 200 4 (set (reg:SI 0 ax [552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:86 90 {*movsi_internal}
     (nil))
(insn 200 199 201 4 (set (reg:DI 1 dx [orig:121 D.25258 ] [121])
        (sign_extend:DI (reg:SI 0 ax [552]))) ge2fitman_com_line.cpp:86 142 {*extendsidi2_rex64}
     (nil))
(insn 201 200 202 4 (set (reg:DI 0 ax [553])
        (reg:DI 1 dx [orig:121 D.25258 ] [121])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 202 201 203 4 (parallel [
            (set (reg:DI 0 ax [553])
                (ashift:DI (reg:DI 0 ax [553])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 512 {*ashldi3_1}
     (nil))
(insn 203 202 204 4 (parallel [
            (set (reg:DI 0 ax [553])
                (plus:DI (reg:DI 0 ax [553])
                    (reg:DI 1 dx [orig:121 D.25258 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:121 D.25258 ] [121])
            (const_int 9 [0x9]))
        (nil)))
(insn 204 203 205 4 (parallel [
            (set (reg:DI 0 ax [553])
                (ashift:DI (reg:DI 0 ax [553])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 512 {*ashldi3_1}
     (nil))
(insn 205 204 206 4 (parallel [
            (set (reg:DI 0 ax [553])
                (plus:DI (reg:DI 0 ax [553])
                    (reg:DI 1 dx [orig:121 D.25258 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:121 D.25258 ] [121])
            (const_int 19 [0x13]))
        (nil)))
(insn 206 205 207 4 (parallel [
            (set (reg:DI 0 ax [554])
                (ashift:DI (reg:DI 0 ax [553])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 512 {*ashldi3_1}
     (nil))
(insn 207 206 208 4 (set (reg:DI 0 ax [553])
        (reg:DI 0 ax [554])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 208 207 209 4 (set (reg:DI 1 dx [orig:122 D.25258 ] [122])
        (reg:DI 0 ax [553])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 209 208 210 4 (set (reg/f:DI 0 ax [555])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:86 89 {*movdi_internal}
     (nil))
(insn 210 209 211 4 (parallel [
            (set (reg/f:DI 0 ax [orig:123 D.25259 ] [123])
                (plus:DI (reg/f:DI 0 ax [555])
                    (reg:DI 1 dx [orig:122 D.25258 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:86 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:122 D.25258 ] [122]))
        (nil)))
(insn 211 210 212 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:123 D.25259 ] [123])
                (const_int 44 [0x2c])) [0 _108->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:86 90 {*movsi_internal}
     (nil))
(insn 212 211 213 4 (set (reg:SI 0 ax [556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:87 90 {*movsi_internal}
     (nil))
(insn 213 212 214 4 (set (reg:DI 1 dx [orig:124 D.25258 ] [124])
        (sign_extend:DI (reg:SI 0 ax [556]))) ge2fitman_com_line.cpp:87 142 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 4 (set (reg:DI 0 ax [557])
        (reg:DI 1 dx [orig:124 D.25258 ] [124])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 215 214 216 4 (parallel [
            (set (reg:DI 0 ax [557])
                (ashift:DI (reg:DI 0 ax [557])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 512 {*ashldi3_1}
     (nil))
(insn 216 215 217 4 (parallel [
            (set (reg:DI 0 ax [557])
                (plus:DI (reg:DI 0 ax [557])
                    (reg:DI 1 dx [orig:124 D.25258 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:124 D.25258 ] [124])
            (const_int 9 [0x9]))
        (nil)))
(insn 217 216 218 4 (parallel [
            (set (reg:DI 0 ax [557])
                (ashift:DI (reg:DI 0 ax [557])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 512 {*ashldi3_1}
     (nil))
(insn 218 217 219 4 (parallel [
            (set (reg:DI 0 ax [557])
                (plus:DI (reg:DI 0 ax [557])
                    (reg:DI 1 dx [orig:124 D.25258 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:124 D.25258 ] [124])
            (const_int 19 [0x13]))
        (nil)))
(insn 219 218 220 4 (parallel [
            (set (reg:DI 0 ax [558])
                (ashift:DI (reg:DI 0 ax [557])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 512 {*ashldi3_1}
     (nil))
(insn 220 219 221 4 (set (reg:DI 0 ax [557])
        (reg:DI 0 ax [558])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 221 220 222 4 (set (reg:DI 1 dx [orig:125 D.25258 ] [125])
        (reg:DI 0 ax [557])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 222 221 223 4 (set (reg/f:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:87 89 {*movdi_internal}
     (nil))
(insn 223 222 224 4 (parallel [
            (set (reg/f:DI 0 ax [orig:126 D.25259 ] [126])
                (plus:DI (reg/f:DI 0 ax [559])
                    (reg:DI 1 dx [orig:125 D.25258 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:87 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:125 D.25258 ] [125]))
        (nil)))
(insn 224 223 225 4 (set (reg:SF 21 xmm0 [560])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:87 129 {*movsf_internal}
     (nil))
(insn 225 224 226 4 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:126 D.25259 ] [126])
                (const_int 48 [0x30])) [0 _112->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [560])) ge2fitman_com_line.cpp:87 129 {*movsf_internal}
     (nil))
(insn 226 225 227 4 (set (reg:SI 0 ax [561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:88 90 {*movsi_internal}
     (nil))
(insn 227 226 228 4 (set (reg:DI 1 dx [orig:127 D.25258 ] [127])
        (sign_extend:DI (reg:SI 0 ax [561]))) ge2fitman_com_line.cpp:88 142 {*extendsidi2_rex64}
     (nil))
(insn 228 227 229 4 (set (reg:DI 0 ax [562])
        (reg:DI 1 dx [orig:127 D.25258 ] [127])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 229 228 230 4 (parallel [
            (set (reg:DI 0 ax [562])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 512 {*ashldi3_1}
     (nil))
(insn 230 229 231 4 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [562])
                    (reg:DI 1 dx [orig:127 D.25258 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:127 D.25258 ] [127])
            (const_int 9 [0x9]))
        (nil)))
(insn 231 230 232 4 (parallel [
            (set (reg:DI 0 ax [562])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 512 {*ashldi3_1}
     (nil))
(insn 232 231 233 4 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [562])
                    (reg:DI 1 dx [orig:127 D.25258 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:127 D.25258 ] [127])
            (const_int 19 [0x13]))
        (nil)))
(insn 233 232 234 4 (parallel [
            (set (reg:DI 0 ax [563])
                (ashift:DI (reg:DI 0 ax [562])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 512 {*ashldi3_1}
     (nil))
(insn 234 233 235 4 (set (reg:DI 0 ax [562])
        (reg:DI 0 ax [563])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 235 234 236 4 (set (reg:DI 1 dx [orig:128 D.25258 ] [128])
        (reg:DI 0 ax [562])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 236 235 237 4 (set (reg/f:DI 0 ax [564])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:88 89 {*movdi_internal}
     (nil))
(insn 237 236 238 4 (parallel [
            (set (reg/f:DI 0 ax [orig:129 D.25259 ] [129])
                (plus:DI (reg/f:DI 0 ax [564])
                    (reg:DI 1 dx [orig:128 D.25258 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:88 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:128 D.25258 ] [128]))
        (nil)))
(insn 238 237 239 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:129 D.25259 ] [129])
                (const_int 52 [0x34])) [0 _116->pre_quecc_if+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:88 90 {*movsi_internal}
     (nil))
(insn 239 238 240 4 (set (reg:SI 0 ax [565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:89 90 {*movsi_internal}
     (nil))
(insn 240 239 241 4 (set (reg:DI 1 dx [orig:130 D.25258 ] [130])
        (sign_extend:DI (reg:SI 0 ax [565]))) ge2fitman_com_line.cpp:89 142 {*extendsidi2_rex64}
     (nil))
(insn 241 240 242 4 (set (reg:DI 0 ax [566])
        (reg:DI 1 dx [orig:130 D.25258 ] [130])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 242 241 243 4 (parallel [
            (set (reg:DI 0 ax [566])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 512 {*ashldi3_1}
     (nil))
(insn 243 242 244 4 (parallel [
            (set (reg:DI 0 ax [566])
                (plus:DI (reg:DI 0 ax [566])
                    (reg:DI 1 dx [orig:130 D.25258 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:130 D.25258 ] [130])
            (const_int 9 [0x9]))
        (nil)))
(insn 244 243 245 4 (parallel [
            (set (reg:DI 0 ax [566])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 512 {*ashldi3_1}
     (nil))
(insn 245 244 246 4 (parallel [
            (set (reg:DI 0 ax [566])
                (plus:DI (reg:DI 0 ax [566])
                    (reg:DI 1 dx [orig:130 D.25258 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:130 D.25258 ] [130])
            (const_int 19 [0x13]))
        (nil)))
(insn 246 245 247 4 (parallel [
            (set (reg:DI 0 ax [567])
                (ashift:DI (reg:DI 0 ax [566])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 512 {*ashldi3_1}
     (nil))
(insn 247 246 248 4 (set (reg:DI 0 ax [566])
        (reg:DI 0 ax [567])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 248 247 249 4 (set (reg:DI 1 dx [orig:131 D.25258 ] [131])
        (reg:DI 0 ax [566])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 249 248 250 4 (set (reg/f:DI 0 ax [568])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:89 89 {*movdi_internal}
     (nil))
(insn 250 249 251 4 (parallel [
            (set (reg/f:DI 0 ax [orig:132 D.25259 ] [132])
                (plus:DI (reg/f:DI 0 ax [568])
                    (reg:DI 1 dx [orig:131 D.25258 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:89 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:131 D.25258 ] [131]))
        (nil)))
(insn 251 250 252 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:132 D.25259 ] [132])
                (const_int 56 [0x38])) [0 _120->input_file_type+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:89 90 {*movsi_internal}
     (nil))
(insn 252 251 253 4 (set (reg:SI 0 ax [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:90 90 {*movsi_internal}
     (nil))
(insn 253 252 254 4 (set (reg:DI 1 dx [orig:133 D.25258 ] [133])
        (sign_extend:DI (reg:SI 0 ax [569]))) ge2fitman_com_line.cpp:90 142 {*extendsidi2_rex64}
     (nil))
(insn 254 253 255 4 (set (reg:DI 0 ax [570])
        (reg:DI 1 dx [orig:133 D.25258 ] [133])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 255 254 256 4 (parallel [
            (set (reg:DI 0 ax [570])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 512 {*ashldi3_1}
     (nil))
(insn 256 255 257 4 (parallel [
            (set (reg:DI 0 ax [570])
                (plus:DI (reg:DI 0 ax [570])
                    (reg:DI 1 dx [orig:133 D.25258 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:133 D.25258 ] [133])
            (const_int 9 [0x9]))
        (nil)))
(insn 257 256 258 4 (parallel [
            (set (reg:DI 0 ax [570])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 512 {*ashldi3_1}
     (nil))
(insn 258 257 259 4 (parallel [
            (set (reg:DI 0 ax [570])
                (plus:DI (reg:DI 0 ax [570])
                    (reg:DI 1 dx [orig:133 D.25258 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:133 D.25258 ] [133])
            (const_int 19 [0x13]))
        (nil)))
(insn 259 258 260 4 (parallel [
            (set (reg:DI 0 ax [571])
                (ashift:DI (reg:DI 0 ax [570])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 512 {*ashldi3_1}
     (nil))
(insn 260 259 261 4 (set (reg:DI 0 ax [570])
        (reg:DI 0 ax [571])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 261 260 262 4 (set (reg:DI 1 dx [orig:134 D.25258 ] [134])
        (reg:DI 0 ax [570])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 262 261 263 4 (set (reg/f:DI 0 ax [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:90 89 {*movdi_internal}
     (nil))
(insn 263 262 264 4 (parallel [
            (set (reg/f:DI 0 ax [orig:135 D.25259 ] [135])
                (plus:DI (reg/f:DI 0 ax [572])
                    (reg:DI 1 dx [orig:134 D.25258 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:90 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:134 D.25258 ] [134]))
        (nil)))
(insn 264 263 265 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:135 D.25259 ] [135])
                (const_int 60 [0x3c])) [0 _124->ref_file_argument+0 S4 A32])
        (const_int 5 [0x5])) ge2fitman_com_line.cpp:90 90 {*movsi_internal}
     (nil))
(insn 265 264 266 4 (set (reg:SI 0 ax [573])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:91 90 {*movsi_internal}
     (nil))
(insn 266 265 267 4 (set (reg:DI 1 dx [orig:136 D.25258 ] [136])
        (sign_extend:DI (reg:SI 0 ax [573]))) ge2fitman_com_line.cpp:91 142 {*extendsidi2_rex64}
     (nil))
(insn 267 266 268 4 (set (reg:DI 0 ax [574])
        (reg:DI 1 dx [orig:136 D.25258 ] [136])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 268 267 269 4 (parallel [
            (set (reg:DI 0 ax [574])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 512 {*ashldi3_1}
     (nil))
(insn 269 268 270 4 (parallel [
            (set (reg:DI 0 ax [574])
                (plus:DI (reg:DI 0 ax [574])
                    (reg:DI 1 dx [orig:136 D.25258 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:136 D.25258 ] [136])
            (const_int 9 [0x9]))
        (nil)))
(insn 270 269 271 4 (parallel [
            (set (reg:DI 0 ax [574])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 512 {*ashldi3_1}
     (nil))
(insn 271 270 272 4 (parallel [
            (set (reg:DI 0 ax [574])
                (plus:DI (reg:DI 0 ax [574])
                    (reg:DI 1 dx [orig:136 D.25258 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:136 D.25258 ] [136])
            (const_int 19 [0x13]))
        (nil)))
(insn 272 271 273 4 (parallel [
            (set (reg:DI 0 ax [575])
                (ashift:DI (reg:DI 0 ax [574])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 512 {*ashldi3_1}
     (nil))
(insn 273 272 274 4 (set (reg:DI 0 ax [574])
        (reg:DI 0 ax [575])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 274 273 275 4 (set (reg:DI 1 dx [orig:137 D.25258 ] [137])
        (reg:DI 0 ax [574])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 275 274 276 4 (set (reg/f:DI 0 ax [576])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:91 89 {*movdi_internal}
     (nil))
(insn 276 275 277 4 (parallel [
            (set (reg/f:DI 0 ax [orig:138 D.25259 ] [138])
                (plus:DI (reg/f:DI 0 ax [576])
                    (reg:DI 1 dx [orig:137 D.25258 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:91 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:137 D.25258 ] [137]))
        (nil)))
(insn 277 276 278 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:138 D.25259 ] [138])
                (const_int 64 [0x40])) [0 _128->csi_reorder+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:91 90 {*movsi_internal}
     (nil))
(insn 278 277 279 4 (set (reg:SI 0 ax [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:92 90 {*movsi_internal}
     (nil))
(insn 279 278 280 4 (set (reg:DI 1 dx [orig:139 D.25258 ] [139])
        (sign_extend:DI (reg:SI 0 ax [577]))) ge2fitman_com_line.cpp:92 142 {*extendsidi2_rex64}
     (nil))
(insn 280 279 281 4 (set (reg:DI 0 ax [578])
        (reg:DI 1 dx [orig:139 D.25258 ] [139])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 281 280 282 4 (parallel [
            (set (reg:DI 0 ax [578])
                (ashift:DI (reg:DI 0 ax [578])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 512 {*ashldi3_1}
     (nil))
(insn 282 281 283 4 (parallel [
            (set (reg:DI 0 ax [578])
                (plus:DI (reg:DI 0 ax [578])
                    (reg:DI 1 dx [orig:139 D.25258 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:139 D.25258 ] [139])
            (const_int 9 [0x9]))
        (nil)))
(insn 283 282 284 4 (parallel [
            (set (reg:DI 0 ax [578])
                (ashift:DI (reg:DI 0 ax [578])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 512 {*ashldi3_1}
     (nil))
(insn 284 283 285 4 (parallel [
            (set (reg:DI 0 ax [578])
                (plus:DI (reg:DI 0 ax [578])
                    (reg:DI 1 dx [orig:139 D.25258 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:139 D.25258 ] [139])
            (const_int 19 [0x13]))
        (nil)))
(insn 285 284 286 4 (parallel [
            (set (reg:DI 0 ax [579])
                (ashift:DI (reg:DI 0 ax [578])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 512 {*ashldi3_1}
     (nil))
(insn 286 285 287 4 (set (reg:DI 0 ax [578])
        (reg:DI 0 ax [579])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 287 286 288 4 (set (reg:DI 1 dx [orig:140 D.25258 ] [140])
        (reg:DI 0 ax [578])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 288 287 289 4 (set (reg/f:DI 0 ax [580])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:92 89 {*movdi_internal}
     (nil))
(insn 289 288 290 4 (parallel [
            (set (reg/f:DI 0 ax [orig:141 D.25259 ] [141])
                (plus:DI (reg/f:DI 0 ax [580])
                    (reg:DI 1 dx [orig:140 D.25258 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:92 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:140 D.25258 ] [140]))
        (nil)))
(insn 290 289 291 4 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:141 D.25259 ] [141])
                (const_int 68 [0x44])) [0 _132->tilt+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:92 90 {*movsi_internal}
     (nil))
(insn 291 290 292 4 (set (reg:SI 0 ax [581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])) ge2fitman_com_line.cpp:93 90 {*movsi_internal}
     (nil))
(insn 292 291 293 4 (set (reg:DI 1 dx [orig:142 D.25258 ] [142])
        (sign_extend:DI (reg:SI 0 ax [581]))) ge2fitman_com_line.cpp:93 142 {*extendsidi2_rex64}
     (nil))
(insn 293 292 294 4 (set (reg:DI 0 ax [582])
        (reg:DI 1 dx [orig:142 D.25258 ] [142])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 294 293 295 4 (parallel [
            (set (reg:DI 0 ax [582])
                (ashift:DI (reg:DI 0 ax [582])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 512 {*ashldi3_1}
     (nil))
(insn 295 294 296 4 (parallel [
            (set (reg:DI 0 ax [582])
                (plus:DI (reg:DI 0 ax [582])
                    (reg:DI 1 dx [orig:142 D.25258 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:142 D.25258 ] [142])
            (const_int 9 [0x9]))
        (nil)))
(insn 296 295 297 4 (parallel [
            (set (reg:DI 0 ax [582])
                (ashift:DI (reg:DI 0 ax [582])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 512 {*ashldi3_1}
     (nil))
(insn 297 296 298 4 (parallel [
            (set (reg:DI 0 ax [582])
                (plus:DI (reg:DI 0 ax [582])
                    (reg:DI 1 dx [orig:142 D.25258 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:142 D.25258 ] [142])
            (const_int 19 [0x13]))
        (nil)))
(insn 298 297 299 4 (parallel [
            (set (reg:DI 0 ax [583])
                (ashift:DI (reg:DI 0 ax [582])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 512 {*ashldi3_1}
     (nil))
(insn 299 298 300 4 (set (reg:DI 0 ax [582])
        (reg:DI 0 ax [583])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 300 299 301 4 (set (reg:DI 1 dx [orig:143 D.25258 ] [143])
        (reg:DI 0 ax [582])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 301 300 302 4 (set (reg/f:DI 0 ax [584])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:93 89 {*movdi_internal}
     (nil))
(insn 302 301 303 4 (parallel [
            (set (reg/f:DI 0 ax [orig:144 D.25259 ] [144])
                (plus:DI (reg/f:DI 0 ax [584])
                    (reg:DI 1 dx [orig:143 D.25258 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:93 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:143 D.25258 ] [143]))
        (nil)))
(insn 303 302 304 4 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [orig:144 D.25259 ] [144])
                (const_int 72 [0x48])) [0 _136->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:93 93 {*movqi_internal}
     (nil))
(insn 304 303 1826 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -824 [0xfffffffffffffcc8])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:74 217 {*addsi_1}
     (nil))
(jump_insn 1826 304 1827 4 (set (pc)
        (label_ref 305)) ge2fitman_com_line.cpp:74 654 {jump}
     (nil)
 -> 305)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1827 1826 308)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 585
(code_label 308 1827 309 5 2 "" [1 uses])
(note 309 308 310 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:97 90 {*movsi_internal}
     (nil))
(insn 311 310 312 5 (set (reg/f:DI 0 ax [585])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:98 89 {*movdi_internal}
     (nil))
(insn 312 311 1454 5 (set (mem:SI (reg/f:DI 0 ax [585]) [0 *fid_140(D)+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:98 90 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              108 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 586
(code_label 1454 312 313 6 59 "" [1 uses])
(note 313 1454 314 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 6 (set (reg:SI 0 ax [586])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:100 90 {*movsi_internal}
     (nil))
(insn 315 314 316 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [586])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -876 [0xfffffffffffffc94])) [0 argc+0 S4 A32]))) ge2fitman_com_line.cpp:100 7 {*cmpsi_1}
     (nil))
(jump_insn 316 315 317 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1457)
            (pc))) ge2fitman_com_line.cpp:100 612 {*jcc_1}
     (nil)
 -> 1457)
;;  succ:       109
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 146 147 148 149 587 588
(note 317 316 318 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 7 (set (reg:SI 0 ax [587])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:101 90 {*movsi_internal}
     (nil))
(insn 319 318 320 7 (set (reg:DI 0 ax [orig:145 D.25258 ] [145])
        (sign_extend:DI (reg:SI 0 ax [587]))) ge2fitman_com_line.cpp:101 142 {*extendsidi2_rex64}
     (nil))
(insn 320 319 321 7 (parallel [
            (set (reg:DI 1 dx [orig:146 D.25258 ] [146])
                (ashift:DI (reg:DI 0 ax [orig:145 D.25258 ] [145])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:101 512 {*ashldi3_1}
     (nil))
(insn 321 320 322 7 (set (reg/f:DI 0 ax [588])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:101 89 {*movdi_internal}
     (nil))
(insn 322 321 323 7 (parallel [
            (set (reg/f:DI 0 ax [orig:147 D.25260 ] [147])
                (plus:DI (reg/f:DI 0 ax [588])
                    (reg:DI 1 dx [orig:146 D.25258 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:101 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:146 D.25258 ] [146]))
        (nil)))
(insn 323 322 324 7 (set (reg/f:DI 0 ax [orig:148 D.25261 ] [148])
        (mem/f:DI (reg/f:DI 0 ax [orig:147 D.25260 ] [147]) [0 *_146+0 S8 A64])) ge2fitman_com_line.cpp:101 89 {*movdi_internal}
     (nil))
(insn 324 323 325 7 (set (reg:QI 0 ax [orig:149 D.25262 ] [149])
        (mem:QI (reg/f:DI 0 ax [orig:148 D.25261 ] [148]) [0 *_147+0 S1 A8])) ge2fitman_com_line.cpp:101 93 {*movqi_internal}
     (nil))
(insn 325 324 326 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:149 D.25262 ] [149])
            (const_int 45 [0x2d]))) ge2fitman_com_line.cpp:101 5 {*cmpqi_1}
     (nil))
(jump_insn 326 325 327 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 353)
            (pc))) ge2fitman_com_line.cpp:101 612 {*jcc_1}
     (nil)
 -> 353)
;;  succ:       8 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 327 326 328 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:104 7 {*cmpsi_1}
     (nil))
(jump_insn 329 328 330 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) ge2fitman_com_line.cpp:104 612 {*jcc_1}
     (nil)
 -> 334)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 330 329 331 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 1828 9 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -5 [0xfffffffffffffffb])) ge2fitman_com_line.cpp:106 90 {*movsi_internal}
     (nil))
(jump_insn 1828 331 1829 9 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:106 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1829 1828 334)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 447 448 449 450 451 589 590 591 592 593 594
(code_label 334 1829 335 10 6 "" [1 uses])
(note 335 334 336 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 10 (set (reg:SI 0 ax [589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:109 90 {*movsi_internal}
     (nil))
(insn 337 336 338 10 (set (reg:DI 0 ax [orig:447 D.25258 ] [447])
        (sign_extend:DI (reg:SI 0 ax [589]))) ge2fitman_com_line.cpp:109 142 {*extendsidi2_rex64}
     (nil))
(insn 338 337 339 10 (parallel [
            (set (reg:DI 1 dx [orig:448 D.25258 ] [448])
                (ashift:DI (reg:DI 0 ax [orig:447 D.25258 ] [447])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 512 {*ashldi3_1}
     (nil))
(insn 339 338 340 10 (set (reg/f:DI 0 ax [590])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 340 339 341 10 (parallel [
            (set (reg/f:DI 0 ax [orig:449 D.25260 ] [449])
                (plus:DI (reg/f:DI 0 ax [590])
                    (reg:DI 1 dx [orig:448 D.25258 ] [448])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:448 D.25258 ] [448]))
        (nil)))
(insn 341 340 342 10 (set (reg/f:DI 0 ax [orig:450 D.25261 ] [450])
        (mem/f:DI (reg/f:DI 0 ax [orig:449 D.25260 ] [449]) [0 *_561+0 S8 A64])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 342 341 343 10 (parallel [
            (set (reg:DI 1 dx [591])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 218 {*adddi_1}
     (nil))
(insn 343 342 344 10 (set (reg:SI 2 cx [593])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])) ge2fitman_com_line.cpp:109 90 {*movsi_internal}
     (nil))
(insn 344 343 345 10 (set (reg:DI 2 cx [592])
        (sign_extend:DI (reg:SI 2 cx [593]))) ge2fitman_com_line.cpp:109 142 {*extendsidi2_rex64}
     (nil))
(insn 345 344 346 10 (parallel [
            (set (reg:DI 2 cx [594])
                (ashift:DI (reg:DI 2 cx [592])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 512 {*ashldi3_1}
     (nil))
(insn 346 345 347 10 (parallel [
            (set (reg/f:DI 1 dx [orig:451 D.25265 ] [451])
                (plus:DI (reg:DI 1 dx [591])
                    (reg:DI 2 cx [594])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:109 218 {*adddi_1}
     (nil))
(insn 347 346 348 10 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:450 D.25261 ] [450])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(insn 348 347 349 10 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:451 D.25265 ] [451])) ge2fitman_com_line.cpp:109 89 {*movdi_internal}
     (nil))
(call_insn 349 348 350 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:109 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 350 349 1830 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:110 217 {*addsi_1}
     (nil))
(jump_insn 1830 350 1831 10 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1831 1830 353)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 150 151 152 153 154 595 596
(code_label 353 1831 354 11 5 "" [1 uses])
(note 354 353 355 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 11 (set (reg:SI 0 ax [595])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:115 90 {*movsi_internal}
     (nil))
(insn 356 355 357 11 (set (reg:DI 0 ax [orig:150 D.25258 ] [150])
        (sign_extend:DI (reg:SI 0 ax [595]))) ge2fitman_com_line.cpp:115 142 {*extendsidi2_rex64}
     (nil))
(insn 357 356 358 11 (parallel [
            (set (reg:DI 1 dx [orig:151 D.25258 ] [151])
                (ashift:DI (reg:DI 0 ax [orig:150 D.25258 ] [150])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:115 512 {*ashldi3_1}
     (nil))
(insn 358 357 359 11 (set (reg/f:DI 0 ax [596])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 359 358 360 11 (parallel [
            (set (reg/f:DI 0 ax [orig:152 D.25260 ] [152])
                (plus:DI (reg/f:DI 0 ax [596])
                    (reg:DI 1 dx [orig:151 D.25258 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:115 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:151 D.25258 ] [151]))
        (nil)))
(insn 360 359 361 11 (set (reg/f:DI 0 ax [orig:153 D.25261 ] [153])
        (mem/f:DI (reg/f:DI 0 ax [orig:152 D.25260 ] [152]) [0 *_151+0 S8 A64])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 361 360 362 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6be97f0480 *.LC2>)) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(insn 362 361 363 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:153 D.25261 ] [153])) ge2fitman_com_line.cpp:115 89 {*movdi_internal}
     (nil))
(call_insn/i 363 362 364 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 364 363 365 11 (set (reg:SI 0 ax [orig:154 D.25257 ] [154])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:115 90 {*movsi_internal}
     (nil))
(insn 365 364 366 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:154 D.25257 ] [154])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 366 365 367 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 393)
            (pc))) ge2fitman_com_line.cpp:115 612 {*jcc_1}
     (nil)
 -> 393)
;;  succ:       14
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 155 156 157 158 159 597 598
(note 367 366 368 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 12 (set (reg:SI 0 ax [597])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:116 90 {*movsi_internal}
     (nil))
(insn 369 368 370 12 (set (reg:DI 0 ax [orig:155 D.25258 ] [155])
        (sign_extend:DI (reg:SI 0 ax [597]))) ge2fitman_com_line.cpp:116 142 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 12 (parallel [
            (set (reg:DI 1 dx [orig:156 D.25258 ] [156])
                (ashift:DI (reg:DI 0 ax [orig:155 D.25258 ] [155])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:116 512 {*ashldi3_1}
     (nil))
(insn 371 370 372 12 (set (reg/f:DI 0 ax [598])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 372 371 373 12 (parallel [
            (set (reg/f:DI 0 ax [orig:157 D.25260 ] [157])
                (plus:DI (reg/f:DI 0 ax [598])
                    (reg:DI 1 dx [orig:156 D.25258 ] [156])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:116 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:156 D.25258 ] [156]))
        (nil)))
(insn 373 372 374 12 (set (reg/f:DI 0 ax [orig:158 D.25261 ] [158])
        (mem/f:DI (reg/f:DI 0 ax [orig:157 D.25260 ] [157]) [0 *_156+0 S8 A64])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 374 373 375 12 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6be97f0510 *.LC3>)) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(insn 375 374 376 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:158 D.25261 ] [158])) ge2fitman_com_line.cpp:116 89 {*movdi_internal}
     (nil))
(call_insn/i 376 375 377 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:116 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 377 376 378 12 (set (reg:SI 0 ax [orig:159 D.25257 ] [159])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:116 90 {*movsi_internal}
     (nil))
(insn 378 377 379 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:159 D.25257 ] [159])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:115 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 379 378 380 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 393)
            (pc))) ge2fitman_com_line.cpp:115 612 {*jcc_1}
     (nil)
 -> 393)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 160 161 162 163 164 599 600
(note 380 379 381 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 13 (set (reg:SI 0 ax [599])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:117 90 {*movsi_internal}
     (nil))
(insn 382 381 383 13 (set (reg:DI 0 ax [orig:160 D.25258 ] [160])
        (sign_extend:DI (reg:SI 0 ax [599]))) ge2fitman_com_line.cpp:117 142 {*extendsidi2_rex64}
     (nil))
(insn 383 382 384 13 (parallel [
            (set (reg:DI 1 dx [orig:161 D.25258 ] [161])
                (ashift:DI (reg:DI 0 ax [orig:160 D.25258 ] [160])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:117 512 {*ashldi3_1}
     (nil))
(insn 384 383 385 13 (set (reg/f:DI 0 ax [600])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 385 384 386 13 (parallel [
            (set (reg/f:DI 0 ax [orig:162 D.25260 ] [162])
                (plus:DI (reg/f:DI 0 ax [600])
                    (reg:DI 1 dx [orig:161 D.25258 ] [161])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:117 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:161 D.25258 ] [161]))
        (nil)))
(insn 386 385 387 13 (set (reg/f:DI 0 ax [orig:163 D.25261 ] [163])
        (mem/f:DI (reg/f:DI 0 ax [orig:162 D.25260 ] [162]) [0 *_161+0 S8 A64])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 387 386 388 13 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f6be97f05a0 *.LC4>)) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(insn 388 387 389 13 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:163 D.25261 ] [163])) ge2fitman_com_line.cpp:117 89 {*movdi_internal}
     (nil))
(call_insn/i 389 388 390 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:117 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 390 389 391 13 (set (reg:SI 0 ax [orig:164 D.25257 ] [164])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:117 90 {*movsi_internal}
     (nil))
(insn 391 390 392 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:164 D.25257 ] [164])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:116 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 392 391 393 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 742)
            (pc))) ge2fitman_com_line.cpp:116 612 {*jcc_1}
     (nil)
 -> 742)
;;  succ:       14 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;;              12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 337 601
(code_label 393 392 394 14 9 "" [2 uses])
(note 394 393 395 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 14 (set (reg/f:DI 0 ax [601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:119 89 {*movdi_internal}
     (nil))
(insn 396 395 397 14 (set (reg:QI 0 ax [orig:337 D.25263 ] [337])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [601])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:119 93 {*movqi_internal}
     (nil))
(insn 397 396 398 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:337 D.25263 ] [337])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:119 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 398 397 399 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) ge2fitman_com_line.cpp:119 612 {*jcc_1}
     (nil)
 -> 403)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 399 398 400 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 1832 15 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -7 [0xfffffffffffffff9])) ge2fitman_com_line.cpp:121 90 {*movsi_internal}
     (nil))
(jump_insn 1832 400 1833 15 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:121 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1833 1832 403)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 338 339 340 341 342 602 603 604
(code_label 403 1833 404 16 11 "" [1 uses])
(note 404 403 405 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 16 (set (reg/f:DI 0 ax [602])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:124 89 {*movdi_internal}
     (nil))
(insn 406 405 407 16 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [602])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:124 93 {*movqi_internal}
     (nil))
(insn 407 406 408 16 (set (reg:SI 0 ax [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:126 90 {*movsi_internal}
     (nil))
(insn 408 407 409 16 (set (reg:DI 0 ax [orig:338 D.25258 ] [338])
        (sign_extend:DI (reg:SI 0 ax [603]))) ge2fitman_com_line.cpp:126 142 {*extendsidi2_rex64}
     (nil))
(insn 409 408 410 16 (parallel [
            (set (reg:DI 1 dx [orig:339 D.25258 ] [339])
                (ashift:DI (reg:DI 0 ax [orig:338 D.25258 ] [338])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:126 512 {*ashldi3_1}
     (nil))
(insn 410 409 411 16 (set (reg/f:DI 0 ax [604])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 411 410 412 16 (parallel [
            (set (reg/f:DI 0 ax [orig:340 D.25260 ] [340])
                (plus:DI (reg/f:DI 0 ax [604])
                    (reg:DI 1 dx [orig:339 D.25258 ] [339])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:126 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:339 D.25258 ] [339]))
        (nil)))
(insn 412 411 413 16 (set (reg/f:DI 0 ax [orig:341 D.25261 ] [341])
        (mem/f:DI (reg/f:DI 0 ax [orig:340 D.25260 ] [340]) [0 *_423+0 S8 A64])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 413 412 414 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f6be97f0480 *.LC2>)) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(insn 414 413 415 16 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:341 D.25261 ] [341])) ge2fitman_com_line.cpp:126 89 {*movdi_internal}
     (nil))
(call_insn/i 415 414 416 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:126 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 416 415 417 16 (set (reg:SI 0 ax [orig:342 D.25257 ] [342])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:126 90 {*movsi_internal}
     (nil))
(insn 417 416 418 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:342 D.25257 ] [342])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:126 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 418 417 419 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 450)
            (pc))) ge2fitman_com_line.cpp:126 612 {*jcc_1}
     (nil)
 -> 450)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 343 344 345 346 347 348 349 350 605 606 607 608 609 610 611 612 613
(note 419 418 420 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 17 (set (reg/f:DI 0 ax [605])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 421 420 422 17 (set (reg:SI 0 ax [orig:343 D.25257 ] [343])
        (mem:SI (reg/f:DI 0 ax [605]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:127 90 {*movsi_internal}
     (nil))
(insn 422 421 423 17 (set (reg:DI 1 dx [orig:344 D.25258 ] [344])
        (sign_extend:DI (reg:SI 0 ax [orig:343 D.25257 ] [343]))) ge2fitman_com_line.cpp:127 142 {*extendsidi2_rex64}
     (nil))
(insn 423 422 424 17 (set (reg:DI 0 ax [606])
        (reg:DI 1 dx [orig:344 D.25258 ] [344])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 424 423 425 17 (parallel [
            (set (reg:DI 0 ax [606])
                (ashift:DI (reg:DI 0 ax [606])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 512 {*ashldi3_1}
     (nil))
(insn 425 424 426 17 (parallel [
            (set (reg:DI 0 ax [606])
                (plus:DI (reg:DI 0 ax [606])
                    (reg:DI 1 dx [orig:344 D.25258 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:344 D.25258 ] [344])
            (const_int 9 [0x9]))
        (nil)))
(insn 426 425 427 17 (parallel [
            (set (reg:DI 0 ax [606])
                (ashift:DI (reg:DI 0 ax [606])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 512 {*ashldi3_1}
     (nil))
(insn 427 426 428 17 (parallel [
            (set (reg:DI 0 ax [606])
                (plus:DI (reg:DI 0 ax [606])
                    (reg:DI 1 dx [orig:344 D.25258 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:344 D.25258 ] [344])
            (const_int 19 [0x13]))
        (nil)))
(insn 428 427 429 17 (parallel [
            (set (reg:DI 0 ax [607])
                (ashift:DI (reg:DI 0 ax [606])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 512 {*ashldi3_1}
     (nil))
(insn 429 428 430 17 (set (reg:DI 0 ax [606])
        (reg:DI 0 ax [607])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 430 429 431 17 (set (reg:DI 1 dx [orig:345 D.25258 ] [345])
        (reg:DI 0 ax [606])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 431 430 432 17 (set (reg/f:DI 0 ax [608])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:127 89 {*movdi_internal}
     (nil))
(insn 432 431 433 17 (parallel [
            (set (reg/f:DI 0 ax [orig:346 D.25259 ] [346])
                (plus:DI (reg/f:DI 0 ax [608])
                    (reg:DI 1 dx [orig:345 D.25258 ] [345])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:127 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:345 D.25258 ] [345]))
        (nil)))
(insn 433 432 434 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:346 D.25259 ] [346])
                (const_int 12 [0xc])) [0 _429->pre_ecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:127 90 {*movsi_internal}
     (nil))
(insn 434 433 435 17 (set (reg/f:DI 0 ax [609])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:128 89 {*movdi_internal}
     (nil))
(insn 435 434 436 17 (set (mem:SI (reg/f:DI 0 ax [609]) [0 *fid_140(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:128 90 {*movsi_internal}
     (nil))
(insn 436 435 437 17 (set (reg/f:DI 0 ax [610])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 437 436 438 17 (set (reg:SI 0 ax [orig:347 D.25257 ] [347])
        (mem:SI (reg/f:DI 0 ax [610]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:129 90 {*movsi_internal}
     (nil))
(insn 438 437 439 17 (set (reg:DI 1 dx [orig:348 D.25258 ] [348])
        (sign_extend:DI (reg:SI 0 ax [orig:347 D.25257 ] [347]))) ge2fitman_com_line.cpp:129 142 {*extendsidi2_rex64}
     (nil))
(insn 439 438 440 17 (set (reg:DI 0 ax [611])
        (reg:DI 1 dx [orig:348 D.25258 ] [348])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 440 439 441 17 (parallel [
            (set (reg:DI 0 ax [611])
                (ashift:DI (reg:DI 0 ax [611])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 512 {*ashldi3_1}
     (nil))
(insn 441 440 442 17 (parallel [
            (set (reg:DI 0 ax [611])
                (plus:DI (reg:DI 0 ax [611])
                    (reg:DI 1 dx [orig:348 D.25258 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:348 D.25258 ] [348])
            (const_int 9 [0x9]))
        (nil)))
(insn 442 441 443 17 (parallel [
            (set (reg:DI 0 ax [611])
                (ashift:DI (reg:DI 0 ax [611])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 512 {*ashldi3_1}
     (nil))
(insn 443 442 444 17 (parallel [
            (set (reg:DI 0 ax [611])
                (plus:DI (reg:DI 0 ax [611])
                    (reg:DI 1 dx [orig:348 D.25258 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:348 D.25258 ] [348])
            (const_int 19 [0x13]))
        (nil)))
(insn 444 443 445 17 (parallel [
            (set (reg:DI 0 ax [612])
                (ashift:DI (reg:DI 0 ax [611])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 512 {*ashldi3_1}
     (nil))
(insn 445 444 446 17 (set (reg:DI 0 ax [611])
        (reg:DI 0 ax [612])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 446 445 447 17 (set (reg:DI 1 dx [orig:349 D.25258 ] [349])
        (reg:DI 0 ax [611])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 447 446 448 17 (set (reg/f:DI 0 ax [613])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:129 89 {*movdi_internal}
     (nil))
(insn 448 447 449 17 (parallel [
            (set (reg/f:DI 0 ax [orig:350 D.25259 ] [350])
                (plus:DI (reg/f:DI 0 ax [613])
                    (reg:DI 1 dx [orig:349 D.25258 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:129 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:349 D.25258 ] [349]))
        (nil)))
(insn 449 448 450 17 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:350 D.25259 ] [350])
                (const_int 12 [0xc])) [0 _435->pre_ecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:129 90 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 351 352 353 354 355 614 615
(code_label 450 449 451 18 12 "" [1 uses])
(note 451 450 452 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 18 (set (reg:SI 0 ax [614])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:132 90 {*movsi_internal}
     (nil))
(insn 453 452 454 18 (set (reg:DI 0 ax [orig:351 D.25258 ] [351])
        (sign_extend:DI (reg:SI 0 ax [614]))) ge2fitman_com_line.cpp:132 142 {*extendsidi2_rex64}
     (nil))
(insn 454 453 455 18 (parallel [
            (set (reg:DI 1 dx [orig:352 D.25258 ] [352])
                (ashift:DI (reg:DI 0 ax [orig:351 D.25258 ] [351])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:132 512 {*ashldi3_1}
     (nil))
(insn 455 454 456 18 (set (reg/f:DI 0 ax [615])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 456 455 457 18 (parallel [
            (set (reg/f:DI 0 ax [orig:353 D.25260 ] [353])
                (plus:DI (reg/f:DI 0 ax [615])
                    (reg:DI 1 dx [orig:352 D.25258 ] [352])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:132 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:352 D.25258 ] [352]))
        (nil)))
(insn 457 456 458 18 (set (reg/f:DI 0 ax [orig:354 D.25261 ] [354])
        (mem/f:DI (reg/f:DI 0 ax [orig:353 D.25260 ] [353]) [0 *_439+0 S8 A64])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 458 457 459 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f6be97f0510 *.LC3>)) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(insn 459 458 460 18 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:354 D.25261 ] [354])) ge2fitman_com_line.cpp:132 89 {*movdi_internal}
     (nil))
(call_insn/i 460 459 461 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:132 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 461 460 462 18 (set (reg:SI 0 ax [orig:355 D.25257 ] [355])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:132 90 {*movsi_internal}
     (nil))
(insn 462 461 463 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:355 D.25257 ] [355])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:132 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 463 462 464 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 563)
            (pc))) ge2fitman_com_line.cpp:132 612 {*jcc_1}
     (nil)
 -> 563)
;;  succ:       19 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 356 357 358 359 360 361 362 363 364 616 617 618 619 620 621
(note 464 463 465 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 19 (set (reg/f:DI 0 ax [616])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 466 465 467 19 (set (reg:SI 0 ax [orig:356 D.25257 ] [356])
        (mem:SI (reg/f:DI 0 ax [616]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:133 90 {*movsi_internal}
     (nil))
(insn 467 466 468 19 (set (reg:DI 1 dx [orig:357 D.25258 ] [357])
        (sign_extend:DI (reg:SI 0 ax [orig:356 D.25257 ] [356]))) ge2fitman_com_line.cpp:133 142 {*extendsidi2_rex64}
     (nil))
(insn 468 467 469 19 (set (reg:DI 0 ax [617])
        (reg:DI 1 dx [orig:357 D.25258 ] [357])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 469 468 470 19 (parallel [
            (set (reg:DI 0 ax [617])
                (ashift:DI (reg:DI 0 ax [617])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 512 {*ashldi3_1}
     (nil))
(insn 470 469 471 19 (parallel [
            (set (reg:DI 0 ax [617])
                (plus:DI (reg:DI 0 ax [617])
                    (reg:DI 1 dx [orig:357 D.25258 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:357 D.25258 ] [357])
            (const_int 9 [0x9]))
        (nil)))
(insn 471 470 472 19 (parallel [
            (set (reg:DI 0 ax [617])
                (ashift:DI (reg:DI 0 ax [617])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 512 {*ashldi3_1}
     (nil))
(insn 472 471 473 19 (parallel [
            (set (reg:DI 0 ax [617])
                (plus:DI (reg:DI 0 ax [617])
                    (reg:DI 1 dx [orig:357 D.25258 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:357 D.25258 ] [357])
            (const_int 19 [0x13]))
        (nil)))
(insn 473 472 474 19 (parallel [
            (set (reg:DI 0 ax [618])
                (ashift:DI (reg:DI 0 ax [617])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 512 {*ashldi3_1}
     (nil))
(insn 474 473 475 19 (set (reg:DI 0 ax [617])
        (reg:DI 0 ax [618])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 475 474 476 19 (set (reg:DI 1 dx [orig:358 D.25258 ] [358])
        (reg:DI 0 ax [617])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 476 475 477 19 (set (reg/f:DI 0 ax [619])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:133 89 {*movdi_internal}
     (nil))
(insn 477 476 478 19 (parallel [
            (set (reg/f:DI 0 ax [orig:359 D.25259 ] [359])
                (plus:DI (reg/f:DI 0 ax [619])
                    (reg:DI 1 dx [orig:358 D.25258 ] [358])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:133 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:358 D.25258 ] [358]))
        (nil)))
(insn 478 477 479 19 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:359 D.25259 ] [359])
                (const_int 36 [0x24])) [0 _445->pre_quality+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:133 90 {*movsi_internal}
     (nil))
(insn 479 478 480 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:134 217 {*addsi_1}
     (nil))
(insn 480 479 481 19 (set (reg:SI 0 ax [620])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:135 90 {*movsi_internal}
     (nil))
(insn 481 480 482 19 (set (reg:DI 0 ax [orig:360 D.25258 ] [360])
        (sign_extend:DI (reg:SI 0 ax [620]))) ge2fitman_com_line.cpp:135 142 {*extendsidi2_rex64}
     (nil))
(insn 482 481 483 19 (parallel [
            (set (reg:DI 1 dx [orig:361 D.25258 ] [361])
                (ashift:DI (reg:DI 0 ax [orig:360 D.25258 ] [360])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:135 512 {*ashldi3_1}
     (nil))
(insn 483 482 484 19 (set (reg/f:DI 0 ax [621])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(insn 484 483 485 19 (parallel [
            (set (reg/f:DI 0 ax [orig:362 D.25260 ] [362])
                (plus:DI (reg/f:DI 0 ax [621])
                    (reg:DI 1 dx [orig:361 D.25258 ] [361])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:135 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:361 D.25258 ] [361]))
        (nil)))
(insn 485 484 486 19 (set (reg/f:DI 0 ax [orig:363 D.25261 ] [363])
        (mem/f:DI (reg/f:DI 0 ax [orig:362 D.25260 ] [362]) [0 *_450+0 S8 A64])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(insn 486 485 487 19 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:363 D.25261 ] [363])) ge2fitman_com_line.cpp:135 89 {*movdi_internal}
     (nil))
(call_insn 487 486 488 19 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:135 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 488 487 489 19 (set (reg:QI 0 ax [orig:364 D.25263 ] [364])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:135 93 {*movqi_internal}
     (nil))
(insn 489 488 490 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:364 D.25263 ] [364])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:135 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 490 489 491 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 558)
            (pc))) ge2fitman_com_line.cpp:135 612 {*jcc_1}
     (nil)
 -> 558)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638
(note 491 490 492 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 20 (set (reg/f:DI 0 ax [622])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 493 492 494 20 (set (reg:SI 0 ax [orig:365 D.25257 ] [365])
        (mem:SI (reg/f:DI 0 ax [622]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:136 90 {*movsi_internal}
     (nil))
(insn 494 493 495 20 (set (reg:DI 1 dx [orig:366 D.25258 ] [366])
        (sign_extend:DI (reg:SI 0 ax [orig:365 D.25257 ] [365]))) ge2fitman_com_line.cpp:136 142 {*extendsidi2_rex64}
     (nil))
(insn 495 494 496 20 (set (reg:DI 0 ax [623])
        (reg:DI 1 dx [orig:366 D.25258 ] [366])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 496 495 497 20 (parallel [
            (set (reg:DI 0 ax [623])
                (ashift:DI (reg:DI 0 ax [623])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 512 {*ashldi3_1}
     (nil))
(insn 497 496 498 20 (parallel [
            (set (reg:DI 0 ax [623])
                (plus:DI (reg:DI 0 ax [623])
                    (reg:DI 1 dx [orig:366 D.25258 ] [366])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:366 D.25258 ] [366])
            (const_int 9 [0x9]))
        (nil)))
(insn 498 497 499 20 (parallel [
            (set (reg:DI 0 ax [623])
                (ashift:DI (reg:DI 0 ax [623])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 512 {*ashldi3_1}
     (nil))
(insn 499 498 500 20 (parallel [
            (set (reg:DI 0 ax [623])
                (plus:DI (reg:DI 0 ax [623])
                    (reg:DI 1 dx [orig:366 D.25258 ] [366])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:366 D.25258 ] [366])
            (const_int 19 [0x13]))
        (nil)))
(insn 500 499 501 20 (parallel [
            (set (reg:DI 0 ax [624])
                (ashift:DI (reg:DI 0 ax [623])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 512 {*ashldi3_1}
     (nil))
(insn 501 500 502 20 (set (reg:DI 0 ax [623])
        (reg:DI 0 ax [624])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 502 501 503 20 (set (reg:DI 1 dx [orig:367 D.25258 ] [367])
        (reg:DI 0 ax [623])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 503 502 504 20 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 504 503 505 20 (parallel [
            (set (reg/f:DI 3 bx [orig:368 D.25259 ] [368])
                (plus:DI (reg:DI 1 dx [orig:367 D.25258 ] [367])
                    (reg/f:DI 0 ax [625])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:367 D.25258 ] [367]))
        (nil)))
(insn 505 504 506 20 (set (reg:SI 0 ax [626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:136 90 {*movsi_internal}
     (nil))
(insn 506 505 507 20 (set (reg:DI 0 ax [orig:369 D.25258 ] [369])
        (sign_extend:DI (reg:SI 0 ax [626]))) ge2fitman_com_line.cpp:136 142 {*extendsidi2_rex64}
     (nil))
(insn 507 506 508 20 (parallel [
            (set (reg:DI 1 dx [orig:370 D.25258 ] [370])
                (ashift:DI (reg:DI 0 ax [orig:369 D.25258 ] [369])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 512 {*ashldi3_1}
     (nil))
(insn 508 507 509 20 (set (reg/f:DI 0 ax [627])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 509 508 510 20 (parallel [
            (set (reg/f:DI 0 ax [orig:371 D.25260 ] [371])
                (plus:DI (reg/f:DI 0 ax [627])
                    (reg:DI 1 dx [orig:370 D.25258 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:136 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:370 D.25258 ] [370]))
        (nil)))
(insn 510 509 511 20 (set (reg/f:DI 0 ax [orig:372 D.25261 ] [372])
        (mem/f:DI (reg/f:DI 0 ax [orig:371 D.25260 ] [371]) [0 *_461+0 S8 A64])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(insn 511 510 512 20 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:372 D.25261 ] [372])) ge2fitman_com_line.cpp:136 89 {*movdi_internal}
     (nil))
(call_insn/i 512 511 514 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f6beae88af8 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:136 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 514 512 515 20 (set (reg:SF 21 xmm0 [orig:374 D.25266 ] [374])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:373 D.25268 ] [373]))) ge2fitman_com_line.cpp:136 157 {*truncdfsf_fast_sse}
     (nil))
(insn 515 514 516 20 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:368 D.25259 ] [368])
                (const_int 48 [0x30])) [0 _458->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [orig:374 D.25266 ] [374])) ge2fitman_com_line.cpp:136 129 {*movsf_internal}
     (nil))
(insn 516 515 517 20 (set (reg/f:DI 0 ax [628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:137 89 {*movdi_internal}
     (nil))
(insn 517 516 518 20 (set (mem:SI (reg/f:DI 0 ax [628]) [0 *fid_140(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:137 90 {*movsi_internal}
     (nil))
(insn 518 517 519 20 (set (reg/f:DI 0 ax [629])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 519 518 520 20 (set (reg:SI 0 ax [orig:375 D.25257 ] [375])
        (mem:SI (reg/f:DI 0 ax [629]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:138 90 {*movsi_internal}
     (nil))
(insn 520 519 521 20 (set (reg:DI 1 dx [orig:376 D.25258 ] [376])
        (sign_extend:DI (reg:SI 0 ax [orig:375 D.25257 ] [375]))) ge2fitman_com_line.cpp:138 142 {*extendsidi2_rex64}
     (nil))
(insn 521 520 522 20 (set (reg:DI 0 ax [630])
        (reg:DI 1 dx [orig:376 D.25258 ] [376])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 522 521 523 20 (parallel [
            (set (reg:DI 0 ax [630])
                (ashift:DI (reg:DI 0 ax [630])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 512 {*ashldi3_1}
     (nil))
(insn 523 522 524 20 (parallel [
            (set (reg:DI 0 ax [630])
                (plus:DI (reg:DI 0 ax [630])
                    (reg:DI 1 dx [orig:376 D.25258 ] [376])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:376 D.25258 ] [376])
            (const_int 9 [0x9]))
        (nil)))
(insn 524 523 525 20 (parallel [
            (set (reg:DI 0 ax [630])
                (ashift:DI (reg:DI 0 ax [630])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 512 {*ashldi3_1}
     (nil))
(insn 525 524 526 20 (parallel [
            (set (reg:DI 0 ax [630])
                (plus:DI (reg:DI 0 ax [630])
                    (reg:DI 1 dx [orig:376 D.25258 ] [376])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:376 D.25258 ] [376])
            (const_int 19 [0x13]))
        (nil)))
(insn 526 525 527 20 (parallel [
            (set (reg:DI 0 ax [631])
                (ashift:DI (reg:DI 0 ax [630])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 512 {*ashldi3_1}
     (nil))
(insn 527 526 528 20 (set (reg:DI 0 ax [630])
        (reg:DI 0 ax [631])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 528 527 529 20 (set (reg:DI 1 dx [orig:377 D.25258 ] [377])
        (reg:DI 0 ax [630])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 529 528 530 20 (set (reg/f:DI 0 ax [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 530 529 531 20 (parallel [
            (set (reg/f:DI 3 bx [orig:378 D.25259 ] [378])
                (plus:DI (reg:DI 1 dx [orig:377 D.25258 ] [377])
                    (reg/f:DI 0 ax [632])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:377 D.25258 ] [377]))
        (nil)))
(insn 531 530 532 20 (set (reg:SI 0 ax [633])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:138 90 {*movsi_internal}
     (nil))
(insn 532 531 533 20 (set (reg:DI 0 ax [orig:379 D.25258 ] [379])
        (sign_extend:DI (reg:SI 0 ax [633]))) ge2fitman_com_line.cpp:138 142 {*extendsidi2_rex64}
     (nil))
(insn 533 532 534 20 (parallel [
            (set (reg:DI 1 dx [orig:380 D.25258 ] [380])
                (ashift:DI (reg:DI 0 ax [orig:379 D.25258 ] [379])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 512 {*ashldi3_1}
     (nil))
(insn 534 533 535 20 (set (reg/f:DI 0 ax [634])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 535 534 536 20 (parallel [
            (set (reg/f:DI 0 ax [orig:381 D.25260 ] [381])
                (plus:DI (reg/f:DI 0 ax [634])
                    (reg:DI 1 dx [orig:380 D.25258 ] [380])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:138 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:380 D.25258 ] [380]))
        (nil)))
(insn 536 535 537 20 (set (reg/f:DI 0 ax [orig:382 D.25261 ] [382])
        (mem/f:DI (reg/f:DI 0 ax [orig:381 D.25260 ] [381]) [0 *_473+0 S8 A64])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(insn 537 536 538 20 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:382 D.25261 ] [382])) ge2fitman_com_line.cpp:138 89 {*movdi_internal}
     (nil))
(call_insn/i 538 537 540 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f6beae88af8 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:138 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 540 538 541 20 (set (reg:SF 21 xmm0 [orig:384 D.25266 ] [384])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:383 D.25268 ] [383]))) ge2fitman_com_line.cpp:138 157 {*truncdfsf_fast_sse}
     (nil))
(insn 541 540 542 20 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:378 D.25259 ] [378])
                (const_int 48 [0x30])) [0 _470->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [orig:384 D.25266 ] [384])) ge2fitman_com_line.cpp:138 129 {*movsf_internal}
     (nil))
(insn 542 541 543 20 (set (reg/f:DI 0 ax [635])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 543 542 544 20 (set (reg:SI 0 ax [orig:385 D.25257 ] [385])
        (mem:SI (reg/f:DI 0 ax [635]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:139 90 {*movsi_internal}
     (nil))
(insn 544 543 545 20 (set (reg:DI 1 dx [orig:386 D.25258 ] [386])
        (sign_extend:DI (reg:SI 0 ax [orig:385 D.25257 ] [385]))) ge2fitman_com_line.cpp:139 142 {*extendsidi2_rex64}
     (nil))
(insn 545 544 546 20 (set (reg:DI 0 ax [636])
        (reg:DI 1 dx [orig:386 D.25258 ] [386])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 546 545 547 20 (parallel [
            (set (reg:DI 0 ax [636])
                (ashift:DI (reg:DI 0 ax [636])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 512 {*ashldi3_1}
     (nil))
(insn 547 546 548 20 (parallel [
            (set (reg:DI 0 ax [636])
                (plus:DI (reg:DI 0 ax [636])
                    (reg:DI 1 dx [orig:386 D.25258 ] [386])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:386 D.25258 ] [386])
            (const_int 9 [0x9]))
        (nil)))
(insn 548 547 549 20 (parallel [
            (set (reg:DI 0 ax [636])
                (ashift:DI (reg:DI 0 ax [636])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 512 {*ashldi3_1}
     (nil))
(insn 549 548 550 20 (parallel [
            (set (reg:DI 0 ax [636])
                (plus:DI (reg:DI 0 ax [636])
                    (reg:DI 1 dx [orig:386 D.25258 ] [386])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:386 D.25258 ] [386])
            (const_int 19 [0x13]))
        (nil)))
(insn 550 549 551 20 (parallel [
            (set (reg:DI 0 ax [637])
                (ashift:DI (reg:DI 0 ax [636])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 512 {*ashldi3_1}
     (nil))
(insn 551 550 552 20 (set (reg:DI 0 ax [636])
        (reg:DI 0 ax [637])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 552 551 553 20 (set (reg:DI 1 dx [orig:387 D.25258 ] [387])
        (reg:DI 0 ax [636])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 553 552 554 20 (set (reg/f:DI 0 ax [638])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:139 89 {*movdi_internal}
     (nil))
(insn 554 553 555 20 (parallel [
            (set (reg/f:DI 0 ax [orig:388 D.25259 ] [388])
                (plus:DI (reg/f:DI 0 ax [638])
                    (reg:DI 1 dx [orig:387 D.25258 ] [387])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:139 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:387 D.25258 ] [387]))
        (nil)))
(insn 555 554 1834 20 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:388 D.25259 ] [388])
                (const_int 36 [0x24])) [0 _481->pre_quality+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:139 90 {*movsi_internal}
     (nil))
(jump_insn 1834 555 1835 20 (set (pc)
        (label_ref 563)) 654 {jump}
     (nil)
 -> 563)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1835 1834 558)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 558 1835 559 21 14 "" [1 uses])
(note 559 558 560 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 1836 21 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:141 90 {*movsi_internal}
     (nil))
(jump_insn 1836 560 1837 21 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:141 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1837 1836 563)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 389 390 391 392 393 639 640
(code_label 563 1837 564 22 13 "" [2 uses])
(note 564 563 565 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 22 (set (reg:SI 0 ax [639])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:146 90 {*movsi_internal}
     (nil))
(insn 566 565 567 22 (set (reg:DI 0 ax [orig:389 D.25258 ] [389])
        (sign_extend:DI (reg:SI 0 ax [639]))) ge2fitman_com_line.cpp:146 142 {*extendsidi2_rex64}
     (nil))
(insn 567 566 568 22 (parallel [
            (set (reg:DI 1 dx [orig:390 D.25258 ] [390])
                (ashift:DI (reg:DI 0 ax [orig:389 D.25258 ] [389])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:146 512 {*ashldi3_1}
     (nil))
(insn 568 567 569 22 (set (reg/f:DI 0 ax [640])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 569 568 570 22 (parallel [
            (set (reg/f:DI 0 ax [orig:391 D.25260 ] [391])
                (plus:DI (reg/f:DI 0 ax [640])
                    (reg:DI 1 dx [orig:390 D.25258 ] [390])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:146 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:390 D.25258 ] [390]))
        (nil)))
(insn 570 569 571 22 (set (reg/f:DI 0 ax [orig:392 D.25261 ] [392])
        (mem/f:DI (reg/f:DI 0 ax [orig:391 D.25260 ] [391]) [0 *_486+0 S8 A64])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 571 570 572 22 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f6be97f05a0 *.LC4>)) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(insn 572 571 573 22 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:392 D.25261 ] [392])) ge2fitman_com_line.cpp:146 89 {*movdi_internal}
     (nil))
(call_insn/i 573 572 574 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:146 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 574 573 575 22 (set (reg:SI 0 ax [orig:393 D.25257 ] [393])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:146 90 {*movsi_internal}
     (nil))
(insn 575 574 576 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:393 D.25257 ] [393])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:146 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 576 575 577 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1451)
            (pc))) ge2fitman_com_line.cpp:146 612 {*jcc_1}
     (nil)
 -> 1451)
;;  succ:       23 (FALLTHRU)
;;              108
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 394 395 396 397 398 399 400 401 402 641 642 643 644 645 646
(note 577 576 578 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 578 577 579 23 (set (reg/f:DI 0 ax [641])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 579 578 580 23 (set (reg:SI 0 ax [orig:394 D.25257 ] [394])
        (mem:SI (reg/f:DI 0 ax [641]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:147 90 {*movsi_internal}
     (nil))
(insn 580 579 581 23 (set (reg:DI 1 dx [orig:395 D.25258 ] [395])
        (sign_extend:DI (reg:SI 0 ax [orig:394 D.25257 ] [394]))) ge2fitman_com_line.cpp:147 142 {*extendsidi2_rex64}
     (nil))
(insn 581 580 582 23 (set (reg:DI 0 ax [642])
        (reg:DI 1 dx [orig:395 D.25258 ] [395])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 582 581 583 23 (parallel [
            (set (reg:DI 0 ax [642])
                (ashift:DI (reg:DI 0 ax [642])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 512 {*ashldi3_1}
     (nil))
(insn 583 582 584 23 (parallel [
            (set (reg:DI 0 ax [642])
                (plus:DI (reg:DI 0 ax [642])
                    (reg:DI 1 dx [orig:395 D.25258 ] [395])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:395 D.25258 ] [395])
            (const_int 9 [0x9]))
        (nil)))
(insn 584 583 585 23 (parallel [
            (set (reg:DI 0 ax [642])
                (ashift:DI (reg:DI 0 ax [642])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 512 {*ashldi3_1}
     (nil))
(insn 585 584 586 23 (parallel [
            (set (reg:DI 0 ax [642])
                (plus:DI (reg:DI 0 ax [642])
                    (reg:DI 1 dx [orig:395 D.25258 ] [395])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:395 D.25258 ] [395])
            (const_int 19 [0x13]))
        (nil)))
(insn 586 585 587 23 (parallel [
            (set (reg:DI 0 ax [643])
                (ashift:DI (reg:DI 0 ax [642])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 512 {*ashldi3_1}
     (nil))
(insn 587 586 588 23 (set (reg:DI 0 ax [642])
        (reg:DI 0 ax [643])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 588 587 589 23 (set (reg:DI 1 dx [orig:396 D.25258 ] [396])
        (reg:DI 0 ax [642])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 589 588 590 23 (set (reg/f:DI 0 ax [644])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:147 89 {*movdi_internal}
     (nil))
(insn 590 589 591 23 (parallel [
            (set (reg/f:DI 0 ax [orig:397 D.25259 ] [397])
                (plus:DI (reg/f:DI 0 ax [644])
                    (reg:DI 1 dx [orig:396 D.25258 ] [396])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:147 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:396 D.25258 ] [396]))
        (nil)))
(insn 591 590 592 23 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:397 D.25259 ] [397])
                (const_int 40 [0x28])) [0 _492->pre_quecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:147 90 {*movsi_internal}
     (nil))
(insn 592 591 593 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:148 217 {*addsi_1}
     (nil))
(insn 593 592 594 23 (set (reg:SI 0 ax [645])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:149 90 {*movsi_internal}
     (nil))
(insn 594 593 595 23 (set (reg:DI 0 ax [orig:398 D.25258 ] [398])
        (sign_extend:DI (reg:SI 0 ax [645]))) ge2fitman_com_line.cpp:149 142 {*extendsidi2_rex64}
     (nil))
(insn 595 594 596 23 (parallel [
            (set (reg:DI 1 dx [orig:399 D.25258 ] [399])
                (ashift:DI (reg:DI 0 ax [orig:398 D.25258 ] [398])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:149 512 {*ashldi3_1}
     (nil))
(insn 596 595 597 23 (set (reg/f:DI 0 ax [646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(insn 597 596 598 23 (parallel [
            (set (reg/f:DI 0 ax [orig:400 D.25260 ] [400])
                (plus:DI (reg/f:DI 0 ax [646])
                    (reg:DI 1 dx [orig:399 D.25258 ] [399])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:149 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:399 D.25258 ] [399]))
        (nil)))
(insn 598 597 599 23 (set (reg/f:DI 0 ax [orig:401 D.25261 ] [401])
        (mem/f:DI (reg/f:DI 0 ax [orig:400 D.25260 ] [400]) [0 *_497+0 S8 A64])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(insn 599 598 600 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:401 D.25261 ] [401])) ge2fitman_com_line.cpp:149 89 {*movdi_internal}
     (nil))
(call_insn 600 599 601 23 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:149 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 601 600 602 23 (set (reg:QI 0 ax [orig:402 D.25263 ] [402])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:149 93 {*movqi_internal}
     (nil))
(insn 602 601 603 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:402 D.25263 ] [402])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:149 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 603 602 604 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) ge2fitman_com_line.cpp:149 612 {*jcc_1}
     (nil)
 -> 631)
;;  succ:       24 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 647 648 649 650 651 652 653 654
(note 604 603 605 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 24 (set (reg/f:DI 0 ax [647])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 606 605 607 24 (set (reg:SI 0 ax [orig:403 D.25257 ] [403])
        (mem:SI (reg/f:DI 0 ax [647]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 607 606 608 24 (set (reg:DI 1 dx [orig:404 D.25258 ] [404])
        (sign_extend:DI (reg:SI 0 ax [orig:403 D.25257 ] [403]))) ge2fitman_com_line.cpp:150 142 {*extendsidi2_rex64}
     (nil))
(insn 608 607 609 24 (set (reg:DI 0 ax [648])
        (reg:DI 1 dx [orig:404 D.25258 ] [404])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 609 608 610 24 (parallel [
            (set (reg:DI 0 ax [648])
                (ashift:DI (reg:DI 0 ax [648])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 512 {*ashldi3_1}
     (nil))
(insn 610 609 611 24 (parallel [
            (set (reg:DI 0 ax [648])
                (plus:DI (reg:DI 0 ax [648])
                    (reg:DI 1 dx [orig:404 D.25258 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:404 D.25258 ] [404])
            (const_int 9 [0x9]))
        (nil)))
(insn 611 610 612 24 (parallel [
            (set (reg:DI 0 ax [648])
                (ashift:DI (reg:DI 0 ax [648])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 512 {*ashldi3_1}
     (nil))
(insn 612 611 613 24 (parallel [
            (set (reg:DI 0 ax [648])
                (plus:DI (reg:DI 0 ax [648])
                    (reg:DI 1 dx [orig:404 D.25258 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:404 D.25258 ] [404])
            (const_int 19 [0x13]))
        (nil)))
(insn 613 612 614 24 (parallel [
            (set (reg:DI 0 ax [649])
                (ashift:DI (reg:DI 0 ax [648])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 512 {*ashldi3_1}
     (nil))
(insn 614 613 615 24 (set (reg:DI 0 ax [648])
        (reg:DI 0 ax [649])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 615 614 616 24 (set (reg:DI 1 dx [orig:405 D.25258 ] [405])
        (reg:DI 0 ax [648])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 616 615 617 24 (set (reg/f:DI 0 ax [650])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 617 616 618 24 (parallel [
            (set (reg/f:DI 3 bx [orig:406 D.25259 ] [406])
                (plus:DI (reg:DI 1 dx [orig:405 D.25258 ] [405])
                    (reg/f:DI 0 ax [650])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:405 D.25258 ] [405]))
        (nil)))
(insn 618 617 619 24 (set (reg:SI 0 ax [651])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 619 618 620 24 (set (reg:DI 0 ax [orig:407 D.25258 ] [407])
        (sign_extend:DI (reg:SI 0 ax [651]))) ge2fitman_com_line.cpp:150 142 {*extendsidi2_rex64}
     (nil))
(insn 620 619 621 24 (parallel [
            (set (reg:DI 1 dx [orig:408 D.25258 ] [408])
                (ashift:DI (reg:DI 0 ax [orig:407 D.25258 ] [407])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 512 {*ashldi3_1}
     (nil))
(insn 621 620 622 24 (set (reg/f:DI 0 ax [652])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 622 621 623 24 (parallel [
            (set (reg/f:DI 0 ax [orig:409 D.25260 ] [409])
                (plus:DI (reg/f:DI 0 ax [652])
                    (reg:DI 1 dx [orig:408 D.25258 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:408 D.25258 ] [408]))
        (nil)))
(insn 623 622 624 24 (set (reg/f:DI 0 ax [orig:410 D.25261 ] [410])
        (mem/f:DI (reg/f:DI 0 ax [orig:409 D.25260 ] [409]) [0 *_508+0 S8 A64])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(insn 624 623 625 24 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:410 D.25261 ] [410])) ge2fitman_com_line.cpp:150 89 {*movdi_internal}
     (nil))
(call_insn/i 625 624 626 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7f6beae88bd0 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:150 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 626 625 627 24 (set (reg:SI 0 ax [orig:411 D.25257 ] [411])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 627 626 628 24 (parallel [
            (set (reg:SI 0 ax [orig:412 D.25257 ] [412])
                (ashift:SI (reg:SI 0 ax [orig:411 D.25257 ] [411])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:150 511 {*ashlsi3_1}
     (nil))
(insn 628 627 638 24 (set (mem/j:SI (plus:DI (reg/f:DI 3 bx [orig:406 D.25259 ] [406])
                (const_int 44 [0x2c])) [0 _505->pre_quecc_points+0 S4 A32])
        (reg:SI 0 ax [orig:412 D.25257 ] [412])) ge2fitman_com_line.cpp:150 90 {*movsi_internal}
     (nil))
(insn 638 628 639 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:154 217 {*addsi_1}
     (nil))
(insn 639 638 640 24 (set (reg:SI 0 ax [653])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:155 90 {*movsi_internal}
     (nil))
(insn 640 639 641 24 (set (reg:DI 0 ax [orig:413 D.25258 ] [413])
        (sign_extend:DI (reg:SI 0 ax [653]))) ge2fitman_com_line.cpp:155 142 {*extendsidi2_rex64}
     (nil))
(insn 641 640 642 24 (parallel [
            (set (reg:DI 1 dx [orig:414 D.25258 ] [414])
                (ashift:DI (reg:DI 0 ax [orig:413 D.25258 ] [413])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:155 512 {*ashldi3_1}
     (nil))
(insn 642 641 643 24 (set (reg/f:DI 0 ax [654])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(insn 643 642 644 24 (parallel [
            (set (reg/f:DI 0 ax [orig:415 D.25260 ] [415])
                (plus:DI (reg/f:DI 0 ax [654])
                    (reg:DI 1 dx [orig:414 D.25258 ] [414])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:155 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:414 D.25258 ] [414]))
        (nil)))
(insn 644 643 645 24 (set (reg/f:DI 0 ax [orig:416 D.25261 ] [416])
        (mem/f:DI (reg/f:DI 0 ax [orig:415 D.25260 ] [415]) [0 *_516+0 S8 A64])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(insn 645 644 646 24 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:416 D.25261 ] [416])) ge2fitman_com_line.cpp:155 89 {*movdi_internal}
     (nil))
(call_insn 646 645 647 24 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:155 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 647 646 648 24 (set (reg:QI 0 ax [orig:417 D.25263 ] [417])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:155 93 {*movqi_internal}
     (nil))
(insn 648 647 649 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:417 D.25263 ] [417])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:155 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 649 648 1838 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 733)
            (pc))) ge2fitman_com_line.cpp:155 612 {*jcc_1}
     (nil)
 -> 733)
;;  succ:       25 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (NEW, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1838 649 1840 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1840 1838 1841 25 (set (pc)
        (label_ref 1839)) 654 {jump}
     (nil)
 -> 1839)
;;  succ:       27 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1841 1840 631)
;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 631 1841 632 26 16 "" [1 uses])
(note 632 631 633 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 1842 26 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:152 90 {*movsi_internal}
     (nil))
(jump_insn 1842 633 1843 26 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:152 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1843 1842 1839)
;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676
(code_label 1839 1843 650 27 86 "" [1 uses])
(note 650 1839 651 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 27 (set (reg/f:DI 0 ax [655])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 652 651 653 27 (set (reg:SI 0 ax [orig:418 D.25257 ] [418])
        (mem:SI (reg/f:DI 0 ax [655]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:156 90 {*movsi_internal}
     (nil))
(insn 653 652 654 27 (set (reg:DI 1 dx [orig:419 D.25258 ] [419])
        (sign_extend:DI (reg:SI 0 ax [orig:418 D.25257 ] [418]))) ge2fitman_com_line.cpp:156 142 {*extendsidi2_rex64}
     (nil))
(insn 654 653 655 27 (set (reg:DI 0 ax [656])
        (reg:DI 1 dx [orig:419 D.25258 ] [419])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 655 654 656 27 (parallel [
            (set (reg:DI 0 ax [656])
                (ashift:DI (reg:DI 0 ax [656])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 512 {*ashldi3_1}
     (nil))
(insn 656 655 657 27 (parallel [
            (set (reg:DI 0 ax [656])
                (plus:DI (reg:DI 0 ax [656])
                    (reg:DI 1 dx [orig:419 D.25258 ] [419])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:419 D.25258 ] [419])
            (const_int 9 [0x9]))
        (nil)))
(insn 657 656 658 27 (parallel [
            (set (reg:DI 0 ax [656])
                (ashift:DI (reg:DI 0 ax [656])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 512 {*ashldi3_1}
     (nil))
(insn 658 657 659 27 (parallel [
            (set (reg:DI 0 ax [656])
                (plus:DI (reg:DI 0 ax [656])
                    (reg:DI 1 dx [orig:419 D.25258 ] [419])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:419 D.25258 ] [419])
            (const_int 19 [0x13]))
        (nil)))
(insn 659 658 660 27 (parallel [
            (set (reg:DI 0 ax [657])
                (ashift:DI (reg:DI 0 ax [656])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 512 {*ashldi3_1}
     (nil))
(insn 660 659 661 27 (set (reg:DI 0 ax [656])
        (reg:DI 0 ax [657])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 661 660 662 27 (set (reg:DI 1 dx [orig:420 D.25258 ] [420])
        (reg:DI 0 ax [656])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 662 661 663 27 (set (reg/f:DI 0 ax [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 663 662 664 27 (parallel [
            (set (reg/f:DI 3 bx [orig:421 D.25259 ] [421])
                (plus:DI (reg:DI 1 dx [orig:420 D.25258 ] [420])
                    (reg/f:DI 0 ax [658])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:420 D.25258 ] [420]))
        (nil)))
(insn 664 663 665 27 (set (reg:SI 0 ax [659])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:156 90 {*movsi_internal}
     (nil))
(insn 665 664 666 27 (set (reg:DI 0 ax [orig:422 D.25258 ] [422])
        (sign_extend:DI (reg:SI 0 ax [659]))) ge2fitman_com_line.cpp:156 142 {*extendsidi2_rex64}
     (nil))
(insn 666 665 667 27 (parallel [
            (set (reg:DI 1 dx [orig:423 D.25258 ] [423])
                (ashift:DI (reg:DI 0 ax [orig:422 D.25258 ] [422])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 512 {*ashldi3_1}
     (nil))
(insn 667 666 668 27 (set (reg/f:DI 0 ax [660])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 668 667 669 27 (parallel [
            (set (reg/f:DI 0 ax [orig:424 D.25260 ] [424])
                (plus:DI (reg/f:DI 0 ax [660])
                    (reg:DI 1 dx [orig:423 D.25258 ] [423])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:156 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:423 D.25258 ] [423]))
        (nil)))
(insn 669 668 670 27 (set (reg/f:DI 0 ax [orig:425 D.25261 ] [425])
        (mem/f:DI (reg/f:DI 0 ax [orig:424 D.25260 ] [424]) [0 *_527+0 S8 A64])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(insn 670 669 671 27 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:425 D.25261 ] [425])) ge2fitman_com_line.cpp:156 89 {*movdi_internal}
     (nil))
(call_insn/i 671 670 673 27 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f6beae88af8 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:156 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 673 671 674 27 (set (reg:SF 21 xmm0 [orig:427 D.25266 ] [427])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:426 D.25268 ] [426]))) ge2fitman_com_line.cpp:156 157 {*truncdfsf_fast_sse}
     (nil))
(insn 674 673 675 27 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:421 D.25259 ] [421])
                (const_int 48 [0x30])) [0 _524->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [orig:427 D.25266 ] [427])) ge2fitman_com_line.cpp:156 129 {*movsf_internal}
     (nil))
(insn 675 674 676 27 (set (reg/f:DI 0 ax [661])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:157 89 {*movdi_internal}
     (nil))
(insn 676 675 677 27 (set (mem:SI (reg/f:DI 0 ax [661]) [0 *fid_140(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:157 90 {*movsi_internal}
     (nil))
(insn 677 676 678 27 (set (reg/f:DI 0 ax [662])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 678 677 679 27 (set (reg:SI 0 ax [orig:428 D.25257 ] [428])
        (mem:SI (reg/f:DI 0 ax [662]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 679 678 680 27 (set (reg:DI 1 dx [orig:429 D.25258 ] [429])
        (sign_extend:DI (reg:SI 0 ax [orig:428 D.25257 ] [428]))) ge2fitman_com_line.cpp:158 142 {*extendsidi2_rex64}
     (nil))
(insn 680 679 681 27 (set (reg:DI 0 ax [663])
        (reg:DI 1 dx [orig:429 D.25258 ] [429])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 681 680 682 27 (parallel [
            (set (reg:DI 0 ax [663])
                (ashift:DI (reg:DI 0 ax [663])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 512 {*ashldi3_1}
     (nil))
(insn 682 681 683 27 (parallel [
            (set (reg:DI 0 ax [663])
                (plus:DI (reg:DI 0 ax [663])
                    (reg:DI 1 dx [orig:429 D.25258 ] [429])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:429 D.25258 ] [429])
            (const_int 9 [0x9]))
        (nil)))
(insn 683 682 684 27 (parallel [
            (set (reg:DI 0 ax [663])
                (ashift:DI (reg:DI 0 ax [663])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 512 {*ashldi3_1}
     (nil))
(insn 684 683 685 27 (parallel [
            (set (reg:DI 0 ax [663])
                (plus:DI (reg:DI 0 ax [663])
                    (reg:DI 1 dx [orig:429 D.25258 ] [429])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:429 D.25258 ] [429])
            (const_int 19 [0x13]))
        (nil)))
(insn 685 684 686 27 (parallel [
            (set (reg:DI 0 ax [664])
                (ashift:DI (reg:DI 0 ax [663])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 512 {*ashldi3_1}
     (nil))
(insn 686 685 687 27 (set (reg:DI 0 ax [663])
        (reg:DI 0 ax [664])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 687 686 688 27 (set (reg:DI 1 dx [orig:430 D.25258 ] [430])
        (reg:DI 0 ax [663])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 688 687 689 27 (set (reg/f:DI 0 ax [665])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 689 688 690 27 (parallel [
            (set (reg/f:DI 1 dx [orig:431 D.25259 ] [431])
                (plus:DI (reg:DI 1 dx [orig:430 D.25258 ] [430])
                    (reg/f:DI 0 ax [665])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:158 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:430 D.25258 ] [430]))
        (nil)))
(insn 690 689 691 27 (set (reg/f:DI 0 ax [666])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:158 89 {*movdi_internal}
     (nil))
(insn 691 690 692 27 (set (reg:SI 0 ax [orig:432 D.25257 ] [432])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [666])
                (const_int 44 [0x2c])) [0 preprocess_63(D)->pre_quecc_points+0 S4 A32])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 692 691 693 27 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:431 D.25259 ] [431])
                (const_int 44 [0x2c])) [0 _536->pre_quecc_points+0 S4 A32])
        (reg:SI 0 ax [orig:432 D.25257 ] [432])) ge2fitman_com_line.cpp:158 90 {*movsi_internal}
     (nil))
(insn 693 692 694 27 (set (reg/f:DI 0 ax [667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 694 693 695 27 (set (reg:SI 0 ax [orig:433 D.25257 ] [433])
        (mem:SI (reg/f:DI 0 ax [667]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:159 90 {*movsi_internal}
     (nil))
(insn 695 694 696 27 (set (reg:DI 1 dx [orig:434 D.25258 ] [434])
        (sign_extend:DI (reg:SI 0 ax [orig:433 D.25257 ] [433]))) ge2fitman_com_line.cpp:159 142 {*extendsidi2_rex64}
     (nil))
(insn 696 695 697 27 (set (reg:DI 0 ax [668])
        (reg:DI 1 dx [orig:434 D.25258 ] [434])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 697 696 698 27 (parallel [
            (set (reg:DI 0 ax [668])
                (ashift:DI (reg:DI 0 ax [668])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 512 {*ashldi3_1}
     (nil))
(insn 698 697 699 27 (parallel [
            (set (reg:DI 0 ax [668])
                (plus:DI (reg:DI 0 ax [668])
                    (reg:DI 1 dx [orig:434 D.25258 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:434 D.25258 ] [434])
            (const_int 9 [0x9]))
        (nil)))
(insn 699 698 700 27 (parallel [
            (set (reg:DI 0 ax [668])
                (ashift:DI (reg:DI 0 ax [668])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 512 {*ashldi3_1}
     (nil))
(insn 700 699 701 27 (parallel [
            (set (reg:DI 0 ax [668])
                (plus:DI (reg:DI 0 ax [668])
                    (reg:DI 1 dx [orig:434 D.25258 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:434 D.25258 ] [434])
            (const_int 19 [0x13]))
        (nil)))
(insn 701 700 702 27 (parallel [
            (set (reg:DI 0 ax [669])
                (ashift:DI (reg:DI 0 ax [668])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 512 {*ashldi3_1}
     (nil))
(insn 702 701 703 27 (set (reg:DI 0 ax [668])
        (reg:DI 0 ax [669])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 703 702 704 27 (set (reg:DI 1 dx [orig:435 D.25258 ] [435])
        (reg:DI 0 ax [668])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 704 703 705 27 (set (reg/f:DI 0 ax [670])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 705 704 706 27 (parallel [
            (set (reg/f:DI 3 bx [orig:436 D.25259 ] [436])
                (plus:DI (reg:DI 1 dx [orig:435 D.25258 ] [435])
                    (reg/f:DI 0 ax [670])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:435 D.25258 ] [435]))
        (nil)))
(insn 706 705 707 27 (set (reg:SI 0 ax [671])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:159 90 {*movsi_internal}
     (nil))
(insn 707 706 708 27 (set (reg:DI 0 ax [orig:437 D.25258 ] [437])
        (sign_extend:DI (reg:SI 0 ax [671]))) ge2fitman_com_line.cpp:159 142 {*extendsidi2_rex64}
     (nil))
(insn 708 707 709 27 (parallel [
            (set (reg:DI 1 dx [orig:438 D.25258 ] [438])
                (ashift:DI (reg:DI 0 ax [orig:437 D.25258 ] [437])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 512 {*ashldi3_1}
     (nil))
(insn 709 708 710 27 (set (reg/f:DI 0 ax [672])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 710 709 711 27 (parallel [
            (set (reg/f:DI 0 ax [orig:439 D.25260 ] [439])
                (plus:DI (reg/f:DI 0 ax [672])
                    (reg:DI 1 dx [orig:438 D.25258 ] [438])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:159 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:438 D.25258 ] [438]))
        (nil)))
(insn 711 710 712 27 (set (reg/f:DI 0 ax [orig:440 D.25261 ] [440])
        (mem/f:DI (reg/f:DI 0 ax [orig:439 D.25260 ] [439]) [0 *_545+0 S8 A64])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(insn 712 711 713 27 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:440 D.25261 ] [440])) ge2fitman_com_line.cpp:159 89 {*movdi_internal}
     (nil))
(call_insn/i 713 712 715 27 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atof") [flags 0x41]  <function_decl 0x7f6beae88af8 atof>) [0 atof S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:159 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 715 713 716 27 (set (reg:SF 21 xmm0 [orig:442 D.25266 ] [442])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:441 D.25268 ] [441]))) ge2fitman_com_line.cpp:159 157 {*truncdfsf_fast_sse}
     (nil))
(insn 716 715 717 27 (set (mem/j:SF (plus:DI (reg/f:DI 3 bx [orig:436 D.25259 ] [436])
                (const_int 48 [0x30])) [0 _542->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [orig:442 D.25266 ] [442])) ge2fitman_com_line.cpp:159 129 {*movsf_internal}
     (nil))
(insn 717 716 718 27 (set (reg/f:DI 0 ax [673])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 718 717 719 27 (set (reg:SI 0 ax [orig:443 D.25257 ] [443])
        (mem:SI (reg/f:DI 0 ax [673]) [0 *fid_140(D)+0 S4 A32])) ge2fitman_com_line.cpp:160 90 {*movsi_internal}
     (nil))
(insn 719 718 720 27 (set (reg:DI 1 dx [orig:444 D.25258 ] [444])
        (sign_extend:DI (reg:SI 0 ax [orig:443 D.25257 ] [443]))) ge2fitman_com_line.cpp:160 142 {*extendsidi2_rex64}
     (nil))
(insn 720 719 721 27 (set (reg:DI 0 ax [674])
        (reg:DI 1 dx [orig:444 D.25258 ] [444])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 721 720 722 27 (parallel [
            (set (reg:DI 0 ax [674])
                (ashift:DI (reg:DI 0 ax [674])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 512 {*ashldi3_1}
     (nil))
(insn 722 721 723 27 (parallel [
            (set (reg:DI 0 ax [674])
                (plus:DI (reg:DI 0 ax [674])
                    (reg:DI 1 dx [orig:444 D.25258 ] [444])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:444 D.25258 ] [444])
            (const_int 9 [0x9]))
        (nil)))
(insn 723 722 724 27 (parallel [
            (set (reg:DI 0 ax [674])
                (ashift:DI (reg:DI 0 ax [674])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 512 {*ashldi3_1}
     (nil))
(insn 724 723 725 27 (parallel [
            (set (reg:DI 0 ax [674])
                (plus:DI (reg:DI 0 ax [674])
                    (reg:DI 1 dx [orig:444 D.25258 ] [444])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 218 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:444 D.25258 ] [444])
            (const_int 19 [0x13]))
        (nil)))
(insn 725 724 726 27 (parallel [
            (set (reg:DI 0 ax [675])
                (ashift:DI (reg:DI 0 ax [674])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 512 {*ashldi3_1}
     (nil))
(insn 726 725 727 27 (set (reg:DI 0 ax [674])
        (reg:DI 0 ax [675])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 727 726 728 27 (set (reg:DI 1 dx [orig:445 D.25258 ] [445])
        (reg:DI 0 ax [674])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 728 727 729 27 (set (reg/f:DI 0 ax [676])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:160 89 {*movdi_internal}
     (nil))
(insn 729 728 730 27 (parallel [
            (set (reg/f:DI 0 ax [orig:446 D.25259 ] [446])
                (plus:DI (reg/f:DI 0 ax [676])
                    (reg:DI 1 dx [orig:445 D.25258 ] [445])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:160 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (reg:DI 1 dx [orig:445 D.25258 ] [445]))
        (nil)))
(insn 730 729 1844 27 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:446 D.25259 ] [446])
                (const_int 40 [0x28])) [0 _553->pre_quecc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:160 90 {*movsi_internal}
     (nil))
(jump_insn 1844 730 1845 27 (set (pc)
        (label_ref 1451)) ge2fitman_com_line.cpp:146 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1845 1844 733)
;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 733 1845 734 28 18 "" [1 uses])
(note 734 733 735 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 1846 28 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -8 [0xfffffffffffffff8])) ge2fitman_com_line.cpp:162 90 {*movsi_internal}
     (nil))
(jump_insn 1846 735 1847 28 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:162 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1847 1846 742)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 165 166 167 168 169 677 678
(code_label 742 1847 743 29 10 "" [1 uses])
(note 743 742 744 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 29 (set (reg:SI 0 ax [677])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:170 90 {*movsi_internal}
     (nil))
(insn 745 744 746 29 (set (reg:DI 0 ax [orig:165 D.25258 ] [165])
        (sign_extend:DI (reg:SI 0 ax [677]))) ge2fitman_com_line.cpp:170 142 {*extendsidi2_rex64}
     (nil))
(insn 746 745 747 29 (parallel [
            (set (reg:DI 1 dx [orig:166 D.25258 ] [166])
                (ashift:DI (reg:DI 0 ax [orig:165 D.25258 ] [165])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:170 512 {*ashldi3_1}
     (nil))
(insn 747 746 748 29 (set (reg/f:DI 0 ax [678])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 748 747 749 29 (parallel [
            (set (reg/f:DI 0 ax [orig:167 D.25260 ] [167])
                (plus:DI (reg/f:DI 0 ax [678])
                    (reg:DI 1 dx [orig:166 D.25258 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:170 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:166 D.25258 ] [166]))
        (nil)))
(insn 749 748 750 29 (set (reg/f:DI 0 ax [orig:168 D.25261 ] [168])
        (mem/f:DI (reg/f:DI 0 ax [orig:167 D.25260 ] [167]) [0 *_166+0 S8 A64])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 750 749 751 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f6be97f0630 *.LC5>)) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(insn 751 750 752 29 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:168 D.25261 ] [168])) ge2fitman_com_line.cpp:170 89 {*movdi_internal}
     (nil))
(call_insn/i 752 751 753 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:170 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 753 752 754 29 (set (reg:SI 0 ax [orig:169 D.25257 ] [169])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:170 90 {*movsi_internal}
     (nil))
(insn 754 753 755 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:169 D.25257 ] [169])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:170 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 755 754 756 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 762)
            (pc))) ge2fitman_com_line.cpp:170 612 {*jcc_1}
     (nil)
 -> 762)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 756 755 757 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 757 756 758 30 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:171 90 {*movsi_internal}
     (nil))
(call_insn 758 757 759 30 (call (mem:QI (symbol_ref:DI ("_Z9disp_helpi") [flags 0x41]  <function_decl 0x7f6be9b48870 disp_help>) [0 disp_help S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:171 660 {*call}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 759 758 760 30 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:172 90 {*movsi_internal}
     (nil))
(call_insn 760 759 761 30 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f6beafb3ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:172 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 761 760 762)
;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 170 171 172 173 174 679 680
(code_label 762 761 763 31 19 "" [1 uses])
(note 763 762 764 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 765 31 (set (reg:SI 0 ax [679])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:175 90 {*movsi_internal}
     (nil))
(insn 765 764 766 31 (set (reg:DI 0 ax [orig:170 D.25258 ] [170])
        (sign_extend:DI (reg:SI 0 ax [679]))) ge2fitman_com_line.cpp:175 142 {*extendsidi2_rex64}
     (nil))
(insn 766 765 767 31 (parallel [
            (set (reg:DI 1 dx [orig:171 D.25258 ] [171])
                (ashift:DI (reg:DI 0 ax [orig:170 D.25258 ] [170])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:175 512 {*ashldi3_1}
     (nil))
(insn 767 766 768 31 (set (reg/f:DI 0 ax [680])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 768 767 769 31 (parallel [
            (set (reg/f:DI 0 ax [orig:172 D.25260 ] [172])
                (plus:DI (reg/f:DI 0 ax [680])
                    (reg:DI 1 dx [orig:171 D.25258 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:175 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:171 D.25258 ] [171]))
        (nil)))
(insn 769 768 770 31 (set (reg/f:DI 0 ax [orig:173 D.25261 ] [173])
        (mem/f:DI (reg/f:DI 0 ax [orig:172 D.25260 ] [172]) [0 *_171+0 S8 A64])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 770 769 771 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f6be97f06c0 *.LC6>)) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(insn 771 770 772 31 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:173 D.25261 ] [173])) ge2fitman_com_line.cpp:175 89 {*movdi_internal}
     (nil))
(call_insn/i 772 771 773 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:175 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 773 772 774 31 (set (reg:SI 0 ax [orig:174 D.25257 ] [174])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:175 90 {*movsi_internal}
     (nil))
(insn 774 773 775 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:174 D.25257 ] [174])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:175 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 775 774 776 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) ge2fitman_com_line.cpp:175 612 {*jcc_1}
     (nil)
 -> 782)
;;  succ:       32 (FALLTHRU)
;;              33
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 776 775 777 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 32 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:176 90 {*movsi_internal}
     (nil))
(call_insn 778 777 779 32 (call (mem:QI (symbol_ref:DI ("_Z9disp_helpi") [flags 0x41]  <function_decl 0x7f6be9b48870 disp_help>) [0 disp_help S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:176 660 {*call}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 779 778 780 32 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:177 90 {*movsi_internal}
     (nil))
(call_insn 780 779 781 32 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f6beafb3ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:177 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 781 780 782)
;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 176 177 178 179 681 682
(code_label 782 781 783 33 20 "" [1 uses])
(note 783 782 784 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 33 (set (reg:SI 0 ax [681])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:180 90 {*movsi_internal}
     (nil))
(insn 785 784 786 33 (set (reg:DI 0 ax [orig:175 D.25258 ] [175])
        (sign_extend:DI (reg:SI 0 ax [681]))) ge2fitman_com_line.cpp:180 142 {*extendsidi2_rex64}
     (nil))
(insn 786 785 787 33 (parallel [
            (set (reg:DI 1 dx [orig:176 D.25258 ] [176])
                (ashift:DI (reg:DI 0 ax [orig:175 D.25258 ] [175])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:180 512 {*ashldi3_1}
     (nil))
(insn 787 786 788 33 (set (reg/f:DI 0 ax [682])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 788 787 789 33 (parallel [
            (set (reg/f:DI 0 ax [orig:177 D.25260 ] [177])
                (plus:DI (reg/f:DI 0 ax [682])
                    (reg:DI 1 dx [orig:176 D.25258 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:180 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:176 D.25258 ] [176]))
        (nil)))
(insn 789 788 790 33 (set (reg/f:DI 0 ax [orig:178 D.25261 ] [178])
        (mem/f:DI (reg/f:DI 0 ax [orig:177 D.25260 ] [177]) [0 *_176+0 S8 A64])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 790 789 791 33 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f6be97f0750 *.LC7>)) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(insn 791 790 792 33 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:178 D.25261 ] [178])) ge2fitman_com_line.cpp:180 89 {*movdi_internal}
     (nil))
(call_insn/i 792 791 793 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:180 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 793 792 794 33 (set (reg:SI 0 ax [orig:179 D.25257 ] [179])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:180 90 {*movsi_internal}
     (nil))
(insn 794 793 795 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:179 D.25257 ] [179])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:180 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 795 794 796 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 815)
            (pc))) ge2fitman_com_line.cpp:180 612 {*jcc_1}
     (nil)
 -> 815)
;;  succ:       34 (FALLTHRU)
;;              37
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 180 683
(note 796 795 797 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 34 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:182 93 {*movqi_internal}
     (nil))
(insn 798 797 799 34 (set (reg/f:DI 0 ax [683])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:183 89 {*movdi_internal}
     (nil))
(insn 799 798 800 34 (set (reg:SI 0 ax [orig:180 D.25257 ] [180])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [683])
                (const_int 8 [0x8])) [0 preprocess_63(D)->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:183 90 {*movsi_internal}
     (nil))
(insn 800 799 801 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:180 D.25257 ] [180])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:183 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 801 800 802 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 810)
            (pc))) ge2fitman_com_line.cpp:183 612 {*jcc_1}
     (nil)
 -> 810)
;;  succ:       35 (FALLTHRU)
;;              36
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 35, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 684 685 686
(note 802 801 803 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 804 35 (set (reg/f:DI 0 ax [684])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:184 89 {*movdi_internal}
     (nil))
(insn 804 803 805 35 (set (mem/j:SI (reg/f:DI 0 ax [684]) [0 preprocess_63(D)->fid_scale+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:184 90 {*movsi_internal}
     (nil))
(insn 805 804 806 35 (set (reg/f:DI 0 ax [685])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:185 89 {*movdi_internal}
     (nil))
(insn 806 805 807 35 (set (reg:SF 21 xmm0 [686])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:185 129 {*movsf_internal}
     (nil))
(insn 807 806 1848 35 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [685])
                (const_int 4 [0x4])) [0 preprocess_63(D)->scale_factor+0 S4 A32])
        (reg:SF 21 xmm0 [686])) ge2fitman_com_line.cpp:185 129 {*movsf_internal}
     (nil))
(jump_insn 1848 807 1849 35 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1849 1848 810)
;; basic block 36, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 810 1849 811 36 22 "" [1 uses])
(note 811 810 812 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 812 811 1850 36 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:188 90 {*movsi_internal}
     (nil))
(jump_insn 1850 812 1851 36 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:188 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1851 1850 815)
;; basic block 37, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 181 182 183 184 185 687 688
(code_label 815 1851 816 37 21 "" [1 uses])
(note 816 815 817 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 37 (set (reg:SI 0 ax [687])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:192 90 {*movsi_internal}
     (nil))
(insn 818 817 819 37 (set (reg:DI 0 ax [orig:181 D.25258 ] [181])
        (sign_extend:DI (reg:SI 0 ax [687]))) ge2fitman_com_line.cpp:192 142 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 37 (parallel [
            (set (reg:DI 1 dx [orig:182 D.25258 ] [182])
                (ashift:DI (reg:DI 0 ax [orig:181 D.25258 ] [181])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:192 512 {*ashldi3_1}
     (nil))
(insn 820 819 821 37 (set (reg/f:DI 0 ax [688])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 821 820 822 37 (parallel [
            (set (reg/f:DI 0 ax [orig:183 D.25260 ] [183])
                (plus:DI (reg/f:DI 0 ax [688])
                    (reg:DI 1 dx [orig:182 D.25258 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:192 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:182 D.25258 ] [182]))
        (nil)))
(insn 822 821 823 37 (set (reg/f:DI 0 ax [orig:184 D.25261 ] [184])
        (mem/f:DI (reg/f:DI 0 ax [orig:183 D.25260 ] [183]) [0 *_186+0 S8 A64])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 823 822 824 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f6be97f07e0 *.LC8>)) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(insn 824 823 825 37 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:184 D.25261 ] [184])) ge2fitman_com_line.cpp:192 89 {*movdi_internal}
     (nil))
(call_insn/i 825 824 826 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:192 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 826 825 827 37 (set (reg:SI 0 ax [orig:185 D.25257 ] [185])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:192 90 {*movsi_internal}
     (nil))
(insn 827 826 828 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:185 D.25257 ] [185])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:192 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 828 827 829 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 852)
            (pc))) ge2fitman_com_line.cpp:192 612 {*jcc_1}
     (nil)
 -> 852)
;;  succ:       38 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 186 187 689
(note 829 828 830 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 830 829 831 38 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:194 93 {*movqi_internal}
     (nil))
(insn 831 830 832 38 (set (reg/f:DI 0 ax [689])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:195 89 {*movdi_internal}
     (nil))
(insn 832 831 833 38 (parallel [
            (set (reg/f:DI 0 ax [orig:186 D.25259 ] [186])
                (plus:DI (reg/f:DI 0 ax [689])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:195 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 833 832 834 38 (set (reg:SI 0 ax [orig:187 D.25257 ] [187])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:186 D.25259 ] [186])
                (const_int 8 [0x8])) [0 _190->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:195 90 {*movsi_internal}
     (nil))
(insn 834 833 835 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:187 D.25257 ] [187])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:195 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 835 834 836 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 847)
            (pc))) ge2fitman_com_line.cpp:195 612 {*jcc_1}
     (nil)
 -> 847)
;;  succ:       39 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 188 189 690 691 692
(note 836 835 837 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 39 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -830 [0xfffffffffffffcc2])) [0 rscale_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:196 93 {*movqi_internal}
     (nil))
(insn 838 837 839 39 (set (reg/f:DI 0 ax [690])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:197 89 {*movdi_internal}
     (nil))
(insn 839 838 840 39 (parallel [
            (set (reg/f:DI 0 ax [orig:188 D.25259 ] [188])
                (plus:DI (reg/f:DI 0 ax [690])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:197 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 840 839 841 39 (set (mem/j:SI (reg/f:DI 0 ax [orig:188 D.25259 ] [188]) [0 _193->fid_scale+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:197 90 {*movsi_internal}
     (nil))
(insn 841 840 842 39 (set (reg/f:DI 0 ax [691])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:198 89 {*movdi_internal}
     (nil))
(insn 842 841 843 39 (parallel [
            (set (reg/f:DI 0 ax [orig:189 D.25259 ] [189])
                (plus:DI (reg/f:DI 0 ax [691])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:198 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 843 842 844 39 (set (reg:SF 21 xmm0 [692])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:198 129 {*movsf_internal}
     (nil))
(insn 844 843 1852 39 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:189 D.25259 ] [189])
                (const_int 4 [0x4])) [0 _195->scale_factor+0 S4 A32])
        (reg:SF 21 xmm0 [692])) ge2fitman_com_line.cpp:198 129 {*movsf_internal}
     (nil))
(jump_insn 1852 844 1853 39 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1853 1852 847)
;; basic block 40, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 847 1853 848 40 24 "" [1 uses])
(note 848 847 849 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 849 848 1854 40 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:201 90 {*movsi_internal}
     (nil))
(jump_insn 1854 849 1855 40 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:201 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1855 1854 852)
;; basic block 41, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 190 191 192 193 194 693 694
(code_label 852 1855 853 41 23 "" [1 uses])
(note 853 852 854 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 41 (set (reg:SI 0 ax [693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:205 90 {*movsi_internal}
     (nil))
(insn 855 854 856 41 (set (reg:DI 0 ax [orig:190 D.25258 ] [190])
        (sign_extend:DI (reg:SI 0 ax [693]))) ge2fitman_com_line.cpp:205 142 {*extendsidi2_rex64}
     (nil))
(insn 856 855 857 41 (parallel [
            (set (reg:DI 1 dx [orig:191 D.25258 ] [191])
                (ashift:DI (reg:DI 0 ax [orig:190 D.25258 ] [190])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:205 512 {*ashldi3_1}
     (nil))
(insn 857 856 858 41 (set (reg/f:DI 0 ax [694])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 858 857 859 41 (parallel [
            (set (reg/f:DI 0 ax [orig:192 D.25260 ] [192])
                (plus:DI (reg/f:DI 0 ax [694])
                    (reg:DI 1 dx [orig:191 D.25258 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:205 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:191 D.25258 ] [191]))
        (nil)))
(insn 859 858 860 41 (set (reg/f:DI 0 ax [orig:193 D.25261 ] [193])
        (mem/f:DI (reg/f:DI 0 ax [orig:192 D.25260 ] [192]) [0 *_200+0 S8 A64])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 860 859 861 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f6be97f0870 *.LC9>)) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(insn 861 860 862 41 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:193 D.25261 ] [193])) ge2fitman_com_line.cpp:205 89 {*movdi_internal}
     (nil))
(call_insn/i 862 861 863 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:205 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 863 862 864 41 (set (reg:SI 0 ax [orig:194 D.25257 ] [194])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:205 90 {*movsi_internal}
     (nil))
(insn 864 863 865 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:194 D.25257 ] [194])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:205 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 865 864 866 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 913)
            (pc))) ge2fitman_com_line.cpp:205 612 {*jcc_1}
     (nil)
 -> 913)
;;  succ:       42 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195 695
(note 866 865 867 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 867 866 868 42 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:207 93 {*movqi_internal}
     (nil))
(insn 868 867 869 42 (set (reg/f:DI 0 ax [695])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:208 89 {*movdi_internal}
     (nil))
(insn 869 868 870 42 (set (reg:SI 0 ax [orig:195 D.25257 ] [195])
        (mem/j:SI (reg/f:DI 0 ax [695]) [0 preprocess_63(D)->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:208 90 {*movsi_internal}
     (nil))
(insn 870 869 871 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:195 D.25257 ] [195])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:208 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 871 870 872 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 908)
            (pc))) ge2fitman_com_line.cpp:208 612 {*jcc_1}
     (nil)
 -> 908)
;;  succ:       43 (FALLTHRU)
;;              46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 43, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 196 197 198 199 200 696 697 698
(note 872 871 873 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 43 (set (reg/f:DI 0 ax [696])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:209 89 {*movdi_internal}
     (nil))
(insn 874 873 875 43 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [696])
                (const_int 8 [0x8])) [0 preprocess_63(D)->scaleby+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:209 90 {*movsi_internal}
     (nil))
(insn 875 874 876 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:210 217 {*addsi_1}
     (nil))
(insn 876 875 877 43 (set (reg:SI 0 ax [697])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:211 90 {*movsi_internal}
     (nil))
(insn 877 876 878 43 (set (reg:DI 0 ax [orig:196 D.25258 ] [196])
        (sign_extend:DI (reg:SI 0 ax [697]))) ge2fitman_com_line.cpp:211 142 {*extendsidi2_rex64}
     (nil))
(insn 878 877 879 43 (parallel [
            (set (reg:DI 1 dx [orig:197 D.25258 ] [197])
                (ashift:DI (reg:DI 0 ax [orig:196 D.25258 ] [196])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:211 512 {*ashldi3_1}
     (nil))
(insn 879 878 880 43 (set (reg/f:DI 0 ax [698])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(insn 880 879 881 43 (parallel [
            (set (reg/f:DI 0 ax [orig:198 D.25260 ] [198])
                (plus:DI (reg/f:DI 0 ax [698])
                    (reg:DI 1 dx [orig:197 D.25258 ] [197])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:211 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:197 D.25258 ] [197]))
        (nil)))
(insn 881 880 882 43 (set (reg/f:DI 0 ax [orig:199 D.25261 ] [199])
        (mem/f:DI (reg/f:DI 0 ax [orig:198 D.25260 ] [198]) [0 *_209+0 S8 A64])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(insn 882 881 883 43 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:199 D.25261 ] [199])) ge2fitman_com_line.cpp:211 89 {*movdi_internal}
     (nil))
(call_insn 883 882 884 43 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:211 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 884 883 885 43 (set (reg:QI 0 ax [orig:200 D.25263 ] [200])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:211 93 {*movqi_internal}
     (nil))
(insn 885 884 886 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:200 D.25263 ] [200])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:211 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 886 885 887 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 903)
            (pc))) ge2fitman_com_line.cpp:211 612 {*jcc_1}
     (nil)
 -> 903)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 44, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 201 202 203 204 205 699 700 701
(note 887 886 888 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 888 887 889 44 (set (reg/f:DI 0 ax [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 889 888 890 44 (parallel [
            (set (reg/f:DI 1 dx [orig:201 D.25264 ] [201])
                (plus:DI (reg/f:DI 0 ax [699])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 890 889 891 44 (set (reg:SI 0 ax [700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:212 90 {*movsi_internal}
     (nil))
(insn 891 890 892 44 (set (reg:DI 0 ax [orig:202 D.25258 ] [202])
        (sign_extend:DI (reg:SI 0 ax [700]))) ge2fitman_com_line.cpp:212 142 {*extendsidi2_rex64}
     (nil))
(insn 892 891 893 44 (parallel [
            (set (reg:DI 2 cx [orig:203 D.25258 ] [203])
                (ashift:DI (reg:DI 0 ax [orig:202 D.25258 ] [202])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 512 {*ashldi3_1}
     (nil))
(insn 893 892 894 44 (set (reg/f:DI 0 ax [701])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 894 893 895 44 (parallel [
            (set (reg/f:DI 0 ax [orig:204 D.25260 ] [204])
                (plus:DI (reg/f:DI 0 ax [701])
                    (reg:DI 2 cx [orig:203 D.25258 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:212 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:203 D.25258 ] [203]))
        (nil)))
(insn 895 894 897 44 (set (reg/f:DI 0 ax [orig:205 D.25261 ] [205])
        (mem/f:DI (reg/f:DI 0 ax [orig:204 D.25260 ] [204]) [0 *_217+0 S8 A64])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 897 895 898 44 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6be97f0900 *.LC10>)) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 898 897 899 44 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:205 D.25261 ] [205])) ge2fitman_com_line.cpp:212 89 {*movdi_internal}
     (nil))
(insn 899 898 900 44 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:212 93 {*movqi_internal}
     (nil))
(call_insn 900 899 1856 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f6beaf98d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:212 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1856 900 1857 44 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1857 1856 903)
;; basic block 45, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 903 1857 904 45 27 "" [1 uses])
(note 904 903 905 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 1858 45 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -14 [0xfffffffffffffff2])) ge2fitman_com_line.cpp:214 90 {*movsi_internal}
     (nil))
(jump_insn 1858 905 1859 45 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:214 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1859 1858 908)
;; basic block 46, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 908 1859 909 46 26 "" [1 uses])
(note 909 908 910 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 910 909 1860 46 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:218 90 {*movsi_internal}
     (nil))
(jump_insn 1860 910 1861 46 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:218 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1861 1860 913)
;; basic block 47, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 206 207 208 209 210 702 703
(code_label 913 1861 914 47 25 "" [1 uses])
(note 914 913 915 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 47 (set (reg:SI 0 ax [702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:222 90 {*movsi_internal}
     (nil))
(insn 916 915 917 47 (set (reg:DI 0 ax [orig:206 D.25258 ] [206])
        (sign_extend:DI (reg:SI 0 ax [702]))) ge2fitman_com_line.cpp:222 142 {*extendsidi2_rex64}
     (nil))
(insn 917 916 918 47 (parallel [
            (set (reg:DI 1 dx [orig:207 D.25258 ] [207])
                (ashift:DI (reg:DI 0 ax [orig:206 D.25258 ] [206])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:222 512 {*ashldi3_1}
     (nil))
(insn 918 917 919 47 (set (reg/f:DI 0 ax [703])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 919 918 920 47 (parallel [
            (set (reg/f:DI 0 ax [orig:208 D.25260 ] [208])
                (plus:DI (reg/f:DI 0 ax [703])
                    (reg:DI 1 dx [orig:207 D.25258 ] [207])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:222 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:207 D.25258 ] [207]))
        (nil)))
(insn 920 919 921 47 (set (reg/f:DI 0 ax [orig:209 D.25261 ] [209])
        (mem/f:DI (reg/f:DI 0 ax [orig:208 D.25260 ] [208]) [0 *_224+0 S8 A64])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 921 920 922 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f6be97f0990 *.LC11>)) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(insn 922 921 923 47 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:209 D.25261 ] [209])) ge2fitman_com_line.cpp:222 89 {*movdi_internal}
     (nil))
(call_insn/i 923 922 924 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:222 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 924 923 925 47 (set (reg:SI 0 ax [orig:210 D.25257 ] [210])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:222 90 {*movsi_internal}
     (nil))
(insn 925 924 926 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:210 D.25257 ] [210])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:222 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 926 925 927 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 978)
            (pc))) ge2fitman_com_line.cpp:222 612 {*jcc_1}
     (nil)
 -> 978)
;;  succ:       48 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211 212 704
(note 927 926 928 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 928 927 929 48 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:224 93 {*movqi_internal}
     (nil))
(insn 929 928 930 48 (set (reg/f:DI 0 ax [704])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:225 89 {*movdi_internal}
     (nil))
(insn 930 929 931 48 (parallel [
            (set (reg/f:DI 0 ax [orig:211 D.25259 ] [211])
                (plus:DI (reg/f:DI 0 ax [704])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:225 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 931 930 932 48 (set (reg:SI 0 ax [orig:212 D.25257 ] [212])
        (mem/j:SI (reg/f:DI 0 ax [orig:211 D.25259 ] [211]) [0 _228->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:225 90 {*movsi_internal}
     (nil))
(insn 932 931 933 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:212 D.25257 ] [212])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:225 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 933 932 934 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 973)
            (pc))) ge2fitman_com_line.cpp:225 612 {*jcc_1}
     (nil)
 -> 973)
;;  succ:       49 (FALLTHRU)
;;              52
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 213 214 215 216 217 218 705 706 707
(note 934 933 935 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 935 934 936 49 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -830 [0xfffffffffffffcc2])) [0 rscale_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:226 93 {*movqi_internal}
     (nil))
(insn 936 935 937 49 (set (reg/f:DI 0 ax [705])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:227 89 {*movdi_internal}
     (nil))
(insn 937 936 938 49 (parallel [
            (set (reg/f:DI 0 ax [orig:213 D.25259 ] [213])
                (plus:DI (reg/f:DI 0 ax [705])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:227 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 938 937 939 49 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:213 D.25259 ] [213])
                (const_int 8 [0x8])) [0 _231->scaleby+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:227 90 {*movsi_internal}
     (nil))
(insn 939 938 940 49 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:228 217 {*addsi_1}
     (nil))
(insn 940 939 941 49 (set (reg:SI 0 ax [706])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:229 90 {*movsi_internal}
     (nil))
(insn 941 940 942 49 (set (reg:DI 0 ax [orig:214 D.25258 ] [214])
        (sign_extend:DI (reg:SI 0 ax [706]))) ge2fitman_com_line.cpp:229 142 {*extendsidi2_rex64}
     (nil))
(insn 942 941 943 49 (parallel [
            (set (reg:DI 1 dx [orig:215 D.25258 ] [215])
                (ashift:DI (reg:DI 0 ax [orig:214 D.25258 ] [214])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:229 512 {*ashldi3_1}
     (nil))
(insn 943 942 944 49 (set (reg/f:DI 0 ax [707])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(insn 944 943 945 49 (parallel [
            (set (reg/f:DI 0 ax [orig:216 D.25260 ] [216])
                (plus:DI (reg/f:DI 0 ax [707])
                    (reg:DI 1 dx [orig:215 D.25258 ] [215])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:229 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:215 D.25258 ] [215]))
        (nil)))
(insn 945 944 946 49 (set (reg/f:DI 0 ax [orig:217 D.25261 ] [217])
        (mem/f:DI (reg/f:DI 0 ax [orig:216 D.25260 ] [216]) [0 *_236+0 S8 A64])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(insn 946 945 947 49 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:217 D.25261 ] [217])) ge2fitman_com_line.cpp:229 89 {*movdi_internal}
     (nil))
(call_insn 947 946 948 49 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:229 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 948 947 949 49 (set (reg:QI 0 ax [orig:218 D.25263 ] [218])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:229 93 {*movqi_internal}
     (nil))
(insn 949 948 950 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:218 D.25263 ] [218])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:229 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 950 949 951 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 968)
            (pc))) ge2fitman_com_line.cpp:229 612 {*jcc_1}
     (nil)
 -> 968)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 219 220 221 222 223 224 708 709 710
(note 951 950 952 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 952 951 953 50 (set (reg/f:DI 0 ax [708])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 953 952 954 50 (parallel [
            (set (reg/f:DI 0 ax [orig:219 D.25259 ] [219])
                (plus:DI (reg/f:DI 0 ax [708])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 954 953 955 50 (parallel [
            (set (reg/f:DI 1 dx [orig:220 D.25264 ] [220])
                (plus:DI (reg/f:DI 0 ax [orig:219 D.25259 ] [219])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 218 {*adddi_1}
     (nil))
(insn 955 954 956 50 (set (reg:SI 0 ax [709])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:230 90 {*movsi_internal}
     (nil))
(insn 956 955 957 50 (set (reg:DI 0 ax [orig:221 D.25258 ] [221])
        (sign_extend:DI (reg:SI 0 ax [709]))) ge2fitman_com_line.cpp:230 142 {*extendsidi2_rex64}
     (nil))
(insn 957 956 958 50 (parallel [
            (set (reg:DI 2 cx [orig:222 D.25258 ] [222])
                (ashift:DI (reg:DI 0 ax [orig:221 D.25258 ] [221])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 512 {*ashldi3_1}
     (nil))
(insn 958 957 959 50 (set (reg/f:DI 0 ax [710])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 959 958 960 50 (parallel [
            (set (reg/f:DI 0 ax [orig:223 D.25260 ] [223])
                (plus:DI (reg/f:DI 0 ax [710])
                    (reg:DI 2 cx [orig:222 D.25258 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:230 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:222 D.25258 ] [222]))
        (nil)))
(insn 960 959 962 50 (set (reg/f:DI 0 ax [orig:224 D.25261 ] [224])
        (mem/f:DI (reg/f:DI 0 ax [orig:223 D.25260 ] [223]) [0 *_245+0 S8 A64])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 962 960 963 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6be97f0900 *.LC10>)) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 963 962 964 50 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:224 D.25261 ] [224])) ge2fitman_com_line.cpp:230 89 {*movdi_internal}
     (nil))
(insn 964 963 965 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:230 93 {*movqi_internal}
     (nil))
(call_insn 965 964 1862 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f6beaf98d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:230 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1862 965 1863 50 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1863 1862 968)
;; basic block 51, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 968 1863 969 51 30 "" [1 uses])
(note 969 968 970 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 970 969 1864 51 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -15 [0xfffffffffffffff1])) ge2fitman_com_line.cpp:232 90 {*movsi_internal}
     (nil))
(jump_insn 1864 970 1865 51 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:232 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1865 1864 973)
;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 973 1865 974 52 29 "" [1 uses])
(note 974 973 975 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 975 974 1866 52 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -1 [0xffffffffffffffff])) ge2fitman_com_line.cpp:236 90 {*movsi_internal}
     (nil))
(jump_insn 1866 975 1867 52 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:236 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1867 1866 978)
;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 225 226 227 228 229 711 712
(code_label 978 1867 979 53 28 "" [1 uses])
(note 979 978 980 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 980 979 981 53 (set (reg:SI 0 ax [711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:240 90 {*movsi_internal}
     (nil))
(insn 981 980 982 53 (set (reg:DI 0 ax [orig:225 D.25258 ] [225])
        (sign_extend:DI (reg:SI 0 ax [711]))) ge2fitman_com_line.cpp:240 142 {*extendsidi2_rex64}
     (nil))
(insn 982 981 983 53 (parallel [
            (set (reg:DI 1 dx [orig:226 D.25258 ] [226])
                (ashift:DI (reg:DI 0 ax [orig:225 D.25258 ] [225])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:240 512 {*ashldi3_1}
     (nil))
(insn 983 982 984 53 (set (reg/f:DI 0 ax [712])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 984 983 985 53 (parallel [
            (set (reg/f:DI 0 ax [orig:227 D.25260 ] [227])
                (plus:DI (reg/f:DI 0 ax [712])
                    (reg:DI 1 dx [orig:226 D.25258 ] [226])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:240 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:226 D.25258 ] [226]))
        (nil)))
(insn 985 984 986 53 (set (reg/f:DI 0 ax [orig:228 D.25261 ] [228])
        (mem/f:DI (reg/f:DI 0 ax [orig:227 D.25260 ] [227]) [0 *_252+0 S8 A64])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 986 985 987 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f6be97f0a20 *.LC12>)) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(insn 987 986 988 53 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:228 D.25261 ] [228])) ge2fitman_com_line.cpp:240 89 {*movdi_internal}
     (nil))
(call_insn/i 988 987 989 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:240 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 989 988 990 53 (set (reg:SI 0 ax [orig:229 D.25257 ] [229])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:240 90 {*movsi_internal}
     (nil))
(insn 990 989 991 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:229 D.25257 ] [229])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:240 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 991 990 992 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1026)
            (pc))) ge2fitman_com_line.cpp:240 612 {*jcc_1}
     (nil)
 -> 1026)
;;  succ:       54 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 230 231 232 233 234 713 714
(note 992 991 993 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 54 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:241 217 {*addsi_1}
     (nil))
(insn 994 993 995 54 (set (reg:SI 0 ax [713])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:242 90 {*movsi_internal}
     (nil))
(insn 995 994 996 54 (set (reg:DI 0 ax [orig:230 D.25258 ] [230])
        (sign_extend:DI (reg:SI 0 ax [713]))) ge2fitman_com_line.cpp:242 142 {*extendsidi2_rex64}
     (nil))
(insn 996 995 997 54 (parallel [
            (set (reg:DI 1 dx [orig:231 D.25258 ] [231])
                (ashift:DI (reg:DI 0 ax [orig:230 D.25258 ] [230])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:242 512 {*ashldi3_1}
     (nil))
(insn 997 996 998 54 (set (reg/f:DI 0 ax [714])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(insn 998 997 999 54 (parallel [
            (set (reg/f:DI 0 ax [orig:232 D.25260 ] [232])
                (plus:DI (reg/f:DI 0 ax [714])
                    (reg:DI 1 dx [orig:231 D.25258 ] [231])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:242 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:231 D.25258 ] [231]))
        (nil)))
(insn 999 998 1000 54 (set (reg/f:DI 0 ax [orig:233 D.25261 ] [233])
        (mem/f:DI (reg/f:DI 0 ax [orig:232 D.25260 ] [232]) [0 *_258+0 S8 A64])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(insn 1000 999 1001 54 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:233 D.25261 ] [233])) ge2fitman_com_line.cpp:242 89 {*movdi_internal}
     (nil))
(call_insn 1001 1000 1002 54 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z8isNumberPc") [flags 0x41]  <function_decl 0x7f6be9b481b0 isNumber>) [0 isNumber S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:242 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1002 1001 1003 54 (set (reg:QI 0 ax [orig:234 D.25263 ] [234])
        (reg:QI 0 ax)) ge2fitman_com_line.cpp:242 93 {*movqi_internal}
     (nil))
(insn 1003 1002 1004 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:234 D.25263 ] [234])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:242 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1004 1003 1005 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1021)
            (pc))) ge2fitman_com_line.cpp:242 612 {*jcc_1}
     (nil)
 -> 1021)
;;  succ:       55 (FALLTHRU)
;;              56
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 235 236 237 238 239 715 716 717
(note 1005 1004 1006 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1006 1005 1007 55 (set (reg/f:DI 0 ax [715])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1007 1006 1008 55 (parallel [
            (set (reg/f:DI 1 dx [orig:235 D.25264 ] [235])
                (plus:DI (reg/f:DI 0 ax [715])
                    (const_int 28 [0x1c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 28 [0x1c]))
        (nil)))
(insn 1008 1007 1009 55 (set (reg:SI 0 ax [716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:243 90 {*movsi_internal}
     (nil))
(insn 1009 1008 1010 55 (set (reg:DI 0 ax [orig:236 D.25258 ] [236])
        (sign_extend:DI (reg:SI 0 ax [716]))) ge2fitman_com_line.cpp:243 142 {*extendsidi2_rex64}
     (nil))
(insn 1010 1009 1011 55 (parallel [
            (set (reg:DI 2 cx [orig:237 D.25258 ] [237])
                (ashift:DI (reg:DI 0 ax [orig:236 D.25258 ] [236])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 512 {*ashldi3_1}
     (nil))
(insn 1011 1010 1012 55 (set (reg/f:DI 0 ax [717])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1012 1011 1013 55 (parallel [
            (set (reg/f:DI 0 ax [orig:238 D.25260 ] [238])
                (plus:DI (reg/f:DI 0 ax [717])
                    (reg:DI 2 cx [orig:237 D.25258 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:243 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 2 cx [orig:237 D.25258 ] [237]))
        (nil)))
(insn 1013 1012 1015 55 (set (reg/f:DI 0 ax [orig:239 D.25261 ] [239])
        (mem/f:DI (reg/f:DI 0 ax [orig:238 D.25260 ] [238]) [0 *_266+0 S8 A64])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1015 1013 1016 55 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f6be97f0900 *.LC10>)) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1016 1015 1017 55 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:239 D.25261 ] [239])) ge2fitman_com_line.cpp:243 89 {*movdi_internal}
     (nil))
(insn 1017 1016 1018 55 (set (reg:QI 0 ax)
        (const_int 0 [0])) ge2fitman_com_line.cpp:243 93 {*movqi_internal}
     (nil))
(call_insn 1018 1017 1868 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f6beaf98d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:243 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1868 1018 1869 55 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1869 1868 1021)
;; basic block 56, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1021 1869 1022 56 32 "" [1 uses])
(note 1022 1021 1023 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1022 1870 56 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -16 [0xfffffffffffffff0])) ge2fitman_com_line.cpp:245 90 {*movsi_internal}
     (nil))
(jump_insn 1870 1023 1871 56 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:245 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1871 1870 1026)
;; basic block 57, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 240 241 242 243 244 718 719
(code_label 1026 1871 1027 57 31 "" [1 uses])
(note 1027 1026 1028 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1028 1027 1029 57 (set (reg:SI 0 ax [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:249 90 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 57 (set (reg:DI 0 ax [orig:240 D.25258 ] [240])
        (sign_extend:DI (reg:SI 0 ax [718]))) ge2fitman_com_line.cpp:249 142 {*extendsidi2_rex64}
     (nil))
(insn 1030 1029 1031 57 (parallel [
            (set (reg:DI 1 dx [orig:241 D.25258 ] [241])
                (ashift:DI (reg:DI 0 ax [orig:240 D.25258 ] [240])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:249 512 {*ashldi3_1}
     (nil))
(insn 1031 1030 1032 57 (set (reg/f:DI 0 ax [719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1032 1031 1033 57 (parallel [
            (set (reg/f:DI 0 ax [orig:242 D.25260 ] [242])
                (plus:DI (reg/f:DI 0 ax [719])
                    (reg:DI 1 dx [orig:241 D.25258 ] [241])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:249 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:241 D.25258 ] [241]))
        (nil)))
(insn 1033 1032 1034 57 (set (reg/f:DI 0 ax [orig:243 D.25261 ] [243])
        (mem/f:DI (reg/f:DI 0 ax [orig:242 D.25260 ] [242]) [0 *_272+0 S8 A64])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1034 1033 1035 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f6be97f0ab0 *.LC13>)) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 57 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:243 D.25261 ] [243])) ge2fitman_com_line.cpp:249 89 {*movdi_internal}
     (nil))
(call_insn/i 1036 1035 1037 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:249 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1037 1036 1038 57 (set (reg:SI 0 ax [orig:244 D.25257 ] [244])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:249 90 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:244 D.25257 ] [244])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:249 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1039 1038 1040 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1047)
            (pc))) ge2fitman_com_line.cpp:249 612 {*jcc_1}
     (nil)
 -> 1047)
;;  succ:       58 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 245 720
(note 1040 1039 1041 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1041 1040 1042 58 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:250 93 {*movqi_internal}
     (nil))
(insn 1042 1041 1043 58 (set (reg/f:DI 0 ax [720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:251 89 {*movdi_internal}
     (nil))
(insn 1043 1042 1044 58 (parallel [
            (set (reg/f:DI 0 ax [orig:245 D.25259 ] [245])
                (plus:DI (reg/f:DI 0 ax [720])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:251 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1044 1043 1872 58 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:245 D.25259 ] [245])
                (const_int 32 [0x20])) [0 _276->max_normalize+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:251 90 {*movsi_internal}
     (nil))
(jump_insn 1872 1044 1873 58 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1873 1872 1047)
;; basic block 59, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 246 247 248 249 250 721 722
(code_label 1047 1873 1048 59 33 "" [1 uses])
(note 1048 1047 1049 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1049 1048 1050 59 (set (reg:SI 0 ax [721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:254 90 {*movsi_internal}
     (nil))
(insn 1050 1049 1051 59 (set (reg:DI 0 ax [orig:246 D.25258 ] [246])
        (sign_extend:DI (reg:SI 0 ax [721]))) ge2fitman_com_line.cpp:254 142 {*extendsidi2_rex64}
     (nil))
(insn 1051 1050 1052 59 (parallel [
            (set (reg:DI 1 dx [orig:247 D.25258 ] [247])
                (ashift:DI (reg:DI 0 ax [orig:246 D.25258 ] [246])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:254 512 {*ashldi3_1}
     (nil))
(insn 1052 1051 1053 59 (set (reg/f:DI 0 ax [722])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1053 1052 1054 59 (parallel [
            (set (reg/f:DI 0 ax [orig:248 D.25260 ] [248])
                (plus:DI (reg/f:DI 0 ax [722])
                    (reg:DI 1 dx [orig:247 D.25258 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:254 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:247 D.25258 ] [247]))
        (nil)))
(insn 1054 1053 1055 59 (set (reg/f:DI 0 ax [orig:249 D.25261 ] [249])
        (mem/f:DI (reg/f:DI 0 ax [orig:248 D.25260 ] [248]) [0 *_280+0 S8 A64])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1055 1054 1056 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f6be97f0b40 *.LC14>)) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(insn 1056 1055 1057 59 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:249 D.25261 ] [249])) ge2fitman_com_line.cpp:254 89 {*movdi_internal}
     (nil))
(call_insn/i 1057 1056 1058 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:254 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1058 1057 1059 59 (set (reg:SI 0 ax [orig:250 D.25257 ] [250])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:254 90 {*movsi_internal}
     (nil))
(insn 1059 1058 1060 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:250 D.25257 ] [250])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:254 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1060 1059 1061 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1067)
            (pc))) ge2fitman_com_line.cpp:254 612 {*jcc_1}
     (nil)
 -> 1067)
;;  succ:       60 (FALLTHRU)
;;              61
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 723
(note 1061 1060 1062 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1062 1061 1063 60 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:256 93 {*movqi_internal}
     (nil))
(insn 1063 1062 1064 60 (set (reg/f:DI 0 ax [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:257 89 {*movdi_internal}
     (nil))
(insn 1064 1063 1874 60 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [723])
                (const_int 52 [0x34])) [0 preprocess_63(D)->pre_quecc_if+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:257 90 {*movsi_internal}
     (nil))
(jump_insn 1874 1064 1875 60 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1875 1874 1067)
;; basic block 61, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 251 252 253 254 255 724 725
(code_label 1067 1875 1068 61 34 "" [1 uses])
(note 1068 1067 1069 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 61 (set (reg:SI 0 ax [724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:260 90 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 61 (set (reg:DI 0 ax [orig:251 D.25258 ] [251])
        (sign_extend:DI (reg:SI 0 ax [724]))) ge2fitman_com_line.cpp:260 142 {*extendsidi2_rex64}
     (nil))
(insn 1071 1070 1072 61 (parallel [
            (set (reg:DI 1 dx [orig:252 D.25258 ] [252])
                (ashift:DI (reg:DI 0 ax [orig:251 D.25258 ] [251])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:260 512 {*ashldi3_1}
     (nil))
(insn 1072 1071 1073 61 (set (reg/f:DI 0 ax [725])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1073 1072 1074 61 (parallel [
            (set (reg/f:DI 0 ax [orig:253 D.25260 ] [253])
                (plus:DI (reg/f:DI 0 ax [725])
                    (reg:DI 1 dx [orig:252 D.25258 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:260 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:252 D.25258 ] [252]))
        (nil)))
(insn 1074 1073 1075 61 (set (reg/f:DI 0 ax [orig:254 D.25261 ] [254])
        (mem/f:DI (reg/f:DI 0 ax [orig:253 D.25260 ] [253]) [0 *_287+0 S8 A64])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 61 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f6be97f0bd0 *.LC15>)) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(insn 1076 1075 1077 61 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:254 D.25261 ] [254])) ge2fitman_com_line.cpp:260 89 {*movdi_internal}
     (nil))
(call_insn/i 1077 1076 1078 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:260 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1078 1077 1079 61 (set (reg:SI 0 ax [orig:255 D.25257 ] [255])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:260 90 {*movsi_internal}
     (nil))
(insn 1079 1078 1080 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:255 D.25257 ] [255])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:260 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1080 1079 1081 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1089)
            (pc))) ge2fitman_com_line.cpp:260 612 {*jcc_1}
     (nil)
 -> 1089)
;;  succ:       62 (FALLTHRU)
;;              63
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 256 726
(note 1081 1080 1082 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1082 1081 1083 62 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:262 93 {*movqi_internal}
     (nil))
(insn 1083 1082 1084 62 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -828 [0xfffffffffffffcc4])) [0 rif_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:263 93 {*movqi_internal}
     (nil))
(insn 1084 1083 1085 62 (set (reg/f:DI 0 ax [726])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:264 89 {*movdi_internal}
     (nil))
(insn 1085 1084 1086 62 (parallel [
            (set (reg/f:DI 0 ax [orig:256 D.25259 ] [256])
                (plus:DI (reg/f:DI 0 ax [726])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:264 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1086 1085 1876 62 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:256 D.25259 ] [256])
                (const_int 52 [0x34])) [0 _292->pre_quecc_if+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:264 90 {*movsi_internal}
     (nil))
(jump_insn 1876 1086 1877 62 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1877 1876 1089)
;; basic block 63, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 257 258 259 260 261 727 728
(code_label 1089 1877 1090 63 35 "" [1 uses])
(note 1090 1089 1091 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1091 1090 1092 63 (set (reg:SI 0 ax [727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:267 90 {*movsi_internal}
     (nil))
(insn 1092 1091 1093 63 (set (reg:DI 0 ax [orig:257 D.25258 ] [257])
        (sign_extend:DI (reg:SI 0 ax [727]))) ge2fitman_com_line.cpp:267 142 {*extendsidi2_rex64}
     (nil))
(insn 1093 1092 1094 63 (parallel [
            (set (reg:DI 1 dx [orig:258 D.25258 ] [258])
                (ashift:DI (reg:DI 0 ax [orig:257 D.25258 ] [257])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:267 512 {*ashldi3_1}
     (nil))
(insn 1094 1093 1095 63 (set (reg/f:DI 0 ax [728])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1095 1094 1096 63 (parallel [
            (set (reg/f:DI 0 ax [orig:259 D.25260 ] [259])
                (plus:DI (reg/f:DI 0 ax [728])
                    (reg:DI 1 dx [orig:258 D.25258 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:267 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:258 D.25258 ] [258]))
        (nil)))
(insn 1096 1095 1097 63 (set (reg/f:DI 0 ax [orig:260 D.25261 ] [260])
        (mem/f:DI (reg/f:DI 0 ax [orig:259 D.25260 ] [259]) [0 *_296+0 S8 A64])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f6be97f0c60 *.LC16>)) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(insn 1098 1097 1099 63 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:260 D.25261 ] [260])) ge2fitman_com_line.cpp:267 89 {*movdi_internal}
     (nil))
(call_insn/i 1099 1098 1100 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:267 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1100 1099 1101 63 (set (reg:SI 0 ax [orig:261 D.25257 ] [261])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:267 90 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:261 D.25257 ] [261])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:267 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1102 1101 1103 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1109)
            (pc))) ge2fitman_com_line.cpp:267 612 {*jcc_1}
     (nil)
 -> 1109)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 729
(note 1103 1102 1104 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 64 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:269 93 {*movqi_internal}
     (nil))
(insn 1105 1104 1106 64 (set (reg/f:DI 0 ax [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:270 89 {*movdi_internal}
     (nil))
(insn 1106 1105 1878 64 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [729])
                (const_int 16 [0x10])) [0 preprocess_63(D)->bc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:270 90 {*movsi_internal}
     (nil))
(jump_insn 1878 1106 1879 64 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1879 1878 1109)
;; basic block 65, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 262 263 264 265 266 730 731
(code_label 1109 1879 1110 65 36 "" [1 uses])
(note 1110 1109 1111 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 65 (set (reg:SI 0 ax [730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:273 90 {*movsi_internal}
     (nil))
(insn 1112 1111 1113 65 (set (reg:DI 0 ax [orig:262 D.25258 ] [262])
        (sign_extend:DI (reg:SI 0 ax [730]))) ge2fitman_com_line.cpp:273 142 {*extendsidi2_rex64}
     (nil))
(insn 1113 1112 1114 65 (parallel [
            (set (reg:DI 1 dx [orig:263 D.25258 ] [263])
                (ashift:DI (reg:DI 0 ax [orig:262 D.25258 ] [262])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:273 512 {*ashldi3_1}
     (nil))
(insn 1114 1113 1115 65 (set (reg/f:DI 0 ax [731])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1115 1114 1116 65 (parallel [
            (set (reg/f:DI 0 ax [orig:264 D.25260 ] [264])
                (plus:DI (reg/f:DI 0 ax [731])
                    (reg:DI 1 dx [orig:263 D.25258 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:273 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:263 D.25258 ] [263]))
        (nil)))
(insn 1116 1115 1117 65 (set (reg/f:DI 0 ax [orig:265 D.25261 ] [265])
        (mem/f:DI (reg/f:DI 0 ax [orig:264 D.25260 ] [264]) [0 *_303+0 S8 A64])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1117 1116 1118 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f6be97f0cf0 *.LC17>)) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(insn 1118 1117 1119 65 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:265 D.25261 ] [265])) ge2fitman_com_line.cpp:273 89 {*movdi_internal}
     (nil))
(call_insn/i 1119 1118 1120 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:273 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1120 1119 1121 65 (set (reg:SI 0 ax [orig:266 D.25257 ] [266])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:273 90 {*movsi_internal}
     (nil))
(insn 1121 1120 1122 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:266 D.25257 ] [266])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:273 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1122 1121 1123 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1131)
            (pc))) ge2fitman_com_line.cpp:273 612 {*jcc_1}
     (nil)
 -> 1131)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 267 732
(note 1123 1122 1124 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1124 1123 1125 66 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:275 93 {*movqi_internal}
     (nil))
(insn 1125 1124 1126 66 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -829 [0xfffffffffffffcc3])) [0 rbc_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:276 93 {*movqi_internal}
     (nil))
(insn 1126 1125 1127 66 (set (reg/f:DI 0 ax [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:277 89 {*movdi_internal}
     (nil))
(insn 1127 1126 1128 66 (parallel [
            (set (reg/f:DI 0 ax [orig:267 D.25259 ] [267])
                (plus:DI (reg/f:DI 0 ax [732])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:277 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1128 1127 1880 66 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:267 D.25259 ] [267])
                (const_int 16 [0x10])) [0 _308->bc+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:277 90 {*movsi_internal}
     (nil))
(jump_insn 1880 1128 1881 66 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1881 1880 1131)
;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 268 269 270 271 272 733 734
(code_label 1131 1881 1132 67 37 "" [1 uses])
(note 1132 1131 1133 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1133 1132 1134 67 (set (reg:SI 0 ax [733])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:279 90 {*movsi_internal}
     (nil))
(insn 1134 1133 1135 67 (set (reg:DI 0 ax [orig:268 D.25258 ] [268])
        (sign_extend:DI (reg:SI 0 ax [733]))) ge2fitman_com_line.cpp:279 142 {*extendsidi2_rex64}
     (nil))
(insn 1135 1134 1136 67 (parallel [
            (set (reg:DI 1 dx [orig:269 D.25258 ] [269])
                (ashift:DI (reg:DI 0 ax [orig:268 D.25258 ] [268])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:279 512 {*ashldi3_1}
     (nil))
(insn 1136 1135 1137 67 (set (reg/f:DI 0 ax [734])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1137 1136 1138 67 (parallel [
            (set (reg/f:DI 0 ax [orig:270 D.25260 ] [270])
                (plus:DI (reg/f:DI 0 ax [734])
                    (reg:DI 1 dx [orig:269 D.25258 ] [269])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:279 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:269 D.25258 ] [269]))
        (nil)))
(insn 1138 1137 1139 67 (set (reg/f:DI 0 ax [orig:271 D.25261 ] [271])
        (mem/f:DI (reg/f:DI 0 ax [orig:270 D.25260 ] [270]) [0 *_312+0 S8 A64])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1139 1138 1140 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f6be97f0d80 *.LC18>)) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(insn 1140 1139 1141 67 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:271 D.25261 ] [271])) ge2fitman_com_line.cpp:279 89 {*movdi_internal}
     (nil))
(call_insn/i 1141 1140 1142 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:279 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1142 1141 1143 67 (set (reg:SI 0 ax [orig:272 D.25257 ] [272])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:279 90 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:272 D.25257 ] [272])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:279 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1144 1143 1145 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1218)
            (pc))) ge2fitman_com_line.cpp:279 612 {*jcc_1}
     (nil)
 -> 1218)
;;  succ:       68 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1145 1144 1146 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1146 1145 1147 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:281 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1147 1146 1148 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1151)
            (pc))) ge2fitman_com_line.cpp:281 612 {*jcc_1}
     (nil)
 -> 1151)
;;  succ:       70
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1148 1147 1149 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1149 1148 1150 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:281 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1150 1149 1151 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1156)
            (pc))) ge2fitman_com_line.cpp:281 612 {*jcc_1}
     (nil)
 -> 1156)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68
;;              69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1151 1150 1152 70 39 "" [1 uses])
(note 1152 1151 1153 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1153 1152 1882 70 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -9 [0xfffffffffffffff7])) ge2fitman_com_line.cpp:283 90 {*movsi_internal}
     (nil))
(jump_insn 1882 1153 1883 70 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:283 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1883 1882 1156)
;; basic block 71, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 273 274 735
(code_label 1156 1883 1157 71 40 "" [1 uses])
(note 1157 1156 1158 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1158 1157 1159 71 (set (reg/f:DI 0 ax [735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(insn 1159 1158 1160 71 (parallel [
            (set (reg/f:DI 0 ax [orig:273 D.25265 ] [273])
                (plus:DI (reg/f:DI 0 ax [735])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:284 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1160 1159 1161 71 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6be97f0e10 *.LC19>)) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(insn 1161 1160 1162 71 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:273 D.25265 ] [273])) ge2fitman_com_line.cpp:284 89 {*movdi_internal}
     (nil))
(call_insn/i 1162 1161 1163 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:284 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1163 1162 1164 71 (set (reg:SI 0 ax [orig:274 D.25257 ] [274])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:284 90 {*movsi_internal}
     (nil))
(insn 1164 1163 1165 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:274 D.25257 ] [274])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:284 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1165 1164 1166 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1170)
            (pc))) ge2fitman_com_line.cpp:284 612 {*jcc_1}
     (nil)
 -> 1170)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1166 1165 1167 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1167 1166 1884 72 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:286 90 {*movsi_internal}
     (nil))
(jump_insn 1884 1167 1885 72 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:286 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1885 1884 1170)
;; basic block 73, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1170 1885 1171 73 41 "" [1 uses])
(note 1171 1170 1172 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 73 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:288 93 {*movqi_internal}
     (nil))
(insn 1173 1172 1174 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -830 [0xfffffffffffffcc2])) [0 rscale_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1174 1173 1175 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1181)
            (pc))) ge2fitman_com_line.cpp:289 612 {*jcc_1}
     (nil)
 -> 1181)
;;  succ:       76
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1175 1174 1176 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1176 1175 1177 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -829 [0xfffffffffffffcc3])) [0 rbc_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1177 1176 1178 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1181)
            (pc))) ge2fitman_com_line.cpp:289 612 {*jcc_1}
     (nil)
 -> 1181)
;;  succ:       76
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1178 1177 1179 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1179 1178 1180 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -828 [0xfffffffffffffcc4])) [0 rif_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:289 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1180 1179 1181 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1184)
            (pc))) ge2fitman_com_line.cpp:289 612 {*jcc_1}
     (nil)
 -> 1184)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73
;;              74
;;              75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1181 1180 1182 76 42 "" [2 uses])
(note 1182 1181 1183 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(call_insn 1183 1182 1184 76 (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_21v") [flags 0x41]  <function_decl 0x7f6be9b511b0 cond_exit_21>) [0 cond_exit_21 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:291 660 {*call}
     (nil)
    (nil))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75
;;              76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 275 276 277 278 279 280 281 282 283 284 285 286 736 737 738 739 740 741 742 743 744 745 746 747
(code_label 1184 1183 1185 77 43 "" [1 uses])
(note 1185 1184 1186 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1186 1185 1187 77 (set (reg/f:DI 0 ax [736])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:293 89 {*movdi_internal}
     (nil))
(insn 1187 1186 1188 77 (parallel [
            (set (reg/f:DI 1 dx [orig:275 D.25259 ] [275])
                (plus:DI (reg/f:DI 0 ax [736])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:293 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1188 1187 1189 77 (set (reg/f:DI 0 ax [737])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:293 89 {*movdi_internal}
     (nil))
(insn 1189 1188 1190 77 (set (reg:SI 0 ax [orig:276 D.25257 ] [276])
        (mem/j:SI (reg/f:DI 0 ax [737]) [0 preprocess_63(D)->fid_scale+0 S4 A32])) ge2fitman_com_line.cpp:293 90 {*movsi_internal}
     (nil))
(insn 1190 1189 1191 77 (set (mem/j:SI (reg/f:DI 1 dx [orig:275 D.25259 ] [275]) [0 _320->fid_scale+0 S4 A32])
        (reg:SI 0 ax [orig:276 D.25257 ] [276])) ge2fitman_com_line.cpp:293 90 {*movsi_internal}
     (nil))
(insn 1191 1190 1192 77 (set (reg/f:DI 0 ax [738])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:294 89 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 77 (parallel [
            (set (reg/f:DI 1 dx [orig:277 D.25259 ] [277])
                (plus:DI (reg/f:DI 0 ax [738])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:294 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1193 1192 1194 77 (set (reg/f:DI 0 ax [739])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:294 89 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 77 (set (reg:SF 21 xmm0 [orig:278 D.25266 ] [278])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [739])
                (const_int 4 [0x4])) [0 preprocess_63(D)->scale_factor+0 S4 A32])) ge2fitman_com_line.cpp:294 129 {*movsf_internal}
     (nil))
(insn 1195 1194 1196 77 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:277 D.25259 ] [277])
                (const_int 4 [0x4])) [0 _323->scale_factor+0 S4 A32])
        (reg:SF 21 xmm0 [orig:278 D.25266 ] [278])) ge2fitman_com_line.cpp:294 129 {*movsf_internal}
     (nil))
(insn 1196 1195 1197 77 (set (reg/f:DI 0 ax [740])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:295 89 {*movdi_internal}
     (nil))
(insn 1197 1196 1198 77 (parallel [
            (set (reg/f:DI 1 dx [orig:279 D.25259 ] [279])
                (plus:DI (reg/f:DI 0 ax [740])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:295 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1198 1197 1199 77 (set (reg/f:DI 0 ax [741])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:295 89 {*movdi_internal}
     (nil))
(insn 1199 1198 1200 77 (set (reg:SI 0 ax [orig:280 D.25257 ] [280])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [741])
                (const_int 8 [0x8])) [0 preprocess_63(D)->scaleby+0 S4 A32])) ge2fitman_com_line.cpp:295 90 {*movsi_internal}
     (nil))
(insn 1200 1199 1201 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:279 D.25259 ] [279])
                (const_int 8 [0x8])) [0 _326->scaleby+0 S4 A32])
        (reg:SI 0 ax [orig:280 D.25257 ] [280])) ge2fitman_com_line.cpp:295 90 {*movsi_internal}
     (nil))
(insn 1201 1200 1202 77 (set (reg/f:DI 0 ax [742])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:296 89 {*movdi_internal}
     (nil))
(insn 1202 1201 1203 77 (parallel [
            (set (reg/f:DI 1 dx [orig:281 D.25259 ] [281])
                (plus:DI (reg/f:DI 0 ax [742])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:296 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1203 1202 1204 77 (set (reg/f:DI 0 ax [743])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:296 89 {*movdi_internal}
     (nil))
(insn 1204 1203 1205 77 (set (reg:SI 0 ax [orig:282 D.25257 ] [282])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [743])
                (const_int 16 [0x10])) [0 preprocess_63(D)->bc+0 S4 A32])) ge2fitman_com_line.cpp:296 90 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:281 D.25259 ] [281])
                (const_int 16 [0x10])) [0 _329->bc+0 S4 A32])
        (reg:SI 0 ax [orig:282 D.25257 ] [282])) ge2fitman_com_line.cpp:296 90 {*movsi_internal}
     (nil))
(insn 1206 1205 1207 77 (set (reg/f:DI 0 ax [744])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:297 89 {*movdi_internal}
     (nil))
(insn 1207 1206 1208 77 (parallel [
            (set (reg/f:DI 1 dx [orig:283 D.25259 ] [283])
                (plus:DI (reg/f:DI 0 ax [744])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:297 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1208 1207 1209 77 (set (reg/f:DI 0 ax [745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:297 89 {*movdi_internal}
     (nil))
(insn 1209 1208 1210 77 (set (reg:SI 0 ax [orig:284 D.25257 ] [284])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [745])
                (const_int 52 [0x34])) [0 preprocess_63(D)->pre_quecc_if+0 S4 A32])) ge2fitman_com_line.cpp:297 90 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 77 (set (mem/j:SI (plus:DI (reg/f:DI 1 dx [orig:283 D.25259 ] [283])
                (const_int 52 [0x34])) [0 _332->pre_quecc_if+0 S4 A32])
        (reg:SI 0 ax [orig:284 D.25257 ] [284])) ge2fitman_com_line.cpp:297 90 {*movsi_internal}
     (nil))
(insn 1211 1210 1212 77 (set (reg/f:DI 0 ax [746])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:298 89 {*movdi_internal}
     (nil))
(insn 1212 1211 1213 77 (parallel [
            (set (reg/f:DI 1 dx [orig:285 D.25259 ] [285])
                (plus:DI (reg/f:DI 0 ax [746])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:298 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -840 [0xfffffffffffffcb8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 1213 1212 1214 77 (set (reg/f:DI 0 ax [747])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:298 89 {*movdi_internal}
     (nil))
(insn 1214 1213 1215 77 (set (reg:SF 21 xmm0 [orig:286 D.25266 ] [286])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [747])
                (const_int 28 [0x1c])) [0 preprocess_63(D)->comp_filter+0 S4 A32])) ge2fitman_com_line.cpp:298 129 {*movsf_internal}
     (nil))
(insn 1215 1214 1886 77 (set (mem/j:SF (plus:DI (reg/f:DI 1 dx [orig:285 D.25259 ] [285])
                (const_int 28 [0x1c])) [0 _335->comp_filter+0 S4 A32])
        (reg:SF 21 xmm0 [orig:286 D.25266 ] [286])) ge2fitman_com_line.cpp:298 129 {*movsf_internal}
     (nil))
(jump_insn 1886 1215 1887 77 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1887 1886 1218)
;; basic block 78, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 287 288 289 290 291 748 749
(code_label 1218 1887 1219 78 38 "" [1 uses])
(note 1219 1218 1220 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1220 1219 1221 78 (set (reg:SI 0 ax [748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:301 90 {*movsi_internal}
     (nil))
(insn 1221 1220 1222 78 (set (reg:DI 0 ax [orig:287 D.25258 ] [287])
        (sign_extend:DI (reg:SI 0 ax [748]))) ge2fitman_com_line.cpp:301 142 {*extendsidi2_rex64}
     (nil))
(insn 1222 1221 1223 78 (parallel [
            (set (reg:DI 1 dx [orig:288 D.25258 ] [288])
                (ashift:DI (reg:DI 0 ax [orig:287 D.25258 ] [287])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:301 512 {*ashldi3_1}
     (nil))
(insn 1223 1222 1224 78 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1224 1223 1225 78 (parallel [
            (set (reg/f:DI 0 ax [orig:289 D.25260 ] [289])
                (plus:DI (reg/f:DI 0 ax [749])
                    (reg:DI 1 dx [orig:288 D.25258 ] [288])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:301 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:288 D.25258 ] [288]))
        (nil)))
(insn 1225 1224 1226 78 (set (reg/f:DI 0 ax [orig:290 D.25261 ] [290])
        (mem/f:DI (reg/f:DI 0 ax [orig:289 D.25260 ] [289]) [0 *_342+0 S8 A64])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1226 1225 1227 78 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f6be97f0ea0 *.LC20>)) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(insn 1227 1226 1228 78 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:290 D.25261 ] [290])) ge2fitman_com_line.cpp:301 89 {*movdi_internal}
     (nil))
(call_insn/i 1228 1227 1229 78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:301 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1229 1228 1230 78 (set (reg:SI 0 ax [orig:291 D.25257 ] [291])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:301 90 {*movsi_internal}
     (nil))
(insn 1230 1229 1231 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:291 D.25257 ] [291])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:301 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1231 1230 1232 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1262)
            (pc))) ge2fitman_com_line.cpp:301 612 {*jcc_1}
     (nil)
 -> 1262)
;;  succ:       79 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 79, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1232 1231 1233 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1233 1232 1234 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:303 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1234 1233 1235 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1238)
            (pc))) ge2fitman_com_line.cpp:303 612 {*jcc_1}
     (nil)
 -> 1238)
;;  succ:       81
;;              80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 80, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1235 1234 1236 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1236 1235 1237 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:303 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1237 1236 1238 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1243)
            (pc))) ge2fitman_com_line.cpp:303 612 {*jcc_1}
     (nil)
 -> 1243)
;;  succ:       81 (FALLTHRU)
;;              82
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79
;;              80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1238 1237 1239 81 45 "" [1 uses])
(note 1239 1238 1240 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1240 1239 1888 81 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -9 [0xfffffffffffffff7])) ge2fitman_com_line.cpp:305 90 {*movsi_internal}
     (nil))
(jump_insn 1888 1240 1889 81 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:305 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1889 1888 1243)
;; basic block 82, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 292 293 750
(code_label 1243 1889 1244 82 46 "" [1 uses])
(note 1244 1243 1245 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1245 1244 1246 82 (set (reg/f:DI 0 ax [750])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(insn 1246 1245 1247 82 (parallel [
            (set (reg/f:DI 0 ax [orig:292 D.25265 ] [292])
                (plus:DI (reg/f:DI 0 ax [750])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:306 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1247 1246 1248 82 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6be97f0e10 *.LC19>)) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(insn 1248 1247 1249 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:292 D.25265 ] [292])) ge2fitman_com_line.cpp:306 89 {*movdi_internal}
     (nil))
(call_insn/i 1249 1248 1250 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:306 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1250 1249 1251 82 (set (reg:SI 0 ax [orig:293 D.25257 ] [293])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:306 90 {*movsi_internal}
     (nil))
(insn 1251 1250 1252 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:293 D.25257 ] [293])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:306 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1252 1251 1253 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1257)
            (pc))) ge2fitman_com_line.cpp:306 612 {*jcc_1}
     (nil)
 -> 1257)
;;  succ:       83 (FALLTHRU)
;;              84
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1253 1252 1254 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1254 1253 1890 83 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:308 90 {*movsi_internal}
     (nil))
(jump_insn 1890 1254 1891 83 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:308 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1891 1890 1257)
;; basic block 84, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       82
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1257 1891 1258 84 47 "" [1 uses])
(note 1258 1257 1259 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1892 84 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:310 93 {*movqi_internal}
     (nil))
(jump_insn 1892 1259 1893 84 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1893 1892 1262)
;; basic block 85, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 294 295 296 297 298 751 752
(code_label 1262 1893 1263 85 44 "" [1 uses])
(note 1263 1262 1264 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1264 1263 1265 85 (set (reg:SI 0 ax [751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:314 90 {*movsi_internal}
     (nil))
(insn 1265 1264 1266 85 (set (reg:DI 0 ax [orig:294 D.25258 ] [294])
        (sign_extend:DI (reg:SI 0 ax [751]))) ge2fitman_com_line.cpp:314 142 {*extendsidi2_rex64}
     (nil))
(insn 1266 1265 1267 85 (parallel [
            (set (reg:DI 1 dx [orig:295 D.25258 ] [295])
                (ashift:DI (reg:DI 0 ax [orig:294 D.25258 ] [294])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:314 512 {*ashldi3_1}
     (nil))
(insn 1267 1266 1268 85 (set (reg/f:DI 0 ax [752])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1268 1267 1269 85 (parallel [
            (set (reg/f:DI 0 ax [orig:296 D.25260 ] [296])
                (plus:DI (reg/f:DI 0 ax [752])
                    (reg:DI 1 dx [orig:295 D.25258 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:314 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:295 D.25258 ] [295]))
        (nil)))
(insn 1269 1268 1270 85 (set (reg/f:DI 0 ax [orig:297 D.25261 ] [297])
        (mem/f:DI (reg/f:DI 0 ax [orig:296 D.25260 ] [296]) [0 *_352+0 S8 A64])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1270 1269 1271 85 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f6be97f0f30 *.LC21>)) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(insn 1271 1270 1272 85 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:297 D.25261 ] [297])) ge2fitman_com_line.cpp:314 89 {*movdi_internal}
     (nil))
(call_insn/i 1272 1271 1273 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:314 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1273 1272 1274 85 (set (reg:SI 0 ax [orig:298 D.25257 ] [298])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:314 90 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:298 D.25257 ] [298])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:314 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1275 1274 1276 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1292)
            (pc))) ge2fitman_com_line.cpp:314 612 {*jcc_1}
     (nil)
 -> 1292)
;;  succ:       86 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 86, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 299 753
(note 1276 1275 1277 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1277 1276 1278 86 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:316 93 {*movqi_internal}
     (nil))
(insn 1278 1277 1279 86 (set (reg/f:DI 0 ax [753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:317 89 {*movdi_internal}
     (nil))
(insn 1279 1278 1280 86 (set (reg:SI 0 ax [orig:299 D.25257 ] [299])
        (mem:SI (reg/f:DI 0 ax [753]) [0 *forced_swap_356(D)+0 S4 A32])) ge2fitman_com_line.cpp:317 90 {*movsi_internal}
     (nil))
(insn 1280 1279 1281 86 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:299 D.25257 ] [299])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:317 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1281 1280 1282 86 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1286)
            (pc))) ge2fitman_com_line.cpp:317 612 {*jcc_1}
     (nil)
 -> 1286)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1282 1281 1283 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1283 1282 1894 87 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:319 90 {*movsi_internal}
     (nil))
(jump_insn 1894 1283 1895 87 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:319 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1895 1894 1286)
;; basic block 88, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 754
(code_label 1286 1895 1287 88 49 "" [1 uses])
(note 1287 1286 1288 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1288 1287 1289 88 (set (reg/f:DI 0 ax [754])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:321 89 {*movdi_internal}
     (nil))
(insn 1289 1288 1896 88 (set (mem:SI (reg/f:DI 0 ax [754]) [0 *forced_swap_356(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:321 90 {*movsi_internal}
     (nil))
(jump_insn 1896 1289 1897 88 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1897 1896 1292)
;; basic block 89, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       85
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 300 301 302 303 304 755 756
(code_label 1292 1897 1293 89 48 "" [1 uses])
(note 1293 1292 1294 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1294 1293 1295 89 (set (reg:SI 0 ax [755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:325 90 {*movsi_internal}
     (nil))
(insn 1295 1294 1296 89 (set (reg:DI 0 ax [orig:300 D.25258 ] [300])
        (sign_extend:DI (reg:SI 0 ax [755]))) ge2fitman_com_line.cpp:325 142 {*extendsidi2_rex64}
     (nil))
(insn 1296 1295 1297 89 (parallel [
            (set (reg:DI 1 dx [orig:301 D.25258 ] [301])
                (ashift:DI (reg:DI 0 ax [orig:300 D.25258 ] [300])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:325 512 {*ashldi3_1}
     (nil))
(insn 1297 1296 1298 89 (set (reg/f:DI 0 ax [756])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1298 1297 1299 89 (parallel [
            (set (reg/f:DI 0 ax [orig:302 D.25260 ] [302])
                (plus:DI (reg/f:DI 0 ax [756])
                    (reg:DI 1 dx [orig:301 D.25258 ] [301])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:325 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:301 D.25258 ] [301]))
        (nil)))
(insn 1299 1298 1300 89 (set (reg/f:DI 0 ax [orig:303 D.25261 ] [303])
        (mem/f:DI (reg/f:DI 0 ax [orig:302 D.25260 ] [302]) [0 *_362+0 S8 A64])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1300 1299 1301 89 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f6be982d000 *.LC22>)) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(insn 1301 1300 1302 89 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:303 D.25261 ] [303])) ge2fitman_com_line.cpp:325 89 {*movdi_internal}
     (nil))
(call_insn/i 1302 1301 1303 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:325 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1303 1302 1304 89 (set (reg:SI 0 ax [orig:304 D.25257 ] [304])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:325 90 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:304 D.25257 ] [304])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:325 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1305 1304 1306 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) ge2fitman_com_line.cpp:325 612 {*jcc_1}
     (nil)
 -> 1324)
;;  succ:       90 (FALLTHRU)
;;              93
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 90, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 305 306 757
(note 1306 1305 1307 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1307 1306 1308 90 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:327 93 {*movqi_internal}
     (nil))
(insn 1308 1307 1309 90 (set (reg/f:DI 0 ax [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:328 89 {*movdi_internal}
     (nil))
(insn 1309 1308 1310 90 (parallel [
            (set (reg/f:DI 0 ax [orig:305 D.25267 ] [305])
                (plus:DI (reg/f:DI 0 ax [757])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:328 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -896 [0xfffffffffffffc80])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1310 1309 1311 90 (set (reg:SI 0 ax [orig:306 D.25257 ] [306])
        (mem:SI (reg/f:DI 0 ax [orig:305 D.25267 ] [305]) [0 *_366+0 S4 A32])) ge2fitman_com_line.cpp:328 90 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 90 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:306 D.25257 ] [306])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:328 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1312 1311 1313 90 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1317)
            (pc))) ge2fitman_com_line.cpp:328 612 {*jcc_1}
     (nil)
 -> 1317)
;;  succ:       91 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 91, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1313 1312 1314 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1314 1313 1898 91 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:330 90 {*movsi_internal}
     (nil))
(jump_insn 1898 1314 1899 91 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:330 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1899 1898 1317)
;; basic block 92, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       90
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 307 758
(code_label 1317 1899 1318 92 51 "" [1 uses])
(note 1318 1317 1319 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1318 1320 92 (set (reg/f:DI 0 ax [758])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:332 89 {*movdi_internal}
     (nil))
(insn 1320 1319 1321 92 (parallel [
            (set (reg/f:DI 0 ax [orig:307 D.25267 ] [307])
                (plus:DI (reg/f:DI 0 ax [758])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:332 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -896 [0xfffffffffffffc80])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1321 1320 1900 92 (set (mem:SI (reg/f:DI 0 ax [orig:307 D.25267 ] [307]) [0 *_368+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:332 90 {*movsi_internal}
     (nil))
(jump_insn 1900 1321 1901 92 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1901 1900 1324)
;; basic block 93, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       89
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 308 309 310 311 312 759 760
(code_label 1324 1901 1325 93 50 "" [1 uses])
(note 1325 1324 1326 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1325 1327 93 (set (reg:SI 0 ax [759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:336 90 {*movsi_internal}
     (nil))
(insn 1327 1326 1328 93 (set (reg:DI 0 ax [orig:308 D.25258 ] [308])
        (sign_extend:DI (reg:SI 0 ax [759]))) ge2fitman_com_line.cpp:336 142 {*extendsidi2_rex64}
     (nil))
(insn 1328 1327 1329 93 (parallel [
            (set (reg:DI 1 dx [orig:309 D.25258 ] [309])
                (ashift:DI (reg:DI 0 ax [orig:308 D.25258 ] [308])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:336 512 {*ashldi3_1}
     (nil))
(insn 1329 1328 1330 93 (set (reg/f:DI 0 ax [760])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1330 1329 1331 93 (parallel [
            (set (reg/f:DI 0 ax [orig:310 D.25260 ] [310])
                (plus:DI (reg/f:DI 0 ax [760])
                    (reg:DI 1 dx [orig:309 D.25258 ] [309])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:336 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:309 D.25258 ] [309]))
        (nil)))
(insn 1331 1330 1332 93 (set (reg/f:DI 0 ax [orig:311 D.25261 ] [311])
        (mem/f:DI (reg/f:DI 0 ax [orig:310 D.25260 ] [310]) [0 *_373+0 S8 A64])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1332 1331 1333 93 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f6be982d090 *.LC23>)) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(insn 1333 1332 1334 93 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:311 D.25261 ] [311])) ge2fitman_com_line.cpp:336 89 {*movdi_internal}
     (nil))
(call_insn/i 1334 1333 1335 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:336 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1335 1334 1336 93 (set (reg:SI 0 ax [orig:312 D.25257 ] [312])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:336 90 {*movsi_internal}
     (nil))
(insn 1336 1335 1337 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:312 D.25257 ] [312])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:336 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1337 1336 1338 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1354)
            (pc))) ge2fitman_com_line.cpp:336 612 {*jcc_1}
     (nil)
 -> 1354)
;;  succ:       94 (FALLTHRU)
;;              97
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 313 761
(note 1338 1337 1339 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 94 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:338 93 {*movqi_internal}
     (nil))
(insn 1340 1339 1341 94 (set (reg/f:DI 0 ax [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:339 89 {*movdi_internal}
     (nil))
(insn 1341 1340 1342 94 (set (reg:SI 0 ax [orig:313 D.25257 ] [313])
        (mem:SI (reg/f:DI 0 ax [761]) [0 *forced_swap_356(D)+0 S4 A32])) ge2fitman_com_line.cpp:339 90 {*movsi_internal}
     (nil))
(insn 1342 1341 1343 94 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:313 D.25257 ] [313])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:339 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1343 1342 1344 94 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1348)
            (pc))) ge2fitman_com_line.cpp:339 612 {*jcc_1}
     (nil)
 -> 1348)
;;  succ:       95 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1344 1343 1345 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 1902 95 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:341 90 {*movsi_internal}
     (nil))
(jump_insn 1902 1345 1903 95 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:341 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1903 1902 1348)
;; basic block 96, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       94
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 762
(code_label 1348 1903 1349 96 53 "" [1 uses])
(note 1349 1348 1350 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1350 1349 1351 96 (set (reg/f:DI 0 ax [762])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:343 89 {*movdi_internal}
     (nil))
(insn 1351 1350 1904 96 (set (mem:SI (reg/f:DI 0 ax [762]) [0 *forced_swap_356(D)+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:343 90 {*movsi_internal}
     (nil))
(jump_insn 1904 1351 1905 96 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1905 1904 1354)
;; basic block 97, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       93
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 314 315 316 317 318 763 764
(code_label 1354 1905 1355 97 52 "" [1 uses])
(note 1355 1354 1356 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1356 1355 1357 97 (set (reg:SI 0 ax [763])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:347 90 {*movsi_internal}
     (nil))
(insn 1357 1356 1358 97 (set (reg:DI 0 ax [orig:314 D.25258 ] [314])
        (sign_extend:DI (reg:SI 0 ax [763]))) ge2fitman_com_line.cpp:347 142 {*extendsidi2_rex64}
     (nil))
(insn 1358 1357 1359 97 (parallel [
            (set (reg:DI 1 dx [orig:315 D.25258 ] [315])
                (ashift:DI (reg:DI 0 ax [orig:314 D.25258 ] [314])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:347 512 {*ashldi3_1}
     (nil))
(insn 1359 1358 1360 97 (set (reg/f:DI 0 ax [764])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1360 1359 1361 97 (parallel [
            (set (reg/f:DI 0 ax [orig:316 D.25260 ] [316])
                (plus:DI (reg/f:DI 0 ax [764])
                    (reg:DI 1 dx [orig:315 D.25258 ] [315])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:347 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:315 D.25258 ] [315]))
        (nil)))
(insn 1361 1360 1362 97 (set (reg/f:DI 0 ax [orig:317 D.25261 ] [317])
        (mem/f:DI (reg/f:DI 0 ax [orig:316 D.25260 ] [316]) [0 *_382+0 S8 A64])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1362 1361 1363 97 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f6be982d120 *.LC24>)) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(insn 1363 1362 1364 97 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:317 D.25261 ] [317])) ge2fitman_com_line.cpp:347 89 {*movdi_internal}
     (nil))
(call_insn/i 1364 1363 1365 97 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:347 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1365 1364 1366 97 (set (reg:SI 0 ax [orig:318 D.25257 ] [318])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:347 90 {*movsi_internal}
     (nil))
(insn 1366 1365 1367 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:318 D.25257 ] [318])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:347 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1367 1366 1368 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1386)
            (pc))) ge2fitman_com_line.cpp:347 612 {*jcc_1}
     (nil)
 -> 1386)
;;  succ:       98 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 319 320 765
(note 1368 1367 1369 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1369 1368 1370 98 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:349 93 {*movqi_internal}
     (nil))
(insn 1370 1369 1371 98 (set (reg/f:DI 0 ax [765])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:350 89 {*movdi_internal}
     (nil))
(insn 1371 1370 1372 98 (parallel [
            (set (reg/f:DI 0 ax [orig:319 D.25267 ] [319])
                (plus:DI (reg/f:DI 0 ax [765])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:350 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -896 [0xfffffffffffffc80])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1372 1371 1373 98 (set (reg:SI 0 ax [orig:320 D.25257 ] [320])
        (mem:SI (reg/f:DI 0 ax [orig:319 D.25267 ] [319]) [0 *_386+0 S4 A32])) ge2fitman_com_line.cpp:350 90 {*movsi_internal}
     (nil))
(insn 1373 1372 1374 98 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:320 D.25257 ] [320])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:350 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1374 1373 1375 98 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1379)
            (pc))) ge2fitman_com_line.cpp:350 612 {*jcc_1}
     (nil)
 -> 1379)
;;  succ:       99 (FALLTHRU)
;;              100
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1375 1374 1376 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1376 1375 1906 99 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -10 [0xfffffffffffffff6])) ge2fitman_com_line.cpp:352 90 {*movsi_internal}
     (nil))
(jump_insn 1906 1376 1907 99 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:352 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1907 1906 1379)
;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 321 766
(code_label 1379 1907 1380 100 55 "" [1 uses])
(note 1380 1379 1381 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1381 1380 1382 100 (set (reg/f:DI 0 ax [766])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -912 [0xfffffffffffffc70])) [0 forced_swap+0 S8 A64])) ge2fitman_com_line.cpp:354 89 {*movdi_internal}
     (nil))
(insn 1382 1381 1383 100 (parallel [
            (set (reg/f:DI 0 ax [orig:321 D.25267 ] [321])
                (plus:DI (reg/f:DI 0 ax [766])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:354 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -896 [0xfffffffffffffc80])) [0 forced_swap+0 S8 A64])
            (const_int 4 [0x4]))
        (nil)))
(insn 1383 1382 1908 100 (set (mem:SI (reg/f:DI 0 ax [orig:321 D.25267 ] [321]) [0 *_388+0 S4 A32])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:354 90 {*movsi_internal}
     (nil))
(jump_insn 1908 1383 1909 100 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1909 1908 1386)
;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       97
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 322 323 324 325 326 767 768
(code_label 1386 1909 1387 101 54 "" [1 uses])
(note 1387 1386 1388 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1388 1387 1389 101 (set (reg:SI 0 ax [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:358 90 {*movsi_internal}
     (nil))
(insn 1389 1388 1390 101 (set (reg:DI 0 ax [orig:322 D.25258 ] [322])
        (sign_extend:DI (reg:SI 0 ax [767]))) ge2fitman_com_line.cpp:358 142 {*extendsidi2_rex64}
     (nil))
(insn 1390 1389 1391 101 (parallel [
            (set (reg:DI 1 dx [orig:323 D.25258 ] [323])
                (ashift:DI (reg:DI 0 ax [orig:322 D.25258 ] [322])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:358 512 {*ashldi3_1}
     (nil))
(insn 1391 1390 1392 101 (set (reg/f:DI 0 ax [768])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1392 1391 1393 101 (parallel [
            (set (reg/f:DI 0 ax [orig:324 D.25260 ] [324])
                (plus:DI (reg/f:DI 0 ax [768])
                    (reg:DI 1 dx [orig:323 D.25258 ] [323])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:358 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:323 D.25258 ] [323]))
        (nil)))
(insn 1393 1392 1394 101 (set (reg/f:DI 0 ax [orig:325 D.25261 ] [325])
        (mem/f:DI (reg/f:DI 0 ax [orig:324 D.25260 ] [324]) [0 *_393+0 S8 A64])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1394 1393 1395 101 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f6be982d1b0 *.LC25>)) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(insn 1395 1394 1396 101 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:325 D.25261 ] [325])) ge2fitman_com_line.cpp:358 89 {*movdi_internal}
     (nil))
(call_insn/i 1396 1395 1397 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:358 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1397 1396 1398 101 (set (reg:SI 0 ax [orig:326 D.25257 ] [326])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:358 90 {*movsi_internal}
     (nil))
(insn 1398 1397 1399 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:326 D.25257 ] [326])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:358 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1399 1398 1400 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1405)
            (pc))) ge2fitman_com_line.cpp:358 612 {*jcc_1}
     (nil)
 -> 1405)
;;  succ:       102 (FALLTHRU)
;;              103
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 769
(note 1400 1399 1401 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1401 1400 1402 102 (set (reg/f:DI 0 ax [769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -920 [0xfffffffffffffc68])) [0 overwrite+0 S8 A64])) ge2fitman_com_line.cpp:359 89 {*movdi_internal}
     (nil))
(insn 1402 1401 1910 102 (set (mem:QI (reg/f:DI 0 ax [769]) [0 *overwrite_396(D)+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:359 93 {*movqi_internal}
     (nil))
(jump_insn 1910 1402 1911 102 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1911 1910 1405)
;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       101
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 327 328 329 330 331 770 771
(code_label 1405 1911 1406 103 56 "" [1 uses])
(note 1406 1405 1407 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1407 1406 1408 103 (set (reg:SI 0 ax [770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:362 90 {*movsi_internal}
     (nil))
(insn 1408 1407 1409 103 (set (reg:DI 0 ax [orig:327 D.25258 ] [327])
        (sign_extend:DI (reg:SI 0 ax [770]))) ge2fitman_com_line.cpp:362 142 {*extendsidi2_rex64}
     (nil))
(insn 1409 1408 1410 103 (parallel [
            (set (reg:DI 1 dx [orig:328 D.25258 ] [328])
                (ashift:DI (reg:DI 0 ax [orig:327 D.25258 ] [327])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:362 512 {*ashldi3_1}
     (nil))
(insn 1410 1409 1411 103 (set (reg/f:DI 0 ax [771])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1411 1410 1412 103 (parallel [
            (set (reg/f:DI 0 ax [orig:329 D.25260 ] [329])
                (plus:DI (reg/f:DI 0 ax [771])
                    (reg:DI 1 dx [orig:328 D.25258 ] [328])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:362 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:328 D.25258 ] [328]))
        (nil)))
(insn 1412 1411 1413 103 (set (reg/f:DI 0 ax [orig:330 D.25261 ] [330])
        (mem/f:DI (reg/f:DI 0 ax [orig:329 D.25260 ] [329]) [0 *_400+0 S8 A64])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1413 1412 1414 103 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f6be982d240 *.LC26>)) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(insn 1414 1413 1415 103 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:330 D.25261 ] [330])) ge2fitman_com_line.cpp:362 89 {*movdi_internal}
     (nil))
(call_insn/i 1415 1414 1416 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:362 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1416 1415 1417 103 (set (reg:SI 0 ax [orig:331 D.25257 ] [331])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:362 90 {*movsi_internal}
     (nil))
(insn 1417 1416 1418 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:331 D.25257 ] [331])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:362 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1418 1417 1419 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1424)
            (pc))) ge2fitman_com_line.cpp:362 612 {*jcc_1}
     (nil)
 -> 1424)
;;  succ:       104 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 772
(note 1419 1418 1420 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1420 1419 1421 104 (set (reg/f:DI 0 ax [772])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -928 [0xfffffffffffffc60])) [0 verbose+0 S8 A64])) ge2fitman_com_line.cpp:363 89 {*movdi_internal}
     (nil))
(insn 1421 1420 1912 104 (set (mem:QI (reg/f:DI 0 ax [772]) [0 *verbose_403(D)+0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:363 93 {*movqi_internal}
     (nil))
(jump_insn 1912 1421 1913 104 (set (pc)
        (label_ref 1451)) 654 {jump}
     (nil)
 -> 1451)
;;  succ:       108 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1913 1912 1424)
;; basic block 105, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       103
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 332 333 334 335 336 773 774
(code_label 1424 1913 1425 105 57 "" [1 uses])
(note 1425 1424 1426 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1426 1425 1427 105 (set (reg:SI 0 ax [773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:366 90 {*movsi_internal}
     (nil))
(insn 1427 1426 1428 105 (set (reg:DI 0 ax [orig:332 D.25258 ] [332])
        (sign_extend:DI (reg:SI 0 ax [773]))) ge2fitman_com_line.cpp:366 142 {*extendsidi2_rex64}
     (nil))
(insn 1428 1427 1429 105 (parallel [
            (set (reg:DI 1 dx [orig:333 D.25258 ] [333])
                (ashift:DI (reg:DI 0 ax [orig:332 D.25258 ] [332])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:366 512 {*ashldi3_1}
     (nil))
(insn 1429 1428 1430 105 (set (reg/f:DI 0 ax [774])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -888 [0xfffffffffffffc88])) [0 argv+0 S8 A64])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1430 1429 1431 105 (parallel [
            (set (reg/f:DI 0 ax [orig:334 D.25260 ] [334])
                (plus:DI (reg/f:DI 0 ax [774])
                    (reg:DI 1 dx [orig:333 D.25258 ] [333])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:366 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -872 [0xfffffffffffffc98])) [0 argv+0 S8 A64])
            (reg:DI 1 dx [orig:333 D.25258 ] [333]))
        (nil)))
(insn 1431 1430 1432 105 (set (reg/f:DI 0 ax [orig:335 D.25261 ] [335])
        (mem/f:DI (reg/f:DI 0 ax [orig:334 D.25260 ] [334]) [0 *_407+0 S8 A64])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1432 1431 1433 105 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f6be982d2d0 *.LC27>)) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(insn 1433 1432 1434 105 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:335 D.25261 ] [335])) ge2fitman_com_line.cpp:366 89 {*movdi_internal}
     (nil))
(call_insn/i 1434 1433 1435 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:366 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1435 1434 1436 105 (set (reg:SI 0 ax [orig:336 D.25257 ] [336])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:366 90 {*movsi_internal}
     (nil))
(insn 1436 1435 1437 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:336 D.25257 ] [336])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:366 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1437 1436 1438 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1443)
            (pc))) ge2fitman_com_line.cpp:366 612 {*jcc_1}
     (nil)
 -> 1443)
;;  succ:       106 (FALLTHRU)
;;              107
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1438 1437 1439 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(call_insn 1439 1438 1440 106 (call (mem:QI (symbol_ref:DI ("_Z13print_versionv") [flags 0x41]  <function_decl 0x7f6be9b48bd0 print_version>) [0 print_version S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:367 660 {*call}
     (nil)
    (nil))
(insn 1440 1439 1441 106 (set (reg:SI 5 di)
        (const_int 0 [0])) ge2fitman_com_line.cpp:368 90 {*movsi_internal}
     (nil))
(call_insn 1441 1440 1442 106 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f6beafb3ca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:368 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1442 1441 1443)
;; basic block 107, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       105
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 775 776
(code_label 1443 1442 1444 107 58 "" [1 uses])
(note 1444 1443 1445 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1445 1444 1446 107 (set (reg/f:DI 0 ax [775])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -904 [0xfffffffffffffc78])) [0 arg_read+0 S8 A64])) ge2fitman_com_line.cpp:372 89 {*movdi_internal}
     (nil))
(insn 1446 1445 1447 107 (set (reg:SI 1 dx [776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])) ge2fitman_com_line.cpp:372 90 {*movsi_internal}
     (nil))
(insn 1447 1446 1448 107 (set (mem:SI (reg/f:DI 0 ax [775]) [0 *arg_read_410(D)+0 S4 A32])
        (reg:SI 1 dx [776])) ge2fitman_com_line.cpp:372 90 {*movsi_internal}
     (nil))
(insn 1448 1447 1914 107 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -2 [0xfffffffffffffffe])) ge2fitman_com_line.cpp:373 90 {*movsi_internal}
     (nil))
(jump_insn 1914 1448 1915 107 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:373 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1915 1914 1451)
;; basic block 108, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              10 [100.0%] 
;;              27 [100.0%] 
;;              35 [100.0%] 
;;              39 [100.0%] 
;;              44 [100.0%] 
;;              50 [100.0%] 
;;              55 [100.0%] 
;;              58 [100.0%] 
;;              60 [100.0%] 
;;              62 [100.0%] 
;;              64 [100.0%] 
;;              66 [100.0%] 
;;              77 [100.0%] 
;;              84 [100.0%] 
;;              88 [100.0%] 
;;              92 [100.0%] 
;;              96 [100.0%] 
;;              100 [100.0%] 
;;              102 [100.0%] 
;;              104 [100.0%] 
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1451 1915 1452 108 8 "" [21 uses])
(note 1452 1451 1453 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1453 1452 1916 108 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -820 [0xfffffffffffffccc])) [0 argc_counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:377 217 {*addsi_1}
     (nil))
(jump_insn 1916 1453 1917 108 (set (pc)
        (label_ref 1454)) ge2fitman_com_line.cpp:100 654 {jump}
     (nil)
 -> 1454)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1917 1916 1457)
;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1457 1917 1458 109 4 "" [1 uses])
(note 1458 1457 1459 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1459 1458 1460 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 3 [0x3]))) ge2fitman_com_line.cpp:384 7 {*cmpsi_1}
     (nil))
(jump_insn 1460 1459 1461 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1493)
            (pc))) ge2fitman_com_line.cpp:384 612 {*jcc_1}
     (nil)
 -> 1493)
;;  succ:       110 (FALLTHRU)
;;              117
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1461 1460 1462 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 1463 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:386 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1463 1462 1464 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1467)
            (pc))) ge2fitman_com_line.cpp:386 612 {*jcc_1}
     (nil)
 -> 1467)
;;  succ:       112
;;              111 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1464 1463 1465 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1465 1464 1466 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:386 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1466 1465 1467 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1472)
            (pc))) ge2fitman_com_line.cpp:386 612 {*jcc_1}
     (nil)
 -> 1472)
;;  succ:       112 (FALLTHRU)
;;              113
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       110
;;              111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1467 1466 1468 112 61 "" [1 uses])
(note 1468 1467 1469 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1469 1468 1918 112 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -12 [0xfffffffffffffff4])) ge2fitman_com_line.cpp:388 90 {*movsi_internal}
     (nil))
(jump_insn 1918 1469 1919 112 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:388 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1919 1918 1472)
;; basic block 113, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       111
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 452 777
(code_label 1472 1919 1473 113 62 "" [1 uses])
(note 1473 1472 1474 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1474 1473 1475 113 (set (reg:QI 0 ax [777])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1475 1474 1476 113 (parallel [
            (set (reg:QI 0 ax [orig:452 D.25263 ] [452])
                (xor:QI (reg:QI 0 ax [777])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1476 1475 1477 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:452 D.25263 ] [452])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1477 1476 1478 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1653)
            (pc))) ge2fitman_com_line.cpp:389 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       114 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 453 778
(note 1478 1477 1479 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1479 1478 1480 114 (set (reg:QI 0 ax [778])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1480 1479 1481 114 (parallel [
            (set (reg:QI 0 ax [orig:453 D.25263 ] [453])
                (xor:QI (reg:QI 0 ax [778])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1481 1480 1482 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:453 D.25263 ] [453])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1482 1481 1483 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1653)
            (pc))) ge2fitman_com_line.cpp:389 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       115 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 454 455 779
(note 1483 1482 1484 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1484 1483 1485 115 (set (reg/f:DI 0 ax [779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:389 89 {*movdi_internal}
     (nil))
(insn 1485 1484 1486 115 (set (reg:QI 0 ax [orig:454 D.25263 ] [454])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [779])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:389 93 {*movqi_internal}
     (nil))
(insn 1486 1485 1487 115 (parallel [
            (set (reg:QI 0 ax [orig:455 D.25263 ] [455])
                (xor:QI (reg:QI 0 ax [orig:454 D.25263 ] [454])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:389 406 {*xorqi_1}
     (nil))
(insn 1487 1486 1488 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:455 D.25263 ] [455])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:389 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1488 1487 1489 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1653)
            (pc))) ge2fitman_com_line.cpp:389 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       116 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1489 1488 1490 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1490 1489 1920 116 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:391 90 {*movsi_internal}
     (nil))
(jump_insn 1920 1490 1921 116 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:391 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1921 1920 1493)
;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       109
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1493 1921 1494 117 60 "" [1 uses])
(note 1494 1493 1495 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1495 1494 1496 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:397 7 {*cmpsi_1}
     (nil))
(jump_insn 1496 1495 1497 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1607)
            (pc))) ge2fitman_com_line.cpp:397 612 {*jcc_1}
     (nil)
 -> 1607)
;;  succ:       118 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 456 780
(note 1497 1496 1498 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1498 1497 1499 118 (set (reg:QI 0 ax [780])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1499 1498 1500 118 (parallel [
            (set (reg:QI 0 ax [orig:456 D.25263 ] [456])
                (xor:QI (reg:QI 0 ax [780])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1500 1499 1501 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:456 D.25263 ] [456])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1501 1500 1502 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1565)
            (pc))) ge2fitman_com_line.cpp:399 612 {*jcc_1}
     (nil)
 -> 1565)
;;  succ:       119 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 457 781
(note 1502 1501 1503 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1502 1504 119 (set (reg:QI 0 ax [781])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1504 1503 1505 119 (parallel [
            (set (reg:QI 0 ax [orig:457 D.25263 ] [457])
                (xor:QI (reg:QI 0 ax [781])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1505 1504 1506 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:457 D.25263 ] [457])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1506 1505 1507 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1565)
            (pc))) ge2fitman_com_line.cpp:399 612 {*jcc_1}
     (nil)
 -> 1565)
;;  succ:       120 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 458 459 782
(note 1507 1506 1508 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1508 1507 1509 120 (set (reg/f:DI 0 ax [782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:399 89 {*movdi_internal}
     (nil))
(insn 1509 1508 1510 120 (set (reg:QI 0 ax [orig:458 D.25263 ] [458])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [782])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:399 93 {*movqi_internal}
     (nil))
(insn 1510 1509 1511 120 (parallel [
            (set (reg:QI 0 ax [orig:459 D.25263 ] [459])
                (xor:QI (reg:QI 0 ax [orig:458 D.25263 ] [458])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:399 406 {*xorqi_1}
     (nil))
(insn 1511 1510 1512 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:459 D.25263 ] [459])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:399 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1512 1511 1513 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1565)
            (pc))) ge2fitman_com_line.cpp:399 612 {*jcc_1}
     (nil)
 -> 1565)
;;  succ:       121 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 460 783 784
(note 1513 1512 1514 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1514 1513 1515 121 (set (reg/f:DI 0 ax [783])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -896 [0xfffffffffffffc80])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:401 89 {*movdi_internal}
     (nil))
(insn 1515 1514 1516 121 (set (mem:SI (reg/f:DI 0 ax [783]) [0 *fid_140(D)+0 S4 A32])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:401 90 {*movsi_internal}
     (nil))
(insn 1516 1515 1517 121 (set (reg:QI 0 ax [784])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])) ge2fitman_com_line.cpp:402 93 {*movqi_internal}
     (nil))
(insn 1517 1516 1518 121 (parallel [
            (set (reg:QI 0 ax [orig:460 D.25263 ] [460])
                (xor:QI (reg:QI 0 ax [784])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:402 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -815 [0xfffffffffffffcd1])) [0 ioption_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1518 1517 1519 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:460 D.25263 ] [460])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:402 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1519 1518 1520 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1529)
            (pc))) ge2fitman_com_line.cpp:402 612 {*jcc_1}
     (nil)
 -> 1529)
;;  succ:       122 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1520 1519 1521 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1521 1520 1522 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:402 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1522 1521 1523 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1529)
            (pc))) ge2fitman_com_line.cpp:402 612 {*jcc_1}
     (nil)
 -> 1529)
;;  succ:       123 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1523 1522 1524 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1524 1523 1525 123 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -825 [0xfffffffffffffcc7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:404 93 {*movqi_internal}
     (nil))
(insn 1525 1524 1526 123 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f6be982d360 *.LC28>)) ge2fitman_com_line.cpp:405 89 {*movdi_internal}
     (nil))
(call_insn 1526 1525 1922 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6beaf98000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:405 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1922 1526 1923 123 (set (pc)
        (label_ref 1561)) ge2fitman_com_line.cpp:405 654 {jump}
     (nil)
 -> 1561)
;;  succ:       131 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1923 1922 1529)
;; basic block 124, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121
;;              122
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1529 1923 1530 124 66 "" [2 uses])
(note 1530 1529 1531 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1531 1530 1532 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -831 [0xfffffffffffffcc1])) [0 ioption_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:406 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1532 1531 1533 124 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1544)
            (pc))) ge2fitman_com_line.cpp:406 612 {*jcc_1}
     (nil)
 -> 1544)
;;  succ:       125 (FALLTHRU)
;;              127
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 461 785
(note 1533 1532 1534 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1534 1533 1535 125 (set (reg:QI 0 ax [785])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -827 [0xfffffffffffffcc5])) [0 roption_set+0 S1 A8])) ge2fitman_com_line.cpp:406 93 {*movqi_internal}
     (nil))
(insn 1535 1534 1536 125 (parallel [
            (set (reg:QI 0 ax [orig:461 D.25263 ] [461])
                (xor:QI (reg:QI 0 ax [785])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:406 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -811 [0xfffffffffffffcd5])) [0 roption_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1536 1535 1537 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:461 D.25263 ] [461])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:406 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1537 1536 1538 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1544)
            (pc))) ge2fitman_com_line.cpp:406 612 {*jcc_1}
     (nil)
 -> 1544)
;;  succ:       126 (FALLTHRU)
;;              127
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1538 1537 1539 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1539 1538 1540 126 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -826 [0xfffffffffffffcc6])) [0 only_suppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:408 93 {*movqi_internal}
     (nil))
(insn 1540 1539 1541 126 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f6be982d3f0 *.LC29>)) ge2fitman_com_line.cpp:409 89 {*movdi_internal}
     (nil))
(call_insn 1541 1540 1924 126 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f6beaf98000 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:409 669 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1924 1541 1925 126 (set (pc)
        (label_ref 1561)) ge2fitman_com_line.cpp:409 654 {jump}
     (nil)
 -> 1561)
;;  succ:       131 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1925 1924 1544)
;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       124
;;              125
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 462
(code_label 1544 1925 1545 127 68 "" [2 uses])
(note 1545 1544 1546 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(call_insn 1546 1545 1547 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z12cond_exit_23v") [flags 0x41]  <function_decl 0x7f6be9b51360 cond_exit_23>) [0 cond_exit_23 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:412 669 {*call_value}
     (nil)
    (nil))
(insn 1547 1546 1548 127 (set (reg:SI 0 ax [orig:462 D.25257 ] [462])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:412 90 {*movsi_internal}
     (nil))
(insn 1548 1547 1549 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [0 s_u_out+0 S4 A32])
        (reg:SI 0 ax [orig:462 D.25257 ] [462])) ge2fitman_com_line.cpp:412 90 {*movsi_internal}
     (nil))
(insn 1549 1548 1550 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -812 [0xfffffffffffffcd4])) [0 s_u_out+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:413 7 {*cmpsi_1}
     (nil))
(jump_insn 1550 1549 1551 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1555)
            (pc))) ge2fitman_com_line.cpp:413 612 {*jcc_1}
     (nil)
 -> 1555)
;;  succ:       128 (FALLTHRU)
;;              129
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1551 1550 1552 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1552 1551 1926 128 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -826 [0xfffffffffffffcc6])) [0 only_suppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:414 93 {*movqi_internal}
     (nil))
(jump_insn 1926 1552 1927 128 (set (pc)
        (label_ref:DI 1953)) ge2fitman_com_line.cpp:402 654 {jump}
     (nil)
 -> 1953)
;;  succ:       168 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1927 1926 1555)
;; basic block 129, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       127
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1555 1927 1556 129 69 "" [1 uses])
(note 1556 1555 1557 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1557 1556 1558 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -812 [0xfffffffffffffcd4])) [0 s_u_out+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:415 7 {*cmpsi_1}
     (nil))
(jump_insn 1558 1557 1559 129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1953)
            (pc))) ge2fitman_com_line.cpp:415 612 {*jcc_1}
     (nil)
 -> 1953)
;;  succ:       130 (FALLTHRU)
;;              168
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1559 1558 1560 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1560 1559 1928 130 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -825 [0xfffffffffffffcc7])) [0 only_unsuppressed+0 S1 A8])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:416 93 {*movqi_internal}
     (nil))
(jump_insn 1928 1560 1929 130 (set (pc)
        (label_ref:DI 1953)) ge2fitman_com_line.cpp:402 654 {jump}
     (nil)
 -> 1953)
;;  succ:       168 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1929 1928 1561)
;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       123 [100.0%] 
;;              126 [100.0%] 
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1561 1929 1562 131 67 "" [2 uses])
(note 1562 1561 1930 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1930 1562 1931 131 (set (pc)
        (label_ref:DI 1953)) ge2fitman_com_line.cpp:402 654 {jump}
     (nil)
 -> 1953)
;;  succ:       168 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1931 1930 1565)
;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118
;;              119
;;              120
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 463 786
(code_label 1565 1931 1566 132 65 "" [3 uses])
(note 1566 1565 1567 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1567 1566 1568 132 (set (reg:QI 0 ax [786])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1568 1567 1569 132 (parallel [
            (set (reg:QI 0 ax [orig:463 D.25263 ] [463])
                (xor:QI (reg:QI 0 ax [786])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:422 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1569 1568 1570 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:463 D.25263 ] [463])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1570 1569 1571 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1585)
            (pc))) ge2fitman_com_line.cpp:422 612 {*jcc_1}
     (nil)
 -> 1585)
;;  succ:       133 (FALLTHRU)
;;              136
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 464 787
(note 1571 1570 1572 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1572 1571 1573 133 (set (reg:QI 0 ax [787])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1573 1572 1574 133 (parallel [
            (set (reg:QI 0 ax [orig:464 D.25263 ] [464])
                (xor:QI (reg:QI 0 ax [787])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:422 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1574 1573 1575 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:464 D.25263 ] [464])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1575 1574 1576 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1585)
            (pc))) ge2fitman_com_line.cpp:422 612 {*jcc_1}
     (nil)
 -> 1585)
;;  succ:       134 (FALLTHRU)
;;              136
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 465 788
(note 1576 1575 1577 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1577 1576 1578 134 (set (reg/f:DI 0 ax [788])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:422 89 {*movdi_internal}
     (nil))
(insn 1578 1577 1579 134 (set (reg:QI 0 ax [orig:465 D.25263 ] [465])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [788])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:422 93 {*movqi_internal}
     (nil))
(insn 1579 1578 1580 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:465 D.25263 ] [465])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:422 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1580 1579 1581 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1585)
            (pc))) ge2fitman_com_line.cpp:422 612 {*jcc_1}
     (nil)
 -> 1585)
;;  succ:       135 (FALLTHRU)
;;              136
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1581 1580 1582 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1582 1581 1932 135 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:424 90 {*movsi_internal}
     (nil))
(jump_insn 1932 1582 1933 135 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:424 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1933 1932 1585)
;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       132
;;              133
;;              134
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1585 1933 1586 136 71 "" [3 uses])
(note 1586 1585 1587 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1587 1586 1588 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1588 1587 1589 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1592)
            (pc))) ge2fitman_com_line.cpp:425 612 {*jcc_1}
     (nil)
 -> 1592)
;;  succ:       138
;;              137 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 137, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1589 1588 1590 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1590 1589 1591 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1591 1590 1592 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1653)
            (pc))) ge2fitman_com_line.cpp:425 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       138 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       136
;;              137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 466 467 789
(code_label 1592 1591 1593 138 72 "" [1 uses])
(note 1593 1592 1594 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1594 1593 1595 138 (set (reg/f:DI 0 ax [789])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:425 89 {*movdi_internal}
     (nil))
(insn 1595 1594 1596 138 (set (reg:QI 0 ax [orig:466 D.25263 ] [466])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [789])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:425 93 {*movqi_internal}
     (nil))
(insn 1596 1595 1597 138 (parallel [
            (set (reg:QI 0 ax [orig:467 D.25263 ] [467])
                (xor:QI (reg:QI 0 ax [orig:466 D.25263 ] [466])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:425 406 {*xorqi_1}
     (nil))
(insn 1597 1596 1598 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:467 D.25263 ] [467])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:425 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1598 1597 1599 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1653)
            (pc))) ge2fitman_com_line.cpp:425 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       139 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1599 1598 1600 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1600 1599 1934 139 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:427 90 {*movsi_internal}
     (nil))
(jump_insn 1934 1600 1935 139 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:427 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1935 1934 1607)
;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       117
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1607 1935 1608 140 64 "" [1 uses])
(note 1608 1607 1609 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1609 1608 1610 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:432 7 {*cmpsi_1}
     (nil))
(jump_insn 1610 1609 1611 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1653)
            (pc))) ge2fitman_com_line.cpp:432 612 {*jcc_1}
     (nil)
 -> 1653)
;;  succ:       141 (FALLTHRU)
;;              150
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 468 790
(note 1611 1610 1612 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1612 1611 1613 141 (set (reg:QI 0 ax [790])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1613 1612 1614 141 (parallel [
            (set (reg:QI 0 ax [orig:468 D.25263 ] [468])
                (xor:QI (reg:QI 0 ax [790])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:434 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -817 [0xfffffffffffffccf])) [0 ir_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1614 1613 1615 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:468 D.25263 ] [468])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1615 1614 1616 141 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1630)
            (pc))) ge2fitman_com_line.cpp:434 612 {*jcc_1}
     (nil)
 -> 1630)
;;  succ:       142 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 469 791
(note 1616 1615 1617 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1617 1616 1618 142 (set (reg:QI 0 ax [791])
        (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1618 1617 1619 142 (parallel [
            (set (reg:QI 0 ax [orig:469 D.25263 ] [469])
                (xor:QI (reg:QI 0 ax [791])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:434 406 {*xorqi_1}
     (expr_list:REG_EQUAL (xor:QI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -816 [0xfffffffffffffcd0])) [0 irn_set+0 S1 A8])
            (const_int 1 [0x1]))
        (nil)))
(insn 1619 1618 1620 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:469 D.25263 ] [469])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1620 1619 1621 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1630)
            (pc))) ge2fitman_com_line.cpp:434 612 {*jcc_1}
     (nil)
 -> 1630)
;;  succ:       143 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 470 792
(note 1621 1620 1622 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1622 1621 1623 143 (set (reg/f:DI 0 ax [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:434 89 {*movdi_internal}
     (nil))
(insn 1623 1622 1624 143 (set (reg:QI 0 ax [orig:470 D.25263 ] [470])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [792])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:434 93 {*movqi_internal}
     (nil))
(insn 1624 1623 1625 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:470 D.25263 ] [470])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:434 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1625 1624 1626 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1630)
            (pc))) ge2fitman_com_line.cpp:434 612 {*jcc_1}
     (nil)
 -> 1630)
;;  succ:       144 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1626 1625 1627 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1627 1626 1936 144 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -13 [0xfffffffffffffff3])) ge2fitman_com_line.cpp:436 90 {*movsi_internal}
     (nil))
(jump_insn 1936 1627 1937 144 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:436 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1937 1936 1630)
;; basic block 145, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       141
;;              142
;;              143
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1630 1937 1631 145 73 "" [3 uses])
(note 1631 1630 1632 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1631 1633 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -833 [0xfffffffffffffcbf])) [0 ir_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1633 1632 1634 145 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1637)
            (pc))) ge2fitman_com_line.cpp:437 612 {*jcc_1}
     (nil)
 -> 1637)
;;  succ:       147
;;              146 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 146, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1634 1633 1635 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1635 1634 1636 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -832 [0xfffffffffffffcc0])) [0 irn_set+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1636 1635 1637 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1648)
            (pc))) ge2fitman_com_line.cpp:437 612 {*jcc_1}
     (nil)
 -> 1648)
;;  succ:       147 (FALLTHRU)
;;              149
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       145
;;              146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 471 472 793
(code_label 1637 1636 1638 147 74 "" [1 uses])
(note 1638 1637 1639 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1639 1638 1640 147 (set (reg/f:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:437 89 {*movdi_internal}
     (nil))
(insn 1640 1639 1641 147 (set (reg:QI 0 ax [orig:471 D.25263 ] [471])
        (mem/j:QI (plus:DI (reg/f:DI 0 ax [793])
                (const_int 72 [0x48])) [0 preprocess_63(D)->ecc_present+0 S1 A32])) ge2fitman_com_line.cpp:437 93 {*movqi_internal}
     (nil))
(insn 1641 1640 1642 147 (parallel [
            (set (reg:QI 0 ax [orig:472 D.25263 ] [472])
                (xor:QI (reg:QI 0 ax [orig:471 D.25263 ] [471])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:437 406 {*xorqi_1}
     (nil))
(insn 1642 1641 1643 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:472 D.25263 ] [472])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:437 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1643 1642 1644 147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1648)
            (pc))) ge2fitman_com_line.cpp:437 612 {*jcc_1}
     (nil)
 -> 1648)
;;  succ:       148 (FALLTHRU)
;;              149
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       147 (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1644 1643 1645 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1645 1644 1938 148 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -6 [0xfffffffffffffffa])) ge2fitman_com_line.cpp:439 90 {*movsi_internal}
     (nil))
(jump_insn 1938 1645 1939 148 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:439 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1939 1938 1648)
;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 168, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       146
;;              147
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1648 1939 1649 149 75 "" [2 uses])
(note 1649 1648 1650 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1650 1649 1940 149 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:442 90 {*movsi_internal}
     (nil))
(jump_insn 1940 1650 1941 149 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:442 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1941 1940 1953)
;; basic block 168, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 150, flags: (NEW, RTL, MODIFIED)
;;  pred:       129
;;              128 [100.0%] 
;;              131 [100.0%] 
;;              130 [100.0%] 
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1953 1941 1952 168 87 "" [4 uses])
(note 1952 1953 1954 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1954 1952 1653 168 (const_int 0 [0]) ge2fitman_com_line.cpp:402 684 {nop}
     (nil))
;;  succ:       150 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 168, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       114
;;              138
;;              140
;;              113
;;              115
;;              137
;;              168 [100.0%]  (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1653 1954 1654 150 63 "" [6 uses])
(note 1654 1653 1655 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1655 1654 1656 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:446 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1656 1655 1657 150 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1762)
            (pc))) ge2fitman_com_line.cpp:446 612 {*jcc_1}
     (nil)
 -> 1762)
;;  succ:       151 (FALLTHRU)
;;              156
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 473 474 475 794 795 796 797
(note 1657 1656 1658 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1658 1657 1659 151 (set (reg/f:DI 0 ax [orig:473 D.25265 ] [473])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1659 1658 1660 151 (parallel [
            (set (reg:DI 1 dx [794])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:449 218 {*adddi_1}
     (nil))
(insn 1660 1659 1661 151 (set (reg:DI 4 si)
        (reg:DI 1 dx [794])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(insn 1661 1660 1662 151 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:473 D.25265 ] [473])) ge2fitman_com_line.cpp:449 89 {*movdi_internal}
     (nil))
(call_insn 1662 1661 1663 151 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:449 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1663 1662 1664 151 (set (reg/f:DI 0 ax [795])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(insn 1664 1663 1665 151 (parallel [
            (set (reg/f:DI 1 dx [orig:474 D.25269 ] [474])
                (plus:DI (reg/f:DI 0 ax [795])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:451 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 1665 1664 1666 151 (parallel [
            (set (reg:DI 0 ax [796])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:451 218 {*adddi_1}
     (nil))
(insn 1666 1665 1667 151 (set (reg:DI 4 si)
        (reg:DI 0 ax [796])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(insn 1667 1666 1668 151 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:474 D.25269 ] [474])) ge2fitman_com_line.cpp:451 89 {*movdi_internal}
     (nil))
(call_insn 1668 1667 1669 151 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:451 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1669 1668 1670 151 (set (reg/f:DI 0 ax [797])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -856 [0xfffffffffffffca8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:453 89 {*movdi_internal}
     (nil))
(insn 1670 1669 1671 151 (set (reg:SI 0 ax [orig:475 D.25257 ] [475])
        (mem/j:SI (plus:DI (reg/f:DI 0 ax [797])
                (const_int 56 [0x38])) [0 preprocess_63(D)->input_file_type+0 S4 A32])) ge2fitman_com_line.cpp:453 90 {*movsi_internal}
     (nil))
(insn 1671 1670 1672 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:475 D.25257 ] [475])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:453 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1672 1671 1673 151 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1680)
            (pc))) ge2fitman_com_line.cpp:453 612 {*jcc_1}
     (nil)
 -> 1680)
;;  succ:       152 (FALLTHRU)
;;              153
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 476 798 799
(note 1673 1672 1674 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1674 1673 1675 152 (set (reg/f:DI 0 ax [798])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(insn 1675 1674 1676 152 (parallel [
            (set (reg/f:DI 1 dx [orig:476 D.25265 ] [476])
                (plus:DI (reg/f:DI 0 ax [798])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:454 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 1024 [0x400]))
        (nil)))
(insn 1676 1675 1677 152 (parallel [
            (set (reg:DI 0 ax [799])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:454 218 {*adddi_1}
     (nil))
(insn 1677 1676 1678 152 (set (reg:DI 4 si)
        (reg:DI 0 ax [799])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(insn 1678 1677 1679 152 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:476 D.25265 ] [476])) ge2fitman_com_line.cpp:454 89 {*movdi_internal}
     (nil))
(call_insn 1679 1678 1680 152 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:454 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       153 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 153, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       151
;;              152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1680 1679 1681 153 77 "" [1 uses])
(note 1681 1680 1682 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1682 1681 1683 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])) [0 num_filenames+0 S4 A32])
            (const_int 2 [0x2]))) ge2fitman_com_line.cpp:457 7 {*cmpsi_1}
     (nil))
(jump_insn 1683 1682 1684 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1722)
            (pc))) ge2fitman_com_line.cpp:457 612 {*jcc_1}
     (nil)
 -> 1722)
;;  succ:       154 (FALLTHRU)
;;              155
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 154, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 477 478 479 480 481 482 483 484 485 800 801 802 803 804 805 806 807 808 809 810
(note 1684 1683 1685 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1685 1684 1686 154 (set (reg/f:DI 0 ax [orig:477 D.25265 ] [477])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1686 1685 1687 154 (set (reg/f:DI 1 dx [800])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1687 1686 1688 154 (parallel [
            (set (reg/f:DI 1 dx [orig:478 D.25265 ] [478])
                (plus:DI (reg/f:DI 1 dx [800])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:461 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1688 1687 1689 154 (set (reg:DI 4 si)
        (reg/f:DI 0 ax [orig:477 D.25265 ] [477])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(insn 1689 1688 1690 154 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [orig:478 D.25265 ] [478])) ge2fitman_com_line.cpp:461 89 {*movdi_internal}
     (nil))
(call_insn 1690 1689 1691 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:461 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1691 1690 1692 154 (set (reg/f:DI 0 ax [801])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1692 1691 1693 154 (parallel [
            (set (reg/f:DI 1 dx [orig:479 D.25265 ] [479])
                (plus:DI (reg/f:DI 0 ax [801])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:463 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 1024 [0x400]))
        (nil)))
(insn 1693 1692 1694 154 (set (reg/f:DI 0 ax [802])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1694 1693 1695 154 (parallel [
            (set (reg/f:DI 0 ax [orig:480 D.25265 ] [480])
                (plus:DI (reg/f:DI 0 ax [802])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:463 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 1280 [0x500]))
        (nil)))
(insn 1695 1694 1696 154 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:479 D.25265 ] [479])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(insn 1696 1695 1697 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:480 D.25265 ] [480])) ge2fitman_com_line.cpp:463 89 {*movdi_internal}
     (nil))
(call_insn 1697 1696 1698 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:463 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1698 1697 1699 154 (set (reg/f:DI 0 ax [803])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1699 1698 1700 154 (parallel [
            (set (reg/f:DI 1 dx [orig:481 D.25269 ] [481])
                (plus:DI (reg/f:DI 0 ax [803])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])
            (const_int 56 [0x38]))
        (nil)))
(insn 1700 1699 1701 154 (set (reg/f:DI 0 ax [804])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1701 1700 1702 154 (parallel [
            (set (reg/f:DI 0 ax [orig:482 D.25270 ] [482])
                (plus:DI (reg/f:DI 0 ax [804])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1702 1701 1703 154 (parallel [
            (set (reg/f:DI 0 ax [orig:483 D.25269 ] [483])
                (plus:DI (reg/f:DI 0 ax [orig:482 D.25270 ] [482])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:465 218 {*adddi_1}
     (nil))
(insn 1703 1702 1704 154 (set (reg:DI 4 si)
        (reg/f:DI 1 dx [orig:481 D.25269 ] [481])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(insn 1704 1703 1705 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:483 D.25269 ] [483])) ge2fitman_com_line.cpp:465 89 {*movdi_internal}
     (nil))
(call_insn 1705 1704 1706 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:465 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1706 1705 1707 154 (set (reg/f:DI 0 ax [805])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(insn 1707 1706 1708 154 (parallel [
            (set (reg/f:DI 0 ax [orig:484 D.25265 ] [484])
                (plus:DI (reg/f:DI 0 ax [805])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1708 1707 1709 154 (parallel [
            (set (reg:DI 1 dx [806])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 218 {*adddi_1}
     (nil))
(insn 1709 1708 1710 154 (parallel [
            (set (reg:DI 1 dx [807])
                (plus:DI (reg:DI 1 dx [806])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:467 218 {*adddi_1}
     (nil))
(insn 1710 1709 1711 154 (set (reg:DI 4 si)
        (reg:DI 1 dx [807])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(insn 1711 1710 1712 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:484 D.25265 ] [484])) ge2fitman_com_line.cpp:467 89 {*movdi_internal}
     (nil))
(call_insn 1712 1711 1713 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:467 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1713 1712 1714 154 (set (reg/f:DI 0 ax [808])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(insn 1714 1713 1715 154 (parallel [
            (set (reg/f:DI 0 ax [orig:485 D.25265 ] [485])
                (plus:DI (reg/f:DI 0 ax [808])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 768 [0x300]))
        (nil)))
(insn 1715 1714 1716 154 (parallel [
            (set (reg:DI 1 dx [809])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 218 {*adddi_1}
     (nil))
(insn 1716 1715 1717 154 (parallel [
            (set (reg:DI 1 dx [810])
                (plus:DI (reg:DI 1 dx [809])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:468 218 {*adddi_1}
     (nil))
(insn 1717 1716 1718 154 (set (reg:DI 4 si)
        (reg:DI 1 dx [810])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(insn 1718 1717 1719 154 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:485 D.25265 ] [485])) ge2fitman_com_line.cpp:468 89 {*movdi_internal}
     (nil))
(call_insn 1719 1718 1942 154 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:468 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 1942 1719 1943 154 (set (pc)
        (label_ref 1762)) 654 {jump}
     (nil)
 -> 1762)
;;  succ:       156 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1943 1942 1722)
;; basic block 155, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       153
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 486 487 488 489 490 491 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825
(code_label 1722 1943 1723 155 78 "" [1 uses])
(note 1723 1722 1724 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1724 1723 1725 155 (set (reg/f:DI 0 ax [811])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(insn 1725 1724 1726 155 (parallel [
            (set (reg/f:DI 0 ax [orig:486 D.25265 ] [486])
                (plus:DI (reg/f:DI 0 ax [811])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 256 [0x100]))
        (nil)))
(insn 1726 1725 1727 155 (parallel [
            (set (reg:DI 1 dx [812])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 218 {*adddi_1}
     (nil))
(insn 1727 1726 1728 155 (parallel [
            (set (reg:DI 1 dx [813])
                (plus:DI (reg:DI 1 dx [812])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:472 218 {*adddi_1}
     (nil))
(insn 1728 1727 1729 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [813])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(insn 1729 1728 1730 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:486 D.25265 ] [486])) ge2fitman_com_line.cpp:472 89 {*movdi_internal}
     (nil))
(call_insn 1730 1729 1731 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:472 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1731 1730 1732 155 (set (reg/f:DI 0 ax [814])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(insn 1732 1731 1733 155 (parallel [
            (set (reg/f:DI 0 ax [orig:487 D.25265 ] [487])
                (plus:DI (reg/f:DI 0 ax [814])
                    (const_int 1280 [0x500])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 1280 [0x500]))
        (nil)))
(insn 1733 1732 1734 155 (parallel [
            (set (reg:DI 1 dx [815])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 218 {*adddi_1}
     (nil))
(insn 1734 1733 1735 155 (parallel [
            (set (reg:DI 1 dx [816])
                (plus:DI (reg:DI 1 dx [815])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:474 218 {*adddi_1}
     (nil))
(insn 1735 1734 1736 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [816])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(insn 1736 1735 1737 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:487 D.25265 ] [487])) ge2fitman_com_line.cpp:474 89 {*movdi_internal}
     (nil))
(call_insn 1737 1736 1738 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:474 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1738 1737 1739 155 (set (reg/f:DI 0 ax [817])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -872 [0xfffffffffffffc98])) [0 procpar_info+0 S8 A64])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(insn 1739 1738 1740 155 (parallel [
            (set (reg/f:DI 0 ax [orig:488 D.25270 ] [488])
                (plus:DI (reg/f:DI 0 ax [817])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -856 [0xfffffffffffffca8])) [0 procpar_info+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1740 1739 1741 155 (parallel [
            (set (reg/f:DI 0 ax [orig:489 D.25269 ] [489])
                (plus:DI (reg/f:DI 0 ax [orig:488 D.25270 ] [488])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 218 {*adddi_1}
     (nil))
(insn 1741 1740 1742 155 (parallel [
            (set (reg:DI 1 dx [818])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 218 {*adddi_1}
     (nil))
(insn 1742 1741 1743 155 (parallel [
            (set (reg:DI 1 dx [819])
                (plus:DI (reg:DI 1 dx [818])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:476 218 {*adddi_1}
     (nil))
(insn 1743 1742 1744 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [819])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(insn 1744 1743 1745 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:489 D.25269 ] [489])) ge2fitman_com_line.cpp:476 89 {*movdi_internal}
     (nil))
(call_insn 1745 1744 1746 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:476 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1746 1745 1747 155 (set (reg/f:DI 0 ax [820])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(insn 1747 1746 1748 155 (parallel [
            (set (reg/f:DI 0 ax [orig:490 D.25265 ] [490])
                (plus:DI (reg/f:DI 0 ax [820])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1748 1747 1749 155 (parallel [
            (set (reg:DI 1 dx [821])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 218 {*adddi_1}
     (nil))
(insn 1749 1748 1750 155 (parallel [
            (set (reg:DI 1 dx [822])
                (plus:DI (reg:DI 1 dx [821])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:478 218 {*adddi_1}
     (nil))
(insn 1750 1749 1751 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [822])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(insn 1751 1750 1752 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:490 D.25265 ] [490])) ge2fitman_com_line.cpp:478 89 {*movdi_internal}
     (nil))
(call_insn 1752 1751 1753 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:478 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1753 1752 1754 155 (set (reg/f:DI 0 ax [823])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(insn 1754 1753 1755 155 (parallel [
            (set (reg/f:DI 0 ax [orig:491 D.25265 ] [491])
                (plus:DI (reg/f:DI 0 ax [823])
                    (const_int 768 [0x300])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 768 [0x300]))
        (nil)))
(insn 1755 1754 1756 155 (parallel [
            (set (reg:DI 1 dx [824])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -800 [0xfffffffffffffce0])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 218 {*adddi_1}
     (nil))
(insn 1756 1755 1757 155 (parallel [
            (set (reg:DI 1 dx [825])
                (plus:DI (reg:DI 1 dx [824])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:479 218 {*adddi_1}
     (nil))
(insn 1757 1756 1758 155 (set (reg:DI 4 si)
        (reg:DI 1 dx [825])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(insn 1758 1757 1759 155 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:491 D.25265 ] [491])) ge2fitman_com_line.cpp:479 89 {*movdi_internal}
     (nil))
(call_insn 1759 1758 1762 155 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f6beaf8c5e8 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:479 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       156 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       150
;;              155 (FALLTHRU)
;;              154 [100.0%] 
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 492 493
(code_label 1762 1759 1763 156 76 "" [2 uses])
(note 1763 1762 1764 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1764 1763 1765 156 (set (reg/f:DI 0 ax [orig:492 D.25265 ] [492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(insn 1765 1764 1766 156 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6be97f0e10 *.LC19>)) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(insn 1766 1765 1767 156 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:492 D.25265 ] [492])) ge2fitman_com_line.cpp:484 89 {*movdi_internal}
     (nil))
(call_insn/i 1767 1766 1768 156 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:484 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1768 1767 1769 156 (set (reg:SI 0 ax [orig:493 D.25257 ] [493])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:484 90 {*movsi_internal}
     (nil))
(insn 1769 1768 1770 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:493 D.25257 ] [493])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:484 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1770 1769 1771 156 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1775)
            (pc))) ge2fitman_com_line.cpp:484 612 {*jcc_1}
     (nil)
 -> 1775)
;;  succ:       157 (FALLTHRU)
;;              158
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       156 (FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1771 1770 1772 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1772 1771 1944 157 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -3 [0xfffffffffffffffd])) ge2fitman_com_line.cpp:485 90 {*movsi_internal}
     (nil))
(jump_insn 1944 1772 1945 157 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:485 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1945 1944 1775)
;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       156
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 494 495 826
(code_label 1775 1945 1776 158 80 "" [1 uses])
(note 1776 1775 1777 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1777 1776 1778 158 (set (reg/f:DI 0 ax [826])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -864 [0xfffffffffffffca0])) [0 io_filenames+0 S8 A64])) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(insn 1778 1777 1779 158 (parallel [
            (set (reg/f:DI 0 ax [orig:494 D.25265 ] [494])
                (plus:DI (reg/f:DI 0 ax [826])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:489 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -848 [0xfffffffffffffcb0])) [0 io_filenames+0 S8 A64])
            (const_int 512 [0x200]))
        (nil)))
(insn 1779 1778 1780 158 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f6be97f0e10 *.LC19>)) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(insn 1780 1779 1781 158 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:494 D.25265 ] [494])) ge2fitman_com_line.cpp:489 89 {*movdi_internal}
     (nil))
(call_insn/i 1781 1780 1782 158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x7f6beaf8c360 strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:489 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1782 1781 1783 158 (set (reg:SI 0 ax [orig:495 D.25257 ] [495])
        (reg:SI 0 ax)) ge2fitman_com_line.cpp:489 90 {*movsi_internal}
     (nil))
(insn 1783 1782 1784 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:495 D.25257 ] [495])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:489 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1784 1783 1785 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1789)
            (pc))) ge2fitman_com_line.cpp:489 612 {*jcc_1}
     (nil)
 -> 1789)
;;  succ:       159 (FALLTHRU)
;;              160
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1785 1784 1786 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1786 1785 1946 159 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int -4 [0xfffffffffffffffc])) ge2fitman_com_line.cpp:490 90 {*movsi_internal}
     (nil))
(jump_insn 1946 1786 1947 159 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:490 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1947 1946 1789)
;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1789 1947 1790 160 81 "" [1 uses])
(note 1790 1789 1791 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1791 1790 1792 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -826 [0xfffffffffffffcc6])) [0 only_suppressed+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:493 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1792 1791 1793 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1797)
            (pc))) ge2fitman_com_line.cpp:493 612 {*jcc_1}
     (nil)
 -> 1797)
;;  succ:       161 (FALLTHRU)
;;              162
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 161, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1793 1792 1794 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1794 1793 1948 161 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:495 90 {*movsi_internal}
     (nil))
(jump_insn 1948 1794 1949 161 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:495 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1949 1948 1797)
;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1797 1949 1798 162 82 "" [1 uses])
(note 1798 1797 1799 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1799 1798 1800 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                    (const_int -825 [0xfffffffffffffcc7])) [0 only_unsuppressed+0 S1 A8])
            (const_int 0 [0]))) ge2fitman_com_line.cpp:496 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 1800 1799 1801 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1805)
            (pc))) ge2fitman_com_line.cpp:496 612 {*jcc_1}
     (nil)
 -> 1805)
;;  succ:       163 (FALLTHRU)
;;              164
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 1801 1800 1802 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1802 1801 1950 163 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int 2 [0x2])) ge2fitman_com_line.cpp:498 90 {*movsi_internal}
     (nil))
(jump_insn 1950 1802 1951 163 (set (pc)
        (label_ref 1810)) ge2fitman_com_line.cpp:498 654 {jump}
     (nil)
 -> 1810)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 1951 1950 1805)
;; basic block 164, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       162
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 1805 1951 1806 164 83 "" [1 uses])
(note 1806 1805 1807 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1807 1806 1810 164 (set (reg:SI 0 ax [orig:87 D.25257 ] [87])
        (const_int 0 [0])) ge2fitman_com_line.cpp:501 90 {*movsi_internal}
     (nil))
;;  succ:       165 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 165, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;;              161 [100.0%] 
;;              9 [100.0%] 
;;              15 [100.0%] 
;;              21 [100.0%] 
;;              26 [100.0%] 
;;              28 [100.0%] 
;;              36 [100.0%] 
;;              40 [100.0%] 
;;              45 [100.0%] 
;;              46 [100.0%] 
;;              51 [100.0%] 
;;              52 [100.0%] 
;;              56 [100.0%] 
;;              70 [100.0%] 
;;              72 [100.0%] 
;;              81 [100.0%] 
;;              83 [100.0%] 
;;              87 [100.0%] 
;;              91 [100.0%] 
;;              95 [100.0%] 
;;              99 [100.0%] 
;;              107 [100.0%] 
;;              112 [100.0%] 
;;              116 [100.0%] 
;;              135 [100.0%] 
;;              139 [100.0%] 
;;              144 [100.0%] 
;;              148 [100.0%] 
;;              149 [100.0%] 
;;              157 [100.0%] 
;;              159 [100.0%] 
;;              163 [100.0%] 
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags] 496
(code_label 1810 1807 1811 165 84 "" [32 uses])
(note 1811 1810 1812 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1812 1811 1816 165 (set (reg:SI 0 ax [orig:496 <retval> ] [496])
        (reg:SI 0 ax [orig:87 D.25257 ] [87])) 90 {*movsi_internal}
     (nil))
(insn 1816 1812 1817 165 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:496 <retval> ] [496])) ge2fitman_com_line.cpp:503 90 {*movsi_internal}
     (nil))
(insn 1817 1816 1818 165 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -24 [0xffffffffffffffe8])) [0 D.25271+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [829]))
        ]) ge2fitman_com_line.cpp:503 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1818 1817 1824 165 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1821)
            (pc))) ge2fitman_com_line.cpp:503 612 {*jcc_1}
     (nil)
 -> 1821)
;;  succ:       167
;;              166 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 166, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1824 1818 1819 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(call_insn 1819 1824 1820 166 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f6be9b7b1b0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:503 660 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1820 1819 1821)
;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       165
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1821 1820 1825 167 85 "" [1 uses])
(note 1825 1821 1822 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1822 1825 1955 167 (use (reg/i:SI 0 ax)) ge2fitman_com_line.cpp:503 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1955 1822 0 NOTE_INSN_DELETED)

;; Function void undo_ecc(Preprocess*, int*) (_Z8undo_eccP10PreprocessPi, funcdef_no=1022, decl_uid=24352, cgraph_uid=227, symbol_order=228)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 12:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 13:  (0) m  (1) qn {*movqi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 16:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 17:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 22:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 24:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 31:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=620,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=625,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
          alt=7,overall=18,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 35:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 39:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) m  (1) re {*movsi_internal}

********** Pseudo live ranges #1: **********

  BB 2
   Insn 43: point = 0
   Insn 40: point = 0
   Insn 39: point = 1
   Insn 38: point = 3
   Insn 37: point = 4
   Insn 36: point = 5
   Insn 35: point = 6
   Insn 34: point = 7
   Insn 33: point = 8
   Insn 32: point = 10
   Insn 31: point = 11
   Insn 30: point = 12
   Insn 29: point = 13
   Insn 28: point = 14
   Insn 27: point = 15
   Insn 26: point = 17
   Insn 25: point = 18
   Insn 24: point = 19
   Insn 23: point = 20
   Insn 22: point = 21
   Insn 21: point = 23
   Insn 20: point = 24
   Insn 19: point = 25
   Insn 18: point = 26
   Insn 17: point = 27
   Insn 16: point = 29
   Insn 15: point = 30
   Insn 14: point = 31
   Insn 13: point = 32
   Insn 12: point = 33
   Insn 11: point = 35
   Insn 10: point = 36
   Insn 9: point = 37
   Insn 8: point = 38
   Insn 7: point = 39
   Insn 3: point = 40
   Insn 2: point = 40
Compressing live ranges: from 40 to 0 - 0%
Ranges after the compression:
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 33
changing reg in insn 35
changing reg in insn 39
changing reg in insn 40
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
starting the processing of deferred insns
ending the processing of deferred insns


void undo_ecc(Preprocess*, int*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 17[flags] 21[xmm0]
;;  ref usage 	r0={20d,19u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,17u} r7={1d,2u} r17={6d} r20={1d,1u,6e} r21={3d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 94{45d,43u,6e} in 37{37 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
        (reg:DI 5 di [ preprocess ])) ge2fitman_com_line.cpp:507 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 fid+0 S8 A64])
        (reg:DI 4 si [ fid ])) ge2fitman_com_line.cpp:507 89 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [93])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [0 fid+0 S8 A64])) ge2fitman_com_line.cpp:509 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem:SI (reg/f:DI 0 ax [93]) [0 *fid_2(D)+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:509 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [94])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:510 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [94])
                (const_int 72 [0x48])) [0 preprocess_4(D)->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:510 93 {*movqi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [95])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:511 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 0 ax [orig:87 D.25302 ] [87])
                (plus:DI (reg/f:DI 0 ax [95])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:511 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 13 12 14 2 (set (mem/j:QI (plus:DI (reg/f:DI 0 ax [orig:87 D.25302 ] [87])
                (const_int 72 [0x48])) [0 _6->ecc_present+0 S1 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:511 93 {*movqi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 0 ax [96])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:512 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [96])
                (const_int 12 [0xc])) [0 preprocess_4(D)->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:512 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [97])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:513 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 0 ax [orig:88 D.25302 ] [88])
                (plus:DI (reg/f:DI 0 ax [97])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:513 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 18 17 19 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:88 D.25302 ] [88])
                (const_int 12 [0xc])) [0 _9->pre_ecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:513 90 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [98])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:514 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [98])
                (const_int 36 [0x24])) [0 preprocess_4(D)->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:514 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 0 ax [99])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:515 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 0 ax [orig:89 D.25302 ] [89])
                (plus:DI (reg/f:DI 0 ax [99])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:515 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 23 22 24 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:89 D.25302 ] [89])
                (const_int 36 [0x24])) [0 _12->pre_quality+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:515 90 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 0 ax [100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:516 89 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [100])
                (const_int 40 [0x28])) [0 preprocess_4(D)->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:516 90 {*movsi_internal}
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 0 ax [101])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:517 89 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 0 ax [orig:90 D.25302 ] [90])
                (plus:DI (reg/f:DI 0 ax [101])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:517 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 28 27 29 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:90 D.25302 ] [90])
                (const_int 40 [0x28])) [0 _15->pre_quecc+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:517 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 0 ax [102])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:518 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SF 21 xmm0 [103])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:518 129 {*movsf_internal}
     (nil))
(insn 31 30 32 2 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [102])
                (const_int 48 [0x30])) [0 preprocess_4(D)->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [103])) ge2fitman_com_line.cpp:518 129 {*movsf_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:DI 0 ax [104])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:519 89 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.25302 ] [91])
                (plus:DI (reg/f:DI 0 ax [104])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:519 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 34 33 35 2 (set (reg:SF 21 xmm0 [105])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) ge2fitman_com_line.cpp:519 129 {*movsf_internal}
     (nil))
(insn 35 34 36 2 (set (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:91 D.25302 ] [91])
                (const_int 48 [0x30])) [0 _18->pre_delay_time+0 S4 A32])
        (reg:SF 21 xmm0 [105])) ge2fitman_com_line.cpp:519 129 {*movsf_internal}
     (nil))
(insn 36 35 37 2 (set (reg/f:DI 0 ax [106])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:520 89 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [106])
                (const_int 44 [0x2c])) [0 preprocess_4(D)->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:520 90 {*movsi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:DI 0 ax [107])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])) ge2fitman_com_line.cpp:521 89 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg/f:DI 0 ax [orig:92 D.25302 ] [92])
                (plus:DI (reg/f:DI 0 ax [107])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) ge2fitman_com_line.cpp:521 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 preprocess+0 S8 A64])
            (const_int 76 [0x4c]))
        (nil)))
(insn 40 39 43 2 (set (mem/j:SI (plus:DI (reg/f:DI 0 ax [orig:92 D.25302 ] [92])
                (const_int 44 [0x2c])) [0 _21->pre_quecc_points+0 S4 A32])
        (const_int 0 [0])) ge2fitman_com_line.cpp:521 90 {*movsi_internal}
     (nil))
(insn 43 40 44 2 (const_int 0 [0]) ge2fitman_com_line.cpp:523 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 44 43 0 NOTE_INSN_DELETED)

;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1023, decl_uid=24607, cgraph_uid=228, symbol_order=255)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,10u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d,2u} r18={2d} r19={2d} r20={1d,1u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 195{168d,27u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) ge2fitman_com_line.cpp:523 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_com_line.cpp:523 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) ge2fitman_com_line.cpp:523 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) ge2fitman_com_line.cpp:523 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f6be9b20000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f6be9e91870 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/iostream:74 660 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f6be9b20360 __dso_handle>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f6be9b20000 __ioinit>)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f6be9e91a20 __comp_dtor >)) /usr/include/c++/5/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f6be9b51d80 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/iostream:74 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 5, flags: (NEW, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 18 23 6 91 "" [2 uses])
(note 23 25 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 21 6 (const_int 0 [0]) ge2fitman_com_line.cpp:523 684 {nop}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 24 22 5 89 "" [0 uses])
(note 22 21 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 26 22 0 NOTE_INSN_DELETED)

;; Function (static initializers for ge2fitman_com_line.cpp) (_GLOBAL__sub_I__Z12command_lineP10PreprocessP7IOFilesP12Procpar_infoiPPcPiS7_S7_PbS8_, funcdef_no=1024, decl_uid=24613, cgraph_uid=229, symbol_order=359)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) rBwBz {*call}

********** Pseudo live ranges #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
starting the processing of deferred insns
ending the processing of deferred insns


(static initializers for ge2fitman_com_line.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 100{92d,8u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ge2fitman_com_line.cpp:523 90 {*movsi_internal}
     (nil))
(call_insn 7 6 10 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f6be9b51ca8 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) ge2fitman_com_line.cpp:523 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 10 7 0 NOTE_INSN_DELETED)
